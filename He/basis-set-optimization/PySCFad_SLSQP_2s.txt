#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.432879285          1
                                0.4330512863         1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.432879285, 1.0], [0.4330512863, 1.0]]]}
ecp = {}
CPU time:         1.08
WARNING:absl:No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
Set gradient conv threshold to 3.16228e-05
/Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscfad/gto/moleintor.py:74: UserWarning: AO symmetry is not supported. Setting aosym = s1.
  warnings.warn(msg)
cond(S) = 1.0
E1 = -3.686207066418597  E_coul = 1.1350978952846869
init E= -2.55110917113391
    CPU time for initialize scf      0.09 sec, wall time      0.09 sec
/Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/jax/_src/numpy/lax_numpy.py:3237: UserWarning: 'kind' argument to argsort is ignored; only 'stable' sorts are supported.
  warnings.warn("'kind' argument to argsort is ignored; only 'stable' sorts "
  mo_energy =
[-0.72636596]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
cycle= 1 E= -2.58706647197478  delta_E= -0.036  |g|=    0  |ddm|= 0.0506
    CPU time for cycle= 1      0.15 sec, wall time      0.15 sec
  mo_energy =
[-0.69616674]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
cycle= 2 E= -2.58706647197478  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.05 sec, wall time      0.05 sec
E1 = -3.7817994562079207  E_coul = 1.194732984233136
  mo_energy =
[-0.69616674]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
Extra cycle  E= -2.58706647197478  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.30 sec, wall time      0.30 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.432879285          1
                                0.4330512863         1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.432879285, 1.0], [0.4330512863, 1.0]]]}
ecp = {}
CPU time:         1.44
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.686207066418597  E_coul = 1.1350978952846869
init E= -2.55110917113391
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.72636596]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
cycle= 1 E= -2.58706647197478  delta_E= -0.036  |g|=    0  |ddm|= 0.0506
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.69616674]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
cycle= 2 E= -2.58706647197478  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7817994562079207  E_coul = 1.194732984233136
  mo_energy =
[-0.69616674]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
Extra cycle  E= -2.58706647197478  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.7817994562079207  E_coul = 1.194732984233136
init E= -2.58706647197478
    CPU time for initialize scf      0.25 sec, wall time      0.25 sec
  mo_energy =
[-0.69616674]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
cycle= 1 E= -2.58706647197478  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.7817994562079207  E_coul = 1.194732984233136
  mo_energy =
[-0.69616674]
E1 = -3.7817994562079207  E_coul = 1.194732984233136
Extra cycle  E= -2.58706647197478  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.63 sec, wall time      0.63 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.4429226649         1
                                0.0001               1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.4429226648976883, 1.0], [0.00010000000000032205, 1.0]]]}
ecp = {}
CPU time:         4.63
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -0.4706804691069014  E_coul = 0.05388725846902902
init E= -0.416793210637872
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.52581689]
E1 = -1.3639442418059204  E_coul = 0.4525087353870825
cycle= 1 E= -0.911435506418838  delta_E= -0.495  |g|=    0  |ddm|= 1.31
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
  mo_energy =
[-0.22946339]
E1 = -1.3639442418059204  E_coul = 0.4525087353870825
cycle= 2 E= -0.911435506418838  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -1.3639442418059204  E_coul = 0.4525087353870825
  mo_energy =
[-0.22946339]
E1 = -1.3639442418059204  E_coul = 0.4525087353870825
Extra cycle  E= -0.911435506418838  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.43400709375        1
                                0.384433564685       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.4340070937475144, 1.0], [0.3844335646852652, 1.0]]]}
ecp = {}
CPU time:         4.71
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.69862126609902  E_coul = 1.1229334838832024
init E= -2.57568778221582
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.73949766]
E1 = -3.765429238726297  E_coul = 1.163866822598587
cycle= 1 E= -2.60156241612771  delta_E= -0.0259  |g|=    0  |ddm|= 0.0355
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.7188478]
E1 = -3.765429238726297  E_coul = 1.163866822598587
cycle= 2 E= -2.60156241612771  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.765429238726297  E_coul = 1.163866822598587
  mo_energy =
[-0.7188478]
E1 = -3.765429238726297  E_coul = 1.163866822598587
Extra cycle  E= -2.60156241612771  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.43400709375        1
                                0.384433564685       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.4340070937475144, 1.0], [0.3844335646852652, 1.0]]]}
ecp = {}
CPU time:         4.78
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.69862126609902  E_coul = 1.1229334838832024
init E= -2.57568778221582
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.73949766]
E1 = -3.765429238726297  E_coul = 1.163866822598587
cycle= 1 E= -2.60156241612771  delta_E= -0.0259  |g|=    0  |ddm|= 0.0355
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.7188478]
E1 = -3.765429238726297  E_coul = 1.163866822598587
cycle= 2 E= -2.60156241612771  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.765429238726297  E_coul = 1.163866822598587
  mo_energy =
[-0.7188478]
E1 = -3.765429238726297  E_coul = 1.163866822598587
Extra cycle  E= -2.60156241612771  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.765429238726297  E_coul = 1.163866822598587
init E= -2.60156241612771
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.7188478]
E1 = -3.765429238726297  E_coul = 1.163866822598587
cycle= 1 E= -2.60156241612771  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.765429238726297  E_coul = 1.163866822598587
  mo_energy =
[-0.7188478]
E1 = -3.765429238726297  E_coul = 1.163866822598587
Extra cycle  E= -2.60156241612771  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.27157866305        1
                                0.0117649017555      1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.2715786630537607, 1.0], [0.01176490175548034, 1.0]]]}
ecp = {}
CPU time:         6.25
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -0.9813861731236302  E_coul = 0.1380383113167784
init E= -0.843347861806852
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.71485071]
E1 = -1.9893239752453877  E_coul = 0.5671929205596894
cycle= 1 E= -1.4221310546857  delta_E= -0.579  |g|=    0  |ddm|= 1.01
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.42746907]
E1 = -1.9893239752453877  E_coul = 0.5671929205596894
cycle= 2 E= -1.4221310546857  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -1.9893239752453877  E_coul = 0.5671929205596894
  mo_energy =
[-0.42746907]
E1 = -1.9893239752453877  E_coul = 0.5671929205596894
Extra cycle  E= -1.4221310546857  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.41468276765        1
                                0.340096678969       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.4146827676500306, 1.0], [0.3400966789688331, 1.0]]]}
ecp = {}
CPU time:         6.34
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.688383347535109  E_coul = 1.1006361049711366
init E= -2.58774724256397
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.75341774]
E1 = -3.737304328635111  E_coul = 1.130026368962347
cycle= 1 E= -2.60727795967276  delta_E= -0.0195  |g|=    0  |ddm|= 0.0262
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.7386258]
E1 = -3.737304328635111  E_coul = 1.130026368962347
cycle= 2 E= -2.60727795967276  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.737304328635111  E_coul = 1.130026368962347
  mo_energy =
[-0.7386258]
E1 = -3.737304328635111  E_coul = 1.130026368962347
Extra cycle  E= -2.60727795967276  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.41468276765        1
                                0.340096678969       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.4146827676500306, 1.0], [0.3400966789688331, 1.0]]]}
ecp = {}
CPU time:         6.42
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.688383347535109  E_coul = 1.1006361049711366
init E= -2.58774724256397
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.75341774]
E1 = -3.737304328635111  E_coul = 1.130026368962347
cycle= 1 E= -2.60727795967276  delta_E= -0.0195  |g|=    0  |ddm|= 0.0262
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.7386258]
E1 = -3.737304328635111  E_coul = 1.130026368962347
cycle= 2 E= -2.60727795967276  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.737304328635111  E_coul = 1.130026368962347
  mo_energy =
[-0.7386258]
E1 = -3.737304328635111  E_coul = 1.130026368962347
Extra cycle  E= -2.60727795967276  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.737304328635111  E_coul = 1.130026368962347
init E= -2.60727795967276
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.7386258]
E1 = -3.737304328635111  E_coul = 1.130026368962347
cycle= 1 E= -2.60727795967276  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.737304328635111  E_coul = 1.130026368962347
  mo_energy =
[-0.7386258]
E1 = -3.737304328635111  E_coul = 1.130026368962347
Extra cycle  E= -2.60727795967276  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.19054040734        1
                                0.120270987252       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.1905404073362784, 1.0], [0.12027098725190888, 1.0]]]}
ecp = {}
CPU time:         7.91
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -2.907967203143592  E_coul = 0.7011826382710417
init E= -2.20678456487255
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83753761]
E1 = -3.235293277949318  E_coul = 0.8679195213863206
cycle= 1 E= -2.367373756563  delta_E= -0.161  |g|=    0  |ddm|= 0.202
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.74972712]
E1 = -3.235293277949318  E_coul = 0.8679195213863206
cycle= 2 E= -2.367373756563  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.235293277949318  E_coul = 0.8679195213863206
  mo_energy =
[-0.74972712]
E1 = -3.235293277949318  E_coul = 0.8679195213863206
Extra cycle  E= -2.367373756563  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.36621253595        1
                                0.292559916185       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.366212535945794, 1.0], [0.2925599161849102, 1.0]]]}
ecp = {}
CPU time:         8.02
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6472440460572333  E_coul = 1.0609604556490506
init E= -2.58628359040818
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.77173467]
E1 = -3.6906339453081145  E_coul = 1.0863543130904654
cycle= 1 E= -2.60427963221765  delta_E= -0.018  |g|=    0  |ddm|= 0.0235
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.75896266]
E1 = -3.6906339453081145  E_coul = 1.0863543130904654
cycle= 2 E= -2.60427963221765  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6906339453081145  E_coul = 1.0863543130904654
  mo_energy =
[-0.75896266]
E1 = -3.6906339453081145  E_coul = 1.0863543130904654
Extra cycle  E= -2.60427963221765  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.39215600377        1
                                0.318003749076       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.3921560037688616, 1.0], [0.3180037490764642, 1.0]]]}
ecp = {}
CPU time:         8.12
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.674069202141038  E_coul = 1.0841445822974856
init E= -2.58992461984355
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.76190649]
E1 = -3.7180691954722525  E_coul = 1.1102671124775954
cycle= 1 E= -2.60780208299466  delta_E= -0.0179  |g|=    0  |ddm|= 0.0237
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.74876749]
E1 = -3.7180691954722525  E_coul = 1.1102671124775954
cycle= 2 E= -2.60780208299466  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7180691954722525  E_coul = 1.1102671124775954
  mo_energy =
[-0.74876749]
E1 = -3.7180691954722525  E_coul = 1.1102671124775954
Extra cycle  E= -2.60780208299466  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.40308867675        1
                                0.328725874057       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.403088676751112, 1.0], [0.32872587405665105, 1.0]]]}
ecp = {}
CPU time:         8.23
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6819671178172078  E_coul = 1.0925376956276056
init E= -2.5894294221896
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.75778234]
E1 = -3.727897778252979  E_coul = 1.1199654087702782
cycle= 1 E= -2.6079323694827  delta_E= -0.0185  |g|=    0  |ddm|= 0.0246
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.74398348]
E1 = -3.727897778252979  E_coul = 1.1199654087702782
cycle= 2 E= -2.6079323694827  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.727897778252979  E_coul = 1.1199654087702782
  mo_energy =
[-0.74398348]
E1 = -3.727897778252979  E_coul = 1.1199654087702782
Extra cycle  E= -2.6079323694827  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.40845476252        1
                                0.333988616512       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.4084547625184647, 1.0], [0.33398861651180084, 1.0]]]}
ecp = {}
CPU time:         8.33
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6851777404589807  E_coul = 1.0963849963090784
init E= -2.5887927441499
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.75576122]
E1 = -3.7323773341296995  E_coul = 1.1246497525739676
cycle= 1 E= -2.60772758155573  delta_E= -0.0189  |g|=    0  |ddm|= 0.0253
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.74153891]
E1 = -3.7323773341296995  E_coul = 1.1246497525739676
cycle= 2 E= -2.60772758155573  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7323773341296995  E_coul = 1.1246497525739676
  mo_energy =
[-0.74153891]
E1 = -3.7323773341296995  E_coul = 1.1246497525739676
Extra cycle  E= -2.60772758155573  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.4112663954         1
                                0.336746101275       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.411266395401588, 1.0], [0.3367461012751513, 1.0]]]}
ecp = {}
CPU time:         8.43
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6866928312761615  E_coul = 1.0983321510878077
init E= -2.58836068018835
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.75470297]
E1 = -3.7346372431117776  E_coul = 1.127084910534
cycle= 1 E= -2.60755233257778  delta_E= -0.0192  |g|=    0  |ddm|= 0.0257
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.74023371]
E1 = -3.7346372431117776  E_coul = 1.127084910534
cycle= 2 E= -2.60755233257778  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7346372431117776  E_coul = 1.127084910534
  mo_energy =
[-0.74023371]
E1 = -3.7346372431117776  E_coul = 1.127084910534
Extra cycle  E= -2.60755233257778  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.41278802957        1
                                0.338238430899       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.412788029573067, 1.0], [0.3382384308991336, 1.0]]]}
ecp = {}
CPU time:         8.53
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6874659537516723  E_coul = 1.0993666439747871
init E= -2.58809930977689
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.75413045]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
cycle= 1 E= -2.60743838043925  delta_E= -0.0193  |g|=    0  |ddm|= 0.0259
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.73952051]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
cycle= 2 E= -2.60743838043925  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
  mo_energy =
[-0.73952051]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
Extra cycle  E= -2.60743838043925  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.41278802957        1
                                0.338238430899       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.412788029573067, 1.0], [0.3382384308991336, 1.0]]]}
ecp = {}
CPU time:         8.63
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6874659537516723  E_coul = 1.0993666439747871
init E= -2.58809930977689
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.75413045]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
cycle= 1 E= -2.60743838043925  delta_E= -0.0193  |g|=    0  |ddm|= 0.0259
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.73952051]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
cycle= 2 E= -2.60743838043925  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
  mo_energy =
[-0.73952051]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
Extra cycle  E= -2.60743838043925  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
init E= -2.60743838043925
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.73952051]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
cycle= 1 E= -2.60743838043925  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
  mo_energy =
[-0.73952051]
E1 = -3.7358357494461005  E_coul = 1.1283973690068554
Extra cycle  E= -2.60743838043925  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.12224892106        1
                                0.154459832082       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.1222489210636573, 1.0], [0.15445983208164157, 1.0]]]}
ecp = {}
CPU time:        10.05
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.199009161544754  E_coul = 0.8079294049183734
init E= -2.39107975662638
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.84075616]
E1 = -3.3977652966087697  E_coul = 0.9114423407010481
cycle= 1 E= -2.48632295590772  delta_E= -0.0952  |g|=    0  |ddm|= 0.117
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.78744031]
E1 = -3.3977652966087697  E_coul = 0.9114423407010481
cycle= 2 E= -2.48632295590772  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.3977652966087697  E_coul = 0.9114423407010481
  mo_energy =
[-0.78744031]
E1 = -3.3977652966087697  E_coul = 0.9114423407010481
Extra cycle  E= -2.48632295590772  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.33126145011        1
                                0.286669330214       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.3312614501122546, 1.0], [0.286669330213999, 1.0]]]}
ecp = {}
CPU time:        10.17
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6423933170518694  E_coul = 1.0523834558320588
init E= -2.59000986121981
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.77774332]
E1 = -3.6847013906423287  E_coul = 1.0769732779652756
cycle= 1 E= -2.60772811267705  delta_E= -0.0177  |g|=    0  |ddm|= 0.023
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.76537742]
E1 = -3.6847013906423287  E_coul = 1.0769732779652756
cycle= 2 E= -2.60772811267705  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6847013906423287  E_coul = 1.0769732779652756
  mo_energy =
[-0.76537742]
E1 = -3.6847013906423287  E_coul = 1.0769732779652756
Extra cycle  E= -2.60772811267705  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.37175120694        1
                                0.31228085912        1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.3717512069384776, 1.0], [0.3122808591202467, 1.0]]]}
ecp = {}
CPU time:        10.29
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6704716464345153  E_coul = 1.078048938603782
init E= -2.59242270783073
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.76594828]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
cycle= 1 E= -2.60980117006581  delta_E= -0.0174  |g|=    0  |ddm|= 0.0229
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.75332986]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
cycle= 2 E= -2.60980117006581  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7129426275547432  E_coul = 1.103141457488933
  mo_energy =
[-0.75332986]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
Extra cycle  E= -2.60980117006581  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.37175120694        1
                                0.31228085912        1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.3717512069384776, 1.0], [0.3122808591202467, 1.0]]]}
ecp = {}
CPU time:        10.40
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6704716464345153  E_coul = 1.078048938603782
init E= -2.59242270783073
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.76594828]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
cycle= 1 E= -2.60980117006581  delta_E= -0.0174  |g|=    0  |ddm|= 0.0229
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.75332986]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
cycle= 2 E= -2.60980117006581  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7129426275547432  E_coul = 1.103141457488933
  mo_energy =
[-0.75332986]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
Extra cycle  E= -2.60980117006581  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.7129426275547432  E_coul = 1.103141457488933
init E= -2.60980117006581
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.75332986]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
cycle= 1 E= -2.60980117006581  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.7129426275547432  E_coul = 1.103141457488933
  mo_energy =
[-0.75332986]
E1 = -3.7129426275547432  E_coul = 1.103141457488933
Extra cycle  E= -2.60980117006581  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.07175271969        1
                                0.175872587583       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.0717527196864918, 1.0], [0.17587258758257213, 1.0]]]}
ecp = {}
CPU time:        11.84
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.3337329369078263  E_coul = 0.8591529285052361
init E= -2.47458000840259
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.8417076]
E1 = -3.474039006080035  E_coul = 0.9329926957930491
cycle= 1 E= -2.54104631028699  delta_E= -0.0665  |g|=    0  |ddm|= 0.0808
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.80402681]
E1 = -3.474039006080035  E_coul = 0.9329926957930491
cycle= 2 E= -2.54104631028699  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.474039006080035  E_coul = 0.9329926957930491
  mo_energy =
[-0.80402681]
E1 = -3.474039006080035  E_coul = 0.9329926957930491
Extra cycle  E= -2.54104631028699  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.28295922761        1
                                0.271907454114       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.2829592276069035, 1.0], [0.2719074541141894, 1.0]]]}
ecp = {}
CPU time:        11.97
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6228144880448068  E_coul = 1.0330152654437348
init E= -2.58979922260107
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.78778404]
E1 = -3.666527281562061  E_coul = 1.0580943351323953
cycle= 1 E= -2.60843294642967  delta_E= -0.0186  |g|=    0  |ddm|= 0.0238
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.77516931]
E1 = -3.666527281562061  E_coul = 1.0580943351323953
cycle= 2 E= -2.60843294642967  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.666527281562061  E_coul = 1.0580943351323953
  mo_energy =
[-0.77516931]
E1 = -3.666527281562061  E_coul = 1.0580943351323953
Extra cycle  E= -2.60843294642967  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.32932172638        1
                                0.292988321487       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.3293217263792885, 1.0], [0.2929883214866856, 1.0]]]}
ecp = {}
CPU time:        12.09
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6516516608828415  E_coul = 1.058127223180042
init E= -2.5935244377028
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.77632368]
E1 = -3.692677849691623  E_coul = 1.0820368353121588
cycle= 1 E= -2.61064101437946  delta_E= -0.0171  |g|=    0  |ddm|= 0.0222
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.76430209]
E1 = -3.692677849691623  E_coul = 1.0820368353121588
cycle= 2 E= -2.61064101437946  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.692677849691623  E_coul = 1.0820368353121588
  mo_energy =
[-0.76430209]
E1 = -3.692677849691623  E_coul = 1.0820368353121588
Extra cycle  E= -2.61064101437946  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.3491934813         1
                                0.302023939521       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.3491934813037876, 1.0], [0.3020239395209669, 1.0]]]}
ecp = {}
CPU time:        12.22
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.661302833140885  E_coul = 1.0677997363466332
init E= -2.59350309679425
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.77145182]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
cycle= 1 E= -2.61056767093991  delta_E= -0.0171  |g|=    0  |ddm|= 0.0223
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.75927808]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
cycle= 2 E= -2.61056767093991  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
  mo_energy =
[-0.75927808]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
Extra cycle  E= -2.61056767093991  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.3491934813         1
                                0.302023939521       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.3491934813037876, 1.0], [0.3020239395209669, 1.0]]]}
ecp = {}
CPU time:        12.34
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.661302833140885  E_coul = 1.0677997363466332
init E= -2.59350309679425
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.77145182]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
cycle= 1 E= -2.61056767093991  delta_E= -0.0171  |g|=    0  |ddm|= 0.0223
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.75927808]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
cycle= 2 E= -2.61056767093991  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
  mo_energy =
[-0.75927808]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
Extra cycle  E= -2.61056767093991  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
init E= -2.61056767093991
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.75927808]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
cycle= 1 E= -2.61056767093991  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
  mo_energy =
[-0.75927808]
E1 = -3.7025791789650038  E_coul = 1.0920115080250936
Extra cycle  E= -2.61056767093991  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.04048845512        1
                                0.194486593915       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.040488455119223, 1.0], [0.194486593915075, 1.0]]]}
ecp = {}
CPU time:        13.79
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.424109099857264  E_coul = 0.896458816403062
init E= -2.5276502834542
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.8399742]
E1 = -3.5264570199602923  E_coul = 0.9508507321673073
cycle= 1 E= -2.57560628779299  delta_E= -0.048  |g|=    0  |ddm|= 0.058
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.81237778]
E1 = -3.5264570199602923  E_coul = 0.9508507321673073
cycle= 2 E= -2.57560628779299  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.5264570199602923  E_coul = 0.9508507321673073
  mo_energy =
[-0.81237778]
E1 = -3.5264570199602923  E_coul = 0.9508507321673073
Extra cycle  E= -2.57560628779299  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.24385657605        1
                                0.265329845728       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.24385657605015, 1.0], [0.26532984572755025, 1.0]]]}
ecp = {}
CPU time:        13.93
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6141721193829976  E_coul = 1.0222006215740067
init E= -2.59197149780899
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.79445677]
E1 = -3.6582453386243516  E_coul = 1.0472831927099082
cycle= 1 E= -2.61096214591444  delta_E= -0.019  |g|=    0  |ddm|= 0.0241
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.78183948]
E1 = -3.6582453386243516  E_coul = 1.0472831927099082
cycle= 2 E= -2.61096214591444  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6582453386243516  E_coul = 1.0472831927099082
  mo_energy =
[-0.78183948]
E1 = -3.6582453386243516  E_coul = 1.0472831927099082
Extra cycle  E= -2.61096214591444  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.29570196633        1
                                0.283390178991       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.295701966333574, 1.0], [0.28339017899095376, 1.0]]]}
ecp = {}
CPU time:        14.07
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6408450016970924  E_coul = 1.0460320399353737
init E= -2.59481296176172
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.78308808]
E1 = -3.681737422037793  E_coul = 1.069661167740824
cycle= 1 E= -2.61207625429697  delta_E= -0.0173  |g|=    0  |ddm|= 0.0222
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.77120754]
E1 = -3.681737422037793  E_coul = 1.069661167740824
cycle= 2 E= -2.61207625429697  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.681737422037793  E_coul = 1.069661167740824
  mo_energy =
[-0.77120754]
E1 = -3.681737422037793  E_coul = 1.069661167740824
Extra cycle  E= -2.61207625429697  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.29570196633        1
                                0.283390178991       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.295701966333574, 1.0], [0.28339017899095376, 1.0]]]}
ecp = {}
CPU time:        14.21
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6408450016970924  E_coul = 1.0460320399353737
init E= -2.59481296176172
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.78308808]
E1 = -3.681737422037793  E_coul = 1.069661167740824
cycle= 1 E= -2.61207625429697  delta_E= -0.0173  |g|=    0  |ddm|= 0.0222
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.77120754]
E1 = -3.681737422037793  E_coul = 1.069661167740824
cycle= 2 E= -2.61207625429697  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.681737422037793  E_coul = 1.069661167740824
  mo_energy =
[-0.77120754]
E1 = -3.681737422037793  E_coul = 1.069661167740824
Extra cycle  E= -2.61207625429697  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.03 sec, wall time      0.03 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.681737422037793  E_coul = 1.069661167740824
init E= -2.61207625429697
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.77120754]
E1 = -3.681737422037793  E_coul = 1.069661167740824
cycle= 1 E= -2.61207625429697  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.681737422037793  E_coul = 1.069661167740824
  mo_energy =
[-0.77120754]
E1 = -3.681737422037793  E_coul = 1.069661167740824
Extra cycle  E= -2.61207625429697  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.01536473839        1
                                0.20762801161        1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.0153647383864812, 1.0], [0.20762801161041947, 1.0]]]}
ecp = {}
CPU time:        15.68
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.47648231950112  E_coul = 0.9186160327386995
init E= -2.55786628676242
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83872285]
E1 = -3.5574862864989893  E_coul = 0.9619232904773278
cycle= 1 E= -2.59556299602166  delta_E= -0.0377  |g|=    0  |ddm|= 0.0455
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.81681985]
E1 = -3.5574862864989893  E_coul = 0.9619232904773278
cycle= 2 E= -2.59556299602166  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.5574862864989893  E_coul = 0.9619232904773278
  mo_energy =
[-0.81681985]
E1 = -3.5574862864989893  E_coul = 0.9619232904773278
Extra cycle  E= -2.59556299602166  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.19276232579        1
                                0.255570362357       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.1927623257878444, 1.0], [0.2555703623571477, 1.0]]]}
ecp = {}
CPU time:        15.83
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.5985449213072833  E_coul = 1.0059865946783701
init E= -2.59255832662891
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.80344227]
E1 = -3.6446169238786816  E_coul = 1.0319106903698023
cycle= 1 E= -2.61270623350888  delta_E= -0.0201  |g|=    0  |ddm|= 0.0253
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.79039777]
E1 = -3.6446169238786816  E_coul = 1.0319106903698023
cycle= 2 E= -2.61270623350888  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6446169238786816  E_coul = 1.0319106903698023
  mo_energy =
[-0.79039777]
E1 = -3.6446169238786816  E_coul = 1.0319106903698023
Extra cycle  E= -2.61270623350888  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.24222270445        1
                                0.268937211686       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.242222704453335, 1.0], [0.26893721168572404, 1.0]]]}
ecp = {}
CPU time:        15.99
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6211211466989988  E_coul = 1.0260985515888195
init E= -2.59502259511018
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.79365101]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
cycle= 1 E= -2.61325977801742  delta_E= -0.0182  |g|=    0  |ddm|= 0.0232
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.78149076]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
cycle= 2 E= -2.61325977801742  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.663538035461709  E_coul = 1.0502782574442902
  mo_energy =
[-0.78149076]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
Extra cycle  E= -2.61325977801742  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.24222270445        1
                                0.268937211686       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.242222704453335, 1.0], [0.26893721168572404, 1.0]]]}
ecp = {}
CPU time:        16.14
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6211211466989988  E_coul = 1.0260985515888195
init E= -2.59502259511018
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.79365101]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
cycle= 1 E= -2.61325977801742  delta_E= -0.0182  |g|=    0  |ddm|= 0.0232
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.78149076]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
cycle= 2 E= -2.61325977801742  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.663538035461709  E_coul = 1.0502782574442902
  mo_energy =
[-0.78149076]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
Extra cycle  E= -2.61325977801742  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.663538035461709  E_coul = 1.0502782574442902
init E= -2.61325977801742
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.78149076]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
cycle= 1 E= -2.61325977801742  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.663538035461709  E_coul = 1.0502782574442902
  mo_energy =
[-0.78149076]
E1 = -3.663538035461709  E_coul = 1.0502782574442902
Extra cycle  E= -2.61325977801742  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.99552966121        1
                                0.217694681526       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.995529661208524, 1.0], [0.2176946815259379, 1.0]]]}
ecp = {}
CPU time:        17.61
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.5106956174065633  E_coul = 0.9335200577407574
init E= -2.57717555966581
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83761823]
E1 = -3.578149608402089  E_coul = 0.9697377224682663
cycle= 1 E= -2.60841188593382  delta_E= -0.0312  |g|=    0  |ddm|= 0.0377
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.81933708]
E1 = -3.578149608402089  E_coul = 0.9697377224682663
cycle= 2 E= -2.60841188593382  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.578149608402089  E_coul = 0.9697377224682663
  mo_energy =
[-0.81933708]
E1 = -3.578149608402089  E_coul = 0.9697377224682663
Extra cycle  E= -2.60841188593382  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.13752613145        1
                                0.247189872446       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.1375261314548952, 1.0], [0.2471898724461054, 1.0]]]}
ecp = {}
CPU time:        17.78
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.5837151334759847  E_coul = 0.990202951669853
init E= -2.59351218180613
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.81243951]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
cycle= 1 E= -2.61490275554265  delta_E= -0.0214  |g|=    0  |ddm|= 0.0265
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.7989388]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
cycle= 2 E= -2.61490275554265  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
  mo_energy =
[-0.7989388]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
Extra cycle  E= -2.61490275554265  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  2.13752613145        1
                                0.247189872446       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [2.1375261314548952, 1.0], [0.2471898724461054, 1.0]]]}
ecp = {}
CPU time:        17.95
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.5837151334759847  E_coul = 0.990202951669853
init E= -2.59351218180613
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.81243951]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
cycle= 1 E= -2.61490275554265  delta_E= -0.0214  |g|=    0  |ddm|= 0.0265
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.7989388]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
cycle= 2 E= -2.61490275554265  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
  mo_energy =
[-0.7989388]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
Extra cycle  E= -2.61490275554265  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
init E= -2.61490275554265
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.7989388]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
cycle= 1 E= -2.61490275554265  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
  mo_energy =
[-0.7989388]
E1 = -3.6319279095775534  E_coul = 1.0170251540349082
Extra cycle  E= -2.61490275554265  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.9771370384         1
                                0.225162325283       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.9771370383967426, 1.0], [0.2251623252833026, 1.0]]]}
ecp = {}
CPU time:        19.56
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.5330304410899354  E_coul = 0.9431294059248677
init E= -2.58990103516507
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83706619]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
cycle= 1 E= -2.61700142484085  delta_E= -0.0271  |g|=    0  |ddm|= 0.0327
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82113595]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
cycle= 2 E= -2.61700142484085  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.591730949469003  E_coul = 0.9747295246281572
  mo_energy =
[-0.82113595]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
Extra cycle  E= -2.61700142484085  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.9771370384         1
                                0.225162325283       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.9771370383967426, 1.0], [0.2251623252833026, 1.0]]]}
ecp = {}
CPU time:        19.75
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.5330304410899354  E_coul = 0.9431294059248677
init E= -2.58990103516507
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83706619]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
cycle= 1 E= -2.61700142484085  delta_E= -0.0271  |g|=    0  |ddm|= 0.0327
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82113595]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
cycle= 2 E= -2.61700142484085  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.591730949469003  E_coul = 0.9747295246281572
  mo_energy =
[-0.82113595]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
Extra cycle  E= -2.61700142484085  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.591730949469003  E_coul = 0.9747295246281572
init E= -2.61700142484085
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.82113595]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
cycle= 1 E= -2.61700142484085  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.00 sec, wall time      0.00 sec
E1 = -3.591730949469003  E_coul = 0.9747295246281572
  mo_energy =
[-0.82113595]
E1 = -3.591730949469003  E_coul = 0.9747295246281572
Extra cycle  E= -2.61700142484085  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.93645604477        1
                                0.22853060363        1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.936456044770075, 1.0], [0.2285306036301736, 1.0]]]}
ecp = {}
CPU time:        21.40
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.541788383858668  E_coul = 0.9435018906488777
init E= -2.59828649320979
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83999869]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
cycle= 1 E= -2.62328023500647  delta_E= -0.025  |g|=    0  |ddm|= 0.03
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82540419]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
cycle= 2 E= -2.62328023500647  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
  mo_energy =
[-0.82540419]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
Extra cycle  E= -2.62328023500647  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.93645604477        1
                                0.22853060363        1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.936456044770075, 1.0], [0.2285306036301736, 1.0]]]}
ecp = {}
CPU time:        21.60
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.541788383858668  E_coul = 0.9435018906488777
init E= -2.59828649320979
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83999869]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
cycle= 1 E= -2.62328023500647  delta_E= -0.025  |g|=    0  |ddm|= 0.03
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82540419]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
cycle= 2 E= -2.62328023500647  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
  mo_energy =
[-0.82540419]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
Extra cycle  E= -2.62328023500647  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
init E= -2.62328023500647
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.82540419]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
cycle= 1 E= -2.62328023500647  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
  mo_energy =
[-0.82540419]
E1 = -3.5957520824798457  E_coul = 0.9724718474733743
Extra cycle  E= -2.62328023500647  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86038675468        1
                                0.263212075472       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8603867546795603, 1.0], [0.26321207547218767, 1.0]]]}
ecp = {}
CPU time:        23.16
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6069216171469347  E_coul = 0.9761604141792798
init E= -2.63076120296765
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.834357]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
cycle= 1 E= -2.64480339635983  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82595965]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
cycle= 2 E= -2.64480339635983  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
  mo_energy =
[-0.82595965]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
Extra cycle  E= -2.64480339635983  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86038675468        1
                                0.263212075472       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8603867546795603, 1.0], [0.26321207547218767, 1.0]]]}
ecp = {}
CPU time:        23.42
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6069216171469347  E_coul = 0.9761604141792798
init E= -2.63076120296765
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.834357]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
cycle= 1 E= -2.64480339635983  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82595965]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
cycle= 2 E= -2.64480339635983  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
  mo_energy =
[-0.82595965]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
Extra cycle  E= -2.64480339635983  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
init E= -2.64480339635983
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  mo_energy =
[-0.82595965]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
cycle= 1 E= -2.64480339635983  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
  mo_energy =
[-0.82595965]
E1 = -3.6376875023826862  E_coul = 0.9928841060228543
Extra cycle  E= -2.64480339635983  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.91998781056        1
                                0.260587614282       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.9199878105615256, 1.0], [0.26058761428154514, 1.0]]]}
ecp = {}
CPU time:        25.04
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.608688152349288  E_coul = 0.9814961861191129
init E= -2.62719196623018
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83028575]
E1 = -3.641307708767835  E_coul = 0.9993202084819924
cycle= 1 E= -2.64198750028584  delta_E= -0.0148  |g|=    0  |ddm|= 0.0179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82133365]
E1 = -3.641307708767835  E_coul = 0.9993202084819924
cycle= 2 E= -2.64198750028584  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.641307708767835  E_coul = 0.9993202084819924
  mo_energy =
[-0.82133365]
E1 = -3.641307708767835  E_coul = 0.9993202084819924
Extra cycle  E= -2.64198750028584  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.87293303819        1
                                0.262659614888       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8729330381916194, 1.0], [0.2626596148877744, 1.0]]]}
ecp = {}
CPU time:        25.32
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.607528865848822  E_coul = 0.9773450610723217
init E= -2.6301838047765
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83354115]
E1 = -3.638617214911592  E_coul = 0.9942624384654405
cycle= 1 E= -2.64435477644615  delta_E= -0.0142  |g|=    0  |ddm|= 0.0171
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82504617]
E1 = -3.638617214911592  E_coul = 0.9942624384654405
cycle= 2 E= -2.64435477644615  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.638617214911592  E_coul = 0.9942624384654405
  mo_energy =
[-0.82504617]
E1 = -3.638617214911592  E_coul = 0.9942624384654405
Extra cycle  E= -2.64435477644615  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86346056694        1
                                0.263076723827       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8634605669429856, 1.0], [0.2630767238265951, 1.0]]]}
ecp = {}
CPU time:        25.58
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6070821344847266  E_coul = 0.9764537219840586
init E= -2.63062841250067
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83415916]
E1 = -3.637923618863697  E_coul = 0.9932229708164156
cycle= 1 E= -2.64470064804728  delta_E= -0.0141  |g|=    0  |ddm|= 0.017
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82573884]
E1 = -3.637923618863697  E_coul = 0.9932229708164156
cycle= 2 E= -2.64470064804728  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.637923618863697  E_coul = 0.9932229708164156
  mo_energy =
[-0.82573884]
E1 = -3.637923618863697  E_coul = 0.9932229708164156
Extra cycle  E= -2.64470064804728  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86116572144        1
                                0.263177774603       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8611657214413486, 1.0], [0.2631777746027675, 1.0]]]}
ecp = {}
CPU time:        25.81
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6069630181825056  E_coul = 0.9762349334990809
init E= -2.63072808468342
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83430699]
E1 = -3.637747851998731  E_coul = 0.9929700537207371
cycle= 1 E= -2.64477779827799  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82590387]
E1 = -3.637747851998731  E_coul = 0.9929700537207371
cycle= 2 E= -2.64477779827799  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.637747851998731  E_coul = 0.9929700537207371
  mo_energy =
[-0.82590387]
E1 = -3.637747851998731  E_coul = 0.9929700537207371
Extra cycle  E= -2.64477779827799  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86058582131        1
                                0.263203309811       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8605858213116964, 1.0], [0.2632033098111996, 1.0]]]}
ecp = {}
CPU time:        26.09
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.606932243965675  E_coul = 0.9761794699741857
init E= -2.63075277399149
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83434423]
E1 = -3.6377029579917846  E_coul = 0.9929060748236923
cycle= 1 E= -2.64479688316809  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.8259454]
E1 = -3.6377029579917846  E_coul = 0.9929060748236923
cycle= 2 E= -2.64479688316809  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6377029579917846  E_coul = 0.9929060748236923
  mo_energy =
[-0.8259454]
E1 = -3.6377029579917846  E_coul = 0.9929060748236923
Extra cycle  E= -2.64479688316809  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.05 sec, wall time      0.05 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86043773499        1
                                0.263209830615       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8604377349939638, 1.0], [0.2632098306150344, 1.0]]]}
ecp = {}
CPU time:        26.38
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6069243416947305  E_coul = 0.976165295105588
init E= -2.63075904658914
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83435373]
E1 = -3.6376914626809023  E_coul = 0.9928897324672398
cycle= 1 E= -2.64480173021366  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.825956]
E1 = -3.6376914626809023  E_coul = 0.9928897324672398
cycle= 2 E= -2.64480173021366  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6376914626809023  E_coul = 0.9928897324672398
  mo_energy =
[-0.825956]
E1 = -3.6376914626809023  E_coul = 0.9928897324672398
Extra cycle  E= -2.64480173021366  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86039981768        1
                                0.263211500259       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8603998176809606, 1.0], [0.2632115002585492, 1.0]]]}
ecp = {}
CPU time:        26.61
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.606922315475066  E_coul = 0.9761616649016827
init E= -2.63076065057338
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83435616]
E1 = -3.637688517296593  E_coul = 0.9928855477416051
cycle= 1 E= -2.64480296955499  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82595871]
E1 = -3.637688517296593  E_coul = 0.9928855477416051
cycle= 2 E= -2.64480296955499  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.637688517296593  E_coul = 0.9928855477416051
  mo_energy =
[-0.82595871]
E1 = -3.637688517296593  E_coul = 0.9928855477416051
Extra cycle  E= -2.64480296955499  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86039010236        1
                                0.263211928061       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8603901023600011, 1.0], [0.2632119280610845, 1.0]]]}
ecp = {}
CPU time:        26.85
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6069217961219824  E_coul = 0.9761607347077543
init E= -2.63076106141423
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83435679]
E1 = -3.637687762485958  E_coul = 0.9928844754962054
cycle= 1 E= -2.64480328698975  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82595941]
E1 = -3.637687762485958  E_coul = 0.9928844754962054
cycle= 2 E= -2.64480328698975  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.637687762485958  E_coul = 0.9928844754962054
  mo_energy =
[-0.82595941]
E1 = -3.637687762485958  E_coul = 0.9928844754962054
Extra cycle  E= -2.64480328698975  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86038761263        1
                                0.263212037694       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8603876126267054, 1.0], [0.26321203769351154, 1.0]]]}
ecp = {}
CPU time:        27.09
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6069216630157177  E_coul = 0.9761604963248891
init E= -2.63076116669083
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83435695]
E1 = -3.6376875690428454  E_coul = 0.9928842007119689
cycle= 1 E= -2.64480336833088  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82595958]
E1 = -3.6376875690428454  E_coul = 0.9928842007119689
cycle= 2 E= -2.64480336833088  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6376875690428454  E_coul = 0.9928842007119689
  mo_energy =
[-0.82595958]
E1 = -3.6376875690428454  E_coul = 0.9928842007119689
Extra cycle  E= -2.64480336833088  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86038697456        1
                                0.26321206579        1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8603869745571893, 1.0], [0.26321206579013934, 1.0]]]}
ecp = {}
CPU time:        27.31
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.606921628902402  E_coul = 0.9761604352318537
init E= -2.63076119367055
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.83435699]
E1 = -3.637687519466621  E_coul = 0.9928841302901109
cycle= 1 E= -2.64480338917651  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82595963]
E1 = -3.637687519466621  E_coul = 0.9928841302901109
cycle= 2 E= -2.64480338917651  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.637687519466621  E_coul = 0.9928841302901109
  mo_energy =
[-0.82595963]
E1 = -3.637687519466621  E_coul = 0.9928841302901109
Extra cycle  E= -2.64480338917651  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/h5py_mpi_test/pyscfad_test.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy.optimize import minimize, Bounds

"""
Analytic nuclear gradient for RHF computed by auto-differentiation
"""


def He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    return e

def grad_He_energy(exponent):
    mol = gto.Mole()
    mol.atom    = 'He 0 0 0'  # in Angstrom

    mol.basis = {'He': pyscf.gto.basis.parse(f'''
    He   S
        {exponent[0]}              1.0
        {exponent[1]}              1.0
    ''')}
    mol.verbose = 5
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    return jac.exp

x0 = [0.2432879285E+01, 0.4330512863E+00]
res = minimize(He_energy, x0, jac=grad_He_energy,
               bounds=Bounds(lb=1e-4),
               method='SLSQP', tol=1e-6)

print(res.x)
print(res.values())

# print("E", He_energy(71.6168370))

# print(f'Nuclaer gradient:\n{jac.coords}')
# print(f'Gradient wrt basis exponents:\n{jac.exp}')
# print(f'Gradient wrt basis contraction coefficients:\n{jac.ctr_coeff}')#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Jan 17 2023, 16:42:09) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Fri Mar  3 21:43:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] conf_file /Users/deyanmihaylov/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 2
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  1.86038681103        1
                                0.263212072991       1

nuclear repulsion = 0
number of shells = 1
number of NR pGTOs = 2
number of NR cGTOs = 1
basis = {'He': [[0, [1.8603868110306838, 1.0], [0.2632120729908334, 1.0]]]}
ecp = {}
CPU time:        27.54
Set gradient conv threshold to 3.16228e-05
cond(S) = 1.0
E1 = -3.6069216201596745  E_coul = 0.9761604195747179
init E= -2.63076120058496
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  mo_energy =
[-0.834357]
E1 = -3.6376875067610275  E_coul = 0.9928841122421647
cycle= 1 E= -2.64480339451886  delta_E= -0.014  |g|=    0  |ddm|= 0.0169
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
  mo_energy =
[-0.82595964]
E1 = -3.6376875067610275  E_coul = 0.9928841122421647
cycle= 2 E= -2.64480339451886  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
E1 = -3.6376875067610275  E_coul = 0.9928841122421647
  mo_energy =
[-0.82595964]
E1 = -3.6376875067610275  E_coul = 0.9928841122421647
Extra cycle  E= -2.64480339451886  delta_E=    0  |g|=    0  |ddm|=    0
    CPU time for scf_cycle      0.04 sec, wall time      0.04 sec
[1.86038681 0.26321207]
dict_values([array([1.86038681, 0.26321207]), -2.644803394518863, array([-0.0317776 ,  0.05851764]), 12, 41, 12, 0, 'Optimization terminated successfully', True])
