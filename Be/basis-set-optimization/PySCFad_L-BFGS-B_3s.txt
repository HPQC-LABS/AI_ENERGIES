#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6936548066        1
[INPUT] 0    0    [1    /1   ]  3.86936548066        1
[INPUT] 0    0    [1    /1   ]  0.100124986448       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.693654806627904, 1.0]], [0, [3.8693654806627906, 1.0]], [0, [0.10012498644798325, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69365481]
bas 1, expnt(s) = [3.86936548]
bas 2, expnt(s) = [0.10012499]
CPU time:         1.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69365481 39.19627887  3.86936548  6.97019357  0.10012499  0.44969895]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9329350604235014
cond(S) = 2.7419759576792306
E1 = -18.10718469521679  E_coul = 4.490285402229839
init E= -13.616899292987
    CPU time for initialize scf      0.11 sec, wall time      0.11 sec
  HOMO = -0.316983575646712  LUMO = 37.3974841952326
  mo_energy =
[-4.3672085  -0.31698358 37.3974842 ]
E1 = -18.5489628261219  E_coul = 4.692526156456034
cycle= 1 E= -13.8564366696659  delta_E= -0.24  |g|= 0.0317  |ddm|= 0.049
    CPU time for cycle= 1      0.24 sec, wall time      0.25 sec
diis-norm(errvec)=0.038834
diis-c [-0.00150808  1.        ]
  HOMO = -0.288331112247722  LUMO = 37.5581802063608
  mo_energy =
[-4.29363023 -0.28833111 37.55818021]
E1 = -18.548044299782738  E_coul = 4.69159514571417
cycle= 2 E= -13.8564491540686  delta_E= -1.25e-05  |g|= 0.000818  |ddm|= 0.00145
    CPU time for cycle= 2      0.07 sec, wall time      0.07 sec
diis-norm(errvec)=0.00104004
diis-c [-4.50796390e-08 -2.69241221e-02  1.02692412e+00]
  HOMO = -0.288341638542421  LUMO = 37.5569736765313
  mo_energy =
[-4.29409791 -0.28834164 37.55697368]
E1 = -18.548020772384543  E_coul = 4.691571610065709
cycle= 3 E= -13.8564491623188  delta_E= -8.25e-09  |g|= 2.24e-06  |ddm|= 3.65e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.80482e-06
diis-c [ 2.01170325e-20  3.31144116e-04 -1.33099824e-02  1.01297884e+00]
  HOMO = -0.288341590252782  LUMO = 37.5569740688639
  mo_energy =
[-4.29409718 -0.28834159 37.55697407]
E1 = -18.54802077499581  E_coul = 4.6915716126769125
cycle= 4 E= -13.8564491623189  delta_E= -6.04e-14  |g|= 1.07e-10  |ddm|= 1.03e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.54802077499581  E_coul = 4.6915716126769125
  HOMO = -0.28834159026004  LUMO = 37.5569740688657
  mo_energy =
[-4.29409718 -0.28834159 37.55697407]
E1 = -18.54802077499877  E_coul = 4.691571612679873
Extra cycle  E= -13.8564491623189  delta_E=    0  |g|= 2.91e-12  |ddm|= 4.61e-12
    CPU time for scf_cycle      0.45 sec, wall time      0.46 sec
exp = [38.69365481  3.86936548  0.10012499]
E = -13.856449162318896
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6936548066        1
[INPUT] 0    0    [1    /1   ]  3.86936548066        1
[INPUT] 0    0    [1    /1   ]  0.100124986448       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.693654806627904, 1.0]], [0, [3.8693654806627906, 1.0]], [0, [0.10012498644798325, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69365481]
bas 1, expnt(s) = [3.86936548]
bas 2, expnt(s) = [0.10012499]
CPU time:         1.61
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69365481 39.19627887  3.86936548  6.97019357  0.10012499  0.44969895]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9329350604235014
cond(S) = 2.7419759576792306
E1 = -18.10718469521679  E_coul = 4.490285402229839
init E= -13.616899292987
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.316983575646712  LUMO = 37.3974841952326
  mo_energy =
[-4.3672085  -0.31698358 37.3974842 ]
E1 = -18.5489628261219  E_coul = 4.692526156456034
cycle= 1 E= -13.8564366696659  delta_E= -0.24  |g|= 0.0317  |ddm|= 0.049
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.038834
diis-c [-0.00150808  1.        ]
  HOMO = -0.288331112247722  LUMO = 37.5581802063608
  mo_energy =
[-4.29363023 -0.28833111 37.55818021]
E1 = -18.548044299782738  E_coul = 4.69159514571417
cycle= 2 E= -13.8564491540686  delta_E= -1.25e-05  |g|= 0.000818  |ddm|= 0.00145
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00104004
diis-c [-4.50796390e-08 -2.69241221e-02  1.02692412e+00]
  HOMO = -0.288341638542421  LUMO = 37.5569736765313
  mo_energy =
[-4.29409791 -0.28834164 37.55697368]
E1 = -18.548020772384543  E_coul = 4.691571610065709
cycle= 3 E= -13.8564491623188  delta_E= -8.25e-09  |g|= 2.24e-06  |ddm|= 3.65e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.80482e-06
diis-c [ 2.01170325e-20  3.31144116e-04 -1.33099824e-02  1.01297884e+00]
  HOMO = -0.288341590252782  LUMO = 37.5569740688639
  mo_energy =
[-4.29409718 -0.28834159 37.55697407]
E1 = -18.54802077499581  E_coul = 4.6915716126769125
cycle= 4 E= -13.8564491623189  delta_E= -6.04e-14  |g|= 1.07e-10  |ddm|= 1.03e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.54802077499581  E_coul = 4.6915716126769125
  HOMO = -0.28834159026004  LUMO = 37.5569740688657
  mo_energy =
[-4.29409718 -0.28834159 37.55697407]
E1 = -18.54802077499877  E_coul = 4.691571612679873
Extra cycle  E= -13.8564491623189  delta_E=    0  |g|= 2.91e-12  |ddm|= 4.61e-12
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.7419759576792306
E1 = -18.54802077499877  E_coul = 4.691571612679873
init E= -13.8564491623189
    CPU time for initialize scf      0.22 sec, wall time      0.23 sec
  HOMO = -0.288341590260012  LUMO = 37.5569740688696
  mo_energy =
[-4.29409718 -0.28834159 37.55697407]
E1 = -18.548020774998847  E_coul = 4.691571612679952
cycle= 1 E= -13.8564491623189  delta_E=    0  |g|= 6.65e-14  |ddm|= 1.24e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.548020774998847  E_coul = 4.691571612679952
  HOMO = -0.288341590260011  LUMO = 37.5569740688697
  mo_energy =
[-4.29409718 -0.28834159 37.55697407]
E1 = -18.548020774998843  E_coul = 4.691571612679952
Extra cycle  E= -13.8564491623189  delta_E= 3.55e-15  |g|= 5.33e-15  |ddm|= 3.22e-15
    CPU time for scf_cycle      0.79 sec, wall time      0.79 sec
exp = [38.69365481  3.86936548  0.10012499]
grad_E = [ 0.01200387  0.16795321 -0.37622005]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6816509413        1
[INPUT] 0    0    [1    /1   ]  3.70141226709        1
[INPUT] 0    0    [1    /1   ]  0.476345034483       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.68165094128781, 1.0]], [0, [3.701412267090828, 1.0]], [0, [0.4763450344832337, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.68165094]
bas 1, expnt(s) = [3.70141227]
bas 2, expnt(s) = [0.47634503]
CPU time:         6.09
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.68165094 39.18715867  3.70141227  6.74202905  0.47634503  1.44862593]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 2.9267353604261315
cond(S) = 4.424159405622345
E1 = -16.67736098866358  E_coul = 4.013212417683126
init E= -12.6641485709805
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = 0.260680732073457  LUMO = 37.749598985069
  mo_energy =
[-4.64758461  0.26068073 37.74959899]
E1 = -19.147907819254232  E_coul = 6.569894869164869
cycle= 1 E= -12.5780129500894  delta_E= 0.0861  |g|= 0.129  |ddm|= 1.81
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.176531
diis-c [-0.03116334  1.        ]
  HOMO = 0.654820986004903  LUMO = 38.8947813280474
  mo_energy =
[-3.65897789  0.65482099 38.89478133]
E1 = -19.144575977744235  E_coul = 6.56636202869154
cycle= 2 E= -12.5782139490527  delta_E= -0.000201  |g|= 0.00351  |ddm|= 0.00602
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00501048
diis-c [-2.02597401e-07 -2.90906299e-02  1.02909063e+00]
  HOMO = 0.65459482068103  LUMO = 38.8900575191554
  mo_energy =
[-3.66057232  0.65459482 38.89005752]
E1 = -19.144489795198425  E_coul = 6.566275696828054
cycle= 3 E= -12.5782140983704  delta_E= -1.49e-07  |g|= 8.85e-06  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.01527e-06
diis-c [-1.14078397e-17  5.22131604e-04 -1.85970865e-02  1.01807495e+00]
  HOMO = 0.654596068569539  LUMO = 38.8900702946164
  mo_energy =
[-3.66056513  0.65459607 38.89007029]
E1 = -19.144490074540418  E_coul = 6.566275976169008
cycle= 4 E= -12.5782140983714  delta_E= -1.04e-12  |g|= 2.48e-09  |ddm|= 6.39e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.144490074540418  E_coul = 6.566275976169008
  HOMO = 0.654596068139557  LUMO = 38.8900702951456
  mo_energy =
[-3.66056513  0.65459607 38.8900703 ]
E1 = -19.144490074613564  E_coul = 6.56627597624216
Extra cycle  E= -12.5782140983714  delta_E= 5.33e-15  |g|= 6.63e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [38.68165094  3.70141227  0.47634503]
E = -12.578214098371404
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6816509413        1
[INPUT] 0    0    [1    /1   ]  3.70141226709        1
[INPUT] 0    0    [1    /1   ]  0.476345034483       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.68165094128781, 1.0]], [0, [3.701412267090828, 1.0]], [0, [0.4763450344832337, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.68165094]
bas 1, expnt(s) = [3.70141227]
bas 2, expnt(s) = [0.47634503]
CPU time:         6.21
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.68165094 39.18715867  3.70141227  6.74202905  0.47634503  1.44862593]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 2.9267353604261315
cond(S) = 4.424159405622345
E1 = -16.67736098866358  E_coul = 4.013212417683126
init E= -12.6641485709805
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = 0.260680732073457  LUMO = 37.749598985069
  mo_energy =
[-4.64758461  0.26068073 37.74959899]
E1 = -19.147907819254232  E_coul = 6.569894869164869
cycle= 1 E= -12.5780129500894  delta_E= 0.0861  |g|= 0.129  |ddm|= 1.81
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.176531
diis-c [-0.03116334  1.        ]
  HOMO = 0.654820986004903  LUMO = 38.8947813280474
  mo_energy =
[-3.65897789  0.65482099 38.89478133]
E1 = -19.144575977744235  E_coul = 6.56636202869154
cycle= 2 E= -12.5782139490527  delta_E= -0.000201  |g|= 0.00351  |ddm|= 0.00602
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00501048
diis-c [-2.02597401e-07 -2.90906299e-02  1.02909063e+00]
  HOMO = 0.65459482068103  LUMO = 38.8900575191554
  mo_energy =
[-3.66057232  0.65459482 38.89005752]
E1 = -19.144489795198425  E_coul = 6.566275696828054
cycle= 3 E= -12.5782140983704  delta_E= -1.49e-07  |g|= 8.85e-06  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.01527e-06
diis-c [-1.14078397e-17  5.22131604e-04 -1.85970865e-02  1.01807495e+00]
  HOMO = 0.654596068569539  LUMO = 38.8900702946164
  mo_energy =
[-3.66056513  0.65459607 38.89007029]
E1 = -19.144490074540418  E_coul = 6.566275976169008
cycle= 4 E= -12.5782140983714  delta_E= -1.04e-12  |g|= 2.48e-09  |ddm|= 6.39e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.144490074540418  E_coul = 6.566275976169008
  HOMO = 0.654596068139557  LUMO = 38.8900702951456
  mo_energy =
[-3.66056513  0.65459607 38.8900703 ]
E1 = -19.144490074613564  E_coul = 6.56627597624216
Extra cycle  E= -12.5782140983714  delta_E= 5.33e-15  |g|= 6.63e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 4.424159405622345
E1 = -19.144490074613564  E_coul = 6.56627597624216
init E= -12.5782140983714
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = 0.654596068144192  LUMO = 38.890070295237
  mo_energy =
[-3.66056513  0.65459607 38.8900703 ]
E1 = -19.144490074615284  E_coul = 6.566275976243871
cycle= 1 E= -12.5782140983714  delta_E= -8.88e-15  |g|= 1.82e-12  |ddm|= 2.94e-12
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.144490074615284  E_coul = 6.566275976243871
  HOMO = 0.6545960681443  LUMO = 38.8900702952393
  mo_energy =
[-3.66056513  0.65459607 38.8900703 ]
E1 = -19.144490074615295  E_coul = 6.566275976243893
Extra cycle  E= -12.5782140983714  delta_E= 1.24e-14  |g|= 4.29e-14  |ddm|= 7.7e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.68165094  3.70141227  0.47634503]
grad_E = [0.01643506 0.0863647  4.83389024]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6932152698        1
[INPUT] 0    0    [1    /1   ]  3.86321566016        1
[INPUT] 0    0    [1    /1   ]  0.113900761955       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69321526983288, 1.0]], [0, [3.8632156601578282, 1.0]], [0, [0.11390076195461746, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69321527]
bas 1, expnt(s) = [3.86321566]
bas 2, expnt(s) = [0.11390076]
CPU time:         8.46
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69321527 39.19594494  3.86321566  6.9618833   0.11390076  0.49534752]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.926821581222732
cond(S) = 2.7797097676773954
E1 = -18.226760866215972  E_coul = 4.601372849899768
init E= -13.6253880163162
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302034161877207  LUMO = 37.4543368159087
  mo_energy =
[-4.32741016 -0.30203416 37.45433682]
E1 = -18.678587821265918  E_coul = 4.820809560602649
cycle= 1 E= -13.8577782606633  delta_E= -0.232  |g|= 0.033  |ddm|= 0.0612
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0415338
diis-c [-0.00172505  1.        ]
  HOMO = -0.271039311010999  LUMO = 37.6216513871816
  mo_energy =
[-4.24745156 -0.27103931 37.62165139]
E1 = -18.67765878117715  E_coul = 4.81986712832041
cycle= 2 E= -13.8577916528567  delta_E= -1.34e-05  |g|= 0.000884  |ddm|= 0.00146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113813
diis-c [-1.81878772e-08 -2.79705759e-02  1.02797058e+00]
  HOMO = -0.271051042839047  LUMO = 37.6203870603927
  mo_energy =
[-4.24792441 -0.27105104 37.62038706]
E1 = -18.677634046149535  E_coul = 4.819842383691892
cycle= 3 E= -13.8577916624576  delta_E= -9.6e-09  |g|= 1.43e-06  |ddm|= 3.89e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.67505e-06
diis-c [-1.75229941e-19  3.47425982e-04 -1.28853960e-02  1.01253797e+00]
  HOMO = -0.271050999492184  LUMO = 37.6203880720351
  mo_energy =
[-4.24792363 -0.271051   37.62038807]
E1 = -18.6776340631031  E_coul = 4.819842400645426
cycle= 4 E= -13.8577916624577  delta_E= -3.02e-14  |g|= 1.15e-10  |ddm|= 7.13e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.6776340631031  E_coul = 4.819842400645426
  HOMO = -0.271050999497795  LUMO = 37.6203880720541
  mo_energy =
[-4.24792363 -0.271051   37.62038807]
E1 = -18.67763406310628  E_coul = 4.819842400648606
Extra cycle  E= -13.8577916624577  delta_E= 1.78e-15  |g|= 3.15e-12  |ddm|= 4.97e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [38.69321527  3.86321566  0.11390076]
E = -13.857791662457672
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6932152698        1
[INPUT] 0    0    [1    /1   ]  3.86321566016        1
[INPUT] 0    0    [1    /1   ]  0.113900761955       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69321526983288, 1.0]], [0, [3.8632156601578282, 1.0]], [0, [0.11390076195461746, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69321527]
bas 1, expnt(s) = [3.86321566]
bas 2, expnt(s) = [0.11390076]
CPU time:         8.60
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69321527 39.19594494  3.86321566  6.9618833   0.11390076  0.49534752]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.926821581222732
cond(S) = 2.7797097676773954
E1 = -18.226760866215972  E_coul = 4.601372849899768
init E= -13.6253880163162
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302034161877207  LUMO = 37.4543368159087
  mo_energy =
[-4.32741016 -0.30203416 37.45433682]
E1 = -18.678587821265918  E_coul = 4.820809560602649
cycle= 1 E= -13.8577782606633  delta_E= -0.232  |g|= 0.033  |ddm|= 0.0612
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0415338
diis-c [-0.00172505  1.        ]
  HOMO = -0.271039311010999  LUMO = 37.6216513871816
  mo_energy =
[-4.24745156 -0.27103931 37.62165139]
E1 = -18.67765878117715  E_coul = 4.81986712832041
cycle= 2 E= -13.8577916528567  delta_E= -1.34e-05  |g|= 0.000884  |ddm|= 0.00146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113813
diis-c [-1.81878772e-08 -2.79705759e-02  1.02797058e+00]
  HOMO = -0.271051042839047  LUMO = 37.6203870603927
  mo_energy =
[-4.24792441 -0.27105104 37.62038706]
E1 = -18.677634046149535  E_coul = 4.819842383691892
cycle= 3 E= -13.8577916624576  delta_E= -9.6e-09  |g|= 1.43e-06  |ddm|= 3.89e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.67505e-06
diis-c [-1.75229941e-19  3.47425982e-04 -1.28853960e-02  1.01253797e+00]
  HOMO = -0.271050999492184  LUMO = 37.6203880720351
  mo_energy =
[-4.24792363 -0.271051   37.62038807]
E1 = -18.6776340631031  E_coul = 4.819842400645426
cycle= 4 E= -13.8577916624577  delta_E= -3.02e-14  |g|= 1.15e-10  |ddm|= 7.13e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.6776340631031  E_coul = 4.819842400645426
  HOMO = -0.271050999497795  LUMO = 37.6203880720541
  mo_energy =
[-4.24792363 -0.271051   37.62038807]
E1 = -18.67763406310628  E_coul = 4.819842400648606
Extra cycle  E= -13.8577916624577  delta_E= 1.78e-15  |g|= 3.15e-12  |ddm|= 4.97e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.7797097676773954
E1 = -18.67763406310628  E_coul = 4.819842400648606
init E= -13.8577916624577
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.271050999497759  LUMO = 37.6203880720584
  mo_energy =
[-4.24792363 -0.271051   37.62038807]
E1 = -18.677634063106353  E_coul = 4.819842400648684
cycle= 1 E= -13.8577916624577  delta_E= 3.55e-15  |g|= 7.14e-14  |ddm|= 1.34e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.677634063106353  E_coul = 4.819842400648684
  HOMO = -0.271050999497759  LUMO = 37.6203880720585
  mo_energy =
[-4.24792363 -0.271051   37.62038807]
E1 = -18.67763406310636  E_coul = 4.819842400648689
Extra cycle  E= -13.8577916624577  delta_E= -3.55e-15  |g|= 3.33e-15  |ddm|= 2.65e-15
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.69321527  3.86321566  0.11390076]
grad_E = [0.01217188 0.16018751 0.30691736]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.693074394         1
[INPUT] 0    0    [1    /1   ]  3.86137941947        1
[INPUT] 0    0    [1    /1   ]  0.10914068554        1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69307439398985, 1.0]], [0, [3.861379419470837, 1.0]], [0, [0.10914068554029241, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69307439]
bas 1, expnt(s) = [3.86137942]
bas 2, expnt(s) = [0.10914069]
CPU time:        10.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69307439 39.19583791  3.86137942  6.95940134  0.10914069  0.47973901]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9313911772627037
cond(S) = 2.764996166546768
E1 = -18.193162373381668  E_coul = 4.567081169043274
init E= -13.6260812043384
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30719011941929  LUMO = 37.4216750171109
  mo_energy =
[-4.33993553 -0.30719012 37.42167502]
E1 = -18.635393828708  E_coul = 4.776376901206671
cycle= 1 E= -13.8590169275013  delta_E= -0.233  |g|= 0.0327  |ddm|= 0.0555
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0408797
diis-c [-0.00167115  1.        ]
  HOMO = -0.277507600338465  LUMO = 37.5843186000608
  mo_energy =
[-4.26381886 -0.2775076  37.5843186 ]
E1 = -18.634459938012554  E_coul = 4.7754297698775705
cycle= 2 E= -13.859030168135  delta_E= -1.32e-05  |g|= 0.000869  |ddm|= 0.00147
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111444
diis-c [-2.59794881e-08 -2.77228671e-02  1.02772287e+00]
  HOMO = -0.277518999598042  LUMO = 37.5830616070283
  mo_energy =
[-4.26429434 -0.277519   37.58306161]
E1 = -18.634435381583458  E_coul = 4.775405204156534
cycle= 3 E= -13.8590301774269  delta_E= -9.29e-09  |g|= 1.69e-06  |ddm|= 3.84e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.02148e-06
diis-c [-1.14878843e-19  3.42081905e-04 -1.29285497e-02  1.01258647e+00]
  HOMO = -0.277518953028835  LUMO = 37.5830625337068
  mo_energy =
[-4.26429353 -0.27751895 37.58306253]
E1 = -18.63443539615982  E_coul = 4.775405218732855
cycle= 4 E= -13.859030177427  delta_E= -4.09e-14  |g|= 1.13e-10  |ddm|= 8.23e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.63443539615982  E_coul = 4.775405218732855
  HOMO = -0.27751895303492  LUMO = 37.5830625337216
  mo_energy =
[-4.26429353 -0.27751895 37.58306253]
E1 = -18.634435396162953  E_coul = 4.7754052187359886
Extra cycle  E= -13.859030177427  delta_E=    0  |g|= 3.08e-12  |ddm|= 4.89e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [38.69307439  3.86137942  0.10914069]
E = -13.859030177426964
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.693074394         1
[INPUT] 0    0    [1    /1   ]  3.86137941947        1
[INPUT] 0    0    [1    /1   ]  0.10914068554        1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69307439398985, 1.0]], [0, [3.861379419470837, 1.0]], [0, [0.10914068554029241, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69307439]
bas 1, expnt(s) = [3.86137942]
bas 2, expnt(s) = [0.10914069]
CPU time:        11.02
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69307439 39.19583791  3.86137942  6.95940134  0.10914069  0.47973901]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9313911772627037
cond(S) = 2.764996166546768
E1 = -18.193162373381668  E_coul = 4.567081169043274
init E= -13.6260812043384
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30719011941929  LUMO = 37.4216750171109
  mo_energy =
[-4.33993553 -0.30719012 37.42167502]
E1 = -18.635393828708  E_coul = 4.776376901206671
cycle= 1 E= -13.8590169275013  delta_E= -0.233  |g|= 0.0327  |ddm|= 0.0555
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0408797
diis-c [-0.00167115  1.        ]
  HOMO = -0.277507600338465  LUMO = 37.5843186000608
  mo_energy =
[-4.26381886 -0.2775076  37.5843186 ]
E1 = -18.634459938012554  E_coul = 4.7754297698775705
cycle= 2 E= -13.859030168135  delta_E= -1.32e-05  |g|= 0.000869  |ddm|= 0.00147
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111444
diis-c [-2.59794881e-08 -2.77228671e-02  1.02772287e+00]
  HOMO = -0.277518999598042  LUMO = 37.5830616070283
  mo_energy =
[-4.26429434 -0.277519   37.58306161]
E1 = -18.634435381583458  E_coul = 4.775405204156534
cycle= 3 E= -13.8590301774269  delta_E= -9.29e-09  |g|= 1.69e-06  |ddm|= 3.84e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.02148e-06
diis-c [-1.14878843e-19  3.42081905e-04 -1.29285497e-02  1.01258647e+00]
  HOMO = -0.277518953028835  LUMO = 37.5830625337068
  mo_energy =
[-4.26429353 -0.27751895 37.58306253]
E1 = -18.63443539615982  E_coul = 4.775405218732855
cycle= 4 E= -13.859030177427  delta_E= -4.09e-14  |g|= 1.13e-10  |ddm|= 8.23e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.63443539615982  E_coul = 4.775405218732855
  HOMO = -0.27751895303492  LUMO = 37.5830625337216
  mo_energy =
[-4.26429353 -0.27751895 37.58306253]
E1 = -18.634435396162953  E_coul = 4.7754052187359886
Extra cycle  E= -13.859030177427  delta_E=    0  |g|= 3.08e-12  |ddm|= 4.89e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.764996166546768
E1 = -18.634435396162953  E_coul = 4.7754052187359886
init E= -13.859030177427
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.277518953034886  LUMO = 37.5830625337258
  mo_energy =
[-4.26429353 -0.27751895 37.58306253]
E1 = -18.634435396163024  E_coul = 4.775405218736066
cycle= 1 E= -13.859030177427  delta_E= 5.33e-15  |g|= 8.76e-14  |ddm|= 1.31e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.634435396163024  E_coul = 4.775405218736066
  HOMO = -0.277518953034886  LUMO = 37.5830625337259
  mo_energy =
[-4.26429353 -0.27751895 37.58306253]
E1 = -18.634435396163013  E_coul = 4.775405218736063
Extra cycle  E= -13.859030177427  delta_E= 8.88e-15  |g|= 1.08e-14  |ddm|= 4.26e-15
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.69307439  3.86137942  0.10914069]
grad_E = [0.01217606 0.16075307 0.08660396]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6925021112        1
[INPUT] 0    0    [1    /1   ]  3.85378220398        1
[INPUT] 0    0    [1    /1   ]  0.105902402137       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69250211116871, 1.0]], [0, [3.8537822039776546, 1.0]], [0, [0.10590240213728268, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69250211]
bas 1, expnt(s) = [3.8537822]
bas 2, expnt(s) = [0.1059024]
CPU time:        13.29
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69250211 39.19540312  3.8537822   6.94912941  0.1059024   0.46902326]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.933521238298163
cond(S) = 2.7528313059513367
E1 = -18.168511357458414  E_coul = 4.541019043379447
init E= -13.627492314079
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.310576984540969  LUMO = 37.3752684387446
  mo_energy =
[-4.35013872 -0.31057698 37.37526844]
E1 = -18.60353608631037  E_coul = 4.743272847892654
cycle= 1 E= -13.8602632384177  delta_E= -0.233  |g|= 0.0331  |ddm|= 0.0527
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0411922
diis-c [-0.0016968  1.       ]
  HOMO = -0.281713486817892  LUMO = 37.5334536376793
  mo_energy =
[-4.27678834 -0.28171349 37.53345364]
E1 = -18.602585586212044  E_coul = 4.742308737585057
cycle= 2 E= -13.860276848627  delta_E= -1.36e-05  |g|= 0.000874  |ddm|= 0.00149
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111821
diis-c [-3.23349392e-08 -2.75308563e-02  1.02753086e+00]
  HOMO = -0.281724773045992  LUMO = 37.5321808224872
  mo_energy =
[-4.27727256 -0.28172477 37.53218082]
E1 = -18.602560771449127  E_coul = 4.742283913414005
cycle= 3 E= -13.8602768580351  delta_E= -9.41e-09  |g|= 1.88e-06  |ddm|= 3.87e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=2.27611e-06
diis-c [-1.26737305e-19  3.38423288e-04 -1.29779704e-02  1.01263955e+00]
  HOMO = -0.281724724731132  LUMO = 37.5321816599182
  mo_energy =
[-4.27727174 -0.28172472 37.53218166]
E1 = -18.60256078372734  E_coul = 4.742283925692166
cycle= 4 E= -13.8602768580352  delta_E= -5.33e-14  |g|= 1.16e-10  |ddm|= 9.01e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.60256078372734  E_coul = 4.742283925692166
  HOMO = -0.281724724737726  LUMO = 37.5321816599301
  mo_energy =
[-4.27727174 -0.28172472 37.53218166]
E1 = -18.602560783730546  E_coul = 4.7422839256953795
Extra cycle  E= -13.8602768580352  delta_E= 7.11e-15  |g|= 3.16e-12  |ddm|= 5.02e-12
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [38.69250211  3.8537822   0.1059024 ]
E = -13.860276858035167
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6925021112        1
[INPUT] 0    0    [1    /1   ]  3.85378220398        1
[INPUT] 0    0    [1    /1   ]  0.105902402137       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69250211116871, 1.0]], [0, [3.8537822039776546, 1.0]], [0, [0.10590240213728268, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69250211]
bas 1, expnt(s) = [3.8537822]
bas 2, expnt(s) = [0.1059024]
CPU time:        13.49
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69250211 39.19540312  3.8537822   6.94912941  0.1059024   0.46902326]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.933521238298163
cond(S) = 2.7528313059513367
E1 = -18.168511357458414  E_coul = 4.541019043379447
init E= -13.627492314079
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.310576984540969  LUMO = 37.3752684387446
  mo_energy =
[-4.35013872 -0.31057698 37.37526844]
E1 = -18.60353608631037  E_coul = 4.743272847892654
cycle= 1 E= -13.8602632384177  delta_E= -0.233  |g|= 0.0331  |ddm|= 0.0527
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0411922
diis-c [-0.0016968  1.       ]
  HOMO = -0.281713486817892  LUMO = 37.5334536376793
  mo_energy =
[-4.27678834 -0.28171349 37.53345364]
E1 = -18.602585586212044  E_coul = 4.742308737585057
cycle= 2 E= -13.860276848627  delta_E= -1.36e-05  |g|= 0.000874  |ddm|= 0.00149
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111821
diis-c [-3.23349392e-08 -2.75308563e-02  1.02753086e+00]
  HOMO = -0.281724773045992  LUMO = 37.5321808224872
  mo_energy =
[-4.27727256 -0.28172477 37.53218082]
E1 = -18.602560771449127  E_coul = 4.742283913414005
cycle= 3 E= -13.8602768580351  delta_E= -9.41e-09  |g|= 1.88e-06  |ddm|= 3.87e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.27611e-06
diis-c [-1.26737305e-19  3.38423288e-04 -1.29779704e-02  1.01263955e+00]
  HOMO = -0.281724724731132  LUMO = 37.5321816599182
  mo_energy =
[-4.27727174 -0.28172472 37.53218166]
E1 = -18.60256078372734  E_coul = 4.742283925692166
cycle= 4 E= -13.8602768580352  delta_E= -5.33e-14  |g|= 1.16e-10  |ddm|= 9.01e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.60256078372734  E_coul = 4.742283925692166
  HOMO = -0.281724724737726  LUMO = 37.5321816599301
  mo_energy =
[-4.27727174 -0.28172472 37.53218166]
E1 = -18.602560783730546  E_coul = 4.7422839256953795
Extra cycle  E= -13.8602768580352  delta_E= 7.11e-15  |g|= 3.16e-12  |ddm|= 5.02e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.7528313059513367
E1 = -18.602560783730546  E_coul = 4.7422839256953795
init E= -13.8602768580352
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.281724724737693  LUMO = 37.5321816599344
  mo_energy =
[-4.27727174 -0.28172472 37.53218166]
E1 = -18.602560783730627  E_coul = 4.742283925695465
cycle= 1 E= -13.8602768580352  delta_E= 3.55e-15  |g|= 7.71e-14  |ddm|= 1.34e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.602560783730627  E_coul = 4.742283925695465
  HOMO = -0.281724724737693  LUMO = 37.5321816599345
  mo_energy =
[-4.27727174 -0.28172472 37.53218166]
E1 = -18.602560783730635  E_coul = 4.7422839256954665
Extra cycle  E= -13.8602768580352  delta_E= -3.55e-15  |g|= 1.11e-14  |ddm|= 3.91e-15
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [38.69250211  3.8537822   0.1059024 ]
grad_E = [ 0.01227886  0.15781057 -0.06949259]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6900731226        1
[INPUT] 0    0    [1    /1   ]  3.82175866757        1
[INPUT] 0    0    [1    /1   ]  0.100220459475       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69007312255004, 1.0]], [0, [3.821758667574007, 1.0]], [0, [0.10022045947481395, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69007312]
bas 1, expnt(s) = [3.82175867]
bas 2, expnt(s) = [0.10022046]
CPU time:        15.67
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69007312 39.19355769  3.82175867  6.9057757   0.10022046  0.45002052]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9352545321077925
cond(S) = 2.7248818134041803
E1 = -18.122374892838902  E_coul = 4.489250329856416
init E= -13.6331245629825
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.316167041124423  LUMO = 37.2231771833512
  mo_energy =
[-4.37210891 -0.31616704 37.22317718]
E1 = -18.54127733864584  E_coul = 4.677368195025659
cycle= 1 E= -13.8639091436202  delta_E= -0.231  |g|= 0.0355  |ddm|= 0.051
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.043868
diis-c [-0.0019244  1.       ]
  HOMO = -0.288691163852584  LUMO = 37.3692336558599
  mo_energy =
[-4.30458695 -0.28869116 37.36923366]
E1 = -18.54025795538512  E_coul = 4.676333140809931
cycle= 2 E= -13.8639248145752  delta_E= -1.57e-05  |g|= 0.000926  |ddm|= 0.00161
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0011825
diis-c [-4.60239425e-08 -2.72306786e-02  1.02723068e+00]
  HOMO = -0.28870254325941  LUMO = 37.3678707613974
  mo_energy =
[-4.3051074  -0.28870254 37.36787076]
E1 = -18.540231554914374  E_coul = 4.676306729740313
cycle= 3 E= -13.8639248251741  delta_E= -1.06e-08  |g|= 2.23e-06  |ddm|= 4.12e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.74854e-06
diis-c [-8.34327453e-20  3.32060692e-04 -1.30235377e-02  1.01269148e+00]
  HOMO = -0.288702491984383  LUMO = 37.3678714487277
  mo_energy =
[-4.30510655 -0.28870249 37.36787145]
E1 = -18.54023156314867  E_coul = 4.676306737974542
cycle= 4 E= -13.8639248251741  delta_E= -6.57e-14  |g|= 1.34e-10  |ddm|= 1.05e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.54023156314867  E_coul = 4.676306737974542
  HOMO = -0.288702491992291  LUMO = 37.3678714487349
  mo_energy =
[-4.30510655 -0.28870249 37.36787145]
E1 = -18.540231563152368  E_coul = 4.676306737978241
Extra cycle  E= -13.8639248251741  delta_E=    0  |g|= 3.62e-12  |ddm|= 5.78e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [38.69007312  3.82175867  0.10022046]
E = -13.863924825174127
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:15:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6900731226        1
[INPUT] 0    0    [1    /1   ]  3.82175866757        1
[INPUT] 0    0    [1    /1   ]  0.100220459475       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.69007312255004, 1.0]], [0, [3.821758667574007, 1.0]], [0, [0.10022045947481395, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.69007312]
bas 1, expnt(s) = [3.82175867]
bas 2, expnt(s) = [0.10022046]
CPU time:        15.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.69007312 39.19355769  3.82175867  6.9057757   0.10022046  0.45002052]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9352545321077925
cond(S) = 2.7248818134041803
E1 = -18.122374892838902  E_coul = 4.489250329856416
init E= -13.6331245629825
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.316167041124423  LUMO = 37.2231771833512
  mo_energy =
[-4.37210891 -0.31616704 37.22317718]
E1 = -18.54127733864584  E_coul = 4.677368195025659
cycle= 1 E= -13.8639091436202  delta_E= -0.231  |g|= 0.0355  |ddm|= 0.051
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.043868
diis-c [-0.0019244  1.       ]
  HOMO = -0.288691163852584  LUMO = 37.3692336558599
  mo_energy =
[-4.30458695 -0.28869116 37.36923366]
E1 = -18.54025795538512  E_coul = 4.676333140809931
cycle= 2 E= -13.8639248145752  delta_E= -1.57e-05  |g|= 0.000926  |ddm|= 0.00161
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0011825
diis-c [-4.60239425e-08 -2.72306786e-02  1.02723068e+00]
  HOMO = -0.28870254325941  LUMO = 37.3678707613974
  mo_energy =
[-4.3051074  -0.28870254 37.36787076]
E1 = -18.540231554914374  E_coul = 4.676306729740313
cycle= 3 E= -13.8639248251741  delta_E= -1.06e-08  |g|= 2.23e-06  |ddm|= 4.12e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.74854e-06
diis-c [-8.34327453e-20  3.32060692e-04 -1.30235377e-02  1.01269148e+00]
  HOMO = -0.288702491984383  LUMO = 37.3678714487277
  mo_energy =
[-4.30510655 -0.28870249 37.36787145]
E1 = -18.54023156314867  E_coul = 4.676306737974542
cycle= 4 E= -13.8639248251741  delta_E= -6.57e-14  |g|= 1.34e-10  |ddm|= 1.05e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.54023156314867  E_coul = 4.676306737974542
  HOMO = -0.288702491992291  LUMO = 37.3678714487349
  mo_energy =
[-4.30510655 -0.28870249 37.36787145]
E1 = -18.540231563152368  E_coul = 4.676306737978241
Extra cycle  E= -13.8639248251741  delta_E=    0  |g|= 3.62e-12  |ddm|= 5.78e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.7248818134041803
E1 = -18.540231563152368  E_coul = 4.676306737978241
init E= -13.8639248251741
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.288702491992256  LUMO = 37.3678714487399
  mo_energy =
[-4.30510655 -0.28870249 37.36787145]
E1 = -18.540231563152474  E_coul = 4.676306737978339
cycle= 1 E= -13.8639248251741  delta_E= -7.11e-15  |g|= 9.41e-14  |ddm|= 1.53e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.540231563152474  E_coul = 4.676306737978339
  HOMO = -0.288702491992255  LUMO = 37.36787144874
  mo_energy =
[-4.30510655 -0.28870249 37.36787145]
E1 = -18.540231563152478  E_coul = 4.676306737978343
Extra cycle  E= -13.8639248251741  delta_E=    0  |g|= 6.59e-15  |ddm|= 3.93e-15
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [38.69007312  3.82175867  0.10022046]
grad_E = [ 0.01275413  0.14268288 -0.35480717]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.684399344         1
[INPUT] 0    0    [1    /1   ]  3.74800364262        1
[INPUT] 0    0    [1    /1   ]  0.0950642219937      1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.68439934404898, 1.0]], [0, [3.748003642617921, 1.0]], [0, [0.095064221993719, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.68439934]
bas 1, expnt(s) = [3.74800364]
bas 2, expnt(s) = [0.09506422]
CPU time:        18.01
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.68439934 39.1892469   3.74800364  6.80557818  0.09506422  0.43254157]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9351480911808148
cond(S) = 2.683402997845321
E1 = -18.07898912428153  E_coul = 4.433636214826203
init E= -13.6453529094553
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.32045700302588  LUMO = 36.9175761282789
  mo_energy =
[-4.3987079  -0.320457   36.91757613]
E1 = -18.471137738685197  E_coul = 4.600546979156128
cycle= 1 E= -13.8705907595291  delta_E= -0.225  |g|= 0.0413  |ddm|= 0.0573
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0512815
diis-c [-0.00262979  1.        ]
  HOMO = -0.294636482452521  LUMO = 37.0407568121293
  mo_energy =
[-4.34039585 -0.29463648 37.04075681]
E1 = -18.469959043542733  E_coul = 4.599346859845263
cycle= 2 E= -13.8706121836975  delta_E= -2.14e-05  |g|= 0.00108  |ddm|= 0.00188
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00137893
diis-c [-6.30133424e-08 -2.71584602e-02  1.02715846e+00]
  HOMO = -0.294648604329522  LUMO = 37.0391578156795
  mo_energy =
[-4.34100037 -0.2946486  37.03915782]
E1 = -18.46992845633949  E_coul = 4.599316258204185
cycle= 3 E= -13.8706121981353  delta_E= -1.44e-08  |g|= 2.57e-06  |ddm|= 4.8e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.1829e-06
diis-c [-1.35737030e-19  3.26749678e-04 -1.28672383e-02  1.01254049e+00]
  HOMO = -0.294648548529488  LUMO = 37.0391585591934
  mo_energy =
[-4.34099942 -0.29464855 37.03915856]
E1 = -18.46992846435201  E_coul = 4.59931626621661
cycle= 4 E= -13.8706121981354  delta_E= -9.59e-14  |g|= 1.82e-10  |ddm|= 1.21e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.46992846435201  E_coul = 4.59931626621661
  HOMO = -0.294648548539437  LUMO = 37.0391585591992
  mo_energy =
[-4.34099942 -0.29464855 37.03915856]
E1 = -18.469928464357018  E_coul = 4.599316266221626
Extra cycle  E= -13.8706121981354  delta_E= 7.11e-15  |g|= 4.94e-12  |ddm|= 7.88e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [38.68439934  3.74800364  0.09506422]
E = -13.870612198135392
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.684399344         1
[INPUT] 0    0    [1    /1   ]  3.74800364262        1
[INPUT] 0    0    [1    /1   ]  0.0950642219937      1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.68439934404898, 1.0]], [0, [3.748003642617921, 1.0]], [0, [0.095064221993719, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.68439934]
bas 1, expnt(s) = [3.74800364]
bas 2, expnt(s) = [0.09506422]
CPU time:        18.21
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.68439934 39.1892469   3.74800364  6.80557818  0.09506422  0.43254157]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9351480911808148
cond(S) = 2.683402997845321
E1 = -18.07898912428153  E_coul = 4.433636214826203
init E= -13.6453529094553
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.32045700302588  LUMO = 36.9175761282789
  mo_energy =
[-4.3987079  -0.320457   36.91757613]
E1 = -18.471137738685197  E_coul = 4.600546979156128
cycle= 1 E= -13.8705907595291  delta_E= -0.225  |g|= 0.0413  |ddm|= 0.0573
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0512815
diis-c [-0.00262979  1.        ]
  HOMO = -0.294636482452521  LUMO = 37.0407568121293
  mo_energy =
[-4.34039585 -0.29463648 37.04075681]
E1 = -18.469959043542733  E_coul = 4.599346859845263
cycle= 2 E= -13.8706121836975  delta_E= -2.14e-05  |g|= 0.00108  |ddm|= 0.00188
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00137893
diis-c [-6.30133424e-08 -2.71584602e-02  1.02715846e+00]
  HOMO = -0.294648604329522  LUMO = 37.0391578156795
  mo_energy =
[-4.34100037 -0.2946486  37.03915782]
E1 = -18.46992845633949  E_coul = 4.599316258204185
cycle= 3 E= -13.8706121981353  delta_E= -1.44e-08  |g|= 2.57e-06  |ddm|= 4.8e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.1829e-06
diis-c [-1.35737030e-19  3.26749678e-04 -1.28672383e-02  1.01254049e+00]
  HOMO = -0.294648548529488  LUMO = 37.0391585591934
  mo_energy =
[-4.34099942 -0.29464855 37.03915856]
E1 = -18.46992846435201  E_coul = 4.59931626621661
cycle= 4 E= -13.8706121981354  delta_E= -9.59e-14  |g|= 1.82e-10  |ddm|= 1.21e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.46992846435201  E_coul = 4.59931626621661
  HOMO = -0.294648548539437  LUMO = 37.0391585591992
  mo_energy =
[-4.34099942 -0.29464855 37.03915856]
E1 = -18.469928464357018  E_coul = 4.599316266221626
Extra cycle  E= -13.8706121981354  delta_E= 7.11e-15  |g|= 4.94e-12  |ddm|= 7.88e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.683402997845321
E1 = -18.469928464357018  E_coul = 4.599316266221626
init E= -13.8706121981354
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294648548539394  LUMO = 37.039158559206
  mo_energy =
[-4.34099942 -0.29464855 37.03915856]
E1 = -18.469928464357157  E_coul = 4.599316266221763
cycle= 1 E= -13.8706121981354  delta_E= -1.78e-15  |g|= 1.2e-13  |ddm|= 2.1e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.469928464357157  E_coul = 4.599316266221763
  HOMO = -0.294648548539392  LUMO = 37.0391585592062
  mo_energy =
[-4.34099942 -0.29464855 37.03915856]
E1 = -18.46992846435716  E_coul = 4.599316266221765
Extra cycle  E= -13.8706121981354  delta_E= -1.78e-15  |g|= 2.94e-15  |ddm|= 5.16e-15
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.68439934  3.74800364  0.09506422]
grad_E = [ 0.013895    0.10425901 -0.61950766]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.674752066         1
[INPUT] 0    0    [1    /1   ]  3.62856819175        1
[INPUT] 0    0    [1    /1   ]  0.0950794555273      1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.67475206604449, 1.0]], [0, [3.6285681917538475, 1.0]], [0, [0.09507945552733128, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.67475207]
bas 1, expnt(s) = [3.62856819]
bas 2, expnt(s) = [0.09507946]
CPU time:        20.52
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.67475207 39.18191678  3.62856819  6.64226948  0.09507946  0.43259355]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.940187507114035
cond(S) = 2.6409383399406434
E1 = -18.089932587777444  E_coul = 4.42592667822083
init E= -13.6640059095566
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.318672649290872  LUMO = 36.4735897051508
  mo_energy =
[-4.40817589 -0.31867265 36.47358971]
E1 = -18.438244177455616  E_coul = 4.559093272440667
cycle= 1 E= -13.8791509050149  delta_E= -0.215  |g|= 0.0515  |ddm|= 0.0726
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0648361
diis-c [-0.00420372  1.        ]
  HOMO = -0.295434707561096  LUMO = 36.5608591262858
  mo_energy =
[-4.36461044 -0.29543471 36.56085913]
E1 = -18.4368047826887  E_coul = 4.55762036113678
cycle= 2 E= -13.8791844215519  delta_E= -3.35e-05  |g|= 0.00136  |ddm|= 0.00232
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00175329
diis-c [-6.85465776e-08 -2.74735235e-02  1.02747352e+00]
  HOMO = -0.295448852998176  LUMO = 36.5588359013888
  mo_energy =
[-4.36535343 -0.29544885 36.5588359 ]
E1 = -18.43676682037441  E_coul = 4.55758237565684
cycle= 3 E= -13.8791844447176  delta_E= -2.32e-08  |g|= 2.63e-06  |ddm|= 6.03e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.21004e-06
diis-c [-1.48230766e-19  3.28808411e-04 -1.25886815e-02  1.01225987e+00]
  HOMO = -0.295448791012564  LUMO = 36.5588372098838
  mo_energy =
[-4.36535223 -0.29544879 36.55883721]
E1 = -18.436766838425264  E_coul = 4.557582393707602
cycle= 4 E= -13.8791844447177  delta_E= -9.24e-14  |g|= 2.88e-10  |ddm|= 1.28e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.436766838425264  E_coul = 4.557582393707602
  HOMO = -0.295448791024904  LUMO = 36.5588372098999
  mo_energy =
[-4.36535223 -0.29544879 36.55883721]
E1 = -18.43676683843314  E_coul = 4.557582393715486
Extra cycle  E= -13.8791844447177  delta_E= 7.11e-15  |g|= 7.79e-12  |ddm|= 1.25e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [38.67475207  3.62856819  0.09507946]
E = -13.879184444717655
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.674752066         1
[INPUT] 0    0    [1    /1   ]  3.62856819175        1
[INPUT] 0    0    [1    /1   ]  0.0950794555273      1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.67475206604449, 1.0]], [0, [3.6285681917538475, 1.0]], [0, [0.09507945552733128, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.67475207]
bas 1, expnt(s) = [3.62856819]
bas 2, expnt(s) = [0.09507946]
CPU time:        20.76
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.67475207 39.18191678  3.62856819  6.64226948  0.09507946  0.43259355]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.940187507114035
cond(S) = 2.6409383399406434
E1 = -18.089932587777444  E_coul = 4.42592667822083
init E= -13.6640059095566
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.318672649290872  LUMO = 36.4735897051508
  mo_energy =
[-4.40817589 -0.31867265 36.47358971]
E1 = -18.438244177455616  E_coul = 4.559093272440667
cycle= 1 E= -13.8791509050149  delta_E= -0.215  |g|= 0.0515  |ddm|= 0.0726
    CPU time for cycle= 1      0.01 sec, wall time      0.03 sec
diis-norm(errvec)=0.0648361
diis-c [-0.00420372  1.        ]
  HOMO = -0.295434707561096  LUMO = 36.5608591262858
  mo_energy =
[-4.36461044 -0.29543471 36.56085913]
E1 = -18.4368047826887  E_coul = 4.55762036113678
cycle= 2 E= -13.8791844215519  delta_E= -3.35e-05  |g|= 0.00136  |ddm|= 0.00232
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00175329
diis-c [-6.85465776e-08 -2.74735235e-02  1.02747352e+00]
  HOMO = -0.295448852998176  LUMO = 36.5588359013888
  mo_energy =
[-4.36535343 -0.29544885 36.5588359 ]
E1 = -18.43676682037441  E_coul = 4.55758237565684
cycle= 3 E= -13.8791844447176  delta_E= -2.32e-08  |g|= 2.63e-06  |ddm|= 6.03e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.21004e-06
diis-c [-1.48230766e-19  3.28808411e-04 -1.25886815e-02  1.01225987e+00]
  HOMO = -0.295448791012564  LUMO = 36.5588372098838
  mo_energy =
[-4.36535223 -0.29544879 36.55883721]
E1 = -18.436766838425264  E_coul = 4.557582393707602
cycle= 4 E= -13.8791844447177  delta_E= -9.24e-14  |g|= 2.88e-10  |ddm|= 1.28e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.436766838425264  E_coul = 4.557582393707602
  HOMO = -0.295448791024904  LUMO = 36.5588372098999
  mo_energy =
[-4.36535223 -0.29544879 36.55883721]
E1 = -18.43676683843314  E_coul = 4.557582393715486
Extra cycle  E= -13.8791844447177  delta_E= 7.11e-15  |g|= 7.79e-12  |ddm|= 1.25e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.6409383399406434
E1 = -18.43676683843314  E_coul = 4.557582393715486
init E= -13.8791844447177
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.295448791024839  LUMO = 36.5588372099108
  mo_energy =
[-4.36535223 -0.29544879 36.55883721]
E1 = -18.436766838433364  E_coul = 4.5575823937157
cycle= 1 E= -13.8791844447177  delta_E= -8.88e-15  |g|= 2.11e-13  |ddm|= 3.31e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.436766838433364  E_coul = 4.5575823937157
  HOMO = -0.295448791024837  LUMO = 36.5588372099111
  mo_energy =
[-4.36535223 -0.29544879 36.55883721]
E1 = -18.436766838433357  E_coul = 4.5575823937157
Extra cycle  E= -13.8791844447177  delta_E= 7.11e-15  |g|= 3.1e-15  |ddm|= 1.02e-14
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [38.67475207  3.62856819  0.09507946]
grad_E = [ 0.01580252  0.03608931 -0.57596955]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6537439514        1
[INPUT] 0    0    [1    /1   ]  3.56823971974        1
[INPUT] 0    0    [1    /1   ]  0.104245401392       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.65374395139683, 1.0]], [0, [3.568239719740798, 1.0]], [0, [0.1042454013919659, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.65374395]
bas 1, expnt(s) = [3.56823972]
bas 2, expnt(s) = [0.1042454]
CPU time:        23.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.65374395 39.16595299  3.56823972  6.55927051  0.1042454   0.4635085 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.946453028366413
cond(S) = 2.6491345456224917
E1 = -18.18659899710016  E_coul = 4.508907557407083
init E= -13.6776914396931
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.308396866389435  LUMO = 36.2909353982011
  mo_energy =
[-4.37881856 -0.30839687 36.2909354 ]
E1 = -18.51082785003046  E_coul = 4.627489496935576
cycle= 1 E= -13.8833383530949  delta_E= -0.206  |g|= 0.0574  |ddm|= 0.0802
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0735314
diis-c [-0.00540687  1.        ]
  HOMO = -0.286312925717886  LUMO = 36.3621725965391
  mo_energy =
[-4.34163185 -0.28631293 36.3621726 ]
E1 = -18.509262175653696  E_coul = 4.625882054685458
cycle= 2 E= -13.8833801209682  delta_E= -4.18e-05  |g|= 0.00154  |ddm|= 0.00254
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0020027
diis-c [-4.44100448e-08 -2.78389602e-02  1.02783896e+00]
  HOMO = -0.286329486550161  LUMO = 36.3599062761693
  mo_energy =
[-4.34244195 -0.28632949 36.35990628]
E1 = -18.509220028224597  E_coul = 4.625839877473316
cycle= 3 E= -13.8833801507513  delta_E= -2.98e-08  |g|= 2.18e-06  |ddm|= 6.78e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.57418e-06
diis-c [-4.13352078e-19  3.41369401e-04 -1.26839578e-02  1.01234259e+00]
  HOMO = -0.286329425526322  LUMO = 36.3599080191025
  mo_energy =
[-4.3424407  -0.28632943 36.35990802]
E1 = -18.509220055685553  E_coul = 4.625839904934214
cycle= 4 E= -13.8833801507513  delta_E= -5.86e-14  |g|= 3.71e-10  |ddm|= 1.11e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.509220055685553  E_coul = 4.625839904934214
  HOMO = -0.286329425539375  LUMO = 36.3599080191357
  mo_energy =
[-4.3424407  -0.28632943 36.35990802]
E1 = -18.50922005569567  E_coul = 4.625839904944337
Extra cycle  E= -13.8833801507513  delta_E= 5.33e-15  |g|= 1e-11  |ddm|= 1.61e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.65374395  3.56823972  0.1042454 ]
E = -13.883380150751334
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6537439514        1
[INPUT] 0    0    [1    /1   ]  3.56823971974        1
[INPUT] 0    0    [1    /1   ]  0.104245401392       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.65374395139683, 1.0]], [0, [3.568239719740798, 1.0]], [0, [0.1042454013919659, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.65374395]
bas 1, expnt(s) = [3.56823972]
bas 2, expnt(s) = [0.1042454]
CPU time:        23.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.65374395 39.16595299  3.56823972  6.55927051  0.1042454   0.4635085 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.946453028366413
cond(S) = 2.6491345456224917
E1 = -18.18659899710016  E_coul = 4.508907557407083
init E= -13.6776914396931
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.308396866389435  LUMO = 36.2909353982011
  mo_energy =
[-4.37881856 -0.30839687 36.2909354 ]
E1 = -18.51082785003046  E_coul = 4.627489496935576
cycle= 1 E= -13.8833383530949  delta_E= -0.206  |g|= 0.0574  |ddm|= 0.0802
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0735314
diis-c [-0.00540687  1.        ]
  HOMO = -0.286312925717886  LUMO = 36.3621725965391
  mo_energy =
[-4.34163185 -0.28631293 36.3621726 ]
E1 = -18.509262175653696  E_coul = 4.625882054685458
cycle= 2 E= -13.8833801209682  delta_E= -4.18e-05  |g|= 0.00154  |ddm|= 0.00254
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0020027
diis-c [-4.44100448e-08 -2.78389602e-02  1.02783896e+00]
  HOMO = -0.286329486550161  LUMO = 36.3599062761693
  mo_energy =
[-4.34244195 -0.28632949 36.35990628]
E1 = -18.509220028224597  E_coul = 4.625839877473316
cycle= 3 E= -13.8833801507513  delta_E= -2.98e-08  |g|= 2.18e-06  |ddm|= 6.78e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.57418e-06
diis-c [-4.13352078e-19  3.41369401e-04 -1.26839578e-02  1.01234259e+00]
  HOMO = -0.286329425526322  LUMO = 36.3599080191025
  mo_energy =
[-4.3424407  -0.28632943 36.35990802]
E1 = -18.509220055685553  E_coul = 4.625839904934214
cycle= 4 E= -13.8833801507513  delta_E= -5.86e-14  |g|= 3.71e-10  |ddm|= 1.11e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.509220055685553  E_coul = 4.625839904934214
  HOMO = -0.286329425539375  LUMO = 36.3599080191357
  mo_energy =
[-4.3424407  -0.28632943 36.35990802]
E1 = -18.50922005569567  E_coul = 4.625839904944337
Extra cycle  E= -13.8833801507513  delta_E= 5.33e-15  |g|= 1e-11  |ddm|= 1.61e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.6491345456224917
E1 = -18.50922005569567  E_coul = 4.625839904944337
init E= -13.8833801507513
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.286329425539278  LUMO = 36.3599080191499
  mo_energy =
[-4.3424407  -0.28632943 36.35990802]
E1 = -18.509220055695945  E_coul = 4.625839904944602
cycle= 1 E= -13.8833801507513  delta_E= -8.88e-15  |g|= 2.64e-13  |ddm|= 4.27e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.509220055695945  E_coul = 4.625839904944602
  HOMO = -0.286329425539275  LUMO = 36.3599080191503
  mo_energy =
[-4.3424407  -0.28632943 36.35990802]
E1 = -18.509220055695952  E_coul = 4.62583990494461
Extra cycle  E= -13.8833801507513  delta_E=    0  |g|= 1.49e-14  |ddm|= 1.19e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.65374395  3.56823972  0.1042454 ]
grad_E = [ 0.01681915 -0.00284165 -0.05656526]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6510405483        1
[INPUT] 0    0    [1    /1   ]  3.5689562465         1
[INPUT] 0    0    [1    /1   ]  0.105652829276       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.65104054834164, 1.0]], [0, [3.5689562465049107, 1.0]], [0, [0.10565282927610958, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.65104055]
bas 1, expnt(s) = [3.56895625]
bas 2, expnt(s) = [0.10565283]
CPU time:        25.67
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.65104055 39.16389856  3.56895625  6.56025834  0.10565283  0.46819403]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9460982333442405
cond(S) = 2.653960615949541
E1 = -18.19936809056715  E_coul = 4.520857166457591
init E= -13.6785109241096
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306948290368519  LUMO = 36.299396270329
  mo_energy =
[-4.37434177 -0.30694829 36.29939627]
E1 = -18.524497558211298  E_coul = 4.641081865631839
cycle= 1 E= -13.8834156925795  delta_E= -0.205  |g|= 0.0575  |ddm|= 0.0804
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.073718
diis-c [-0.00543434  1.        ]
  HOMO = -0.284688404532291  LUMO = 36.371566460086
  mo_energy =
[-4.33649888 -0.2846884  36.37156646]
E1 = -18.522934750503182  E_coul = 4.6394772328647385
cycle= 2 E= -13.8834575176384  delta_E= -4.18e-05  |g|= 0.00154  |ddm|= 0.00254
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200921
diis-c [-4.08539844e-08 -2.78730227e-02  1.02787302e+00]
  HOMO = -0.28470515684144  LUMO = 36.3692999637757
  mo_energy =
[-4.33730738 -0.28470516 36.36929996]
E1 = -18.52289258599652  E_coul = 4.639435038439064
cycle= 3 E= -13.8834575475575  delta_E= -2.99e-08  |g|= 2.1e-06  |ddm|= 6.79e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.47325e-06
diis-c [ 5.81488118e-19  3.43044473e-04 -1.27145357e-02  1.01237149e+00]
  HOMO = -0.284705096764762  LUMO = 36.3693017090158
  mo_energy =
[-4.33730614 -0.2847051  36.36930171]
E1 = -18.522892613752195  E_coul = 4.639435066194678
cycle= 4 E= -13.8834575475575  delta_E= -6.04e-14  |g|= 3.73e-10  |ddm|= 1.08e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.522892613752195  E_coul = 4.639435066194678
  HOMO = -0.284705096777735  LUMO = 36.3693017090505
  mo_energy =
[-4.33730614 -0.2847051  36.36930171]
E1 = -18.522892613762377  E_coul = 4.639435066204855
Extra cycle  E= -13.8834575475575  delta_E= -7.11e-15  |g|= 1.01e-11  |ddm|= 1.62e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [38.65104055  3.56895625  0.10565283]
E = -13.883457547557523
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6510405483        1
[INPUT] 0    0    [1    /1   ]  3.5689562465         1
[INPUT] 0    0    [1    /1   ]  0.105652829276       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.65104054834164, 1.0]], [0, [3.5689562465049107, 1.0]], [0, [0.10565282927610958, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.65104055]
bas 1, expnt(s) = [3.56895625]
bas 2, expnt(s) = [0.10565283]
CPU time:        25.93
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.65104055 39.16389856  3.56895625  6.56025834  0.10565283  0.46819403]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9460982333442405
cond(S) = 2.653960615949541
E1 = -18.19936809056715  E_coul = 4.520857166457591
init E= -13.6785109241096
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306948290368519  LUMO = 36.299396270329
  mo_energy =
[-4.37434177 -0.30694829 36.29939627]
E1 = -18.524497558211298  E_coul = 4.641081865631839
cycle= 1 E= -13.8834156925795  delta_E= -0.205  |g|= 0.0575  |ddm|= 0.0804
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.073718
diis-c [-0.00543434  1.        ]
  HOMO = -0.284688404532291  LUMO = 36.371566460086
  mo_energy =
[-4.33649888 -0.2846884  36.37156646]
E1 = -18.522934750503182  E_coul = 4.6394772328647385
cycle= 2 E= -13.8834575176384  delta_E= -4.18e-05  |g|= 0.00154  |ddm|= 0.00254
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200921
diis-c [-4.08539844e-08 -2.78730227e-02  1.02787302e+00]
  HOMO = -0.28470515684144  LUMO = 36.3692999637757
  mo_energy =
[-4.33730738 -0.28470516 36.36929996]
E1 = -18.52289258599652  E_coul = 4.639435038439064
cycle= 3 E= -13.8834575475575  delta_E= -2.99e-08  |g|= 2.1e-06  |ddm|= 6.79e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.47325e-06
diis-c [ 5.81488118e-19  3.43044473e-04 -1.27145357e-02  1.01237149e+00]
  HOMO = -0.284705096764762  LUMO = 36.3693017090158
  mo_energy =
[-4.33730614 -0.2847051  36.36930171]
E1 = -18.522892613752195  E_coul = 4.639435066194678
cycle= 4 E= -13.8834575475575  delta_E= -6.04e-14  |g|= 3.73e-10  |ddm|= 1.08e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.522892613752195  E_coul = 4.639435066194678
  HOMO = -0.284705096777735  LUMO = 36.3693017090505
  mo_energy =
[-4.33730614 -0.2847051  36.36930171]
E1 = -18.522892613762377  E_coul = 4.639435066204855
Extra cycle  E= -13.8834575475575  delta_E= -7.11e-15  |g|= 1.01e-11  |ddm|= 1.62e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.653960615949541
E1 = -18.522892613762377  E_coul = 4.639435066204855
init E= -13.8834575475575
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.284705096777636  LUMO = 36.3693017090647
  mo_energy =
[-4.33730614 -0.2847051  36.36930171]
E1 = -18.522892613762643  E_coul = 4.639435066205122
cycle= 1 E= -13.8834575475575  delta_E= 1.78e-15  |g|= 2.67e-13  |ddm|= 4.29e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.522892613762643  E_coul = 4.639435066205122
  HOMO = -0.284705096777633  LUMO = 36.3693017090651
  mo_energy =
[-4.33730614 -0.2847051  36.36930171]
E1 = -18.522892613762636  E_coul = 4.63943506620512
Extra cycle  E= -13.8834575475575  delta_E= 5.33e-15  |g|= 1.34e-15  |ddm|= 1.24e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.65104055  3.56895625  0.10565283]
grad_E = [ 0.01681468 -0.00284747  0.01384734]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6495474163        1
[INPUT] 0    0    [1    /1   ]  3.57007611544        1
[INPUT] 0    0    [1    /1   ]  0.106050596947       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.6495474163343, 1.0]], [0, [3.5700761154405, 1.0]], [0, [0.10605059694665016, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.64954742]
bas 1, expnt(s) = [3.57007612]
bas 2, expnt(s) = [0.1060506]
CPU time:        28.18
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.64954742 39.16276384  3.57007612  6.56180214  0.1060506   0.46951542]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.945922400672707
cond(S) = 2.6556664658412137
E1 = -18.202965352449816  E_coul = 4.524245126322969
init E= -13.6787202261268
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306550237921757  LUMO = 36.3044556728585
  mo_energy =
[-4.37306242 -0.30655024 36.30445567]
E1 = -18.528675403001905  E_coul = 4.645240989841652
cycle= 1 E= -13.8834344131603  delta_E= -0.205  |g|= 0.0574  |ddm|= 0.0803
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0736558
diis-c [-0.00542517  1.        ]
  HOMO = -0.284214889453058  LUMO = 36.3771848949347
  mo_energy =
[-4.33490214 -0.28421489 36.37718489]
E1 = -18.5271154747134  E_coul = 4.6436393470145125
cycle= 2 E= -13.8834761276989  delta_E= -4.17e-05  |g|= 0.00154  |ddm|= 0.00253
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200793
diis-c [-3.98390842e-08 -2.78824032e-02  1.02788240e+00]
  HOMO = -0.284231676779432  LUMO = 36.3749219113127
  mo_energy =
[-4.33570907 -0.28423168 36.37492191]
E1 = -18.527073363640284  E_coul = 4.643597206075463
cycle= 3 E= -13.8834761575648  delta_E= -2.99e-08  |g|= 2.08e-06  |ddm|= 6.78e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.44366e-06
diis-c [ 2.73168125e-19  3.43507631e-04 -1.27234488e-02  1.01237994e+00]
  HOMO = -0.284231617026298  LUMO = 36.374923653547
  mo_energy =
[-4.33570784 -0.28423162 36.37492365]
E1 = -18.52707339141921  E_coul = 4.643597233854328
cycle= 4 E= -13.8834761575649  delta_E= -6.22e-14  |g|= 3.72e-10  |ddm|= 1.07e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.52707339141921  E_coul = 4.643597233854328
  HOMO = -0.284231617039224  LUMO = 36.3749236535821
  mo_energy =
[-4.33570784 -0.28423162 36.37492365]
E1 = -18.527073391429358  E_coul = 4.643597233864478
Extra cycle  E= -13.8834761575649  delta_E= 3.55e-15  |g|= 1e-11  |ddm|= 1.62e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.64954742  3.57007612  0.1060506 ]
E = -13.88347615756488
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6495474163        1
[INPUT] 0    0    [1    /1   ]  3.57007611544        1
[INPUT] 0    0    [1    /1   ]  0.106050596947       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.6495474163343, 1.0]], [0, [3.5700761154405, 1.0]], [0, [0.10605059694665016, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.64954742]
bas 1, expnt(s) = [3.57007612]
bas 2, expnt(s) = [0.1060506]
CPU time:        28.47
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.64954742 39.16276384  3.57007612  6.56180214  0.1060506   0.46951542]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.945922400672707
cond(S) = 2.6556664658412137
E1 = -18.202965352449816  E_coul = 4.524245126322969
init E= -13.6787202261268
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306550237921757  LUMO = 36.3044556728585
  mo_energy =
[-4.37306242 -0.30655024 36.30445567]
E1 = -18.528675403001905  E_coul = 4.645240989841652
cycle= 1 E= -13.8834344131603  delta_E= -0.205  |g|= 0.0574  |ddm|= 0.0803
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0736558
diis-c [-0.00542517  1.        ]
  HOMO = -0.284214889453058  LUMO = 36.3771848949347
  mo_energy =
[-4.33490214 -0.28421489 36.37718489]
E1 = -18.5271154747134  E_coul = 4.6436393470145125
cycle= 2 E= -13.8834761276989  delta_E= -4.17e-05  |g|= 0.00154  |ddm|= 0.00253
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200793
diis-c [-3.98390842e-08 -2.78824032e-02  1.02788240e+00]
  HOMO = -0.284231676779432  LUMO = 36.3749219113127
  mo_energy =
[-4.33570907 -0.28423168 36.37492191]
E1 = -18.527073363640284  E_coul = 4.643597206075463
cycle= 3 E= -13.8834761575648  delta_E= -2.99e-08  |g|= 2.08e-06  |ddm|= 6.78e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.44366e-06
diis-c [ 2.73168125e-19  3.43507631e-04 -1.27234488e-02  1.01237994e+00]
  HOMO = -0.284231617026298  LUMO = 36.374923653547
  mo_energy =
[-4.33570784 -0.28423162 36.37492365]
E1 = -18.52707339141921  E_coul = 4.643597233854328
cycle= 4 E= -13.8834761575649  delta_E= -6.22e-14  |g|= 3.72e-10  |ddm|= 1.07e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.52707339141921  E_coul = 4.643597233854328
  HOMO = -0.284231617039224  LUMO = 36.3749236535821
  mo_energy =
[-4.33570784 -0.28423162 36.37492365]
E1 = -18.527073391429358  E_coul = 4.643597233864478
Extra cycle  E= -13.8834761575649  delta_E= 3.55e-15  |g|= 1e-11  |ddm|= 1.62e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.6556664658412137
E1 = -18.527073391429358  E_coul = 4.643597233864478
init E= -13.8834761575649
    CPU time for initialize scf      0.03 sec, wall time      0.04 sec
  HOMO = -0.284231617039124  LUMO = 36.3749236535962
  mo_energy =
[-4.33570784 -0.28423162 36.37492365]
E1 = -18.527073391429614  E_coul = 4.643597233864739
cycle= 1 E= -13.8834761575649  delta_E= 5.33e-15  |g|= 2.68e-13  |ddm|= 4.29e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.527073391429614  E_coul = 4.643597233864739
  HOMO = -0.284231617039123  LUMO = 36.3749236535966
  mo_energy =
[-4.33570784 -0.28423162 36.37492365]
E1 = -18.52707339142964  E_coul = 4.643597233864753
Extra cycle  E= -13.8834761575649  delta_E= -1.07e-14  |g|= 7.4e-15  |ddm|= 1.11e-14
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [38.64954742  3.57007612  0.1060506 ]
grad_E = [ 0.01679822 -0.00228082  0.03317574]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6446532094        1
[INPUT] 0    0    [1    /1   ]  3.57207893372        1
[INPUT] 0    0    [1    /1   ]  0.106734796841       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.64465320943224, 1.0]], [0, [3.572078933721989, 1.0]], [0, [0.10673479684113085, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.64465321]
bas 1, expnt(s) = [3.57207893]
bas 2, expnt(s) = [0.1067348]
CPU time:        30.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.64465321 39.15904439  3.57207893  6.56456283  0.1067348   0.47178545]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9455763625088593
cond(S) = 2.658721876500202
E1 = -18.20910176884563  E_coul = 4.530012096236749
init E= -13.6790896726089
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305866209222506  LUMO = 36.3112569068646
  mo_energy =
[-4.37090225 -0.30586621 36.31125691]
E1 = -18.53590552918995  E_coul = 4.65241924793565
cycle= 1 E= -13.8834862812543  delta_E= -0.204  |g|= 0.0573  |ddm|= 0.0801
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0735265
diis-c [-0.00540614  1.        ]
  HOMO = -0.283392165506377  LUMO = 36.3850052219552
  mo_energy =
[-4.33216157 -0.28339217 36.38500522]
E1 = -18.53435086396611  E_coul = 4.650823079700241
cycle= 2 E= -13.8835277842659  delta_E= -4.15e-05  |g|= 0.00154  |ddm|= 0.00253
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200514
diis-c [-3.81240688e-08 -2.78986582e-02  1.02789866e+00]
  HOMO = -0.283409009238696  LUMO = 36.3827489149872
  mo_energy =
[-4.33296564 -0.28340901 36.38274891]
E1 = -18.534308853062228  E_coul = 4.650781039037016
cycle= 3 E= -13.8835278140252  delta_E= -2.98e-08  |g|= 2.04e-06  |ddm|= 6.77e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.39294e-06
diis-c [-5.24525153e-19  3.44325042e-04 -1.27397574e-02  1.01239543e+00]
  HOMO = -0.283408950058165  LUMO = 36.3827506507416
  mo_energy =
[-4.33296442 -0.28340895 36.38275065]
E1 = -18.534308880858287  E_coul = 4.650781066833014
cycle= 4 E= -13.8835278140253  delta_E= -6.04e-14  |g|= 3.71e-10  |ddm|= 1.05e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.534308880858287  E_coul = 4.650781066833014
  HOMO = -0.283408950071006  LUMO = 36.3827506507773
  mo_energy =
[-4.33296442 -0.28340895 36.38275065]
E1 = -18.534308880868405  E_coul = 4.650781066843133
Extra cycle  E= -13.8835278140253  delta_E= 1.78e-15  |g|= 1e-11  |ddm|= 1.61e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.64465321  3.57207893  0.1067348 ]
E = -13.883527814025271
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6446532094        1
[INPUT] 0    0    [1    /1   ]  3.57207893372        1
[INPUT] 0    0    [1    /1   ]  0.106734796841       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.64465320943224, 1.0]], [0, [3.572078933721989, 1.0]], [0, [0.10673479684113085, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.64465321]
bas 1, expnt(s) = [3.57207893]
bas 2, expnt(s) = [0.1067348]
CPU time:        31.12
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.64465321 39.15904439  3.57207893  6.56456283  0.1067348   0.47178545]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9455763625088593
cond(S) = 2.658721876500202
E1 = -18.20910176884563  E_coul = 4.530012096236749
init E= -13.6790896726089
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305866209222506  LUMO = 36.3112569068646
  mo_energy =
[-4.37090225 -0.30586621 36.31125691]
E1 = -18.53590552918995  E_coul = 4.65241924793565
cycle= 1 E= -13.8834862812543  delta_E= -0.204  |g|= 0.0573  |ddm|= 0.0801
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0735265
diis-c [-0.00540614  1.        ]
  HOMO = -0.283392165506377  LUMO = 36.3850052219552
  mo_energy =
[-4.33216157 -0.28339217 36.38500522]
E1 = -18.53435086396611  E_coul = 4.650823079700241
cycle= 2 E= -13.8835277842659  delta_E= -4.15e-05  |g|= 0.00154  |ddm|= 0.00253
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200514
diis-c [-3.81240688e-08 -2.78986582e-02  1.02789866e+00]
  HOMO = -0.283409009238696  LUMO = 36.3827489149872
  mo_energy =
[-4.33296564 -0.28340901 36.38274891]
E1 = -18.534308853062228  E_coul = 4.650781039037016
cycle= 3 E= -13.8835278140252  delta_E= -2.98e-08  |g|= 2.04e-06  |ddm|= 6.77e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.39294e-06
diis-c [-5.24525153e-19  3.44325042e-04 -1.27397574e-02  1.01239543e+00]
  HOMO = -0.283408950058165  LUMO = 36.3827506507416
  mo_energy =
[-4.33296442 -0.28340895 36.38275065]
E1 = -18.534308880858287  E_coul = 4.650781066833014
cycle= 4 E= -13.8835278140253  delta_E= -6.04e-14  |g|= 3.71e-10  |ddm|= 1.05e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.534308880858287  E_coul = 4.650781066833014
  HOMO = -0.283408950071006  LUMO = 36.3827506507773
  mo_energy =
[-4.33296442 -0.28340895 36.38275065]
E1 = -18.534308880868405  E_coul = 4.650781066843133
Extra cycle  E= -13.8835278140253  delta_E= 1.78e-15  |g|= 1e-11  |ddm|= 1.61e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.658721876500202
E1 = -18.534308880868405  E_coul = 4.650781066843133
init E= -13.8835278140253
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.283408950070907  LUMO = 36.3827506507914
  mo_energy =
[-4.33296442 -0.28340895 36.38275065]
E1 = -18.53430888086867  E_coul = 4.650781066843398
cycle= 1 E= -13.8835278140253  delta_E= -3.55e-15  |g|= 2.89e-13  |ddm|= 4.25e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.53430888086867  E_coul = 4.650781066843398
  HOMO = -0.283408950070904  LUMO = 36.3827506507918
  mo_energy =
[-4.33296442 -0.28340895 36.38275065]
E1 = -18.534308880868682  E_coul = 4.650781066843405
Extra cycle  E= -13.8835278140253  delta_E= -3.55e-15  |g|= 1.9e-14  |ddm|= 1.21e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.64465321  3.57207893  0.1067348 ]
grad_E = [ 0.01676754 -0.00122218  0.06612915]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6309108765        1
[INPUT] 0    0    [1    /1   ]  3.57507937627        1
[INPUT] 0    0    [1    /1   ]  0.107817177435       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.630910876537946, 1.0]], [0, [3.575079376272617, 1.0]], [0, [0.10781717743495774, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.63091088]
bas 1, expnt(s) = [3.57507938]
bas 2, expnt(s) = [0.10781718]
CPU time:        33.49
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.63091088 39.14859998  3.57507938  6.56869793  0.10781718  0.47536915]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.944932595269884
cond(S) = 2.66374609874914
E1 = -18.218647073819263  E_coul = 4.538947966808869
init E= -13.6796991070104
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304781161499254  LUMO = 36.3157706086214
  mo_energy =
[-4.36760744 -0.30478116 36.31577061]
E1 = -18.54732337643042  E_coul = 4.663705026300809
cycle= 1 E= -13.8836183501296  delta_E= -0.204  |g|= 0.0571  |ddm|= 0.0799
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.073309
diis-c [-0.00537421  1.        ]
  HOMO = -0.282072415453718  LUMO = 36.3911709241791
  mo_energy =
[-4.32790429 -0.28207242 36.39117092]
E1 = -18.54577703608919  E_coul = 4.662117523242485
cycle= 2 E= -13.8836595128467  delta_E= -4.12e-05  |g|= 0.00153  |ddm|= 0.00251
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200041
diis-c [-3.55066928e-08 -2.79246962e-02  1.02792470e+00]
  HOMO = -0.282089345692671  LUMO = 36.3889254411626
  mo_energy =
[-4.32870384 -0.28208935 36.38892544]
E1 = -18.545735182271894  E_coul = 4.662075639838225
cycle= 3 E= -13.8836595424337  delta_E= -2.96e-08  |g|= 1.98e-06  |ddm|= 6.74e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.31366e-06
diis-c [-3.49824607e-19  3.45677856e-04 -1.27681686e-02  1.01242249e+00]
  HOMO = -0.282089287443192  LUMO = 36.388927164343
  mo_energy =
[-4.32870265 -0.28208929 36.38892716]
E1 = -18.545735210052193  E_coul = 4.662075667618477
cycle= 4 E= -13.8836595424337  delta_E= -4.62e-14  |g|= 3.69e-10  |ddm|= 1.02e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.545735210052193  E_coul = 4.662075667618477
  HOMO = -0.282089287455909  LUMO = 36.3889271643797
  mo_energy =
[-4.32870265 -0.28208929 36.38892716]
E1 = -18.545735210062265  E_coul = 4.662075667628546
Extra cycle  E= -13.8836595424337  delta_E= -3.55e-15  |g|= 9.95e-12  |ddm|= 1.6e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [38.63091088  3.57507938  0.10781718]
E = -13.883659542433719
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.6309108765        1
[INPUT] 0    0    [1    /1   ]  3.57507937627        1
[INPUT] 0    0    [1    /1   ]  0.107817177435       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.630910876537946, 1.0]], [0, [3.575079376272617, 1.0]], [0, [0.10781717743495774, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.63091088]
bas 1, expnt(s) = [3.57507938]
bas 2, expnt(s) = [0.10781718]
CPU time:        33.80
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.63091088 39.14859998  3.57507938  6.56869793  0.10781718  0.47536915]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.944932595269884
cond(S) = 2.66374609874914
E1 = -18.218647073819263  E_coul = 4.538947966808869
init E= -13.6796991070104
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304781161499254  LUMO = 36.3157706086214
  mo_energy =
[-4.36760744 -0.30478116 36.31577061]
E1 = -18.54732337643042  E_coul = 4.663705026300809
cycle= 1 E= -13.8836183501296  delta_E= -0.204  |g|= 0.0571  |ddm|= 0.0799
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.073309
diis-c [-0.00537421  1.        ]
  HOMO = -0.282072415453718  LUMO = 36.3911709241791
  mo_energy =
[-4.32790429 -0.28207242 36.39117092]
E1 = -18.54577703608919  E_coul = 4.662117523242485
cycle= 2 E= -13.8836595128467  delta_E= -4.12e-05  |g|= 0.00153  |ddm|= 0.00251
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00200041
diis-c [-3.55066928e-08 -2.79246962e-02  1.02792470e+00]
  HOMO = -0.282089345692671  LUMO = 36.3889254411626
  mo_energy =
[-4.32870384 -0.28208935 36.38892544]
E1 = -18.545735182271894  E_coul = 4.662075639838225
cycle= 3 E= -13.8836595424337  delta_E= -2.96e-08  |g|= 1.98e-06  |ddm|= 6.74e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.31366e-06
diis-c [-3.49824607e-19  3.45677856e-04 -1.27681686e-02  1.01242249e+00]
  HOMO = -0.282089287443192  LUMO = 36.388927164343
  mo_energy =
[-4.32870265 -0.28208929 36.38892716]
E1 = -18.545735210052193  E_coul = 4.662075667618477
cycle= 4 E= -13.8836595424337  delta_E= -4.62e-14  |g|= 3.69e-10  |ddm|= 1.02e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.545735210052193  E_coul = 4.662075667618477
  HOMO = -0.282089287455909  LUMO = 36.3889271643797
  mo_energy =
[-4.32870265 -0.28208929 36.38892716]
E1 = -18.545735210062265  E_coul = 4.662075667628546
Extra cycle  E= -13.8836595424337  delta_E= -3.55e-15  |g|= 9.95e-12  |ddm|= 1.6e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.66374609874914
E1 = -18.545735210062265  E_coul = 4.662075667628546
init E= -13.8836595424337
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.282089287455807  LUMO = 36.3889271643937
  mo_energy =
[-4.32870265 -0.28208929 36.38892716]
E1 = -18.545735210062517  E_coul = 4.662075667628803
cycle= 1 E= -13.8836595424337  delta_E= 3.55e-15  |g|= 2.76e-13  |ddm|= 4.24e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.545735210062517  E_coul = 4.662075667628803
  HOMO = -0.282089287455805  LUMO = 36.3889271643941
  mo_energy =
[-4.32870265 -0.28208929 36.38892716]
E1 = -18.545735210062524  E_coul = 4.66207566762881
Extra cycle  E= -13.8836595424337  delta_E=    0  |g|= 3.31e-15  |ddm|= 1.2e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.63091088  3.57507938  0.10781718]
grad_E = [0.01671881 0.00044813 0.11763745]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.592599115         1
[INPUT] 0    0    [1    /1   ]  3.57952756219        1
[INPUT] 0    0    [1    /1   ]  0.109599128969       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.59259911496934, 1.0]], [0, [3.5795275621929137, 1.0]], [0, [0.10959912896921403, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.59259911]
bas 1, expnt(s) = [3.57952756]
bas 2, expnt(s) = [0.10959913]
CPU time:        36.19
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.59259911 39.11947749  3.57952756  6.57482666  0.10959913  0.48124957]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9436267080654774
cond(S) = 2.6725047455151034
E1 = -18.233932261352933  E_coul = 4.553163579269913
init E= -13.680768682083
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302986644207078  LUMO = 36.3066852432935
  mo_energy =
[-4.36250638 -0.30298664 36.30668524]
E1 = -18.566048286506945  E_coul = 4.682082445698006
cycle= 1 E= -13.8839658408089  delta_E= -0.203  |g|= 0.0567  |ddm|= 0.0798
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0729239
diis-c [-0.0053179  1.       ]
  HOMO = -0.279852612975843  LUMO = 36.3848937845466
  mo_energy =
[-4.32110885 -0.27985261 36.38489378]
E1 = -18.56451554844434  E_coul = 4.6805091124613645
cycle= 2 E= -13.884006435983  delta_E= -4.06e-05  |g|= 0.00152  |ddm|= 0.00249
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00199198
diis-c [-3.14501620e-08 -2.79684929e-02  1.02796849e+00]
  HOMO = -0.279869679007233  LUMO = 36.3826666105961
  mo_energy =
[-4.32190101 -0.27986968 36.38266661]
E1 = -18.56447394665457  E_coul = 4.680467481372846
cycle= 3 E= -13.8840064652817  delta_E= -2.93e-08  |g|= 1.88e-06  |ddm|= 6.71e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.18559e-06
diis-c [ 1.03782712e-18  3.48063774e-04 -1.28217634e-02  1.01247370e+00]
  HOMO = -0.279869622358289  LUMO = 36.3826683071932
  mo_energy =
[-4.32189986 -0.27986962 36.38266831]
E1 = -18.564473974299574  E_coul = 4.6804675090178085
cycle= 4 E= -13.8840064652818  delta_E= -4.09e-14  |g|= 3.65e-10  |ddm|= 9.73e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.564473974299574  E_coul = 4.6804675090178085
  HOMO = -0.279869622370814  LUMO = 36.3826683072315
  mo_energy =
[-4.32189986 -0.27986962 36.38266831]
E1 = -18.56447397430958  E_coul = 4.680467509027804
Extra cycle  E= -13.8840064652818  delta_E= -1.07e-14  |g|= 9.89e-12  |ddm|= 1.59e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [38.59259911  3.57952756  0.10959913]
E = -13.884006465281775
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.592599115         1
[INPUT] 0    0    [1    /1   ]  3.57952756219        1
[INPUT] 0    0    [1    /1   ]  0.109599128969       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.59259911496934, 1.0]], [0, [3.5795275621929137, 1.0]], [0, [0.10959912896921403, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.59259911]
bas 1, expnt(s) = [3.57952756]
bas 2, expnt(s) = [0.10959913]
CPU time:        36.53
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.59259911 39.11947749  3.57952756  6.57482666  0.10959913  0.48124957]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9436267080654774
cond(S) = 2.6725047455151034
E1 = -18.233932261352933  E_coul = 4.553163579269913
init E= -13.680768682083
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302986644207078  LUMO = 36.3066852432935
  mo_energy =
[-4.36250638 -0.30298664 36.30668524]
E1 = -18.566048286506945  E_coul = 4.682082445698006
cycle= 1 E= -13.8839658408089  delta_E= -0.203  |g|= 0.0567  |ddm|= 0.0798
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0729239
diis-c [-0.0053179  1.       ]
  HOMO = -0.279852612975843  LUMO = 36.3848937845466
  mo_energy =
[-4.32110885 -0.27985261 36.38489378]
E1 = -18.56451554844434  E_coul = 4.6805091124613645
cycle= 2 E= -13.884006435983  delta_E= -4.06e-05  |g|= 0.00152  |ddm|= 0.00249
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00199198
diis-c [-3.14501620e-08 -2.79684929e-02  1.02796849e+00]
  HOMO = -0.279869679007233  LUMO = 36.3826666105961
  mo_energy =
[-4.32190101 -0.27986968 36.38266661]
E1 = -18.56447394665457  E_coul = 4.680467481372846
cycle= 3 E= -13.8840064652817  delta_E= -2.93e-08  |g|= 1.88e-06  |ddm|= 6.71e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.18559e-06
diis-c [ 1.03782712e-18  3.48063774e-04 -1.28217634e-02  1.01247370e+00]
  HOMO = -0.279869622358289  LUMO = 36.3826683071932
  mo_energy =
[-4.32189986 -0.27986962 36.38266831]
E1 = -18.564473974299574  E_coul = 4.6804675090178085
cycle= 4 E= -13.8840064652818  delta_E= -4.09e-14  |g|= 3.65e-10  |ddm|= 9.73e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.564473974299574  E_coul = 4.6804675090178085
  HOMO = -0.279869622370814  LUMO = 36.3826683072315
  mo_energy =
[-4.32189986 -0.27986962 36.38266831]
E1 = -18.56447397430958  E_coul = 4.680467509027804
Extra cycle  E= -13.8840064652818  delta_E= -1.07e-14  |g|= 9.89e-12  |ddm|= 1.59e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.6725047455151034
E1 = -18.56447397430958  E_coul = 4.680467509027804
init E= -13.8840064652818
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.279869622370711  LUMO = 36.3826683072454
  mo_energy =
[-4.32189986 -0.27986962 36.38266831]
E1 = -18.564473974309838  E_coul = 4.680467509028064
cycle= 1 E= -13.8840064652818  delta_E= 1.78e-15  |g|= 2.79e-13  |ddm|= 4.22e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.564473974309838  E_coul = 4.680467509028064
  HOMO = -0.279869622370709  LUMO = 36.3826683072458
  mo_energy =
[-4.32189986 -0.27986962 36.38266831]
E1 = -18.56447397430983  E_coul = 4.680467509028068
Extra cycle  E= -13.8840064652818  delta_E= 1.07e-14  |g|= 2.87e-14  |ddm|= 1.14e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.59259911  3.57952756  0.10959913]
grad_E = [0.01663868 0.0031568  0.20083164]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.4898211188        1
[INPUT] 0    0    [1    /1   ]  3.58542920701        1
[INPUT] 0    0    [1    /1   ]  0.112499834924       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.48982111882077, 1.0]], [0, [3.585429207007841, 1.0]], [0, [0.11249983492364192, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.48982112]
bas 1, expnt(s) = [3.58542921]
bas 2, expnt(s) = [0.11249983]
CPU time:        38.92
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.48982112 39.04131559  3.58542921  6.58295503  0.11249983  0.49077105]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9408867317148015
cond(S) = 2.6880234850769553
E1 = -18.257703138154483  E_coul = 4.575016679853572
init E= -13.6826864583009
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.300044295258994  LUMO = 36.2491210133281
  mo_energy =
[-4.35503985 -0.3000443  36.24912101]
E1 = -18.596311811067096  E_coul = 4.711447121558252
cycle= 1 E= -13.8848646895088  delta_E= -0.202  |g|= 0.056  |ddm|= 0.08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0722378
diis-c [-0.00521829  1.        ]
  HOMO = -0.27611960486329  LUMO = 36.3321063772334
  mo_energy =
[-4.31060849 -0.2761196  36.33210638]
E1 = -18.594800859648842  E_coul = 4.709896506554293
cycle= 2 E= -13.8849043530945  delta_E= -3.97e-05  |g|= 0.00151  |ddm|= 0.00246
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00197693
diis-c [-2.54969394e-08 -2.80425236e-02  1.02804252e+00]
  HOMO = -0.276136873984194  LUMO = 36.3299100172811
  mo_energy =
[-4.31138882 -0.27613687 36.32991002]
E1 = -18.594759647953474  E_coul = 4.709855266032667
cycle= 3 E= -13.8849043819208  delta_E= -2.88e-08  |g|= 1.72e-06  |ddm|= 6.65e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.98296e-06
diis-c [ 4.26057572e-19  3.52366472e-04 -1.29265632e-02  1.01257420e+00]
  HOMO = -0.276136820130219  LUMO = 36.3299116557814
  mo_energy =
[-4.31138772 -0.27613682 36.32991166]
E1 = -18.594759675099308  E_coul = 4.70985529317846
cycle= 4 E= -13.8849043819208  delta_E= -4.09e-14  |g|= 3.6e-10  |ddm|= 8.99e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.594759675099308  E_coul = 4.70985529317846
  HOMO = -0.27613682014248  LUMO = 36.3299116558224
  mo_energy =
[-4.31138772 -0.27613682 36.32991166]
E1 = -18.59475967510922  E_coul = 4.709855293188363
Extra cycle  E= -13.8849043819209  delta_E= -1.07e-14  |g|= 9.74e-12  |ddm|= 1.57e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [38.48982112  3.58542921  0.11249983]
E = -13.884904381920858
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.4898211188        1
[INPUT] 0    0    [1    /1   ]  3.58542920701        1
[INPUT] 0    0    [1    /1   ]  0.112499834924       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.48982111882077, 1.0]], [0, [3.585429207007841, 1.0]], [0, [0.11249983492364192, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.48982112]
bas 1, expnt(s) = [3.58542921]
bas 2, expnt(s) = [0.11249983]
CPU time:        39.27
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.48982112 39.04131559  3.58542921  6.58295503  0.11249983  0.49077105]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9408867317148015
cond(S) = 2.6880234850769553
E1 = -18.257703138154483  E_coul = 4.575016679853572
init E= -13.6826864583009
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.300044295258994  LUMO = 36.2491210133281
  mo_energy =
[-4.35503985 -0.3000443  36.24912101]
E1 = -18.596311811067096  E_coul = 4.711447121558252
cycle= 1 E= -13.8848646895088  delta_E= -0.202  |g|= 0.056  |ddm|= 0.08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0722378
diis-c [-0.00521829  1.        ]
  HOMO = -0.27611960486329  LUMO = 36.3321063772334
  mo_energy =
[-4.31060849 -0.2761196  36.33210638]
E1 = -18.594800859648842  E_coul = 4.709896506554293
cycle= 2 E= -13.8849043530945  delta_E= -3.97e-05  |g|= 0.00151  |ddm|= 0.00246
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00197693
diis-c [-2.54969394e-08 -2.80425236e-02  1.02804252e+00]
  HOMO = -0.276136873984194  LUMO = 36.3299100172811
  mo_energy =
[-4.31138882 -0.27613687 36.32991002]
E1 = -18.594759647953474  E_coul = 4.709855266032667
cycle= 3 E= -13.8849043819208  delta_E= -2.88e-08  |g|= 1.72e-06  |ddm|= 6.65e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.98296e-06
diis-c [ 4.26057572e-19  3.52366472e-04 -1.29265632e-02  1.01257420e+00]
  HOMO = -0.276136820130219  LUMO = 36.3299116557814
  mo_energy =
[-4.31138772 -0.27613682 36.32991166]
E1 = -18.594759675099308  E_coul = 4.70985529317846
cycle= 4 E= -13.8849043819208  delta_E= -4.09e-14  |g|= 3.6e-10  |ddm|= 8.99e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.594759675099308  E_coul = 4.70985529317846
  HOMO = -0.27613682014248  LUMO = 36.3299116558224
  mo_energy =
[-4.31138772 -0.27613682 36.32991166]
E1 = -18.59475967510922  E_coul = 4.709855293188363
Extra cycle  E= -13.8849043819209  delta_E= -1.07e-14  |g|= 9.74e-12  |ddm|= 1.57e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.6880234850769553
E1 = -18.59475967510922  E_coul = 4.709855293188363
init E= -13.8849043819209
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.276136820142373  LUMO = 36.3299116558361
  mo_energy =
[-4.31138772 -0.27613682 36.32991166]
E1 = -18.594759675109472  E_coul = 4.709855293188617
cycle= 1 E= -13.8849043819209  delta_E= 3.55e-15  |g|= 2.55e-13  |ddm|= 4.17e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.594759675109472  E_coul = 4.709855293188617
  HOMO = -0.276136820142371  LUMO = 36.3299116558365
  mo_energy =
[-4.31138772 -0.27613682 36.32991166]
E1 = -18.594759675109465  E_coul = 4.709855293188618
Extra cycle  E= -13.8849043819208  delta_E= 7.11e-15  |g|= 9.99e-15  |ddm|= 1.15e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.48982112  3.58542921  0.11249983]
grad_E = [0.0165088  0.00742638 0.33216953]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.216856707         1
[INPUT] 0    0    [1    /1   ]  3.59150343056        1
[INPUT] 0    0    [1    /1   ]  0.117281413338       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.21685670698084, 1.0]], [0, [3.5915034305608273, 1.0]], [0, [0.11728141333792977, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.21685671]
bas 1, expnt(s) = [3.59150343]
bas 2, expnt(s) = [0.11728141]
CPU time:        41.69
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.21685671 38.83347431  3.59150343  6.5913176   0.11728141  0.5063338 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9348730462287462
cond(S) = 2.7169229816659386
E1 = -18.294034152769314  E_coul = 4.607706173070317
init E= -13.686327979699
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.295140559567803  LUMO = 36.0441034091939
  mo_energy =
[-4.34488946 -0.29514056 36.04410341]
E1 = -18.64554615108409  E_coul = 4.758354050125621
cycle= 1 E= -13.8871921009585  delta_E= -0.201  |g|= 0.0548  |ddm|= 0.0818
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0709861
diis-c [-0.00503902  1.        ]
  HOMO = -0.269666530313366  LUMO = 36.135422577612
  mo_energy =
[-4.29477106 -0.26966653 36.13542258]
E1 = -18.64407006339102  E_coul = 4.7568398215226235
cycle= 2 E= -13.8872302418684  delta_E= -3.81e-05  |g|= 0.00149  |ddm|= 0.0024
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00194953
diis-c [-1.73331282e-08 -2.81729156e-02  1.02817292e+00]
  HOMO = -0.269684081870704  LUMO = 36.1332789552817
  mo_energy =
[-4.29553249 -0.26968408 36.13327896]
E1 = -18.644029436154035  E_coul = 4.756799166223031
cycle= 3 E= -13.887230269931  delta_E= -2.81e-08  |g|= 1.46e-06  |ddm|= 6.57e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.66207e-06
diis-c [-5.34689548e-19  3.60578639e-04 -1.31445317e-02  1.01278395e+00]
  HOMO = -0.269684033185863  LUMO = 36.1332804606932
  mo_energy =
[-4.29553151 -0.26968403 36.13328046]
E1 = -18.644029461755334  E_coul = 4.756799191824286
cycle= 4 E= -13.887230269931  delta_E= -4.44e-14  |g|= 3.53e-10  |ddm|= 7.78e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.644029461755334  E_coul = 4.756799191824286
  HOMO = -0.269684033197821  LUMO = 36.1332804607384
  mo_energy =
[-4.29553151 -0.26968403 36.13328046]
E1 = -18.64402946176511  E_coul = 4.756799191834074
Extra cycle  E= -13.887230269931  delta_E= 1.07e-14  |g|= 9.57e-12  |ddm|= 1.56e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [38.21685671  3.59150343  0.11728141]
E = -13.887230269931038
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  38.216856707         1
[INPUT] 0    0    [1    /1   ]  3.59150343056        1
[INPUT] 0    0    [1    /1   ]  0.117281413338       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [38.21685670698084, 1.0]], [0, [3.5915034305608273, 1.0]], [0, [0.11728141333792977, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [38.21685671]
bas 1, expnt(s) = [3.59150343]
bas 2, expnt(s) = [0.11728141]
CPU time:        42.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 38.21685671 38.83347431  3.59150343  6.5913176   0.11728141  0.5063338 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9348730462287462
cond(S) = 2.7169229816659386
E1 = -18.294034152769314  E_coul = 4.607706173070317
init E= -13.686327979699
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.295140559567803  LUMO = 36.0441034091939
  mo_energy =
[-4.34488946 -0.29514056 36.04410341]
E1 = -18.64554615108409  E_coul = 4.758354050125621
cycle= 1 E= -13.8871921009585  delta_E= -0.201  |g|= 0.0548  |ddm|= 0.0818
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0709861
diis-c [-0.00503902  1.        ]
  HOMO = -0.269666530313366  LUMO = 36.135422577612
  mo_energy =
[-4.29477106 -0.26966653 36.13542258]
E1 = -18.64407006339102  E_coul = 4.7568398215226235
cycle= 2 E= -13.8872302418684  delta_E= -3.81e-05  |g|= 0.00149  |ddm|= 0.0024
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00194953
diis-c [-1.73331282e-08 -2.81729156e-02  1.02817292e+00]
  HOMO = -0.269684081870704  LUMO = 36.1332789552817
  mo_energy =
[-4.29553249 -0.26968408 36.13327896]
E1 = -18.644029436154035  E_coul = 4.756799166223031
cycle= 3 E= -13.887230269931  delta_E= -2.81e-08  |g|= 1.46e-06  |ddm|= 6.57e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.66207e-06
diis-c [-5.34689548e-19  3.60578639e-04 -1.31445317e-02  1.01278395e+00]
  HOMO = -0.269684033185863  LUMO = 36.1332804606932
  mo_energy =
[-4.29553151 -0.26968403 36.13328046]
E1 = -18.644029461755334  E_coul = 4.756799191824286
cycle= 4 E= -13.887230269931  delta_E= -4.44e-14  |g|= 3.53e-10  |ddm|= 7.78e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.644029461755334  E_coul = 4.756799191824286
  HOMO = -0.269684033197821  LUMO = 36.1332804607384
  mo_energy =
[-4.29553151 -0.26968403 36.13328046]
E1 = -18.64402946176511  E_coul = 4.756799191834074
Extra cycle  E= -13.887230269931  delta_E= 1.07e-14  |g|= 9.57e-12  |ddm|= 1.56e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.7169229816659386
E1 = -18.64402946176511  E_coul = 4.756799191834074
init E= -13.887230269931
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.269684033197711  LUMO = 36.1332804607518
  mo_energy =
[-4.29553151 -0.26968403 36.13328046]
E1 = -18.644029461765363  E_coul = 4.756799191834327
cycle= 1 E= -13.887230269931  delta_E= 1.78e-15  |g|= 2.45e-13  |ddm|= 4.13e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.644029461765363  E_coul = 4.756799191834327
  HOMO = -0.269684033197709  LUMO = 36.1332804607522
  mo_energy =
[-4.29553151 -0.26968403 36.13328046]
E1 = -18.644029461765363  E_coul = 4.756799191834331
Extra cycle  E= -13.887230269931  delta_E= 3.55e-15  |g|= 6.24e-15  |ddm|= 1.07e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [38.21685671  3.59150343  0.11728141]
grad_E = [0.01629524 0.01402865 0.53833045]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  37.5035639266        1
[INPUT] 0    0    [1    /1   ]  3.59193416157        1
[INPUT] 0    0    [1    /1   ]  0.125205114498       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [37.50356392656051, 1.0]], [0, [3.5919341615732776, 1.0]], [0, [0.12520511449820754, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [37.50356393]
bas 1, expnt(s) = [3.59193416]
bas 2, expnt(s) = [0.12520511]
CPU time:        44.62
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 37.50356393 38.28859493  3.59193416  6.59191047  0.12520511  0.53177948]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9214442361227126
cond(S) = 2.773928941597372
E1 = -18.34712482327135  E_coul = 4.653433849199703
init E= -13.6936909740716
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.286890745496582  LUMO = 35.4271850783562
  mo_energy =
[-4.33350109 -0.28689075 35.42718508]
E1 = -18.72529719755463  E_coul = 4.832154754221932
cycle= 1 E= -13.8931424433327  delta_E= -0.199  |g|= 0.0526  |ddm|= 0.0892
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0686657
diis-c [-0.00471499  1.        ]
  HOMO = -0.258249195640623  LUMO = 35.5333459486987
  mo_energy =
[-4.27226203 -0.2582492  35.53334595]
E1 = -18.723877119215533  E_coul = 4.830698969435563
cycle= 2 E= -13.89317814978  delta_E= -3.57e-05  |g|= 0.00144  |ddm|= 0.00233
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00189936
diis-c [-7.79910935e-09 -2.84162469e-02  1.02841625e+00]
  HOMO = -0.258267037807663  LUMO = 35.5312943802298
  mo_energy =
[-4.27299326 -0.25826704 35.53129438]
E1 = -18.72383732358489  E_coul = 4.830659146928656
cycle= 3 E= -13.8931781766562  delta_E= -2.69e-08  |g|= 1.04e-06  |ddm|= 6.47e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.15576e-06
diis-c [ 9.90816790e-19  3.77218547e-04 -1.36208135e-02  1.01324359e+00]
  HOMO = -0.258266999489278  LUMO = 35.5312955708604
  mo_energy =
[-4.2729925  -0.258267   35.53129557]
E1 = -18.723837344684853  E_coul = 4.8306591680286095
cycle= 4 E= -13.8931781766562  delta_E= -1.07e-14  |g|= 3.45e-10  |ddm|= 5.74e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.723837344684853  E_coul = 4.8306591680286095
  HOMO = -0.258266999501133  LUMO = 35.5312955709117
  mo_energy =
[-4.2729925  -0.258267   35.53129557]
E1 = -18.72383734469467  E_coul = 4.830659168038418
Extra cycle  E= -13.8931781766563  delta_E= -8.88e-15  |g|= 9.41e-12  |ddm|= 1.55e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [37.50356393  3.59193416  0.12520511]
E = -13.893178176656251
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  37.5035639266        1
[INPUT] 0    0    [1    /1   ]  3.59193416157        1
[INPUT] 0    0    [1    /1   ]  0.125205114498       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [37.50356392656051, 1.0]], [0, [3.5919341615732776, 1.0]], [0, [0.12520511449820754, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [37.50356393]
bas 1, expnt(s) = [3.59193416]
bas 2, expnt(s) = [0.12520511]
CPU time:        45.01
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 37.50356393 38.28859493  3.59193416  6.59191047  0.12520511  0.53177948]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9214442361227126
cond(S) = 2.773928941597372
E1 = -18.34712482327135  E_coul = 4.653433849199703
init E= -13.6936909740716
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.286890745496582  LUMO = 35.4271850783562
  mo_energy =
[-4.33350109 -0.28689075 35.42718508]
E1 = -18.72529719755463  E_coul = 4.832154754221932
cycle= 1 E= -13.8931424433327  delta_E= -0.199  |g|= 0.0526  |ddm|= 0.0892
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0686657
diis-c [-0.00471499  1.        ]
  HOMO = -0.258249195640623  LUMO = 35.5333459486987
  mo_energy =
[-4.27226203 -0.2582492  35.53334595]
E1 = -18.723877119215533  E_coul = 4.830698969435563
cycle= 2 E= -13.89317814978  delta_E= -3.57e-05  |g|= 0.00144  |ddm|= 0.00233
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00189936
diis-c [-7.79910935e-09 -2.84162469e-02  1.02841625e+00]
  HOMO = -0.258267037807663  LUMO = 35.5312943802298
  mo_energy =
[-4.27299326 -0.25826704 35.53129438]
E1 = -18.72383732358489  E_coul = 4.830659146928656
cycle= 3 E= -13.8931781766562  delta_E= -2.69e-08  |g|= 1.04e-06  |ddm|= 6.47e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.15576e-06
diis-c [ 9.90816790e-19  3.77218547e-04 -1.36208135e-02  1.01324359e+00]
  HOMO = -0.258266999489278  LUMO = 35.5312955708604
  mo_energy =
[-4.2729925  -0.258267   35.53129557]
E1 = -18.723837344684853  E_coul = 4.8306591680286095
cycle= 4 E= -13.8931781766562  delta_E= -1.07e-14  |g|= 3.45e-10  |ddm|= 5.74e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.723837344684853  E_coul = 4.8306591680286095
  HOMO = -0.258266999501133  LUMO = 35.5312955709117
  mo_energy =
[-4.2729925  -0.258267   35.53129557]
E1 = -18.72383734469467  E_coul = 4.830659168038418
Extra cycle  E= -13.8931781766563  delta_E= -8.88e-15  |g|= 9.41e-12  |ddm|= 1.55e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.773928941597372
E1 = -18.72383734469467  E_coul = 4.830659168038418
init E= -13.8931781766563
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.258266999501012  LUMO = 35.5312955709249
  mo_energy =
[-4.2729925  -0.258267   35.53129557]
E1 = -18.723837344694914  E_coul = 4.830659168038673
cycle= 1 E= -13.8931781766562  delta_E= 8.88e-15  |g|= 2.59e-13  |ddm|= 4.14e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.723837344694914  E_coul = 4.830659168038673
  HOMO = -0.258266999501009  LUMO = 35.5312955709253
  mo_energy =
[-4.2729925  -0.258267   35.53129557]
E1 = -18.723837344694925  E_coul = 4.830659168038678
Extra cycle  E= -13.8931781766562  delta_E= -3.55e-15  |g|= 8.7e-15  |ddm|= 1.16e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [37.50356393  3.59193416  0.12520511]
grad_E = [0.01592511 0.02392567 0.85426845]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  35.6831191101        1
[INPUT] 0    0    [1    /1   ]  3.56869802702        1
[INPUT] 0    0    [1    /1   ]  0.138296798418       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [35.68311911012726, 1.0]], [0, [3.5686980270151505, 1.0]], [0, [0.13829679841786482, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [35.68311911]
bas 1, expnt(s) = [3.56869803]
bas 2, expnt(s) = [0.1382968]
CPU time:        47.47
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 35.68311911 36.88604837  3.56869803  6.55990235  0.1382968   0.57295976]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.892139543498503
cond(S) = 2.8957889919688165
E1 = -18.41847405824162  E_coul = 4.708909326534302
init E= -13.7095647317073
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.273028537406476  LUMO = 33.7381057433953
  mo_energy =
[-4.32754396 -0.27302854 33.73810574]
E1 = -18.852568578538346  E_coul = 4.9446612754099935
cycle= 1 E= -13.9079073031284  delta_E= -0.198  |g|= 0.0486  |ddm|= 0.114
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0642034
diis-c [-0.00412208  1.        ]
  HOMO = -0.23779048870206  LUMO = 33.8711748224842
  mo_energy =
[-4.24384803 -0.23779049 33.87117482]
E1 = -18.851246401544515  E_coul = 4.943307222293505
cycle= 2 E= -13.907939179251  delta_E= -3.19e-05  |g|= 0.00136  |ddm|= 0.00221
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00180491
diis-c [-6.32500001e-10 -2.89226061e-02  1.02892261e+00]
  HOMO = -0.237808072710976  LUMO = 33.8692949247096
  mo_energy =
[-4.24452751 -0.23780807 33.86929492]
E1 = -18.85120784660443  E_coul = 4.9432686422566885
cycle= 3 E= -13.9079392043477  delta_E= -2.51e-08  |g|= 3.25e-07  |ddm|= 6.35e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.52874e-07
diis-c [ 7.49624158e-19  4.11437121e-04 -1.46281647e-02  1.01421673e+00]
  HOMO = -0.237808057830011  LUMO = 33.8692953569019
  mo_energy =
[-4.24452722 -0.23780806 33.86929536]
E1 = -18.85120785455544  E_coul = 4.943268650207699
cycle= 4 E= -13.9079392043477  delta_E= 1.78e-15  |g|= 3.38e-10  |ddm|= 1.95e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.85120785455544  E_coul = 4.943268650207699
  HOMO = -0.237808057843144  LUMO = 33.8692953569576
  mo_energy =
[-4.24452722 -0.23780806 33.86929536]
E1 = -18.85120785456567  E_coul = 4.94326865021793
Extra cycle  E= -13.9079392043477  delta_E= 3.55e-15  |g|= 9.39e-12  |ddm|= 1.6e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [35.68311911  3.56869803  0.1382968 ]
E = -13.907939204347738
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  35.6831191101        1
[INPUT] 0    0    [1    /1   ]  3.56869802702        1
[INPUT] 0    0    [1    /1   ]  0.138296798418       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [35.68311911012726, 1.0]], [0, [3.5686980270151505, 1.0]], [0, [0.13829679841786482, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [35.68311911]
bas 1, expnt(s) = [3.56869803]
bas 2, expnt(s) = [0.1382968]
CPU time:        47.86
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 35.68311911 36.88604837  3.56869803  6.55990235  0.1382968   0.57295976]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.892139543498503
cond(S) = 2.8957889919688165
E1 = -18.41847405824162  E_coul = 4.708909326534302
init E= -13.7095647317073
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.273028537406476  LUMO = 33.7381057433953
  mo_energy =
[-4.32754396 -0.27302854 33.73810574]
E1 = -18.852568578538346  E_coul = 4.9446612754099935
cycle= 1 E= -13.9079073031284  delta_E= -0.198  |g|= 0.0486  |ddm|= 0.114
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0642034
diis-c [-0.00412208  1.        ]
  HOMO = -0.23779048870206  LUMO = 33.8711748224842
  mo_energy =
[-4.24384803 -0.23779049 33.87117482]
E1 = -18.851246401544515  E_coul = 4.943307222293505
cycle= 2 E= -13.907939179251  delta_E= -3.19e-05  |g|= 0.00136  |ddm|= 0.00221
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00180491
diis-c [-6.32500001e-10 -2.89226061e-02  1.02892261e+00]
  HOMO = -0.237808072710976  LUMO = 33.8692949247096
  mo_energy =
[-4.24452751 -0.23780807 33.86929492]
E1 = -18.85120784660443  E_coul = 4.9432686422566885
cycle= 3 E= -13.9079392043477  delta_E= -2.51e-08  |g|= 3.25e-07  |ddm|= 6.35e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.52874e-07
diis-c [ 7.49624158e-19  4.11437121e-04 -1.46281647e-02  1.01421673e+00]
  HOMO = -0.237808057830011  LUMO = 33.8692953569019
  mo_energy =
[-4.24452722 -0.23780806 33.86929536]
E1 = -18.85120785455544  E_coul = 4.943268650207699
cycle= 4 E= -13.9079392043477  delta_E= 1.78e-15  |g|= 3.38e-10  |ddm|= 1.95e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.85120785455544  E_coul = 4.943268650207699
  HOMO = -0.237808057843144  LUMO = 33.8692953569576
  mo_energy =
[-4.24452722 -0.23780806 33.86929536]
E1 = -18.85120785456567  E_coul = 4.94326865021793
Extra cycle  E= -13.9079392043477  delta_E= 3.55e-15  |g|= 9.39e-12  |ddm|= 1.6e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 2.8957889919688165
E1 = -18.85120785456567  E_coul = 4.94326865021793
init E= -13.9079392043477
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.237808057843  LUMO = 33.8692953569708
  mo_energy =
[-4.24452722 -0.23780806 33.86929536]
E1 = -18.85120785456595  E_coul = 4.943268650218203
cycle= 1 E= -13.9079392043477  delta_E= -8.88e-15  |g|= 2.71e-13  |ddm|= 4.33e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.85120785456595  E_coul = 4.943268650218203
  HOMO = -0.237808057842995  LUMO = 33.8692953569712
  mo_energy =
[-4.24452722 -0.23780806 33.86929536]
E1 = -18.851207854565956  E_coul = 4.94326865021821
Extra cycle  E= -13.9079392043477  delta_E=    0  |g|= 1.36e-14  |ddm|= 1.26e-14
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [35.68311911  3.56869803  0.1382968 ]
grad_E = [0.01512712 0.03935261 1.31520671]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  31.3930703647        1
[INPUT] 0    0    [1    /1   ]  3.47387058085        1
[INPUT] 0    0    [1    /1   ]  0.158416026651       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [31.393070364722686, 1.0]], [0, [3.473870580854653, 1.0]], [0, [0.15841602665133975, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [31.39307036]
bas 1, expnt(s) = [3.47387058]
bas 2, expnt(s) = [0.15841603]
CPU time:        50.17
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 31.39307036 33.50737216  3.47387058  6.42873095  0.15841603  0.63440173]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.8369117398178796
cond(S) = 3.179312904898888
E1 = -18.498323461805104  E_coul = 4.754914277151696
init E= -13.7434091846534
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.251463458250877  LUMO = 29.650345936719
  mo_energy =
[-4.3434556  -0.25146346 29.65034594]
E1 = -19.038392649572373  E_coul = 5.098055738283805
cycle= 1 E= -13.9403369112886  delta_E= -0.197  |g|= 0.0417  |ddm|= 0.174
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.055673
diis-c [-0.00309948  1.        ]
  HOMO = -0.203835675955653  LUMO = 29.8283277092381
  mo_energy =
[-4.21731774 -0.20383568 29.82832771]
E1 = -19.03728765026947  E_coul = 5.0969243262283035
cycle= 2 E= -13.9403633240412  delta_E= -2.64e-05  |g|= 0.00123  |ddm|= 0.00207
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00163305
diis-c [-2.82165683e-09 -3.02027677e-02  1.03020277e+00]
  HOMO = -0.203849376138355  LUMO = 29.8267995187379
  mo_energy =
[-4.21788723 -0.20384938 29.82679952]
E1 = -19.037251874920372  E_coul = 5.096888528006522
cycle= 3 E= -13.9403633469139  delta_E= -2.29e-08  |g|= 8.87e-07  |ddm|= 6.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.09852e-07
diis-c [-2.49874719e-19  5.13918840e-04 -1.76345038e-02  1.01712058e+00]
  HOMO = -0.203849420963818  LUMO = 29.8267981878372
  mo_energy =
[-4.217888   -0.20384942 29.82679819]
E1 = -19.037251842629765  E_coul = 5.096888495715909
cycle= 4 E= -13.9403633469139  delta_E= -5.33e-15  |g|= 3.69e-10  |ddm|= 6.43e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.037251842629765  E_coul = 5.096888495715909
  HOMO = -0.20384942098935  LUMO = 29.8267981878615
  mo_energy =
[-4.217888   -0.20384942 29.82679819]
E1 = -19.037251842642892  E_coul = 5.096888495729031
Extra cycle  E= -13.9403633469139  delta_E= -5.33e-15  |g|= 1.07e-11  |ddm|= 2.02e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [31.39307036  3.47387058  0.15841603]
E = -13.94036334691386
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  31.3930703647        1
[INPUT] 0    0    [1    /1   ]  3.47387058085        1
[INPUT] 0    0    [1    /1   ]  0.158416026651       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [31.393070364722686, 1.0]], [0, [3.473870580854653, 1.0]], [0, [0.15841602665133975, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [31.39307036]
bas 1, expnt(s) = [3.47387058]
bas 2, expnt(s) = [0.15841603]
CPU time:        50.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 31.39307036 33.50737216  3.47387058  6.42873095  0.15841603  0.63440173]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.8369117398178796
cond(S) = 3.179312904898888
E1 = -18.498323461805104  E_coul = 4.754914277151696
init E= -13.7434091846534
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.251463458250877  LUMO = 29.650345936719
  mo_energy =
[-4.3434556  -0.25146346 29.65034594]
E1 = -19.038392649572373  E_coul = 5.098055738283805
cycle= 1 E= -13.9403369112886  delta_E= -0.197  |g|= 0.0417  |ddm|= 0.174
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.055673
diis-c [-0.00309948  1.        ]
  HOMO = -0.203835675955653  LUMO = 29.8283277092381
  mo_energy =
[-4.21731774 -0.20383568 29.82832771]
E1 = -19.03728765026947  E_coul = 5.0969243262283035
cycle= 2 E= -13.9403633240412  delta_E= -2.64e-05  |g|= 0.00123  |ddm|= 0.00207
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00163305
diis-c [-2.82165683e-09 -3.02027677e-02  1.03020277e+00]
  HOMO = -0.203849376138355  LUMO = 29.8267995187379
  mo_energy =
[-4.21788723 -0.20384938 29.82679952]
E1 = -19.037251874920372  E_coul = 5.096888528006522
cycle= 3 E= -13.9403633469139  delta_E= -2.29e-08  |g|= 8.87e-07  |ddm|= 6.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.09852e-07
diis-c [-2.49874719e-19  5.13918840e-04 -1.76345038e-02  1.01712058e+00]
  HOMO = -0.203849420963818  LUMO = 29.8267981878372
  mo_energy =
[-4.217888   -0.20384942 29.82679819]
E1 = -19.037251842629765  E_coul = 5.096888495715909
cycle= 4 E= -13.9403633469139  delta_E= -5.33e-15  |g|= 3.69e-10  |ddm|= 6.43e-08
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.037251842629765  E_coul = 5.096888495715909
  HOMO = -0.20384942098935  LUMO = 29.8267981878615
  mo_energy =
[-4.217888   -0.20384942 29.82679819]
E1 = -19.037251842642892  E_coul = 5.096888495729031
Extra cycle  E= -13.9403633469139  delta_E= -5.33e-15  |g|= 1.07e-11  |ddm|= 2.02e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.179312904898888
E1 = -19.037251842642892  E_coul = 5.096888495729031
init E= -13.9403633469139
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.203849420989135  LUMO = 29.8267981878766
  mo_energy =
[-4.217888   -0.20384942 29.82679819]
E1 = -19.037251842643244  E_coul = 5.096888495729384
cycle= 1 E= -13.9403633469139  delta_E= 1.78e-15  |g|= 3.05e-13  |ddm|= 5.63e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.037251842643244  E_coul = 5.096888495729384
  HOMO = -0.20384942098913  LUMO = 29.826798187877
  mo_energy =
[-4.217888   -0.20384942 29.82679819]
E1 = -19.03725184264325  E_coul = 5.0968884957293925
Extra cycle  E= -13.9403633469139  delta_E=    0  |g|= 1.9e-14  |ddm|= 1.54e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [31.39307036  3.47387058  0.15841603]
grad_E = [0.01246999 0.06924122 1.90149592]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  24.6642748635        1
[INPUT] 0    0    [1    /1   ]  3.27291646069        1
[INPUT] 0    0    [1    /1   ]  0.175358349674       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [24.664274863496683, 1.0]], [0, [3.272916460686582, 1.0]], [0, [0.17535834967444397, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [24.66427486]
bas 1, expnt(s) = [3.27291646]
bas 2, expnt(s) = [0.17535835]
CPU time:        53.02
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 24.66427486 27.96187487  3.27291646  6.14775023  0.17535835  0.6846362 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.7892948217435745
cond(S) = 3.7317170629150826
E1 = -18.555265149550433  E_coul = 4.763293646537636
init E= -13.7919715030128
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.233247019830903  LUMO = 23.3069349376341
  mo_energy =
[-4.3789037  -0.23324702 23.30693494]
E1 = -19.19063270666718  E_coul = 5.209571332670894
cycle= 1 E= -13.9810613739963  delta_E= -0.189  |g|= 0.0329  |ddm|= 0.237
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0423374
diis-c [-0.00179246  1.        ]
  HOMO = -0.175245822886341  LUMO = 23.5208887707915
  mo_energy =
[-4.21050937 -0.17524582 23.52088877]
E1 = -19.190063803015427  E_coul = 5.208981449343673
cycle= 2 E= -13.9810823536718  delta_E= -2.1e-05  |g|= 0.00106  |ddm|= 0.00214
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00137083
diis-c [-1.47869435e-08 -3.33259848e-02  1.03332598e+00]
  HOMO = -0.175243641637207  LUMO = 23.5199973591018
  mo_energy =
[-4.21081666 -0.17524364 23.51999736]
E1 = -19.190037837743784  E_coul = 5.2089554626641705
cycle= 3 E= -13.9810823750796  delta_E= -2.14e-08  |g|= 2.7e-06  |ddm|= 6.91e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.62534e-06
diis-c [-2.26623665e-18  7.15642528e-04 -2.24995075e-02  1.02178387e+00]
  HOMO = -0.175243816253619  LUMO = 23.5199928811445
  mo_energy =
[-4.21081971 -0.17524382 23.51999288]
E1 = -19.190037692242345  E_coul = 5.208955317162579
cycle= 4 E= -13.9810823750798  delta_E= -1.53e-13  |g|= 5.14e-10  |ddm|= 2.64e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.190037692242345  E_coul = 5.208955317162579
  HOMO = -0.175243816352386  LUMO = 23.5199928809244
  mo_energy =
[-4.21081971 -0.17524382 23.51999288]
E1 = -19.190037692267143  E_coul = 5.208955317187369
Extra cycle  E= -13.9810823750798  delta_E= -8.88e-15  |g|= 1.6e-11  |ddm|= 3.72e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [24.66427486  3.27291646  0.17535835]
E = -13.981082375079774
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  24.6642748635        1
[INPUT] 0    0    [1    /1   ]  3.27291646069        1
[INPUT] 0    0    [1    /1   ]  0.175358349674       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [24.664274863496683, 1.0]], [0, [3.272916460686582, 1.0]], [0, [0.17535834967444397, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [24.66427486]
bas 1, expnt(s) = [3.27291646]
bas 2, expnt(s) = [0.17535835]
CPU time:        53.46
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 24.66427486 27.96187487  3.27291646  6.14775023  0.17535835  0.6846362 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.7892948217435745
cond(S) = 3.7317170629150826
E1 = -18.555265149550433  E_coul = 4.763293646537636
init E= -13.7919715030128
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.233247019830903  LUMO = 23.3069349376341
  mo_energy =
[-4.3789037  -0.23324702 23.30693494]
E1 = -19.19063270666718  E_coul = 5.209571332670894
cycle= 1 E= -13.9810613739963  delta_E= -0.189  |g|= 0.0329  |ddm|= 0.237
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0423374
diis-c [-0.00179246  1.        ]
  HOMO = -0.175245822886341  LUMO = 23.5208887707915
  mo_energy =
[-4.21050937 -0.17524582 23.52088877]
E1 = -19.190063803015427  E_coul = 5.208981449343673
cycle= 2 E= -13.9810823536718  delta_E= -2.1e-05  |g|= 0.00106  |ddm|= 0.00214
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00137083
diis-c [-1.47869435e-08 -3.33259848e-02  1.03332598e+00]
  HOMO = -0.175243641637207  LUMO = 23.5199973591018
  mo_energy =
[-4.21081666 -0.17524364 23.51999736]
E1 = -19.190037837743784  E_coul = 5.2089554626641705
cycle= 3 E= -13.9810823750796  delta_E= -2.14e-08  |g|= 2.7e-06  |ddm|= 6.91e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.62534e-06
diis-c [-2.26623665e-18  7.15642528e-04 -2.24995075e-02  1.02178387e+00]
  HOMO = -0.175243816253619  LUMO = 23.5199928811445
  mo_energy =
[-4.21081971 -0.17524382 23.51999288]
E1 = -19.190037692242345  E_coul = 5.208955317162579
cycle= 4 E= -13.9810823750798  delta_E= -1.53e-13  |g|= 5.14e-10  |ddm|= 2.64e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.190037692242345  E_coul = 5.208955317162579
  HOMO = -0.175243816352386  LUMO = 23.5199928809244
  mo_energy =
[-4.21081971 -0.17524382 23.51999288]
E1 = -19.190037692267143  E_coul = 5.208955317187369
Extra cycle  E= -13.9810823750798  delta_E= -8.88e-15  |g|= 1.6e-11  |ddm|= 3.72e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.7317170629150826
E1 = -19.190037692267143  E_coul = 5.208955317187369
init E= -13.9810823750798
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.175243816351934  LUMO = 23.5199928809471
  mo_energy =
[-4.21081971 -0.17524382 23.51999288]
E1 = -19.19003769226781  E_coul = 5.208955317188056
cycle= 1 E= -13.9810823750798  delta_E= 1.95e-14  |g|= 5.3e-13  |ddm|= 1.08e-12
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.19003769226781  E_coul = 5.208955317188056
  HOMO = -0.175243816351925  LUMO = 23.5199928809477
  mo_energy =
[-4.21081971 -0.17524382 23.51999288]
E1 = -19.190037692267857  E_coul = 5.208955317188089
Extra cycle  E= -13.9810823750798  delta_E= -1.42e-14  |g|= 1.83e-14  |ddm|= 3.36e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [24.66427486  3.27291646  0.17535835]
grad_E = [0.00246531 0.1379228  2.2978324 ]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  21.9716544626        1
[INPUT] 0    0    [1    /1   ]  2.99746359016        1
[INPUT] 0    0    [1    /1   ]  0.168681844788       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [21.971654462636792, 1.0]], [0, [2.9974635901586195, 1.0]], [0, [0.16868184478848683, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [21.97165446]
bas 1, expnt(s) = [2.99746359]
bas 2, expnt(s) = [0.16868184]
CPU time:        55.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 21.97165446 25.63965013  2.99746359  5.75546559  0.16868184  0.66499179]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.8239478656404313
cond(S) = 3.8540564736192953
E1 = -18.62965193552633  E_coul = 4.748571222920184
init E= -13.8810807126061
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.241230449075644  LUMO = 20.170949403967
  mo_energy =
[-4.40108475 -0.24123045 20.1709494 ]
E1 = -19.123815324596322  E_coul = 5.094362814548058
cycle= 1 E= -14.0294525100483  delta_E= -0.148  |g|= 0.0386  |ddm|= 0.204
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0494964
diis-c [-0.0024499  1.       ]
  HOMO = -0.195080655786059  LUMO = 20.3214744856384
  mo_energy =
[-4.27248004 -0.19508066 20.32147449]
E1 = -19.12295465987609  E_coul = 5.093469363033133
cycle= 2 E= -14.029485296843  delta_E= -3.28e-05  |g|= 0.00134  |ddm|= 0.00283
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00171897
diis-c [-6.36716243e-09 -3.59386641e-02  1.03593866e+00]
  HOMO = -0.195078601322693  LUMO = 20.3203006823935
  mo_energy =
[-4.27294546 -0.1950786  20.32030068]
E1 = -19.12291782977133  E_coul = 5.093432493938026
cycle= 3 E= -14.0294853358333  delta_E= -3.9e-08  |g|= 1.91e-06  |ddm|= 0.0001
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.79889e-06
diis-c [-9.27882242e-18  8.25094815e-04 -2.38472573e-02  1.02302216e+00]
  HOMO = -0.195078725665552  LUMO = 20.3202975758268
  mo_energy =
[-4.27294775 -0.19507873 20.32029758]
E1 = -19.122917715275964  E_coul = 5.0934323794425715
cycle= 4 E= -14.0294853358334  delta_E= -9.06e-14  |g|= 9.13e-10  |ddm|= 2.22e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.122917715275964  E_coul = 5.0934323794425715
  HOMO = -0.1950787258334  LUMO = 20.3202975756037
  mo_energy =
[-4.27294775 -0.19507873 20.32029758]
E1 = -19.122917715325176  E_coul = 5.093432379491791
Extra cycle  E= -14.0294853358334  delta_E= 7.11e-15  |g|= 2.94e-11  |ddm|= 7.37e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [21.97165446  2.99746359  0.16868184]
E = -14.029485335833385
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  21.9716544626        1
[INPUT] 0    0    [1    /1   ]  2.99746359016        1
[INPUT] 0    0    [1    /1   ]  0.168681844788       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [21.971654462636792, 1.0]], [0, [2.9974635901586195, 1.0]], [0, [0.16868184478848683, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [21.97165446]
bas 1, expnt(s) = [2.99746359]
bas 2, expnt(s) = [0.16868184]
CPU time:        56.26
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 21.97165446 25.63965013  2.99746359  5.75546559  0.16868184  0.66499179]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.8239478656404313
cond(S) = 3.8540564736192953
E1 = -18.62965193552633  E_coul = 4.748571222920184
init E= -13.8810807126061
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.241230449075644  LUMO = 20.170949403967
  mo_energy =
[-4.40108475 -0.24123045 20.1709494 ]
E1 = -19.123815324596322  E_coul = 5.094362814548058
cycle= 1 E= -14.0294525100483  delta_E= -0.148  |g|= 0.0386  |ddm|= 0.204
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0494964
diis-c [-0.0024499  1.       ]
  HOMO = -0.195080655786059  LUMO = 20.3214744856384
  mo_energy =
[-4.27248004 -0.19508066 20.32147449]
E1 = -19.12295465987609  E_coul = 5.093469363033133
cycle= 2 E= -14.029485296843  delta_E= -3.28e-05  |g|= 0.00134  |ddm|= 0.00283
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00171897
diis-c [-6.36716243e-09 -3.59386641e-02  1.03593866e+00]
  HOMO = -0.195078601322693  LUMO = 20.3203006823935
  mo_energy =
[-4.27294546 -0.1950786  20.32030068]
E1 = -19.12291782977133  E_coul = 5.093432493938026
cycle= 3 E= -14.0294853358333  delta_E= -3.9e-08  |g|= 1.91e-06  |ddm|= 0.0001
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.79889e-06
diis-c [-9.27882242e-18  8.25094815e-04 -2.38472573e-02  1.02302216e+00]
  HOMO = -0.195078725665552  LUMO = 20.3202975758268
  mo_energy =
[-4.27294775 -0.19507873 20.32029758]
E1 = -19.122917715275964  E_coul = 5.0934323794425715
cycle= 4 E= -14.0294853358334  delta_E= -9.06e-14  |g|= 9.13e-10  |ddm|= 2.22e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.122917715275964  E_coul = 5.0934323794425715
  HOMO = -0.1950787258334  LUMO = 20.3202975756037
  mo_energy =
[-4.27294775 -0.19507873 20.32029758]
E1 = -19.122917715325176  E_coul = 5.093432379491791
Extra cycle  E= -14.0294853358334  delta_E= 7.11e-15  |g|= 2.94e-11  |ddm|= 7.37e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.8540564736192953
E1 = -19.122917715325176  E_coul = 5.093432379491791
init E= -14.0294853358334
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.19507872583261  LUMO = 20.3202975756458
  mo_energy =
[-4.27294775 -0.19507873 20.32029758]
E1 = -19.122917715326615  E_coul = 5.0934323794932155
cycle= 1 E= -14.0294853358334  delta_E= -1.42e-14  |g|= 9.78e-13  |ddm|= 2.22e-12
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.122917715326615  E_coul = 5.0934323794932155
  HOMO = -0.19507872583259  LUMO = 20.3202975756471
  mo_energy =
[-4.27294775 -0.19507873 20.32029758]
E1 = -19.12291771532665  E_coul = 5.093432379493257
Extra cycle  E= -14.0294853358334  delta_E= 7.11e-15  |g|= 3.03e-14  |ddm|= 7.14e-14
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [21.97165446  2.99746359  0.16868184]
grad_E = [2.03820312e-03 6.00949822e-02 2.16193702e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  14.6114392344        1
[INPUT] 0    0    [1    /1   ]  2.83611014888        1
[INPUT] 0    0    [1    /1   ]  0.0158125494851      1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [14.611439234420775, 1.0]], [0, [2.83611014888109, 1.0]], [0, [0.015812549485116685, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [14.61143923]
bas 1, expnt(s) = [2.83611015]
bas 2, expnt(s) = [0.01581255]
CPU time:        58.50
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.46114392e+01 1.88814252e+01 2.83611015e+00 5.52150341e+00
 1.58125495e-02 1.12659144e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 2.711726453220083
cond(S) = 4.490206804537297
E1 = -15.55517730186382  E_coul = 2.7354689124777147
init E= -12.8197083893861
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.310100835275972  LUMO = 12.8890761265629
  mo_energy =
[-5.15085039 -0.31010084 12.88907613]
E1 = -16.90994699172969  E_coul = 3.307661037244326
cycle= 1 E= -13.6022859544854  delta_E= -0.783  |g|= 0.038  |ddm|= 1.35
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0385091
diis-c [-0.00148295  1.        ]
  HOMO = -0.219563611552089  LUMO = 13.1603767584939
  mo_energy =
[-4.92777283 -0.21956361 13.16037676]
E1 = -16.911265361538543  E_coul = 3.308930227031365
cycle= 2 E= -13.6023351345072  delta_E= -4.92e-05  |g|= 0.00116  |ddm|= 0.00556
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00125904
diis-c [-2.87734672e-07 -3.04833206e-02  1.03048332e+00]
  HOMO = -0.219567937643466  LUMO = 13.1613613429917
  mo_energy =
[-4.92711521 -0.21956794 13.16136134]
E1 = -16.9113367014759  E_coul = 3.3090015262458254
cycle= 3 E= -13.6023351752301  delta_E= -4.07e-08  |g|= 1.52e-05  |ddm|= 0.000143
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60471e-05
diis-c [-4.49734261e-17  6.30387633e-04 -2.79443632e-02  1.02731398e+00]
  HOMO = -0.219567853721958  LUMO = 13.1613803956226
  mo_energy =
[-4.9270984  -0.21956785 13.1613804 ]
E1 = -16.911337842181013  E_coul = 3.309002666944003
cycle= 4 E= -13.602335175237  delta_E= -6.93e-12  |g|= 1.35e-09  |ddm|= 1.96e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -16.911337842181013  E_coul = 3.309002666944003
  HOMO = -0.219567853911345  LUMO = 13.1613803943611
  mo_energy =
[-4.9270984  -0.21956785 13.16138039]
E1 = -16.911337842277362  E_coul = 3.3090026670403487
Extra cycle  E= -13.602335175237  delta_E= -3.55e-15  |g|= 5.6e-11  |ddm|= 1.5e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [14.61143923  2.83611015  0.01581255]
E = -13.602335175237013
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  14.6114392344        1
[INPUT] 0    0    [1    /1   ]  2.83611014888        1
[INPUT] 0    0    [1    /1   ]  0.0158125494851      1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [14.611439234420775, 1.0]], [0, [2.83611014888109, 1.0]], [0, [0.015812549485116685, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [14.61143923]
bas 1, expnt(s) = [2.83611015]
bas 2, expnt(s) = [0.01581255]
CPU time:        58.92
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.46114392e+01 1.88814252e+01 2.83611015e+00 5.52150341e+00
 1.58125495e-02 1.12659144e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 2.711726453220083
cond(S) = 4.490206804537297
E1 = -15.55517730186382  E_coul = 2.7354689124777147
init E= -12.8197083893861
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.310100835275972  LUMO = 12.8890761265629
  mo_energy =
[-5.15085039 -0.31010084 12.88907613]
E1 = -16.90994699172969  E_coul = 3.307661037244326
cycle= 1 E= -13.6022859544854  delta_E= -0.783  |g|= 0.038  |ddm|= 1.35
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0385091
diis-c [-0.00148295  1.        ]
  HOMO = -0.219563611552089  LUMO = 13.1603767584939
  mo_energy =
[-4.92777283 -0.21956361 13.16037676]
E1 = -16.911265361538543  E_coul = 3.308930227031365
cycle= 2 E= -13.6023351345072  delta_E= -4.92e-05  |g|= 0.00116  |ddm|= 0.00556
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00125904
diis-c [-2.87734672e-07 -3.04833206e-02  1.03048332e+00]
  HOMO = -0.219567937643466  LUMO = 13.1613613429917
  mo_energy =
[-4.92711521 -0.21956794 13.16136134]
E1 = -16.9113367014759  E_coul = 3.3090015262458254
cycle= 3 E= -13.6023351752301  delta_E= -4.07e-08  |g|= 1.52e-05  |ddm|= 0.000143
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60471e-05
diis-c [-4.49734261e-17  6.30387633e-04 -2.79443632e-02  1.02731398e+00]
  HOMO = -0.219567853721958  LUMO = 13.1613803956226
  mo_energy =
[-4.9270984  -0.21956785 13.1613804 ]
E1 = -16.911337842181013  E_coul = 3.309002666944003
cycle= 4 E= -13.602335175237  delta_E= -6.93e-12  |g|= 1.35e-09  |ddm|= 1.96e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -16.911337842181013  E_coul = 3.309002666944003
  HOMO = -0.219567853911345  LUMO = 13.1613803943611
  mo_energy =
[-4.9270984  -0.21956785 13.16138039]
E1 = -16.911337842277362  E_coul = 3.3090026670403487
Extra cycle  E= -13.602335175237  delta_E= -3.55e-15  |g|= 5.6e-11  |ddm|= 1.5e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 4.490206804537297
E1 = -16.911337842277362  E_coul = 3.3090026670403487
init E= -13.602335175237
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.21956785391131  LUMO = 13.161380394422
  mo_energy =
[-4.9270984  -0.21956785 13.16138039]
E1 = -16.91133784228133  E_coul = 3.3090026670443207
cycle= 1 E= -13.602335175237  delta_E= 3.55e-15  |g|= 2.34e-12  |ddm|= 6.23e-12
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -16.91133784228133  E_coul = 3.3090026670443207
  HOMO = -0.219567853911309  LUMO = 13.1613803944245
  mo_energy =
[-4.9270984  -0.21956785 13.16138039]
E1 = -16.911337842281494  E_coul = 3.3090026670444836
Extra cycle  E= -13.602335175237  delta_E= -1.78e-15  |g|= 1.03e-13  |ddm|= 2.59e-13
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [14.61143923  2.83611015  0.01581255]
grad_E = [ -0.05328456   0.3652903  -15.13626658]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.3821159161        1
[INPUT] 0    0    [1    /1   ]  2.94069473995        1
[INPUT] 0    0    [1    /1   ]  0.114897964767       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.382115916129926, 1.0]], [0, [2.9406947399491985, 1.0]], [0, [0.11489796476717293, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.38211592]
bas 1, expnt(s) = [2.94069474]
bas 2, expnt(s) = [0.11489796]
CPU time:        61.31
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.38211592 23.33812245  2.94069474  5.6735186   0.11489796  0.49859656]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9619440528413237
cond(S) = 3.913455357865224
E1 = -18.60816677587413  E_coul = 4.598797783343004
init E= -14.0093689925311
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.293327919973654  LUMO = 17.7477846859473
  mo_energy =
[-4.45825972 -0.29332792 17.74778469]
E1 = -18.800384613408813  E_coul = 4.6989115588470876
cycle= 1 E= -14.1014730545617  delta_E= -0.0921  |g|= 0.0134  |ddm|= 0.0329
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156936
diis-c [-2.4628822e-04  1.0000000e+00]
  HOMO = -0.279882699619053  LUMO = 17.8071278184475
  mo_energy =
[-4.42140007 -0.2798827  17.80712782]
E1 = -18.799574842233547  E_coul = 4.6980976012341795
cycle= 2 E= -14.1014772409994  delta_E= -4.19e-06  |g|= 0.000457  |ddm|= 0.00121
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000548313
diis-c [-4.25502973e-09 -3.59375572e-02  1.03593756e+00]
  HOMO = -0.279890657950294  LUMO = 17.8064779194217
  mo_energy =
[-4.42181379 -0.27989066 17.80647792]
E1 = -18.79954837846047  E_coul = 4.698071132583769
cycle= 3 E= -14.1014772458767  delta_E= -4.88e-09  |g|= 1.6e-06  |ddm|= 4.06e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60813e-06
diis-c [ 3.04931861e-20  8.71995772e-04 -2.56980553e-02  1.02482606e+00]
  HOMO = -0.279890586081616  LUMO = 17.8064791504172
  mo_energy =
[-4.42181244 -0.27989059 17.80647915]
E1 = -18.79954843087793  E_coul = 4.698071185001149
cycle= 4 E= -14.1014772458768  delta_E= -7.99e-14  |g|= 6.75e-11  |ddm|= 2e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.79954843087793  E_coul = 4.698071185001149
  HOMO = -0.279890586084357  LUMO = 17.8064791505398
  mo_energy =
[-4.42181244 -0.27989059 17.80647915]
E1 = -18.79954843088148  E_coul = 4.698071185004708
Extra cycle  E= -14.1014772458768  delta_E= 8.88e-15  |g|= 2.41e-12  |ddm|= 5.67e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [19.38211592  2.94069474  0.11489796]
E = -14.101477245876772
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.3821159161        1
[INPUT] 0    0    [1    /1   ]  2.94069473995        1
[INPUT] 0    0    [1    /1   ]  0.114897964767       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.382115916129926, 1.0]], [0, [2.9406947399491985, 1.0]], [0, [0.11489796476717293, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.38211592]
bas 1, expnt(s) = [2.94069474]
bas 2, expnt(s) = [0.11489796]
CPU time:        61.80
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.38211592 23.33812245  2.94069474  5.6735186   0.11489796  0.49859656]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9619440528413237
cond(S) = 3.913455357865224
E1 = -18.60816677587413  E_coul = 4.598797783343004
init E= -14.0093689925311
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.293327919973654  LUMO = 17.7477846859473
  mo_energy =
[-4.45825972 -0.29332792 17.74778469]
E1 = -18.800384613408813  E_coul = 4.6989115588470876
cycle= 1 E= -14.1014730545617  delta_E= -0.0921  |g|= 0.0134  |ddm|= 0.0329
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156936
diis-c [-2.4628822e-04  1.0000000e+00]
  HOMO = -0.279882699619053  LUMO = 17.8071278184475
  mo_energy =
[-4.42140007 -0.2798827  17.80712782]
E1 = -18.799574842233547  E_coul = 4.6980976012341795
cycle= 2 E= -14.1014772409994  delta_E= -4.19e-06  |g|= 0.000457  |ddm|= 0.00121
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000548313
diis-c [-4.25502973e-09 -3.59375572e-02  1.03593756e+00]
  HOMO = -0.279890657950294  LUMO = 17.8064779194217
  mo_energy =
[-4.42181379 -0.27989066 17.80647792]
E1 = -18.79954837846047  E_coul = 4.698071132583769
cycle= 3 E= -14.1014772458767  delta_E= -4.88e-09  |g|= 1.6e-06  |ddm|= 4.06e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60813e-06
diis-c [ 3.04931861e-20  8.71995772e-04 -2.56980553e-02  1.02482606e+00]
  HOMO = -0.279890586081616  LUMO = 17.8064791504172
  mo_energy =
[-4.42181244 -0.27989059 17.80647915]
E1 = -18.79954843087793  E_coul = 4.698071185001149
cycle= 4 E= -14.1014772458768  delta_E= -7.99e-14  |g|= 6.75e-11  |ddm|= 2e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.79954843087793  E_coul = 4.698071185001149
  HOMO = -0.279890586084357  LUMO = 17.8064791505398
  mo_energy =
[-4.42181244 -0.27989059 17.80647915]
E1 = -18.79954843088148  E_coul = 4.698071185004708
Extra cycle  E= -14.1014772458768  delta_E= 8.88e-15  |g|= 2.41e-12  |ddm|= 5.67e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.913455357865224
E1 = -18.79954843088148  E_coul = 4.698071185004708
init E= -14.1014772458768
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.279890586084334  LUMO = 17.8064791505428
  mo_energy =
[-4.42181244 -0.27989059 17.80647915]
E1 = -18.799548430881625  E_coul = 4.69807118500484
cycle= 1 E= -14.1014772458768  delta_E= -1.42e-14  |g|= 8.01e-14  |ddm|= 1.99e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.799548430881625  E_coul = 4.69807118500484
  HOMO = -0.279890586084331  LUMO = 17.8064791505429
  mo_energy =
[-4.42181244 -0.27989059 17.80647915]
E1 = -18.799548430881618  E_coul = 4.69807118500484
Extra cycle  E= -14.1014772458768  delta_E= 7.11e-15  |g|= 6.1e-15  |ddm|= 7.89e-15
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [19.38211592  2.94069474  0.11489796]
grad_E = [-0.01065541  0.1483045   0.49792284]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  22.3603909722        1
[INPUT] 0    0    [1    /1   ]  2.77236707422        1
[INPUT] 0    0    [1    /1   ]  0.078684405037       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [22.360390972170233, 1.0]], [0, [2.7723670742244613, 1.0]], [0, [0.07868440503700921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [22.36039097]
bas 1, expnt(s) = [2.77236707]
bas 2, expnt(s) = [0.07868441]
CPU time:        64.36
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 22.36039097 25.97912795  2.77236707  5.42816541  0.07868441  0.37534577]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.925227666546563
cond(S) = 3.2037993469336965
E1 = -18.15058149289679  E_coul = 4.213951536699557
init E= -13.9366299561972
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.32530383325992  LUMO = 19.1775500915909
  mo_energy =
[-4.60934148 -0.32530383 19.17755009]
E1 = -18.327114358755505  E_coul = 4.243022094531247
cycle= 1 E= -14.0840922642243  delta_E= -0.147  |g|= 0.0403  |ddm|= 0.159
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0452019
diis-c [-0.00204321  1.        ]
  HOMO = -0.310380837810307  LUMO = 19.1759667102403
  mo_energy =
[-4.61017235 -0.31038084 19.17596671]
E1 = -18.324811639331823  E_coul = 4.24068227645249
cycle= 2 E= -14.0841293628793  delta_E= -3.71e-05  |g|= 0.00105  |ddm|= 0.00371
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00123721
diis-c [-9.57599680e-08 -2.72227512e-02  1.02722275e+00]
  HOMO = -0.310402120011934  LUMO = 19.1740019131577
  mo_energy =
[-4.6113533  -0.31040212 19.17400191]
E1 = -18.32475027201084  E_coul = 4.240620884985803
cycle= 3 E= -14.084129387025  delta_E= -2.41e-08  |g|= 6.46e-06  |ddm|= 9.03e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.80414e-06
diis-c [-9.73177329e-18  6.30097116e-04 -2.55495262e-02  1.02491943e+00]
  HOMO = -0.310401993109775  LUMO = 19.1740005293187
  mo_energy =
[-4.61135229 -0.31040199 19.17400053]
E1 = -18.32475021402242  E_coul = 4.240620826996354
cycle= 4 E= -14.0841293870261  delta_E= -1.03e-12  |g|= 7.74e-10  |ddm|= 5.82e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.32475021402242  E_coul = 4.240620826996354
  HOMO = -0.310401993216429  LUMO = 19.174000529359
  mo_energy =
[-4.61135229 -0.31040199 19.17400053]
E1 = -18.324750214064665  E_coul = 4.2406208270385894
Extra cycle  E= -14.0841293870261  delta_E= -8.88e-15  |g|= 2.37e-11  |ddm|= 6.13e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [22.36039097  2.77236707  0.07868441]
E = -14.084129387026074
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  22.3603909722        1
[INPUT] 0    0    [1    /1   ]  2.77236707422        1
[INPUT] 0    0    [1    /1   ]  0.078684405037       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [22.360390972170233, 1.0]], [0, [2.7723670742244613, 1.0]], [0, [0.07868440503700921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [22.36039097]
bas 1, expnt(s) = [2.77236707]
bas 2, expnt(s) = [0.07868441]
CPU time:        64.88
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 22.36039097 25.97912795  2.77236707  5.42816541  0.07868441  0.37534577]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.925227666546563
cond(S) = 3.2037993469336965
E1 = -18.15058149289679  E_coul = 4.213951536699557
init E= -13.9366299561972
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.32530383325992  LUMO = 19.1775500915909
  mo_energy =
[-4.60934148 -0.32530383 19.17755009]
E1 = -18.327114358755505  E_coul = 4.243022094531247
cycle= 1 E= -14.0840922642243  delta_E= -0.147  |g|= 0.0403  |ddm|= 0.159
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0452019
diis-c [-0.00204321  1.        ]
  HOMO = -0.310380837810307  LUMO = 19.1759667102403
  mo_energy =
[-4.61017235 -0.31038084 19.17596671]
E1 = -18.324811639331823  E_coul = 4.24068227645249
cycle= 2 E= -14.0841293628793  delta_E= -3.71e-05  |g|= 0.00105  |ddm|= 0.00371
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00123721
diis-c [-9.57599680e-08 -2.72227512e-02  1.02722275e+00]
  HOMO = -0.310402120011934  LUMO = 19.1740019131577
  mo_energy =
[-4.6113533  -0.31040212 19.17400191]
E1 = -18.32475027201084  E_coul = 4.240620884985803
cycle= 3 E= -14.084129387025  delta_E= -2.41e-08  |g|= 6.46e-06  |ddm|= 9.03e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.80414e-06
diis-c [-9.73177329e-18  6.30097116e-04 -2.55495262e-02  1.02491943e+00]
  HOMO = -0.310401993109775  LUMO = 19.1740005293187
  mo_energy =
[-4.61135229 -0.31040199 19.17400053]
E1 = -18.32475021402242  E_coul = 4.240620826996354
cycle= 4 E= -14.0841293870261  delta_E= -1.03e-12  |g|= 7.74e-10  |ddm|= 5.82e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.32475021402242  E_coul = 4.240620826996354
  HOMO = -0.310401993216429  LUMO = 19.174000529359
  mo_energy =
[-4.61135229 -0.31040199 19.17400053]
E1 = -18.324750214064665  E_coul = 4.2406208270385894
Extra cycle  E= -14.0841293870261  delta_E= -8.88e-15  |g|= 2.37e-11  |ddm|= 6.13e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.2037993469336965
E1 = -18.324750214064665  E_coul = 4.2406208270385894
init E= -14.0841293870261
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.310401993216176  LUMO = 19.1740005293972
  mo_energy =
[-4.61135229 -0.31040199 19.17400053]
E1 = -18.324750214065865  E_coul = 4.2406208270397965
cycle= 1 E= -14.0841293870261  delta_E= 5.33e-15  |g|= 7.36e-13  |ddm|= 1.8e-12
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.324750214065865  E_coul = 4.2406208270397965
  HOMO = -0.310401993216171  LUMO = 19.1740005293984
  mo_energy =
[-4.61135229 -0.31040199 19.17400053]
E1 = -18.324750214065904  E_coul = 4.240620827039833
Extra cycle  E= -14.0841293870261  delta_E= -1.78e-15  |g|= 2.23e-14  |ddm|= 5.53e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [22.36039097  2.77236707  0.07868441]
grad_E = [ 0.01334576 -0.11441202 -1.46197082]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  20.597134622         1
[INPUT] 0    0    [1    /1   ]  2.87202369422        1
[INPUT] 0    0    [1    /1   ]  0.100124261315       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [20.597134621981997, 1.0]], [0, [2.872023694219834, 1.0]], [0, [0.10012426131476598, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [20.59713462]
bas 1, expnt(s) = [2.87202369]
bas 2, expnt(s) = [0.10012426]
CPU time:        67.48
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 20.59713462 24.42699986  2.87202369  5.57385977  0.10012426  0.44969651]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.970115710468122
cond(S) = 3.5924849960318674
E1 = -18.507166473591898  E_coul = 4.480589788774863
init E= -14.026576684817
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.306693592093436  LUMO = 18.3393493924724
  mo_energy =
[-4.51136617 -0.30669359 18.33934939]
E1 = -18.641311090542548  E_coul = 4.524528357991574
cycle= 1 E= -14.116782732551  delta_E= -0.0902  |g|= 0.0237  |ddm|= 0.0521
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0266317
diis-c [-7.0924911e-04  1.0000000e+00]
  HOMO = -0.296473690924857  LUMO = 18.3649966014573
  mo_energy =
[-4.49965987 -0.29647369 18.3649966 ]
E1 = -18.63982135747048  E_coul = 4.523025523252299
cycle= 2 E= -14.1167958342182  delta_E= -1.31e-05  |g|= 0.000699  |ddm|= 0.00227
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000823281
diis-c [-2.74262638e-08 -3.12278733e-02  1.03122787e+00]
  HOMO = -0.296489869081696  LUMO = 18.3638130966881
  mo_energy =
[-4.50041876 -0.29648987 18.3638131 ]
E1 = -18.639778112214504  E_coul = 4.522982266864157
cycle= 3 E= -14.1167958453503  delta_E= -1.11e-08  |g|= 3.84e-06  |ddm|= 6.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.30673e-06
diis-c [-1.34858233e-18  7.65582336e-04 -2.66267996e-02  1.02586122e+00]
  HOMO = -0.296489750314015  LUMO = 18.3638139714221
  mo_energy =
[-4.50041702 -0.29648975 18.36381397]
E1 = -18.63977814322303  E_coul = 4.5229822978722884
cycle= 4 E= -14.1167958453507  delta_E= -3.94e-13  |g|= 2.56e-10  |ddm|= 4.08e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.63977814322303  E_coul = 4.5229822978722884
  HOMO = -0.296489750347577  LUMO = 18.3638139716111
  mo_energy =
[-4.50041702 -0.29648975 18.36381397]
E1 = -18.63977814323769  E_coul = 4.522982297886947
Extra cycle  E= -14.1167958453507  delta_E= -3.55e-15  |g|= 8.42e-12  |ddm|= 2.15e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [20.59713462  2.87202369  0.10012426]
E = -14.116795845350744
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  20.597134622         1
[INPUT] 0    0    [1    /1   ]  2.87202369422        1
[INPUT] 0    0    [1    /1   ]  0.100124261315       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [20.597134621981997, 1.0]], [0, [2.872023694219834, 1.0]], [0, [0.10012426131476598, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [20.59713462]
bas 1, expnt(s) = [2.87202369]
bas 2, expnt(s) = [0.10012426]
CPU time:        68.05
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 20.59713462 24.42699986  2.87202369  5.57385977  0.10012426  0.44969651]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.970115710468122
cond(S) = 3.5924849960318674
E1 = -18.507166473591898  E_coul = 4.480589788774863
init E= -14.026576684817
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306693592093436  LUMO = 18.3393493924724
  mo_energy =
[-4.51136617 -0.30669359 18.33934939]
E1 = -18.641311090542548  E_coul = 4.524528357991574
cycle= 1 E= -14.116782732551  delta_E= -0.0902  |g|= 0.0237  |ddm|= 0.0521
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0266317
diis-c [-7.0924911e-04  1.0000000e+00]
  HOMO = -0.296473690924857  LUMO = 18.3649966014573
  mo_energy =
[-4.49965987 -0.29647369 18.3649966 ]
E1 = -18.63982135747048  E_coul = 4.523025523252299
cycle= 2 E= -14.1167958342182  delta_E= -1.31e-05  |g|= 0.000699  |ddm|= 0.00227
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000823281
diis-c [-2.74262638e-08 -3.12278733e-02  1.03122787e+00]
  HOMO = -0.296489869081696  LUMO = 18.3638130966881
  mo_energy =
[-4.50041876 -0.29648987 18.3638131 ]
E1 = -18.639778112214504  E_coul = 4.522982266864157
cycle= 3 E= -14.1167958453503  delta_E= -1.11e-08  |g|= 3.84e-06  |ddm|= 6.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.30673e-06
diis-c [-1.34858233e-18  7.65582336e-04 -2.66267996e-02  1.02586122e+00]
  HOMO = -0.296489750314015  LUMO = 18.3638139714221
  mo_energy =
[-4.50041702 -0.29648975 18.36381397]
E1 = -18.63977814322303  E_coul = 4.5229822978722884
cycle= 4 E= -14.1167958453507  delta_E= -3.94e-13  |g|= 2.56e-10  |ddm|= 4.08e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.63977814322303  E_coul = 4.5229822978722884
  HOMO = -0.296489750347577  LUMO = 18.3638139716111
  mo_energy =
[-4.50041702 -0.29648975 18.36381397]
E1 = -18.63977814323769  E_coul = 4.522982297886947
Extra cycle  E= -14.1167958453507  delta_E= -3.55e-15  |g|= 8.42e-12  |ddm|= 2.15e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.5924849960318674
E1 = -18.63977814323769  E_coul = 4.522982297886947
init E= -14.1167958453507
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.296489750347465  LUMO = 18.3638139716233
  mo_energy =
[-4.50041702 -0.29648975 18.36381397]
E1 = -18.639778143238125  E_coul = 4.52298229788739
cycle= 1 E= -14.1167958453507  delta_E= 8.88e-15  |g|= 2.87e-13  |ddm|= 6.8e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.639778143238125  E_coul = 4.52298229788739
  HOMO = -0.296489750347463  LUMO = 18.3638139716236
  mo_energy =
[-4.50041702 -0.29648975 18.36381397]
E1 = -18.63977814323817  E_coul = 4.522982297887417
Extra cycle  E= -14.1167958453508  delta_E= -1.95e-14  |g|= 1.38e-14  |ddm|= 2.12e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [20.59713462  2.87202369  0.10012426]
grad_E = [ 0.00027647  0.04321297 -0.17160342]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.3328343399        1
[INPUT] 0    0    [1    /1   ]  2.71195326006        1
[INPUT] 0    0    [1    /1   ]  0.104462432075       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.3328343398938, 1.0]], [0, [2.711953260064253, 1.0]], [0, [0.10446243207478513, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.33283434]
bas 1, expnt(s) = [2.71195326]
bas 2, expnt(s) = [0.10446243]
CPU time:        70.65
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.33283434 23.29360311  2.71195326  5.33920596  0.10446243  0.46423205]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.974353543320317
cond(S) = 3.660886329051742
E1 = -18.551004019893146  E_coul = 4.50931936180799
init E= -14.0416846580852
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301428572622992  LUMO = 16.8536076573236
  mo_energy =
[-4.50359908 -0.30142857 16.85360766]
E1 = -18.64578210656797  E_coul = 4.526029527742857
cycle= 1 E= -14.1197525788251  delta_E= -0.0781  |g|= 0.0282  |ddm|= 0.0696
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0327147
diis-c [-0.00107025  1.        ]
  HOMO = -0.293060897154654  LUMO = 16.8592119991323
  mo_energy =
[-4.50381014 -0.2930609  16.859212  ]
E1 = -18.6439232641867  E_coul = 4.524151077235677
cycle= 2 E= -14.119772186951  delta_E= -1.96e-05  |g|= 0.000886  |ddm|= 0.00274
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106489
diis-c [-3.08536746e-08 -3.31702730e-02  1.03317027e+00]
  HOMO = -0.293079907291518  LUMO = 16.857745544144
  mo_energy =
[-4.50476182 -0.29307991 16.85774554]
E1 = -18.64386712716701  E_coul = 4.524094921164332
cycle= 3 E= -14.1197722060027  delta_E= -1.91e-08  |g|= 4.37e-06  |ddm|= 8.21e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.67697e-06
diis-c [-2.10879440e-18  8.43963892e-04 -2.73818326e-02  1.02653787e+00]
  HOMO = -0.293079740388347  LUMO = 16.8577478621739
  mo_energy =
[-4.50475885 -0.29307974 16.85774786]
E1 = -18.643867220980137  E_coul = 4.524095014976893
cycle= 4 E= -14.1197722060032  delta_E= -5.67e-13  |g|= 3.59e-10  |ddm|= 5.37e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.643867220980137  E_coul = 4.524095014976893
  HOMO = -0.293079740417484  LUMO = 16.8577478626591
  mo_energy =
[-4.50475886 -0.29307974 16.85774786]
E1 = -18.643867221001123  E_coul = 4.524095014997881
Extra cycle  E= -14.1197722060032  delta_E= 1.78e-15  |g|= 1.22e-11  |ddm|= 3.13e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [19.33283434  2.71195326  0.10446243]
E = -14.119772206003242
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.3328343399        1
[INPUT] 0    0    [1    /1   ]  2.71195326006        1
[INPUT] 0    0    [1    /1   ]  0.104462432075       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.3328343398938, 1.0]], [0, [2.711953260064253, 1.0]], [0, [0.10446243207478513, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.33283434]
bas 1, expnt(s) = [2.71195326]
bas 2, expnt(s) = [0.10446243]
CPU time:        71.20
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.33283434 23.29360311  2.71195326  5.33920596  0.10446243  0.46423205]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.974353543320317
cond(S) = 3.660886329051742
E1 = -18.551004019893146  E_coul = 4.50931936180799
init E= -14.0416846580852
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301428572622992  LUMO = 16.8536076573236
  mo_energy =
[-4.50359908 -0.30142857 16.85360766]
E1 = -18.64578210656797  E_coul = 4.526029527742857
cycle= 1 E= -14.1197525788251  delta_E= -0.0781  |g|= 0.0282  |ddm|= 0.0696
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0327147
diis-c [-0.00107025  1.        ]
  HOMO = -0.293060897154654  LUMO = 16.8592119991323
  mo_energy =
[-4.50381014 -0.2930609  16.859212  ]
E1 = -18.6439232641867  E_coul = 4.524151077235677
cycle= 2 E= -14.119772186951  delta_E= -1.96e-05  |g|= 0.000886  |ddm|= 0.00274
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106489
diis-c [-3.08536746e-08 -3.31702730e-02  1.03317027e+00]
  HOMO = -0.293079907291518  LUMO = 16.857745544144
  mo_energy =
[-4.50476182 -0.29307991 16.85774554]
E1 = -18.64386712716701  E_coul = 4.524094921164332
cycle= 3 E= -14.1197722060027  delta_E= -1.91e-08  |g|= 4.37e-06  |ddm|= 8.21e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.67697e-06
diis-c [-2.10879440e-18  8.43963892e-04 -2.73818326e-02  1.02653787e+00]
  HOMO = -0.293079740388347  LUMO = 16.8577478621739
  mo_energy =
[-4.50475885 -0.29307974 16.85774786]
E1 = -18.643867220980137  E_coul = 4.524095014976893
cycle= 4 E= -14.1197722060032  delta_E= -5.67e-13  |g|= 3.59e-10  |ddm|= 5.37e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.643867220980137  E_coul = 4.524095014976893
  HOMO = -0.293079740417484  LUMO = 16.8577478626591
  mo_energy =
[-4.50475886 -0.29307974 16.85774786]
E1 = -18.643867221001123  E_coul = 4.524095014997881
Extra cycle  E= -14.1197722060032  delta_E= 1.78e-15  |g|= 1.22e-11  |ddm|= 3.13e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.660886329051742
E1 = -18.643867221001123  E_coul = 4.524095014997881
init E= -14.1197722060032
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.293079740417335  LUMO = 16.8577478626762
  mo_energy =
[-4.50475886 -0.29307974 16.85774786]
E1 = -18.64386722100178  E_coul = 4.524095014998535
cycle= 1 E= -14.1197722060032  delta_E= -3.55e-15  |g|= 4.14e-13  |ddm|= 1.03e-12
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.64386722100178  E_coul = 4.524095014998535
  HOMO = -0.293079740417332  LUMO = 16.8577478626768
  mo_energy =
[-4.50475886 -0.29307974 16.85774786]
E1 = -18.643867221001777  E_coul = 4.524095014998547
Extra cycle  E= -14.1197722060032  delta_E= 1.6e-14  |g|= 1.06e-14  |ddm|= 3.63e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [19.33283434  2.71195326  0.10446243]
grad_E = [ 0.00089355 -0.0180297   0.07916458]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.407491572         1
[INPUT] 0    0    [1    /1   ]  2.73971957155        1
[INPUT] 0    0    [1    /1   ]  0.102686616276       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.40749157203553, 1.0]], [0, [2.739719571551371, 1.0]], [0, [0.1026866162756752, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.40749157]
bas 1, expnt(s) = [2.73971957]
bas 2, expnt(s) = [0.10268662]
CPU time:        73.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.40749157 23.36103494  2.73971957  5.38015278  0.10268662  0.45830058]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737635012636368
cond(S) = 3.664704318220485
E1 = -18.537366844278136  E_coul = 4.496864667852024
init E= -14.0405021764261
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303232556804361  LUMO = 16.9953351758565
  mo_energy =
[-4.50819473 -0.30323256 16.99533518]
E1 = -18.63850736729257  E_coul = 4.518483642624058
cycle= 1 E= -14.1200237246685  delta_E= -0.0795  |g|= 0.0267  |ddm|= 0.0659
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.030471
diis-c [-9.28481059e-04  1.00000000e+00]
  HOMO = -0.294621713064281  LUMO = 17.0050005219868
  mo_energy =
[-4.5061568  -0.29462171 17.00500052]
E1 = -18.636738785864107  E_coul = 4.516697603111245
cycle= 2 E= -14.1200411827529  delta_E= -1.75e-05  |g|= 0.000823  |ddm|= 0.00263
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000979361
diis-c [-2.98265085e-08 -3.26712336e-02  1.03267123e+00]
  HOMO = -0.29464023905924  LUMO = 17.0036237131475
  mo_energy =
[-4.50706074 -0.29464024 17.00362371]
E1 = -18.636685857424894  E_coul = 4.516644658333351
cycle= 3 E= -14.1200411990915  delta_E= -1.63e-08  |g|= 4.28e-06  |ddm|= 7.71e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.64378e-06
diis-c [-2.39117401e-18  8.36113945e-04 -2.76246937e-02  1.02678858e+00]
  HOMO = -0.294640084769153  LUMO = 17.003625544196
  mo_energy =
[-4.50705815 -0.29464008 17.00362554]
E1 = -18.63668593126317  E_coul = 4.516644732171091
cycle= 4 E= -14.1200411990921  delta_E= -5.36e-13  |g|= 3.31e-10  |ddm|= 5.13e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.63668593126317  E_coul = 4.516644732171091
  HOMO = -0.29464008480337  LUMO = 17.0036255445851
  mo_energy =
[-4.50705815 -0.29464008 17.00362554]
E1 = -18.636685931282795  E_coul = 4.51664473219073
Extra cycle  E= -14.1200411990921  delta_E= 1.42e-14  |g|= 1.12e-11  |ddm|= 2.9e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [19.40749157  2.73971957  0.10268662]
E = -14.120041199092064
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:16:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.407491572         1
[INPUT] 0    0    [1    /1   ]  2.73971957155        1
[INPUT] 0    0    [1    /1   ]  0.102686616276       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.40749157203553, 1.0]], [0, [2.739719571551371, 1.0]], [0, [0.1026866162756752, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.40749157]
bas 1, expnt(s) = [2.73971957]
bas 2, expnt(s) = [0.10268662]
CPU time:        74.45
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.40749157 23.36103494  2.73971957  5.38015278  0.10268662  0.45830058]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737635012636368
cond(S) = 3.664704318220485
E1 = -18.537366844278136  E_coul = 4.496864667852024
init E= -14.0405021764261
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303232556804361  LUMO = 16.9953351758565
  mo_energy =
[-4.50819473 -0.30323256 16.99533518]
E1 = -18.63850736729257  E_coul = 4.518483642624058
cycle= 1 E= -14.1200237246685  delta_E= -0.0795  |g|= 0.0267  |ddm|= 0.0659
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.030471
diis-c [-9.28481059e-04  1.00000000e+00]
  HOMO = -0.294621713064281  LUMO = 17.0050005219868
  mo_energy =
[-4.5061568  -0.29462171 17.00500052]
E1 = -18.636738785864107  E_coul = 4.516697603111245
cycle= 2 E= -14.1200411827529  delta_E= -1.75e-05  |g|= 0.000823  |ddm|= 0.00263
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000979361
diis-c [-2.98265085e-08 -3.26712336e-02  1.03267123e+00]
  HOMO = -0.29464023905924  LUMO = 17.0036237131475
  mo_energy =
[-4.50706074 -0.29464024 17.00362371]
E1 = -18.636685857424894  E_coul = 4.516644658333351
cycle= 3 E= -14.1200411990915  delta_E= -1.63e-08  |g|= 4.28e-06  |ddm|= 7.71e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.64378e-06
diis-c [-2.39117401e-18  8.36113945e-04 -2.76246937e-02  1.02678858e+00]
  HOMO = -0.294640084769153  LUMO = 17.003625544196
  mo_energy =
[-4.50705815 -0.29464008 17.00362554]
E1 = -18.63668593126317  E_coul = 4.516644732171091
cycle= 4 E= -14.1200411990921  delta_E= -5.36e-13  |g|= 3.31e-10  |ddm|= 5.13e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.63668593126317  E_coul = 4.516644732171091
  HOMO = -0.29464008480337  LUMO = 17.0036255445851
  mo_energy =
[-4.50705815 -0.29464008 17.00362554]
E1 = -18.636685931282795  E_coul = 4.51664473219073
Extra cycle  E= -14.1200411990921  delta_E= 1.42e-14  |g|= 1.12e-11  |ddm|= 2.9e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.664704318220485
E1 = -18.636685931282795  E_coul = 4.51664473219073
init E= -14.1200411990921
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294640084803228  LUMO = 17.003625544601
  mo_energy =
[-4.50705815 -0.29464008 17.00362554]
E1 = -18.63668593128342  E_coul = 4.516644732191346
cycle= 1 E= -14.1200411990921  delta_E= -1.07e-14  |g|= 3.82e-13  |ddm|= 9.49e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.63668593128342  E_coul = 4.516644732191346
  HOMO = -0.294640084803224  LUMO = 17.0036255446015
  mo_energy =
[-4.50705815 -0.29464008 17.00362554]
E1 = -18.63668593128343  E_coul = 4.516644732191361
Extra cycle  E= -14.1200411990921  delta_E= 5.33e-15  |g|= 1.06e-14  |ddm|= 3.21e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [19.40749157  2.73971957  0.10268662]
grad_E = [-0.00015339  0.00081115 -0.01408058]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:17:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.4545423586        1
[INPUT] 0    0    [1    /1   ]  2.74217371867        1
[INPUT] 0    0    [1    /1   ]  0.103041107192       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.45454235864332, 1.0]], [0, [2.742173718669037, 1.0]], [0, [0.1030411071920533, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.45454236]
bas 1, expnt(s) = [2.74217372]
bas 2, expnt(s) = [0.10304111]
CPU time:        77.17
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.45454236 23.40349878  2.74217372  5.38376689  0.10304111  0.45948666]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737522710889506
cond(S) = 3.661570989851117
E1 = -18.54031505576033  E_coul = 4.499843773153594
init E= -14.0404712826067
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302932288015091  LUMO = 17.0412532183979
  mo_energy =
[-4.50700882 -0.30293229 17.04125322]
E1 = -18.64200197441629  E_coul = 4.521974483886188
cycle= 1 E= -14.1200274905301  delta_E= -0.0796  |g|= 0.0267  |ddm|= 0.0653
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306427
diis-c [-9.38972132e-04  1.00000000e+00]
  HOMO = -0.294284164342316  LUMO = 17.0511253916889
  mo_energy =
[-4.50475084 -0.29428416 17.05112539]
E1 = -18.640236370868916  E_coul = 4.520191372793529
cycle= 2 E= -14.1200449980754  delta_E= -1.75e-05  |g|= 0.000827  |ddm|= 0.00262
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000986752
diis-c [-2.96076357e-08 -3.27474082e-02  1.03274741e+00]
  HOMO = -0.294302586909422  LUMO = 17.0497446805566
  mo_energy =
[-4.50565344 -0.29430259 17.04974468]
E1 = -18.640183461601605  E_coul = 4.520138447041556
cycle= 3 E= -14.12004501456  delta_E= -1.65e-08  |g|= 4.25e-06  |ddm|= 7.71e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.60133e-06
diis-c [-2.21160303e-18  8.34133172e-04 -2.74780315e-02  1.02664390e+00]
  HOMO = -0.294302432404005  LUMO = 17.049746573558
  mo_energy =
[-4.50565081 -0.29430243 17.04974657]
E1 = -18.640183537639526  E_coul = 4.520138523078957
cycle= 4 E= -14.1200450145606  delta_E= -5.2e-13  |g|= 3.29e-10  |ddm|= 5.09e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.640183537639526  E_coul = 4.520138523078957
  HOMO = -0.294302432436617  LUMO = 17.0497465739529
  mo_energy =
[-4.50565081 -0.29430243 17.04974657]
E1 = -18.64018353765893  E_coul = 4.520138523098362
Extra cycle  E= -14.1200450145606  delta_E=    0  |g|= 1.11e-11  |ddm|= 2.87e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [19.45454236  2.74217372  0.10304111]
E = -14.120045014560569
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:17:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.4545423586        1
[INPUT] 0    0    [1    /1   ]  2.74217371867        1
[INPUT] 0    0    [1    /1   ]  0.103041107192       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.45454235864332, 1.0]], [0, [2.742173718669037, 1.0]], [0, [0.1030411071920533, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.45454236]
bas 1, expnt(s) = [2.74217372]
bas 2, expnt(s) = [0.10304111]
CPU time:        77.79
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.45454236 23.40349878  2.74217372  5.38376689  0.10304111  0.45948666]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737522710889506
cond(S) = 3.661570989851117
E1 = -18.54031505576033  E_coul = 4.499843773153594
init E= -14.0404712826067
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302932288015091  LUMO = 17.0412532183979
  mo_energy =
[-4.50700882 -0.30293229 17.04125322]
E1 = -18.64200197441629  E_coul = 4.521974483886188
cycle= 1 E= -14.1200274905301  delta_E= -0.0796  |g|= 0.0267  |ddm|= 0.0653
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306427
diis-c [-9.38972132e-04  1.00000000e+00]
  HOMO = -0.294284164342316  LUMO = 17.0511253916889
  mo_energy =
[-4.50475084 -0.29428416 17.05112539]
E1 = -18.640236370868916  E_coul = 4.520191372793529
cycle= 2 E= -14.1200449980754  delta_E= -1.75e-05  |g|= 0.000827  |ddm|= 0.00262
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000986752
diis-c [-2.96076357e-08 -3.27474082e-02  1.03274741e+00]
  HOMO = -0.294302586909422  LUMO = 17.0497446805566
  mo_energy =
[-4.50565344 -0.29430259 17.04974468]
E1 = -18.640183461601605  E_coul = 4.520138447041556
cycle= 3 E= -14.12004501456  delta_E= -1.65e-08  |g|= 4.25e-06  |ddm|= 7.71e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.60133e-06
diis-c [-2.21160303e-18  8.34133172e-04 -2.74780315e-02  1.02664390e+00]
  HOMO = -0.294302432404005  LUMO = 17.049746573558
  mo_energy =
[-4.50565081 -0.29430243 17.04974657]
E1 = -18.640183537639526  E_coul = 4.520138523078957
cycle= 4 E= -14.1200450145606  delta_E= -5.2e-13  |g|= 3.29e-10  |ddm|= 5.09e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.640183537639526  E_coul = 4.520138523078957
  HOMO = -0.294302432436617  LUMO = 17.0497465739529
  mo_energy =
[-4.50565081 -0.29430243 17.04974657]
E1 = -18.64018353765893  E_coul = 4.520138523098362
Extra cycle  E= -14.1200450145606  delta_E=    0  |g|= 1.11e-11  |ddm|= 2.87e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.661570989851117
E1 = -18.64018353765893  E_coul = 4.520138523098362
init E= -14.1200450145606
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294302432436477  LUMO = 17.0497465739686
  mo_energy =
[-4.50565081 -0.29430243 17.04974657]
E1 = -18.64018353765954  E_coul = 4.520138523098968
cycle= 1 E= -14.1200450145606  delta_E= -1.78e-15  |g|= 3.94e-13  |ddm|= 9.39e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.64018353765954  E_coul = 4.520138523098968
  HOMO = -0.294302432436473  LUMO = 17.0497465739692
  mo_energy =
[-4.50565081 -0.29430243 17.04974657]
E1 = -18.64018353765955  E_coul = 4.520138523098986
Extra cycle  E= -14.1200450145606  delta_E= 7.11e-15  |g|= 2.34e-14  |ddm|= 3.25e-14
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [19.45454236  2.74217372  0.10304111]
grad_E = [2.38603626e-05 1.31487579e-04 3.17511116e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:17:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.4427773554        1
[INPUT] 0    0    [1    /1   ]  2.74117399886        1
[INPUT] 0    0    [1    /1   ]  0.102973590605       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.442777355369355, 1.0]], [0, [2.741173998863871, 1.0]], [0, [0.1029735906053762, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.44277736]
bas 1, expnt(s) = [2.741174]
bas 2, expnt(s) = [0.10297359]
CPU time:        80.59
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.44277736 23.39288315  2.741174    5.38229475  0.10297359  0.45926084]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737662350097542
cond(S) = 3.662122289852712
E1 = -18.539741800278705  E_coul = 4.499244556966952
init E= -14.0404972433118
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.302985487425665  LUMO = 17.028548298383
  mo_energy =
[-4.50725438 -0.30298549 17.0285483 ]
E1 = -18.641188028925395  E_coul = 4.521160248909839
cycle= 1 E= -14.1200277800156  delta_E= -0.0795  |g|= 0.0267  |ddm|= 0.0656
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306366
diis-c [-9.38600043e-04  1.00000000e+00]
  HOMO = -0.294350904680875  LUMO = 17.0382995393869
  mo_energy =
[-4.50509137 -0.2943509  17.03829954]
E1 = -18.63942016738429  E_coul = 4.519374857941668
cycle= 2 E= -14.1200453094426  delta_E= -1.75e-05  |g|= 0.000827  |ddm|= 0.00263
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000986248
diis-c [-2.96895426e-08 -3.27348266e-02  1.03273483e+00]
  HOMO = -0.294369361907491  LUMO = 17.0369182848045
  mo_energy =
[-4.5059951  -0.29436936 17.03691828]
E1 = -18.639367202428144  E_coul = 4.519321876497041
cycle= 3 E= -14.1200453259311  delta_E= -1.65e-08  |g|= 4.26e-06  |ddm|= 7.72e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.61307e-06
diis-c [-2.20959132e-18  8.34663783e-04 -2.75091778e-02  1.02667451e+00]
  HOMO = -0.294369207265298  LUMO = 17.0369201695677
  mo_energy =
[-4.50599248 -0.29436921 17.03692017]
E1 = -18.639367278204567  E_coul = 4.519321952272943
cycle= 4 E= -14.1200453259316  delta_E= -5.22e-13  |g|= 3.3e-10  |ddm|= 5.11e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.639367278204567  E_coul = 4.519321952272943
  HOMO = -0.294369207298243  LUMO = 17.0369201699625
  mo_energy =
[-4.50599248 -0.29436921 17.03692017]
E1 = -18.639367278224075  E_coul = 4.5193219522924375
Extra cycle  E= -14.1200453259316  delta_E= -1.42e-14  |g|= 1.12e-11  |ddm|= 2.88e-11
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [19.44277736  2.741174    0.10297359]
E = -14.120045325931638
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:17:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.4427773554        1
[INPUT] 0    0    [1    /1   ]  2.74117399886        1
[INPUT] 0    0    [1    /1   ]  0.102973590605       1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.442777355369355, 1.0]], [0, [2.741173998863871, 1.0]], [0, [0.1029735906053762, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.44277736]
bas 1, expnt(s) = [2.741174]
bas 2, expnt(s) = [0.10297359]
CPU time:        81.21
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.44277736 23.39288315  2.741174    5.38229475  0.10297359  0.45926084]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737662350097542
cond(S) = 3.662122289852712
E1 = -18.539741800278705  E_coul = 4.499244556966952
init E= -14.0404972433118
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302985487425665  LUMO = 17.028548298383
  mo_energy =
[-4.50725438 -0.30298549 17.0285483 ]
E1 = -18.641188028925395  E_coul = 4.521160248909839
cycle= 1 E= -14.1200277800156  delta_E= -0.0795  |g|= 0.0267  |ddm|= 0.0656
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306366
diis-c [-9.38600043e-04  1.00000000e+00]
  HOMO = -0.294350904680875  LUMO = 17.0382995393869
  mo_energy =
[-4.50509137 -0.2943509  17.03829954]
E1 = -18.63942016738429  E_coul = 4.519374857941668
cycle= 2 E= -14.1200453094426  delta_E= -1.75e-05  |g|= 0.000827  |ddm|= 0.00263
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000986248
diis-c [-2.96895426e-08 -3.27348266e-02  1.03273483e+00]
  HOMO = -0.294369361907491  LUMO = 17.0369182848045
  mo_energy =
[-4.5059951  -0.29436936 17.03691828]
E1 = -18.639367202428144  E_coul = 4.519321876497041
cycle= 3 E= -14.1200453259311  delta_E= -1.65e-08  |g|= 4.26e-06  |ddm|= 7.72e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.61307e-06
diis-c [-2.20959132e-18  8.34663783e-04 -2.75091778e-02  1.02667451e+00]
  HOMO = -0.294369207265298  LUMO = 17.0369201695677
  mo_energy =
[-4.50599248 -0.29436921 17.03692017]
E1 = -18.639367278204567  E_coul = 4.519321952272943
cycle= 4 E= -14.1200453259316  delta_E= -5.22e-13  |g|= 3.3e-10  |ddm|= 5.11e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.639367278204567  E_coul = 4.519321952272943
  HOMO = -0.294369207298243  LUMO = 17.0369201699625
  mo_energy =
[-4.50599248 -0.29436921 17.03692017]
E1 = -18.639367278224075  E_coul = 4.5193219522924375
Extra cycle  E= -14.1200453259316  delta_E= -1.42e-14  |g|= 1.12e-11  |ddm|= 2.88e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.662122289852712
E1 = -18.639367278224075  E_coul = 4.5193219522924375
init E= -14.1200453259316
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294369207298101  LUMO = 17.0369201699783
  mo_energy =
[-4.50599248 -0.29436921 17.03692017]
E1 = -18.639367278224682  E_coul = 4.519321952293045
cycle= 1 E= -14.1200453259316  delta_E=    0  |g|= 3.95e-13  |ddm|= 9.42e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.639367278224682  E_coul = 4.519321952293045
  HOMO = -0.294369207298097  LUMO = 17.0369201699788
  mo_energy =
[-4.50599248 -0.29436921 17.03692017]
E1 = -18.6393672782247  E_coul = 4.519321952293064
Extra cycle  E= -14.1200453259316  delta_E= 1.78e-15  |g|= 2.44e-14  |ddm|= 3.27e-14
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [19.44277736  2.741174    0.10297359]
grad_E = [ 8.50357472e-07 -1.45784212e-05  9.61729003e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:17:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.4428219255        1
[INPUT] 0    0    [1    /1   ]  2.7411959081         1
[INPUT] 0    0    [1    /1   ]  0.10297349419        1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.442821925479006, 1.0]], [0, [2.741195908101683, 1.0]], [0, [0.10297349419021139, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.44282193]
bas 1, expnt(s) = [2.74119591]
bas 2, expnt(s) = [0.10297349]
CPU time:        83.77
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.44282193 23.39292337  2.74119591  5.38232701  0.10297349  0.45926052]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737657921014264
cond(S) = 3.662134293310325
E1 = -18.539742226881714  E_coul = 4.499245421312945
init E= -14.0404968055688
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302985733884415  LUMO = 17.0286578842399
  mo_energy =
[-4.50725374 -0.30298573 17.02865788]
E1 = -18.64119434068791  E_coul = 4.521166558813278
cycle= 1 E= -14.1200277818746  delta_E= -0.0795  |g|= 0.0267  |ddm|= 0.0655
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.030635
diis-c [-9.38502138e-04  1.00000000e+00]
  HOMO = -0.294350892083506  LUMO = 17.0384130510994
  mo_energy =
[-4.50508823 -0.29435089 17.03841305]
E1 = -18.639426563990277  E_coul = 4.519381254410358
cycle= 2 E= -14.1200453095799  delta_E= -1.75e-05  |g|= 0.000827  |ddm|= 0.00263
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000986195
diis-c [-2.96874055e-08 -3.27347518e-02  1.03273475e+00]
  HOMO = -0.294369348613999  LUMO = 17.0370318687805
  mo_energy =
[-4.50599192 -0.29436935 17.03703187]
E1 = -18.639373601607208  E_coul = 4.519328275540533
cycle= 3 E= -14.1200453260667  delta_E= -1.65e-08  |g|= 4.26e-06  |ddm|= 7.72e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.61291e-06
diis-c [-2.19116836e-18  8.34661609e-04 -2.75091887e-02  1.02667453e+00]
  HOMO = -0.29436919398011  LUMO = 17.0370337533434
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.639373677375588  E_coul = 4.519328351308393
cycle= 4 E= -14.1200453260672  delta_E= -5.22e-13  |g|= 3.3e-10  |ddm|= 5.11e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.639373677375588  E_coul = 4.519328351308393
  HOMO = -0.294369194013055  LUMO = 17.0370337537381
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.63937367739508  E_coul = 4.519328351327883
Extra cycle  E= -14.1200453260672  delta_E= -3.55e-15  |g|= 1.12e-11  |ddm|= 2.88e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [19.44282193  2.74119591  0.10297349]
E = -14.1200453260672
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:17:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.4428219255        1
[INPUT] 0    0    [1    /1   ]  2.7411959081         1
[INPUT] 0    0    [1    /1   ]  0.10297349419        1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.442821925479006, 1.0]], [0, [2.741195908101683, 1.0]], [0, [0.10297349419021139, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.44282193]
bas 1, expnt(s) = [2.74119591]
bas 2, expnt(s) = [0.10297349]
CPU time:        84.37
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.44282193 23.39292337  2.74119591  5.38232701  0.10297349  0.45926052]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737657921014264
cond(S) = 3.662134293310325
E1 = -18.539742226881714  E_coul = 4.499245421312945
init E= -14.0404968055688
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302985733884415  LUMO = 17.0286578842399
  mo_energy =
[-4.50725374 -0.30298573 17.02865788]
E1 = -18.64119434068791  E_coul = 4.521166558813278
cycle= 1 E= -14.1200277818746  delta_E= -0.0795  |g|= 0.0267  |ddm|= 0.0655
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.030635
diis-c [-9.38502138e-04  1.00000000e+00]
  HOMO = -0.294350892083506  LUMO = 17.0384130510994
  mo_energy =
[-4.50508823 -0.29435089 17.03841305]
E1 = -18.639426563990277  E_coul = 4.519381254410358
cycle= 2 E= -14.1200453095799  delta_E= -1.75e-05  |g|= 0.000827  |ddm|= 0.00263
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000986195
diis-c [-2.96874055e-08 -3.27347518e-02  1.03273475e+00]
  HOMO = -0.294369348613999  LUMO = 17.0370318687805
  mo_energy =
[-4.50599192 -0.29436935 17.03703187]
E1 = -18.639373601607208  E_coul = 4.519328275540533
cycle= 3 E= -14.1200453260667  delta_E= -1.65e-08  |g|= 4.26e-06  |ddm|= 7.72e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.61291e-06
diis-c [-2.19116836e-18  8.34661609e-04 -2.75091887e-02  1.02667453e+00]
  HOMO = -0.29436919398011  LUMO = 17.0370337533434
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.639373677375588  E_coul = 4.519328351308393
cycle= 4 E= -14.1200453260672  delta_E= -5.22e-13  |g|= 3.3e-10  |ddm|= 5.11e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.639373677375588  E_coul = 4.519328351308393
  HOMO = -0.294369194013055  LUMO = 17.0370337537381
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.63937367739508  E_coul = 4.519328351327883
Extra cycle  E= -14.1200453260672  delta_E= -3.55e-15  |g|= 1.12e-11  |ddm|= 2.88e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 3.662134293310325
E1 = -18.63937367739508  E_coul = 4.519328351327883
init E= -14.1200453260672
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294369194012913  LUMO = 17.0370337537539
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.63937367739568  E_coul = 4.519328351328486
cycle= 1 E= -14.1200453260672  delta_E= 3.55e-15  |g|= 3.87e-13  |ddm|= 9.43e-13
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.63937367739568  E_coul = 4.519328351328486
  HOMO = -0.29436919401291  LUMO = 17.0370337537544
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.6393736773957  E_coul = 4.519328351328506
Extra cycle  E= -14.1200453260672  delta_E= 1.78e-15  |g|= 2.55e-14  |ddm|= 3.1e-14
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [19.44282193  2.74119591  0.10297349]
grad_E = [-5.10319286e-08  6.18322335e-07 -2.94795001e-07]
  message: CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH
  success: True
   status: 0
      fun: -14.1200453260672
        x: [ 1.944e+01  2.741e+00  1.030e-01]
      nit: 26
      jac: [-5.103e-08  6.183e-07 -2.948e-07]
     nfev: 30
     njev: 30
 hess_inv: <3x3 LbfgsInvHessProduct with dtype=float64>
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]

N = 3

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_2s[:]
exps[0, 0] = np.max(exp_Be_2s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:17:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  19.4428219255        1
[INPUT] 0    0    [1    /1   ]  2.7411959081         1
[INPUT] 0    0    [1    /1   ]  0.10297349419        1

nuclear repulsion = 0
number of shells = 3
number of NR pGTOs = 3
number of NR cGTOs = 3
basis = {'Be': [[0, [19.442821925479006, 1.0]], [0, [2.741195908101683, 1.0]], [0, [0.10297349419021139, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [19.44282193]
bas 1, expnt(s) = [2.74119591]
bas 2, expnt(s) = [0.10297349]
CPU time:        87.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 19.44282193 23.39292337  2.74119591  5.38232701  0.10297349  0.45926052]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9737657921014264
cond(S) = 3.662134293310325
E1 = -18.539742226881714  E_coul = 4.499245421312945
init E= -14.0404968055688
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302985733884415  LUMO = 17.0286578842399
  mo_energy =
[-4.50725374 -0.30298573 17.02865788]
E1 = -18.64119434068791  E_coul = 4.521166558813278
cycle= 1 E= -14.1200277818746  delta_E= -0.0795  |g|= 0.0267  |ddm|= 0.0655
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.030635
diis-c [-9.38502138e-04  1.00000000e+00]
  HOMO = -0.294350892083506  LUMO = 17.0384130510994
  mo_energy =
[-4.50508823 -0.29435089 17.03841305]
E1 = -18.639426563990277  E_coul = 4.519381254410358
cycle= 2 E= -14.1200453095799  delta_E= -1.75e-05  |g|= 0.000827  |ddm|= 0.00263
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000986195
diis-c [-2.96874055e-08 -3.27347518e-02  1.03273475e+00]
  HOMO = -0.294369348613999  LUMO = 17.0370318687805
  mo_energy =
[-4.50599192 -0.29436935 17.03703187]
E1 = -18.639373601607208  E_coul = 4.519328275540533
cycle= 3 E= -14.1200453260667  delta_E= -1.65e-08  |g|= 4.26e-06  |ddm|= 7.72e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.61291e-06
diis-c [-2.19116836e-18  8.34661609e-04 -2.75091887e-02  1.02667453e+00]
  HOMO = -0.29436919398011  LUMO = 17.0370337533434
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.639373677375588  E_coul = 4.519328351308393
cycle= 4 E= -14.1200453260672  delta_E= -5.22e-13  |g|= 3.3e-10  |ddm|= 5.11e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.639373677375588  E_coul = 4.519328351308393
  HOMO = -0.294369194013055  LUMO = 17.0370337537381
  mo_energy =
[-4.50598929 -0.29436919 17.03703375]
E1 = -18.63937367739508  E_coul = 4.519328351327883
Extra cycle  E= -14.1200453260672  delta_E= -3.55e-15  |g|= 1.12e-11  |ddm|= 2.88e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [19.44282193  2.74119591  0.10297349]
E = -14.1200453260672
E = -14.1200453260672
exp = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
