#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:21:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875672        1
[INPUT] 0    0    [1    /1   ]  65.9910875672        1
[INPUT] 0    0    [1    /1   ]  9.84863704159        1
[INPUT] 0    0    [1    /1   ]  2.05031881622        1
[INPUT] 0    0    [1    /1   ]  0.103864292065       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108756722832, 1.0]], [0, [65.99108756722832, 1.0]], [0, [9.84863704158983, 1.0]], [0, [2.0503188162180708, 1.0]], [0, [0.1038642920648396, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087567]
bas 1, expnt(s) = [65.99108757]
bas 2, expnt(s) = [9.84863704]
bas 3, expnt(s) = [2.05031882]
bas 4, expnt(s) = [0.10386429]
CPU time:         1.51
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910876e+02 3.28949317e+02 6.59910876e+01 5.84963797e+01
 9.84863704e+00 1.40458208e+01 2.05031882e+00 4.32893507e+00
 1.03864292e-01 4.62237018e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848445356851077
cond(S) = 10.199059614185074
E1 = -18.99114639308143  E_coul = 4.509954285920107
init E= -14.4811921071613
    CPU time for initialize scf      0.12 sec, wall time      0.12 sec
  HOMO = -0.303240362908251  LUMO = 8.12438887737019
  mo_energy =
[-4.69612828e+00 -3.03240363e-01  8.12438888e+00  9.10184523e+01
  1.03978691e+03]
E1 = -19.022411041416145  E_coul = 4.51351512270285
cycle= 1 E= -14.5088959187133  delta_E= -0.0277  |g|= 0.0184  |ddm|= 0.0837
    CPU time for cycle= 1      0.26 sec, wall time      0.26 sec
diis-norm(errvec)=0.0200708
diis-c [-4.02837383e-04  1.00000000e+00]
  HOMO = -0.300451106117634  LUMO = 8.13005414311534
  mo_energy =
[-4.69724414e+00 -3.00451106e-01  8.13005414e+00  9.10146670e+01
  1.03976917e+03]
E1 = -19.021625588987362  E_coul = 4.5127195282707735
cycle= 2 E= -14.5089060607166  delta_E= -1.01e-05  |g|= 0.000709  |ddm|= 0.0036
    CPU time for cycle= 2      0.08 sec, wall time      0.08 sec
diis-norm(errvec)=0.000777712
diis-c [-2.91516608e-07 -2.86995437e-02  1.02869954e+00]
  HOMO = -0.300482713507814  LUMO = 8.12990017769521
  mo_energy =
[-4.69762199e+00 -3.00482714e-01  8.12990018e+00  9.10142791e+01
  1.03976849e+03]
E1 = -19.021604146520584  E_coul = 4.512698061693279
cycle= 3 E= -14.5089060848273  delta_E= -2.41e-08  |g|= 1.76e-05  |ddm|= 0.000173
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.36155e-05
diis-c [-3.10327908e-11  1.03762657e-03 -4.47105445e-02  1.04367292e+00]
  HOMO = -0.300483221387155  LUMO = 8.12990480971567
  mo_energy =
[-4.69762085e+00 -3.00483221e-01  8.12990481e+00  9.10143072e+01
  1.03976854e+03]
E1 = -19.02160423902457  E_coul = 4.512698154181348
cycle= 4 E= -14.5089060848432  delta_E= -1.59e-11  |g|= 1.25e-07  |ddm|= 4.08e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02160423902457  E_coul = 4.512698154181348
  HOMO = -0.300483221104082  LUMO = 8.12990490741727
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143076e+01
  1.03976854e+03]
E1 = -19.02160424668442  E_coul = 4.512698161841195
Extra cycle  E= -14.5089060848432  delta_E= -1.78e-15  |g|= 6.02e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.48 sec, wall time      0.49 sec
exp = [6.59910876e+02 6.59910876e+01 9.84863704e+00 2.05031882e+00
 1.03864292e-01]
E = -14.508906084843224
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:21:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875672        1
[INPUT] 0    0    [1    /1   ]  65.9910875672        1
[INPUT] 0    0    [1    /1   ]  9.84863704159        1
[INPUT] 0    0    [1    /1   ]  2.05031881622        1
[INPUT] 0    0    [1    /1   ]  0.103864292065       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108756722832, 1.0]], [0, [65.99108756722832, 1.0]], [0, [9.84863704158983, 1.0]], [0, [2.0503188162180708, 1.0]], [0, [0.1038642920648396, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087567]
bas 1, expnt(s) = [65.99108757]
bas 2, expnt(s) = [9.84863704]
bas 3, expnt(s) = [2.05031882]
bas 4, expnt(s) = [0.10386429]
CPU time:         2.10
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910876e+02 3.28949317e+02 6.59910876e+01 5.84963797e+01
 9.84863704e+00 1.40458208e+01 2.05031882e+00 4.32893507e+00
 1.03864292e-01 4.62237018e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848445356851077
cond(S) = 10.199059614185074
E1 = -18.99114639308143  E_coul = 4.509954285920107
init E= -14.4811921071613
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303240362908251  LUMO = 8.12438887737019
  mo_energy =
[-4.69612828e+00 -3.03240363e-01  8.12438888e+00  9.10184523e+01
  1.03978691e+03]
E1 = -19.022411041416145  E_coul = 4.51351512270285
cycle= 1 E= -14.5088959187133  delta_E= -0.0277  |g|= 0.0184  |ddm|= 0.0837
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0200708
diis-c [-4.02837383e-04  1.00000000e+00]
  HOMO = -0.300451106117634  LUMO = 8.13005414311534
  mo_energy =
[-4.69724414e+00 -3.00451106e-01  8.13005414e+00  9.10146670e+01
  1.03976917e+03]
E1 = -19.021625588987362  E_coul = 4.5127195282707735
cycle= 2 E= -14.5089060607166  delta_E= -1.01e-05  |g|= 0.000709  |ddm|= 0.0036
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000777712
diis-c [-2.91516608e-07 -2.86995437e-02  1.02869954e+00]
  HOMO = -0.300482713507814  LUMO = 8.12990017769521
  mo_energy =
[-4.69762199e+00 -3.00482714e-01  8.12990018e+00  9.10142791e+01
  1.03976849e+03]
E1 = -19.021604146520584  E_coul = 4.512698061693279
cycle= 3 E= -14.5089060848273  delta_E= -2.41e-08  |g|= 1.76e-05  |ddm|= 0.000173
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.36155e-05
diis-c [-3.10327908e-11  1.03762657e-03 -4.47105445e-02  1.04367292e+00]
  HOMO = -0.300483221387155  LUMO = 8.12990480971567
  mo_energy =
[-4.69762085e+00 -3.00483221e-01  8.12990481e+00  9.10143072e+01
  1.03976854e+03]
E1 = -19.02160423902457  E_coul = 4.512698154181348
cycle= 4 E= -14.5089060848432  delta_E= -1.59e-11  |g|= 1.25e-07  |ddm|= 4.08e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02160423902457  E_coul = 4.512698154181348
  HOMO = -0.300483221104082  LUMO = 8.12990490741727
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143076e+01
  1.03976854e+03]
E1 = -19.02160424668442  E_coul = 4.512698161841195
Extra cycle  E= -14.5089060848432  delta_E= -1.78e-15  |g|= 6.02e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.199059614185074
E1 = -19.02160424668442  E_coul = 4.512698161841195
init E= -14.5089060848432
    CPU time for initialize scf      0.25 sec, wall time      0.25 sec
  HOMO = -0.30048322112317  LUMO = 8.12990491138655
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143077e+01
  1.03976854e+03]
E1 = -19.021604246975297  E_coul = 4.512698162132072
cycle= 1 E= -14.5089060848432  delta_E= -1.78e-15  |g|= 3.02e-10  |ddm|= 8.93e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.021604246975297  E_coul = 4.512698162132072
  HOMO = -0.300483221126061  LUMO = 8.1299049115545
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143077e+01
  1.03976854e+03]
E1 = -19.02160424698675  E_coul = 4.512698162143529
Extra cycle  E= -14.5089060848432  delta_E= 3.55e-15  |g|= 1.56e-11  |ddm|= 4.93e-11
    CPU time for scf_cycle      0.85 sec, wall time      0.85 sec
exp = [6.59910876e+02 6.59910876e+01 9.84863704e+00 2.05031882e+00
 1.03864292e-01]
grad_E = [ 8.80297047e-06  1.25466564e-03 -4.22498533e-03  5.14006767e-03
 -1.17916658e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910866869        1
[INPUT] 0    0    [1    /1   ]  65.9898329016        1
[INPUT] 0    0    [1    /1   ]  9.85286202692        1
[INPUT] 0    0    [1    /1   ]  2.04517874855        1
[INPUT] 0    0    [1    /1   ]  0.115655957882       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108668693127, 1.0]], [0, [65.98983290159073, 1.0]], [0, [9.852862026924432, 1.0]], [0, [2.045178748552285, 1.0]], [0, [0.11565595788159477, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91086687]
bas 1, expnt(s) = [65.9898329]
bas 2, expnt(s) = [9.85286203]
bas 3, expnt(s) = [2.04517875]
bas 4, expnt(s) = [0.11565596]
CPU time:         6.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910867e+02 3.28949313e+02 6.59898329e+01 5.84955456e+01
 9.85286203e+00 1.40503397e+01 2.04517875e+00 4.32079317e+00
 1.15655958e-01 5.01061497e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978911871550939
cond(S) = 10.282706621922891
E1 = -19.065426967507463  E_coul = 4.580911043080588
init E= -14.4845159244269
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.29459168022225  LUMO = 8.18593573882518
  mo_energy =
[-4.66798883e+00 -2.94591680e-01  8.18593574e+00  9.10699331e+01
  1.03983075e+03]
E1 = -19.119453095527994  E_coul = 4.613393030789541
cycle= 1 E= -14.5060600647385  delta_E= -0.0215  |g|= 0.014  |ddm|= 0.0272
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0194834
diis-c [-3.79602189e-04  1.00000000e+00]
  HOMO = -0.289899521191038  LUMO = 8.20010326289743
  mo_energy =
[-4.65643471e+00 -2.89899521e-01  8.20010326e+00  9.10845218e+01
  1.03983481e+03]
E1 = -19.119177274326958  E_coul = 4.613115731720842
cycle= 2 E= -14.5060615426061  delta_E= -1.48e-06  |g|= 0.000327  |ddm|= 0.000892
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000438829
diis-c [-3.30197826e-08 -2.09315278e-02  1.02093153e+00]
  HOMO = -0.289908651439868  LUMO = 8.20003735462078
  mo_energy =
[-4.65656716e+00 -2.89908651e-01  8.20003735e+00  9.10842148e+01
  1.03983411e+03]
E1 = -19.119171616491172  E_coul = 4.613110072044469
cycle= 3 E= -14.5060615444467  delta_E= -1.84e-09  |g|= 6.04e-06  |ddm|= 4.19e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.57815e-06
diis-c [-2.08375476e-11  7.62608968e-04 -3.47839073e-02  1.03402130e+00]
  HOMO = -0.289908830285761  LUMO = 8.2000387985638
  mo_energy =
[-4.65656690e+00 -2.89908830e-01  8.20003880e+00  9.10842235e+01
  1.03983412e+03]
E1 = -19.11917163456051  E_coul = 4.613110090112007
cycle= 4 E= -14.5060615444485  delta_E= -1.8e-12  |g|= 1.52e-07  |ddm|= 1.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.11917163456051  E_coul = 4.613110090112007
  HOMO = -0.289908834532215  LUMO = 8.20003883102066
  mo_energy =
[-4.65656689e+00 -2.89908835e-01  8.20003883e+00  9.10842237e+01
  1.03983412e+03]
E1 = -19.11917163512492  E_coul = 4.61311009067643
Extra cycle  E= -14.5060615444485  delta_E= 1.07e-14  |g|= 8.25e-09  |ddm|= 3.13e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910867e+02 6.59898329e+01 9.85286203e+00 2.04517875e+00
 1.15655958e-01]
E = -14.506061544448492
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910866869        1
[INPUT] 0    0    [1    /1   ]  65.9898329016        1
[INPUT] 0    0    [1    /1   ]  9.85286202692        1
[INPUT] 0    0    [1    /1   ]  2.04517874855        1
[INPUT] 0    0    [1    /1   ]  0.115655957882       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108668693127, 1.0]], [0, [65.98983290159073, 1.0]], [0, [9.852862026924432, 1.0]], [0, [2.045178748552285, 1.0]], [0, [0.11565595788159477, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91086687]
bas 1, expnt(s) = [65.9898329]
bas 2, expnt(s) = [9.85286203]
bas 3, expnt(s) = [2.04517875]
bas 4, expnt(s) = [0.11565596]
CPU time:         6.74
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910867e+02 3.28949313e+02 6.59898329e+01 5.84955456e+01
 9.85286203e+00 1.40503397e+01 2.04517875e+00 4.32079317e+00
 1.15655958e-01 5.01061497e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978911871550939
cond(S) = 10.282706621922891
E1 = -19.065426967507463  E_coul = 4.580911043080588
init E= -14.4845159244269
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.29459168022225  LUMO = 8.18593573882518
  mo_energy =
[-4.66798883e+00 -2.94591680e-01  8.18593574e+00  9.10699331e+01
  1.03983075e+03]
E1 = -19.119453095527994  E_coul = 4.613393030789541
cycle= 1 E= -14.5060600647385  delta_E= -0.0215  |g|= 0.014  |ddm|= 0.0272
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0194834
diis-c [-3.79602189e-04  1.00000000e+00]
  HOMO = -0.289899521191038  LUMO = 8.20010326289743
  mo_energy =
[-4.65643471e+00 -2.89899521e-01  8.20010326e+00  9.10845218e+01
  1.03983481e+03]
E1 = -19.119177274326958  E_coul = 4.613115731720842
cycle= 2 E= -14.5060615426061  delta_E= -1.48e-06  |g|= 0.000327  |ddm|= 0.000892
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000438829
diis-c [-3.30197826e-08 -2.09315278e-02  1.02093153e+00]
  HOMO = -0.289908651439868  LUMO = 8.20003735462078
  mo_energy =
[-4.65656716e+00 -2.89908651e-01  8.20003735e+00  9.10842148e+01
  1.03983411e+03]
E1 = -19.119171616491172  E_coul = 4.613110072044469
cycle= 3 E= -14.5060615444467  delta_E= -1.84e-09  |g|= 6.04e-06  |ddm|= 4.19e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.57815e-06
diis-c [-2.08375476e-11  7.62608968e-04 -3.47839073e-02  1.03402130e+00]
  HOMO = -0.289908830285761  LUMO = 8.2000387985638
  mo_energy =
[-4.65656690e+00 -2.89908830e-01  8.20003880e+00  9.10842235e+01
  1.03983412e+03]
E1 = -19.11917163456051  E_coul = 4.613110090112007
cycle= 4 E= -14.5060615444485  delta_E= -1.8e-12  |g|= 1.52e-07  |ddm|= 1.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.11917163456051  E_coul = 4.613110090112007
  HOMO = -0.289908834532215  LUMO = 8.20003883102066
  mo_energy =
[-4.65656689e+00 -2.89908835e-01  8.20003883e+00  9.10842237e+01
  1.03983412e+03]
E1 = -19.11917163512492  E_coul = 4.61311009067643
Extra cycle  E= -14.5060615444485  delta_E= 1.07e-14  |g|= 8.25e-09  |ddm|= 3.13e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.282706621922891
E1 = -19.11917163512492  E_coul = 4.61311009067643
init E= -14.5060615444485
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.28990883475682  LUMO = 8.20003883303035
  mo_energy =
[-4.65656689e+00 -2.89908835e-01  8.20003883e+00  9.10842237e+01
  1.03983412e+03]
E1 = -19.119171635169163  E_coul = 4.61311009072066
cycle= 1 E= -14.5060615444485  delta_E= -1.07e-14  |g|= 4.52e-10  |ddm|= 1.71e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.119171635169163  E_coul = 4.61311009072066
  HOMO = -0.289908834768997  LUMO = 8.20003883314594
  mo_energy =
[-4.65656689e+00 -2.89908835e-01  8.20003883e+00  9.10842237e+01
  1.03983412e+03]
E1 = -19.11917163517191  E_coul = 4.613110090723402
Extra cycle  E= -14.5060615444485  delta_E= -3.55e-15  |g|= 2.49e-11  |ddm|= 9.42e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910867e+02 6.59898329e+01 9.85286203e+00 2.04517875e+00
 1.15655958e-01]
grad_E = [ 8.93845304e-06  1.23750717e-03 -3.51219335e-03  8.12684874e-04
  4.84737952e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875418        1
[INPUT] 0    0    [1    /1   ]  65.9910513255        1
[INPUT] 0    0    [1    /1   ]  9.84875908279        1
[INPUT] 0    0    [1    /1   ]  2.05017034232        1
[INPUT] 0    0    [1    /1   ]  0.104204901304       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108754180041, 1.0]], [0, [65.99105132546948, 1.0]], [0, [9.84875908278949, 1.0]], [0, [2.0501703423241784, 1.0]], [0, [0.10420490130446994, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087542]
bas 1, expnt(s) = [65.99105133]
bas 2, expnt(s) = [9.84875908]
bas 3, expnt(s) = [2.05017034]
bas 4, expnt(s) = [0.1042049]
CPU time:         8.70
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910875e+02 3.28949317e+02 6.59910513e+01 5.84963556e+01
 9.84875908e+00 1.40459513e+01 2.05017034e+00 4.32869996e+00
 1.04204901e-01 4.63373437e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984863806941596
cond(S) = 10.201394749580663
E1 = -18.993948786910238  E_coul = 4.512340631302709
init E= -14.4816081556075
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302990581806722  LUMO = 8.12628337226014
  mo_energy =
[-4.69519103e+00 -3.02990582e-01  8.12628337e+00  9.10200496e+01
  1.03978829e+03]
E1 = -19.025415058576293  E_coul = 4.516516065108918
cycle= 1 E= -14.5088989934674  delta_E= -0.0273  |g|= 0.0182  |ddm|= 0.0816
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0199837
diis-c [-3.99348482e-04  1.00000000e+00]
  HOMO = -0.300179062387059  LUMO = 8.13211154260899
  mo_energy =
[-4.69601705e+00 -3.00179062e-01  8.13211154e+00  9.10167206e+01
  1.03977111e+03]
E1 = -19.024643643117066  E_coul = 4.515734922455104
cycle= 2 E= -14.508908720662  delta_E= -9.73e-06  |g|= 0.000697  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000763358
diis-c [-2.81382129e-07 -2.82554449e-02  1.02825544e+00]
  HOMO = -0.300210045729935  LUMO = 8.13195997565287
  mo_energy =
[-4.69638791e+00 -3.00210046e-01  8.13195998e+00  9.10163342e+01
  1.03977043e+03]
E1 = -19.024622609784384  E_coul = 4.515713866041561
cycle= 3 E= -14.5089087437428  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.34183e-05
diis-c [-3.08788834e-11  1.04043035e-03 -4.51779823e-02  1.04413755e+00]
  HOMO = -0.300210557216251  LUMO = 8.13196445444803
  mo_energy =
[-4.69638694e+00 -3.00210557e-01  8.13196445e+00  9.10163617e+01
  1.03977047e+03]
E1 = -19.02462269019307  E_coul = 4.515713946434496
cycle= 4 E= -14.5089087437586  delta_E= -1.58e-11  |g|= 1.23e-07  |ddm|= 4.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02462269019307  E_coul = 4.515713946434496
  HOMO = -0.300210557036525  LUMO = 8.13196454938151
  mo_energy =
[-4.69638684e+00 -3.00210557e-01  8.13196455e+00  9.10163621e+01
  1.03977047e+03]
E1 = -19.024622697590242  E_coul = 4.5157139538316615
Extra cycle  E= -14.5089087437586  delta_E= -7.11e-15  |g|= 5.99e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910875e+02 6.59910513e+01 9.84875908e+00 2.05017034e+00
 1.04204901e-01]
E = -14.508908743758582
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875418        1
[INPUT] 0    0    [1    /1   ]  65.9910513255        1
[INPUT] 0    0    [1    /1   ]  9.84875908279        1
[INPUT] 0    0    [1    /1   ]  2.05017034232        1
[INPUT] 0    0    [1    /1   ]  0.104204901304       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108754180041, 1.0]], [0, [65.99105132546948, 1.0]], [0, [9.84875908278949, 1.0]], [0, [2.0501703423241784, 1.0]], [0, [0.10420490130446994, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087542]
bas 1, expnt(s) = [65.99105133]
bas 2, expnt(s) = [9.84875908]
bas 3, expnt(s) = [2.05017034]
bas 4, expnt(s) = [0.1042049]
CPU time:         8.83
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910875e+02 3.28949317e+02 6.59910513e+01 5.84963556e+01
 9.84875908e+00 1.40459513e+01 2.05017034e+00 4.32869996e+00
 1.04204901e-01 4.63373437e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984863806941596
cond(S) = 10.201394749580663
E1 = -18.993948786910238  E_coul = 4.512340631302709
init E= -14.4816081556075
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302990581806722  LUMO = 8.12628337226014
  mo_energy =
[-4.69519103e+00 -3.02990582e-01  8.12628337e+00  9.10200496e+01
  1.03978829e+03]
E1 = -19.025415058576293  E_coul = 4.516516065108918
cycle= 1 E= -14.5088989934674  delta_E= -0.0273  |g|= 0.0182  |ddm|= 0.0816
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0199837
diis-c [-3.99348482e-04  1.00000000e+00]
  HOMO = -0.300179062387059  LUMO = 8.13211154260899
  mo_energy =
[-4.69601705e+00 -3.00179062e-01  8.13211154e+00  9.10167206e+01
  1.03977111e+03]
E1 = -19.024643643117066  E_coul = 4.515734922455104
cycle= 2 E= -14.508908720662  delta_E= -9.73e-06  |g|= 0.000697  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000763358
diis-c [-2.81382129e-07 -2.82554449e-02  1.02825544e+00]
  HOMO = -0.300210045729935  LUMO = 8.13195997565287
  mo_energy =
[-4.69638791e+00 -3.00210046e-01  8.13195998e+00  9.10163342e+01
  1.03977043e+03]
E1 = -19.024622609784384  E_coul = 4.515713866041561
cycle= 3 E= -14.5089087437428  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.34183e-05
diis-c [-3.08788834e-11  1.04043035e-03 -4.51779823e-02  1.04413755e+00]
  HOMO = -0.300210557216251  LUMO = 8.13196445444803
  mo_energy =
[-4.69638694e+00 -3.00210557e-01  8.13196445e+00  9.10163617e+01
  1.03977047e+03]
E1 = -19.02462269019307  E_coul = 4.515713946434496
cycle= 4 E= -14.5089087437586  delta_E= -1.58e-11  |g|= 1.23e-07  |ddm|= 4.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02462269019307  E_coul = 4.515713946434496
  HOMO = -0.300210557036525  LUMO = 8.13196454938151
  mo_energy =
[-4.69638684e+00 -3.00210557e-01  8.13196455e+00  9.10163621e+01
  1.03977047e+03]
E1 = -19.024622697590242  E_coul = 4.5157139538316615
Extra cycle  E= -14.5089087437586  delta_E= -7.11e-15  |g|= 5.99e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.201394749580663
E1 = -19.024622697590242  E_coul = 4.5157139538316615
init E= -14.5089087437586
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.300210557059969  LUMO = 8.13196455325517
  mo_energy =
[-4.69638684e+00 -3.00210557e-01  8.13196455e+00  9.10163621e+01
  1.03977047e+03]
E1 = -19.024622697871806  E_coul = 4.515713954113231
cycle= 1 E= -14.5089087437586  delta_E= 7.11e-15  |g|= 3.02e-10  |ddm|= 8.98e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.024622697871806  E_coul = 4.515713954113231
  HOMO = -0.300210557063026  LUMO = 8.13196455341987
  mo_energy =
[-4.69638684e+00 -3.00210557e-01  8.13196455e+00  9.10163621e+01
  1.03977047e+03]
E1 = -19.024622697882908  E_coul = 4.515713954124336
Extra cycle  E= -14.5089087437586  delta_E= 3.55e-15  |g|= 1.56e-11  |ddm|= 4.97e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [6.59910875e+02 6.59910513e+01 9.84875908e+00 2.05017034e+00
 1.04204901e-01]
grad_E = [ 8.80691671e-06  1.25416020e-03 -4.20403729e-03  5.00357008e-03
  3.87343041e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875165        1
[INPUT] 0    0    [1    /1   ]  65.9910153369        1
[INPUT] 0    0    [1    /1   ]  9.84887985252        1
[INPUT] 0    0    [1    /1   ]  2.0500258311         1
[INPUT] 0    0    [1    /1   ]  0.104202336417       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108751653387, 1.0]], [0, [65.99101533691615, 1.0]], [0, [9.848879852515184, 1.0]], [0, [2.050025831100641, 1.0]], [0, [0.10420233641744533, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087517]
bas 1, expnt(s) = [65.99101534]
bas 2, expnt(s) = [9.84887985]
bas 3, expnt(s) = [2.05002583]
bas 4, expnt(s) = [0.10420234]
CPU time:        10.96
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910875e+02 3.28949317e+02 6.59910153e+01 5.84963317e+01
 9.84887985e+00 1.40460805e+01 2.05002583e+00 4.32847112e+00
 1.04202336e-01 4.63364883e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848644842151737
cond(S) = 10.200743285691788
E1 = -18.9939359311212  E_coul = 4.512317295658322
init E= -14.4816186354629
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302991876712232  LUMO = 8.12590295286937
  mo_energy =
[-4.69520206e+00 -3.02991877e-01  8.12590295e+00  9.10198775e+01
  1.03978814e+03]
E1 = -19.025354252959684  E_coul = 4.516453982311426
cycle= 1 E= -14.5089002706483  delta_E= -0.0273  |g|= 0.0182  |ddm|= 0.0816
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0199588
diis-c [-3.98353345e-04  1.00000000e+00]
  HOMO = -0.300181466733239  LUMO = 8.13171492589699
  mo_energy =
[-4.69604632e+00 -3.00181467e-01  8.13171493e+00  9.10164984e+01
  1.03977090e+03]
E1 = -19.024581542764636  E_coul = 4.515671545993905
cycle= 2 E= -14.5089099967707  delta_E= -9.73e-06  |g|= 0.000696  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000762914
diis-c [-2.81178465e-07 -2.82687838e-02  1.02826878e+00]
  HOMO = -0.300212466319067  LUMO = 8.13156281059388
  mo_energy =
[-4.69641784e+00 -3.00212466e-01  8.13156281e+00  9.10161101e+01
  1.03977022e+03]
E1 = -19.024560456588627  E_coul = 4.515650436742234
cycle= 3 E= -14.5089100198464  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.34049e-05
diis-c [-3.07369406e-11  1.04041477e-03 -4.51713369e-02  1.04413092e+00]
  HOMO = -0.300212977534043  LUMO = 8.13156728407762
  mo_energy =
[-4.69641687e+00 -3.00212978e-01  8.13156728e+00  9.10161375e+01
  1.03977027e+03]
E1 = -19.024560536620168  E_coul = 4.5156505167580345
cycle= 4 E= -14.5089100198621  delta_E= -1.57e-11  |g|= 1.23e-07  |ddm|= 4.06e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024560536620168  E_coul = 4.5156505167580345
  HOMO = -0.30021297734028  LUMO = 8.13156737913984
  mo_energy =
[-4.69641677e+00 -3.00212977e-01  8.13156738e+00  9.10161379e+01
  1.03977027e+03]
E1 = -19.024560544032305  E_coul = 4.51565052417017
Extra cycle  E= -14.5089100198621  delta_E= -1.78e-15  |g|= 5.98e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910875e+02 6.59910153e+01 9.84887985e+00 2.05002583e+00
 1.04202336e-01]
E = -14.508910019862135
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875165        1
[INPUT] 0    0    [1    /1   ]  65.9910153369        1
[INPUT] 0    0    [1    /1   ]  9.84887985252        1
[INPUT] 0    0    [1    /1   ]  2.0500258311         1
[INPUT] 0    0    [1    /1   ]  0.104202336417       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108751653387, 1.0]], [0, [65.99101533691615, 1.0]], [0, [9.848879852515184, 1.0]], [0, [2.050025831100641, 1.0]], [0, [0.10420233641744533, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087517]
bas 1, expnt(s) = [65.99101534]
bas 2, expnt(s) = [9.84887985]
bas 3, expnt(s) = [2.05002583]
bas 4, expnt(s) = [0.10420234]
CPU time:        11.09
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910875e+02 3.28949317e+02 6.59910153e+01 5.84963317e+01
 9.84887985e+00 1.40460805e+01 2.05002583e+00 4.32847112e+00
 1.04202336e-01 4.63364883e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848644842151737
cond(S) = 10.200743285691788
E1 = -18.9939359311212  E_coul = 4.512317295658322
init E= -14.4816186354629
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302991876712232  LUMO = 8.12590295286937
  mo_energy =
[-4.69520206e+00 -3.02991877e-01  8.12590295e+00  9.10198775e+01
  1.03978814e+03]
E1 = -19.025354252959684  E_coul = 4.516453982311426
cycle= 1 E= -14.5089002706483  delta_E= -0.0273  |g|= 0.0182  |ddm|= 0.0816
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0199588
diis-c [-3.98353345e-04  1.00000000e+00]
  HOMO = -0.300181466733239  LUMO = 8.13171492589699
  mo_energy =
[-4.69604632e+00 -3.00181467e-01  8.13171493e+00  9.10164984e+01
  1.03977090e+03]
E1 = -19.024581542764636  E_coul = 4.515671545993905
cycle= 2 E= -14.5089099967707  delta_E= -9.73e-06  |g|= 0.000696  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000762914
diis-c [-2.81178465e-07 -2.82687838e-02  1.02826878e+00]
  HOMO = -0.300212466319067  LUMO = 8.13156281059388
  mo_energy =
[-4.69641784e+00 -3.00212466e-01  8.13156281e+00  9.10161101e+01
  1.03977022e+03]
E1 = -19.024560456588627  E_coul = 4.515650436742234
cycle= 3 E= -14.5089100198464  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.34049e-05
diis-c [-3.07369406e-11  1.04041477e-03 -4.51713369e-02  1.04413092e+00]
  HOMO = -0.300212977534043  LUMO = 8.13156728407762
  mo_energy =
[-4.69641687e+00 -3.00212978e-01  8.13156728e+00  9.10161375e+01
  1.03977027e+03]
E1 = -19.024560536620168  E_coul = 4.5156505167580345
cycle= 4 E= -14.5089100198621  delta_E= -1.57e-11  |g|= 1.23e-07  |ddm|= 4.06e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024560536620168  E_coul = 4.5156505167580345
  HOMO = -0.30021297734028  LUMO = 8.13156737913984
  mo_energy =
[-4.69641677e+00 -3.00212977e-01  8.13156738e+00  9.10161379e+01
  1.03977027e+03]
E1 = -19.024560544032305  E_coul = 4.51565052417017
Extra cycle  E= -14.5089100198621  delta_E= -1.78e-15  |g|= 5.98e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.200743285691788
E1 = -19.024560544032305  E_coul = 4.51565052417017
init E= -14.5089100198621
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300212977363123  LUMO = 8.13156738301623
  mo_energy =
[-4.69641677e+00 -3.00212977e-01  8.13156738e+00  9.10161379e+01
  1.03977027e+03]
E1 = -19.024560544314312  E_coul = 4.515650524452184
cycle= 1 E= -14.5089100198621  delta_E= 7.11e-15  |g|= 3.01e-10  |ddm|= 8.95e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.024560544314312  E_coul = 4.515650524452184
  HOMO = -0.300212977366155  LUMO = 8.13156738318093
  mo_energy =
[-4.69641677e+00 -3.00212977e-01  8.13156738e+00  9.10161379e+01
  1.03977027e+03]
E1 = -19.024560544325457  E_coul = 4.515650524463313
Extra cycle  E= -14.5089100198621  delta_E= -1.6e-14  |g|= 1.55e-11  |ddm|= 4.95e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59910875e+02 6.59910153e+01 9.84887985e+00 2.05002583e+00
 1.04202336e-01]
grad_E = [ 8.80967793e-06  1.25360787e-03 -4.18535029e-03  4.88618203e-03
  3.76310978e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910874155        1
[INPUT] 0    0    [1    /1   ]  65.9908713827        1
[INPUT] 0    0    [1    /1   ]  9.84936293142        1
[INPUT] 0    0    [1    /1   ]  2.04944778621        1
[INPUT] 0    0    [1    /1   ]  0.104192076869       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108741546768, 1.0]], [0, [65.9908713827028, 1.0]], [0, [9.849362931417959, 1.0]], [0, [2.0494477862064913, 1.0]], [0, [0.10419207686934692, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087415]
bas 1, expnt(s) = [65.99087138]
bas 2, expnt(s) = [9.84936293]
bas 3, expnt(s) = [2.04944779]
bas 4, expnt(s) = [0.10419208]
CPU time:        13.11
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910874e+02 3.28949316e+02 6.59908714e+01 5.84962360e+01
 9.84936293e+00 1.40465972e+01 2.04944779e+00 4.32755572e+00
 1.04192077e-01 4.63330666e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984867170259446
cond(S) = 10.198138228653994
E1 = -18.993883916272377  E_coul = 4.512223911121795
init E= -14.4816600051506
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302997056476435  LUMO = 8.12438109933449
  mo_energy =
[-4.69524608e+00 -3.02997056e-01  8.12438110e+00  9.10191893e+01
  1.03978754e+03]
E1 = -19.02511080274367  E_coul = 4.516205618836478
cycle= 1 E= -14.5089051839072  delta_E= -0.0272  |g|= 0.0181  |ddm|= 0.0818
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0198593
diis-c [-3.94391565e-04  1.00000000e+00]
  HOMO = -0.300191077902814  LUMO = 8.13012829781337
  mo_energy =
[-4.69616335e+00 -3.00191078e-01  8.13012830e+00  9.10156098e+01
  1.03977010e+03]
E1 = -19.024332912168223  E_coul = 4.515418006255703
cycle= 2 E= -14.5089149059125  delta_E= -9.72e-06  |g|= 0.000694  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000761144
diis-c [-2.80367413e-07 -2.83228015e-02  1.02832280e+00]
  HOMO = -0.30022214252312  LUMO = 8.1299739882384
  mo_energy =
[-4.69653748e+00 -3.00222143e-01  8.12997399e+00  9.10152134e+01
  1.03976940e+03]
E1 = -19.02431161458222  E_coul = 4.515396685614576
cycle= 3 E= -14.5089149289676  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.3351e-05
diis-c [-3.01746978e-11  1.04033658e-03 -4.51435426e-02  1.04410321e+00]
  HOMO = -0.30022265262846  LUMO = 8.12997844072948
  mo_energy =
[-4.69653653e+00 -3.00222653e-01  8.12997844e+00  9.10152407e+01
  1.03976945e+03]
E1 = -19.024311693134074  E_coul = 4.515396764150761
cycle= 4 E= -14.5089149289833  delta_E= -1.57e-11  |g|= 1.23e-07  |ddm|= 4.05e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024311693134074  E_coul = 4.515396764150761
  HOMO = -0.300222652378684  LUMO = 8.12997853631186
  mo_energy =
[-4.69653643e+00 -3.00222652e-01  8.12997854e+00  9.10152411e+01
  1.03976945e+03]
E1 = -19.02431170060651  E_coul = 4.515396771623197
Extra cycle  E= -14.5089149289833  delta_E=    0  |g|= 5.94e-09  |ddm|= 1.66e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910874e+02 6.59908714e+01 9.84936293e+00 2.04944779e+00
 1.04192077e-01]
E = -14.508914928983312
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910874155        1
[INPUT] 0    0    [1    /1   ]  65.9908713827        1
[INPUT] 0    0    [1    /1   ]  9.84936293142        1
[INPUT] 0    0    [1    /1   ]  2.04944778621        1
[INPUT] 0    0    [1    /1   ]  0.104192076869       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108741546768, 1.0]], [0, [65.9908713827028, 1.0]], [0, [9.849362931417959, 1.0]], [0, [2.0494477862064913, 1.0]], [0, [0.10419207686934692, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087415]
bas 1, expnt(s) = [65.99087138]
bas 2, expnt(s) = [9.84936293]
bas 3, expnt(s) = [2.04944779]
bas 4, expnt(s) = [0.10419208]
CPU time:        13.25
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910874e+02 3.28949316e+02 6.59908714e+01 5.84962360e+01
 9.84936293e+00 1.40465972e+01 2.04944779e+00 4.32755572e+00
 1.04192077e-01 4.63330666e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984867170259446
cond(S) = 10.198138228653994
E1 = -18.993883916272377  E_coul = 4.512223911121795
init E= -14.4816600051506
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302997056476435  LUMO = 8.12438109933449
  mo_energy =
[-4.69524608e+00 -3.02997056e-01  8.12438110e+00  9.10191893e+01
  1.03978754e+03]
E1 = -19.02511080274367  E_coul = 4.516205618836478
cycle= 1 E= -14.5089051839072  delta_E= -0.0272  |g|= 0.0181  |ddm|= 0.0818
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0198593
diis-c [-3.94391565e-04  1.00000000e+00]
  HOMO = -0.300191077902814  LUMO = 8.13012829781337
  mo_energy =
[-4.69616335e+00 -3.00191078e-01  8.13012830e+00  9.10156098e+01
  1.03977010e+03]
E1 = -19.024332912168223  E_coul = 4.515418006255703
cycle= 2 E= -14.5089149059125  delta_E= -9.72e-06  |g|= 0.000694  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000761144
diis-c [-2.80367413e-07 -2.83228015e-02  1.02832280e+00]
  HOMO = -0.30022214252312  LUMO = 8.1299739882384
  mo_energy =
[-4.69653748e+00 -3.00222143e-01  8.12997399e+00  9.10152134e+01
  1.03976940e+03]
E1 = -19.02431161458222  E_coul = 4.515396685614576
cycle= 3 E= -14.5089149289676  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.3351e-05
diis-c [-3.01746978e-11  1.04033658e-03 -4.51435426e-02  1.04410321e+00]
  HOMO = -0.30022265262846  LUMO = 8.12997844072948
  mo_energy =
[-4.69653653e+00 -3.00222653e-01  8.12997844e+00  9.10152407e+01
  1.03976945e+03]
E1 = -19.024311693134074  E_coul = 4.515396764150761
cycle= 4 E= -14.5089149289833  delta_E= -1.57e-11  |g|= 1.23e-07  |ddm|= 4.05e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024311693134074  E_coul = 4.515396764150761
  HOMO = -0.300222652378684  LUMO = 8.12997853631186
  mo_energy =
[-4.69653643e+00 -3.00222652e-01  8.12997854e+00  9.10152411e+01
  1.03976945e+03]
E1 = -19.02431170060651  E_coul = 4.515396771623197
Extra cycle  E= -14.5089149289833  delta_E=    0  |g|= 5.94e-09  |ddm|= 1.66e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.198138228653994
E1 = -19.02431170060651  E_coul = 4.515396771623197
init E= -14.5089149289833
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300222652399132  LUMO = 8.12997854019964
  mo_energy =
[-4.69653643e+00 -3.00222652e-01  8.12997854e+00  9.10152412e+01
  1.03976945e+03]
E1 = -19.024311700890284  E_coul = 4.515396771906977
cycle= 1 E= -14.5089149289833  delta_E= 7.11e-15  |g|= 2.99e-10  |ddm|= 8.85e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.024311700890284  E_coul = 4.515396771906977
  HOMO = -0.300222652402057  LUMO = 8.12997854036443
  mo_energy =
[-4.69653643e+00 -3.00222652e-01  8.12997854e+00  9.10152412e+01
  1.03976945e+03]
E1 = -19.024311700901446  E_coul = 4.515396771918137
Extra cycle  E= -14.5089149289833  delta_E= -3.55e-15  |g|= 1.54e-11  |ddm|= 4.89e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910874e+02 6.59908714e+01 9.84936293e+00 2.04944779e+00
 1.04192077e-01]
grad_E = [ 8.82072488e-06  1.25139862e-03 -4.11057582e-03  4.41638820e-03
  3.32173179e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910870112        1
[INPUT] 0    0    [1    /1   ]  65.9902955658        1
[INPUT] 0    0    [1    /1   ]  9.85129524703        1
[INPUT] 0    0    [1    /1   ]  2.04713560663        1
[INPUT] 0    0    [1    /1   ]  0.104151038677       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108701120292, 1.0]], [0, [65.99029556584944, 1.0]], [0, [9.851295247029059, 1.0]], [0, [2.0471356066298925, 1.0]], [0, [0.10415103867695327, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087011]
bas 1, expnt(s) = [65.99029557]
bas 2, expnt(s) = [9.85129525]
bas 3, expnt(s) = [2.04713561]
bas 4, expnt(s) = [0.10415104]
CPU time:        15.13
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910870e+02 3.28949315e+02 6.59902956e+01 5.84958531e+01
 9.85129525e+00 1.40486640e+01 2.04713561e+00 4.32389345e+00
 1.04151039e-01 4.63193790e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984877545166333
cond(S) = 10.187730765382387
E1 = -18.993666375707857  E_coul = 4.51184970103316
init E= -14.4818166746747
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303017777876964  LUMO = 8.11829086849078
  mo_energy =
[-4.69542090e+00 -3.03017778e-01  8.11829087e+00  9.10164364e+01
  1.03978516e+03]
E1 = -19.024133353213408  E_coul = 4.515211648006824
cycle= 1 E= -14.5089217052066  delta_E= -0.0271  |g|= 0.0178  |ddm|= 0.0825
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0194639
diis-c [-3.78845223e-04  1.00000000e+00]
  HOMO = -0.300229423101229  LUMO = 8.12377920492105
  mo_energy =
[-4.69663024e+00 -3.00229423e-01  8.12377920e+00  9.10120548e+01
  1.03976686e+03]
E1 = -19.02333471810769  E_coul = 4.514403304619853
cycle= 2 E= -14.5089314134878  delta_E= -9.71e-06  |g|= 0.000688  |ddm|= 0.00354
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000754225
diis-c [-2.77179825e-07 -2.85498267e-02  1.02854983e+00]
  HOMO = -0.300260748877739  LUMO = 8.1236161039381
  mo_energy =
[-4.69701486e+00 -3.00260749e-01  8.12361610e+00  9.10116264e+01
  1.03976613e+03]
E1 = -19.023312574275458  E_coul = 4.514381137810931
cycle= 3 E= -14.5089314364645  delta_E= -2.3e-08  |g|= 1.73e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.31298e-05
diis-c [-2.80149866e-11  1.03976675e-03 -4.50124437e-02  1.04397268e+00]
  HOMO = -0.300261254141476  LUMO = 8.12362047667459
  mo_energy =
[-4.69701396e+00 -3.00261254e-01  8.12362048e+00  9.10116534e+01
  1.03976617e+03]
E1 = -19.02331264739237  E_coul = 4.514381210912524
cycle= 4 E= -14.5089314364798  delta_E= -1.53e-11  |g|= 1.21e-07  |ddm|= 4.01e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02331264739237  E_coul = 4.514381210912524
  HOMO = -0.300261253669877  LUMO = 8.12362057442842
  mo_energy =
[-4.69701386e+00 -3.00261254e-01  8.12362057e+00  9.10116538e+01
  1.03976617e+03]
E1 = -19.023312655111805  E_coul = 4.514381218631962
Extra cycle  E= -14.5089314364798  delta_E=    0  |g|= 5.81e-09  |ddm|= 1.61e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910870e+02 6.59902956e+01 9.85129525e+00 2.04713561e+00
 1.04151039e-01]
E = -14.508931436479845
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910870112        1
[INPUT] 0    0    [1    /1   ]  65.9902955658        1
[INPUT] 0    0    [1    /1   ]  9.85129524703        1
[INPUT] 0    0    [1    /1   ]  2.04713560663        1
[INPUT] 0    0    [1    /1   ]  0.104151038677       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108701120292, 1.0]], [0, [65.99029556584944, 1.0]], [0, [9.851295247029059, 1.0]], [0, [2.0471356066298925, 1.0]], [0, [0.10415103867695327, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087011]
bas 1, expnt(s) = [65.99029557]
bas 2, expnt(s) = [9.85129525]
bas 3, expnt(s) = [2.04713561]
bas 4, expnt(s) = [0.10415104]
CPU time:        15.29
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910870e+02 3.28949315e+02 6.59902956e+01 5.84958531e+01
 9.85129525e+00 1.40486640e+01 2.04713561e+00 4.32389345e+00
 1.04151039e-01 4.63193790e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984877545166333
cond(S) = 10.187730765382387
E1 = -18.993666375707857  E_coul = 4.51184970103316
init E= -14.4818166746747
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303017777876964  LUMO = 8.11829086849078
  mo_energy =
[-4.69542090e+00 -3.03017778e-01  8.11829087e+00  9.10164364e+01
  1.03978516e+03]
E1 = -19.024133353213408  E_coul = 4.515211648006824
cycle= 1 E= -14.5089217052066  delta_E= -0.0271  |g|= 0.0178  |ddm|= 0.0825
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0194639
diis-c [-3.78845223e-04  1.00000000e+00]
  HOMO = -0.300229423101229  LUMO = 8.12377920492105
  mo_energy =
[-4.69663024e+00 -3.00229423e-01  8.12377920e+00  9.10120548e+01
  1.03976686e+03]
E1 = -19.02333471810769  E_coul = 4.514403304619853
cycle= 2 E= -14.5089314134878  delta_E= -9.71e-06  |g|= 0.000688  |ddm|= 0.00354
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000754225
diis-c [-2.77179825e-07 -2.85498267e-02  1.02854983e+00]
  HOMO = -0.300260748877739  LUMO = 8.1236161039381
  mo_energy =
[-4.69701486e+00 -3.00260749e-01  8.12361610e+00  9.10116264e+01
  1.03976613e+03]
E1 = -19.023312574275458  E_coul = 4.514381137810931
cycle= 3 E= -14.5089314364645  delta_E= -2.3e-08  |g|= 1.73e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.31298e-05
diis-c [-2.80149866e-11  1.03976675e-03 -4.50124437e-02  1.04397268e+00]
  HOMO = -0.300261254141476  LUMO = 8.12362047667459
  mo_energy =
[-4.69701396e+00 -3.00261254e-01  8.12362048e+00  9.10116534e+01
  1.03976617e+03]
E1 = -19.02331264739237  E_coul = 4.514381210912524
cycle= 4 E= -14.5089314364798  delta_E= -1.53e-11  |g|= 1.21e-07  |ddm|= 4.01e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02331264739237  E_coul = 4.514381210912524
  HOMO = -0.300261253669877  LUMO = 8.12362057442842
  mo_energy =
[-4.69701386e+00 -3.00261254e-01  8.12362057e+00  9.10116538e+01
  1.03976617e+03]
E1 = -19.023312655111805  E_coul = 4.514381218631962
Extra cycle  E= -14.5089314364798  delta_E=    0  |g|= 5.81e-09  |ddm|= 1.61e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.187730765382387
E1 = -19.023312655111805  E_coul = 4.514381218631962
init E= -14.5089314364798
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300261253680892  LUMO = 8.12362057836594
  mo_energy =
[-4.69701386e+00 -3.00261254e-01  8.12362058e+00  9.10116538e+01
  1.03976617e+03]
E1 = -19.023312655402894  E_coul = 4.514381218923053
cycle= 1 E= -14.5089314364798  delta_E= 3.55e-15  |g|= 2.9e-10  |ddm|= 8.46e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.023312655402894  E_coul = 4.514381218923053
  HOMO = -0.3002612536834  LUMO = 8.12362057853115
  mo_energy =
[-4.69701386e+00 -3.00261254e-01  8.12362058e+00  9.10116538e+01
  1.03976617e+03]
E1 = -19.023312655414237  E_coul = 4.514381218934396
Extra cycle  E= -14.5089314364798  delta_E=    0  |g|= 1.49e-11  |ddm|= 4.66e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910870e+02 6.59902956e+01 9.85129525e+00 2.04713561e+00
 1.04151039e-01]
grad_E = [ 8.86494579e-06  1.24256294e-03 -3.81105433e-03  2.53334183e-03
  1.55468983e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910849449        1
[INPUT] 0    0    [1    /1   ]  65.9873988732        1
[INPUT] 0    0    [1    /1   ]  9.86018762631        1
[INPUT] 0    0    [1    /1   ]  2.04117473081        1
[INPUT] 0    0    [1    /1   ]  0.104097786306       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108494489709, 1.0]], [0, [65.98739887322176, 1.0]], [0, [9.860187626307354, 1.0]], [0, [2.0411747308128145, 1.0]], [0, [0.10409778630601081, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91084945]
bas 1, expnt(s) = [65.98739887]
bas 2, expnt(s) = [9.86018763]
bas 3, expnt(s) = [2.04117473]
bas 4, expnt(s) = [0.10409779]
CPU time:        17.24
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910849e+02 3.28949307e+02 6.59873989e+01 5.84939273e+01
 9.86018763e+00 1.40581738e+01 2.04117473e+00 4.31444723e+00
 1.04097786e-01 4.63016156e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984903737406844
cond(S) = 10.160676994606986
E1 = -18.993505136215667  E_coul = 4.511236491860521
init E= -14.4822686443551
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303033066392292  LUMO = 8.10531004646868
  mo_energy =
[-4.69572986e+00 -3.03033066e-01  8.10531005e+00  9.10207584e+01
  1.03978643e+03]
E1 = -19.021982808368616  E_coul = 4.5130281573963265
cycle= 1 E= -14.5089546509723  delta_E= -0.0267  |g|= 0.017  |ddm|= 0.0841
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0183396
diis-c [-3.36340694e-04  1.00000000e+00]
  HOMO = -0.300286321311868  LUMO = 8.11012489532982
  mo_energy =
[-4.69768151e+00 -3.00286321e-01  8.11012490e+00  9.10142831e+01
  1.03976596e+03]
E1 = -19.02112928131212  E_coul = 4.512165026384172
cycle= 2 E= -14.5089642549279  delta_E= -9.6e-06  |g|= 0.000668  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000732897
diis-c [-2.66264509e-07 -2.92195130e-02  1.02921951e+00]
  HOMO = -0.300318239569875  LUMO = 8.10993764769561
  mo_energy =
[-4.69809400e+00 -3.00318240e-01  8.10993765e+00  9.10137655e+01
  1.03976512e+03]
E1 = -19.021104871930188  E_coul = 4.512140594446136
cycle= 3 E= -14.5089642774841  delta_E= -2.26e-08  |g|= 1.66e-05  |ddm|= 0.000171
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.23852e-05
diis-c [-2.24744527e-11  1.03645266e-03 -4.45330911e-02  1.04349664e+00]
  HOMO = -0.300318726765729  LUMO = 8.10994180895479
  mo_energy =
[-4.69809320e+00 -3.00318727e-01  8.10994181e+00  9.10137913e+01
  1.03976517e+03]
E1 = -19.02110493284139  E_coul = 4.512140655343183
cycle= 4 E= -14.5089642774982  delta_E= -1.42e-11  |g|= 1.19e-07  |ddm|= 3.87e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02110493284139  E_coul = 4.512140655343183
  HOMO = -0.300318725704851  LUMO = 8.10994191289841
  mo_energy =
[-4.69809309e+00 -3.00318726e-01  8.10994191e+00  9.10137917e+01
  1.03976517e+03]
E1 = -19.02110494123969  E_coul = 4.512140663741482
Extra cycle  E= -14.5089642774982  delta_E= -3.55e-15  |g|= 5.51e-09  |ddm|= 1.52e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910849e+02 6.59873989e+01 9.86018763e+00 2.04117473e+00
 1.04097786e-01]
E = -14.50896427749821
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910849449        1
[INPUT] 0    0    [1    /1   ]  65.9873988732        1
[INPUT] 0    0    [1    /1   ]  9.86018762631        1
[INPUT] 0    0    [1    /1   ]  2.04117473081        1
[INPUT] 0    0    [1    /1   ]  0.104097786306       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108494489709, 1.0]], [0, [65.98739887322176, 1.0]], [0, [9.860187626307354, 1.0]], [0, [2.0411747308128145, 1.0]], [0, [0.10409778630601081, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91084945]
bas 1, expnt(s) = [65.98739887]
bas 2, expnt(s) = [9.86018763]
bas 3, expnt(s) = [2.04117473]
bas 4, expnt(s) = [0.10409779]
CPU time:        17.42
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910849e+02 3.28949307e+02 6.59873989e+01 5.84939273e+01
 9.86018763e+00 1.40581738e+01 2.04117473e+00 4.31444723e+00
 1.04097786e-01 4.63016156e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984903737406844
cond(S) = 10.160676994606986
E1 = -18.993505136215667  E_coul = 4.511236491860521
init E= -14.4822686443551
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303033066392292  LUMO = 8.10531004646868
  mo_energy =
[-4.69572986e+00 -3.03033066e-01  8.10531005e+00  9.10207584e+01
  1.03978643e+03]
E1 = -19.021982808368616  E_coul = 4.5130281573963265
cycle= 1 E= -14.5089546509723  delta_E= -0.0267  |g|= 0.017  |ddm|= 0.0841
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0183396
diis-c [-3.36340694e-04  1.00000000e+00]
  HOMO = -0.300286321311868  LUMO = 8.11012489532982
  mo_energy =
[-4.69768151e+00 -3.00286321e-01  8.11012490e+00  9.10142831e+01
  1.03976596e+03]
E1 = -19.02112928131212  E_coul = 4.512165026384172
cycle= 2 E= -14.5089642549279  delta_E= -9.6e-06  |g|= 0.000668  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000732897
diis-c [-2.66264509e-07 -2.92195130e-02  1.02921951e+00]
  HOMO = -0.300318239569875  LUMO = 8.10993764769561
  mo_energy =
[-4.69809400e+00 -3.00318240e-01  8.10993765e+00  9.10137655e+01
  1.03976512e+03]
E1 = -19.021104871930188  E_coul = 4.512140594446136
cycle= 3 E= -14.5089642774841  delta_E= -2.26e-08  |g|= 1.66e-05  |ddm|= 0.000171
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.23852e-05
diis-c [-2.24744527e-11  1.03645266e-03 -4.45330911e-02  1.04349664e+00]
  HOMO = -0.300318726765729  LUMO = 8.10994180895479
  mo_energy =
[-4.69809320e+00 -3.00318727e-01  8.10994181e+00  9.10137913e+01
  1.03976517e+03]
E1 = -19.02110493284139  E_coul = 4.512140655343183
cycle= 4 E= -14.5089642774982  delta_E= -1.42e-11  |g|= 1.19e-07  |ddm|= 3.87e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02110493284139  E_coul = 4.512140655343183
  HOMO = -0.300318725704851  LUMO = 8.10994191289841
  mo_energy =
[-4.69809309e+00 -3.00318726e-01  8.10994191e+00  9.10137917e+01
  1.03976517e+03]
E1 = -19.02110494123969  E_coul = 4.512140663741482
Extra cycle  E= -14.5089642774982  delta_E= -3.55e-15  |g|= 5.51e-09  |ddm|= 1.52e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.160676994606986
E1 = -19.02110494123969  E_coul = 4.512140663741482
init E= -14.5089642774982
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300318725691172  LUMO = 8.10994191698384
  mo_energy =
[-4.69809308e+00 -3.00318726e-01  8.10994192e+00  9.10137918e+01
  1.03976517e+03]
E1 = -19.021104941551013  E_coul = 4.512140664052807
cycle= 1 E= -14.5089642774982  delta_E= 5.33e-15  |g|= 2.68e-10  |ddm|= 7.56e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.021104941551013  E_coul = 4.512140664052807
  HOMO = -0.300318725692598  LUMO = 8.10994191715079
  mo_energy =
[-4.69809308e+00 -3.00318726e-01  8.10994192e+00  9.10137918e+01
  1.03976517e+03]
E1 = -19.02110494156291  E_coul = 4.512140664064698
Extra cycle  E= -14.5089642774982  delta_E= -7.11e-15  |g|= 1.35e-11  |ddm|= 4.1e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910849e+02 6.59873989e+01 9.86018763e+00 2.04117473e+00
 1.04097786e-01]
grad_E = [ 9.01177951e-06  1.21422159e-03 -2.92413363e-03 -2.77356291e-03
 -5.80991799e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910824919        1
[INPUT] 0    0    [1    /1   ]  65.9840197319        1
[INPUT] 0    0    [1    /1   ]  9.86961557347        1
[INPUT] 0    0    [1    /1   ]  2.04033640389        1
[INPUT] 0    0    [1    /1   ]  0.104074568257       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108249187127, 1.0]], [0, [65.98401973189033, 1.0]], [0, [9.86961557347375, 1.0]], [0, [2.040336403885018, 1.0]], [0, [0.10407456825652615, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91082492]
bas 1, expnt(s) = [65.98401973]
bas 2, expnt(s) = [9.86961557]
bas 3, expnt(s) = [2.0403364]
bas 4, expnt(s) = [0.10407457]
CPU time:        19.28
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910825e+02 3.28949298e+02 6.59840197e+01 5.84916808e+01
 9.86961557e+00 1.40682540e+01 2.04033640e+00 4.31311818e+00
 1.04074568e-01 4.62938700e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9849051279443444
cond(S) = 10.155147663889943
E1 = -18.99341770421202  E_coul = 4.511014651626332
init E= -14.4824030525857
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30304709484254  LUMO = 8.10837542386403
  mo_energy =
[-4.69584078e+00 -3.03047095e-01  8.10837542e+00  9.10445689e+01
  1.03980148e+03]
E1 = -19.021381650316844  E_coul = 4.512400027005479
cycle= 1 E= -14.5089816233114  delta_E= -0.0266  |g|= 0.0167  |ddm|= 0.0845
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0179504
diis-c [-3.22218392e-04  1.00000000e+00]
  HOMO = -0.300308311078807  LUMO = 8.11301312783295
  mo_energy =
[-4.69798705e+00 -3.00308311e-01  8.11301313e+00  9.10375603e+01
  1.03978055e+03]
E1 = -19.02051216407645  E_coul = 4.511520982323565
cycle= 2 E= -14.5089911817529  delta_E= -9.56e-06  |g|= 0.000661  |ddm|= 0.00359
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000725682
diis-c [-2.61882679e-07 -2.95215542e-02  1.02952155e+00]
  HOMO = -0.300340364437131  LUMO = 8.1128184985438
  mo_energy =
[-4.69840773e+00 -3.00340364e-01  8.11281850e+00  9.10370156e+01
  1.03977968e+03]
E1 = -19.02048709928766  E_coul = 4.511495895173472
cycle= 3 E= -14.5089912041142  delta_E= -2.24e-08  |g|= 1.63e-05  |ddm|= 0.000171
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.20489e-05
diis-c [-2.05862146e-11  1.03442546e-03 -4.42473063e-02  1.04321288e+00]
  HOMO = -0.300340841036654  LUMO = 8.11282261830112
  mo_energy =
[-4.69840690e+00 -3.00340841e-01  8.11282262e+00  9.10370411e+01
  1.03977973e+03]
E1 = -19.020487160367118  E_coul = 4.511495956239278
cycle= 4 E= -14.5089912041278  delta_E= -1.37e-11  |g|= 1.18e-07  |ddm|= 3.79e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.020487160367118  E_coul = 4.511495956239278
  HOMO = -0.300340839785495  LUMO = 8.11282272423687
  mo_energy =
[-4.69840678e+00 -3.00340840e-01  8.11282272e+00  9.10370415e+01
  1.03977973e+03]
E1 = -19.02048716897638  E_coul = 4.511495964848544
Extra cycle  E= -14.5089912041278  delta_E= 3.55e-15  |g|= 5.41e-09  |ddm|= 1.5e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910825e+02 6.59840197e+01 9.86961557e+00 2.04033640e+00
 1.04074568e-01]
E = -14.508991204127836
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910824919        1
[INPUT] 0    0    [1    /1   ]  65.9840197319        1
[INPUT] 0    0    [1    /1   ]  9.86961557347        1
[INPUT] 0    0    [1    /1   ]  2.04033640389        1
[INPUT] 0    0    [1    /1   ]  0.104074568257       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108249187127, 1.0]], [0, [65.98401973189033, 1.0]], [0, [9.86961557347375, 1.0]], [0, [2.040336403885018, 1.0]], [0, [0.10407456825652615, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91082492]
bas 1, expnt(s) = [65.98401973]
bas 2, expnt(s) = [9.86961557]
bas 3, expnt(s) = [2.0403364]
bas 4, expnt(s) = [0.10407457]
CPU time:        19.47
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910825e+02 3.28949298e+02 6.59840197e+01 5.84916808e+01
 9.86961557e+00 1.40682540e+01 2.04033640e+00 4.31311818e+00
 1.04074568e-01 4.62938700e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9849051279443444
cond(S) = 10.155147663889943
E1 = -18.99341770421202  E_coul = 4.511014651626332
init E= -14.4824030525857
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30304709484254  LUMO = 8.10837542386403
  mo_energy =
[-4.69584078e+00 -3.03047095e-01  8.10837542e+00  9.10445689e+01
  1.03980148e+03]
E1 = -19.021381650316844  E_coul = 4.512400027005479
cycle= 1 E= -14.5089816233114  delta_E= -0.0266  |g|= 0.0167  |ddm|= 0.0845
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0179504
diis-c [-3.22218392e-04  1.00000000e+00]
  HOMO = -0.300308311078807  LUMO = 8.11301312783295
  mo_energy =
[-4.69798705e+00 -3.00308311e-01  8.11301313e+00  9.10375603e+01
  1.03978055e+03]
E1 = -19.02051216407645  E_coul = 4.511520982323565
cycle= 2 E= -14.5089911817529  delta_E= -9.56e-06  |g|= 0.000661  |ddm|= 0.00359
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000725682
diis-c [-2.61882679e-07 -2.95215542e-02  1.02952155e+00]
  HOMO = -0.300340364437131  LUMO = 8.1128184985438
  mo_energy =
[-4.69840773e+00 -3.00340364e-01  8.11281850e+00  9.10370156e+01
  1.03977968e+03]
E1 = -19.02048709928766  E_coul = 4.511495895173472
cycle= 3 E= -14.5089912041142  delta_E= -2.24e-08  |g|= 1.63e-05  |ddm|= 0.000171
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.20489e-05
diis-c [-2.05862146e-11  1.03442546e-03 -4.42473063e-02  1.04321288e+00]
  HOMO = -0.300340841036654  LUMO = 8.11282261830112
  mo_energy =
[-4.69840690e+00 -3.00340841e-01  8.11282262e+00  9.10370411e+01
  1.03977973e+03]
E1 = -19.020487160367118  E_coul = 4.511495956239278
cycle= 4 E= -14.5089912041278  delta_E= -1.37e-11  |g|= 1.18e-07  |ddm|= 3.79e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.020487160367118  E_coul = 4.511495956239278
  HOMO = -0.300340839785495  LUMO = 8.11282272423687
  mo_energy =
[-4.69840678e+00 -3.00340840e-01  8.11282272e+00  9.10370415e+01
  1.03977973e+03]
E1 = -19.02048716897638  E_coul = 4.511495964848544
Extra cycle  E= -14.5089912041278  delta_E= 3.55e-15  |g|= 5.41e-09  |ddm|= 1.5e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.155147663889943
E1 = -19.02048716897638  E_coul = 4.511495964848544
init E= -14.5089912041278
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300340839763807  LUMO = 8.11282272836836
  mo_energy =
[-4.69840678e+00 -3.00340840e-01  8.11282273e+00  9.10370415e+01
  1.03977973e+03]
E1 = -19.02048716929389  E_coul = 4.511495965166052
cycle= 1 E= -14.5089912041278  delta_E= -1.78e-15  |g|= 2.61e-10  |ddm|= 7.28e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02048716929389  E_coul = 4.511495965166052
  HOMO = -0.300340839764876  LUMO = 8.11282272853573
  mo_energy =
[-4.69840678e+00 -3.00340840e-01  8.11282273e+00  9.10370415e+01
  1.03977973e+03]
E1 = -19.02048716930593  E_coul = 4.511495965178099
Extra cycle  E= -14.5089912041278  delta_E= 7.11e-15  |g|= 1.31e-11  |ddm|= 3.91e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910825e+02 6.59840197e+01 9.86961557e+00 2.04033640e+00
 1.04074568e-01]
grad_E = [ 9.10026239e-06  1.19858451e-03 -2.56680162e-03 -4.40537126e-03
 -1.56218820e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910608102        1
[INPUT] 0    0    [1    /1   ]  65.9543523519        1
[INPUT] 0    0    [1    /1   ]  9.95027828213        1
[INPUT] 0    0    [1    /1   ]  2.04331561761        1
[INPUT] 0    0    [1    /1   ]  0.103977835327       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9106081022019, 1.0]], [0, [65.95435235187405, 1.0]], [0, [9.950278282126764, 1.0]], [0, [2.0433156176099425, 1.0]], [0, [0.10397783532715914, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.9106081]
bas 1, expnt(s) = [65.95435235]
bas 2, expnt(s) = [9.95027828]
bas 3, expnt(s) = [2.04331562]
bas 4, expnt(s) = [0.10397784]
CPU time:        21.35
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910608e+02 3.28949217e+02 6.59543524e+01 5.84719556e+01
 9.95027828e+00 1.41543993e+01 2.04331562e+00 4.31784069e+00
 1.03977835e-01 4.62615951e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848718300866666
cond(S) = 10.151638230141081
E1 = -18.993086474893385  E_coul = 4.510189530095075
init E= -14.4828969447983
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303133063957813  LUMO = 8.1661410364275
  mo_energy =
[-4.69626361e+00 -3.03133064e-01  8.16614104e+00  9.12837198e+01
  1.03995544e+03]
E1 = -19.01967140415415  E_coul = 4.510504670290763
cycle= 1 E= -14.5091667338634  delta_E= -0.0263  |g|= 0.0153  |ddm|= 0.0856
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0161618
diis-c [-2.61202305e-04  1.00000000e+00]
  HOMO = -0.300393118429957  LUMO = 8.17027310888666
  mo_energy =
[-4.69894233e+00 -3.00393118e-01  8.17027311e+00  9.12753193e+01
  1.03993393e+03]
E1 = -19.018746214412985  E_coul = 4.5095702355385745
cycle= 2 E= -14.5091759788744  delta_E= -9.25e-06  |g|= 0.000627  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000691643
diis-c [-2.37494117e-07 -3.13332348e-02  1.03133323e+00]
  HOMO = -0.300425330806849  LUMO = 8.17004954331558
  mo_energy =
[-4.69939220e+00 -3.00425331e-01  8.17004954e+00  9.12746687e+01
  1.03993295e+03]
E1 = -19.01871887152041  E_coul = 4.509542871581647
cycle= 3 E= -14.5091759999388  delta_E= -2.11e-08  |g|= 1.44e-05  |ddm|= 0.000167
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.99926e-05
diis-c [-1.33332871e-11  1.01435753e-03 -4.20830497e-02  1.04106869e+00]
  HOMO = -0.300425732839605  LUMO = 8.17005365794366
  mo_energy =
[-4.69939092e+00 -3.00425733e-01  8.17005366e+00  9.12746931e+01
  1.03993299e+03]
E1 = -19.0187189591028  E_coul = 4.5095429591533875
cycle= 4 E= -14.5091759999494  delta_E= -1.06e-11  |g|= 1.15e-07  |ddm|= 3.3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.0187189591028  E_coul = 4.5095429591533875
  HOMO = -0.300425730825136  LUMO = 8.17005377248909
  mo_energy =
[-4.69939079e+00 -3.00425731e-01  8.17005377e+00  9.12746936e+01
  1.03993299e+03]
E1 = -19.018718968531484  E_coul = 4.509542968582063
Extra cycle  E= -14.5091759999494  delta_E= -8.88e-15  |g|= 5.05e-09  |ddm|= 1.47e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910608e+02 6.59543524e+01 9.95027828e+00 2.04331562e+00
 1.03977835e-01]
E = -14.50917599994942
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910608102        1
[INPUT] 0    0    [1    /1   ]  65.9543523519        1
[INPUT] 0    0    [1    /1   ]  9.95027828213        1
[INPUT] 0    0    [1    /1   ]  2.04331561761        1
[INPUT] 0    0    [1    /1   ]  0.103977835327       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9106081022019, 1.0]], [0, [65.95435235187405, 1.0]], [0, [9.950278282126764, 1.0]], [0, [2.0433156176099425, 1.0]], [0, [0.10397783532715914, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.9106081]
bas 1, expnt(s) = [65.95435235]
bas 2, expnt(s) = [9.95027828]
bas 3, expnt(s) = [2.04331562]
bas 4, expnt(s) = [0.10397784]
CPU time:        21.55
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910608e+02 3.28949217e+02 6.59543524e+01 5.84719556e+01
 9.95027828e+00 1.41543993e+01 2.04331562e+00 4.31784069e+00
 1.03977835e-01 4.62615951e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848718300866666
cond(S) = 10.151638230141081
E1 = -18.993086474893385  E_coul = 4.510189530095075
init E= -14.4828969447983
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303133063957813  LUMO = 8.1661410364275
  mo_energy =
[-4.69626361e+00 -3.03133064e-01  8.16614104e+00  9.12837198e+01
  1.03995544e+03]
E1 = -19.01967140415415  E_coul = 4.510504670290763
cycle= 1 E= -14.5091667338634  delta_E= -0.0263  |g|= 0.0153  |ddm|= 0.0856
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0161618
diis-c [-2.61202305e-04  1.00000000e+00]
  HOMO = -0.300393118429957  LUMO = 8.17027310888666
  mo_energy =
[-4.69894233e+00 -3.00393118e-01  8.17027311e+00  9.12753193e+01
  1.03993393e+03]
E1 = -19.018746214412985  E_coul = 4.5095702355385745
cycle= 2 E= -14.5091759788744  delta_E= -9.25e-06  |g|= 0.000627  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000691643
diis-c [-2.37494117e-07 -3.13332348e-02  1.03133323e+00]
  HOMO = -0.300425330806849  LUMO = 8.17004954331558
  mo_energy =
[-4.69939220e+00 -3.00425331e-01  8.17004954e+00  9.12746687e+01
  1.03993295e+03]
E1 = -19.01871887152041  E_coul = 4.509542871581647
cycle= 3 E= -14.5091759999388  delta_E= -2.11e-08  |g|= 1.44e-05  |ddm|= 0.000167
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.99926e-05
diis-c [-1.33332871e-11  1.01435753e-03 -4.20830497e-02  1.04106869e+00]
  HOMO = -0.300425732839605  LUMO = 8.17005365794366
  mo_energy =
[-4.69939092e+00 -3.00425733e-01  8.17005366e+00  9.12746931e+01
  1.03993299e+03]
E1 = -19.0187189591028  E_coul = 4.5095429591533875
cycle= 4 E= -14.5091759999494  delta_E= -1.06e-11  |g|= 1.15e-07  |ddm|= 3.3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.0187189591028  E_coul = 4.5095429591533875
  HOMO = -0.300425730825136  LUMO = 8.17005377248909
  mo_energy =
[-4.69939079e+00 -3.00425731e-01  8.17005377e+00  9.12746936e+01
  1.03993299e+03]
E1 = -19.018718968531484  E_coul = 4.509542968582063
Extra cycle  E= -14.5091759999494  delta_E= -8.88e-15  |g|= 5.05e-09  |ddm|= 1.47e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.151638230141081
E1 = -19.018718968531484  E_coul = 4.509542968582063
init E= -14.5091759999494
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300425730771978  LUMO = 8.17005377681436
  mo_energy =
[-4.69939078e+00 -3.00425731e-01  8.17005378e+00  9.12746936e+01
  1.03993299e+03]
E1 = -19.018718968871898  E_coul = 4.50954296892248
cycle= 1 E= -14.5091759999494  delta_E= 1.78e-15  |g|= 2.33e-10  |ddm|= 6.35e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.018718968871898  E_coul = 4.50954296892248
  HOMO = -0.300425730771638  LUMO = 8.1700537769834
  mo_energy =
[-4.69939078e+00 -3.00425731e-01  8.17005378e+00  9.12746936e+01
  1.03993299e+03]
E1 = -19.018718968884503  E_coul = 4.509542968935088
Extra cycle  E= -14.5091759999494  delta_E= 3.55e-15  |g|= 1.13e-11  |ddm|= 3.19e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910608e+02 6.59543524e+01 9.95027828e+00 2.04331562e+00
 1.03977835e-01]
grad_E = [ 9.73313959e-06  1.09262769e-03 -6.25340074e-04 -1.08998956e-02
 -5.70292983e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910319148        1
[INPUT] 0    0    [1    /1   ]  65.9153671636        1
[INPUT] 0    0    [1    /1   ]  10.0525096891        1
[INPUT] 0    0    [1    /1   ]  2.05685873775        1
[INPUT] 0    0    [1    /1   ]  0.103946969415       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9103191483576, 1.0]], [0, [65.91536716360861, 1.0]], [0, [10.052509689111194, 1.0]], [0, [2.0568587377457876, 1.0]], [0, [0.1039469694146911, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91031915]
bas 1, expnt(s) = [65.91536716]
bas 2, expnt(s) = [10.05250969]
bas 3, expnt(s) = [2.05685874]
bas 4, expnt(s) = [0.10394697]
CPU time:        23.44
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910319e+02 3.28949109e+02 6.59153672e+01 5.84460319e+01
 1.00525097e+01 1.42633290e+01 2.05685874e+00 4.33928698e+00
 1.03946969e-01 4.62512951e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984787873626558
cond(S) = 10.189590587517047
E1 = -18.993126824933267  E_coul = 4.510150653169198
init E= -14.4829761717641
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303213690573468  LUMO = 8.26997506224651
  mo_energy =
[-4.69630152e+00 -3.03213691e-01  8.26997506e+00  9.16199266e+01
  1.04017289e+03]
E1 = -19.02077754784367  E_coul = 4.511421771243911
cycle= 1 E= -14.5093557765998  delta_E= -0.0264  |g|= 0.0146  |ddm|= 0.0843
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153387
diis-c [-2.35276483e-04  1.00000000e+00]
  HOMO = -0.300406478472097  LUMO = 8.27444670552172
  mo_energy =
[-4.69856477e+00 -3.00406478e-01  8.27444671e+00  9.16128217e+01
  1.04015394e+03]
E1 = -19.01985930981868  E_coul = 4.510494655785479
cycle= 2 E= -14.5093646540332  delta_E= -8.88e-06  |g|= 0.000605  |ddm|= 0.0035
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000671694
diis-c [-2.19259338e-07 -3.24291950e-02  1.03242919e+00]
  HOMO = -0.300437942126487  LUMO = 8.27421983884513
  mo_energy =
[-4.69901211e+00 -3.00437942e-01  8.27421984e+00  9.16121598e+01
  1.04015296e+03]
E1 = -19.019832261722737  E_coul = 4.510467587924488
cycle= 3 E= -14.5093646737982  delta_E= -1.98e-08  |g|= 1.31e-05  |ddm|= 0.000162
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.84496e-05
diis-c [-1.06104824e-11  9.89840766e-04 -4.02759273e-02  1.03928609e+00]
  HOMO = -0.300438283874961  LUMO = 8.27422409997532
  mo_energy =
[-4.69901033e+00 -3.00438284e-01  8.27422410e+00  9.16121839e+01
  1.04015300e+03]
E1 = -19.01983238488797  E_coul = 4.510467711081071
cycle= 4 E= -14.5093646738069  delta_E= -8.65e-12  |g|= 1.11e-07  |ddm|= 2.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.01983238488797  E_coul = 4.510467711081071
  HOMO = -0.300438281590315  LUMO = 8.27422421612828
  mo_energy =
[-4.69901020e+00 -3.00438282e-01  8.27422422e+00  9.16121844e+01
  1.04015300e+03]
E1 = -19.01983239438492  E_coul = 4.510467720578015
Extra cycle  E= -14.5093646738069  delta_E= -5.33e-15  |g|= 4.76e-09  |ddm|= 1.44e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910319e+02 6.59153672e+01 1.00525097e+01 2.05685874e+00
 1.03946969e-01]
E = -14.509364673806905
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910319148        1
[INPUT] 0    0    [1    /1   ]  65.9153671636        1
[INPUT] 0    0    [1    /1   ]  10.0525096891        1
[INPUT] 0    0    [1    /1   ]  2.05685873775        1
[INPUT] 0    0    [1    /1   ]  0.103946969415       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9103191483576, 1.0]], [0, [65.91536716360861, 1.0]], [0, [10.052509689111194, 1.0]], [0, [2.0568587377457876, 1.0]], [0, [0.1039469694146911, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91031915]
bas 1, expnt(s) = [65.91536716]
bas 2, expnt(s) = [10.05250969]
bas 3, expnt(s) = [2.05685874]
bas 4, expnt(s) = [0.10394697]
CPU time:        23.65
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910319e+02 3.28949109e+02 6.59153672e+01 5.84460319e+01
 1.00525097e+01 1.42633290e+01 2.05685874e+00 4.33928698e+00
 1.03946969e-01 4.62512951e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984787873626558
cond(S) = 10.189590587517047
E1 = -18.993126824933267  E_coul = 4.510150653169198
init E= -14.4829761717641
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303213690573468  LUMO = 8.26997506224651
  mo_energy =
[-4.69630152e+00 -3.03213691e-01  8.26997506e+00  9.16199266e+01
  1.04017289e+03]
E1 = -19.02077754784367  E_coul = 4.511421771243911
cycle= 1 E= -14.5093557765998  delta_E= -0.0264  |g|= 0.0146  |ddm|= 0.0843
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153387
diis-c [-2.35276483e-04  1.00000000e+00]
  HOMO = -0.300406478472097  LUMO = 8.27444670552172
  mo_energy =
[-4.69856477e+00 -3.00406478e-01  8.27444671e+00  9.16128217e+01
  1.04015394e+03]
E1 = -19.01985930981868  E_coul = 4.510494655785479
cycle= 2 E= -14.5093646540332  delta_E= -8.88e-06  |g|= 0.000605  |ddm|= 0.0035
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000671694
diis-c [-2.19259338e-07 -3.24291950e-02  1.03242919e+00]
  HOMO = -0.300437942126487  LUMO = 8.27421983884513
  mo_energy =
[-4.69901211e+00 -3.00437942e-01  8.27421984e+00  9.16121598e+01
  1.04015296e+03]
E1 = -19.019832261722737  E_coul = 4.510467587924488
cycle= 3 E= -14.5093646737982  delta_E= -1.98e-08  |g|= 1.31e-05  |ddm|= 0.000162
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.84496e-05
diis-c [-1.06104824e-11  9.89840766e-04 -4.02759273e-02  1.03928609e+00]
  HOMO = -0.300438283874961  LUMO = 8.27422409997532
  mo_energy =
[-4.69901033e+00 -3.00438284e-01  8.27422410e+00  9.16121839e+01
  1.04015300e+03]
E1 = -19.01983238488797  E_coul = 4.510467711081071
cycle= 4 E= -14.5093646738069  delta_E= -8.65e-12  |g|= 1.11e-07  |ddm|= 2.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.01983238488797  E_coul = 4.510467711081071
  HOMO = -0.300438281590315  LUMO = 8.27422421612828
  mo_energy =
[-4.69901020e+00 -3.00438282e-01  8.27422422e+00  9.16121844e+01
  1.04015300e+03]
E1 = -19.01983239438492  E_coul = 4.510467720578015
Extra cycle  E= -14.5093646738069  delta_E= -5.33e-15  |g|= 4.76e-09  |ddm|= 1.44e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.189590587517047
E1 = -19.01983239438492  E_coul = 4.510467720578015
init E= -14.5093646738069
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300438281525917  LUMO = 8.27422422043725
  mo_energy =
[-4.69901020e+00 -3.00438282e-01  8.27422422e+00  9.16121844e+01
  1.04015300e+03]
E1 = -19.01983239472377  E_coul = 4.510467720916867
cycle= 1 E= -14.5093646738069  delta_E= 1.78e-15  |g|= 2.14e-10  |ddm|= 5.87e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.01983239472377  E_coul = 4.510467720916867
  HOMO = -0.300438281525007  LUMO = 8.27422422060254
  mo_energy =
[-4.69901019e+00 -3.00438282e-01  8.27422422e+00  9.16121844e+01
  1.04015300e+03]
E1 = -19.01983239473616  E_coul = 4.510467720929263
Extra cycle  E= -14.5093646738069  delta_E= 7.11e-15  |g|= 1.01e-11  |ddm|= 2.81e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910319e+02 6.59153672e+01 1.00525097e+01 2.05685874e+00
 1.03946969e-01]
grad_E = [ 1.04133497e-05  9.86720810e-04  7.19665254e-04 -1.17914120e-02
 -7.14937386e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909795238        1
[INPUT] 0    0    [1    /1   ]  65.8553341526        1
[INPUT] 0    0    [1    /1   ]  10.157328019         1
[INPUT] 0    0    [1    /1   ]  2.08265692987        1
[INPUT] 0    0    [1    /1   ]  0.103925746651       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9097952375798, 1.0]], [0, [65.85533415260365, 1.0]], [0, [10.157328019012848, 1.0]], [0, [2.08265692987333, 1.0]], [0, [0.10392574665061663, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90979524]
bas 1, expnt(s) = [65.85533415]
bas 2, expnt(s) = [10.15732802]
bas 3, expnt(s) = [2.08265693]
bas 4, expnt(s) = [0.10392575]
CPU time:        25.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909795e+02 3.28948913e+02 6.58553342e+01 5.84061047e+01
 1.01573280e+01 1.43747279e+01 2.08265693e+00 4.38004252e+00
 1.03925747e-01 4.62442126e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.98463444867802
cond(S) = 10.27980740356018
E1 = -18.993131668872696  E_coul = 4.510651362845192
init E= -14.4824803060275
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303338741154831  LUMO = 8.41336813616759
  mo_energy =
[-4.69601961e+00 -3.03338741e-01  8.41336814e+00  9.19855604e+01
  1.04036362e+03]
E1 = -19.02509413988768  E_coul = 4.515560494037954
cycle= 1 E= -14.5095336458497  delta_E= -0.0271  |g|= 0.0149  |ddm|= 0.0806
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0160451
diis-c [-2.57446106e-04  1.00000000e+00]
  HOMO = -0.300385560946184  LUMO = 8.41937949411374
  mo_energy =
[-4.69660513e+00 -3.00385561e-01  8.41937949e+00  9.19834432e+01
  1.04035127e+03]
E1 = -19.024269584194908  E_coul = 4.514727338627547
cycle= 2 E= -14.5095422455674  delta_E= -8.6e-06  |g|= 0.000609  |ddm|= 0.00337
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000677955
diis-c [-2.14875118e-07 -3.18276545e-02  1.03182765e+00]
  HOMO = -0.300415341435306  LUMO = 8.41918894812409
  mo_energy =
[-4.69700539e+00 -3.00415341e-01  8.41918895e+00  9.19829153e+01
  1.04035046e+03]
E1 = -19.0242463800941  E_coul = 4.514704115478731
cycle= 3 E= -14.5095422646154  delta_E= -1.9e-08  |g|= 1.31e-05  |ddm|= 0.000155
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.83672e-05
diis-c [-9.26325073e-12  9.95007505e-04 -4.06258720e-02  1.03963086e+00]
  HOMO = -0.300415673935182  LUMO = 8.41919337974248
  mo_energy =
[-4.69700345e+00 -3.00415674e-01  8.41919338e+00  9.19829397e+01
  1.04035050e+03]
E1 = -19.02424652439618  E_coul = 4.514704259772353
cycle= 4 E= -14.5095422646238  delta_E= -8.46e-12  |g|= 9.99e-08  |ddm|= 2.85e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02424652439618  E_coul = 4.514704259772353
  HOMO = -0.300415672037621  LUMO = 8.41919348318278
  mo_energy =
[-4.69700333e+00 -3.00415672e-01  8.41919348e+00  9.19829401e+01
  1.04035050e+03]
E1 = -19.024246532723478  E_coul = 4.514704268099648
Extra cycle  E= -14.5095422646238  delta_E= -1.78e-15  |g|= 4.27e-09  |ddm|= 1.28e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909795e+02 6.58553342e+01 1.01573280e+01 2.08265693e+00
 1.03925747e-01]
E = -14.509542264623828
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909795238        1
[INPUT] 0    0    [1    /1   ]  65.8553341526        1
[INPUT] 0    0    [1    /1   ]  10.157328019         1
[INPUT] 0    0    [1    /1   ]  2.08265692987        1
[INPUT] 0    0    [1    /1   ]  0.103925746651       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9097952375798, 1.0]], [0, [65.85533415260365, 1.0]], [0, [10.157328019012848, 1.0]], [0, [2.08265692987333, 1.0]], [0, [0.10392574665061663, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90979524]
bas 1, expnt(s) = [65.85533415]
bas 2, expnt(s) = [10.15732802]
bas 3, expnt(s) = [2.08265693]
bas 4, expnt(s) = [0.10392575]
CPU time:        25.79
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909795e+02 3.28948913e+02 6.58553342e+01 5.84061047e+01
 1.01573280e+01 1.43747279e+01 2.08265693e+00 4.38004252e+00
 1.03925747e-01 4.62442126e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.98463444867802
cond(S) = 10.27980740356018
E1 = -18.993131668872696  E_coul = 4.510651362845192
init E= -14.4824803060275
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303338741154831  LUMO = 8.41336813616759
  mo_energy =
[-4.69601961e+00 -3.03338741e-01  8.41336814e+00  9.19855604e+01
  1.04036362e+03]
E1 = -19.02509413988768  E_coul = 4.515560494037954
cycle= 1 E= -14.5095336458497  delta_E= -0.0271  |g|= 0.0149  |ddm|= 0.0806
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0160451
diis-c [-2.57446106e-04  1.00000000e+00]
  HOMO = -0.300385560946184  LUMO = 8.41937949411374
  mo_energy =
[-4.69660513e+00 -3.00385561e-01  8.41937949e+00  9.19834432e+01
  1.04035127e+03]
E1 = -19.024269584194908  E_coul = 4.514727338627547
cycle= 2 E= -14.5095422455674  delta_E= -8.6e-06  |g|= 0.000609  |ddm|= 0.00337
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000677955
diis-c [-2.14875118e-07 -3.18276545e-02  1.03182765e+00]
  HOMO = -0.300415341435306  LUMO = 8.41918894812409
  mo_energy =
[-4.69700539e+00 -3.00415341e-01  8.41918895e+00  9.19829153e+01
  1.04035046e+03]
E1 = -19.0242463800941  E_coul = 4.514704115478731
cycle= 3 E= -14.5095422646154  delta_E= -1.9e-08  |g|= 1.31e-05  |ddm|= 0.000155
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.83672e-05
diis-c [-9.26325073e-12  9.95007505e-04 -4.06258720e-02  1.03963086e+00]
  HOMO = -0.300415673935182  LUMO = 8.41919337974248
  mo_energy =
[-4.69700345e+00 -3.00415674e-01  8.41919338e+00  9.19829397e+01
  1.04035050e+03]
E1 = -19.02424652439618  E_coul = 4.514704259772353
cycle= 4 E= -14.5095422646238  delta_E= -8.46e-12  |g|= 9.99e-08  |ddm|= 2.85e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02424652439618  E_coul = 4.514704259772353
  HOMO = -0.300415672037621  LUMO = 8.41919348318278
  mo_energy =
[-4.69700333e+00 -3.00415672e-01  8.41919348e+00  9.19829401e+01
  1.04035050e+03]
E1 = -19.024246532723478  E_coul = 4.514704268099648
Extra cycle  E= -14.5095422646238  delta_E= -1.78e-15  |g|= 4.27e-09  |ddm|= 1.28e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.27980740356018
E1 = -19.024246532723478  E_coul = 4.514704268099648
init E= -14.5095422646238
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300415671984828  LUMO = 8.41919348702626
  mo_energy =
[-4.69700333e+00 -3.00415672e-01  8.41919349e+00  9.19829401e+01
  1.04035050e+03]
E1 = -19.024246533020904  E_coul = 4.51470426839708
cycle= 1 E= -14.5095422646238  delta_E= 3.55e-15  |g|= 1.92e-10  |ddm|= 5.27e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.024246533020904  E_coul = 4.51470426839708
  HOMO = -0.300415671984176  LUMO = 8.41919348717403
  mo_energy =
[-4.69700333e+00 -3.00415672e-01  8.41919349e+00  9.19829401e+01
  1.04035050e+03]
E1 = -19.024246533031818  E_coul = 4.514704268407993
Extra cycle  E= -14.5095422646238  delta_E=    0  |g|= 9.09e-12  |ddm|= 2.53e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909795e+02 6.58553342e+01 1.01573280e+01 2.08265693e+00
 1.03925747e-01]
grad_E = [ 1.09908674e-05  9.09854448e-04  8.16157102e-04 -3.83504116e-03
 -8.81477072e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909608531        1
[INPUT] 0    0    [1    /1   ]  65.8364814286        1
[INPUT] 0    0    [1    /1   ]  10.1755549134        1
[INPUT] 0    0    [1    /1   ]  2.09081764266        1
[INPUT] 0    0    [1    /1   ]  0.104111015308       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9096085308805, 1.0]], [0, [65.83648142860902, 1.0]], [0, [10.175554913415866, 1.0]], [0, [2.090817642656365, 1.0]], [0, [0.10411101530786479, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90960853]
bas 1, expnt(s) = [65.83648143]
bas 2, expnt(s) = [10.17555491]
bas 3, expnt(s) = [2.09081764]
bas 4, expnt(s) = [0.10411102]
CPU time:        27.75
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909609e+02 3.28948843e+02 6.58364814e+01 5.83935641e+01
 1.01755549e+01 1.43940697e+01 2.09081764e+00 4.39290834e+00
 1.04111015e-01 4.63060286e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845936268211757
cond(S) = 10.312826333092296
E1 = -18.994625421085633  E_coul = 4.512219656404504
init E= -14.4824057646811
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303237145954848  LUMO = 8.4508511804992
  mo_energy =
[-4.69535065e+00 -3.03237146e-01  8.45085118e+00  9.20543752e+01
  1.04038044e+03]
E1 = -19.028482356742447  E_coul = 4.518927361259202
cycle= 1 E= -14.5095549954832  delta_E= -0.0271  |g|= 0.0152  |ddm|= 0.0781
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0165909
diis-c [-2.75259607e-04  1.00000000e+00]
  HOMO = -0.300221496398089  LUMO = 8.45759923818919
  mo_energy =
[-4.69509634e+00 -3.00221496e-01  8.45759924e+00  9.20545285e+01
  1.04037080e+03]
E1 = -19.027707753138557  E_coul = 4.518144362536137
cycle= 2 E= -14.5095633906024  delta_E= -8.4e-06  |g|= 0.000612  |ddm|= 0.00329
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000680352
diis-c [-2.13984036e-07 -3.10148988e-02  1.03101490e+00]
  HOMO = -0.300250392991919  LUMO = 8.4574284516832
  mo_energy =
[-4.69547128e+00 -3.00250393e-01  8.45742845e+00  9.20540691e+01
  1.04037008e+03]
E1 = -19.027686496695118  E_coul = 4.518123087439159
cycle= 3 E= -14.509563409256  delta_E= -1.87e-08  |g|= 1.34e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.87025e-05
diis-c [-9.18615730e-12  1.00903202e-03 -4.16048926e-02  1.04059586e+00]
  HOMO = -0.300250739545743  LUMO = 8.45743287182907
  mo_energy =
[-4.69546946e+00 -3.00250740e-01  8.45743287e+00  9.20540935e+01
  1.04037012e+03]
E1 = -19.027686637527285  E_coul = 4.5181232282624615
cycle= 4 E= -14.5095634092648  delta_E= -8.87e-12  |g|= 9.52e-08  |ddm|= 2.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.027686637527285  E_coul = 4.5181232282624615
  HOMO = -0.300250737968288  LUMO = 8.45743296727485
  mo_energy =
[-4.69546935e+00 -3.00250738e-01  8.45743297e+00  9.20540939e+01
  1.04037012e+03]
E1 = -19.027686645155043  E_coul = 4.518123235890204
Extra cycle  E= -14.5095634092648  delta_E= -1.42e-14  |g|= 4.12e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909609e+02 6.58364814e+01 1.01755549e+01 2.09081764e+00
 1.04111015e-01]
E = -14.509563409264839
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909608531        1
[INPUT] 0    0    [1    /1   ]  65.8364814286        1
[INPUT] 0    0    [1    /1   ]  10.1755549134        1
[INPUT] 0    0    [1    /1   ]  2.09081764266        1
[INPUT] 0    0    [1    /1   ]  0.104111015308       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9096085308805, 1.0]], [0, [65.83648142860902, 1.0]], [0, [10.175554913415866, 1.0]], [0, [2.090817642656365, 1.0]], [0, [0.10411101530786479, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90960853]
bas 1, expnt(s) = [65.83648143]
bas 2, expnt(s) = [10.17555491]
bas 3, expnt(s) = [2.09081764]
bas 4, expnt(s) = [0.10411102]
CPU time:        28.00
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909609e+02 3.28948843e+02 6.58364814e+01 5.83935641e+01
 1.01755549e+01 1.43940697e+01 2.09081764e+00 4.39290834e+00
 1.04111015e-01 4.63060286e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845936268211757
cond(S) = 10.312826333092296
E1 = -18.994625421085633  E_coul = 4.512219656404504
init E= -14.4824057646811
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303237145954848  LUMO = 8.4508511804992
  mo_energy =
[-4.69535065e+00 -3.03237146e-01  8.45085118e+00  9.20543752e+01
  1.04038044e+03]
E1 = -19.028482356742447  E_coul = 4.518927361259202
cycle= 1 E= -14.5095549954832  delta_E= -0.0271  |g|= 0.0152  |ddm|= 0.0781
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0165909
diis-c [-2.75259607e-04  1.00000000e+00]
  HOMO = -0.300221496398089  LUMO = 8.45759923818919
  mo_energy =
[-4.69509634e+00 -3.00221496e-01  8.45759924e+00  9.20545285e+01
  1.04037080e+03]
E1 = -19.027707753138557  E_coul = 4.518144362536137
cycle= 2 E= -14.5095633906024  delta_E= -8.4e-06  |g|= 0.000612  |ddm|= 0.00329
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000680352
diis-c [-2.13984036e-07 -3.10148988e-02  1.03101490e+00]
  HOMO = -0.300250392991919  LUMO = 8.4574284516832
  mo_energy =
[-4.69547128e+00 -3.00250393e-01  8.45742845e+00  9.20540691e+01
  1.04037008e+03]
E1 = -19.027686496695118  E_coul = 4.518123087439159
cycle= 3 E= -14.509563409256  delta_E= -1.87e-08  |g|= 1.34e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.87025e-05
diis-c [-9.18615730e-12  1.00903202e-03 -4.16048926e-02  1.04059586e+00]
  HOMO = -0.300250739545743  LUMO = 8.45743287182907
  mo_energy =
[-4.69546946e+00 -3.00250740e-01  8.45743287e+00  9.20540935e+01
  1.04037012e+03]
E1 = -19.027686637527285  E_coul = 4.5181232282624615
cycle= 4 E= -14.5095634092648  delta_E= -8.87e-12  |g|= 9.52e-08  |ddm|= 2.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.027686637527285  E_coul = 4.5181232282624615
  HOMO = -0.300250737968288  LUMO = 8.45743296727485
  mo_energy =
[-4.69546935e+00 -3.00250738e-01  8.45743297e+00  9.20540939e+01
  1.04037012e+03]
E1 = -19.027686645155043  E_coul = 4.518123235890204
Extra cycle  E= -14.5095634092648  delta_E= -1.42e-14  |g|= 4.12e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.312826333092296
E1 = -19.027686645155043  E_coul = 4.518123235890204
init E= -14.5095634092648
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300250737926444  LUMO = 8.45743297085627
  mo_energy =
[-4.69546935e+00 -3.00250738e-01  8.45743297e+00  9.20540939e+01
  1.04037012e+03]
E1 = -19.0276866454293  E_coul = 4.5181232361644605
cycle= 1 E= -14.5095634092648  delta_E=    0  |g|= 1.87e-10  |ddm|= 5.12e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.0276866454293  E_coul = 4.5181232361644605
  HOMO = -0.300250737926158  LUMO = 8.45743297099543
  mo_energy =
[-4.69546935e+00 -3.00250738e-01  8.45743297e+00  9.20540939e+01
  1.04037012e+03]
E1 = -19.027686645439434  E_coul = 4.518123236174603
Extra cycle  E= -14.5095634092648  delta_E= 7.11e-15  |g|= 8.94e-12  |ddm|= 2.52e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909609e+02 6.58364814e+01 1.01755549e+01 2.09081764e+00
 1.04111015e-01]
grad_E = [ 1.10597418e-05  9.05306937e-04  4.67348108e-04  1.91173200e-04
 -6.20265323e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909560722        1
[INPUT] 0    0    [1    /1   ]  65.8326583857        1
[INPUT] 0    0    [1    /1   ]  10.1726948058        1
[INPUT] 0    0    [1    /1   ]  2.09223675142        1
[INPUT] 0    0    [1    /1   ]  0.104157072868       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9095607219463, 1.0]], [0, [65.8326583856608, 1.0]], [0, [10.172694805815718, 1.0]], [0, [2.0922367514173534, 1.0]], [0, [0.10415707286793548, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90956072]
bas 1, expnt(s) = [65.83265839]
bas 2, expnt(s) = [10.17269481]
bas 3, expnt(s) = [2.09223675]
bas 4, expnt(s) = [0.10415707]
CPU time:        29.91
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909561e+02 3.28948825e+02 6.58326584e+01 5.83910209e+01
 1.01726948e+01 1.43910352e+01 2.09223675e+00 4.39514436e+00
 1.04157073e-01 4.63213917e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984586983409355
cond(S) = 10.319835798793166
E1 = -18.994977434106936  E_coul = 4.51260830466789
init E= -14.482369129439
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303209258607122  LUMO = 8.45372591241014
  mo_energy =
[-4.69518615e+00 -3.03209259e-01  8.45372591e+00  9.20465042e+01
  1.04036351e+03]
E1 = -19.02932768244433  E_coul = 4.519769380642939
cycle= 1 E= -14.5095583018014  delta_E= -0.0272  |g|= 0.0154  |ddm|= 0.0775
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0168334
diis-c [-2.83364873e-04  1.00000000e+00]
  HOMO = -0.300180766903173  LUMO = 8.46066535361687
  mo_energy =
[-4.69471770e+00 -3.00180767e-01  8.46066535e+00  9.20472353e+01
  1.04035449e+03]
E1 = -19.028567513729097  E_coul = 4.519000831440257
cycle= 2 E= -14.5095666822888  delta_E= -8.38e-06  |g|= 0.000615  |ddm|= 0.00328
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000683673
diis-c [-2.15345007e-07 -3.07540515e-02  1.03075405e+00]
  HOMO = -0.300209472830666  LUMO = 8.46050083022691
  mo_energy =
[-4.69508529e+00 -3.00209473e-01  8.46050083e+00  9.20467979e+01
  1.04035379e+03]
E1 = -19.028546825674805  E_coul = 4.518980124715812
cycle= 3 E= -14.509566700959  delta_E= -1.87e-08  |g|= 1.36e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.88995e-05
diis-c [-9.46071757e-12  1.01485049e-03 -4.19533805e-02  1.04093853e+00]
  HOMO = -0.300209826003695  LUMO = 8.46050526433609
  mo_energy =
[-4.69508350e+00 -3.00209826e-01  8.46050526e+00  9.20468225e+01
  1.04035383e+03]
E1 = -19.028546965750934  E_coul = 4.518980264782839
cycle= 4 E= -14.5095667009681  delta_E= -9.1e-12  |g|= 9.45e-08  |ddm|= 2.96e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028546965750934  E_coul = 4.518980264782839
  HOMO = -0.300209824550865  LUMO = 8.46050535741041
  mo_energy =
[-4.69508339e+00 -3.00209825e-01  8.46050536e+00  9.20468229e+01
  1.04035384e+03]
E1 = -19.028546973171192  E_coul = 4.5189802722031045
Extra cycle  E= -14.5095667009681  delta_E= 7.11e-15  |g|= 4.11e-09  |ddm|= 1.18e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909561e+02 6.58326584e+01 1.01726948e+01 2.09223675e+00
 1.04157073e-01]
E = -14.509566700968087
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909560722        1
[INPUT] 0    0    [1    /1   ]  65.8326583857        1
[INPUT] 0    0    [1    /1   ]  10.1726948058        1
[INPUT] 0    0    [1    /1   ]  2.09223675142        1
[INPUT] 0    0    [1    /1   ]  0.104157072868       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9095607219463, 1.0]], [0, [65.8326583856608, 1.0]], [0, [10.172694805815718, 1.0]], [0, [2.0922367514173534, 1.0]], [0, [0.10415707286793548, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90956072]
bas 1, expnt(s) = [65.83265839]
bas 2, expnt(s) = [10.17269481]
bas 3, expnt(s) = [2.09223675]
bas 4, expnt(s) = [0.10415707]
CPU time:        30.19
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909561e+02 3.28948825e+02 6.58326584e+01 5.83910209e+01
 1.01726948e+01 1.43910352e+01 2.09223675e+00 4.39514436e+00
 1.04157073e-01 4.63213917e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984586983409355
cond(S) = 10.319835798793166
E1 = -18.994977434106936  E_coul = 4.51260830466789
init E= -14.482369129439
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303209258607122  LUMO = 8.45372591241014
  mo_energy =
[-4.69518615e+00 -3.03209259e-01  8.45372591e+00  9.20465042e+01
  1.04036351e+03]
E1 = -19.02932768244433  E_coul = 4.519769380642939
cycle= 1 E= -14.5095583018014  delta_E= -0.0272  |g|= 0.0154  |ddm|= 0.0775
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0168334
diis-c [-2.83364873e-04  1.00000000e+00]
  HOMO = -0.300180766903173  LUMO = 8.46066535361687
  mo_energy =
[-4.69471770e+00 -3.00180767e-01  8.46066535e+00  9.20472353e+01
  1.04035449e+03]
E1 = -19.028567513729097  E_coul = 4.519000831440257
cycle= 2 E= -14.5095666822888  delta_E= -8.38e-06  |g|= 0.000615  |ddm|= 0.00328
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000683673
diis-c [-2.15345007e-07 -3.07540515e-02  1.03075405e+00]
  HOMO = -0.300209472830666  LUMO = 8.46050083022691
  mo_energy =
[-4.69508529e+00 -3.00209473e-01  8.46050083e+00  9.20467979e+01
  1.04035379e+03]
E1 = -19.028546825674805  E_coul = 4.518980124715812
cycle= 3 E= -14.509566700959  delta_E= -1.87e-08  |g|= 1.36e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.88995e-05
diis-c [-9.46071757e-12  1.01485049e-03 -4.19533805e-02  1.04093853e+00]
  HOMO = -0.300209826003695  LUMO = 8.46050526433609
  mo_energy =
[-4.69508350e+00 -3.00209826e-01  8.46050526e+00  9.20468225e+01
  1.04035383e+03]
E1 = -19.028546965750934  E_coul = 4.518980264782839
cycle= 4 E= -14.5095667009681  delta_E= -9.1e-12  |g|= 9.45e-08  |ddm|= 2.96e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028546965750934  E_coul = 4.518980264782839
  HOMO = -0.300209824550865  LUMO = 8.46050535741041
  mo_energy =
[-4.69508339e+00 -3.00209825e-01  8.46050536e+00  9.20468229e+01
  1.04035384e+03]
E1 = -19.028546973171192  E_coul = 4.5189802722031045
Extra cycle  E= -14.5095667009681  delta_E= 7.11e-15  |g|= 4.11e-09  |ddm|= 1.18e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.319835798793166
E1 = -19.028546973171192  E_coul = 4.5189802722031045
init E= -14.5095667009681
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300209824513546  LUMO = 8.46050536092207
  mo_energy =
[-4.69508339e+00 -3.00209825e-01  8.46050536e+00  9.20468229e+01
  1.04035384e+03]
E1 = -19.02854697343901  E_coul = 4.518980272470911
cycle= 1 E= -14.5095667009681  delta_E= -1.24e-14  |g|= 1.88e-10  |ddm|= 5.14e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02854697343901  E_coul = 4.518980272470911
  HOMO = -0.300209824513428  LUMO = 8.46050536105938
  mo_energy =
[-4.69508339e+00 -3.00209825e-01  8.46050536e+00  9.20468229e+01
  1.04035384e+03]
E1 = -19.028546973448922  E_coul = 4.518980272480832
Extra cycle  E= -14.5095667009681  delta_E= 8.88e-15  |g|= 9.03e-12  |ddm|= 2.56e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909561e+02 6.58326584e+01 1.01726948e+01 2.09223675e+00
 1.04157073e-01]
grad_E = [1.10272201e-05 9.12207597e-04 2.56181623e-04 1.49921802e-03
 1.39797599e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909498016        1
[INPUT] 0    0    [1    /1   ]  65.8278893021        1
[INPUT] 0    0    [1    /1   ]  10.167211528         1
[INPUT] 0    0    [1    /1   ]  2.09288034154        1
[INPUT] 0    0    [1    /1   ]  0.104187733617       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9094980164133, 1.0]], [0, [65.82788930214905, 1.0]], [0, [10.167211527991833, 1.0]], [0, [2.0928803415416892, 1.0]], [0, [0.1041877336168394, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90949802]
bas 1, expnt(s) = [65.8278893]
bas 2, expnt(s) = [10.16721153]
bas 3, expnt(s) = [2.09288034]
bas 4, expnt(s) = [0.10418773]
CPU time:        32.24
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909498e+02 3.28948802e+02 6.58278893e+01 5.83878484e+01
 1.01672115e+01 1.43852170e+01 2.09288034e+00 4.39615831e+00
 1.04187734e-01 4.63316181e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984584591920768
cond(S) = 10.324132383808845
E1 = -18.995205935038793  E_coul = 4.512866255866931
init E= -14.4823396791719
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303189425192567  LUMO = 8.45250854504688
  mo_energy =
[-4.69507893e+00 -3.03189425e-01  8.45250855e+00  9.20264041e+01
  1.04033349e+03]
E1 = -19.029891817088934  E_coul = 4.520329640941903
cycle= 1 E= -14.509562176147  delta_E= -0.0272  |g|= 0.0156  |ddm|= 0.0771
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0170439
diis-c [-2.90495433e-04  1.00000000e+00]
  HOMO = -0.300153798974904  LUMO = 8.45957779407782
  mo_energy =
[-4.69446648e+00 -3.00153799e-01  8.45957779e+00  9.20275237e+01
  1.04032485e+03]
E1 = -19.029142159903863  E_coul = 4.5195715961767355
cycle= 2 E= -14.5095705637271  delta_E= -8.39e-06  |g|= 0.000619  |ddm|= 0.00327
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000687157
diis-c [-2.17007235e-07 -3.05551969e-02  1.03055520e+00]
  HOMO = -0.300182392033959  LUMO = 8.45941804513879
  mo_energy =
[-4.69482869e+00 -3.00182392e-01  8.45941805e+00  9.20271033e+01
  1.04032418e+03]
E1 = -19.029121888145035  E_coul = 4.519551305683358
cycle= 3 E= -14.5095705824617  delta_E= -1.87e-08  |g|= 1.38e-05  |ddm|= 0.000151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.90829e-05
diis-c [-9.81004044e-12  1.01954682e-03 -4.22266713e-02  1.04120712e+00]
  HOMO = -0.30018275106434  LUMO = 8.45942249627611
  mo_energy =
[-4.69482692e+00 -3.00182751e-01  8.45942250e+00  9.20271280e+01
  1.04032422e+03]
E1 = -19.029122027766245  E_coul = 4.519551445295231
cycle= 4 E= -14.509570582471  delta_E= -9.34e-12  |g|= 9.42e-08  |ddm|= 3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.029122027766245  E_coul = 4.519551445295231
  HOMO = -0.300182749714612  LUMO = 8.45942258763656
  mo_energy =
[-4.69482682e+00 -3.00182750e-01  8.45942259e+00  9.20271284e+01
  1.04032422e+03]
E1 = -19.029122035035567  E_coul = 4.5195514525645555
Extra cycle  E= -14.509570582471  delta_E= 3.55e-15  |g|= 4.12e-09  |ddm|= 1.17e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909498e+02 6.58278893e+01 1.01672115e+01 2.09288034e+00
 1.04187734e-01]
E = -14.50957058247101
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909498016        1
[INPUT] 0    0    [1    /1   ]  65.8278893021        1
[INPUT] 0    0    [1    /1   ]  10.167211528         1
[INPUT] 0    0    [1    /1   ]  2.09288034154        1
[INPUT] 0    0    [1    /1   ]  0.104187733617       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9094980164133, 1.0]], [0, [65.82788930214905, 1.0]], [0, [10.167211527991833, 1.0]], [0, [2.0928803415416892, 1.0]], [0, [0.1041877336168394, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90949802]
bas 1, expnt(s) = [65.8278893]
bas 2, expnt(s) = [10.16721153]
bas 3, expnt(s) = [2.09288034]
bas 4, expnt(s) = [0.10418773]
CPU time:        32.53
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909498e+02 3.28948802e+02 6.58278893e+01 5.83878484e+01
 1.01672115e+01 1.43852170e+01 2.09288034e+00 4.39615831e+00
 1.04187734e-01 4.63316181e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984584591920768
cond(S) = 10.324132383808845
E1 = -18.995205935038793  E_coul = 4.512866255866931
init E= -14.4823396791719
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303189425192567  LUMO = 8.45250854504688
  mo_energy =
[-4.69507893e+00 -3.03189425e-01  8.45250855e+00  9.20264041e+01
  1.04033349e+03]
E1 = -19.029891817088934  E_coul = 4.520329640941903
cycle= 1 E= -14.509562176147  delta_E= -0.0272  |g|= 0.0156  |ddm|= 0.0771
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0170439
diis-c [-2.90495433e-04  1.00000000e+00]
  HOMO = -0.300153798974904  LUMO = 8.45957779407782
  mo_energy =
[-4.69446648e+00 -3.00153799e-01  8.45957779e+00  9.20275237e+01
  1.04032485e+03]
E1 = -19.029142159903863  E_coul = 4.5195715961767355
cycle= 2 E= -14.5095705637271  delta_E= -8.39e-06  |g|= 0.000619  |ddm|= 0.00327
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000687157
diis-c [-2.17007235e-07 -3.05551969e-02  1.03055520e+00]
  HOMO = -0.300182392033959  LUMO = 8.45941804513879
  mo_energy =
[-4.69482869e+00 -3.00182392e-01  8.45941805e+00  9.20271033e+01
  1.04032418e+03]
E1 = -19.029121888145035  E_coul = 4.519551305683358
cycle= 3 E= -14.5095705824617  delta_E= -1.87e-08  |g|= 1.38e-05  |ddm|= 0.000151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.90829e-05
diis-c [-9.81004044e-12  1.01954682e-03 -4.22266713e-02  1.04120712e+00]
  HOMO = -0.30018275106434  LUMO = 8.45942249627611
  mo_energy =
[-4.69482692e+00 -3.00182751e-01  8.45942250e+00  9.20271280e+01
  1.04032422e+03]
E1 = -19.029122027766245  E_coul = 4.519551445295231
cycle= 4 E= -14.509570582471  delta_E= -9.34e-12  |g|= 9.42e-08  |ddm|= 3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.029122027766245  E_coul = 4.519551445295231
  HOMO = -0.300182749714612  LUMO = 8.45942258763656
  mo_energy =
[-4.69482682e+00 -3.00182750e-01  8.45942259e+00  9.20271284e+01
  1.04032422e+03]
E1 = -19.029122035035567  E_coul = 4.5195514525645555
Extra cycle  E= -14.509570582471  delta_E= 3.55e-15  |g|= 4.12e-09  |ddm|= 1.17e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.324132383808845
E1 = -19.029122035035567  E_coul = 4.5195514525645555
init E= -14.509570582471
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300182749681136  LUMO = 8.45942259110098
  mo_energy =
[-4.69482682e+00 -3.00182750e-01  8.45942259e+00  9.20271284e+01
  1.04032422e+03]
E1 = -19.02912203529884  E_coul = 4.519551452827825
cycle= 1 E= -14.509570582471  delta_E= -5.33e-15  |g|= 1.9e-10  |ddm|= 5.2e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02912203529884  E_coul = 4.519551452827825
  HOMO = -0.300182749681172  LUMO = 8.4594225912371
  mo_energy =
[-4.69482682e+00 -3.00182750e-01  8.45942259e+00  9.20271284e+01
  1.04032422e+03]
E1 = -19.029122035308653  E_coul = 4.519551452837638
Extra cycle  E= -14.509570582471  delta_E= 1.78e-15  |g|= 9.12e-12  |ddm|= 2.61e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909498e+02 6.58278893e+01 1.01672115e+01 2.09288034e+00
 1.04187734e-01]
grad_E = [1.09866897e-05 9.20373284e-04 5.89140225e-05 2.50822052e-03
 2.73407551e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909293885        1
[INPUT] 0    0    [1    /1   ]  65.8115351192        1
[INPUT] 0    0    [1    /1   ]  10.1557580517        1
[INPUT] 0    0    [1    /1   ]  2.09369581347        1
[INPUT] 0    0    [1    /1   ]  0.104237351956       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9092938854054, 1.0]], [0, [65.81153511919307, 1.0]], [0, [10.155758051730476, 1.0]], [0, [2.0936958134685177, 1.0]], [0, [0.10423735195623067, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90929389]
bas 1, expnt(s) = [65.81153512]
bas 2, expnt(s) = [10.15575805]
bas 3, expnt(s) = [2.09369581]
bas 4, expnt(s) = [0.10423735]
CPU time:        34.58
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909294e+02 3.28948725e+02 6.58115351e+01 5.83769687e+01
 1.01557581e+01 1.43730615e+01 2.09369581e+00 4.39744294e+00
 1.04237352e-01 4.63481658e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845820408285606
cond(S) = 10.331415221715053
E1 = -18.995572073577566  E_coul = 4.513282358070879
init E= -14.4822897155067
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303156428808764  LUMO = 8.44827594306532
  mo_energy =
[-4.69490913e+00 -3.03156429e-01  8.44827594e+00  9.19758298e+01
  1.04024874e+03]
E1 = -19.030804047628674  E_coul = 4.5212309830251245
cycle= 1 E= -14.5095730646036  delta_E= -0.0273  |g|= 0.0158  |ddm|= 0.0766
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.017416
diis-c [-3.03315393e-04  1.00000000e+00]
  HOMO = -0.300110313354838  LUMO = 8.4555545886852
  mo_energy =
[-4.69406475e+00 -3.00110313e-01  8.45555459e+00  9.19775764e+01
  1.04024069e+03]
E1 = -19.030071830316132  E_coul = 4.520490353667145
cycle= 2 E= -14.509581476649  delta_E= -8.41e-06  |g|= 0.000626  |ddm|= 0.00326
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000693742
diis-c [-2.20215420e-07 -3.02356153e-02  1.03023562e+00]
  HOMO = -0.300138735880106  LUMO = 8.4554028761638
  mo_energy =
[-4.69441804e+00 -3.00138736e-01  8.45540288e+00  9.19771846e+01
  1.04024004e+03]
E1 = -19.030052250063633  E_coul = 4.5204707545380245
cycle= 3 E= -14.5095814955256  delta_E= -1.89e-08  |g|= 1.41e-05  |ddm|= 0.000151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.94041e-05
diis-c [-1.05723680e-11  1.02697534e-03 -4.26611094e-02  1.04163413e+00]
  HOMO = -0.300139104806544  LUMO = 8.45540736476664
  mo_energy =
[-4.69441629e+00 -3.00139105e-01  8.45540736e+00  9.19772096e+01
  1.04024008e+03]
E1 = -19.03005238953637  E_coul = 4.52047089400105
cycle= 4 E= -14.5095814955353  delta_E= -9.71e-12  |g|= 9.42e-08  |ddm|= 3.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03005238953637  E_coul = 4.52047089400105
  HOMO = -0.300139103634582  LUMO = 8.45540745341954
  mo_energy =
[-4.69441620e+00 -3.00139104e-01  8.45540745e+00  9.19772100e+01
  1.04024008e+03]
E1 = -19.030052396563917  E_coul = 4.520470901028587
Extra cycle  E= -14.5095814955353  delta_E= -1.07e-14  |g|= 4.17e-09  |ddm|= 1.17e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909294e+02 6.58115351e+01 1.01557581e+01 2.09369581e+00
 1.04237352e-01]
E = -14.509581495535329
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909293885        1
[INPUT] 0    0    [1    /1   ]  65.8115351192        1
[INPUT] 0    0    [1    /1   ]  10.1557580517        1
[INPUT] 0    0    [1    /1   ]  2.09369581347        1
[INPUT] 0    0    [1    /1   ]  0.104237351956       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9092938854054, 1.0]], [0, [65.81153511919307, 1.0]], [0, [10.155758051730476, 1.0]], [0, [2.0936958134685177, 1.0]], [0, [0.10423735195623067, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90929389]
bas 1, expnt(s) = [65.81153512]
bas 2, expnt(s) = [10.15575805]
bas 3, expnt(s) = [2.09369581]
bas 4, expnt(s) = [0.10423735]
CPU time:        34.88
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909294e+02 3.28948725e+02 6.58115351e+01 5.83769687e+01
 1.01557581e+01 1.43730615e+01 2.09369581e+00 4.39744294e+00
 1.04237352e-01 4.63481658e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845820408285606
cond(S) = 10.331415221715053
E1 = -18.995572073577566  E_coul = 4.513282358070879
init E= -14.4822897155067
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303156428808764  LUMO = 8.44827594306532
  mo_energy =
[-4.69490913e+00 -3.03156429e-01  8.44827594e+00  9.19758298e+01
  1.04024874e+03]
E1 = -19.030804047628674  E_coul = 4.5212309830251245
cycle= 1 E= -14.5095730646036  delta_E= -0.0273  |g|= 0.0158  |ddm|= 0.0766
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.017416
diis-c [-3.03315393e-04  1.00000000e+00]
  HOMO = -0.300110313354838  LUMO = 8.4555545886852
  mo_energy =
[-4.69406475e+00 -3.00110313e-01  8.45555459e+00  9.19775764e+01
  1.04024069e+03]
E1 = -19.030071830316132  E_coul = 4.520490353667145
cycle= 2 E= -14.509581476649  delta_E= -8.41e-06  |g|= 0.000626  |ddm|= 0.00326
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000693742
diis-c [-2.20215420e-07 -3.02356153e-02  1.03023562e+00]
  HOMO = -0.300138735880106  LUMO = 8.4554028761638
  mo_energy =
[-4.69441804e+00 -3.00138736e-01  8.45540288e+00  9.19771846e+01
  1.04024004e+03]
E1 = -19.030052250063633  E_coul = 4.5204707545380245
cycle= 3 E= -14.5095814955256  delta_E= -1.89e-08  |g|= 1.41e-05  |ddm|= 0.000151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.94041e-05
diis-c [-1.05723680e-11  1.02697534e-03 -4.26611094e-02  1.04163413e+00]
  HOMO = -0.300139104806544  LUMO = 8.45540736476664
  mo_energy =
[-4.69441629e+00 -3.00139105e-01  8.45540736e+00  9.19772096e+01
  1.04024008e+03]
E1 = -19.03005238953637  E_coul = 4.52047089400105
cycle= 4 E= -14.5095814955353  delta_E= -9.71e-12  |g|= 9.42e-08  |ddm|= 3.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03005238953637  E_coul = 4.52047089400105
  HOMO = -0.300139103634582  LUMO = 8.45540745341954
  mo_energy =
[-4.69441620e+00 -3.00139104e-01  8.45540745e+00  9.19772100e+01
  1.04024008e+03]
E1 = -19.030052396563917  E_coul = 4.520470901028587
Extra cycle  E= -14.5095814955353  delta_E= -1.07e-14  |g|= 4.17e-09  |ddm|= 1.17e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.331415221715053
E1 = -19.030052396563917  E_coul = 4.520470901028587
init E= -14.5095814955353
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300139103607859  LUMO = 8.45540745681262
  mo_energy =
[-4.69441619e+00 -3.00139104e-01  8.45540746e+00  9.19772100e+01
  1.04024008e+03]
E1 = -19.030052396820043  E_coul = 4.520470901284718
cycle= 1 E= -14.5095814955353  delta_E= 3.55e-15  |g|= 1.94e-10  |ddm|= 5.32e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.030052396820043  E_coul = 4.520470901284718
  HOMO = -0.300139103608171  LUMO = 8.45540745694717
  mo_energy =
[-4.69441619e+00 -3.00139104e-01  8.45540746e+00  9.19772100e+01
  1.04024008e+03]
E1 = -19.030052396829667  E_coul = 4.520470901294339
Extra cycle  E= -14.5095814955353  delta_E= -3.55e-15  |g|= 9.39e-12  |ddm|= 2.72e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909294e+02 6.58115351e+01 1.01557581e+01 2.09369581e+00
 1.04237352e-01]
grad_E = [ 1.09210637e-05  9.35352498e-04 -2.91816551e-04  4.21448717e-03
  4.89046827e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.908711809        1
[INPUT] 0    0    [1    /1   ]  65.763227336         1
[INPUT] 0    0    [1    /1   ]  10.1358827417        1
[INPUT] 0    0    [1    /1   ]  2.09492997398        1
[INPUT] 0    0    [1    /1   ]  0.10420223636        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9087118085556, 1.0]], [0, [65.76322733595532, 1.0]], [0, [10.1358827416521, 1.0]], [0, [2.0949299739838425, 1.0]], [0, [0.1042022363603714, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90871181]
bas 1, expnt(s) = [65.76322734]
bas 2, expnt(s) = [10.13588274]
bas 3, expnt(s) = [2.09492997]
bas 4, expnt(s) = [0.10420224]
CPU time:        36.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59908712e+02 3.28948508e+02 6.57632273e+01 5.83448279e+01
 1.01358827e+01 1.43519597e+01 2.09492997e+00 4.39938690e+00
 1.04202236e-01 4.63364549e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984574764883856
cond(S) = 10.344110600979336
E1 = -18.995215625918004  E_coul = 4.513140091500113
init E= -14.4820755344179
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303188163232465  LUMO = 8.43963478827702
  mo_energy =
[-4.69496029e+00 -3.03188163e-01  8.43963479e+00  9.18661067e+01
  1.04003646e+03]
E1 = -19.031256168033284  E_coul = 4.521655735405133
cycle= 1 E= -14.5096004326282  delta_E= -0.0275  |g|= 0.0164  |ddm|= 0.0764
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0180589
diis-c [-3.26122987e-04  1.00000000e+00]
  HOMO = -0.300133441975395  LUMO = 8.44719032708716
  mo_energy =
[-4.69384301e+00 -3.00133442e-01  8.44719033e+00  9.18687044e+01
  1.04002917e+03]
E1 = -19.03054742358225  E_coul = 4.520938402466936
cycle= 2 E= -14.5096090211153  delta_E= -8.59e-06  |g|= 0.000641  |ddm|= 0.00326
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000709855
diis-c [-2.28405707e-07 -2.99452271e-02  1.02994523e+00]
  HOMO = -0.300161797999057  LUMO = 8.44705072864135
  mo_energy =
[-4.69418427e+00 -3.00161798e-01  8.44705073e+00  9.18683583e+01
  1.04002858e+03]
E1 = -19.030528827021445  E_coul = 4.520919786483399
cycle= 3 E= -14.509609040538  delta_E= -1.94e-08  |g|= 1.45e-05  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.9944e-05
diis-c [-1.22069522e-11  1.03576509e-03 -4.30626686e-02  1.04202690e+00]
  HOMO = -0.300162179349591  LUMO = 8.44705534994051
  mo_energy =
[-4.69418247e+00 -3.00162179e-01  8.44705535e+00  9.18683840e+01
  1.04002862e+03]
E1 = -19.03052897257636  E_coul = 4.52091993202797
cycle= 4 E= -14.5096090405484  delta_E= -1.03e-11  |g|= 9.53e-08  |ddm|= 3.17e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03052897257636  E_coul = 4.52091993202797
  HOMO = -0.300162178442799  LUMO = 8.44705543554994
  mo_energy =
[-4.69418238e+00 -3.00162178e-01  8.44705544e+00  9.18683844e+01
  1.04002862e+03]
E1 = -19.030528979318504  E_coul = 4.520919938770097
Extra cycle  E= -14.5096090405484  delta_E= -1.6e-14  |g|= 4.29e-09  |ddm|= 1.18e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59908712e+02 6.57632273e+01 1.01358827e+01 2.09492997e+00
 1.04202236e-01]
E = -14.509609040548407
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.908711809        1
[INPUT] 0    0    [1    /1   ]  65.763227336         1
[INPUT] 0    0    [1    /1   ]  10.1358827417        1
[INPUT] 0    0    [1    /1   ]  2.09492997398        1
[INPUT] 0    0    [1    /1   ]  0.10420223636        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9087118085556, 1.0]], [0, [65.76322733595532, 1.0]], [0, [10.1358827416521, 1.0]], [0, [2.0949299739838425, 1.0]], [0, [0.1042022363603714, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90871181]
bas 1, expnt(s) = [65.76322734]
bas 2, expnt(s) = [10.13588274]
bas 3, expnt(s) = [2.09492997]
bas 4, expnt(s) = [0.10420224]
CPU time:        37.19
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59908712e+02 3.28948508e+02 6.57632273e+01 5.83448279e+01
 1.01358827e+01 1.43519597e+01 2.09492997e+00 4.39938690e+00
 1.04202236e-01 4.63364549e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984574764883856
cond(S) = 10.344110600979336
E1 = -18.995215625918004  E_coul = 4.513140091500113
init E= -14.4820755344179
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303188163232465  LUMO = 8.43963478827702
  mo_energy =
[-4.69496029e+00 -3.03188163e-01  8.43963479e+00  9.18661067e+01
  1.04003646e+03]
E1 = -19.031256168033284  E_coul = 4.521655735405133
cycle= 1 E= -14.5096004326282  delta_E= -0.0275  |g|= 0.0164  |ddm|= 0.0764
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0180589
diis-c [-3.26122987e-04  1.00000000e+00]
  HOMO = -0.300133441975395  LUMO = 8.44719032708716
  mo_energy =
[-4.69384301e+00 -3.00133442e-01  8.44719033e+00  9.18687044e+01
  1.04002917e+03]
E1 = -19.03054742358225  E_coul = 4.520938402466936
cycle= 2 E= -14.5096090211153  delta_E= -8.59e-06  |g|= 0.000641  |ddm|= 0.00326
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000709855
diis-c [-2.28405707e-07 -2.99452271e-02  1.02994523e+00]
  HOMO = -0.300161797999057  LUMO = 8.44705072864135
  mo_energy =
[-4.69418427e+00 -3.00161798e-01  8.44705073e+00  9.18683583e+01
  1.04002858e+03]
E1 = -19.030528827021445  E_coul = 4.520919786483399
cycle= 3 E= -14.509609040538  delta_E= -1.94e-08  |g|= 1.45e-05  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.9944e-05
diis-c [-1.22069522e-11  1.03576509e-03 -4.30626686e-02  1.04202690e+00]
  HOMO = -0.300162179349591  LUMO = 8.44705534994051
  mo_energy =
[-4.69418247e+00 -3.00162179e-01  8.44705535e+00  9.18683840e+01
  1.04002862e+03]
E1 = -19.03052897257636  E_coul = 4.52091993202797
cycle= 4 E= -14.5096090405484  delta_E= -1.03e-11  |g|= 9.53e-08  |ddm|= 3.17e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03052897257636  E_coul = 4.52091993202797
  HOMO = -0.300162178442799  LUMO = 8.44705543554994
  mo_energy =
[-4.69418238e+00 -3.00162178e-01  8.44705544e+00  9.18683844e+01
  1.04002862e+03]
E1 = -19.030528979318504  E_coul = 4.520919938770097
Extra cycle  E= -14.5096090405484  delta_E= -1.6e-14  |g|= 4.29e-09  |ddm|= 1.18e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.344110600979336
E1 = -19.030528979318504  E_coul = 4.520919938770097
init E= -14.5096090405484
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300162178426428  LUMO = 8.44705543887612
  mo_energy =
[-4.69418237e+00 -3.00162178e-01  8.44705544e+00  9.18683844e+01
  1.04002862e+03]
E1 = -19.03052897956691  E_coul = 4.520919939018508
cycle= 1 E= -14.5096090405484  delta_E= 5.33e-15  |g|= 2.03e-10  |ddm|= 5.63e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03052897956691  E_coul = 4.520919939018508
  HOMO = -0.300162178427179  LUMO = 8.44705543901015
  mo_energy =
[-4.69418237e+00 -3.00162178e-01  8.44705544e+00  9.18683844e+01
  1.04002862e+03]
E1 = -19.030528979576353  E_coul = 4.520919939027947
Extra cycle  E= -14.5096090405484  delta_E= -3.55e-15  |g|= 9.95e-12  |ddm|= 2.94e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59908712e+02 6.57632273e+01 1.01358827e+01 2.09492997e+00
 1.04202236e-01]
grad_E = [ 1.08471916e-05  9.58662374e-04 -8.58811930e-04  6.99323716e-03
  3.06265182e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.904285713        1
[INPUT] 0    0    [1    /1   ]  65.4013966645        1
[INPUT] 0    0    [1    /1   ]  9.94620643306        1
[INPUT] 0    0    [1    /1   ]  2.07592748485        1
[INPUT] 0    0    [1    /1   ]  0.118199122583       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9042857125638, 1.0]], [0, [65.4013966644673, 1.0]], [0, [9.946206433061208, 1.0]], [0, [2.075927484847614, 1.0]], [0, [0.11819912258284389, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90428571]
bas 1, expnt(s) = [65.40139666]
bas 2, expnt(s) = [9.94620643]
bas 3, expnt(s) = [2.07592748]
bas 4, expnt(s) = [0.11819912]
CPU time:        39.20
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59904286e+02 3.28946853e+02 6.54013967e+01 5.81039010e+01
 9.94620643e+00 1.41500549e+01 2.07592748e+00 4.36942368e+00
 1.18199123e-01 5.09302389e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.975804013410465
cond(S) = 10.460975860212596
E1 = -19.076664562801646  E_coul = 4.594767906798229
init E= -14.4818966560034
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.292782736985667  LUMO = 8.35314474543043
  mo_energy =
[-4.66261440e+00 -2.92782737e-01  8.35314475e+00  9.08813799e+01
  1.03830765e+03]
E1 = -19.14569551493483  E_coul = 4.64016939192029
cycle= 1 E= -14.5055261230145  delta_E= -0.0236  |g|= 0.015  |ddm|= 0.0309
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0211516
diis-c [-4.47389556e-04  1.00000000e+00]
  HOMO = -0.28721307318813  LUMO = 8.37198136243239
  mo_energy =
[-4.64546589e+00 -2.87213073e-01  8.37198136e+00  9.09074242e+01
  1.03832614e+03]
E1 = -19.145649367190682  E_coul = 4.640122024811804
cycle= 2 E= -14.5055273423789  delta_E= -1.22e-06  |g|= 0.000337  |ddm|= 0.000394
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000489225
diis-c [-2.12811390e-08 -2.25761927e-02  1.02257619e+00]
  HOMO = -0.28721577169664  LUMO = 8.37198481666929
  mo_energy =
[-4.64548742e+00 -2.87215772e-01  8.37198482e+00  9.09073336e+01
  1.03832570e+03]
E1 = -19.145651770459825  E_coul = 4.640124427200783
cycle= 3 E= -14.505527343259  delta_E= -8.8e-10  |g|= 3.18e-06  |ddm|= 1.75e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
E1 = -19.145651770459825  E_coul = 4.640124427200783
  HOMO = -0.287215798991893  LUMO = 8.37198677436882
  mo_energy =
[-4.64548566e+00 -2.87215799e-01  8.37198677e+00  9.09073427e+01
  1.03832571e+03]
E1 = -19.145651891811458  E_coul = 4.640124548551981
Extra cycle  E= -14.5055273432595  delta_E= -4.35e-13  |g|= 1.7e-07  |ddm|= 5.37e-07
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
exp = [6.59904286e+02 6.54013967e+01 9.94620643e+00 2.07592748e+00
 1.18199123e-01]
E = -14.505527343259477
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.904285713        1
[INPUT] 0    0    [1    /1   ]  65.4013966645        1
[INPUT] 0    0    [1    /1   ]  9.94620643306        1
[INPUT] 0    0    [1    /1   ]  2.07592748485        1
[INPUT] 0    0    [1    /1   ]  0.118199122583       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9042857125638, 1.0]], [0, [65.4013966644673, 1.0]], [0, [9.946206433061208, 1.0]], [0, [2.075927484847614, 1.0]], [0, [0.11819912258284389, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90428571]
bas 1, expnt(s) = [65.40139666]
bas 2, expnt(s) = [9.94620643]
bas 3, expnt(s) = [2.07592748]
bas 4, expnt(s) = [0.11819912]
CPU time:        39.51
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59904286e+02 3.28946853e+02 6.54013967e+01 5.81039010e+01
 9.94620643e+00 1.41500549e+01 2.07592748e+00 4.36942368e+00
 1.18199123e-01 5.09302389e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.975804013410465
cond(S) = 10.460975860212596
E1 = -19.076664562801646  E_coul = 4.594767906798229
init E= -14.4818966560034
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.292782736985667  LUMO = 8.35314474543043
  mo_energy =
[-4.66261440e+00 -2.92782737e-01  8.35314475e+00  9.08813799e+01
  1.03830765e+03]
E1 = -19.14569551493483  E_coul = 4.64016939192029
cycle= 1 E= -14.5055261230145  delta_E= -0.0236  |g|= 0.015  |ddm|= 0.0309
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0211516
diis-c [-4.47389556e-04  1.00000000e+00]
  HOMO = -0.28721307318813  LUMO = 8.37198136243239
  mo_energy =
[-4.64546589e+00 -2.87213073e-01  8.37198136e+00  9.09074242e+01
  1.03832614e+03]
E1 = -19.145649367190682  E_coul = 4.640122024811804
cycle= 2 E= -14.5055273423789  delta_E= -1.22e-06  |g|= 0.000337  |ddm|= 0.000394
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000489225
diis-c [-2.12811390e-08 -2.25761927e-02  1.02257619e+00]
  HOMO = -0.28721577169664  LUMO = 8.37198481666929
  mo_energy =
[-4.64548742e+00 -2.87215772e-01  8.37198482e+00  9.09073336e+01
  1.03832570e+03]
E1 = -19.145651770459825  E_coul = 4.640124427200783
cycle= 3 E= -14.505527343259  delta_E= -8.8e-10  |g|= 3.18e-06  |ddm|= 1.75e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
E1 = -19.145651770459825  E_coul = 4.640124427200783
  HOMO = -0.287215798991893  LUMO = 8.37198677436882
  mo_energy =
[-4.64548566e+00 -2.87215799e-01  8.37198677e+00  9.09073427e+01
  1.03832571e+03]
E1 = -19.145651891811458  E_coul = 4.640124548551981
Extra cycle  E= -14.5055273432595  delta_E= -4.35e-13  |g|= 1.7e-07  |ddm|= 5.37e-07
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.460975860212596
E1 = -19.145651891811458  E_coul = 4.640124548551981
init E= -14.5055273432595
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.287215801551591  LUMO = 8.37198685567667
  mo_energy =
[-4.64548560e+00 -2.87215802e-01  8.37198686e+00  9.09073431e+01
  1.03832572e+03]
E1 = -19.14565189634672  E_coul = 4.640124553087242
cycle= 1 E= -14.5055273432595  delta_E= -1.78e-15  |g|= 9.1e-09  |ddm|= 3.03e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.14565189634672  E_coul = 4.640124553087242
  HOMO = -0.287215801725614  LUMO = 8.37198685932754
  mo_energy =
[-4.64548559e+00 -2.87215802e-01  8.37198686e+00  9.09073431e+01
  1.03832572e+03]
E1 = -19.14565189652642  E_coul = 4.640124553266937
Extra cycle  E= -14.5055273432595  delta_E= -5.33e-15  |g|= 4.9e-10  |ddm|= 1.7e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59904286e+02 6.54013967e+01 9.94620643e+00 2.07592748e+00
 1.18199123e-01]
grad_E = [ 1.03951574e-05  1.12136003e-03 -3.33374534e-03  1.15738804e-02
  5.81729689e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.908580858        1
[INPUT] 0    0    [1    /1   ]  65.7525222475        1
[INPUT] 0    0    [1    /1   ]  10.1302709961        1
[INPUT] 0    0    [1    /1   ]  2.09436776812        1
[INPUT] 0    0    [1    /1   ]  0.104616346929       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.908580858493, 1.0]], [0, [65.7525222475036, 1.0]], [0, [10.130270996101869, 1.0]], [0, [2.0943677681150876, 1.0]], [0, [0.10461634692884245, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90858086]
bas 1, expnt(s) = [65.75252225]
bas 2, expnt(s) = [10.130271]
bas 3, expnt(s) = [2.09436777]
bas 4, expnt(s) = [0.10461635]
CPU time:        41.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59908581e+02 3.28948459e+02 6.57525222e+01 5.83377046e+01
 1.01302710e+01 1.43459998e+01 2.09436777e+00 4.39850139e+00
 1.04616347e-01 4.64744959e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845824830774843
cond(S) = 10.34729940503924
E1 = -18.998580335138104  E_coul = 4.5160468500075375
init E= -14.4825334851306
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302879693644963  LUMO = 8.43722450467367
  mo_energy =
[-4.69382250e+00 -3.02879694e-01  8.43722450e+00  9.18371435e+01
  1.03998545e+03]
E1 = -19.03493410367897  E_coul = 4.525329214872338
cycle= 1 E= -14.5096048888066  delta_E= -0.0271  |g|= 0.0162  |ddm|= 0.0739
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0180241
diis-c [-3.24869365e-04  1.00000000e+00]
  HOMO = -0.299797535106851  LUMO = 8.44499536243958
  mo_energy =
[-4.69234421e+00 -2.99797535e-01  8.44499536e+00  9.18403239e+01
  1.03997881e+03]
E1 = -19.034243299423583  E_coul = 4.524630245738096
cycle= 2 E= -14.5096130536855  delta_E= -8.16e-06  |g|= 0.000628  |ddm|= 0.00317
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000694751
diis-c [-2.19631036e-07 -2.92989286e-02  1.02929893e+00]
  HOMO = -0.299825194337395  LUMO = 8.44485961814958
  mo_energy =
[-4.69267646e+00 -2.99825194e-01  8.44485962e+00  9.18399838e+01
  1.03997823e+03]
E1 = -19.03422522484624  E_coul = 4.524612152706003
cycle= 3 E= -14.5096130721402  delta_E= -1.85e-08  |g|= 1.45e-05  |ddm|= 0.000149
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.98671e-05
diis-c [-1.21839494e-11  1.04169225e-03 -4.38344425e-02  1.04279275e+00]
  HOMO = -0.299825585013652  LUMO = 8.44486405958603
  mo_energy =
[-4.69267490e+00 -2.99825585e-01  8.44486406e+00  9.18400088e+01
  1.03997827e+03]
E1 = -19.034225354928797  E_coul = 4.524612282778127
cycle= 4 E= -14.5096130721507  delta_E= -1.04e-11  |g|= 9.34e-08  |ddm|= 3.19e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.034225354928797  E_coul = 4.524612282778127
  HOMO = -0.299825584218167  LUMO = 8.44486414173753
  mo_energy =
[-4.69267481e+00 -2.99825584e-01  8.44486414e+00  9.18400092e+01
  1.03997827e+03]
E1 = -19.034225361373192  E_coul = 4.524612289222519
Extra cycle  E= -14.5096130721507  delta_E= -3.55e-15  |g|= 4.23e-09  |ddm|= 1.16e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59908581e+02 6.57525222e+01 1.01302710e+01 2.09436777e+00
 1.04616347e-01]
E = -14.509613072150673
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.908580858        1
[INPUT] 0    0    [1    /1   ]  65.7525222475        1
[INPUT] 0    0    [1    /1   ]  10.1302709961        1
[INPUT] 0    0    [1    /1   ]  2.09436776812        1
[INPUT] 0    0    [1    /1   ]  0.104616346929       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.908580858493, 1.0]], [0, [65.7525222475036, 1.0]], [0, [10.130270996101869, 1.0]], [0, [2.0943677681150876, 1.0]], [0, [0.10461634692884245, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90858086]
bas 1, expnt(s) = [65.75252225]
bas 2, expnt(s) = [10.130271]
bas 3, expnt(s) = [2.09436777]
bas 4, expnt(s) = [0.10461635]
CPU time:        41.90
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59908581e+02 3.28948459e+02 6.57525222e+01 5.83377046e+01
 1.01302710e+01 1.43459998e+01 2.09436777e+00 4.39850139e+00
 1.04616347e-01 4.64744959e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845824830774843
cond(S) = 10.34729940503924
E1 = -18.998580335138104  E_coul = 4.5160468500075375
init E= -14.4825334851306
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302879693644963  LUMO = 8.43722450467367
  mo_energy =
[-4.69382250e+00 -3.02879694e-01  8.43722450e+00  9.18371435e+01
  1.03998545e+03]
E1 = -19.03493410367897  E_coul = 4.525329214872338
cycle= 1 E= -14.5096048888066  delta_E= -0.0271  |g|= 0.0162  |ddm|= 0.0739
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0180241
diis-c [-3.24869365e-04  1.00000000e+00]
  HOMO = -0.299797535106851  LUMO = 8.44499536243958
  mo_energy =
[-4.69234421e+00 -2.99797535e-01  8.44499536e+00  9.18403239e+01
  1.03997881e+03]
E1 = -19.034243299423583  E_coul = 4.524630245738096
cycle= 2 E= -14.5096130536855  delta_E= -8.16e-06  |g|= 0.000628  |ddm|= 0.00317
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000694751
diis-c [-2.19631036e-07 -2.92989286e-02  1.02929893e+00]
  HOMO = -0.299825194337395  LUMO = 8.44485961814958
  mo_energy =
[-4.69267646e+00 -2.99825194e-01  8.44485962e+00  9.18399838e+01
  1.03997823e+03]
E1 = -19.03422522484624  E_coul = 4.524612152706003
cycle= 3 E= -14.5096130721402  delta_E= -1.85e-08  |g|= 1.45e-05  |ddm|= 0.000149
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.98671e-05
diis-c [-1.21839494e-11  1.04169225e-03 -4.38344425e-02  1.04279275e+00]
  HOMO = -0.299825585013652  LUMO = 8.44486405958603
  mo_energy =
[-4.69267490e+00 -2.99825585e-01  8.44486406e+00  9.18400088e+01
  1.03997827e+03]
E1 = -19.034225354928797  E_coul = 4.524612282778127
cycle= 4 E= -14.5096130721507  delta_E= -1.04e-11  |g|= 9.34e-08  |ddm|= 3.19e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.034225354928797  E_coul = 4.524612282778127
  HOMO = -0.299825584218167  LUMO = 8.44486414173753
  mo_energy =
[-4.69267481e+00 -2.99825584e-01  8.44486414e+00  9.18400092e+01
  1.03997827e+03]
E1 = -19.034225361373192  E_coul = 4.524612289222519
Extra cycle  E= -14.5096130721507  delta_E= -3.55e-15  |g|= 4.23e-09  |ddm|= 1.16e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.34729940503924
E1 = -19.034225361373192  E_coul = 4.524612289222519
init E= -14.5096130721507
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299825584206101  LUMO = 8.44486414494632
  mo_energy =
[-4.69267481e+00 -2.99825584e-01  8.44486414e+00  9.18400092e+01
  1.03997827e+03]
E1 = -19.03422536161138  E_coul = 4.524612289460717
cycle= 1 E= -14.5096130721507  delta_E= 8.88e-15  |g|= 2.01e-10  |ddm|= 5.61e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03422536161138  E_coul = 4.524612289460717
  HOMO = -0.299825584207008  LUMO = 8.44486414507628
  mo_energy =
[-4.69267481e+00 -2.99825584e-01  8.44486415e+00  9.18400092e+01
  1.03997827e+03]
E1 = -19.034225361620486  E_coul = 4.524612289469816
Extra cycle  E= -14.5096130721507  delta_E= -5.33e-15  |g|= 9.89e-12  |ddm|= 2.95e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59908581e+02 6.57525222e+01 1.01302710e+01 2.09436777e+00
 1.04616347e-01]
grad_E = [ 1.08341206e-05  9.63284749e-04 -9.28101350e-04  7.10545321e-03
  2.20617003e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.907022997        1
[INPUT] 0    0    [1    /1   ]  65.6208201886        1
[INPUT] 0    0    [1    /1   ]  10.0955384203        1
[INPUT] 0    0    [1    /1   ]  2.09569255495        1
[INPUT] 0    0    [1    /1   ]  0.104511996249       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9070229974357, 1.0]], [0, [65.62082018860985, 1.0]], [0, [10.095538420269245, 1.0]], [0, [2.095692554950047, 1.0]], [0, [0.10451199624915224, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.907023]
bas 1, expnt(s) = [65.62082019]
bas 2, expnt(s) = [10.09553842]
bas 3, expnt(s) = [2.09569255]
bas 4, expnt(s) = [0.104512]
CPU time:        43.93
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59907023e+02 3.28947876e+02 6.56208202e+01 5.82500450e+01
 1.00955384e+01 1.43090941e+01 2.09569255e+00 4.40058792e+00
 1.04511996e-01 4.64397242e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845769185072717
cond(S) = 10.370110110512073
E1 = -18.997637945292833  E_coul = 4.515467505241022
init E= -14.4821704400518
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302963693803215  LUMO = 8.41945743658093
  mo_energy =
[-4.69406007e+00 -3.02963694e-01  8.41945744e+00  9.15931695e+01
  1.03945987e+03]
E1 = -19.03513124137778  E_coul = 4.525454730318501
cycle= 1 E= -14.5096765110593  delta_E= -0.0275  |g|= 0.0171  |ddm|= 0.0741
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0190218
diis-c [-3.61829252e-04  1.00000000e+00]
  HOMO = -0.29987553797885  LUMO = 8.42759393153549
  mo_energy =
[-4.69223942e+00 -2.99875538e-01  8.42759393e+00  9.15975056e+01
  1.03945423e+03]
E1 = -19.034472715179625  E_coul = 4.524787692043776
cycle= 2 E= -14.5096850231358  delta_E= -8.51e-06  |g|= 0.000655  |ddm|= 0.0032
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000722811
diis-c [-2.33852835e-07 -2.90726641e-02  1.02907266e+00]
  HOMO = -0.299903225895675  LUMO = 8.42747564511109
  mo_energy =
[-4.69255515e+00 -2.99903226e-01  8.42747565e+00  9.15972329e+01
  1.03945373e+03]
E1 = -19.034456022367902  E_coul = 4.524770979766889
cycle= 3 E= -14.509685042601  delta_E= -1.95e-08  |g|= 1.52e-05  |ddm|= 0.000151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.06649e-05
diis-c [-1.54122855e-11  1.05074524e-03 -4.41301809e-02  1.04307944e+00]
  HOMO = -0.299903631498734  LUMO = 8.4274803485048
  mo_energy =
[-4.69255341e+00 -2.99903631e-01  8.42748035e+00  9.15972593e+01
  1.03945377e+03]
E1 = -19.03445616745491  E_coul = 4.524771124842509
cycle= 4 E= -14.5096850426124  delta_E= -1.14e-11  |g|= 9.72e-08  |ddm|= 3.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03445616745491  E_coul = 4.524771124842509
  HOMO = -0.299903631096187  LUMO = 8.42748042745184
  mo_energy =
[-4.69255333e+00 -2.99903631e-01  8.42748043e+00  9.15972597e+01
  1.03945377e+03]
E1 = -19.034456173568294  E_coul = 4.524771130955887
Extra cycle  E= -14.5096850426124  delta_E= -7.11e-15  |g|= 4.51e-09  |ddm|= 1.24e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59907023e+02 6.56208202e+01 1.00955384e+01 2.09569255e+00
 1.04511996e-01]
E = -14.509685042612407
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.907022997        1
[INPUT] 0    0    [1    /1   ]  65.6208201886        1
[INPUT] 0    0    [1    /1   ]  10.0955384203        1
[INPUT] 0    0    [1    /1   ]  2.09569255495        1
[INPUT] 0    0    [1    /1   ]  0.104511996249       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9070229974357, 1.0]], [0, [65.62082018860985, 1.0]], [0, [10.095538420269245, 1.0]], [0, [2.095692554950047, 1.0]], [0, [0.10451199624915224, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.907023]
bas 1, expnt(s) = [65.62082019]
bas 2, expnt(s) = [10.09553842]
bas 3, expnt(s) = [2.09569255]
bas 4, expnt(s) = [0.104512]
CPU time:        44.29
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59907023e+02 3.28947876e+02 6.56208202e+01 5.82500450e+01
 1.00955384e+01 1.43090941e+01 2.09569255e+00 4.40058792e+00
 1.04511996e-01 4.64397242e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845769185072717
cond(S) = 10.370110110512073
E1 = -18.997637945292833  E_coul = 4.515467505241022
init E= -14.4821704400518
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302963693803215  LUMO = 8.41945743658093
  mo_energy =
[-4.69406007e+00 -3.02963694e-01  8.41945744e+00  9.15931695e+01
  1.03945987e+03]
E1 = -19.03513124137778  E_coul = 4.525454730318501
cycle= 1 E= -14.5096765110593  delta_E= -0.0275  |g|= 0.0171  |ddm|= 0.0741
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0190218
diis-c [-3.61829252e-04  1.00000000e+00]
  HOMO = -0.29987553797885  LUMO = 8.42759393153549
  mo_energy =
[-4.69223942e+00 -2.99875538e-01  8.42759393e+00  9.15975056e+01
  1.03945423e+03]
E1 = -19.034472715179625  E_coul = 4.524787692043776
cycle= 2 E= -14.5096850231358  delta_E= -8.51e-06  |g|= 0.000655  |ddm|= 0.0032
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000722811
diis-c [-2.33852835e-07 -2.90726641e-02  1.02907266e+00]
  HOMO = -0.299903225895675  LUMO = 8.42747564511109
  mo_energy =
[-4.69255515e+00 -2.99903226e-01  8.42747565e+00  9.15972329e+01
  1.03945373e+03]
E1 = -19.034456022367902  E_coul = 4.524770979766889
cycle= 3 E= -14.509685042601  delta_E= -1.95e-08  |g|= 1.52e-05  |ddm|= 0.000151
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.06649e-05
diis-c [-1.54122855e-11  1.05074524e-03 -4.41301809e-02  1.04307944e+00]
  HOMO = -0.299903631498734  LUMO = 8.4274803485048
  mo_energy =
[-4.69255341e+00 -2.99903631e-01  8.42748035e+00  9.15972593e+01
  1.03945377e+03]
E1 = -19.03445616745491  E_coul = 4.524771124842509
cycle= 4 E= -14.5096850426124  delta_E= -1.14e-11  |g|= 9.72e-08  |ddm|= 3.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03445616745491  E_coul = 4.524771124842509
  HOMO = -0.299903631096187  LUMO = 8.42748042745184
  mo_energy =
[-4.69255333e+00 -2.99903631e-01  8.42748043e+00  9.15972597e+01
  1.03945377e+03]
E1 = -19.034456173568294  E_coul = 4.524771130955887
Extra cycle  E= -14.5096850426124  delta_E= -7.11e-15  |g|= 4.51e-09  |ddm|= 1.24e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.370110110512073
E1 = -19.034456173568294  E_coul = 4.524771130955887
init E= -14.5096850426124
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.29990363110013  LUMO = 8.42748043061231
  mo_energy =
[-4.69255332e+00 -2.99903631e-01  8.42748043e+00  9.15972597e+01
  1.03945377e+03]
E1 = -19.034456173798464  E_coul = 4.524771131186064
cycle= 1 E= -14.5096850426124  delta_E= 7.11e-15  |g|= 2.19e-10  |ddm|= 6.29e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.034456173798464  E_coul = 4.524771131186064
  HOMO = -0.299903631101743  LUMO = 8.42748043074356
  mo_energy =
[-4.69255332e+00 -2.99903631e-01  8.42748043e+00  9.15972597e+01
  1.03945377e+03]
E1 = -19.034456173807442  E_coul = 4.524771131195036
Extra cycle  E= -14.5096850426124  delta_E= -7.11e-15  |g|= 1.1e-11  |ddm|= 3.36e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59907023e+02 6.56208202e+01 1.00955384e+01 2.09569255e+00
 1.04511996e-01]
grad_E = [ 1.08062991e-05  9.96745536e-04 -1.77933358e-03  1.12276607e-02
  1.69656460e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.902239235        1
[INPUT] 0    0    [1    /1   ]  65.2121456743        1
[INPUT] 0    0    [1    /1   ]  10.0215504467        1
[INPUT] 0    0    [1    /1   ]  2.09717920367        1
[INPUT] 0    0    [1    /1   ]  0.104325426318       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9022392345643, 1.0]], [0, [65.21214567433577, 1.0]], [0, [10.021550446736159, 1.0]], [0, [2.0971792036726655, 1.0]], [0, [0.10432542631817253, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90223923]
bas 1, expnt(s) = [65.21214567]
bas 2, expnt(s) = [10.02155045]
bas 3, expnt(s) = [2.0971792]
bas 4, expnt(s) = [0.10432543]
CPU time:        46.32
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59902239e+02 3.28946088e+02 6.52121457e+01 5.79777546e+01
 1.00215504e+01 1.42303706e+01 2.09717920e+00 4.40292899e+00
 1.04325426e-01 4.63775338e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845689300611893
cond(S) = 10.425756433089685
E1 = -18.995977334313675  E_coul = 4.514423084060768
init E= -14.4815542502529
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303112001517743  LUMO = 8.37819963569416
  mo_energy =
[-4.69453084e+00 -3.03112002e-01  8.37819964e+00  9.09361912e+01
  1.03792469e+03]
E1 = -19.035525401655686  E_coul = 4.525639100670583
cycle= 1 E= -14.5098863009851  delta_E= -0.0283  |g|= 0.0187  |ddm|= 0.0747
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208403
diis-c [-4.34319731e-04  1.00000000e+00]
  HOMO = -0.300016589146426  LUMO = 8.38697210709701
  mo_energy =
[-4.69211142e+00 -3.00016589e-01  8.38697211e+00  9.09425944e+01
  1.03792083e+03]
E1 = -19.03492453689179  E_coul = 4.52502900970324
cycle= 2 E= -14.5098955271886  delta_E= -9.23e-06  |g|= 0.000706  |ddm|= 0.00327
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000776803
diis-c [-2.62204095e-07 -2.88465112e-02  1.02884651e+00]
  HOMO = -0.300044404575756  LUMO = 8.38688510257045
  mo_energy =
[-4.69239767e+00 -3.00044405e-01  8.38688510e+00  9.09424442e+01
  1.03792047e+03]
E1 = -19.03491032275625  E_coul = 4.525014774038387
cycle= 3 E= -14.5098955487179  delta_E= -2.15e-08  |g|= 1.64e-05  |ddm|= 0.000157
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.21003e-05
diis-c [-2.25431700e-11  1.06300979e-03 -4.44143937e-02  1.04335138e+00]
  HOMO = -0.300044834745031  LUMO = 8.3868903218372
  mo_energy =
[-4.69239554e+00 -3.00044835e-01  8.38689032e+00  9.09424733e+01
  1.03792052e+03]
E1 = -19.034910499733236  E_coul = 4.525014951002149
cycle= 4 E= -14.5098955487311  delta_E= -1.32e-11  |g|= 1.07e-07  |ddm|= 3.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.034910499733236  E_coul = 4.525014951002149
  HOMO = -0.30004483505252  LUMO = 8.38689039656291
  mo_energy =
[-4.69239546e+00 -3.00044835e-01  8.38689040e+00  9.09424736e+01
  1.03792052e+03]
E1 = -19.0349105053594  E_coul = 4.525014956628313
Extra cycle  E= -14.5098955487311  delta_E= 1.78e-15  |g|= 5.16e-09  |ddm|= 1.47e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59902239e+02 6.52121457e+01 1.00215504e+01 2.09717920e+00
 1.04325426e-01]
E = -14.509895548731086
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.902239235        1
[INPUT] 0    0    [1    /1   ]  65.2121456743        1
[INPUT] 0    0    [1    /1   ]  10.0215504467        1
[INPUT] 0    0    [1    /1   ]  2.09717920367        1
[INPUT] 0    0    [1    /1   ]  0.104325426318       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9022392345643, 1.0]], [0, [65.21214567433577, 1.0]], [0, [10.021550446736159, 1.0]], [0, [2.0971792036726655, 1.0]], [0, [0.10432542631817253, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90223923]
bas 1, expnt(s) = [65.21214567]
bas 2, expnt(s) = [10.02155045]
bas 3, expnt(s) = [2.0971792]
bas 4, expnt(s) = [0.10432543]
CPU time:        46.70
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59902239e+02 3.28946088e+02 6.52121457e+01 5.79777546e+01
 1.00215504e+01 1.42303706e+01 2.09717920e+00 4.40292899e+00
 1.04325426e-01 4.63775338e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845689300611893
cond(S) = 10.425756433089685
E1 = -18.995977334313675  E_coul = 4.514423084060768
init E= -14.4815542502529
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303112001517743  LUMO = 8.37819963569416
  mo_energy =
[-4.69453084e+00 -3.03112002e-01  8.37819964e+00  9.09361912e+01
  1.03792469e+03]
E1 = -19.035525401655686  E_coul = 4.525639100670583
cycle= 1 E= -14.5098863009851  delta_E= -0.0283  |g|= 0.0187  |ddm|= 0.0747
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208403
diis-c [-4.34319731e-04  1.00000000e+00]
  HOMO = -0.300016589146426  LUMO = 8.38697210709701
  mo_energy =
[-4.69211142e+00 -3.00016589e-01  8.38697211e+00  9.09425944e+01
  1.03792083e+03]
E1 = -19.03492453689179  E_coul = 4.52502900970324
cycle= 2 E= -14.5098955271886  delta_E= -9.23e-06  |g|= 0.000706  |ddm|= 0.00327
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000776803
diis-c [-2.62204095e-07 -2.88465112e-02  1.02884651e+00]
  HOMO = -0.300044404575756  LUMO = 8.38688510257045
  mo_energy =
[-4.69239767e+00 -3.00044405e-01  8.38688510e+00  9.09424442e+01
  1.03792047e+03]
E1 = -19.03491032275625  E_coul = 4.525014774038387
cycle= 3 E= -14.5098955487179  delta_E= -2.15e-08  |g|= 1.64e-05  |ddm|= 0.000157
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.21003e-05
diis-c [-2.25431700e-11  1.06300979e-03 -4.44143937e-02  1.04335138e+00]
  HOMO = -0.300044834745031  LUMO = 8.3868903218372
  mo_energy =
[-4.69239554e+00 -3.00044835e-01  8.38689032e+00  9.09424733e+01
  1.03792052e+03]
E1 = -19.034910499733236  E_coul = 4.525014951002149
cycle= 4 E= -14.5098955487311  delta_E= -1.32e-11  |g|= 1.07e-07  |ddm|= 3.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.034910499733236  E_coul = 4.525014951002149
  HOMO = -0.30004483505252  LUMO = 8.38689039656291
  mo_energy =
[-4.69239546e+00 -3.00044835e-01  8.38689040e+00  9.09424736e+01
  1.03792052e+03]
E1 = -19.0349105053594  E_coul = 4.525014956628313
Extra cycle  E= -14.5098955487311  delta_E= 1.78e-15  |g|= 5.16e-09  |ddm|= 1.47e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.425756433089685
E1 = -19.0349105053594  E_coul = 4.525014956628313
init E= -14.5098955487311
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300044835086437  LUMO = 8.38689039969654
  mo_energy =
[-4.69239546e+00 -3.00044835e-01  8.38689040e+00  9.09424736e+01
  1.03792052e+03]
E1 = -19.034910505579266  E_coul = 4.525014956848173
cycle= 1 E= -14.5098955487311  delta_E= -7.11e-15  |g|= 2.58e-10  |ddm|= 7.84e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.034910505579266  E_coul = 4.525014956848173
  HOMO = -0.300044835089422  LUMO = 8.38689039983257
  mo_energy =
[-4.69239546e+00 -3.00044835e-01  8.38689040e+00  9.09424736e+01
  1.03792052e+03]
E1 = -19.034910505588204  E_coul = 4.52501495685711
Extra cycle  E= -14.5098955487311  delta_E= -1.78e-15  |g|= 1.32e-11  |ddm|= 4.25e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59902239e+02 6.52121457e+01 1.00215504e+01 2.09717920e+00
 1.04325426e-01]
grad_E = [ 1.10138586e-05  1.05072639e-03 -3.30428664e-03  1.86687982e-02
  7.78916283e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.890050858        1
[INPUT] 0    0    [1    /1   ]  64.1647683312        1
[INPUT] 0    0    [1    /1   ]  9.88055978416        1
[INPUT] 0    0    [1    /1   ]  2.0968625813         1
[INPUT] 0    0    [1    /1   ]  0.104045108404       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8900508575684, 1.0]], [0, [64.16476833123441, 1.0]], [0, [9.880559784158304, 1.0]], [0, [2.0968625812987547, 1.0]], [0, [0.1040451084044692, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.89005086]
bas 1, expnt(s) = [64.16476833]
bas 2, expnt(s) = [9.88055978]
bas 3, expnt(s) = [2.09686258]
bas 4, expnt(s) = [0.10404511]
CPU time:        48.78
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59890051e+02 3.28941531e+02 6.41647683e+01 5.72779541e+01
 9.88055978e+00 1.40799524e+01 2.09686258e+00 4.40243043e+00
 1.04045108e-01 4.62840415e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984564435223319
cond(S) = 10.547791858506988
E1 = -18.9936242685685  E_coul = 4.51282256205719
init E= -14.4808017065113
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303328338607625  LUMO = 8.29151620299624
  mo_energy =
[-4.69535844e+00 -3.03328339e-01  8.29151620e+00  8.93965505e+01
  1.03412860e+03]
E1 = -19.036126047389608  E_coul = 4.525723654950266
cycle= 1 E= -14.5104023924393  delta_E= -0.0296  |g|= 0.0211  |ddm|= 0.0764
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0235492
diis-c [-5.54564202e-04  1.00000000e+00]
  HOMO = -0.300233158376464  LUMO = 8.30115966283635
  mo_energy =
[-4.69211124e+00 -3.00233158e-01  8.30115966e+00  8.94059375e+01
  1.03412731e+03]
E1 = -19.035609184790836  E_coul = 4.525196262697674
cycle= 2 E= -14.5104129220932  delta_E= -1.05e-05  |g|= 0.00079  |ddm|= 0.0034
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864991
diis-c [-3.10727056e-07 -2.89069252e-02  1.02890693e+00]
  HOMO = -0.300261389473336  LUMO = 8.30111857418281
  mo_energy =
[-4.69235458e+00 -3.00261389e-01  8.30111857e+00  8.94059712e+01
  1.03412717e+03]
E1 = -19.035598627458228  E_coul = 4.525185680041616
cycle= 3 E= -14.5104129474166  delta_E= -2.53e-08  |g|= 1.82e-05  |ddm|= 0.000168
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.42753e-05
diis-c [-3.46106514e-11  1.08240753e-03 -4.45836029e-02  1.04350120e+00]
  HOMO = -0.300261853196394  LUMO = 8.30112463339434
  mo_energy =
[-4.69235172e+00 -3.00261853e-01  8.30112463e+00  8.94060045e+01
  1.03412723e+03]
E1 = -19.035598860615735  E_coul = 4.52518591318284
cycle= 4 E= -14.5104129474329  delta_E= -1.63e-11  |g|= 1.26e-07  |ddm|= 4e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.035598860615735  E_coul = 4.52518591318284
  HOMO = -0.300261854550345  LUMO = 8.30112470386651
  mo_energy =
[-4.69235166e+00 -3.00261855e-01  8.30112470e+00  8.94060048e+01
  1.03412723e+03]
E1 = -19.035598865678658  E_coul = 4.52518591824577
Extra cycle  E= -14.5104129474329  delta_E= 7.11e-15  |g|= 6.33e-09  |ddm|= 1.96e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59890051e+02 6.41647683e+01 9.88055978e+00 2.09686258e+00
 1.04045108e-01]
E = -14.510412947432888
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.890050858        1
[INPUT] 0    0    [1    /1   ]  64.1647683312        1
[INPUT] 0    0    [1    /1   ]  9.88055978416        1
[INPUT] 0    0    [1    /1   ]  2.0968625813         1
[INPUT] 0    0    [1    /1   ]  0.104045108404       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8900508575684, 1.0]], [0, [64.16476833123441, 1.0]], [0, [9.880559784158304, 1.0]], [0, [2.0968625812987547, 1.0]], [0, [0.1040451084044692, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.89005086]
bas 1, expnt(s) = [64.16476833]
bas 2, expnt(s) = [9.88055978]
bas 3, expnt(s) = [2.09686258]
bas 4, expnt(s) = [0.10404511]
CPU time:        49.19
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59890051e+02 3.28941531e+02 6.41647683e+01 5.72779541e+01
 9.88055978e+00 1.40799524e+01 2.09686258e+00 4.40243043e+00
 1.04045108e-01 4.62840415e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984564435223319
cond(S) = 10.547791858506988
E1 = -18.9936242685685  E_coul = 4.51282256205719
init E= -14.4808017065113
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303328338607625  LUMO = 8.29151620299624
  mo_energy =
[-4.69535844e+00 -3.03328339e-01  8.29151620e+00  8.93965505e+01
  1.03412860e+03]
E1 = -19.036126047389608  E_coul = 4.525723654950266
cycle= 1 E= -14.5104023924393  delta_E= -0.0296  |g|= 0.0211  |ddm|= 0.0764
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0235492
diis-c [-5.54564202e-04  1.00000000e+00]
  HOMO = -0.300233158376464  LUMO = 8.30115966283635
  mo_energy =
[-4.69211124e+00 -3.00233158e-01  8.30115966e+00  8.94059375e+01
  1.03412731e+03]
E1 = -19.035609184790836  E_coul = 4.525196262697674
cycle= 2 E= -14.5104129220932  delta_E= -1.05e-05  |g|= 0.00079  |ddm|= 0.0034
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864991
diis-c [-3.10727056e-07 -2.89069252e-02  1.02890693e+00]
  HOMO = -0.300261389473336  LUMO = 8.30111857418281
  mo_energy =
[-4.69235458e+00 -3.00261389e-01  8.30111857e+00  8.94059712e+01
  1.03412717e+03]
E1 = -19.035598627458228  E_coul = 4.525185680041616
cycle= 3 E= -14.5104129474166  delta_E= -2.53e-08  |g|= 1.82e-05  |ddm|= 0.000168
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.42753e-05
diis-c [-3.46106514e-11  1.08240753e-03 -4.45836029e-02  1.04350120e+00]
  HOMO = -0.300261853196394  LUMO = 8.30112463339434
  mo_energy =
[-4.69235172e+00 -3.00261853e-01  8.30112463e+00  8.94060045e+01
  1.03412723e+03]
E1 = -19.035598860615735  E_coul = 4.52518591318284
cycle= 4 E= -14.5104129474329  delta_E= -1.63e-11  |g|= 1.26e-07  |ddm|= 4e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.035598860615735  E_coul = 4.52518591318284
  HOMO = -0.300261854550345  LUMO = 8.30112470386651
  mo_energy =
[-4.69235166e+00 -3.00261855e-01  8.30112470e+00  8.94060048e+01
  1.03412723e+03]
E1 = -19.035598865678658  E_coul = 4.52518591824577
Extra cycle  E= -14.5104129474329  delta_E= 7.11e-15  |g|= 6.33e-09  |ddm|= 1.96e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.547791858506988
E1 = -19.035598865678658  E_coul = 4.52518591824577
init E= -14.5104129474329
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30026185463008  LUMO = 8.30112470703579
  mo_energy =
[-4.69235166e+00 -3.00261855e-01  8.30112471e+00  8.94060048e+01
  1.03412723e+03]
E1 = -19.035598865889185  E_coul = 4.525185918456282
cycle= 1 E= -14.5104129474329  delta_E= -1.42e-14  |g|= 3.27e-10  |ddm|= 1.06e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.035598865889185  E_coul = 4.525185918456282
  HOMO = -0.300261854635242  LUMO = 8.30112470718233
  mo_energy =
[-4.69235166e+00 -3.00261855e-01  8.30112471e+00  8.94060048e+01
  1.03412723e+03]
E1 = -19.03559886589829  E_coul = 4.525185918465389
Extra cycle  E= -14.5104129474329  delta_E= 1.78e-15  |g|= 1.71e-11  |ddm|= 5.8e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59890051e+02 6.41647683e+01 9.88055978e+00 2.09686258e+00
 1.04045108e-01]
grad_E = [ 1.20038470e-05  1.11603895e-03 -5.57008475e-03  2.97728324e-02
 -6.12094310e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.859507976        1
[INPUT] 0    0    [1    /1   ]  61.5313784274        1
[INPUT] 0    0    [1    /1   ]  9.59652095774        1
[INPUT] 0    0    [1    /1   ]  2.08912777373        1
[INPUT] 0    0    [1    /1   ]  0.103629739922       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8595079758237, 1.0]], [0, [61.53137842735654, 1.0]], [0, [9.596520957737374, 1.0]], [0, [2.0891277737307723, 1.0]], [0, [0.10362973992214403, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.85950798]
bas 1, expnt(s) = [61.53137843]
bas 2, expnt(s) = [9.59652096]
bas 3, expnt(s) = [2.08912777]
bas 4, expnt(s) = [0.10362974]
CPU time:        51.29
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59859508e+02 3.28930112e+02 6.15313784e+01 5.55056902e+01
 9.59652096e+00 1.37752784e+01 2.08912777e+00 4.39024520e+00
 1.03629740e-01 4.61453910e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845862599966893
cond(S) = 10.836235975543547
E1 = -18.990858592795522  E_coul = 4.5103743570144115
init E= -14.4804842357811
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303626406380884  LUMO = 8.09920098500853
  mo_energy =
[-4.69688457e+00 -3.03626406e-01  8.09920099e+00  8.57388690e+01
  1.02479255e+03]
E1 = -19.036792289102785  E_coul = 4.525139114398852
cycle= 1 E= -14.5116531747039  delta_E= -0.0312  |g|= 0.0245  |ddm|= 0.0804
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0272197
diis-c [-7.40910325e-04  1.00000000e+00]
  HOMO = -0.300566947795014  LUMO = 8.10981410660874
  mo_energy =
[-4.69269627e+00 -3.00566948e-01  8.10981411e+00  8.57520332e+01
  1.02479439e+03]
E1 = -19.036385488043948  E_coul = 4.524719333179872
cycle= 2 E= -14.5116661548641  delta_E= -1.3e-05  |g|= 0.000926  |ddm|= 0.00368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00100516
diis-c [-3.90697479e-07 -2.97886385e-02  1.02978864e+00]
  HOMO = -0.300596467992547  LUMO = 8.10983460556054
  mo_energy =
[-4.69288322e+00 -3.00596468e-01  8.10983461e+00  8.57523246e+01
  1.02479458e+03]
E1 = -19.03637987237343  E_coul = 4.52471368468257
cycle= 3 E= -14.5116661876909  delta_E= -3.28e-08  |g|= 2.09e-05  |ddm|= 0.000189
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75574e-05
diis-c [-4.71460243e-11  1.13733022e-03 -4.51132009e-02  1.04397587e+00]
  HOMO = -0.30059698115733  LUMO = 8.10984189906708
  mo_energy =
[-4.69287916e+00 -3.00596981e-01  8.10984190e+00  8.57523642e+01
  1.02479464e+03]
E1 = -19.036380194160188  E_coul = 4.52471400644773
cycle= 4 E= -14.5116661877125  delta_E= -2.16e-11  |g|= 1.5e-07  |ddm|= 4.65e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036380194160188  E_coul = 4.52471400644773
  HOMO = -0.300596983830898  LUMO = 8.10984196265178
  mo_energy =
[-4.69287911e+00 -3.00596984e-01  8.10984196e+00  8.57523645e+01
  1.02479464e+03]
E1 = -19.03638019847111  E_coul = 4.524714010758645
Extra cycle  E= -14.5116661877125  delta_E= -8.88e-15  |g|= 7.85e-09  |ddm|= 2.64e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59859508e+02 6.15313784e+01 9.59652096e+00 2.08912777e+00
 1.03629740e-01]
E = -14.511666187712466
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.859507976        1
[INPUT] 0    0    [1    /1   ]  61.5313784274        1
[INPUT] 0    0    [1    /1   ]  9.59652095774        1
[INPUT] 0    0    [1    /1   ]  2.08912777373        1
[INPUT] 0    0    [1    /1   ]  0.103629739922       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8595079758237, 1.0]], [0, [61.53137842735654, 1.0]], [0, [9.596520957737374, 1.0]], [0, [2.0891277737307723, 1.0]], [0, [0.10362973992214403, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.85950798]
bas 1, expnt(s) = [61.53137843]
bas 2, expnt(s) = [9.59652096]
bas 3, expnt(s) = [2.08912777]
bas 4, expnt(s) = [0.10362974]
CPU time:        51.72
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59859508e+02 3.28930112e+02 6.15313784e+01 5.55056902e+01
 9.59652096e+00 1.37752784e+01 2.08912777e+00 4.39024520e+00
 1.03629740e-01 4.61453910e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845862599966893
cond(S) = 10.836235975543547
E1 = -18.990858592795522  E_coul = 4.5103743570144115
init E= -14.4804842357811
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303626406380884  LUMO = 8.09920098500853
  mo_energy =
[-4.69688457e+00 -3.03626406e-01  8.09920099e+00  8.57388690e+01
  1.02479255e+03]
E1 = -19.036792289102785  E_coul = 4.525139114398852
cycle= 1 E= -14.5116531747039  delta_E= -0.0312  |g|= 0.0245  |ddm|= 0.0804
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0272197
diis-c [-7.40910325e-04  1.00000000e+00]
  HOMO = -0.300566947795014  LUMO = 8.10981410660874
  mo_energy =
[-4.69269627e+00 -3.00566948e-01  8.10981411e+00  8.57520332e+01
  1.02479439e+03]
E1 = -19.036385488043948  E_coul = 4.524719333179872
cycle= 2 E= -14.5116661548641  delta_E= -1.3e-05  |g|= 0.000926  |ddm|= 0.00368
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00100516
diis-c [-3.90697479e-07 -2.97886385e-02  1.02978864e+00]
  HOMO = -0.300596467992547  LUMO = 8.10983460556054
  mo_energy =
[-4.69288322e+00 -3.00596468e-01  8.10983461e+00  8.57523246e+01
  1.02479458e+03]
E1 = -19.03637987237343  E_coul = 4.52471368468257
cycle= 3 E= -14.5116661876909  delta_E= -3.28e-08  |g|= 2.09e-05  |ddm|= 0.000189
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75574e-05
diis-c [-4.71460243e-11  1.13733022e-03 -4.51132009e-02  1.04397587e+00]
  HOMO = -0.30059698115733  LUMO = 8.10984189906708
  mo_energy =
[-4.69287916e+00 -3.00596981e-01  8.10984190e+00  8.57523642e+01
  1.02479464e+03]
E1 = -19.036380194160188  E_coul = 4.52471400644773
cycle= 4 E= -14.5116661877125  delta_E= -2.16e-11  |g|= 1.5e-07  |ddm|= 4.65e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036380194160188  E_coul = 4.52471400644773
  HOMO = -0.300596983830898  LUMO = 8.10984196265178
  mo_energy =
[-4.69287911e+00 -3.00596984e-01  8.10984196e+00  8.57523645e+01
  1.02479464e+03]
E1 = -19.03638019847111  E_coul = 4.524714010758645
Extra cycle  E= -14.5116661877125  delta_E= -8.88e-15  |g|= 7.85e-09  |ddm|= 2.64e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.836235975543547
E1 = -19.03638019847111  E_coul = 4.524714010758645
init E= -14.5116661877125
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300596983969253  LUMO = 8.10984196579666
  mo_energy =
[-4.69287910e+00 -3.00596984e-01  8.10984197e+00  8.57523645e+01
  1.02479464e+03]
E1 = -19.036380198667967  E_coul = 4.524714010955499
cycle= 1 E= -14.5116661877125  delta_E= -1.78e-15  |g|= 4.18e-10  |ddm|= 1.45e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.036380198667967  E_coul = 4.524714010955499
  HOMO = -0.300596983977327  LUMO = 8.10984196595354
  mo_energy =
[-4.69287910e+00 -3.00596984e-01  8.10984197e+00  8.57523645e+01
  1.02479464e+03]
E1 = -19.036380198677257  E_coul = 4.524714010964785
Extra cycle  E= -14.5116661877125  delta_E= -3.55e-15  |g|= 2.24e-11  |ddm|= 7.97e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59859508e+02 6.15313784e+01 9.59652096e+00 2.08912777e+00
 1.03629740e-01]
grad_E = [ 1.53932471e-05  1.16163528e-03 -8.74328829e-03  4.53936444e-02
 -2.68851551e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.795718933        1
[INPUT] 0    0    [1    /1   ]  56.0200363631        1
[INPUT] 0    0    [1    /1   ]  9.09864658795        1
[INPUT] 0    0    [1    /1   ]  2.06212650535        1
[INPUT] 0    0    [1    /1   ]  0.103174270862       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7957189329015, 1.0]], [0, [56.02003636311777, 1.0]], [0, [9.098646587954358, 1.0]], [0, [2.0621265053473654, 1.0]], [0, [0.10317427086165831, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.79571893]
bas 1, expnt(s) = [56.02003636]
bas 2, expnt(s) = [9.09864659]
bas 3, expnt(s) = [2.06212651]
bas 4, expnt(s) = [0.10317427]
CPU time:        53.83
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59795719e+02 3.28906264e+02 5.60200364e+01 5.17335837e+01
 9.09864659e+00 1.32357215e+01 2.06212651e+00 4.34761925e+00
 1.03174271e-01 4.59931951e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984712240689629
cond(S) = 11.478632016467106
E1 = -18.990442203733565  E_coul = 4.507690805066633
init E= -14.4827513986669
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303881459361225  LUMO = 7.73213479172133
  mo_energy =
[-4.69914436e+00 -3.03881459e-01  7.73213479e+00  7.84096295e+01
  1.00559210e+03]
E1 = -19.03669039549696  E_coul = 4.5226319064492015
cycle= 1 E= -14.5140584890478  delta_E= -0.0313  |g|= 0.0269  |ddm|= 0.0883
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.030257
diis-c [-9.15483188e-04  1.00000000e+00]
  HOMO = -0.300962289808891  LUMO = 7.74290914439447
  mo_energy =
[-4.69475883e+00 -3.00962290e-01  7.74290914e+00  7.84250034e+01
  1.00559535e+03]
E1 = -19.03635097719982  E_coul = 4.522276040686325
cycle= 2 E= -14.5140749365135  delta_E= -1.64e-05  |g|= 0.00109  |ddm|= 0.00418
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00116256
diis-c [-4.75988760e-07 -3.19208183e-02  1.03192082e+00]
  HOMO = -0.300995114240694  LUMO = 7.74297489123084
  mo_energy =
[-4.69491005e+00 -3.00995114e-01  7.74297489e+00  7.84255125e+01
  1.00559583e+03]
E1 = -19.03634857683163  E_coul = 4.522273594974063
cycle= 3 E= -14.5140749818576  delta_E= -4.53e-08  |g|= 2.43e-05  |ddm|= 0.000225
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.15311e-05
diis-c [-2.45169922e-11  1.27351729e-03 -4.76734866e-02  1.04639997e+00]
  HOMO = -0.300995707968154  LUMO = 7.74298320685231
  mo_energy =
[-4.69490482e+00 -3.00995708e-01  7.74298321e+00  7.84255579e+01
  1.00559590e+03]
E1 = -19.036348971704836  E_coul = 4.522273989817539
cycle= 4 E= -14.5140749818873  delta_E= -2.97e-11  |g|= 1.27e-07  |ddm|= 5.63e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036348971704836  E_coul = 4.522273989817539
  HOMO = -0.300995710799573  LUMO = 7.74298324971018
  mo_energy =
[-4.69490479e+00 -3.00995711e-01  7.74298325e+00  7.84255581e+01
  1.00559590e+03]
E1 = -19.036348974657468  E_coul = 4.522273992770173
Extra cycle  E= -14.5140749818873  delta_E= 3.55e-15  |g|= 6.82e-09  |ddm|= 2.39e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59795719e+02 5.60200364e+01 9.09864659e+00 2.06212651e+00
 1.03174271e-01]
E = -14.514074981887294
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.795718933        1
[INPUT] 0    0    [1    /1   ]  56.0200363631        1
[INPUT] 0    0    [1    /1   ]  9.09864658795        1
[INPUT] 0    0    [1    /1   ]  2.06212650535        1
[INPUT] 0    0    [1    /1   ]  0.103174270862       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7957189329015, 1.0]], [0, [56.02003636311777, 1.0]], [0, [9.098646587954358, 1.0]], [0, [2.0621265053473654, 1.0]], [0, [0.10317427086165831, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.79571893]
bas 1, expnt(s) = [56.02003636]
bas 2, expnt(s) = [9.09864659]
bas 3, expnt(s) = [2.06212651]
bas 4, expnt(s) = [0.10317427]
CPU time:        54.27
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59795719e+02 3.28906264e+02 5.60200364e+01 5.17335837e+01
 9.09864659e+00 1.32357215e+01 2.06212651e+00 4.34761925e+00
 1.03174271e-01 4.59931951e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984712240689629
cond(S) = 11.478632016467106
E1 = -18.990442203733565  E_coul = 4.507690805066633
init E= -14.4827513986669
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303881459361225  LUMO = 7.73213479172133
  mo_energy =
[-4.69914436e+00 -3.03881459e-01  7.73213479e+00  7.84096295e+01
  1.00559210e+03]
E1 = -19.03669039549696  E_coul = 4.5226319064492015
cycle= 1 E= -14.5140584890478  delta_E= -0.0313  |g|= 0.0269  |ddm|= 0.0883
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.030257
diis-c [-9.15483188e-04  1.00000000e+00]
  HOMO = -0.300962289808891  LUMO = 7.74290914439447
  mo_energy =
[-4.69475883e+00 -3.00962290e-01  7.74290914e+00  7.84250034e+01
  1.00559535e+03]
E1 = -19.03635097719982  E_coul = 4.522276040686325
cycle= 2 E= -14.5140749365135  delta_E= -1.64e-05  |g|= 0.00109  |ddm|= 0.00418
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00116256
diis-c [-4.75988760e-07 -3.19208183e-02  1.03192082e+00]
  HOMO = -0.300995114240694  LUMO = 7.74297489123084
  mo_energy =
[-4.69491005e+00 -3.00995114e-01  7.74297489e+00  7.84255125e+01
  1.00559583e+03]
E1 = -19.03634857683163  E_coul = 4.522273594974063
cycle= 3 E= -14.5140749818576  delta_E= -4.53e-08  |g|= 2.43e-05  |ddm|= 0.000225
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.15311e-05
diis-c [-2.45169922e-11  1.27351729e-03 -4.76734866e-02  1.04639997e+00]
  HOMO = -0.300995707968154  LUMO = 7.74298320685231
  mo_energy =
[-4.69490482e+00 -3.00995708e-01  7.74298321e+00  7.84255579e+01
  1.00559590e+03]
E1 = -19.036348971704836  E_coul = 4.522273989817539
cycle= 4 E= -14.5140749818873  delta_E= -2.97e-11  |g|= 1.27e-07  |ddm|= 5.63e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036348971704836  E_coul = 4.522273989817539
  HOMO = -0.300995710799573  LUMO = 7.74298324971018
  mo_energy =
[-4.69490479e+00 -3.00995711e-01  7.74298325e+00  7.84255581e+01
  1.00559590e+03]
E1 = -19.036348974657468  E_coul = 4.522273992770173
Extra cycle  E= -14.5140749818873  delta_E= 3.55e-15  |g|= 6.82e-09  |ddm|= 2.39e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.478632016467106
E1 = -19.036348974657468  E_coul = 4.522273992770173
init E= -14.5140749818873
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300995710935439  LUMO = 7.74298325201401
  mo_energy =
[-4.69490478e+00 -3.00995711e-01  7.74298325e+00  7.84255581e+01
  1.00559590e+03]
E1 = -19.036348974801985  E_coul = 4.52227399291468
cycle= 1 E= -14.5140749818873  delta_E= -1.07e-14  |g|= 3.75e-10  |ddm|= 1.34e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.036348974801985  E_coul = 4.52227399291468
  HOMO = -0.30099571094337  LUMO = 7.74298325213563
  mo_energy =
[-4.69490478e+00 -3.00995711e-01  7.74298325e+00  7.84255581e+01
  1.00559590e+03]
E1 = -19.036348974809176  E_coul = 4.5222739929218685
Extra cycle  E= -14.5140749818873  delta_E= -3.55e-15  |g|= 2.08e-11  |ddm|= 7.61e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59795719e+02 5.60200364e+01 9.09864659e+00 2.06212651e+00
 1.03174271e-01]
grad_E = [ 2.49065214e-05  9.98543297e-04 -1.13306646e-02  5.99418032e-02
 -4.95700313e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.726231736        1
[INPUT] 0    0    [1    /1   ]  50.0142308274        1
[INPUT] 0    0    [1    /1   ]  8.61138376183        1
[INPUT] 0    0    [1    /1   ]  2.00845673745        1
[INPUT] 0    0    [1    /1   ]  0.103138637081       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7262317359366, 1.0]], [0, [50.01423082737676, 1.0]], [0, [8.61138376182669, 1.0]], [0, [2.0084567374486904, 1.0]], [0, [0.10313863708100778, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72623174]
bas 1, expnt(s) = [50.01423083]
bas 2, expnt(s) = [8.61138376]
bas 3, expnt(s) = [2.00845674]
bas 4, expnt(s) = [0.10313864]
CPU time:        56.37
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59726232e+02 3.28880284e+02 5.00142308e+01 4.75154908e+01
 8.61138376e+00 1.27004682e+01 2.00845674e+00 4.26247540e+00
 1.03138637e-01 4.59812809e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9850913660208187
cond(S) = 12.22427389345757
E1 = -18.995446552146287  E_coul = 4.507710403340592
init E= -14.4877361488057
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303672094376951  LUMO = 7.30836206650782
  mo_energy =
[-4.70051370e+00 -3.03672094e-01  7.30836207e+00  7.06085555e+01
  9.84930060e+02]
E1 = -19.033388506637852  E_coul = 4.516995338757138
cycle= 1 E= -14.5163931678807  delta_E= -0.0287  |g|= 0.0247  |ddm|= 0.097
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0297632
diis-c [-8.85845261e-04  1.00000000e+00]
  HOMO = -0.301071833249841  LUMO = 7.31668706415508
  mo_energy =
[-4.69863520e+00 -3.01071833e-01  7.31668706e+00  7.06184480e+01
  9.84926747e+02]
E1 = -19.032876737519693  E_coul = 4.516466463184764
cycle= 2 E= -14.5164102743349  delta_E= -1.71e-05  |g|= 0.00109  |ddm|= 0.00464
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00115795
diis-c [-5.29069095e-07 -3.12265516e-02  1.03122655e+00]
  HOMO = -0.301109758637069  LUMO = 7.31669281688392
  mo_energy =
[-4.69887044e+00 -3.01109759e-01  7.31669282e+00  7.06187765e+01
  9.84927034e+02]
E1 = -19.03286577861863  E_coul = 4.516455452209029
cycle= 3 E= -14.5164103264096  delta_E= -5.21e-08  |g|= 2.83e-05  |ddm|= 0.000258
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.54811e-05
diis-c [-2.15051587e-11  1.15056038e-03 -4.97335931e-02  1.04858303e+00]
  HOMO = -0.301110555881561  LUMO = 7.3167002217939
  mo_energy =
[-4.69886684e+00 -3.01110556e-01  7.31670022e+00  7.06188196e+01
  9.84927110e+02]
E1 = -19.03286602763947  E_coul = 4.5164557011875965
cycle= 4 E= -14.5164103264519  delta_E= -4.23e-11  |g|= 4.69e-08  |ddm|= 7.17e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03286602763947  E_coul = 4.5164557011875965
  HOMO = -0.30111055419235  LUMO = 7.31670028392287
  mo_energy =
[-4.69886676e+00 -3.01110554e-01  7.31670028e+00  7.06188199e+01
  9.84927111e+02]
E1 = -19.032866033661396  E_coul = 4.516455707209524
Extra cycle  E= -14.5164103264519  delta_E= 3.55e-15  |g|= 1.75e-09  |ddm|= 8.78e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59726232e+02 5.00142308e+01 8.61138376e+00 2.00845674e+00
 1.03138637e-01]
E = -14.516410326451872
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.726231736        1
[INPUT] 0    0    [1    /1   ]  50.0142308274        1
[INPUT] 0    0    [1    /1   ]  8.61138376183        1
[INPUT] 0    0    [1    /1   ]  2.00845673745        1
[INPUT] 0    0    [1    /1   ]  0.103138637081       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7262317359366, 1.0]], [0, [50.01423082737676, 1.0]], [0, [8.61138376182669, 1.0]], [0, [2.0084567374486904, 1.0]], [0, [0.10313863708100778, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72623174]
bas 1, expnt(s) = [50.01423083]
bas 2, expnt(s) = [8.61138376]
bas 3, expnt(s) = [2.00845674]
bas 4, expnt(s) = [0.10313864]
CPU time:        56.83
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59726232e+02 3.28880284e+02 5.00142308e+01 4.75154908e+01
 8.61138376e+00 1.27004682e+01 2.00845674e+00 4.26247540e+00
 1.03138637e-01 4.59812809e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9850913660208187
cond(S) = 12.22427389345757
E1 = -18.995446552146287  E_coul = 4.507710403340592
init E= -14.4877361488057
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303672094376951  LUMO = 7.30836206650782
  mo_energy =
[-4.70051370e+00 -3.03672094e-01  7.30836207e+00  7.06085555e+01
  9.84930060e+02]
E1 = -19.033388506637852  E_coul = 4.516995338757138
cycle= 1 E= -14.5163931678807  delta_E= -0.0287  |g|= 0.0247  |ddm|= 0.097
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0297632
diis-c [-8.85845261e-04  1.00000000e+00]
  HOMO = -0.301071833249841  LUMO = 7.31668706415508
  mo_energy =
[-4.69863520e+00 -3.01071833e-01  7.31668706e+00  7.06184480e+01
  9.84926747e+02]
E1 = -19.032876737519693  E_coul = 4.516466463184764
cycle= 2 E= -14.5164102743349  delta_E= -1.71e-05  |g|= 0.00109  |ddm|= 0.00464
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00115795
diis-c [-5.29069095e-07 -3.12265516e-02  1.03122655e+00]
  HOMO = -0.301109758637069  LUMO = 7.31669281688392
  mo_energy =
[-4.69887044e+00 -3.01109759e-01  7.31669282e+00  7.06187765e+01
  9.84927034e+02]
E1 = -19.03286577861863  E_coul = 4.516455452209029
cycle= 3 E= -14.5164103264096  delta_E= -5.21e-08  |g|= 2.83e-05  |ddm|= 0.000258
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.54811e-05
diis-c [-2.15051587e-11  1.15056038e-03 -4.97335931e-02  1.04858303e+00]
  HOMO = -0.301110555881561  LUMO = 7.3167002217939
  mo_energy =
[-4.69886684e+00 -3.01110556e-01  7.31670022e+00  7.06188196e+01
  9.84927110e+02]
E1 = -19.03286602763947  E_coul = 4.5164557011875965
cycle= 4 E= -14.5164103264519  delta_E= -4.23e-11  |g|= 4.69e-08  |ddm|= 7.17e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03286602763947  E_coul = 4.5164557011875965
  HOMO = -0.30111055419235  LUMO = 7.31670028392287
  mo_energy =
[-4.69886676e+00 -3.01110554e-01  7.31670028e+00  7.06188199e+01
  9.84927111e+02]
E1 = -19.032866033661396  E_coul = 4.516455707209524
Extra cycle  E= -14.5164103264519  delta_E= 3.55e-15  |g|= 1.75e-09  |ddm|= 8.78e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.22427389345757
E1 = -19.032866033661396  E_coul = 4.516455707209524
init E= -14.5164103264519
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.301110554123734  LUMO = 7.31670028610038
  mo_energy =
[-4.69886676e+00 -3.01110554e-01  7.31670029e+00  7.06188199e+01
  9.84927111e+02]
E1 = -19.032866033877017  E_coul = 4.516455707425143
cycle= 1 E= -14.5164103264519  delta_E= -1.78e-15  |g|= 8.49e-11  |ddm|= 3.27e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.032866033877017  E_coul = 4.516455707425143
  HOMO = -0.30111055412168  LUMO = 7.31670028618171
  mo_energy =
[-4.69886676e+00 -3.01110554e-01  7.31670029e+00  7.06188199e+01
  9.84927111e+02]
E1 = -19.03286603388518  E_coul = 4.516455707433299
Extra cycle  E= -14.5164103264519  delta_E= -8.88e-15  |g|= 4.2e-12  |ddm|= 1.3e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59726232e+02 5.00142308e+01 8.61138376e+00 2.00845674e+00
 1.03138637e-01]
grad_E = [ 3.88924284e-05  3.71769644e-04 -9.05560877e-03  5.35333814e-02
 -5.03620066e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.569778012        1
[INPUT] 0    0    [1    /1   ]  37.4308521689        1
[INPUT] 0    0    [1    /1   ]  1.63407052874        1
[INPUT] 0    0    [1    /1   ]  0.655218936714       1
[INPUT] 0    0    [1    /1   ]  0.0889165260105      1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.5697780119095, 1.0]], [0, [37.430852168878815, 1.0]], [0, [1.6340705287426056, 1.0]], [0, [0.6552189367143795, 1.0]], [0, [0.0889165260105438, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.56977801]
bas 1, expnt(s) = [37.43085217]
bas 2, expnt(s) = [1.63407053]
bas 3, expnt(s) = [0.65521894]
bas 4, expnt(s) = [0.08891653]
CPU time:        58.94
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59569778e+02 3.28821787e+02 3.74308522e+01 3.82329061e+01
 1.63407053e+00 3.65147324e+00 6.55218937e-01 1.83994506e+00
 8.89165260e-02 4.11388255e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.8874369251124836
cond(S) = 22.675289594967534
E1 = -13.23407339094739  E_coul = 4.009186776418272
init E= -9.22488661452912
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.315299930587217  LUMO = 1.08766174746097
  mo_energy =
[-3.90739541e+00 -3.15299931e-01  1.08766175e+00  2.96111940e+01
  9.24375154e+02]
E1 = -16.347688387466167  E_coul = 3.851671620644164
cycle= 1 E= -12.496016766822  delta_E= -3.27  |g|= 0.268  |ddm|= 0.795
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.377374
diis-c [-0.14241077  1.        ]
  HOMO = -0.280291490420666  LUMO = 1.13475445123908
  mo_energy =
[-4.04280602e+00 -2.80291490e-01  1.13475445e+00  2.92821177e+01
  9.23052663e+02]
E1 = -16.310311694410444  E_coul = 3.8122611118201255
cycle= 2 E= -12.4980505825903  delta_E= -0.00203  |g|= 0.0102  |ddm|= 0.159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0103096
diis-c [-6.62625356e-05 -1.70546086e-02  1.01705461e+00]
  HOMO = -0.282740622625042  LUMO = 1.1298469788828
  mo_energy =
[-4.06050534e+00 -2.82740623e-01  1.12984698e+00  2.92554932e+01
  9.23003147e+02]
E1 = -16.30488194147045  E_coul = 3.8068008663404216
cycle= 3 E= -12.49808107513  delta_E= -3.05e-05  |g|= 0.00125  |ddm|= 0.0255
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00117022
diis-c [-6.89250410e-07  2.51226179e-03 -1.11379348e-01  1.10886709e+00]
  HOMO = -0.283077532298984  LUMO = 1.12913340383105
  mo_energy =
[-4.06281055e+00 -2.83077532e-01  1.12913340e+00  2.92529161e+01
  9.23000053e+02]
E1 = -16.30403479090297  E_coul = 3.8059530818150673
cycle= 4 E= -12.4980817090879  delta_E= -6.34e-07  |g|= 9.04e-05  |ddm|= 0.00407
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.43155e-05
diis-c [-1.02059515e-10 -2.38750643e-05  1.94734675e-03 -8.64319980e-02
  1.08450853e+00]
  HOMO = -0.283103170301968  LUMO = 1.12907812270302
  mo_energy =
[-4.06299219e+00 -2.83103170e-01  1.12907812e+00  2.92527051e+01
  9.22999805e+02]
E1 = -16.30396809579914  E_coul = 3.8058863833756345
cycle= 5 E= -12.4980817124235  delta_E= -3.34e-09  |g|= 2.1e-06  |ddm|= 0.000321
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.19071e-06
diis-c [-1.33555712e-14  1.76572630e-06 -1.87431643e-04  1.02519070e-02
 -1.35579003e-01  1.12551276e+00]
  HOMO = -0.283103397411749  LUMO = 1.12907749060557
  mo_energy =
[-4.06299466e+00 -2.83103397e-01  1.12907749e+00  2.92527008e+01
  9.22999799e+02]
E1 = -16.303967267951737  E_coul = 3.8058855555275244
cycle= 6 E= -12.4980817124242  delta_E= -7.09e-13  |g|= 1.17e-08  |ddm|= 4.7e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -16.303967267951737  E_coul = 3.8058855555275244
  HOMO = -0.283103400556192  LUMO = 1.12907748479275
  mo_energy =
[-4.06299468e+00 -2.83103401e-01  1.12907748e+00  2.92527007e+01
  9.22999799e+02]
E1 = -16.30396726077018  E_coul = 3.805885548345974
Extra cycle  E= -12.4980817124242  delta_E= 7.11e-15  |g|= 1.85e-09  |ddm|= 3.5e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [6.59569778e+02 3.74308522e+01 1.63407053e+00 6.55218937e-01
 8.89165260e-02]
E = -12.498081712424206
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.569778012        1
[INPUT] 0    0    [1    /1   ]  37.4308521689        1
[INPUT] 0    0    [1    /1   ]  1.63407052874        1
[INPUT] 0    0    [1    /1   ]  0.655218936714       1
[INPUT] 0    0    [1    /1   ]  0.0889165260105      1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.5697780119095, 1.0]], [0, [37.430852168878815, 1.0]], [0, [1.6340705287426056, 1.0]], [0, [0.6552189367143795, 1.0]], [0, [0.0889165260105438, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.56977801]
bas 1, expnt(s) = [37.43085217]
bas 2, expnt(s) = [1.63407053]
bas 3, expnt(s) = [0.65521894]
bas 4, expnt(s) = [0.08891653]
CPU time:        59.43
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59569778e+02 3.28821787e+02 3.74308522e+01 3.82329061e+01
 1.63407053e+00 3.65147324e+00 6.55218937e-01 1.83994506e+00
 8.89165260e-02 4.11388255e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.8874369251124836
cond(S) = 22.675289594967534
E1 = -13.23407339094739  E_coul = 4.009186776418272
init E= -9.22488661452912
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.315299930587217  LUMO = 1.08766174746097
  mo_energy =
[-3.90739541e+00 -3.15299931e-01  1.08766175e+00  2.96111940e+01
  9.24375154e+02]
E1 = -16.347688387466167  E_coul = 3.851671620644164
cycle= 1 E= -12.496016766822  delta_E= -3.27  |g|= 0.268  |ddm|= 0.795
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.377374
diis-c [-0.14241077  1.        ]
  HOMO = -0.280291490420666  LUMO = 1.13475445123908
  mo_energy =
[-4.04280602e+00 -2.80291490e-01  1.13475445e+00  2.92821177e+01
  9.23052663e+02]
E1 = -16.310311694410444  E_coul = 3.8122611118201255
cycle= 2 E= -12.4980505825903  delta_E= -0.00203  |g|= 0.0102  |ddm|= 0.159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0103096
diis-c [-6.62625356e-05 -1.70546086e-02  1.01705461e+00]
  HOMO = -0.282740622625042  LUMO = 1.1298469788828
  mo_energy =
[-4.06050534e+00 -2.82740623e-01  1.12984698e+00  2.92554932e+01
  9.23003147e+02]
E1 = -16.30488194147045  E_coul = 3.8068008663404216
cycle= 3 E= -12.49808107513  delta_E= -3.05e-05  |g|= 0.00125  |ddm|= 0.0255
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00117022
diis-c [-6.89250410e-07  2.51226179e-03 -1.11379348e-01  1.10886709e+00]
  HOMO = -0.283077532298984  LUMO = 1.12913340383105
  mo_energy =
[-4.06281055e+00 -2.83077532e-01  1.12913340e+00  2.92529161e+01
  9.23000053e+02]
E1 = -16.30403479090297  E_coul = 3.8059530818150673
cycle= 4 E= -12.4980817090879  delta_E= -6.34e-07  |g|= 9.04e-05  |ddm|= 0.00407
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.43155e-05
diis-c [-1.02059515e-10 -2.38750643e-05  1.94734675e-03 -8.64319980e-02
  1.08450853e+00]
  HOMO = -0.283103170301968  LUMO = 1.12907812270302
  mo_energy =
[-4.06299219e+00 -2.83103170e-01  1.12907812e+00  2.92527051e+01
  9.22999805e+02]
E1 = -16.30396809579914  E_coul = 3.8058863833756345
cycle= 5 E= -12.4980817124235  delta_E= -3.34e-09  |g|= 2.1e-06  |ddm|= 0.000321
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.19071e-06
diis-c [-1.33555712e-14  1.76572630e-06 -1.87431643e-04  1.02519070e-02
 -1.35579003e-01  1.12551276e+00]
  HOMO = -0.283103397411749  LUMO = 1.12907749060557
  mo_energy =
[-4.06299466e+00 -2.83103397e-01  1.12907749e+00  2.92527008e+01
  9.22999799e+02]
E1 = -16.303967267951737  E_coul = 3.8058855555275244
cycle= 6 E= -12.4980817124242  delta_E= -7.09e-13  |g|= 1.17e-08  |ddm|= 4.7e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -16.303967267951737  E_coul = 3.8058855555275244
  HOMO = -0.283103400556192  LUMO = 1.12907748479275
  mo_energy =
[-4.06299468e+00 -2.83103401e-01  1.12907748e+00  2.92527007e+01
  9.22999799e+02]
E1 = -16.30396726077018  E_coul = 3.805885548345974
Extra cycle  E= -12.4980817124242  delta_E= 7.11e-15  |g|= 1.85e-09  |ddm|= 3.5e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.675289594967534
E1 = -16.30396726077018  E_coul = 3.805885548345974
init E= -12.4980817124242
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.283103400987136  LUMO = 1.12907748384269
  mo_energy =
[-4.06299468e+00 -2.83103401e-01  1.12907748e+00  2.92527007e+01
  9.22999799e+02]
E1 = -16.303967259616105  E_coul = 3.8058855471918953
cycle= 1 E= -12.4980817124242  delta_E= -3.55e-15  |g|= 2.96e-10  |ddm|= 5.59e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -16.303967259616105  E_coul = 3.8058855471918953
  HOMO = -0.28310340105649  LUMO = 1.1290774836901
  mo_energy =
[-4.06299468e+00 -2.83103401e-01  1.12907748e+00  2.92527007e+01
  9.22999799e+02]
E1 = -16.303967259430955  E_coul = 3.805885547006747
Extra cycle  E= -12.4980817124242  delta_E= 1.78e-15  |g|= 4.74e-11  |ddm|= 8.96e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59569778e+02 3.74308522e+01 1.63407053e+00 6.55218937e-01
 8.89165260e-02]
grad_E = [ 4.93040887e-06  4.75706408e-02 -1.58351578e+00 -5.01188347e-01
 -1.92498832e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:22:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.688685617        1
[INPUT] 0    0    [1    /1   ]  46.9944431134        1
[INPUT] 0    0    [1    /1   ]  6.93695232736        1
[INPUT] 0    0    [1    /1   ]  1.68370366472        1
[INPUT] 0    0    [1    /1   ]  0.0997255826508      1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.6886856168506, 1.0]], [0, [46.994443113443324, 1.0]], [0, [6.936952327364276, 1.0]], [0, [1.6837036647174624, 1.0]], [0, [0.09972558265084647, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.68868562]
bas 1, expnt(s) = [46.99444311]
bas 2, expnt(s) = [6.93695233]
bas 3, expnt(s) = [1.68370366]
bas 4, expnt(s) = [0.09972558]
CPU time:        61.66
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59688686e+02 3.28866246e+02 4.69944431e+01 4.53471403e+01
 6.93695233e+00 1.07991993e+01 1.68370366e+00 3.73434353e+00
 9.97255827e-02 4.48352877e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984880650408312
cond(S) = 11.581434240747878
E1 = -18.94639096991003  E_coul = 4.482826638648089
init E= -14.4635643312619
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304514805071593  LUMO = 5.4303618856447
  mo_energy =
[-4.70340229e+00 -3.04514805e-01  5.43036189e+00  6.10664805e+01
  9.69796649e+02]
E1 = -18.95148190721628  E_coul = 4.452082584620717
cycle= 1 E= -14.4993993225956  delta_E= -0.0358  |g|= 0.0337  |ddm|= 0.171
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0363531
diis-c [-0.00132155  1.        ]
  HOMO = -0.303522647185681  LUMO = 5.42708444097399
  mo_energy =
[-4.72015601e+00 -3.03522647e-01  5.42708444e+00  6.10337358e+01
  9.69718853e+02]
E1 = -18.949703356863754  E_coul = 4.450260862488549
cycle= 2 E= -14.4994424943752  delta_E= -4.32e-05  |g|= 0.00173  |ddm|= 0.00923
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00175788
diis-c [-1.61328139e-06 -3.46073529e-02  1.03460735e+00]
  HOMO = -0.303611211314406  LUMO = 5.42677846664459
  mo_energy =
[-4.72101127e+00 -3.03611211e-01  5.42677847e+00  6.10332311e+01
  9.69717782e+02]
E1 = -18.949622898424252  E_coul = 4.450180214329304
cycle= 3 E= -14.4994426840949  delta_E= -1.9e-07  |g|= 6.16e-05  |ddm|= 0.000619
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.43892e-05
diis-c [-1.04281016e-10  1.65566303e-03 -6.19970973e-02  1.06034143e+00]
  HOMO = -0.303613822870561  LUMO = 5.42678148095819
  mo_energy =
[-4.72101834e+00 -3.03613823e-01  5.42678148e+00  6.10332900e+01
  9.69717899e+02]
E1 = -18.94962134435673  E_coul = 4.450178659989773
cycle= 4 E= -14.499442684367  delta_E= -2.72e-10  |g|= 3.19e-07  |ddm|= 2.3e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.94962134435673  E_coul = 4.450178659989773
  HOMO = -0.303613828561025  LUMO = 5.42678159847782
  mo_energy =
[-4.72101818e+00 -3.03613829e-01  5.42678160e+00  6.10332906e+01
  9.69717901e+02]
E1 = -18.949621357617033  E_coul = 4.450178673250073
Extra cycle  E= -14.499442684367  delta_E= -7.11e-15  |g|= 2.06e-08  |ddm|= 6.75e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59688686e+02 4.69944431e+01 6.93695233e+00 1.68370366e+00
 9.97255827e-02]
E = -14.499442684366961
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.688685617        1
[INPUT] 0    0    [1    /1   ]  46.9944431134        1
[INPUT] 0    0    [1    /1   ]  6.93695232736        1
[INPUT] 0    0    [1    /1   ]  1.68370366472        1
[INPUT] 0    0    [1    /1   ]  0.0997255826508      1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.6886856168506, 1.0]], [0, [46.994443113443324, 1.0]], [0, [6.936952327364276, 1.0]], [0, [1.6837036647174624, 1.0]], [0, [0.09972558265084647, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.68868562]
bas 1, expnt(s) = [46.99444311]
bas 2, expnt(s) = [6.93695233]
bas 3, expnt(s) = [1.68370366]
bas 4, expnt(s) = [0.09972558]
CPU time:        62.16
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59688686e+02 3.28866246e+02 4.69944431e+01 4.53471403e+01
 6.93695233e+00 1.07991993e+01 1.68370366e+00 3.73434353e+00
 9.97255827e-02 4.48352877e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984880650408312
cond(S) = 11.581434240747878
E1 = -18.94639096991003  E_coul = 4.482826638648089
init E= -14.4635643312619
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304514805071593  LUMO = 5.4303618856447
  mo_energy =
[-4.70340229e+00 -3.04514805e-01  5.43036189e+00  6.10664805e+01
  9.69796649e+02]
E1 = -18.95148190721628  E_coul = 4.452082584620717
cycle= 1 E= -14.4993993225956  delta_E= -0.0358  |g|= 0.0337  |ddm|= 0.171
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0363531
diis-c [-0.00132155  1.        ]
  HOMO = -0.303522647185681  LUMO = 5.42708444097399
  mo_energy =
[-4.72015601e+00 -3.03522647e-01  5.42708444e+00  6.10337358e+01
  9.69718853e+02]
E1 = -18.949703356863754  E_coul = 4.450260862488549
cycle= 2 E= -14.4994424943752  delta_E= -4.32e-05  |g|= 0.00173  |ddm|= 0.00923
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00175788
diis-c [-1.61328139e-06 -3.46073529e-02  1.03460735e+00]
  HOMO = -0.303611211314406  LUMO = 5.42677846664459
  mo_energy =
[-4.72101127e+00 -3.03611211e-01  5.42677847e+00  6.10332311e+01
  9.69717782e+02]
E1 = -18.949622898424252  E_coul = 4.450180214329304
cycle= 3 E= -14.4994426840949  delta_E= -1.9e-07  |g|= 6.16e-05  |ddm|= 0.000619
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.43892e-05
diis-c [-1.04281016e-10  1.65566303e-03 -6.19970973e-02  1.06034143e+00]
  HOMO = -0.303613822870561  LUMO = 5.42678148095819
  mo_energy =
[-4.72101834e+00 -3.03613823e-01  5.42678148e+00  6.10332900e+01
  9.69717899e+02]
E1 = -18.94962134435673  E_coul = 4.450178659989773
cycle= 4 E= -14.499442684367  delta_E= -2.72e-10  |g|= 3.19e-07  |ddm|= 2.3e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.94962134435673  E_coul = 4.450178659989773
  HOMO = -0.303613828561025  LUMO = 5.42678159847782
  mo_energy =
[-4.72101818e+00 -3.03613829e-01  5.42678160e+00  6.10332906e+01
  9.69717901e+02]
E1 = -18.949621357617033  E_coul = 4.450178673250073
Extra cycle  E= -14.499442684367  delta_E= -7.11e-15  |g|= 2.06e-08  |ddm|= 6.75e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.581434240747878
E1 = -18.949621357617033  E_coul = 4.450178673250073
init E= -14.499442684367
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30361382891987  LUMO = 5.426781604449
  mo_energy =
[-4.72101818e+00 -3.03613829e-01  5.42678160e+00  6.10332907e+01
  9.69717901e+02]
E1 = -18.949621358139794  E_coul = 4.45017867377284
cycle= 1 E= -14.499442684367  delta_E= 7.11e-15  |g|= 1.36e-09  |ddm|= 4.91e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.949621358139794  E_coul = 4.45017867377284
  HOMO = -0.30361382895179  LUMO = 5.42678160475298
  mo_energy =
[-4.72101818e+00 -3.03613829e-01  5.42678160e+00  6.10332907e+01
  9.69717901e+02]
E1 = -18.949621358157714  E_coul = 4.450178673790755
Extra cycle  E= -14.499442684367  delta_E= -3.55e-15  |g|= 9.2e-11  |ddm|= 3.59e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59688686e+02 4.69944431e+01 6.93695233e+00 1.68370366e+00
 9.97255827e-02]
grad_E = [ 3.63410384e-05  2.90685953e-03 -3.74481074e-02  3.67134392e-02
 -2.07499829e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.72281846         1
[INPUT] 0    0    [1    /1   ]  49.7397053165        1
[INPUT] 0    0    [1    /1   ]  8.45916307994        1
[INPUT] 0    0    [1    /1   ]  1.97893380019        1
[INPUT] 0    0    [1    /1   ]  0.102828360134       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.722818460402, 1.0]], [0, [49.739705316495225, 1.0]], [0, [8.459163079935399, 1.0]], [0, [1.9789338001936865, 1.0]], [0, [0.10282836013445842, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72281846]
bas 1, expnt(s) = [49.73970532]
bas 2, expnt(s) = [8.45916308]
bas 3, expnt(s) = [1.9789338]
bas 4, expnt(s) = [0.10282836]
CPU time:        64.36
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722818e+02 3.28879008e+02 4.97397053e+01 4.73197488e+01
 8.45916308e+00 1.25317168e+01 1.97893380e+00 4.21539692e+00
 1.02828360e-01 4.58774961e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9852154330979945
cond(S) = 12.154657946716421
E1 = -18.99345606921939  E_coul = 4.505247925856292
init E= -14.4882081433631
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303767666997798  LUMO = 7.13156145235971
  mo_energy =
[-4.70171344e+00 -3.03767667e-01  7.13156145e+00  6.97439953e+01
  9.83542311e+02]
E1 = -19.02722910027623  E_coul = 4.510685082400729
cycle= 1 E= -14.5165440178755  delta_E= -0.0283  |g|= 0.0249  |ddm|= 0.103
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0296601
diis-c [-8.79722657e-04  1.00000000e+00]
  HOMO = -0.301346977486799  LUMO = 7.1384905246594
  mo_energy =
[-4.70159119e+00 -3.01346977e-01  7.13849052e+00  6.97496659e+01
  9.83532504e+02]
E1 = -19.026621963919354  E_coul = 4.510059600879793
cycle= 2 E= -14.5165623630396  delta_E= -1.83e-05  |g|= 0.00112  |ddm|= 0.00493
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00118791
diis-c [-5.74535385e-07 -3.18296747e-02  1.03182967e+00]
  HOMO = -0.301388096893817  LUMO = 7.13846841653356
  mo_energy =
[-4.70187328e+00 -3.01388097e-01  7.13846842e+00  6.97499179e+01
  9.83532681e+02]
E1 = -19.0266066343942  E_coul = 4.51004421373287
cycle= 3 E= -14.5165624206613  delta_E= -5.76e-08  |g|= 2.97e-05  |ddm|= 0.000278
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.72848e-05
diis-c [-2.13350020e-11  1.18160817e-03 -5.03017823e-02  1.04912017e+00]
  HOMO = -0.301388969586265  LUMO = 7.13847559165333
  mo_energy =
[-4.70187014e+00 -3.01388970e-01  7.13847559e+00  6.97499617e+01
  9.83532760e+02]
E1 = -19.026606819431034  E_coul = 4.510044398721714
cycle= 4 E= -14.5165624207093  delta_E= -4.8e-11  |g|= 5.35e-08  |ddm|= 7.79e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.026606819431034  E_coul = 4.510044398721714
  HOMO = -0.30138896769353  LUMO = 7.13847566263093
  mo_energy =
[-4.70187004e+00 -3.01388968e-01  7.13847566e+00  6.97499620e+01
  9.83532760e+02]
E1 = -19.026606826594907  E_coul = 4.51004440588559
Extra cycle  E= -14.5165624207093  delta_E= 3.55e-15  |g|= 2.31e-09  |ddm|= 1.06e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722818e+02 4.97397053e+01 8.45916308e+00 1.97893380e+00
 1.02828360e-01]
E = -14.516562420709317
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.72281846         1
[INPUT] 0    0    [1    /1   ]  49.7397053165        1
[INPUT] 0    0    [1    /1   ]  8.45916307994        1
[INPUT] 0    0    [1    /1   ]  1.97893380019        1
[INPUT] 0    0    [1    /1   ]  0.102828360134       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.722818460402, 1.0]], [0, [49.739705316495225, 1.0]], [0, [8.459163079935399, 1.0]], [0, [1.9789338001936865, 1.0]], [0, [0.10282836013445842, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72281846]
bas 1, expnt(s) = [49.73970532]
bas 2, expnt(s) = [8.45916308]
bas 3, expnt(s) = [1.9789338]
bas 4, expnt(s) = [0.10282836]
CPU time:        64.88
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722818e+02 3.28879008e+02 4.97397053e+01 4.73197488e+01
 8.45916308e+00 1.25317168e+01 1.97893380e+00 4.21539692e+00
 1.02828360e-01 4.58774961e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9852154330979945
cond(S) = 12.154657946716421
E1 = -18.99345606921939  E_coul = 4.505247925856292
init E= -14.4882081433631
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303767666997798  LUMO = 7.13156145235971
  mo_energy =
[-4.70171344e+00 -3.03767667e-01  7.13156145e+00  6.97439953e+01
  9.83542311e+02]
E1 = -19.02722910027623  E_coul = 4.510685082400729
cycle= 1 E= -14.5165440178755  delta_E= -0.0283  |g|= 0.0249  |ddm|= 0.103
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0296601
diis-c [-8.79722657e-04  1.00000000e+00]
  HOMO = -0.301346977486799  LUMO = 7.1384905246594
  mo_energy =
[-4.70159119e+00 -3.01346977e-01  7.13849052e+00  6.97496659e+01
  9.83532504e+02]
E1 = -19.026621963919354  E_coul = 4.510059600879793
cycle= 2 E= -14.5165623630396  delta_E= -1.83e-05  |g|= 0.00112  |ddm|= 0.00493
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00118791
diis-c [-5.74535385e-07 -3.18296747e-02  1.03182967e+00]
  HOMO = -0.301388096893817  LUMO = 7.13846841653356
  mo_energy =
[-4.70187328e+00 -3.01388097e-01  7.13846842e+00  6.97499179e+01
  9.83532681e+02]
E1 = -19.0266066343942  E_coul = 4.51004421373287
cycle= 3 E= -14.5165624206613  delta_E= -5.76e-08  |g|= 2.97e-05  |ddm|= 0.000278
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.72848e-05
diis-c [-2.13350020e-11  1.18160817e-03 -5.03017823e-02  1.04912017e+00]
  HOMO = -0.301388969586265  LUMO = 7.13847559165333
  mo_energy =
[-4.70187014e+00 -3.01388970e-01  7.13847559e+00  6.97499617e+01
  9.83532760e+02]
E1 = -19.026606819431034  E_coul = 4.510044398721714
cycle= 4 E= -14.5165624207093  delta_E= -4.8e-11  |g|= 5.35e-08  |ddm|= 7.79e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.026606819431034  E_coul = 4.510044398721714
  HOMO = -0.30138896769353  LUMO = 7.13847566263093
  mo_energy =
[-4.70187004e+00 -3.01388968e-01  7.13847566e+00  6.97499620e+01
  9.83532760e+02]
E1 = -19.026606826594907  E_coul = 4.51004440588559
Extra cycle  E= -14.5165624207093  delta_E= 3.55e-15  |g|= 2.31e-09  |ddm|= 1.06e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.154657946716421
E1 = -19.026606826594907  E_coul = 4.51004440588559
init E= -14.5165624207093
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.301388967615369  LUMO = 7.13847566521247
  mo_energy =
[-4.70187004e+00 -3.01388968e-01  7.13847567e+00  6.97499620e+01
  9.83532760e+02]
E1 = -19.026606826859094  E_coul = 4.510044406149771
cycle= 1 E= -14.5165624207093  delta_E= -7.11e-15  |g|= 1.15e-10  |ddm|= 4.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.026606826859094  E_coul = 4.510044406149771
  HOMO = -0.30138896761307  LUMO = 7.13847566531215
  mo_energy =
[-4.70187004e+00 -3.01388968e-01  7.13847567e+00  6.97499620e+01
  9.83532760e+02]
E1 = -19.026606826869326  E_coul = 4.510044406160001
Extra cycle  E= -14.5165624207093  delta_E=    0  |g|= 5.84e-12  |ddm|= 1.7e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722818e+02 4.97397053e+01 8.45916308e+00 1.97893380e+00
 1.02828360e-01]
grad_E = [ 3.87627713e-05  5.18837209e-04 -1.04546778e-02  5.02098582e-02
 -6.42758765e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.713835313        1
[INPUT] 0    0    [1    /1   ]  48.9642082773        1
[INPUT] 0    0    [1    /1   ]  8.45500108601        1
[INPUT] 0    0    [1    /1   ]  1.940064389          1
[INPUT] 0    0    [1    /1   ]  0.103360898041       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7138353130618, 1.0]], [0, [48.96420827734482, 1.0]], [0, [8.455001086009782, 1.0]], [0, [1.9400643890035607, 1.0]], [0, [0.1033608980405853, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.71383531]
bas 1, expnt(s) = [48.96420828]
bas 2, expnt(s) = [8.45500109]
bas 3, expnt(s) = [1.94006439]
bas 4, expnt(s) = [0.1033609]
CPU time:        67.04
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59713835e+02 3.28875649e+02 4.89642083e+01 4.67653379e+01
 8.45500109e+00 1.25270922e+01 1.94006439e+00 4.15314537e+00
 1.03360898e-01 4.60555772e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985536020000409
cond(S) = 12.052442805881306
E1 = -19.00035621695532  E_coul = 4.508398167619569
init E= -14.4919580493358
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303208644858853  LUMO = 7.02532441071152
  mo_energy =
[-4.70156985e+00 -3.03208645e-01  7.02532441e+00  6.88180962e+01
  9.80980578e+02]
E1 = -19.024873215857433  E_coul = 4.506640502688647
cycle= 1 E= -14.5182327131688  delta_E= -0.0263  |g|= 0.0201  |ddm|= 0.106
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0255613
diis-c [-6.53380126e-04  1.00000000e+00]
  HOMO = -0.301019669416722  LUMO = 7.02919001443787
  mo_energy =
[-4.70478369e+00 -3.01019669e-01  7.02919001e+00  6.88148297e+01
  9.80961963e+02]
E1 = -19.0239670196436  E_coul = 4.5057190047444795
cycle= 2 E= -14.5182480148991  delta_E= -1.53e-05  |g|= 0.000936  |ddm|= 0.00492
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00101504
diis-c [-5.62804341e-07 -2.74966960e-02  1.02749670e+00]
  HOMO = -0.301062878502821  LUMO = 7.02904558233743
  mo_energy =
[-4.70521433e+00 -3.01062879e-01  7.02904558e+00  6.88146214e+01
  9.80961586e+02]
E1 = -19.023936711621076  E_coul = 4.505688648284311
cycle= 3 E= -14.5182480633368  delta_E= -4.84e-08  |g|= 3.05e-05  |ddm|= 0.00027
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.79034e-05
diis-c [-5.00670536e-11  7.88496531e-04 -4.95283286e-02  1.04873983e+00]
  HOMO = -0.301063958252668  LUMO = 7.02904959387204
  mo_energy =
[-4.70521613e+00 -3.01063958e-01  7.02904959e+00  6.88146531e+01
  9.80961645e+02]
E1 = -19.023936492619463  E_coul = 4.505688429229547
cycle= 4 E= -14.5182480633899  delta_E= -5.32e-11  |g|= 1.21e-07  |ddm|= 8.58e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.023936492619463  E_coul = 4.505688429229547
  HOMO = -0.301063949113278  LUMO = 7.02904976409071
  mo_energy =
[-4.70521587e+00 -3.01063949e-01  7.02904976e+00  6.88146538e+01
  9.80961646e+02]
E1 = -19.023936511472268  E_coul = 4.505688448082353
Extra cycle  E= -14.5182480633899  delta_E=    0  |g|= 5.02e-09  |ddm|= 4.07e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59713835e+02 4.89642083e+01 8.45500109e+00 1.94006439e+00
 1.03360898e-01]
E = -14.518248063389915
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.713835313        1
[INPUT] 0    0    [1    /1   ]  48.9642082773        1
[INPUT] 0    0    [1    /1   ]  8.45500108601        1
[INPUT] 0    0    [1    /1   ]  1.940064389          1
[INPUT] 0    0    [1    /1   ]  0.103360898041       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7138353130618, 1.0]], [0, [48.96420827734482, 1.0]], [0, [8.455001086009782, 1.0]], [0, [1.9400643890035607, 1.0]], [0, [0.1033608980405853, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.71383531]
bas 1, expnt(s) = [48.96420828]
bas 2, expnt(s) = [8.45500109]
bas 3, expnt(s) = [1.94006439]
bas 4, expnt(s) = [0.1033609]
CPU time:        67.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59713835e+02 3.28875649e+02 4.89642083e+01 4.67653379e+01
 8.45500109e+00 1.25270922e+01 1.94006439e+00 4.15314537e+00
 1.03360898e-01 4.60555772e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985536020000409
cond(S) = 12.052442805881306
E1 = -19.00035621695532  E_coul = 4.508398167619569
init E= -14.4919580493358
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303208644858853  LUMO = 7.02532441071152
  mo_energy =
[-4.70156985e+00 -3.03208645e-01  7.02532441e+00  6.88180962e+01
  9.80980578e+02]
E1 = -19.024873215857433  E_coul = 4.506640502688647
cycle= 1 E= -14.5182327131688  delta_E= -0.0263  |g|= 0.0201  |ddm|= 0.106
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0255613
diis-c [-6.53380126e-04  1.00000000e+00]
  HOMO = -0.301019669416722  LUMO = 7.02919001443787
  mo_energy =
[-4.70478369e+00 -3.01019669e-01  7.02919001e+00  6.88148297e+01
  9.80961963e+02]
E1 = -19.0239670196436  E_coul = 4.5057190047444795
cycle= 2 E= -14.5182480148991  delta_E= -1.53e-05  |g|= 0.000936  |ddm|= 0.00492
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00101504
diis-c [-5.62804341e-07 -2.74966960e-02  1.02749670e+00]
  HOMO = -0.301062878502821  LUMO = 7.02904558233743
  mo_energy =
[-4.70521433e+00 -3.01062879e-01  7.02904558e+00  6.88146214e+01
  9.80961586e+02]
E1 = -19.023936711621076  E_coul = 4.505688648284311
cycle= 3 E= -14.5182480633368  delta_E= -4.84e-08  |g|= 3.05e-05  |ddm|= 0.00027
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.79034e-05
diis-c [-5.00670536e-11  7.88496531e-04 -4.95283286e-02  1.04873983e+00]
  HOMO = -0.301063958252668  LUMO = 7.02904959387204
  mo_energy =
[-4.70521613e+00 -3.01063958e-01  7.02904959e+00  6.88146531e+01
  9.80961645e+02]
E1 = -19.023936492619463  E_coul = 4.505688429229547
cycle= 4 E= -14.5182480633899  delta_E= -5.32e-11  |g|= 1.21e-07  |ddm|= 8.58e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.023936492619463  E_coul = 4.505688429229547
  HOMO = -0.301063949113278  LUMO = 7.02904976409071
  mo_energy =
[-4.70521587e+00 -3.01063949e-01  7.02904976e+00  6.88146538e+01
  9.80961646e+02]
E1 = -19.023936511472268  E_coul = 4.505688448082353
Extra cycle  E= -14.5182480633899  delta_E=    0  |g|= 5.02e-09  |ddm|= 4.07e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.052442805881306
E1 = -19.023936511472268  E_coul = 4.505688448082353
init E= -14.5182480633899
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.301063948737398  LUMO = 7.02904976990822
  mo_energy =
[-4.70521586e+00 -3.01063949e-01  7.02904977e+00  6.88146538e+01
  9.80961646e+02]
E1 = -19.023936512166596  E_coul = 4.5056884487766915
cycle= 1 E= -14.5182480633899  delta_E= 1.07e-14  |g|= 2.31e-10  |ddm|= 1.75e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.023936512166596  E_coul = 4.5056884487766915
  HOMO = -0.301063948721465  LUMO = 7.02904977011176
  mo_energy =
[-4.70521586e+00 -3.01063949e-01  7.02904977e+00  6.88146538e+01
  9.80961646e+02]
E1 = -19.023936512193  E_coul = 4.505688448803081
Extra cycle  E= -14.5182480633899  delta_E= -1.42e-14  |g|= 1.12e-11  |ddm|= 8.02e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59713835e+02 4.89642083e+01 8.45500109e+00 1.94006439e+00
 1.03360898e-01]
grad_E = [ 4.18023930e-05  1.36098393e-04 -4.66947733e-03  2.33738688e-02
 -3.82109558e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.727542612        1
[INPUT] 0    0    [1    /1   ]  50.1520119636        1
[INPUT] 0    0    [1    /1   ]  8.61214945958        1
[INPUT] 0    0    [1    /1   ]  1.91995325358        1
[INPUT] 0    0    [1    /1   ]  0.104170500793       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7275426122972, 1.0]], [0, [50.15201196358906, 1.0]], [0, [8.612149459576912, 1.0]], [0, [1.9199532535813681, 1.0]], [0, [0.10417050079307177, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72754261]
bas 1, expnt(s) = [50.15201196]
bas 2, expnt(s) = [8.61214946]
bas 3, expnt(s) = [1.91995325]
bas 4, expnt(s) = [0.1041705]
CPU time:        69.73
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59727543e+02 3.28880774e+02 5.01520120e+01 4.76136302e+01
 8.61214946e+00 1.27013152e+01 1.91995325e+00 4.12081403e+00
 1.04170501e-01 4.63258704e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985669244230932
cond(S) = 11.697193969161056
E1 = -19.00653492348942  E_coul = 4.512932999172282
init E= -14.4936019243171
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302557610686665  LUMO = 7.05934309801791
  mo_energy =
[-4.70021247e+00 -3.02557611e-01  7.05934310e+00  7.04326186e+01
  9.85140948e+02]
E1 = -19.025277420689367  E_coul = 4.506567928887276
cycle= 1 E= -14.5187094918021  delta_E= -0.0251  |g|= 0.0168  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0215511
diis-c [-4.64452036e-04  1.00000000e+00]
  HOMO = -0.300445204343544  LUMO = 7.06109730473405
  mo_energy =
[-4.70563159e+00 -3.00445204e-01  7.06109730e+00  7.04224250e+01
  9.85116069e+02]
E1 = -19.024157488788347  E_coul = 4.505435324502581
cycle= 2 E= -14.5187221642858  delta_E= -1.27e-05  |g|= 0.000773  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864847
diis-c [-5.02734886e-07 -2.35314516e-02  1.02353145e+00]
  HOMO = -0.300488003579756  LUMO = 7.06085476035991
  mo_energy =
[-4.70616877e+00 -3.00488004e-01  7.06085476e+00  7.04218247e+01
  9.85115206e+02]
E1 = -19.024117228835728  E_coul = 4.505395026528916
cycle= 3 E= -14.5187222023068  delta_E= -3.8e-08  |g|= 2.86e-05  |ddm|= 0.000247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.59597e-05
diis-c [-4.57467868e-11  5.01006441e-04 -4.91232748e-02  1.04862227e+00]
  HOMO = -0.300489181761736  LUMO = 7.06085547856516
  mo_energy =
[-4.70617510e+00 -3.00489182e-01  7.06085548e+00  7.04218429e+01
  9.85115244e+02]
E1 = -19.024116652563432  E_coul = 4.50539445020773
cycle= 4 E= -14.5187222023557  delta_E= -4.89e-11  |g|= 1.99e-07  |ddm|= 8.47e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024116652563432  E_coul = 4.50539445020773
  HOMO = -0.300489167159793  LUMO = 7.06085574248174
  mo_energy =
[-4.70617471e+00 -3.00489167e-01  7.06085574e+00  7.04218439e+01
  9.85115245e+02]
E1 = -19.024116681910094  E_coul = 4.505394479554382
Extra cycle  E= -14.5187222023557  delta_E= -8.88e-15  |g|= 8.61e-09  |ddm|= 6.39e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59727543e+02 5.01520120e+01 8.61214946e+00 1.91995325e+00
 1.04170501e-01]
E = -14.518722202355711
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.727542612        1
[INPUT] 0    0    [1    /1   ]  50.1520119636        1
[INPUT] 0    0    [1    /1   ]  8.61214945958        1
[INPUT] 0    0    [1    /1   ]  1.91995325358        1
[INPUT] 0    0    [1    /1   ]  0.104170500793       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7275426122972, 1.0]], [0, [50.15201196358906, 1.0]], [0, [8.612149459576912, 1.0]], [0, [1.9199532535813681, 1.0]], [0, [0.10417050079307177, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72754261]
bas 1, expnt(s) = [50.15201196]
bas 2, expnt(s) = [8.61214946]
bas 3, expnt(s) = [1.91995325]
bas 4, expnt(s) = [0.1041705]
CPU time:        70.27
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59727543e+02 3.28880774e+02 5.01520120e+01 4.76136302e+01
 8.61214946e+00 1.27013152e+01 1.91995325e+00 4.12081403e+00
 1.04170501e-01 4.63258704e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985669244230932
cond(S) = 11.697193969161056
E1 = -19.00653492348942  E_coul = 4.512932999172282
init E= -14.4936019243171
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.302557610686665  LUMO = 7.05934309801791
  mo_energy =
[-4.70021247e+00 -3.02557611e-01  7.05934310e+00  7.04326186e+01
  9.85140948e+02]
E1 = -19.025277420689367  E_coul = 4.506567928887276
cycle= 1 E= -14.5187094918021  delta_E= -0.0251  |g|= 0.0168  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0215511
diis-c [-4.64452036e-04  1.00000000e+00]
  HOMO = -0.300445204343544  LUMO = 7.06109730473405
  mo_energy =
[-4.70563159e+00 -3.00445204e-01  7.06109730e+00  7.04224250e+01
  9.85116069e+02]
E1 = -19.024157488788347  E_coul = 4.505435324502581
cycle= 2 E= -14.5187221642858  delta_E= -1.27e-05  |g|= 0.000773  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864847
diis-c [-5.02734886e-07 -2.35314516e-02  1.02353145e+00]
  HOMO = -0.300488003579756  LUMO = 7.06085476035991
  mo_energy =
[-4.70616877e+00 -3.00488004e-01  7.06085476e+00  7.04218247e+01
  9.85115206e+02]
E1 = -19.024117228835728  E_coul = 4.505395026528916
cycle= 3 E= -14.5187222023068  delta_E= -3.8e-08  |g|= 2.86e-05  |ddm|= 0.000247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.59597e-05
diis-c [-4.57467868e-11  5.01006441e-04 -4.91232748e-02  1.04862227e+00]
  HOMO = -0.300489181761736  LUMO = 7.06085547856516
  mo_energy =
[-4.70617510e+00 -3.00489182e-01  7.06085548e+00  7.04218429e+01
  9.85115244e+02]
E1 = -19.024116652563432  E_coul = 4.50539445020773
cycle= 4 E= -14.5187222023557  delta_E= -4.89e-11  |g|= 1.99e-07  |ddm|= 8.47e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024116652563432  E_coul = 4.50539445020773
  HOMO = -0.300489167159793  LUMO = 7.06085574248174
  mo_energy =
[-4.70617471e+00 -3.00489167e-01  7.06085574e+00  7.04218439e+01
  9.85115245e+02]
E1 = -19.024116681910094  E_coul = 4.505394479554382
Extra cycle  E= -14.5187222023557  delta_E= -8.88e-15  |g|= 8.61e-09  |ddm|= 6.39e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.697193969161056
E1 = -19.024116681910094  E_coul = 4.505394479554382
init E= -14.5187222023557
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300489166569808  LUMO = 7.06085575168087
  mo_energy =
[-4.70617469e+00 -3.00489167e-01  7.06085575e+00  7.04218439e+01
  9.85115246e+02]
E1 = -19.02411668300189  E_coul = 4.505394480646175
cycle= 1 E= -14.5187222023557  delta_E= -3.55e-15  |g|= 3.81e-10  |ddm|= 2.73e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02411668300189  E_coul = 4.505394480646175
  HOMO = -0.300489166544793  LUMO = 7.06085575200595
  mo_energy =
[-4.70617469e+00 -3.00489167e-01  7.06085575e+00  7.04218439e+01
  9.85115246e+02]
E1 = -19.024116683043427  E_coul = 4.505394480687714
Extra cycle  E= -14.5187222023557  delta_E= 1.78e-15  |g|= 1.78e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59727543e+02 5.01520120e+01 8.61214946e+00 1.91995325e+00
 1.04170501e-01]
grad_E = [ 3.96468819e-05  5.30590263e-05  1.35115490e-04 -2.44554632e-03
 -5.72042902e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.722546495        1
[INPUT] 0    0    [1    /1   ]  49.7197369702        1
[INPUT] 0    0    [1    /1   ]  8.58619987598        1
[INPUT] 0    0    [1    /1   ]  1.92172279743        1
[INPUT] 0    0    [1    /1   ]  0.10419545463        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7225464945508, 1.0]], [0, [49.719736970188215, 1.0]], [0, [8.58619987597586, 1.0]], [0, [1.9217227974251536, 1.0]], [0, [0.10419545463036689, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72254649]
bas 1, expnt(s) = [49.71973697]
bas 2, expnt(s) = [8.58619988]
bas 3, expnt(s) = [1.9217228]
bas 4, expnt(s) = [0.10419545]
CPU time:        72.46
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722546e+02 3.28878906e+02 4.97197370e+01 4.73055004e+01
 8.58619988e+00 1.26726013e+01 1.92172280e+00 4.12366219e+00
 1.04195455e-01 4.63341931e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985670780073969
cond(S) = 11.78359807715211
E1 = -19.006726258927177  E_coul = 4.513258132786244
init E= -14.4934681261409
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302544258587381  LUMO = 7.05155078187985
  mo_energy =
[-4.70007041e+00 -3.02544259e-01  7.05155078e+00  6.99244109e+01
  9.83702894e+02]
E1 = -19.02624249453177  E_coul = 4.507518895481977
cycle= 1 E= -14.5187235990498  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221648
diis-c [-4.91280093e-04  1.00000000e+00]
  HOMO = -0.300420299419965  LUMO = 7.05354079736541
  mo_energy =
[-4.70518808e+00 -3.00420299e-01  7.05354080e+00  6.99151168e+01
  9.83679037e+02]
E1 = -19.025144130100273  E_coul = 4.506407833833883
cycle= 2 E= -14.5187362962664  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871091
diis-c [-5.10208104e-07 -2.30245084e-02  1.02302451e+00]
  HOMO = -0.300462927346109  LUMO = 7.05330723229104
  mo_energy =
[-4.70571412e+00 -3.00462927e-01  7.05330723e+00  6.99145516e+01
  9.83678221e+02]
E1 = -19.02510473316307  E_coul = 4.506368398523553
cycle= 3 E= -14.5187363346395  delta_E= -3.84e-08  |g|= 2.92e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.66278e-05
diis-c [-4.64343753e-11  5.02590464e-04 -4.97774690e-02  1.04927488e+00]
  HOMO = -0.300464130403791  LUMO = 7.05330799686417
  mo_energy =
[-4.70572053e+00 -3.00464130e-01  7.05330800e+00  6.99145702e+01
  9.83678259e+02]
E1 = -19.025104151203834  E_coul = 4.506367816513293
cycle= 4 E= -14.5187363346905  delta_E= -5.1e-11  |g|= 1.95e-07  |ddm|= 8.66e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025104151203834  E_coul = 4.506367816513293
  HOMO = -0.30046411591478  LUMO = 7.05330825524686
  mo_energy =
[-4.70572014e+00 -3.00464116e-01  7.05330826e+00  6.99145712e+01
  9.83678261e+02]
E1 = -19.025104180062417  E_coul = 4.506367845371874
Extra cycle  E= -14.5187363346905  delta_E= -3.55e-15  |g|= 8.45e-09  |ddm|= 6.36e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722546e+02 4.97197370e+01 8.58619988e+00 1.92172280e+00
 1.04195455e-01]
E = -14.518736334690544
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.722546495        1
[INPUT] 0    0    [1    /1   ]  49.7197369702        1
[INPUT] 0    0    [1    /1   ]  8.58619987598        1
[INPUT] 0    0    [1    /1   ]  1.92172279743        1
[INPUT] 0    0    [1    /1   ]  0.10419545463        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7225464945508, 1.0]], [0, [49.719736970188215, 1.0]], [0, [8.58619987597586, 1.0]], [0, [1.9217227974251536, 1.0]], [0, [0.10419545463036689, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72254649]
bas 1, expnt(s) = [49.71973697]
bas 2, expnt(s) = [8.58619988]
bas 3, expnt(s) = [1.9217228]
bas 4, expnt(s) = [0.10419545]
CPU time:        73.02
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722546e+02 3.28878906e+02 4.97197370e+01 4.73055004e+01
 8.58619988e+00 1.26726013e+01 1.92172280e+00 4.12366219e+00
 1.04195455e-01 4.63341931e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985670780073969
cond(S) = 11.78359807715211
E1 = -19.006726258927177  E_coul = 4.513258132786244
init E= -14.4934681261409
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302544258587381  LUMO = 7.05155078187985
  mo_energy =
[-4.70007041e+00 -3.02544259e-01  7.05155078e+00  6.99244109e+01
  9.83702894e+02]
E1 = -19.02624249453177  E_coul = 4.507518895481977
cycle= 1 E= -14.5187235990498  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221648
diis-c [-4.91280093e-04  1.00000000e+00]
  HOMO = -0.300420299419965  LUMO = 7.05354079736541
  mo_energy =
[-4.70518808e+00 -3.00420299e-01  7.05354080e+00  6.99151168e+01
  9.83679037e+02]
E1 = -19.025144130100273  E_coul = 4.506407833833883
cycle= 2 E= -14.5187362962664  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871091
diis-c [-5.10208104e-07 -2.30245084e-02  1.02302451e+00]
  HOMO = -0.300462927346109  LUMO = 7.05330723229104
  mo_energy =
[-4.70571412e+00 -3.00462927e-01  7.05330723e+00  6.99145516e+01
  9.83678221e+02]
E1 = -19.02510473316307  E_coul = 4.506368398523553
cycle= 3 E= -14.5187363346395  delta_E= -3.84e-08  |g|= 2.92e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.66278e-05
diis-c [-4.64343753e-11  5.02590464e-04 -4.97774690e-02  1.04927488e+00]
  HOMO = -0.300464130403791  LUMO = 7.05330799686417
  mo_energy =
[-4.70572053e+00 -3.00464130e-01  7.05330800e+00  6.99145702e+01
  9.83678259e+02]
E1 = -19.025104151203834  E_coul = 4.506367816513293
cycle= 4 E= -14.5187363346905  delta_E= -5.1e-11  |g|= 1.95e-07  |ddm|= 8.66e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025104151203834  E_coul = 4.506367816513293
  HOMO = -0.30046411591478  LUMO = 7.05330825524686
  mo_energy =
[-4.70572014e+00 -3.00464116e-01  7.05330826e+00  6.99145712e+01
  9.83678261e+02]
E1 = -19.025104180062417  E_coul = 4.506367845371874
Extra cycle  E= -14.5187363346905  delta_E= -3.55e-15  |g|= 8.45e-09  |ddm|= 6.36e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.78359807715211
E1 = -19.025104180062417  E_coul = 4.506367845371874
init E= -14.5187363346905
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300464115326953  LUMO = 7.05330826422735
  mo_energy =
[-4.70572013e+00 -3.00464115e-01  7.05330826e+00  6.99145712e+01
  9.83678261e+02]
E1 = -19.025104181136346  E_coul = 4.506367846445791
cycle= 1 E= -14.5187363346906  delta_E= -1.07e-14  |g|= 3.79e-10  |ddm|= 2.74e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025104181136346  E_coul = 4.506367846445791
  HOMO = -0.30046411530188  LUMO = 7.05330826454377
  mo_energy =
[-4.70572013e+00 -3.00464115e-01  7.05330826e+00  6.99145712e+01
  9.83678261e+02]
E1 = -19.025104181177227  E_coul = 4.50636784648668
Extra cycle  E= -14.5187363346905  delta_E= 7.11e-15  |g|= 1.8e-11  |ddm|= 1.25e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722546e+02 4.97197370e+01 8.58619988e+00 1.92172280e+00
 1.04195455e-01]
grad_E = [ 4.07869230e-05 -9.21378802e-06  3.22220532e-05 -6.61475840e-05
  5.29645985e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.723114772        1
[INPUT] 0    0    [1    /1   ]  49.7842220907        1
[INPUT] 0    0    [1    /1   ]  8.60477588713        1
[INPUT] 0    0    [1    /1   ]  1.92364097433        1
[INPUT] 0    0    [1    /1   ]  0.102854906797       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7231147716572, 1.0]], [0, [49.784222090724036, 1.0]], [0, [8.604775887131222, 1.0]], [0, [1.9236409743279448, 1.0]], [0, [0.10285490679692612, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72311477]
bas 1, expnt(s) = [49.78422209]
bas 2, expnt(s) = [8.60477589]
bas 3, expnt(s) = [1.92364097]
bas 4, expnt(s) = [0.10285491]
CPU time:        75.23
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59723115e+02 3.28879119e+02 4.97842221e+01 4.73515084e+01
 8.60477589e+00 1.26931583e+01 1.92364097e+00 4.12674885e+00
 1.02854907e-01 4.58863787e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855077026936176
cond(S) = 11.762929855072365
E1 = -18.995498817349436  E_coul = 4.5041134540984755
init E= -14.491385363251
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303493725710336  LUMO = 7.0587694063644
  mo_energy =
[-4.70364970e+00 -3.03493726e-01  7.05876941e+00  7.00474537e+01
  9.83959458e+02]
E1 = -19.01436050678018  E_coul = 4.495680503836988
cycle= 1 E= -14.5186800029432  delta_E= -0.0273  |g|= 0.0179  |ddm|= 0.114
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0224818
diis-c [-5.05432564e-04  1.00000000e+00]
  HOMO = -0.301454832376885  LUMO = 7.06006933750569
  mo_energy =
[-4.71005196e+00 -3.01454832e-01  7.06006934e+00  7.00361944e+01
  9.83933341e+02]
E1 = -19.01318177517129  E_coul = 4.494486945253099
cycle= 2 E= -14.5186948299182  delta_E= -1.48e-05  |g|= 0.000836  |ddm|= 0.00508
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000939971
diis-c [-5.80133958e-07 -2.51311674e-02  1.02513117e+00]
  HOMO = -0.30150054068238  LUMO = 7.05981749144622
  mo_energy =
[-4.71061843e+00 -3.01500541e-01  7.05981749e+00  7.00355950e+01
  9.83932503e+02]
E1 = -19.013139383865184  E_coul = 4.494444509432369
cycle= 3 E= -14.5186948744328  delta_E= -4.45e-08  |g|= 2.96e-05  |ddm|= 0.000268
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73827e-05
diis-c [-4.89215793e-11  4.71148149e-04 -4.68075036e-02  1.04633636e+00]
  HOMO = -0.301501724598492  LUMO = 7.059818803464
  mo_energy =
[-4.71062416e+00 -3.01501725e-01  7.05981880e+00  7.00356160e+01
  9.83932546e+02]
E1 = -19.013138857408883  E_coul = 4.4944439829239204
cycle= 4 E= -14.518694874485  delta_E= -5.21e-11  |g|= 2.18e-07  |ddm|= 8.69e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.013138857408883  E_coul = 4.4944439829239204
  HOMO = -0.301501708965316  LUMO = 7.05981908734328
  mo_energy =
[-4.71062374e+00 -3.01501709e-01  7.05981909e+00  7.00356170e+01
  9.83932547e+02]
E1 = -19.013138889087703  E_coul = 4.49444401460274
Extra cycle  E= -14.518694874485  delta_E=    0  |g|= 9.42e-09  |ddm|= 6.95e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59723115e+02 4.97842221e+01 8.60477589e+00 1.92364097e+00
 1.02854907e-01]
E = -14.518694874484963
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.723114772        1
[INPUT] 0    0    [1    /1   ]  49.7842220907        1
[INPUT] 0    0    [1    /1   ]  8.60477588713        1
[INPUT] 0    0    [1    /1   ]  1.92364097433        1
[INPUT] 0    0    [1    /1   ]  0.102854906797       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7231147716572, 1.0]], [0, [49.784222090724036, 1.0]], [0, [8.604775887131222, 1.0]], [0, [1.9236409743279448, 1.0]], [0, [0.10285490679692612, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72311477]
bas 1, expnt(s) = [49.78422209]
bas 2, expnt(s) = [8.60477589]
bas 3, expnt(s) = [1.92364097]
bas 4, expnt(s) = [0.10285491]
CPU time:        75.81
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59723115e+02 3.28879119e+02 4.97842221e+01 4.73515084e+01
 8.60477589e+00 1.26931583e+01 1.92364097e+00 4.12674885e+00
 1.02854907e-01 4.58863787e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855077026936176
cond(S) = 11.762929855072365
E1 = -18.995498817349436  E_coul = 4.5041134540984755
init E= -14.491385363251
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303493725710336  LUMO = 7.0587694063644
  mo_energy =
[-4.70364970e+00 -3.03493726e-01  7.05876941e+00  7.00474537e+01
  9.83959458e+02]
E1 = -19.01436050678018  E_coul = 4.495680503836988
cycle= 1 E= -14.5186800029432  delta_E= -0.0273  |g|= 0.0179  |ddm|= 0.114
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0224818
diis-c [-5.05432564e-04  1.00000000e+00]
  HOMO = -0.301454832376885  LUMO = 7.06006933750569
  mo_energy =
[-4.71005196e+00 -3.01454832e-01  7.06006934e+00  7.00361944e+01
  9.83933341e+02]
E1 = -19.01318177517129  E_coul = 4.494486945253099
cycle= 2 E= -14.5186948299182  delta_E= -1.48e-05  |g|= 0.000836  |ddm|= 0.00508
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000939971
diis-c [-5.80133958e-07 -2.51311674e-02  1.02513117e+00]
  HOMO = -0.30150054068238  LUMO = 7.05981749144622
  mo_energy =
[-4.71061843e+00 -3.01500541e-01  7.05981749e+00  7.00355950e+01
  9.83932503e+02]
E1 = -19.013139383865184  E_coul = 4.494444509432369
cycle= 3 E= -14.5186948744328  delta_E= -4.45e-08  |g|= 2.96e-05  |ddm|= 0.000268
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73827e-05
diis-c [-4.89215793e-11  4.71148149e-04 -4.68075036e-02  1.04633636e+00]
  HOMO = -0.301501724598492  LUMO = 7.059818803464
  mo_energy =
[-4.71062416e+00 -3.01501725e-01  7.05981880e+00  7.00356160e+01
  9.83932546e+02]
E1 = -19.013138857408883  E_coul = 4.4944439829239204
cycle= 4 E= -14.518694874485  delta_E= -5.21e-11  |g|= 2.18e-07  |ddm|= 8.69e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.013138857408883  E_coul = 4.4944439829239204
  HOMO = -0.301501708965316  LUMO = 7.05981908734328
  mo_energy =
[-4.71062374e+00 -3.01501709e-01  7.05981909e+00  7.00356170e+01
  9.83932547e+02]
E1 = -19.013138889087703  E_coul = 4.49444401460274
Extra cycle  E= -14.518694874485  delta_E=    0  |g|= 9.42e-09  |ddm|= 6.95e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.762929855072365
E1 = -19.013138889087703  E_coul = 4.49444401460274
init E= -14.518694874485
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.301501708332128  LUMO = 7.05981909727303
  mo_energy =
[-4.71062372e+00 -3.01501708e-01  7.05981910e+00  7.00356171e+01
  9.83932547e+02]
E1 = -19.01313889026798  E_coul = 4.4944440157830154
cycle= 1 E= -14.518694874485  delta_E= -3.55e-15  |g|= 4.15e-10  |ddm|= 2.97e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.01313889026798  E_coul = 4.4944440157830154
  HOMO = -0.30150170830527  LUMO = 7.05981909762467
  mo_energy =
[-4.71062372e+00 -3.01501708e-01  7.05981910e+00  7.00356171e+01
  9.83932547e+02]
E1 = -19.013138890312895  E_coul = 4.494444015827918
Extra cycle  E= -14.518694874485  delta_E= -1.07e-14  |g|= 1.93e-11  |ddm|= 1.34e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59723115e+02 4.97842221e+01 8.60477589e+00 1.92364097e+00
 1.02854907e-01]
grad_E = [ 4.07075214e-05 -2.30559917e-05  2.78177408e-04 -5.96136881e-04
 -6.07732766e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.722551954        1
[INPUT] 0    0    [1    /1   ]  49.7203564784        1
[INPUT] 0    0    [1    /1   ]  8.58637833563        1
[INPUT] 0    0    [1    /1   ]  1.92174122534        1
[INPUT] 0    0    [1    /1   ]  0.104182575994       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7225519539863, 1.0]], [0, [49.72035647843992, 1.0]], [0, [8.586378335628238, 1.0]], [0, [1.9217412253416966, 1.0]], [0, [0.10418257599359435, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72255195]
bas 1, expnt(s) = [49.72035648]
bas 2, expnt(s) = [8.58637834]
bas 3, expnt(s) = [1.92174123]
bas 4, expnt(s) = [0.10418258]
CPU time:        78.05
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722552e+02 3.28878908e+02 4.97203565e+01 4.73059425e+01
 8.58637834e+00 1.26727988e+01 1.92174123e+00 4.12369185e+00
 1.04182576e-01 4.63298979e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985670140336371
cond(S) = 11.783398291421642
E1 = -19.006621597474986  E_coul = 4.513171875446413
init E= -14.4934497220286
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302553379127155  LUMO = 7.05162061448859
  mo_energy =
[-4.70010421e+00 -3.02553379e-01  7.05162061e+00  6.99255935e+01
  9.83705359e+02]
E1 = -19.02612930277611  E_coul = 4.507405719464363
cycle= 1 E= -14.5187235833117  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221675
diis-c [-4.91399765e-04  1.00000000e+00]
  HOMO = -0.300430388323434  LUMO = 7.05360361940631
  mo_energy =
[-4.70523458e+00 -3.00430388e-01  7.05360362e+00  6.99162801e+01
  9.83681480e+02]
E1 = -19.02503015850594  E_coul = 4.50629385839543
cycle= 2 E= -14.5187363001105  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871748
diis-c [-5.10878877e-07 -2.30440663e-02  1.02304407e+00]
  HOMO = -0.300473046107612  LUMO = 7.05336987728416
  mo_energy =
[-4.70576101e+00 -3.00473046e-01  7.05336988e+00  6.99157146e+01
  9.83680664e+02]
E1 = -19.024990732329556  E_coul = 4.506254393788981
cycle= 3 E= -14.5187363385406  delta_E= -3.84e-08  |g|= 2.92e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.66372e-05
diis-c [-4.64556252e-11  5.02282468e-04 -4.97495983e-02  1.04924732e+00]
  HOMO = -0.300474249087379  LUMO = 7.05337064650761
  mo_energy =
[-4.70576742e+00 -3.00474249e-01  7.05337065e+00  6.99157332e+01
  9.83680702e+02]
E1 = -19.02499015079656  E_coul = 4.5062538122049345
cycle= 4 E= -14.5187363385916  delta_E= -5.11e-11  |g|= 1.95e-07  |ddm|= 8.66e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02499015079656  E_coul = 4.5062538122049345
  HOMO = -0.300474234587015  LUMO = 7.05337090513526
  mo_energy =
[-4.70576703e+00 -3.00474235e-01  7.05337091e+00  6.99157342e+01
  9.83680704e+02]
E1 = -19.024990179682433  E_coul = 4.506253841090817
Extra cycle  E= -14.5187363385916  delta_E= 1.07e-14  |g|= 8.46e-09  |ddm|= 6.37e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722552e+02 4.97203565e+01 8.58637834e+00 1.92174123e+00
 1.04182576e-01]
E = -14.518736338591616
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.722551954        1
[INPUT] 0    0    [1    /1   ]  49.7203564784        1
[INPUT] 0    0    [1    /1   ]  8.58637833563        1
[INPUT] 0    0    [1    /1   ]  1.92174122534        1
[INPUT] 0    0    [1    /1   ]  0.104182575994       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7225519539863, 1.0]], [0, [49.72035647843992, 1.0]], [0, [8.586378335628238, 1.0]], [0, [1.9217412253416966, 1.0]], [0, [0.10418257599359435, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72255195]
bas 1, expnt(s) = [49.72035648]
bas 2, expnt(s) = [8.58637834]
bas 3, expnt(s) = [1.92174123]
bas 4, expnt(s) = [0.10418258]
CPU time:        78.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722552e+02 3.28878908e+02 4.97203565e+01 4.73059425e+01
 8.58637834e+00 1.26727988e+01 1.92174123e+00 4.12369185e+00
 1.04182576e-01 4.63298979e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985670140336371
cond(S) = 11.783398291421642
E1 = -19.006621597474986  E_coul = 4.513171875446413
init E= -14.4934497220286
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302553379127155  LUMO = 7.05162061448859
  mo_energy =
[-4.70010421e+00 -3.02553379e-01  7.05162061e+00  6.99255935e+01
  9.83705359e+02]
E1 = -19.02612930277611  E_coul = 4.507405719464363
cycle= 1 E= -14.5187235833117  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221675
diis-c [-4.91399765e-04  1.00000000e+00]
  HOMO = -0.300430388323434  LUMO = 7.05360361940631
  mo_energy =
[-4.70523458e+00 -3.00430388e-01  7.05360362e+00  6.99162801e+01
  9.83681480e+02]
E1 = -19.02503015850594  E_coul = 4.50629385839543
cycle= 2 E= -14.5187363001105  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871748
diis-c [-5.10878877e-07 -2.30440663e-02  1.02304407e+00]
  HOMO = -0.300473046107612  LUMO = 7.05336987728416
  mo_energy =
[-4.70576101e+00 -3.00473046e-01  7.05336988e+00  6.99157146e+01
  9.83680664e+02]
E1 = -19.024990732329556  E_coul = 4.506254393788981
cycle= 3 E= -14.5187363385406  delta_E= -3.84e-08  |g|= 2.92e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.66372e-05
diis-c [-4.64556252e-11  5.02282468e-04 -4.97495983e-02  1.04924732e+00]
  HOMO = -0.300474249087379  LUMO = 7.05337064650761
  mo_energy =
[-4.70576742e+00 -3.00474249e-01  7.05337065e+00  6.99157332e+01
  9.83680702e+02]
E1 = -19.02499015079656  E_coul = 4.5062538122049345
cycle= 4 E= -14.5187363385916  delta_E= -5.11e-11  |g|= 1.95e-07  |ddm|= 8.66e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02499015079656  E_coul = 4.5062538122049345
  HOMO = -0.300474234587015  LUMO = 7.05337090513526
  mo_energy =
[-4.70576703e+00 -3.00474235e-01  7.05337091e+00  6.99157342e+01
  9.83680704e+02]
E1 = -19.024990179682433  E_coul = 4.506253841090817
Extra cycle  E= -14.5187363385916  delta_E= 1.07e-14  |g|= 8.46e-09  |ddm|= 6.37e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.783398291421642
E1 = -19.024990179682433  E_coul = 4.506253841090817
init E= -14.5187363385916
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300474233998735  LUMO = 7.0533709141248
  mo_energy =
[-4.70576701e+00 -3.00474234e-01  7.05337091e+00  6.99157342e+01
  9.83680704e+02]
E1 = -19.024990180757403  E_coul = 4.506253842165776
cycle= 1 E= -14.5187363385916  delta_E= -1.07e-14  |g|= 3.79e-10  |ddm|= 2.74e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.024990180757403  E_coul = 4.506253842165776
  HOMO = -0.300474233973645  LUMO = 7.05337091444153
  mo_energy =
[-4.70576701e+00 -3.00474234e-01  7.05337091e+00  6.99157342e+01
  9.83680704e+02]
E1 = -19.024990180798323  E_coul = 4.506253842206708
Extra cycle  E= -14.5187363385916  delta_E= 1.07e-14  |g|= 1.81e-11  |ddm|= 1.25e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722552e+02 4.97203565e+01 8.58637834e+00 1.92174123e+00
 1.04182576e-01]
grad_E = [ 4.07861596e-05 -9.34761545e-06  3.45990211e-05 -7.13144865e-05
 -5.28873558e-05]
  message: CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH
  success: True
   status: 0
      fun: -14.518736338591616
        x: [ 6.597e+02  4.972e+01  8.586e+00  1.922e+00  1.042e-01]
      nit: 24
      jac: [ 4.079e-05 -9.348e-06  3.460e-05 -7.131e-05 -5.289e-05]
     nfev: 32
     njev: 32
 hess_inv: <5x5 LbfgsInvHessProduct with dtype=float64>
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:23:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.722551954        1
[INPUT] 0    0    [1    /1   ]  49.7203564784        1
[INPUT] 0    0    [1    /1   ]  8.58637833563        1
[INPUT] 0    0    [1    /1   ]  1.92174122534        1
[INPUT] 0    0    [1    /1   ]  0.104182575994       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7225519539863, 1.0]], [0, [49.72035647843992, 1.0]], [0, [8.586378335628238, 1.0]], [0, [1.9217412253416966, 1.0]], [0, [0.10418257599359435, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72255195]
bas 1, expnt(s) = [49.72035648]
bas 2, expnt(s) = [8.58637834]
bas 3, expnt(s) = [1.92174123]
bas 4, expnt(s) = [0.10418258]
CPU time:        80.89
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722552e+02 3.28878908e+02 4.97203565e+01 4.73059425e+01
 8.58637834e+00 1.26727988e+01 1.92174123e+00 4.12369185e+00
 1.04182576e-01 4.63298979e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985670140336371
cond(S) = 11.783398291421642
E1 = -19.006621597474986  E_coul = 4.513171875446413
init E= -14.4934497220286
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302553379127155  LUMO = 7.05162061448859
  mo_energy =
[-4.70010421e+00 -3.02553379e-01  7.05162061e+00  6.99255935e+01
  9.83705359e+02]
E1 = -19.02612930277611  E_coul = 4.507405719464363
cycle= 1 E= -14.5187235833117  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221675
diis-c [-4.91399765e-04  1.00000000e+00]
  HOMO = -0.300430388323434  LUMO = 7.05360361940631
  mo_energy =
[-4.70523458e+00 -3.00430388e-01  7.05360362e+00  6.99162801e+01
  9.83681480e+02]
E1 = -19.02503015850594  E_coul = 4.50629385839543
cycle= 2 E= -14.5187363001105  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871748
diis-c [-5.10878877e-07 -2.30440663e-02  1.02304407e+00]
  HOMO = -0.300473046107612  LUMO = 7.05336987728416
  mo_energy =
[-4.70576101e+00 -3.00473046e-01  7.05336988e+00  6.99157146e+01
  9.83680664e+02]
E1 = -19.024990732329556  E_coul = 4.506254393788981
cycle= 3 E= -14.5187363385406  delta_E= -3.84e-08  |g|= 2.92e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.66372e-05
diis-c [-4.64556252e-11  5.02282468e-04 -4.97495983e-02  1.04924732e+00]
  HOMO = -0.300474249087379  LUMO = 7.05337064650761
  mo_energy =
[-4.70576742e+00 -3.00474249e-01  7.05337065e+00  6.99157332e+01
  9.83680702e+02]
E1 = -19.02499015079656  E_coul = 4.5062538122049345
cycle= 4 E= -14.5187363385916  delta_E= -5.11e-11  |g|= 1.95e-07  |ddm|= 8.66e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02499015079656  E_coul = 4.5062538122049345
  HOMO = -0.300474234587015  LUMO = 7.05337090513526
  mo_energy =
[-4.70576703e+00 -3.00474235e-01  7.05337091e+00  6.99157342e+01
  9.83680704e+02]
E1 = -19.024990179682433  E_coul = 4.506253841090817
Extra cycle  E= -14.5187363385916  delta_E= 1.07e-14  |g|= 8.46e-09  |ddm|= 6.37e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722552e+02 4.97203565e+01 8.58637834e+00 1.92174123e+00
 1.04182576e-01]
E = -14.518736338591616
E = -14.518736338591616
exp = [6.5972255195398634e+02,4.9720356478439918e+01,8.5863783356282379e+00,1.9217412253416966e+00,1.0418257599359435e-01]
