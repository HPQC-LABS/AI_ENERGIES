#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2671226         1
[INPUT] 0    0    [1    /1   ]  192.12671226         1
[INPUT] 0    0    [1    /1   ]  28.9507206786        1
[INPUT] 0    0    [1    /1   ]  6.41053531987        1
[INPUT] 0    0    [1    /1   ]  1.66121059384        1
[INPUT] 0    0    [1    /1   ]  0.104441202485       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671226013924, 1.0]], [0, [192.12671226013924, 1.0]], [0, [28.9507206785877, 1.0]], [0, [6.410535319868113, 1.0]], [0, [1.6612105938420099, 1.0]], [0, [0.10444120248462711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2671226]
bas 1, expnt(s) = [192.12671226]
bas 2, expnt(s) = [28.95072068]
bas 3, expnt(s) = [6.41053532]
bas 4, expnt(s) = [1.66121059]
bas 5, expnt(s) = [0.1044412]
CPU time:         1.09
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126712e+02 1.30378457e+02
 2.89507207e+01 3.15325838e+01 6.41053532e+00 1.01785461e+01
 1.66121059e+00 3.69686459e+00 1.04441202e-01 4.64161294e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866788022089787
cond(S) = 21.208199660089758
E1 = -19.045432243999304  E_coul = 4.519418444503303
init E= -14.526013799496
    CPU time for initialize scf      0.12 sec, wall time      0.12 sec
  HOMO = -0.301711401365133  LUMO = 5.16384300874771
  mo_energy =
[-4.71269752e+00 -3.01711401e-01  5.16384301e+00  4.24034811e+01
  3.14912863e+02  3.20643476e+03]
E1 = -19.048638633913146  E_coul = 4.5000444887600874
cycle= 1 E= -14.5485941451531  delta_E= -0.0226  |g|= 0.0172  |ddm|= 0.162
    CPU time for cycle= 1      0.29 sec, wall time      0.30 sec
diis-norm(errvec)=0.0153881
diis-c [-2.36793863e-04  1.00000000e+00]
  HOMO = -0.300709701177129  LUMO = 5.16198298437598
  mo_energy =
[-4.72357612e+00 -3.00709701e-01  5.16198298e+00  4.23895402e+01
  3.14890752e+02  3.20640645e+03]
E1 = -19.046709846226793  E_coul = 4.498092236861769
cycle= 2 E= -14.548617609365  delta_E= -2.35e-05  |g|= 0.00112  |ddm|= 0.00828
    CPU time for cycle= 2      0.08 sec, wall time      0.08 sec
diis-norm(errvec)=0.00130582
diis-c [-6.23186761e-07 -7.25995330e-02  1.07259953e+00]
  HOMO = -0.300793743922782  LUMO = 5.16156145182324
  mo_energy =
[-4.72453992e+00 -3.00793744e-01  5.16156145e+00  4.23885859e+01
  3.14889649e+02  3.20640526e+03]
E1 = -19.046598945950155  E_coul = 4.497981224054276
cycle= 3 E= -14.5486177218959  delta_E= -1.13e-07  |g|= 1.36e-05  |ddm|= 0.000572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.74168e-05
diis-c [-7.48594061e-11  5.62230686e-04 -1.66315239e-02  1.01606929e+00]
  HOMO = -0.300793413991535  LUMO = 5.16157040052621
  mo_energy =
[-4.72452518e+00 -3.00793414e-01  5.16157040e+00  4.23886235e+01
  3.14889716e+02  3.20640534e+03]
E1 = -19.04660010053828  E_coul = 4.497982378634438
cycle= 4 E= -14.5486177219038  delta_E= -7.96e-12  |g|= 5.6e-07  |ddm|= 2.51e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04660010053828  E_coul = 4.497982378634438
  HOMO = -0.300793373830564  LUMO = 5.16157086989022
  mo_energy =
[-4.72452430e+00 -3.00793374e-01  5.16157087e+00  4.23886252e+01
  3.14889719e+02  3.20640535e+03]
E1 = -19.04660018942632  E_coul = 4.49798246752246
Extra cycle  E= -14.5486177219039  delta_E= -1.78e-14  |g|= 3.09e-08  |ddm|= 2.29e-07
    CPU time for scf_cycle      0.51 sec, wall time      0.52 sec
exp = [1.92126712e+03 1.92126712e+02 2.89507207e+01 6.41053532e+00
 1.66121059e+00 1.04441202e-01]
E = -14.548617721903861
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2671226         1
[INPUT] 0    0    [1    /1   ]  192.12671226         1
[INPUT] 0    0    [1    /1   ]  28.9507206786        1
[INPUT] 0    0    [1    /1   ]  6.41053531987        1
[INPUT] 0    0    [1    /1   ]  1.66121059384        1
[INPUT] 0    0    [1    /1   ]  0.104441202485       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671226013924, 1.0]], [0, [192.12671226013924, 1.0]], [0, [28.9507206785877, 1.0]], [0, [6.410535319868113, 1.0]], [0, [1.6612105938420099, 1.0]], [0, [0.10444120248462711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2671226]
bas 1, expnt(s) = [192.12671226]
bas 2, expnt(s) = [28.95072068]
bas 3, expnt(s) = [6.41053532]
bas 4, expnt(s) = [1.66121059]
bas 5, expnt(s) = [0.1044412]
CPU time:         1.76
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126712e+02 1.30378457e+02
 2.89507207e+01 3.15325838e+01 6.41053532e+00 1.01785461e+01
 1.66121059e+00 3.69686459e+00 1.04441202e-01 4.64161294e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866788022089787
cond(S) = 21.208199660089758
E1 = -19.045432243999304  E_coul = 4.519418444503303
init E= -14.526013799496
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301711401365133  LUMO = 5.16384300874771
  mo_energy =
[-4.71269752e+00 -3.01711401e-01  5.16384301e+00  4.24034811e+01
  3.14912863e+02  3.20643476e+03]
E1 = -19.048638633913146  E_coul = 4.5000444887600874
cycle= 1 E= -14.5485941451531  delta_E= -0.0226  |g|= 0.0172  |ddm|= 0.162
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153881
diis-c [-2.36793863e-04  1.00000000e+00]
  HOMO = -0.300709701177129  LUMO = 5.16198298437598
  mo_energy =
[-4.72357612e+00 -3.00709701e-01  5.16198298e+00  4.23895402e+01
  3.14890752e+02  3.20640645e+03]
E1 = -19.046709846226793  E_coul = 4.498092236861769
cycle= 2 E= -14.548617609365  delta_E= -2.35e-05  |g|= 0.00112  |ddm|= 0.00828
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130582
diis-c [-6.23186761e-07 -7.25995330e-02  1.07259953e+00]
  HOMO = -0.300793743922782  LUMO = 5.16156145182324
  mo_energy =
[-4.72453992e+00 -3.00793744e-01  5.16156145e+00  4.23885859e+01
  3.14889649e+02  3.20640526e+03]
E1 = -19.046598945950155  E_coul = 4.497981224054276
cycle= 3 E= -14.5486177218959  delta_E= -1.13e-07  |g|= 1.36e-05  |ddm|= 0.000572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.74168e-05
diis-c [-7.48594061e-11  5.62230686e-04 -1.66315239e-02  1.01606929e+00]
  HOMO = -0.300793413991535  LUMO = 5.16157040052621
  mo_energy =
[-4.72452518e+00 -3.00793414e-01  5.16157040e+00  4.23886235e+01
  3.14889716e+02  3.20640534e+03]
E1 = -19.04660010053828  E_coul = 4.497982378634438
cycle= 4 E= -14.5486177219038  delta_E= -7.96e-12  |g|= 5.6e-07  |ddm|= 2.51e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04660010053828  E_coul = 4.497982378634438
  HOMO = -0.300793373830564  LUMO = 5.16157086989022
  mo_energy =
[-4.72452430e+00 -3.00793374e-01  5.16157087e+00  4.23886252e+01
  3.14889719e+02  3.20640535e+03]
E1 = -19.04660018942632  E_coul = 4.49798246752246
Extra cycle  E= -14.5486177219039  delta_E= -1.78e-14  |g|= 3.09e-08  |ddm|= 2.29e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.208199660089758
E1 = -19.04660018942632  E_coul = 4.49798246752246
init E= -14.5486177219039
    CPU time for initialize scf      0.24 sec, wall time      0.24 sec
  HOMO = -0.300793371642697  LUMO = 5.1615708920343
  mo_energy =
[-4.72452426e+00 -3.00793372e-01  5.16157089e+00  4.23886252e+01
  3.14889719e+02  3.20640535e+03]
E1 = -19.0466001939224  E_coul = 4.497982472018543
cycle= 1 E= -14.5486177219039  delta_E= 1.78e-15  |g|= 1.72e-09  |ddm|= 1.3e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.0466001939224  E_coul = 4.497982472018543
  HOMO = -0.300793371517821  LUMO = 5.16157089311707
  mo_energy =
[-4.72452425e+00 -3.00793372e-01  5.16157089e+00  4.23886252e+01
  3.14889719e+02  3.20640535e+03]
E1 = -19.04660019415845  E_coul = 4.497982472254595
Extra cycle  E= -14.5486177219039  delta_E= 3.55e-15  |g|= 1.02e-10  |ddm|= 7.81e-10
    CPU time for scf_cycle      0.83 sec, wall time      0.83 sec
exp = [1.92126712e+03 1.92126712e+02 2.89507207e+01 6.41053532e+00
 1.66121059e+00 1.04441202e-01]
grad_E = [ 5.64238551e-07  9.79314767e-05 -3.82977345e-04  9.10089691e-04
 -1.51887517e-03 -2.37174656e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26712204        1
[INPUT] 0    0    [1    /1   ]  192.126614329        1
[INPUT] 0    0    [1    /1   ]  28.9511036559        1
[INPUT] 0    0    [1    /1   ]  6.40962523018        1
[INPUT] 0    0    [1    /1   ]  1.66272946901        1
[INPUT] 0    0    [1    /1   ]  0.106812949043       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.267122037154, 1.0]], [0, [192.1266143286625, 1.0]], [0, [28.95110365593307, 1.0]], [0, [6.409625230177281, 1.0]], [0, [1.6627294690110768, 1.0]], [0, [0.10681294904263554, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26712204]
bas 1, expnt(s) = [192.12661433]
bas 2, expnt(s) = [28.95110366]
bas 3, expnt(s) = [6.40962523]
bas 4, expnt(s) = [1.66272947]
bas 5, expnt(s) = [0.10681295]
CPU time:         6.22
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126614e+02 1.30378407e+02
 2.89511037e+01 3.15328967e+01 6.40962523e+00 1.01774623e+01
 1.66272947e+00 3.69939938e+00 1.06812949e-01 4.72044513e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9864119307255392
cond(S) = 21.270733773739593
E1 = -19.06303266386859  E_coul = 4.53297229334413
init E= -14.5300603705245
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.300212259913646  LUMO = 5.18291333578415
  mo_energy =
[-4.70741582e+00 -3.00212260e-01  5.18291334e+00  4.24191460e+01
  3.14926461e+02  3.20644600e+03]
E1 = -19.0689048350253  E_coul = 4.520418363794321
cycle= 1 E= -14.548486471231  delta_E= -0.0184  |g|= 0.015  |ddm|= 0.138
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139016
diis-c [-1.93255011e-04  1.00000000e+00]
  HOMO = -0.298878376387147  LUMO = 5.18269144651373
  mo_energy =
[-4.71516383e+00 -2.98878376e-01  5.18269145e+00  4.24092430e+01
  3.14909331e+02  3.20642315e+03]
E1 = -19.067245955245127  E_coul = 4.51874207220879
cycle= 2 E= -14.5485038830363  delta_E= -1.74e-05  |g|= 0.000976  |ddm|= 0.00712
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112693
diis-c [-5.41756488e-07 -6.54979888e-02  1.06549799e+00]
  HOMO = -0.298951014912646  LUMO = 5.18233488332227
  mo_energy =
[-4.71598487e+00 -2.98951015e-01  5.18233488e+00  4.24084360e+01
  3.14908376e+02  3.20642211e+03]
E1 = -19.067151363415228  E_coul = 4.518647395967185
cycle= 3 E= -14.548503967448  delta_E= -8.44e-08  |g|= 1.6e-05  |ddm|= 0.000491
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.24388e-05
diis-c [-5.14348135e-11  6.80107458e-04 -2.52711794e-02  1.02459107e+00]
  HOMO = -0.298951237079064  LUMO = 5.18234021853764
  mo_energy =
[-4.71597764e+00 -2.98951237e-01  5.18234022e+00  4.24084635e+01
  3.14908430e+02  3.20642217e+03]
E1 = -19.067151694489045  E_coul = 4.518647727026378
cycle= 4 E= -14.5485039674627  delta_E= -1.46e-11  |g|= 4.47e-07  |ddm|= 4.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.067151694489045  E_coul = 4.518647727026378
  HOMO = -0.298951203217503  LUMO = 5.18234060298259
  mo_energy =
[-4.71597692e+00 -2.98951203e-01  5.18234060e+00  4.24084649e+01
  3.14908432e+02  3.20642218e+03]
E1 = -19.067151767460178  E_coul = 4.518647799997489
Extra cycle  E= -14.5485039674627  delta_E= -2.31e-14  |g|= 2.5e-08  |ddm|= 1.91e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+03 1.92126614e+02 2.89511037e+01 6.40962523e+00
 1.66272947e+00 1.06812949e-01]
E = -14.54850396746269
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26712254        1
[INPUT] 0    0    [1    /1   ]  192.126702467        1
[INPUT] 0    0    [1    /1   ]  28.9507589763        1
[INPUT] 0    0    [1    /1   ]  6.4104443109         1
[INPUT] 0    0    [1    /1   ]  1.66136248136        1
[INPUT] 0    0    [1    /1   ]  0.10467837714        1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671225449685, 1.0]], [0, [192.12670246699156, 1.0]], [0, [28.950758976322238, 1.0]], [0, [6.410444310899029, 1.0]], [0, [1.6613624813589165, 1.0]], [0, [0.10467837714042795, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26712254]
bas 1, expnt(s) = [192.12670247]
bas 2, expnt(s) = [28.95075898]
bas 3, expnt(s) = [6.41044431]
bas 4, expnt(s) = [1.66136248]
bas 5, expnt(s) = [0.10467838]
CPU time:         6.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126702e+02 1.30378452e+02
 2.89507590e+01 3.15326151e+01 6.41044431e+00 1.01784377e+01
 1.66136248e+00 3.69711809e+00 1.04678377e-01 4.64951614e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866771658880564
cond(S) = 21.214426806972256
E1 = -19.04728666719894  E_coul = 4.520814378803435
init E= -14.5264722883955
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301561863650655  LUMO = 5.1657649793806
  mo_energy =
[-4.71215460e+00 -3.01561864e-01  5.16576498e+00  4.24050605e+01
  3.14914236e+02  3.20643589e+03]
E1 = -19.05069191969431  E_coul = 4.502097468983848
cycle= 1 E= -14.5485944507105  delta_E= -0.0221  |g|= 0.017  |ddm|= 0.159
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152305
diis-c [-2.31967346e-04  1.00000000e+00]
  HOMO = -0.300530845857499  LUMO = 5.16405900985444
  mo_energy =
[-4.72272833e+00 -3.00530846e-01  5.16405901e+00  4.23915155e+01
  3.14892615e+02  3.20640813e+03]
E1 = -19.04879006814813  E_coul = 4.500172804945311
cycle= 2 E= -14.5486172632028  delta_E= -2.28e-05  |g|= 0.00111  |ddm|= 0.00816
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128778
diis-c [-6.15532053e-07 -7.19706944e-02  1.07197069e+00]
  HOMO = -0.300613754661147  LUMO = 5.16364397849827
  mo_energy =
[-4.72367784e+00 -3.00613755e-01  5.16364398e+00  4.23905758e+01
  3.14891527e+02  3.20640695e+03]
E1 = -19.048680790334235  E_coul = 4.500063417610058
cycle= 3 E= -14.5486173727242  delta_E= -1.1e-07  |g|= 1.38e-05  |ddm|= 0.000564
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.7892e-05
diis-c [-7.22196207e-11  5.72920469e-04 -1.74016500e-02  1.01682873e+00]
  HOMO = -0.300613480511554  LUMO = 5.16365255806899
  mo_energy =
[-4.72366387e+00 -3.00613481e-01  5.16365256e+00  4.23906124e+01
  3.14891593e+02  3.20640703e+03]
E1 = -19.048681861087303  E_coul = 4.50006448835481
cycle= 4 E= -14.5486173727325  delta_E= -8.32e-12  |g|= 5.49e-07  |ddm|= 2.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048681861087303  E_coul = 4.50006448835481
  HOMO = -0.300613440960352  LUMO = 5.1636530189571
  mo_energy =
[-4.72366300e+00 -3.00613441e-01  5.16365302e+00  4.23906141e+01
  3.14891596e+02  3.20640703e+03]
E1 = -19.048681948394336  E_coul = 4.500064575661813
Extra cycle  E= -14.5486173727325  delta_E= -2.84e-14  |g|= 3.03e-08  |ddm|= 2.25e-07
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
exp = [1.92126712e+03 1.92126702e+02 2.89507590e+01 6.41044431e+00
 1.66136248e+00 1.04678377e-01]
E = -14.548617372732522
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26712258        1
[INPUT] 0    0    [1    /1   ]  192.126708741        1
[INPUT] 0    0    [1    /1   ]  28.950734439         1
[INPUT] 0    0    [1    /1   ]  6.4105026203         1
[INPUT] 0    0    [1    /1   ]  1.66126516709        1
[INPUT] 0    0    [1    /1   ]  0.104526419445       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671225811193, 1.0]], [0, [192.1267087414569, 1.0]], [0, [28.95073443898089, 1.0]], [0, [6.410502620304715, 1.0]], [0, [1.6612651670949365, 1.0]], [0, [0.10452641944479897, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26712258]
bas 1, expnt(s) = [192.12670874]
bas 2, expnt(s) = [28.95073444]
bas 3, expnt(s) = [6.41050262]
bas 4, expnt(s) = [1.66126517]
bas 5, expnt(s) = [0.10452642]
CPU time:         6.44
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126709e+02 1.30378455e+02
 2.89507344e+01 3.15325950e+01 6.41050262e+00 1.01785071e+01
 1.66126517e+00 3.69695567e+00 1.04526419e-01 4.64445308e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866788692659654
cond(S) = 21.21043640430995
E1 = -19.04610099221079  E_coul = 4.519921055566807
init E= -14.526179936644
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301657682140174  LUMO = 5.16453396090785
  mo_energy =
[-4.71250206e+00 -3.01657682e-01  5.16453396e+00  4.24040489e+01
  3.14913357e+02  3.20643517e+03]
E1 = -19.049377070735666  E_coul = 4.500782529071224
cycle= 1 E= -14.5485945416644  delta_E= -0.0224  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153313
diis-c [-2.35047425e-04  1.00000000e+00]
  HOMO = -0.3006455491837  LUMO = 5.16272903520989
  mo_energy =
[-4.72327134e+00 -3.00645549e-01  5.16272904e+00  4.23902500e+01
  3.14891421e+02  3.20640706e+03]
E1 = -19.04745795959007  E_coul = 4.498840189081816
cycle= 2 E= -14.5486177705083  delta_E= -2.32e-05  |g|= 0.00111  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00129933
diis-c [-6.20447624e-07 -7.23756351e-02  1.07237564e+00]
  HOMO = -0.300729184696683  LUMO = 5.16230983849417
  mo_energy =
[-4.72423001e+00 -3.00729185e-01  5.16230984e+00  4.23893010e+01
  3.14890324e+02  3.20640587e+03]
E1 = -19.047347642007473  E_coul = 4.498729760054777
cycle= 3 E= -14.5486178819527  delta_E= -1.11e-07  |g|= 1.37e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.75863e-05
diis-c [-7.39030305e-11  5.66043695e-04 -1.69058957e-02  1.01633985e+00]
  HOMO = -0.300728874803968  LUMO = 5.16231865447124
  mo_energy =
[-4.72421554e+00 -3.00728875e-01  5.16231865e+00  4.23893383e+01
  3.14890391e+02  3.20640595e+03]
E1 = -19.04734876646254  E_coul = 4.498730884501764
cycle= 4 E= -14.5486178819608  delta_E= -8.08e-12  |g|= 5.56e-07  |ddm|= 2.54e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04734876646254  E_coul = 4.498730884501764
  HOMO = -0.300728834861493  LUMO = 5.16231912079097
  mo_energy =
[-4.72421466e+00 -3.00728835e-01  5.16231912e+00  4.23893399e+01
  3.14890393e+02  3.20640595e+03]
E1 = -19.04734885478295  E_coul = 4.498730972822146
Extra cycle  E= -14.5486178819608  delta_E= -2.84e-14  |g|= 3.07e-08  |ddm|= 2.28e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+03 1.92126709e+02 2.89507344e+01 6.41050262e+00
 1.66126517e+00 1.04526419e-01]
E = -14.548617881960805
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26712258        1
[INPUT] 0    0    [1    /1   ]  192.126708741        1
[INPUT] 0    0    [1    /1   ]  28.950734439         1
[INPUT] 0    0    [1    /1   ]  6.4105026203         1
[INPUT] 0    0    [1    /1   ]  1.66126516709        1
[INPUT] 0    0    [1    /1   ]  0.104526419445       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671225811193, 1.0]], [0, [192.1267087414569, 1.0]], [0, [28.95073443898089, 1.0]], [0, [6.410502620304715, 1.0]], [0, [1.6612651670949365, 1.0]], [0, [0.10452641944479897, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26712258]
bas 1, expnt(s) = [192.12670874]
bas 2, expnt(s) = [28.95073444]
bas 3, expnt(s) = [6.41050262]
bas 4, expnt(s) = [1.66126517]
bas 5, expnt(s) = [0.10452642]
CPU time:         6.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126709e+02 1.30378455e+02
 2.89507344e+01 3.15325950e+01 6.41050262e+00 1.01785071e+01
 1.66126517e+00 3.69695567e+00 1.04526419e-01 4.64445308e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866788692659654
cond(S) = 21.21043640430995
E1 = -19.04610099221079  E_coul = 4.519921055566807
init E= -14.526179936644
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301657682140174  LUMO = 5.16453396090785
  mo_energy =
[-4.71250206e+00 -3.01657682e-01  5.16453396e+00  4.24040489e+01
  3.14913357e+02  3.20643517e+03]
E1 = -19.049377070735666  E_coul = 4.500782529071224
cycle= 1 E= -14.5485945416644  delta_E= -0.0224  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153313
diis-c [-2.35047425e-04  1.00000000e+00]
  HOMO = -0.3006455491837  LUMO = 5.16272903520989
  mo_energy =
[-4.72327134e+00 -3.00645549e-01  5.16272904e+00  4.23902500e+01
  3.14891421e+02  3.20640706e+03]
E1 = -19.04745795959007  E_coul = 4.498840189081816
cycle= 2 E= -14.5486177705083  delta_E= -2.32e-05  |g|= 0.00111  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00129933
diis-c [-6.20447624e-07 -7.23756351e-02  1.07237564e+00]
  HOMO = -0.300729184696683  LUMO = 5.16230983849417
  mo_energy =
[-4.72423001e+00 -3.00729185e-01  5.16230984e+00  4.23893010e+01
  3.14890324e+02  3.20640587e+03]
E1 = -19.047347642007473  E_coul = 4.498729760054777
cycle= 3 E= -14.5486178819527  delta_E= -1.11e-07  |g|= 1.37e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.75863e-05
diis-c [-7.39030305e-11  5.66043695e-04 -1.69058957e-02  1.01633985e+00]
  HOMO = -0.300728874803968  LUMO = 5.16231865447124
  mo_energy =
[-4.72421554e+00 -3.00728875e-01  5.16231865e+00  4.23893383e+01
  3.14890391e+02  3.20640595e+03]
E1 = -19.04734876646254  E_coul = 4.498730884501764
cycle= 4 E= -14.5486178819608  delta_E= -8.08e-12  |g|= 5.56e-07  |ddm|= 2.54e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04734876646254  E_coul = 4.498730884501764
  HOMO = -0.300728834861493  LUMO = 5.16231912079097
  mo_energy =
[-4.72421466e+00 -3.00728835e-01  5.16231912e+00  4.23893399e+01
  3.14890393e+02  3.20640595e+03]
E1 = -19.04734885478295  E_coul = 4.498730972822146
Extra cycle  E= -14.5486178819608  delta_E= -2.84e-14  |g|= 3.07e-08  |ddm|= 2.28e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.21043640430995
E1 = -19.04734885478295  E_coul = 4.498730972822146
init E= -14.5486178819608
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300728832685094  LUMO = 5.16231914278643
  mo_energy =
[-4.72421462e+00 -3.00728833e-01  5.16231914e+00  4.23893400e+01
  3.14890393e+02  3.20640595e+03]
E1 = -19.047348859250473  E_coul = 4.4987309772896635
cycle= 1 E= -14.5486178819608  delta_E= -3.55e-15  |g|= 1.71e-09  |ddm|= 1.3e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047348859250473  E_coul = 4.4987309772896635
  HOMO = -0.300728832560833  LUMO = 5.16231914386188
  mo_energy =
[-4.72421462e+00 -3.00728833e-01  5.16231914e+00  4.23893400e+01
  3.14890393e+02  3.20640595e+03]
E1 = -19.04734885948505  E_coul = 4.498730977524247
Extra cycle  E= -14.5486178819608  delta_E= 3.55e-15  |g|= 1.01e-10  |ddm|= 7.77e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126712e+03 1.92126709e+02 2.89507344e+01 6.41050262e+00
 1.66126517e+00 1.04526419e-01]
grad_E = [ 5.64313437e-07  9.79211492e-05 -3.82393707e-04  9.01792146e-04
 -1.48044119e-03  1.36212866e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2671217         1
[INPUT] 0    0    [1    /1   ]  192.126555795        1
[INPUT] 0    0    [1    /1   ]  28.9513320169        1
[INPUT] 0    0    [1    /1   ]  6.40908947033        1
[INPUT] 0    0    [1    /1   ]  1.66359904277        1
[INPUT] 0    0    [1    /1   ]  0.104499111234       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671216997767, 1.0]], [0, [192.12655579545284, 1.0]], [0, [28.95133201686539, 1.0]], [0, [6.409089470328668, 1.0]], [0, [1.6635990427724707, 1.0]], [0, [0.1044991112340785, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2671217]
bas 1, expnt(s) = [192.1265558]
bas 2, expnt(s) = [28.95133202]
bas 3, expnt(s) = [6.40908947]
bas 4, expnt(s) = [1.66359904]
bas 5, expnt(s) = [0.10449911]
CPU time:         8.50
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126556e+02 1.30378378e+02
 2.89513320e+01 3.15330832e+01 6.40908947e+00 1.01768243e+01
 1.66359904e+00 3.70085032e+00 1.04499111e-01 4.64354300e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986678159720437
cond(S) = 21.23811270951236
E1 = -19.045995246328783  E_coul = 4.519783401013672
init E= -14.5262118453151
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301684322540105  LUMO = 5.16972195081511
  mo_energy =
[-4.71254590e+00 -3.01684323e-01  5.16972195e+00  4.24090539e+01
  3.14917649e+02  3.20643818e+03]
E1 = -19.049553568954604  E_coul = 4.500955937791838
cycle= 1 E= -14.5485976311628  delta_E= -0.0224  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153659
diis-c [-2.36109594e-04  1.00000000e+00]
  HOMO = -0.300664287170123  LUMO = 5.16802237672523
  mo_energy =
[-4.72316745e+00 -3.00664287e-01  5.16802238e+00  4.23955731e+01
  3.14896058e+02  3.20641048e+03]
E1 = -19.047653694808503  E_coul = 4.499032796437762
cycle= 2 E= -14.5486208983707  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130124
diis-c [-6.12250740e-07 -7.26745530e-02  1.07267455e+00]
  HOMO = -0.300747692159159  LUMO = 5.16760941918051
  mo_energy =
[-4.72411635e+00 -3.00747692e-01  5.16760942e+00  4.23946470e+01
  3.14894990e+02  3.20640932e+03]
E1 = -19.047544606447246  E_coul = 4.498923596221521
cycle= 3 E= -14.5486210102257  delta_E= -1.12e-07  |g|= 1.34e-05  |ddm|= 0.000569
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.73534e-05
diis-c [-7.08636780e-11  6.05645851e-04 -1.70838135e-02  1.01647817e+00]
  HOMO = -0.30074736119219  LUMO = 5.16761831304886
  mo_energy =
[-4.72410166e+00 -3.00747361e-01  5.16761831e+00  4.23946845e+01
  3.14895057e+02  3.20640940e+03]
E1 = -19.047545751807075  E_coul = 4.498924741573661
cycle= 4 E= -14.5486210102334  delta_E= -7.69e-12  |g|= 5.37e-07  |ddm|= 2.46e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047545751807075  E_coul = 4.498924741573661
  HOMO = -0.300747322310911  LUMO = 5.1676187661246
  mo_energy =
[-4.72410081e+00 -3.00747322e-01  5.16761877e+00  4.23946860e+01
  3.14895059e+02  3.20640941e+03]
E1 = -19.047545837611757  E_coul = 4.498924827378321
Extra cycle  E= -14.5486210102334  delta_E= -2.13e-14  |g|= 2.97e-08  |ddm|= 2.22e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+03 1.92126556e+02 2.89513320e+01 6.40908947e+00
 1.66359904e+00 1.04499111e-01]
E = -14.548621010233436
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2671217         1
[INPUT] 0    0    [1    /1   ]  192.126555795        1
[INPUT] 0    0    [1    /1   ]  28.9513320169        1
[INPUT] 0    0    [1    /1   ]  6.40908947033        1
[INPUT] 0    0    [1    /1   ]  1.66359904277        1
[INPUT] 0    0    [1    /1   ]  0.104499111234       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671216997767, 1.0]], [0, [192.12655579545284, 1.0]], [0, [28.95133201686539, 1.0]], [0, [6.409089470328668, 1.0]], [0, [1.6635990427724707, 1.0]], [0, [0.1044991112340785, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2671217]
bas 1, expnt(s) = [192.1265558]
bas 2, expnt(s) = [28.95133202]
bas 3, expnt(s) = [6.40908947]
bas 4, expnt(s) = [1.66359904]
bas 5, expnt(s) = [0.10449911]
CPU time:         8.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171944e+02 1.92126556e+02 1.30378378e+02
 2.89513320e+01 3.15330832e+01 6.40908947e+00 1.01768243e+01
 1.66359904e+00 3.70085032e+00 1.04499111e-01 4.64354300e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986678159720437
cond(S) = 21.23811270951236
E1 = -19.045995246328783  E_coul = 4.519783401013672
init E= -14.5262118453151
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301684322540105  LUMO = 5.16972195081511
  mo_energy =
[-4.71254590e+00 -3.01684323e-01  5.16972195e+00  4.24090539e+01
  3.14917649e+02  3.20643818e+03]
E1 = -19.049553568954604  E_coul = 4.500955937791838
cycle= 1 E= -14.5485976311628  delta_E= -0.0224  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153659
diis-c [-2.36109594e-04  1.00000000e+00]
  HOMO = -0.300664287170123  LUMO = 5.16802237672523
  mo_energy =
[-4.72316745e+00 -3.00664287e-01  5.16802238e+00  4.23955731e+01
  3.14896058e+02  3.20641048e+03]
E1 = -19.047653694808503  E_coul = 4.499032796437762
cycle= 2 E= -14.5486208983707  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130124
diis-c [-6.12250740e-07 -7.26745530e-02  1.07267455e+00]
  HOMO = -0.300747692159159  LUMO = 5.16760941918051
  mo_energy =
[-4.72411635e+00 -3.00747692e-01  5.16760942e+00  4.23946470e+01
  3.14894990e+02  3.20640932e+03]
E1 = -19.047544606447246  E_coul = 4.498923596221521
cycle= 3 E= -14.5486210102257  delta_E= -1.12e-07  |g|= 1.34e-05  |ddm|= 0.000569
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.73534e-05
diis-c [-7.08636780e-11  6.05645851e-04 -1.70838135e-02  1.01647817e+00]
  HOMO = -0.30074736119219  LUMO = 5.16761831304886
  mo_energy =
[-4.72410166e+00 -3.00747361e-01  5.16761831e+00  4.23946845e+01
  3.14895057e+02  3.20640940e+03]
E1 = -19.047545751807075  E_coul = 4.498924741573661
cycle= 4 E= -14.5486210102334  delta_E= -7.69e-12  |g|= 5.37e-07  |ddm|= 2.46e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047545751807075  E_coul = 4.498924741573661
  HOMO = -0.300747322310911  LUMO = 5.1676187661246
  mo_energy =
[-4.72410081e+00 -3.00747322e-01  5.16761877e+00  4.23946860e+01
  3.14895059e+02  3.20640941e+03]
E1 = -19.047545837611757  E_coul = 4.498924827378321
Extra cycle  E= -14.5486210102334  delta_E= -2.13e-14  |g|= 2.97e-08  |ddm|= 2.22e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.23811270951236
E1 = -19.047545837611757  E_coul = 4.498924827378321
init E= -14.5486210102334
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300747320187453  LUMO = 5.16761878745363
  mo_energy =
[-4.72410077e+00 -3.00747320e-01  5.16761879e+00  4.23946861e+01
  3.14895060e+02  3.20640941e+03]
E1 = -19.04754584194899  E_coul = 4.498924831715548
cycle= 1 E= -14.5486210102334  delta_E= -3.55e-15  |g|= 1.66e-09  |ddm|= 1.27e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04754584194899  E_coul = 4.498924831715548
  HOMO = -0.300747320066076  LUMO = 5.16761878849508
  mo_energy =
[-4.72410077e+00 -3.00747320e-01  5.16761879e+00  4.23946861e+01
  3.14895060e+02  3.20640941e+03]
E1 = -19.047545842176728  E_coul = 4.49892483194329
Extra cycle  E= -14.5486210102334  delta_E= 1.78e-15  |g|= 9.9e-11  |ddm|= 7.61e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126712e+03 1.92126556e+02 2.89513320e+01 6.40908947e+00
 1.66359904e+00 1.04499111e-01]
grad_E = [ 5.66971224e-07  9.73854452e-05 -3.56923397e-04  5.67239942e-04
 -9.00293577e-05  3.33732736e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26712076        1
[INPUT] 0    0    [1    /1   ]  192.126393228        1
[INPUT] 0    0    [1    /1   ]  28.9519358508        1
[INPUT] 0    0    [1    /1   ]  6.40802944179        1
[INPUT] 0    0    [1    /1   ]  1.66422465797        1
[INPUT] 0    0    [1    /1   ]  0.104490314779       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671207552892, 1.0]], [0, [192.12639322785031, 1.0]], [0, [28.95193585079221, 1.0]], [0, [6.408029441791705, 1.0]], [0, [1.6642246579721163, 1.0]], [0, [0.10449031477863885, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26712076]
bas 1, expnt(s) = [192.12639323]
bas 2, expnt(s) = [28.95193585]
bas 3, expnt(s) = [6.40802944]
bas 4, expnt(s) = [1.66422466]
bas 5, expnt(s) = [0.10449031]
CPU time:        10.64
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171943e+02 1.92126393e+02 1.30378295e+02
 2.89519359e+01 3.15335765e+01 6.40802944e+00 1.01755618e+01
 1.66422466e+00 3.70189408e+00 1.04490315e-01 4.64324984e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866780641953357
cond(S) = 21.245205259961672
E1 = -19.045961983215644  E_coul = 4.519739868438435
init E= -14.5262221147772
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301692524276653  LUMO = 5.17074380854346
  mo_energy =
[-4.71255979e+00 -3.01692524e-01  5.17074381e+00  4.24087730e+01
  3.14917736e+02  3.20643811e+03]
E1 = -19.049603745148616  E_coul = 4.501005452883357
cycle= 1 E= -14.5485982922653  delta_E= -0.0224  |g|= 0.0172  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153759
diis-c [-2.36419502e-04  1.00000000e+00]
  HOMO = -0.300670347596115  LUMO = 5.16907693433715
  mo_energy =
[-4.72313698e+00 -3.00670348e-01  5.16907693e+00  4.23953892e+01
  3.14896246e+02  3.20641054e+03]
E1 = -19.047709696166326  E_coul = 4.499088116582481
cycle= 2 E= -14.5486215795838  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130208
diis-c [-6.09512298e-07 -7.28004444e-02  1.07280044e+00]
  HOMO = -0.300753701932581  LUMO = 5.16866591886162
  mo_energy =
[-4.72408293e+00 -3.00753702e-01  5.16866592e+00  4.23944703e+01
  3.14895187e+02  3.20640939e+03]
E1 = -19.04760096845653  E_coul = 4.498979276827411
cycle= 3 E= -14.5486216916291  delta_E= -1.12e-07  |g|= 1.33e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.72638e-05
diis-c [-6.99323402e-11  6.19639170e-04 -1.71325351e-02  1.01651290e+00]
  HOMO = -0.300753362344608  LUMO = 5.16867484710435
  mo_energy =
[-4.72406815e+00 -3.00753362e-01  5.16867485e+00  4.23945078e+01
  3.14895255e+02  3.20640947e+03]
E1 = -19.047602122915286  E_coul = 4.498980431278605
cycle= 4 E= -14.5486216916367  delta_E= -7.56e-12  |g|= 5.3e-07  |ddm|= 2.43e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047602122915286  E_coul = 4.498980431278605
  HOMO = -0.300753323822468  LUMO = 5.16867529578017
  mo_energy =
[-4.72406731e+00 -3.00753324e-01  5.16867530e+00  4.23945094e+01
  3.14895257e+02  3.20640947e+03]
E1 = -19.047602207892588  E_coul = 4.498980516255888
Extra cycle  E= -14.5486216916367  delta_E= -1.95e-14  |g|= 2.94e-08  |ddm|= 2.2e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+03 1.92126393e+02 2.89519359e+01 6.40802944e+00
 1.66422466e+00 1.04490315e-01]
E = -14.5486216916367
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26712076        1
[INPUT] 0    0    [1    /1   ]  192.126393228        1
[INPUT] 0    0    [1    /1   ]  28.9519358508        1
[INPUT] 0    0    [1    /1   ]  6.40802944179        1
[INPUT] 0    0    [1    /1   ]  1.66422465797        1
[INPUT] 0    0    [1    /1   ]  0.104490314779       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671207552892, 1.0]], [0, [192.12639322785031, 1.0]], [0, [28.95193585079221, 1.0]], [0, [6.408029441791705, 1.0]], [0, [1.6642246579721163, 1.0]], [0, [0.10449031477863885, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26712076]
bas 1, expnt(s) = [192.12639323]
bas 2, expnt(s) = [28.95193585]
bas 3, expnt(s) = [6.40802944]
bas 4, expnt(s) = [1.66422466]
bas 5, expnt(s) = [0.10449031]
CPU time:        10.78
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171943e+02 1.92126393e+02 1.30378295e+02
 2.89519359e+01 3.15335765e+01 6.40802944e+00 1.01755618e+01
 1.66422466e+00 3.70189408e+00 1.04490315e-01 4.64324984e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866780641953357
cond(S) = 21.245205259961672
E1 = -19.045961983215644  E_coul = 4.519739868438435
init E= -14.5262221147772
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301692524276653  LUMO = 5.17074380854346
  mo_energy =
[-4.71255979e+00 -3.01692524e-01  5.17074381e+00  4.24087730e+01
  3.14917736e+02  3.20643811e+03]
E1 = -19.049603745148616  E_coul = 4.501005452883357
cycle= 1 E= -14.5485982922653  delta_E= -0.0224  |g|= 0.0172  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153759
diis-c [-2.36419502e-04  1.00000000e+00]
  HOMO = -0.300670347596115  LUMO = 5.16907693433715
  mo_energy =
[-4.72313698e+00 -3.00670348e-01  5.16907693e+00  4.23953892e+01
  3.14896246e+02  3.20641054e+03]
E1 = -19.047709696166326  E_coul = 4.499088116582481
cycle= 2 E= -14.5486215795838  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130208
diis-c [-6.09512298e-07 -7.28004444e-02  1.07280044e+00]
  HOMO = -0.300753701932581  LUMO = 5.16866591886162
  mo_energy =
[-4.72408293e+00 -3.00753702e-01  5.16866592e+00  4.23944703e+01
  3.14895187e+02  3.20640939e+03]
E1 = -19.04760096845653  E_coul = 4.498979276827411
cycle= 3 E= -14.5486216916291  delta_E= -1.12e-07  |g|= 1.33e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.72638e-05
diis-c [-6.99323402e-11  6.19639170e-04 -1.71325351e-02  1.01651290e+00]
  HOMO = -0.300753362344608  LUMO = 5.16867484710435
  mo_energy =
[-4.72406815e+00 -3.00753362e-01  5.16867485e+00  4.23945078e+01
  3.14895255e+02  3.20640947e+03]
E1 = -19.047602122915286  E_coul = 4.498980431278605
cycle= 4 E= -14.5486216916367  delta_E= -7.56e-12  |g|= 5.3e-07  |ddm|= 2.43e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047602122915286  E_coul = 4.498980431278605
  HOMO = -0.300753323822468  LUMO = 5.16867529578017
  mo_energy =
[-4.72406731e+00 -3.00753324e-01  5.16867530e+00  4.23945094e+01
  3.14895257e+02  3.20640947e+03]
E1 = -19.047602207892588  E_coul = 4.498980516255888
Extra cycle  E= -14.5486216916367  delta_E= -1.95e-14  |g|= 2.94e-08  |ddm|= 2.2e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.245205259961672
E1 = -19.047602207892588  E_coul = 4.498980516255888
init E= -14.5486216916367
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300753321716842  LUMO = 5.16867531689025
  mo_energy =
[-4.72406727e+00 -3.00753322e-01  5.16867532e+00  4.23945095e+01
  3.14895257e+02  3.20640947e+03]
E1 = -19.047602212187275  E_coul = 4.498980520550585
cycle= 1 E= -14.5486216916367  delta_E= 1.07e-14  |g|= 1.65e-09  |ddm|= 1.26e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047602212187275  E_coul = 4.498980520550585
  HOMO = -0.300753321596438  LUMO = 5.16867531792062
  mo_energy =
[-4.72406726e+00 -3.00753322e-01  5.16867532e+00  4.23945095e+01
  3.14895257e+02  3.20640947e+03]
E1 = -19.047602212412816  E_coul = 4.498980520776122
Extra cycle  E= -14.5486216916367  delta_E= -3.55e-15  |g|= 9.82e-11  |ddm|= 7.55e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126712e+03 1.92126393e+02 2.89519359e+01 6.40802944e+00
 1.66422466e+00 1.04490315e-01]
grad_E = [ 5.68139197e-07  9.71513612e-05 -3.46519473e-04  4.47049128e-04
  3.64286048e-04 -3.78499786e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26711836        1
[INPUT] 0    0    [1    /1   ]  192.125981544        1
[INPUT] 0    0    [1    /1   ]  28.9534404853        1
[INPUT] 0    0    [1    /1   ]  6.40565727427        1
[INPUT] 0    0    [1    /1   ]  1.66459234711        1
[INPUT] 0    0    [1    /1   ]  0.104481210037       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671183570692, 1.0]], [0, [192.12598154413766, 1.0]], [0, [28.9534404852533, 1.0]], [0, [6.405657274267911, 1.0]], [0, [1.664592347108344, 1.0]], [0, [0.10448121003703231, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26711836]
bas 1, expnt(s) = [192.12598154]
bas 2, expnt(s) = [28.95344049]
bas 3, expnt(s) = [6.40565727]
bas 4, expnt(s) = [1.66459235]
bas 5, expnt(s) = [0.10448121]
CPU time:        12.67
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171943e+02 1.92125982e+02 1.30378085e+02
 2.89534405e+01 3.15348056e+01 6.40565727e+00 1.01727366e+01
 1.66459235e+00 3.70250748e+00 1.04481210e-01 4.64294639e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986678377299076
cond(S) = 21.24850391219649
E1 = -19.045932325199786  E_coul = 4.519696681256477
init E= -14.5262356439433
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301700141143783  LUMO = 5.17039793518788
  mo_energy =
[-4.71257427e+00 -3.01700141e-01  5.17039794e+00  4.24044504e+01
  3.14915087e+02  3.20643585e+03]
E1 = -19.049640700824312  E_coul = 4.501041235420194
cycle= 1 E= -14.5485994654041  delta_E= -0.0224  |g|= 0.0172  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153821
diis-c [-2.36608333e-04  1.00000000e+00]
  HOMO = -0.300676702084934  LUMO = 5.1687615069076
  mo_energy =
[-4.72311333e+00 -3.00676702e-01  5.16876151e+00  4.23911531e+01
  3.14893676e+02  3.20640838e+03]
E1 = -19.047751803269385  E_coul = 4.4991290148267264
cycle= 2 E= -14.5486227884427  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130336
diis-c [-6.06357182e-07 -7.30016138e-02  1.07300161e+00]
  HOMO = -0.300760055886941  LUMO = 5.16835232365532
  mo_energy =
[-4.72405674e+00 -3.00760056e-01  5.16835232e+00  4.23902411e+01
  3.14892626e+02  3.20640724e+03]
E1 = -19.047643366764525  E_coul = 4.499020465961338
cycle= 3 E= -14.5486229008032  delta_E= -1.12e-07  |g|= 1.31e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.71299e-05
diis-c [-6.90197192e-11  6.36026695e-04 -1.71516349e-02  1.01651561e+00]
  HOMO = -0.300759702831548  LUMO = 5.16836131127869
  mo_energy =
[-4.72404180e+00 -3.00759703e-01  5.16836131e+00  4.23902788e+01
  3.14892694e+02  3.20640732e+03]
E1 = -19.04764453669568  E_coul = 4.499021635885111
cycle= 4 E= -14.5486229008106  delta_E= -7.38e-12  |g|= 5.23e-07  |ddm|= 2.4e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04764453669568  E_coul = 4.499021635885111
  HOMO = -0.300759664690506  LUMO = 5.16836175527405
  mo_energy =
[-4.72404097e+00 -3.00759665e-01  5.16836176e+00  4.23902804e+01
  3.14892696e+02  3.20640733e+03]
E1 = -19.047644620816904  E_coul = 4.499021720006325
Extra cycle  E= -14.5486229008106  delta_E= -7.11e-15  |g|= 2.9e-08  |ddm|= 2.18e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+03 1.92125982e+02 2.89534405e+01 6.40565727e+00
 1.66459235e+00 1.04481210e-01]
E = -14.548622900810578
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26711836        1
[INPUT] 0    0    [1    /1   ]  192.125981544        1
[INPUT] 0    0    [1    /1   ]  28.9534404853        1
[INPUT] 0    0    [1    /1   ]  6.40565727427        1
[INPUT] 0    0    [1    /1   ]  1.66459234711        1
[INPUT] 0    0    [1    /1   ]  0.104481210037       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671183570692, 1.0]], [0, [192.12598154413766, 1.0]], [0, [28.9534404852533, 1.0]], [0, [6.405657274267911, 1.0]], [0, [1.664592347108344, 1.0]], [0, [0.10448121003703231, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26711836]
bas 1, expnt(s) = [192.12598154]
bas 2, expnt(s) = [28.95344049]
bas 3, expnt(s) = [6.40565727]
bas 4, expnt(s) = [1.66459235]
bas 5, expnt(s) = [0.10448121]
CPU time:        12.82
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+03 7.33171943e+02 1.92125982e+02 1.30378085e+02
 2.89534405e+01 3.15348056e+01 6.40565727e+00 1.01727366e+01
 1.66459235e+00 3.70250748e+00 1.04481210e-01 4.64294639e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986678377299076
cond(S) = 21.24850391219649
E1 = -19.045932325199786  E_coul = 4.519696681256477
init E= -14.5262356439433
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301700141143783  LUMO = 5.17039793518788
  mo_energy =
[-4.71257427e+00 -3.01700141e-01  5.17039794e+00  4.24044504e+01
  3.14915087e+02  3.20643585e+03]
E1 = -19.049640700824312  E_coul = 4.501041235420194
cycle= 1 E= -14.5485994654041  delta_E= -0.0224  |g|= 0.0172  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153821
diis-c [-2.36608333e-04  1.00000000e+00]
  HOMO = -0.300676702084934  LUMO = 5.1687615069076
  mo_energy =
[-4.72311333e+00 -3.00676702e-01  5.16876151e+00  4.23911531e+01
  3.14893676e+02  3.20640838e+03]
E1 = -19.047751803269385  E_coul = 4.4991290148267264
cycle= 2 E= -14.5486227884427  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130336
diis-c [-6.06357182e-07 -7.30016138e-02  1.07300161e+00]
  HOMO = -0.300760055886941  LUMO = 5.16835232365532
  mo_energy =
[-4.72405674e+00 -3.00760056e-01  5.16835232e+00  4.23902411e+01
  3.14892626e+02  3.20640724e+03]
E1 = -19.047643366764525  E_coul = 4.499020465961338
cycle= 3 E= -14.5486229008032  delta_E= -1.12e-07  |g|= 1.31e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.71299e-05
diis-c [-6.90197192e-11  6.36026695e-04 -1.71516349e-02  1.01651561e+00]
  HOMO = -0.300759702831548  LUMO = 5.16836131127869
  mo_energy =
[-4.72404180e+00 -3.00759703e-01  5.16836131e+00  4.23902788e+01
  3.14892694e+02  3.20640732e+03]
E1 = -19.04764453669568  E_coul = 4.499021635885111
cycle= 4 E= -14.5486229008106  delta_E= -7.38e-12  |g|= 5.23e-07  |ddm|= 2.4e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04764453669568  E_coul = 4.499021635885111
  HOMO = -0.300759664690506  LUMO = 5.16836175527405
  mo_energy =
[-4.72404097e+00 -3.00759665e-01  5.16836176e+00  4.23902804e+01
  3.14892696e+02  3.20640733e+03]
E1 = -19.047644620816904  E_coul = 4.499021720006325
Extra cycle  E= -14.5486229008106  delta_E= -7.11e-15  |g|= 2.9e-08  |ddm|= 2.18e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.24850391219649
E1 = -19.047644620816904  E_coul = 4.499021720006325
init E= -14.5486229008106
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300759662603347  LUMO = 5.16836177615523
  mo_energy =
[-4.72404093e+00 -3.00759663e-01  5.16836178e+00  4.23902805e+01
  3.14892696e+02  3.20640733e+03]
E1 = -19.047644625068358  E_coul = 4.49902172425777
cycle= 1 E= -14.5486229008106  delta_E= -1.07e-14  |g|= 1.63e-09  |ddm|= 1.25e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047644625068358  E_coul = 4.49902172425777
  HOMO = -0.300759662483928  LUMO = 5.16836177717426
  mo_energy =
[-4.72404093e+00 -3.00759662e-01  5.16836178e+00  4.23902805e+01
  3.14892696e+02  3.20640733e+03]
E1 = -19.047644625291674  E_coul = 4.499021724481087
Extra cycle  E= -14.5486229008106  delta_E=    0  |g|= 9.75e-11  |ddm|= 7.5e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126712e+03 1.92125982e+02 2.89534405e+01 6.40565727e+00
 1.66459235e+00 1.04481210e-01]
grad_E = [ 5.69998886e-07  9.67806795e-05 -3.31201210e-04  2.97459803e-04
  8.43108286e-04 -3.65444140e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26711118        1
[INPUT] 0    0    [1    /1   ]  192.124751676        1
[INPUT] 0    0    [1    /1   ]  28.9578970694        1
[INPUT] 0    0    [1    /1   ]  6.39898675607        1
[INPUT] 0    0    [1    /1   ]  1.66429891527        1
[INPUT] 0    0    [1    /1   ]  0.104468996951       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671111816828, 1.0]], [0, [192.12475167601545, 1.0]], [0, [28.95789706941971, 1.0]], [0, [6.398986756069453, 1.0]], [0, [1.664298915265254, 1.0]], [0, [0.10446899695077749, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26711118]
bas 1, expnt(s) = [192.12475168]
bas 2, expnt(s) = [28.95789707]
bas 3, expnt(s) = [6.39898676]
bas 4, expnt(s) = [1.66429892]
bas 5, expnt(s) = [0.104469]
CPU time:        14.70
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126711e+03 7.33171941e+02 1.92124752e+02 1.30377459e+02
 2.89578971e+01 3.15384459e+01 6.39898676e+00 1.01647905e+01
 1.66429892e+00 3.70201796e+00 1.04468997e-01 4.64253934e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986679986389885
cond(S) = 21.24161021441794
E1 = -19.045905107664986  E_coul = 4.519643800629778
init E= -14.5262613070352
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301707877093546  LUMO = 5.1660401281327
  mo_energy =
[-4.71259408e+00 -3.01707877e-01  5.16604013e+00  4.23875653e+01
  3.14904057e+02  3.20642684e+03]
E1 = -19.04964586779142  E_coul = 4.5010435441534105
cycle= 1 E= -14.548602323638  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153781
diis-c [-2.36486169e-04  1.00000000e+00]
  HOMO = -0.300685465570066  LUMO = 5.16443417287286
  mo_energy =
[-4.72310489e+00 -3.00685466e-01  5.16443417e+00  4.23743431e+01
  3.14882681e+02  3.20639943e+03]
E1 = -19.04776131418979  E_coul = 4.499135578795815
cycle= 2 E= -14.548625735394  delta_E= -2.34e-05  |g|= 0.00113  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130617
diis-c [-6.01306017e-07 -7.34639965e-02  1.07346400e+00]
  HOMO = -0.300768963743464  LUMO = 5.16402690851072
  mo_energy =
[-4.72404631e+00 -3.00768964e-01  5.16402691e+00  4.23734392e+01
  3.14881640e+02  3.20639830e+03]
E1 = -19.0476530328869  E_coul = 4.4990271843848255
cycle= 3 E= -14.5486258485021  delta_E= -1.13e-07  |g|= 1.29e-05  |ddm|= 0.000572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.684e-05
diis-c [-6.79302954e-11  6.62998775e-04 -1.70906471e-02  1.01642765e+00]
  HOMO = -0.3007685802104  LUMO = 5.16403604077094
  mo_energy =
[-4.72403101e+00 -3.00768580e-01  5.16403604e+00  4.23734773e+01
  3.14881708e+02  3.20639839e+03]
E1 = -19.04765424015696  E_coul = 4.4990283916478075
cycle= 4 E= -14.5486258485092  delta_E= -7.08e-12  |g|= 5.14e-07  |ddm|= 2.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04765424015696  E_coul = 4.4990283916478075
  HOMO = -0.300768542599581  LUMO = 5.16403647821447
  mo_energy =
[-4.72403019e+00 -3.00768543e-01  5.16403648e+00  4.23734789e+01
  3.14881710e+02  3.20639839e+03]
E1 = -19.047654323143874  E_coul = 4.49902847463471
Extra cycle  E= -14.5486258485092  delta_E= -1.42e-14  |g|= 2.86e-08  |ddm|= 2.16e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126711e+03 1.92124752e+02 2.89578971e+01 6.39898676e+00
 1.66429892e+00 1.04468997e-01]
E = -14.548625848509165
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26711118        1
[INPUT] 0    0    [1    /1   ]  192.124751676        1
[INPUT] 0    0    [1    /1   ]  28.9578970694        1
[INPUT] 0    0    [1    /1   ]  6.39898675607        1
[INPUT] 0    0    [1    /1   ]  1.66429891527        1
[INPUT] 0    0    [1    /1   ]  0.104468996951       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2671111816828, 1.0]], [0, [192.12475167601545, 1.0]], [0, [28.95789706941971, 1.0]], [0, [6.398986756069453, 1.0]], [0, [1.664298915265254, 1.0]], [0, [0.10446899695077749, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26711118]
bas 1, expnt(s) = [192.12475168]
bas 2, expnt(s) = [28.95789707]
bas 3, expnt(s) = [6.39898676]
bas 4, expnt(s) = [1.66429892]
bas 5, expnt(s) = [0.104469]
CPU time:        14.86
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126711e+03 7.33171941e+02 1.92124752e+02 1.30377459e+02
 2.89578971e+01 3.15384459e+01 6.39898676e+00 1.01647905e+01
 1.66429892e+00 3.70201796e+00 1.04468997e-01 4.64253934e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986679986389885
cond(S) = 21.24161021441794
E1 = -19.045905107664986  E_coul = 4.519643800629778
init E= -14.5262613070352
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301707877093546  LUMO = 5.1660401281327
  mo_energy =
[-4.71259408e+00 -3.01707877e-01  5.16604013e+00  4.23875653e+01
  3.14904057e+02  3.20642684e+03]
E1 = -19.04964586779142  E_coul = 4.5010435441534105
cycle= 1 E= -14.548602323638  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153781
diis-c [-2.36486169e-04  1.00000000e+00]
  HOMO = -0.300685465570066  LUMO = 5.16443417287286
  mo_energy =
[-4.72310489e+00 -3.00685466e-01  5.16443417e+00  4.23743431e+01
  3.14882681e+02  3.20639943e+03]
E1 = -19.04776131418979  E_coul = 4.499135578795815
cycle= 2 E= -14.548625735394  delta_E= -2.34e-05  |g|= 0.00113  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130617
diis-c [-6.01306017e-07 -7.34639965e-02  1.07346400e+00]
  HOMO = -0.300768963743464  LUMO = 5.16402690851072
  mo_energy =
[-4.72404631e+00 -3.00768964e-01  5.16402691e+00  4.23734392e+01
  3.14881640e+02  3.20639830e+03]
E1 = -19.0476530328869  E_coul = 4.4990271843848255
cycle= 3 E= -14.5486258485021  delta_E= -1.13e-07  |g|= 1.29e-05  |ddm|= 0.000572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.684e-05
diis-c [-6.79302954e-11  6.62998775e-04 -1.70906471e-02  1.01642765e+00]
  HOMO = -0.3007685802104  LUMO = 5.16403604077094
  mo_energy =
[-4.72403101e+00 -3.00768580e-01  5.16403604e+00  4.23734773e+01
  3.14881708e+02  3.20639839e+03]
E1 = -19.04765424015696  E_coul = 4.4990283916478075
cycle= 4 E= -14.5486258485092  delta_E= -7.08e-12  |g|= 5.14e-07  |ddm|= 2.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04765424015696  E_coul = 4.4990283916478075
  HOMO = -0.300768542599581  LUMO = 5.16403647821447
  mo_energy =
[-4.72403019e+00 -3.00768543e-01  5.16403648e+00  4.23734789e+01
  3.14881710e+02  3.20639839e+03]
E1 = -19.047654323143874  E_coul = 4.49902847463471
Extra cycle  E= -14.5486258485092  delta_E= -1.42e-14  |g|= 2.86e-08  |ddm|= 2.16e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.24161021441794
E1 = -19.047654323143874  E_coul = 4.49902847463471
init E= -14.5486258485092
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300768540536866  LUMO = 5.16403649878556
  mo_energy =
[-4.72403015e+00 -3.00768541e-01  5.16403650e+00  4.23734789e+01
  3.14881711e+02  3.20639839e+03]
E1 = -19.047654327339995  E_coul = 4.499028478830839
cycle= 1 E= -14.5486258485092  delta_E= 8.88e-15  |g|= 1.61e-09  |ddm|= 1.23e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047654327339995  E_coul = 4.499028478830839
  HOMO = -0.300768540418702  LUMO = 5.16403649978975
  mo_energy =
[-4.72403014e+00 -3.00768540e-01  5.16403650e+00  4.23734789e+01
  3.14881711e+02  3.20639839e+03]
E1 = -19.04765432756064  E_coul = 4.499028479051471
Extra cycle  E= -14.5486258485092  delta_E= -1.24e-14  |g|= 9.65e-11  |ddm|= 7.43e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126711e+03 1.92124752e+02 2.89578971e+01 6.39898676e+00
 1.66429892e+00 1.04468997e-01]
grad_E = [ 5.74270528e-07  9.59336607e-05 -2.98276248e-04  2.92873313e-05
  1.49962065e-03 -8.84489285e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26709782        1
[INPUT] 0    0    [1    /1   ]  192.122464731        1
[INPUT] 0    0    [1    /1   ]  28.9661190362        1
[INPUT] 0    0    [1    /1   ]  6.38717332998        1
[INPUT] 0    0    [1    /1   ]  1.66220927207        1
[INPUT] 0    0    [1    /1   ]  0.104463072981       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670978191275, 1.0]], [0, [192.1224647310163, 1.0]], [0, [28.96611903620437, 1.0]], [0, [6.3871733299798805, 1.0]], [0, [1.6622092720682764, 1.0]], [0, [0.10446307298088618, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26709782]
bas 1, expnt(s) = [192.12246473]
bas 2, expnt(s) = [28.96611904]
bas 3, expnt(s) = [6.38717333]
bas 4, expnt(s) = [1.66220927]
bas 5, expnt(s) = [0.10446307]
CPU time:        16.74
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126710e+03 7.33171937e+02 1.92122465e+02 1.30376295e+02
 2.89661190e+01 3.15451617e+01 6.38717333e+00 1.01507130e+01
 1.66220927e+00 3.69853131e+00 1.04463073e-01 4.64234190e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986683769328323
cond(S) = 21.210289182388017
E1 = -19.04592457050147  E_coul = 4.519630911935439
init E= -14.526293658566
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301705457431858  LUMO = 5.15432369718003
  mo_energy =
[-4.71260451e+00 -3.01705457e-01  5.15432370e+00  4.23521111e+01
  3.14880463e+02  3.20640783e+03]
E1 = -19.04953762980261  E_coul = 4.500930880805399
cycle= 1 E= -14.5486067489972  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153443
diis-c [-2.35447614e-04  1.00000000e+00]
  HOMO = -0.300690308471896  LUMO = 5.15270655779896
  mo_energy =
[-4.72315865e+00 -3.00690308e-01  5.15270656e+00  4.23388231e+01
  3.14858924e+02  3.20638028e+03]
E1 = -19.047648782651425  E_coul = 4.499018479731083
cycle= 2 E= -14.5486303029203  delta_E= -2.36e-05  |g|= 0.00113  |ddm|= 0.00827
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131014
diis-c [-5.96693709e-07 -7.41725014e-02  1.07417250e+00]
  HOMO = -0.300774237248148  LUMO = 5.15229886982077
  mo_energy =
[-4.72410272e+00 -3.00774237e-01  5.15229887e+00  4.23379194e+01
  3.14857882e+02  3.20637915e+03]
E1 = -19.047539987848246  E_coul = 4.498909570656945
cycle= 3 E= -14.5486304171913  delta_E= -1.14e-07  |g|= 1.26e-05  |ddm|= 0.000576
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.64192e-05
diis-c [-6.76774927e-11  6.87929673e-04 -1.68362086e-02  1.01614828e+00]
  HOMO = -0.300773807333256  LUMO = 5.15230823833724
  mo_energy =
[-4.72408684e+00 -3.00773807e-01  5.15230824e+00  4.23379582e+01
  3.14857951e+02  3.20637923e+03]
E1 = -19.047541255732646  E_coul = 4.498910838534633
cycle= 4 E= -14.548630417198  delta_E= -6.71e-12  |g|= 5.08e-07  |ddm|= 2.31e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047541255732646  E_coul = 4.498910838534633
  HOMO = -0.300773770006224  LUMO = 5.15230867201156
  mo_energy =
[-4.72408602e+00 -3.00773770e-01  5.15230867e+00  4.23379598e+01
  3.14857954e+02  3.20637924e+03]
E1 = -19.047541338226587  E_coul = 4.498910921028553
Extra cycle  E= -14.548630417198  delta_E= -2.13e-14  |g|= 2.83e-08  |ddm|= 2.14e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126710e+03 1.92122465e+02 2.89661190e+01 6.38717333e+00
 1.66220927e+00 1.04463073e-01]
E = -14.548630417198034
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26709782        1
[INPUT] 0    0    [1    /1   ]  192.122464731        1
[INPUT] 0    0    [1    /1   ]  28.9661190362        1
[INPUT] 0    0    [1    /1   ]  6.38717332998        1
[INPUT] 0    0    [1    /1   ]  1.66220927207        1
[INPUT] 0    0    [1    /1   ]  0.104463072981       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670978191275, 1.0]], [0, [192.1224647310163, 1.0]], [0, [28.96611903620437, 1.0]], [0, [6.3871733299798805, 1.0]], [0, [1.6622092720682764, 1.0]], [0, [0.10446307298088618, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26709782]
bas 1, expnt(s) = [192.12246473]
bas 2, expnt(s) = [28.96611904]
bas 3, expnt(s) = [6.38717333]
bas 4, expnt(s) = [1.66220927]
bas 5, expnt(s) = [0.10446307]
CPU time:        16.91
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126710e+03 7.33171937e+02 1.92122465e+02 1.30376295e+02
 2.89661190e+01 3.15451617e+01 6.38717333e+00 1.01507130e+01
 1.66220927e+00 3.69853131e+00 1.04463073e-01 4.64234190e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986683769328323
cond(S) = 21.210289182388017
E1 = -19.04592457050147  E_coul = 4.519630911935439
init E= -14.526293658566
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301705457431858  LUMO = 5.15432369718003
  mo_energy =
[-4.71260451e+00 -3.01705457e-01  5.15432370e+00  4.23521111e+01
  3.14880463e+02  3.20640783e+03]
E1 = -19.04953762980261  E_coul = 4.500930880805399
cycle= 1 E= -14.5486067489972  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153443
diis-c [-2.35447614e-04  1.00000000e+00]
  HOMO = -0.300690308471896  LUMO = 5.15270655779896
  mo_energy =
[-4.72315865e+00 -3.00690308e-01  5.15270656e+00  4.23388231e+01
  3.14858924e+02  3.20638028e+03]
E1 = -19.047648782651425  E_coul = 4.499018479731083
cycle= 2 E= -14.5486303029203  delta_E= -2.36e-05  |g|= 0.00113  |ddm|= 0.00827
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131014
diis-c [-5.96693709e-07 -7.41725014e-02  1.07417250e+00]
  HOMO = -0.300774237248148  LUMO = 5.15229886982077
  mo_energy =
[-4.72410272e+00 -3.00774237e-01  5.15229887e+00  4.23379194e+01
  3.14857882e+02  3.20637915e+03]
E1 = -19.047539987848246  E_coul = 4.498909570656945
cycle= 3 E= -14.5486304171913  delta_E= -1.14e-07  |g|= 1.26e-05  |ddm|= 0.000576
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.64192e-05
diis-c [-6.76774927e-11  6.87929673e-04 -1.68362086e-02  1.01614828e+00]
  HOMO = -0.300773807333256  LUMO = 5.15230823833724
  mo_energy =
[-4.72408684e+00 -3.00773807e-01  5.15230824e+00  4.23379582e+01
  3.14857951e+02  3.20637923e+03]
E1 = -19.047541255732646  E_coul = 4.498910838534633
cycle= 4 E= -14.548630417198  delta_E= -6.71e-12  |g|= 5.08e-07  |ddm|= 2.31e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047541255732646  E_coul = 4.498910838534633
  HOMO = -0.300773770006224  LUMO = 5.15230867201156
  mo_energy =
[-4.72408602e+00 -3.00773770e-01  5.15230867e+00  4.23379598e+01
  3.14857954e+02  3.20637924e+03]
E1 = -19.047541338226587  E_coul = 4.498910921028553
Extra cycle  E= -14.548630417198  delta_E= -2.13e-14  |g|= 2.83e-08  |ddm|= 2.14e-07
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.210289182388017
E1 = -19.047541338226587  E_coul = 4.498910921028553
init E= -14.548630417198
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300773767953281  LUMO = 5.15230869242769
  mo_energy =
[-4.72408598e+00 -3.00773768e-01  5.15230869e+00  4.23379598e+01
  3.14857954e+02  3.20637924e+03]
E1 = -19.047541342403996  E_coul = 4.498910925205957
cycle= 1 E= -14.548630417198  delta_E= -5.33e-15  |g|= 1.6e-09  |ddm|= 1.23e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047541342403996  E_coul = 4.498910925205957
  HOMO = -0.30077376783545  LUMO = 5.15230869342594
  mo_energy =
[-4.72408598e+00 -3.00773768e-01  5.15230869e+00  4.23379598e+01
  3.14857954e+02  3.20637924e+03]
E1 = -19.047541342624037  E_coul = 4.498910925425991
Extra cycle  E= -14.548630417198  delta_E= -5.33e-15  |g|= 9.61e-11  |ddm|= 7.41e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126710e+03 1.92122465e+02 2.89661190e+01 6.38717333e+00
 1.66220927e+00 1.04463073e-01]
grad_E = [ 5.80733879e-07  9.46599441e-05 -2.51734463e-04 -2.67683116e-04
  1.85117024e-03 -1.21880499e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26708181        1
[INPUT] 0    0    [1    /1   ]  192.119730455        1
[INPUT] 0    0    [1    /1   ]  28.9758411139        1
[INPUT] 0    0    [1    /1   ]  6.37388409553        1
[INPUT] 0    0    [1    /1   ]  1.65818666982        1
[INPUT] 0    0    [1    /1   ]  0.104472879523       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.267081808034, 1.0]], [0, [192.11973045536172, 1.0]], [0, [28.975841113917813, 1.0]], [0, [6.373884095530473, 1.0]], [0, [1.6581866698213081, 1.0]], [0, [0.10447287952313841, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26708181]
bas 1, expnt(s) = [192.11973046]
bas 2, expnt(s) = [28.97584111]
bas 3, expnt(s) = [6.3738841]
bas 4, expnt(s) = [1.65818667]
bas 5, expnt(s) = [0.10447288]
CPU time:        18.78
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126708e+03 7.33171932e+02 1.92119730e+02 1.30374904e+02
 2.89758411e+01 3.15531021e+01 6.37388410e+00 1.01348691e+01
 1.65818667e+00 3.69181635e+00 1.04472880e-01 4.64266875e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986688919648181
cond(S) = 21.154668319623287
E1 = -19.046021230679642  E_coul = 4.519701549250125
init E= -14.5263196814295
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301685753688362  LUMO = 5.13689170189405
  mo_energy =
[-4.71259027e+00 -3.01685754e-01  5.13689170e+00  4.23064160e+01
  3.14849938e+02  3.20638343e+03]
E1 = -19.049290680893293  E_coul = 4.500679563575759
cycle= 1 E= -14.5486111173175  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152745
diis-c [-2.33311372e-04  1.00000000e+00]
  HOMO = -0.30068455743699  LUMO = 5.13519327275607
  mo_energy =
[-4.72329231e+00 -3.00684557e-01  5.13519327e+00  4.22928433e+01
  3.14827980e+02  3.20635544e+03]
E1 = -19.047384176523984  E_coul = 4.498749362259685
cycle= 2 E= -14.5486348142643  delta_E= -2.37e-05  |g|= 0.00114  |ddm|= 0.00831
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131348
diis-c [-5.95610801e-07 -7.48885851e-02  1.07488859e+00]
  HOMO = -0.300769164124773  LUMO = 5.13478102438623
  mo_energy =
[-4.72424596e+00 -3.00769164e-01  5.13478102e+00  4.22919251e+01
  3.14826918e+02  3.20635429e+03]
E1 = -19.047273950495914  E_coul = 4.4986390208201215
cycle= 3 E= -14.5486349296758  delta_E= -1.15e-07  |g|= 1.25e-05  |ddm|= 0.00058
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60077e-05
diis-c [-6.91648450e-11  6.90508136e-04 -1.63534288e-02  1.01566292e+00]
  HOMO = -0.300768687025892  LUMO = 5.13479065701824
  mo_energy =
[-4.72422946e+00 -3.00768687e-01  5.13479066e+00  4.22919647e+01
  3.14826989e+02  3.20635438e+03]
E1 = -19.047275285625823  E_coul = 4.4986403559434835
cycle= 4 E= -14.5486349296823  delta_E= -6.55e-12  |g|= 5.15e-07  |ddm|= 2.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047275285625823  E_coul = 4.4986403559434835
  HOMO = -0.300768649264483  LUMO = 5.13479109507103
  mo_energy =
[-4.72422864e+00 -3.00768649e-01  5.13479110e+00  4.22919662e+01
  3.14826991e+02  3.20635438e+03]
E1 = -19.04727536925643  E_coul = 4.498640439574066
Extra cycle  E= -14.5486349296824  delta_E= -2.31e-14  |g|= 2.87e-08  |ddm|= 2.17e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126708e+03 1.92119730e+02 2.89758411e+01 6.37388410e+00
 1.65818667e+00 1.04472880e-01]
E = -14.548634929682363
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26708181        1
[INPUT] 0    0    [1    /1   ]  192.119730455        1
[INPUT] 0    0    [1    /1   ]  28.9758411139        1
[INPUT] 0    0    [1    /1   ]  6.37388409553        1
[INPUT] 0    0    [1    /1   ]  1.65818666982        1
[INPUT] 0    0    [1    /1   ]  0.104472879523       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.267081808034, 1.0]], [0, [192.11973045536172, 1.0]], [0, [28.975841113917813, 1.0]], [0, [6.373884095530473, 1.0]], [0, [1.6581866698213081, 1.0]], [0, [0.10447287952313841, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26708181]
bas 1, expnt(s) = [192.11973046]
bas 2, expnt(s) = [28.97584111]
bas 3, expnt(s) = [6.3738841]
bas 4, expnt(s) = [1.65818667]
bas 5, expnt(s) = [0.10447288]
CPU time:        18.97
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126708e+03 7.33171932e+02 1.92119730e+02 1.30374904e+02
 2.89758411e+01 3.15531021e+01 6.37388410e+00 1.01348691e+01
 1.65818667e+00 3.69181635e+00 1.04472880e-01 4.64266875e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986688919648181
cond(S) = 21.154668319623287
E1 = -19.046021230679642  E_coul = 4.519701549250125
init E= -14.5263196814295
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301685753688362  LUMO = 5.13689170189405
  mo_energy =
[-4.71259027e+00 -3.01685754e-01  5.13689170e+00  4.23064160e+01
  3.14849938e+02  3.20638343e+03]
E1 = -19.049290680893293  E_coul = 4.500679563575759
cycle= 1 E= -14.5486111173175  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152745
diis-c [-2.33311372e-04  1.00000000e+00]
  HOMO = -0.30068455743699  LUMO = 5.13519327275607
  mo_energy =
[-4.72329231e+00 -3.00684557e-01  5.13519327e+00  4.22928433e+01
  3.14827980e+02  3.20635544e+03]
E1 = -19.047384176523984  E_coul = 4.498749362259685
cycle= 2 E= -14.5486348142643  delta_E= -2.37e-05  |g|= 0.00114  |ddm|= 0.00831
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131348
diis-c [-5.95610801e-07 -7.48885851e-02  1.07488859e+00]
  HOMO = -0.300769164124773  LUMO = 5.13478102438623
  mo_energy =
[-4.72424596e+00 -3.00769164e-01  5.13478102e+00  4.22919251e+01
  3.14826918e+02  3.20635429e+03]
E1 = -19.047273950495914  E_coul = 4.4986390208201215
cycle= 3 E= -14.5486349296758  delta_E= -1.15e-07  |g|= 1.25e-05  |ddm|= 0.00058
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60077e-05
diis-c [-6.91648450e-11  6.90508136e-04 -1.63534288e-02  1.01566292e+00]
  HOMO = -0.300768687025892  LUMO = 5.13479065701824
  mo_energy =
[-4.72422946e+00 -3.00768687e-01  5.13479066e+00  4.22919647e+01
  3.14826989e+02  3.20635438e+03]
E1 = -19.047275285625823  E_coul = 4.4986403559434835
cycle= 4 E= -14.5486349296823  delta_E= -6.55e-12  |g|= 5.15e-07  |ddm|= 2.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047275285625823  E_coul = 4.4986403559434835
  HOMO = -0.300768649264483  LUMO = 5.13479109507103
  mo_energy =
[-4.72422864e+00 -3.00768649e-01  5.13479110e+00  4.22919662e+01
  3.14826991e+02  3.20635438e+03]
E1 = -19.04727536925643  E_coul = 4.498640439574066
Extra cycle  E= -14.5486349296824  delta_E= -2.31e-14  |g|= 2.87e-08  |ddm|= 2.17e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.154668319623287
E1 = -19.04727536925643  E_coul = 4.498640439574066
init E= -14.5486349296824
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300768647183342  LUMO = 5.13479111574534
  mo_energy =
[-4.72422860e+00 -3.00768647e-01  5.13479112e+00  4.22919663e+01
  3.14826991e+02  3.20635438e+03]
E1 = -19.047275373501474  E_coul = 4.4986404438191165
cycle= 1 E= -14.5486349296824  delta_E= 5.33e-15  |g|= 1.62e-09  |ddm|= 1.25e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047275373501474  E_coul = 4.4986404438191165
  HOMO = -0.300768647063656  LUMO = 5.13479111675888
  mo_energy =
[-4.72422860e+00 -3.00768647e-01  5.13479112e+00  4.22919663e+01
  3.14826991e+02  3.20635438e+03]
E1 = -19.04727537372563  E_coul = 4.498640444043276
Extra cycle  E= -14.5486349296824  delta_E= 3.55e-15  |g|= 9.76e-11  |ddm|= 7.53e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126708e+03 1.92119730e+02 2.89758411e+01 6.37388410e+00
 1.65818667e+00 1.04472880e-01]
grad_E = [ 5.86874773e-07  9.34597791e-05 -2.11687020e-04 -4.13209258e-04
  1.38732105e-03 -9.85349120e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707397        1
[INPUT] 0    0    [1    /1   ]  192.118400054        1
[INPUT] 0    0    [1    /1   ]  28.9804206087        1
[INPUT] 0    0    [1    /1   ]  6.36844200944        1
[INPUT] 0    0    [1    /1   ]  1.655100617          1
[INPUT] 0    0    [1    /1   ]  0.104491033645       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670739673085, 1.0]], [0, [192.11840005387458, 1.0]], [0, [28.980420608699653, 1.0]], [0, [6.368442009439617, 1.0]], [0, [1.6551006170026352, 1.0]], [0, [0.10449103364525354, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707397]
bas 1, expnt(s) = [192.11840005]
bas 2, expnt(s) = [28.98042061]
bas 3, expnt(s) = [6.36844201]
bas 4, expnt(s) = [1.65510062]
bas 5, expnt(s) = [0.10449103]
CPU time:        20.90
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171930e+02 1.92118400e+02 1.30374227e+02
 2.89804206e+01 3.15568422e+01 6.36844201e+00 1.01283785e+01
 1.65510062e+00 3.68666202e+00 1.04491034e-01 4.64327380e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986691613191365
cond(S) = 21.114186999931604
E1 = -19.046125940860513  E_coul = 4.519803293800928
init E= -14.5263226470596
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301663152194312  LUMO = 5.12608891950878
  mo_energy =
[-4.71256257e+00 -3.01663152e-01  5.12608892e+00  4.22828887e+01
  3.14834536e+02  3.20637118e+03]
E1 = -19.04908287906363  E_coul = 4.500469834277924
cycle= 1 E= -14.5486130447857  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152183
diis-c [-2.31595361e-04  1.00000000e+00]
  HOMO = -0.300672592866832  LUMO = 5.12429856022809
  mo_energy =
[-4.72341013e+00 -3.00672593e-01  5.12429856e+00  4.22690191e+01
  3.14812205e+02  3.20634278e+03]
E1 = -19.047158056261594  E_coul = 4.49852126952404
cycle= 2 E= -14.5486367867376  delta_E= -2.37e-05  |g|= 0.00114  |ddm|= 0.00834
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131395
diis-c [-5.98526883e-07 -7.51272126e-02  1.07512721e+00]
  HOMO = -0.300757645854033  LUMO = 5.12388091895241
  mo_energy =
[-4.72437343e+00 -3.00757646e-01  5.12388092e+00  4.22680822e+01
  3.14811119e+02  3.20634160e+03]
E1 = -19.04704650454154  E_coul = 4.498409602071395
cycle= 3 E= -14.5486369024701  delta_E= -1.16e-07  |g|= 1.26e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.58733e-05
diis-c [-7.13955631e-11  6.68992062e-04 -1.59662311e-02  1.01529724e+00]
  HOMO = -0.300757152764296  LUMO = 5.12389066563077
  mo_energy =
[-4.72435670e+00 -3.00757153e-01  5.12389067e+00  4.22681221e+01
  3.14811189e+02  3.20634169e+03]
E1 = -19.047047867977096  E_coul = 4.498410965500357
cycle= 4 E= -14.5486369024767  delta_E= -6.59e-12  |g|= 5.28e-07  |ddm|= 2.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047047867977096  E_coul = 4.498410965500357
  HOMO = -0.300757114150118  LUMO = 5.12389111312249
  mo_energy =
[-4.72435585e+00 -3.00757114e-01  5.12389111e+00  4.22681237e+01
  3.14811192e+02  3.20634169e+03]
E1 = -19.047047953582148  E_coul = 4.4984110511053865
Extra cycle  E= -14.5486369024768  delta_E= -2.31e-14  |g|= 2.94e-08  |ddm|= 2.21e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92118400e+02 2.89804206e+01 6.36844201e+00
 1.65510062e+00 1.04491034e-01]
E = -14.548636902476762
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707397        1
[INPUT] 0    0    [1    /1   ]  192.118400054        1
[INPUT] 0    0    [1    /1   ]  28.9804206087        1
[INPUT] 0    0    [1    /1   ]  6.36844200944        1
[INPUT] 0    0    [1    /1   ]  1.655100617          1
[INPUT] 0    0    [1    /1   ]  0.104491033645       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670739673085, 1.0]], [0, [192.11840005387458, 1.0]], [0, [28.980420608699653, 1.0]], [0, [6.368442009439617, 1.0]], [0, [1.6551006170026352, 1.0]], [0, [0.10449103364525354, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707397]
bas 1, expnt(s) = [192.11840005]
bas 2, expnt(s) = [28.98042061]
bas 3, expnt(s) = [6.36844201]
bas 4, expnt(s) = [1.65510062]
bas 5, expnt(s) = [0.10449103]
CPU time:        21.10
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171930e+02 1.92118400e+02 1.30374227e+02
 2.89804206e+01 3.15568422e+01 6.36844201e+00 1.01283785e+01
 1.65510062e+00 3.68666202e+00 1.04491034e-01 4.64327380e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986691613191365
cond(S) = 21.114186999931604
E1 = -19.046125940860513  E_coul = 4.519803293800928
init E= -14.5263226470596
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301663152194312  LUMO = 5.12608891950878
  mo_energy =
[-4.71256257e+00 -3.01663152e-01  5.12608892e+00  4.22828887e+01
  3.14834536e+02  3.20637118e+03]
E1 = -19.04908287906363  E_coul = 4.500469834277924
cycle= 1 E= -14.5486130447857  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152183
diis-c [-2.31595361e-04  1.00000000e+00]
  HOMO = -0.300672592866832  LUMO = 5.12429856022809
  mo_energy =
[-4.72341013e+00 -3.00672593e-01  5.12429856e+00  4.22690191e+01
  3.14812205e+02  3.20634278e+03]
E1 = -19.047158056261594  E_coul = 4.49852126952404
cycle= 2 E= -14.5486367867376  delta_E= -2.37e-05  |g|= 0.00114  |ddm|= 0.00834
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131395
diis-c [-5.98526883e-07 -7.51272126e-02  1.07512721e+00]
  HOMO = -0.300757645854033  LUMO = 5.12388091895241
  mo_energy =
[-4.72437343e+00 -3.00757646e-01  5.12388092e+00  4.22680822e+01
  3.14811119e+02  3.20634160e+03]
E1 = -19.04704650454154  E_coul = 4.498409602071395
cycle= 3 E= -14.5486369024701  delta_E= -1.16e-07  |g|= 1.26e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.58733e-05
diis-c [-7.13955631e-11  6.68992062e-04 -1.59662311e-02  1.01529724e+00]
  HOMO = -0.300757152764296  LUMO = 5.12389066563077
  mo_energy =
[-4.72435670e+00 -3.00757153e-01  5.12389067e+00  4.22681221e+01
  3.14811189e+02  3.20634169e+03]
E1 = -19.047047867977096  E_coul = 4.498410965500357
cycle= 4 E= -14.5486369024767  delta_E= -6.59e-12  |g|= 5.28e-07  |ddm|= 2.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047047867977096  E_coul = 4.498410965500357
  HOMO = -0.300757114150118  LUMO = 5.12389111312249
  mo_energy =
[-4.72435585e+00 -3.00757114e-01  5.12389111e+00  4.22681237e+01
  3.14811192e+02  3.20634169e+03]
E1 = -19.047047953582148  E_coul = 4.4984110511053865
Extra cycle  E= -14.5486369024768  delta_E= -2.31e-14  |g|= 2.94e-08  |ddm|= 2.21e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.114186999931604
E1 = -19.047047953582148  E_coul = 4.4984110511053865
init E= -14.5486369024768
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757112022223  LUMO = 5.12389113428666
  mo_energy =
[-4.72435581e+00 -3.00757112e-01  5.12389113e+00  4.22681237e+01
  3.14811192e+02  3.20634169e+03]
E1 = -19.047047957934307  E_coul = 4.498411055457546
cycle= 1 E= -14.5486369024768  delta_E=    0  |g|= 1.66e-09  |ddm|= 1.27e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047047957934307  E_coul = 4.498411055457546
  HOMO = -0.300757111899759  LUMO = 5.12389113532621
  mo_energy =
[-4.72435581e+00 -3.00757112e-01  5.12389114e+00  4.22681237e+01
  3.14811192e+02  3.20634169e+03]
E1 = -19.04704795816441  E_coul = 4.498411055687664
Extra cycle  E= -14.5486369024767  delta_E= 1.78e-14  |g|= 9.99e-11  |ddm|= 7.7e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92118400e+02 2.89804206e+01 6.36844201e+00
 1.65510062e+00 1.04491034e-01]
grad_E = [ 5.88445150e-07  9.31613708e-05 -2.05931802e-04 -3.08034717e-04
  4.54734757e-04 -3.71398969e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707337        1
[INPUT] 0    0    [1    /1   ]  192.118309503        1
[INPUT] 0    0    [1    /1   ]  28.980552504         1
[INPUT] 0    0    [1    /1   ]  6.36917791898        1
[INPUT] 0    0    [1    /1   ]  1.65433204154        1
[INPUT] 0    0    [1    /1   ]  0.104500462266       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670733722505, 1.0]], [0, [192.1183095030923, 1.0]], [0, [28.980552503972216, 1.0]], [0, [6.369177918978049, 1.0]], [0, [1.6543320415352407, 1.0]], [0, [0.10450046226556339, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707337]
bas 1, expnt(s) = [192.1183095]
bas 2, expnt(s) = [28.9805525]
bas 3, expnt(s) = [6.36917792]
bas 4, expnt(s) = [1.65433204]
bas 5, expnt(s) = [0.10450046]
CPU time:        22.98
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171930e+02 1.92118310e+02 1.30374181e+02
 2.89805525e+01 3.15569499e+01 6.36917792e+00 1.01292563e+01
 1.65433204e+00 3.68537797e+00 1.04500462e-01 4.64358803e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866917429179645
cond(S) = 21.104908071200306
E1 = -19.04616708046358  E_coul = 4.519850652293781
init E= -14.5263164281698
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301654096483202  LUMO = 5.12452563628574
  mo_energy =
[-4.71254815e+00 -3.01654096e-01  5.12452564e+00  4.22823418e+01
  3.14834935e+02  3.20637143e+03]
E1 = -19.049025377196283  E_coul = 4.500411931951749
cycle= 1 E= -14.5486134452445  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152032
diis-c [-2.31138598e-04  1.00000000e+00]
  HOMO = -0.300666130707547  LUMO = 5.12269946517198
  mo_energy =
[-4.72344573e+00 -3.00666131e-01  5.12269947e+00  4.22683640e+01
  3.14812490e+02  3.20634289e+03]
E1 = -19.04709394938185  E_coul = 4.498456779576277
cycle= 2 E= -14.5486371698056  delta_E= -2.37e-05  |g|= 0.00113  |ddm|= 0.00834
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131315
diis-c [-6.00943888e-07 -7.50462493e-02  1.07504625e+00]
  HOMO = -0.300751259739316  LUMO = 5.12227966192457
  mo_energy =
[-4.72441242e+00 -3.00751260e-01  5.12227966e+00  4.22674191e+01
  3.14811393e+02  3.20634170e+03]
E1 = -19.04698197337208  E_coul = 4.4983446880014695
cycle= 3 E= -14.5486372853706  delta_E= -1.16e-07  |g|= 1.27e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.59218e-05
diis-c [-7.24420586e-11  6.53520292e-04 -1.58669741e-02  1.01521345e+00]
  HOMO = -0.300750772016891  LUMO = 5.12228939506147
  mo_energy =
[-4.72439574e+00 -3.00750772e-01  5.12228940e+00  4.22674590e+01
  3.14811464e+02  3.20634179e+03]
E1 = -19.046983332789384  E_coul = 4.498346047412104
cycle= 4 E= -14.5486372853773  delta_E= -6.67e-12  |g|= 5.35e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046983332789384  E_coul = 4.498346047412104
  HOMO = -0.300750732972901  LUMO = 5.12228984752566
  mo_energy =
[-4.72439489e+00 -3.00750733e-01  5.12228985e+00  4.22674606e+01
  3.14811466e+02  3.20634179e+03]
E1 = -19.04698341935612  E_coul = 4.498346133978821
Extra cycle  E= -14.5486372853773  delta_E= -1.95e-14  |g|= 2.98e-08  |ddm|= 2.24e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92118310e+02 2.89805525e+01 6.36917792e+00
 1.65433204e+00 1.04500462e-01]
E = -14.5486372853773
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707337        1
[INPUT] 0    0    [1    /1   ]  192.118309503        1
[INPUT] 0    0    [1    /1   ]  28.980552504         1
[INPUT] 0    0    [1    /1   ]  6.36917791898        1
[INPUT] 0    0    [1    /1   ]  1.65433204154        1
[INPUT] 0    0    [1    /1   ]  0.104500462266       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670733722505, 1.0]], [0, [192.1183095030923, 1.0]], [0, [28.980552503972216, 1.0]], [0, [6.369177918978049, 1.0]], [0, [1.6543320415352407, 1.0]], [0, [0.10450046226556339, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707337]
bas 1, expnt(s) = [192.1183095]
bas 2, expnt(s) = [28.9805525]
bas 3, expnt(s) = [6.36917792]
bas 4, expnt(s) = [1.65433204]
bas 5, expnt(s) = [0.10450046]
CPU time:        23.19
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171930e+02 1.92118310e+02 1.30374181e+02
 2.89805525e+01 3.15569499e+01 6.36917792e+00 1.01292563e+01
 1.65433204e+00 3.68537797e+00 1.04500462e-01 4.64358803e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866917429179645
cond(S) = 21.104908071200306
E1 = -19.04616708046358  E_coul = 4.519850652293781
init E= -14.5263164281698
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301654096483202  LUMO = 5.12452563628574
  mo_energy =
[-4.71254815e+00 -3.01654096e-01  5.12452564e+00  4.22823418e+01
  3.14834935e+02  3.20637143e+03]
E1 = -19.049025377196283  E_coul = 4.500411931951749
cycle= 1 E= -14.5486134452445  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152032
diis-c [-2.31138598e-04  1.00000000e+00]
  HOMO = -0.300666130707547  LUMO = 5.12269946517198
  mo_energy =
[-4.72344573e+00 -3.00666131e-01  5.12269947e+00  4.22683640e+01
  3.14812490e+02  3.20634289e+03]
E1 = -19.04709394938185  E_coul = 4.498456779576277
cycle= 2 E= -14.5486371698056  delta_E= -2.37e-05  |g|= 0.00113  |ddm|= 0.00834
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131315
diis-c [-6.00943888e-07 -7.50462493e-02  1.07504625e+00]
  HOMO = -0.300751259739316  LUMO = 5.12227966192457
  mo_energy =
[-4.72441242e+00 -3.00751260e-01  5.12227966e+00  4.22674191e+01
  3.14811393e+02  3.20634170e+03]
E1 = -19.04698197337208  E_coul = 4.4983446880014695
cycle= 3 E= -14.5486372853706  delta_E= -1.16e-07  |g|= 1.27e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.59218e-05
diis-c [-7.24420586e-11  6.53520292e-04 -1.58669741e-02  1.01521345e+00]
  HOMO = -0.300750772016891  LUMO = 5.12228939506147
  mo_energy =
[-4.72439574e+00 -3.00750772e-01  5.12228940e+00  4.22674590e+01
  3.14811464e+02  3.20634179e+03]
E1 = -19.046983332789384  E_coul = 4.498346047412104
cycle= 4 E= -14.5486372853773  delta_E= -6.67e-12  |g|= 5.35e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046983332789384  E_coul = 4.498346047412104
  HOMO = -0.300750732972901  LUMO = 5.12228984752566
  mo_energy =
[-4.72439489e+00 -3.00750733e-01  5.12228985e+00  4.22674606e+01
  3.14811466e+02  3.20634179e+03]
E1 = -19.04698341935612  E_coul = 4.498346133978821
Extra cycle  E= -14.5486372853773  delta_E= -1.95e-14  |g|= 2.98e-08  |ddm|= 2.24e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.104908071200306
E1 = -19.04698341935612  E_coul = 4.498346133978821
init E= -14.5486372853773
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300750730823019  LUMO = 5.12228986893781
  mo_energy =
[-4.72439484e+00 -3.00750731e-01  5.12228987e+00  4.22674606e+01
  3.14811466e+02  3.20634179e+03]
E1 = -19.046983423758334  E_coul = 4.498346138381038
cycle= 1 E= -14.5486372853773  delta_E= 3.55e-15  |g|= 1.68e-09  |ddm|= 1.29e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.046983423758334  E_coul = 4.498346138381038
  HOMO = -0.300750730699318  LUMO = 5.12228986998996
  mo_energy =
[-4.72439484e+00 -3.00750731e-01  5.12228987e+00  4.22674606e+01
  3.14811466e+02  3.20634179e+03]
E1 = -19.04698342399112  E_coul = 4.4983461386138215
Extra cycle  E= -14.5486372853773  delta_E=    0  |g|= 1.01e-10  |ddm|= 7.77e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92118310e+02 2.89805525e+01 6.36917792e+00
 1.65433204e+00 1.04500462e-01]
grad_E = [ 5.87506466e-07  9.33512216e-05 -2.15338210e-04 -1.86693593e-04
 -3.12320035e-05 -1.72118203e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707321        1
[INPUT] 0    0    [1    /1   ]  192.11829358         1
[INPUT] 0    0    [1    /1   ]  28.980411492         1
[INPUT] 0    0    [1    /1   ]  6.37022996576        1
[INPUT] 0    0    [1    /1   ]  1.65429006248        1
[INPUT] 0    0    [1    /1   ]  0.104503350112       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670732103097, 1.0]], [0, [192.11829357971348, 1.0]], [0, [28.98041149197623, 1.0]], [0, [6.3702299657634125, 1.0]], [0, [1.6542900624829384, 1.0]], [0, [0.10450335011181001, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707321]
bas 1, expnt(s) = [192.11829358]
bas 2, expnt(s) = [28.98041149]
bas 3, expnt(s) = [6.37022997]
bas 4, expnt(s) = [1.65429006]
bas 5, expnt(s) = [0.10450335]
CPU time:        25.12
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171930e+02 1.92118294e+02 1.30374172e+02
 2.89804115e+01 3.15568347e+01 6.37022997e+00 1.01305111e+01
 1.65429006e+00 3.68530783e+00 1.04503350e-01 4.64368427e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866915016516966
cond(S) = 21.104617875863404
E1 = -19.04617702244599  E_coul = 4.519863836417062
init E= -14.5263131860289
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301651952738208  LUMO = 5.12498339447095
  mo_energy =
[-4.71254382e+00 -3.01651953e-01  5.12498339e+00  4.22851871e+01
  3.14837941e+02  3.20637363e+03]
E1 = -19.04901990462742  E_coul = 4.5004063087273565
cycle= 1 E= -14.5486135959001  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152016
diis-c [-2.31088459e-04  1.00000000e+00]
  HOMO = -0.300664097444892  LUMO = 5.12314915566534
  mo_energy =
[-4.72345064e+00 -3.00664097e-01  5.12314916e+00  4.22711871e+01
  3.14815479e+02  3.20634507e+03]
E1 = -19.047087167304905  E_coul = 4.498449861544525
cycle= 2 E= -14.5486373057604  delta_E= -2.37e-05  |g|= 0.00113  |ddm|= 0.00834
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131267
diis-c [-6.01833868e-07 -7.49778325e-02  1.07497783e+00]
  HOMO = -0.300749213519903  LUMO = 5.12272885014489
  mo_energy =
[-4.72441797e+00 -3.00749214e-01  5.12272885e+00  4.22702402e+01
  3.14814380e+02  3.20634388e+03]
E1 = -19.046975125056125  E_coul = 4.498337703858116
cycle= 3 E= -14.548637421198  delta_E= -1.15e-07  |g|= 1.27e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.59608e-05
diis-c [-7.27252818e-11  6.47969085e-04 -1.58585782e-02  1.01521061e+00]
  HOMO = -0.300748730323598  LUMO = 5.1227385634906
  mo_energy =
[-4.72440135e+00 -3.00748730e-01  5.12273856e+00  4.22702800e+01
  3.14814450e+02  3.20634397e+03]
E1 = -19.046976479229667  E_coul = 4.498339058024945
cycle= 4 E= -14.5486374212047  delta_E= -6.71e-12  |g|= 5.37e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046976479229667  E_coul = 4.498339058024945
  HOMO = -0.300748691156347  LUMO = 5.122739017442
  mo_energy =
[-4.72440049e+00 -3.00748691e-01  5.12273902e+00  4.22702816e+01
  3.14814453e+02  3.20634397e+03]
E1 = -19.04697656606516  E_coul = 4.49833914486042
Extra cycle  E= -14.5486374212047  delta_E= -2.13e-14  |g|= 2.99e-08  |ddm|= 2.24e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92118294e+02 2.89804115e+01 6.37022997e+00
 1.65429006e+00 1.04503350e-01]
E = -14.548637421204742
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707321        1
[INPUT] 0    0    [1    /1   ]  192.11829358         1
[INPUT] 0    0    [1    /1   ]  28.980411492         1
[INPUT] 0    0    [1    /1   ]  6.37022996576        1
[INPUT] 0    0    [1    /1   ]  1.65429006248        1
[INPUT] 0    0    [1    /1   ]  0.104503350112       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670732103097, 1.0]], [0, [192.11829357971348, 1.0]], [0, [28.98041149197623, 1.0]], [0, [6.3702299657634125, 1.0]], [0, [1.6542900624829384, 1.0]], [0, [0.10450335011181001, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707321]
bas 1, expnt(s) = [192.11829358]
bas 2, expnt(s) = [28.98041149]
bas 3, expnt(s) = [6.37022997]
bas 4, expnt(s) = [1.65429006]
bas 5, expnt(s) = [0.10450335]
CPU time:        25.35
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171930e+02 1.92118294e+02 1.30374172e+02
 2.89804115e+01 3.15568347e+01 6.37022997e+00 1.01305111e+01
 1.65429006e+00 3.68530783e+00 1.04503350e-01 4.64368427e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866915016516966
cond(S) = 21.104617875863404
E1 = -19.04617702244599  E_coul = 4.519863836417062
init E= -14.5263131860289
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301651952738208  LUMO = 5.12498339447095
  mo_energy =
[-4.71254382e+00 -3.01651953e-01  5.12498339e+00  4.22851871e+01
  3.14837941e+02  3.20637363e+03]
E1 = -19.04901990462742  E_coul = 4.5004063087273565
cycle= 1 E= -14.5486135959001  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0152016
diis-c [-2.31088459e-04  1.00000000e+00]
  HOMO = -0.300664097444892  LUMO = 5.12314915566534
  mo_energy =
[-4.72345064e+00 -3.00664097e-01  5.12314916e+00  4.22711871e+01
  3.14815479e+02  3.20634507e+03]
E1 = -19.047087167304905  E_coul = 4.498449861544525
cycle= 2 E= -14.5486373057604  delta_E= -2.37e-05  |g|= 0.00113  |ddm|= 0.00834
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131267
diis-c [-6.01833868e-07 -7.49778325e-02  1.07497783e+00]
  HOMO = -0.300749213519903  LUMO = 5.12272885014489
  mo_energy =
[-4.72441797e+00 -3.00749214e-01  5.12272885e+00  4.22702402e+01
  3.14814380e+02  3.20634388e+03]
E1 = -19.046975125056125  E_coul = 4.498337703858116
cycle= 3 E= -14.548637421198  delta_E= -1.15e-07  |g|= 1.27e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.59608e-05
diis-c [-7.27252818e-11  6.47969085e-04 -1.58585782e-02  1.01521061e+00]
  HOMO = -0.300748730323598  LUMO = 5.1227385634906
  mo_energy =
[-4.72440135e+00 -3.00748730e-01  5.12273856e+00  4.22702800e+01
  3.14814450e+02  3.20634397e+03]
E1 = -19.046976479229667  E_coul = 4.498339058024945
cycle= 4 E= -14.5486374212047  delta_E= -6.71e-12  |g|= 5.37e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046976479229667  E_coul = 4.498339058024945
  HOMO = -0.300748691156347  LUMO = 5.122739017442
  mo_energy =
[-4.72440049e+00 -3.00748691e-01  5.12273902e+00  4.22702816e+01
  3.14814453e+02  3.20634397e+03]
E1 = -19.04697656606516  E_coul = 4.49833914486042
Extra cycle  E= -14.5486374212047  delta_E= -2.13e-14  |g|= 2.99e-08  |ddm|= 2.24e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.104617875863404
E1 = -19.04697656606516  E_coul = 4.49833914486042
init E= -14.5486374212047
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300748689000554  LUMO = 5.12273903892597
  mo_energy =
[-4.72440045e+00 -3.00748689e-01  5.12273904e+00  4.22702817e+01
  3.14814453e+02  3.20634397e+03]
E1 = -19.04697657048084  E_coul = 4.498339149276096
cycle= 1 E= -14.5486374212047  delta_E= -3.55e-15  |g|= 1.69e-09  |ddm|= 1.29e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04697657048084  E_coul = 4.498339149276096
  HOMO = -0.300748688876539  LUMO = 5.12273903998166
  mo_energy =
[-4.72440045e+00 -3.00748689e-01  5.12273904e+00  4.22702817e+01
  3.14814453e+02  3.20634397e+03]
E1 = -19.046976570714303  E_coul = 4.498339149509557
Extra cycle  E= -14.5486374212047  delta_E=    0  |g|= 1.01e-10  |ddm|= 7.79e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92118294e+02 2.89804115e+01 6.37022997e+00
 1.65429006e+00 1.04503350e-01]
grad_E = [ 5.86893101e-07  9.34750614e-05 -2.20769505e-04 -1.35716860e-04
 -1.77752892e-04  9.97132179e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707095        1
[INPUT] 0    0    [1    /1   ]  192.117949348        1
[INPUT] 0    0    [1    /1   ]  28.9809376937        1
[INPUT] 0    0    [1    /1   ]  6.37245458466        1
[INPUT] 0    0    [1    /1   ]  1.65432868803        1
[INPUT] 0    0    [1    /1   ]  0.104508004782       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670709505708, 1.0]], [0, [192.11794934797553, 1.0]], [0, [28.980937693715045, 1.0]], [0, [6.372454584663215, 1.0]], [0, [1.654328688029367, 1.0]], [0, [0.10450800478242468, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707095]
bas 1, expnt(s) = [192.11794935]
bas 2, expnt(s) = [28.98093769]
bas 3, expnt(s) = [6.37245458]
bas 4, expnt(s) = [1.65432869]
bas 5, expnt(s) = [0.104508]
CPU time:        27.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171929e+02 1.92117949e+02 1.30373997e+02
 2.89809377e+01 3.15572644e+01 6.37245458e+00 1.01331643e+01
 1.65432869e+00 3.68537237e+00 1.04508005e-01 4.64383940e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986690933783675
cond(S) = 21.105138098716147
E1 = -19.046191434344983  E_coul = 4.519883993447138
init E= -14.5263074408978
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30164885903842  LUMO = 5.12626968798321
  mo_energy =
[-4.71253713e+00 -3.01648859e-01  5.12626969e+00  4.22924143e+01
  3.14846968e+02  3.20638005e+03]
E1 = -19.04901711966592  E_coul = 4.500403130055556
cycle= 1 E= -14.5486139896104  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.162
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151999
diis-c [-2.31035907e-04  1.00000000e+00]
  HOMO = -0.300660799965596  LUMO = 5.12442394585665
  mo_energy =
[-4.72345571e+00 -3.00660800e-01  5.12442395e+00  4.22783838e+01
  3.14824488e+02  3.20635147e+03]
E1 = -19.047082664672747  E_coul = 4.498444994111023
cycle= 2 E= -14.5486376705617  delta_E= -2.37e-05  |g|= 0.00113  |ddm|= 0.00833
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131176
diis-c [-6.03245944e-07 -7.48506683e-02  1.07485067e+00]
  HOMO = -0.300745875124847  LUMO = 5.12400291460912
  mo_energy =
[-4.72442387e+00 -3.00745875e-01  5.12400291e+00  4.22774339e+01
  3.14823386e+02  3.20635027e+03]
E1 = -19.046970551245856  E_coul = 4.498332765495161
cycle= 3 E= -14.5486377857507  delta_E= -1.15e-07  |g|= 1.28e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60303e-05
diis-c [-7.31643071e-11  6.38682656e-04 -1.58509660e-02  1.01521228e+00]
  HOMO = -0.300745400203594  LUMO = 5.12401259049637
  mo_energy =
[-4.72440734e+00 -3.00745400e-01  5.12401259e+00  4.22774736e+01
  3.14823456e+02  3.20635036e+03]
E1 = -19.046971895545635  E_coul = 4.498334109788147
cycle= 4 E= -14.5486377857575  delta_E= -6.79e-12  |g|= 5.41e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046971895545635  E_coul = 4.498334109788147
  HOMO = -0.300745360846964  LUMO = 5.12401304680099
  mo_energy =
[-4.72440648e+00 -3.00745361e-01  5.12401305e+00  4.22774752e+01
  3.14823458e+02  3.20635036e+03]
E1 = -19.04697198279296  E_coul = 4.498334197035461
Extra cycle  E= -14.5486377857575  delta_E= -1.07e-14  |g|= 3.01e-08  |ddm|= 2.25e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92117949e+02 2.89809377e+01 6.37245458e+00
 1.65432869e+00 1.04508005e-01]
E = -14.5486377857575
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26707095        1
[INPUT] 0    0    [1    /1   ]  192.117949348        1
[INPUT] 0    0    [1    /1   ]  28.9809376937        1
[INPUT] 0    0    [1    /1   ]  6.37245458466        1
[INPUT] 0    0    [1    /1   ]  1.65432868803        1
[INPUT] 0    0    [1    /1   ]  0.104508004782       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670709505708, 1.0]], [0, [192.11794934797553, 1.0]], [0, [28.980937693715045, 1.0]], [0, [6.372454584663215, 1.0]], [0, [1.654328688029367, 1.0]], [0, [0.10450800478242468, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26707095]
bas 1, expnt(s) = [192.11794935]
bas 2, expnt(s) = [28.98093769]
bas 3, expnt(s) = [6.37245458]
bas 4, expnt(s) = [1.65432869]
bas 5, expnt(s) = [0.104508]
CPU time:        27.57
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126707e+03 7.33171929e+02 1.92117949e+02 1.30373997e+02
 2.89809377e+01 3.15572644e+01 6.37245458e+00 1.01331643e+01
 1.65432869e+00 3.68537237e+00 1.04508005e-01 4.64383940e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986690933783675
cond(S) = 21.105138098716147
E1 = -19.046191434344983  E_coul = 4.519883993447138
init E= -14.5263074408978
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30164885903842  LUMO = 5.12626968798321
  mo_energy =
[-4.71253713e+00 -3.01648859e-01  5.12626969e+00  4.22924143e+01
  3.14846968e+02  3.20638005e+03]
E1 = -19.04901711966592  E_coul = 4.500403130055556
cycle= 1 E= -14.5486139896104  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.162
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151999
diis-c [-2.31035907e-04  1.00000000e+00]
  HOMO = -0.300660799965596  LUMO = 5.12442394585665
  mo_energy =
[-4.72345571e+00 -3.00660800e-01  5.12442395e+00  4.22783838e+01
  3.14824488e+02  3.20635147e+03]
E1 = -19.047082664672747  E_coul = 4.498444994111023
cycle= 2 E= -14.5486376705617  delta_E= -2.37e-05  |g|= 0.00113  |ddm|= 0.00833
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131176
diis-c [-6.03245944e-07 -7.48506683e-02  1.07485067e+00]
  HOMO = -0.300745875124847  LUMO = 5.12400291460912
  mo_energy =
[-4.72442387e+00 -3.00745875e-01  5.12400291e+00  4.22774339e+01
  3.14823386e+02  3.20635027e+03]
E1 = -19.046970551245856  E_coul = 4.498332765495161
cycle= 3 E= -14.5486377857507  delta_E= -1.15e-07  |g|= 1.28e-05  |ddm|= 0.000582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.60303e-05
diis-c [-7.31643071e-11  6.38682656e-04 -1.58509660e-02  1.01521228e+00]
  HOMO = -0.300745400203594  LUMO = 5.12401259049637
  mo_energy =
[-4.72440734e+00 -3.00745400e-01  5.12401259e+00  4.22774736e+01
  3.14823456e+02  3.20635036e+03]
E1 = -19.046971895545635  E_coul = 4.498334109788147
cycle= 4 E= -14.5486377857575  delta_E= -6.79e-12  |g|= 5.41e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046971895545635  E_coul = 4.498334109788147
  HOMO = -0.300745360846964  LUMO = 5.12401304680099
  mo_energy =
[-4.72440648e+00 -3.00745361e-01  5.12401305e+00  4.22774752e+01
  3.14823458e+02  3.20635036e+03]
E1 = -19.04697198279296  E_coul = 4.498334197035461
Extra cycle  E= -14.5486377857575  delta_E= -1.07e-14  |g|= 3.01e-08  |ddm|= 2.25e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.105138098716147
E1 = -19.04697198279296  E_coul = 4.498334197035461
init E= -14.5486377857575
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300745358682382  LUMO = 5.12401306839721
  mo_energy =
[-4.72440644e+00 -3.00745359e-01  5.12401307e+00  4.22774753e+01
  3.14823458e+02  3.20635036e+03]
E1 = -19.046971987228826  E_coul = 4.498334201471332
cycle= 1 E= -14.5486377857575  delta_E= 5.33e-15  |g|= 1.7e-09  |ddm|= 1.29e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.046971987228826  E_coul = 4.498334201471332
  HOMO = -0.300745358557916  LUMO = 5.1240130694583
  mo_energy =
[-4.72440643e+00 -3.00745359e-01  5.12401307e+00  4.22774753e+01
  3.14823458e+02  3.20635036e+03]
E1 = -19.046971987463294  E_coul = 4.498334201705793
Extra cycle  E= -14.5486377857575  delta_E= -7.11e-15  |g|= 1.01e-10  |ddm|= 7.81e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126707e+03 1.92117949e+02 2.89809377e+01 6.37245458e+00
 1.65432869e+00 1.04508005e-01]
grad_E = [ 5.85891827e-07  9.36823936e-05 -2.30446152e-04 -4.68882955e-05
 -4.14628893e-04  2.92346128e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26706208        1
[INPUT] 0    0    [1    /1   ]  192.11654928         1
[INPUT] 0    0    [1    /1   ]  28.9839998465        1
[INPUT] 0    0    [1    /1   ]  6.37624416821        1
[INPUT] 0    0    [1    /1   ]  1.65447862284        1
[INPUT] 0    0    [1    /1   ]  0.10451469294        1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670620798237, 1.0]], [0, [192.1165492801056, 1.0]], [0, [28.983999846530384, 1.0]], [0, [6.376244168209651, 1.0]], [0, [1.654478622838257, 1.0]], [0, [0.10451469293998113, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26706208]
bas 1, expnt(s) = [192.11654928]
bas 2, expnt(s) = [28.98399985]
bas 3, expnt(s) = [6.37624417]
bas 4, expnt(s) = [1.65447862]
bas 5, expnt(s) = [0.10451469]
CPU time:        29.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126706e+03 7.33171926e+02 1.92116549e+02 1.30373285e+02
 2.89839998e+01 3.15597652e+01 6.37624417e+00 1.01376835e+01
 1.65447862e+00 3.68562287e+00 1.04514693e-01 4.64406229e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986689912026248
cond(S) = 21.105968794493183
E1 = -19.04621056580597  E_coul = 4.519911341929237
init E= -14.5262992238767
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301644768459232  LUMO = 5.12865969113026
  mo_energy =
[-4.71252818e+00 -3.01644768e-01  5.12865969e+00  4.23069766e+01
  3.14868572e+02  3.20639501e+03]
E1 = -19.049017674254447  E_coul = 4.500402765660851
cycle= 1 E= -14.5486149085936  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151969
diis-c [-2.30945666e-04  1.00000000e+00]
  HOMO = -0.300656059201049  LUMO = 5.12679872847497
  mo_energy =
[-4.72346108e+00 -3.00656059e-01  5.12679873e+00  4.22929058e+01
  3.14846072e+02  3.20636639e+03]
E1 = -19.047081124727587  E_coul = 4.498442581278497
cycle= 2 E= -14.5486385434491  delta_E= -2.36e-05  |g|= 0.00113  |ddm|= 0.00833
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131034
diis-c [-6.05037737e-07 -7.46677399e-02  1.07466774e+00]
  HOMO = -0.300741057727892  LUMO = 5.12637672962502
  mo_energy =
[-4.72443022e+00 -3.00741058e-01  5.12637673e+00  4.22919518e+01
  3.14844965e+02  3.20636519e+03]
E1 = -19.04696894280114  E_coul = 4.498330284559672
cycle= 3 E= -14.5486386582415  delta_E= -1.15e-07  |g|= 1.29e-05  |ddm|= 0.000581
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.61221e-05
diis-c [-7.37827823e-11  6.25344021e-04 -1.58335716e-02  1.01520823e+00]
  HOMO = -0.300740594329764  LUMO = 5.12638635294526
  mo_energy =
[-4.72441383e+00 -3.00740594e-01  5.12638635e+00  4.22919914e+01
  3.14845035e+02  3.20636527e+03]
E1 = -19.046970273249975  E_coul = 4.49833161500162
cycle= 4 E= -14.5486386582484  delta_E= -6.89e-12  |g|= 5.45e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046970273249975  E_coul = 4.49833161500162
  HOMO = -0.300740554720659  LUMO = 5.12638681252032
  mo_energy =
[-4.72441297e+00 -3.00740555e-01  5.12638681e+00  4.22919930e+01
  3.14845038e+02  3.20636528e+03]
E1 = -19.046970361051482  E_coul = 4.498331702803112
Extra cycle  E= -14.5486386582484  delta_E= -1.42e-14  |g|= 3.03e-08  |ddm|= 2.27e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126706e+03 1.92116549e+02 2.89839998e+01 6.37624417e+00
 1.65447862e+00 1.04514693e-01]
E = -14.54863865824837
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26706208        1
[INPUT] 0    0    [1    /1   ]  192.11654928         1
[INPUT] 0    0    [1    /1   ]  28.9839998465        1
[INPUT] 0    0    [1    /1   ]  6.37624416821        1
[INPUT] 0    0    [1    /1   ]  1.65447862284        1
[INPUT] 0    0    [1    /1   ]  0.10451469294        1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670620798237, 1.0]], [0, [192.1165492801056, 1.0]], [0, [28.983999846530384, 1.0]], [0, [6.376244168209651, 1.0]], [0, [1.654478622838257, 1.0]], [0, [0.10451469293998113, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26706208]
bas 1, expnt(s) = [192.11654928]
bas 2, expnt(s) = [28.98399985]
bas 3, expnt(s) = [6.37624417]
bas 4, expnt(s) = [1.65447862]
bas 5, expnt(s) = [0.10451469]
CPU time:        29.81
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126706e+03 7.33171926e+02 1.92116549e+02 1.30373285e+02
 2.89839998e+01 3.15597652e+01 6.37624417e+00 1.01376835e+01
 1.65447862e+00 3.68562287e+00 1.04514693e-01 4.64406229e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986689912026248
cond(S) = 21.105968794493183
E1 = -19.04621056580597  E_coul = 4.519911341929237
init E= -14.5262992238767
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301644768459232  LUMO = 5.12865969113026
  mo_energy =
[-4.71252818e+00 -3.01644768e-01  5.12865969e+00  4.23069766e+01
  3.14868572e+02  3.20639501e+03]
E1 = -19.049017674254447  E_coul = 4.500402765660851
cycle= 1 E= -14.5486149085936  delta_E= -0.0223  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151969
diis-c [-2.30945666e-04  1.00000000e+00]
  HOMO = -0.300656059201049  LUMO = 5.12679872847497
  mo_energy =
[-4.72346108e+00 -3.00656059e-01  5.12679873e+00  4.22929058e+01
  3.14846072e+02  3.20636639e+03]
E1 = -19.047081124727587  E_coul = 4.498442581278497
cycle= 2 E= -14.5486385434491  delta_E= -2.36e-05  |g|= 0.00113  |ddm|= 0.00833
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131034
diis-c [-6.05037737e-07 -7.46677399e-02  1.07466774e+00]
  HOMO = -0.300741057727892  LUMO = 5.12637672962502
  mo_energy =
[-4.72443022e+00 -3.00741058e-01  5.12637673e+00  4.22919518e+01
  3.14844965e+02  3.20636519e+03]
E1 = -19.04696894280114  E_coul = 4.498330284559672
cycle= 3 E= -14.5486386582415  delta_E= -1.15e-07  |g|= 1.29e-05  |ddm|= 0.000581
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.61221e-05
diis-c [-7.37827823e-11  6.25344021e-04 -1.58335716e-02  1.01520823e+00]
  HOMO = -0.300740594329764  LUMO = 5.12638635294526
  mo_energy =
[-4.72441383e+00 -3.00740594e-01  5.12638635e+00  4.22919914e+01
  3.14845035e+02  3.20636527e+03]
E1 = -19.046970273249975  E_coul = 4.49833161500162
cycle= 4 E= -14.5486386582484  delta_E= -6.89e-12  |g|= 5.45e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046970273249975  E_coul = 4.49833161500162
  HOMO = -0.300740554720659  LUMO = 5.12638681252032
  mo_energy =
[-4.72441297e+00 -3.00740555e-01  5.12638681e+00  4.22919930e+01
  3.14845038e+02  3.20636528e+03]
E1 = -19.046970361051482  E_coul = 4.498331702803112
Extra cycle  E= -14.5486386582484  delta_E= -1.42e-14  |g|= 3.03e-08  |ddm|= 2.27e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.105968794493183
E1 = -19.046970361051482  E_coul = 4.498331702803112
init E= -14.5486386582484
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300740552544788  LUMO = 5.12638683427081
  mo_energy =
[-4.72441293e+00 -3.00740553e-01  5.12638683e+00  4.22919931e+01
  3.14845038e+02  3.20636528e+03]
E1 = -19.046970365514046  E_coul = 4.4983317072656765
cycle= 1 E= -14.5486386582484  delta_E= 1.78e-15  |g|= 1.71e-09  |ddm|= 1.3e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.046970365514046  E_coul = 4.4983317072656765
  HOMO = -0.300740552419765  LUMO = 5.1263868353392
  mo_energy =
[-4.72441292e+00 -3.00740552e-01  5.12638684e+00  4.22919931e+01
  3.14845038e+02  3.20636528e+03]
E1 = -19.046970365749786  E_coul = 4.498331707501414
Extra cycle  E= -14.5486386582484  delta_E= -3.55e-15  |g|= 1.02e-10  |ddm|= 7.84e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126706e+03 1.92116549e+02 2.89839998e+01 6.37624417e+00
 1.65447862e+00 1.04514693e-01]
grad_E = [ 5.84771217e-07  9.39305917e-05 -2.44152822e-04  8.40301709e-05
 -7.57137467e-04  5.72011661e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26703264        1
[INPUT] 0    0    [1    /1   ]  192.111852667        1
[INPUT] 0    0    [1    /1   ]  28.9952001951        1
[INPUT] 0    0    [1    /1   ]  6.38366320537        1
[INPUT] 0    0    [1    /1   ]  1.65491423838        1
[INPUT] 0    0    [1    /1   ]  0.104525427479       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670326432637, 1.0]], [0, [192.11185266672246, 1.0]], [0, [28.99520019511804, 1.0]], [0, [6.3836632053710325, 1.0]], [0, [1.6549142383838107, 1.0]], [0, [0.10452542747869038, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26703264]
bas 1, expnt(s) = [192.11185267]
bas 2, expnt(s) = [28.9952002]
bas 3, expnt(s) = [6.38366321]
bas 4, expnt(s) = [1.65491424]
bas 5, expnt(s) = [0.10452543]
CPU time:        31.76
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126703e+03 7.33171918e+02 1.92111853e+02 1.30370894e+02
 2.89952002e+01 3.15689115e+01 6.38366321e+00 1.01465289e+01
 1.65491424e+00 3.68635065e+00 1.04525427e-01 4.64442002e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986687806008863
cond(S) = 21.106741310573486
E1 = -19.04623811735404  E_coul = 4.519951336414966
init E= -14.5262867809391
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301638966232485  LUMO = 5.1336640853363
  mo_energy =
[-4.71251550e+00 -3.01638966e-01  5.13366409e+00  4.23406734e+01
  3.14925637e+02  3.20643380e+03]
E1 = -19.04902729565881  E_coul = 4.500409987609275
cycle= 1 E= -14.5486173080495  delta_E= -0.0223  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151898
diis-c [-2.30729157e-04  1.00000000e+00]
  HOMO = -0.30064845795316  LUMO = 5.13178139124693
  mo_energy =
[-4.72346623e+00 -3.00648458e-01  5.13178139e+00  4.23265447e+01
  3.14903120e+02  3.20640515e+03]
E1 = -19.047088181251468  E_coul = 4.498447321668642
cycle= 2 E= -14.5486408595828  delta_E= -2.36e-05  |g|= 0.00113  |ddm|= 0.00831
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130782
diis-c [-6.07197776e-07 -7.43890752e-02  1.07438908e+00]
  HOMO = -0.300733296828358  LUMO = 5.13135799549207
  mo_energy =
[-4.72443659e+00 -3.00733297e-01  5.13135800e+00  4.23255846e+01
  3.14902005e+02  3.20640394e+03]
E1 = -19.046975960979307  E_coul = 4.498334987321841
cycle= 3 E= -14.5486409736575  delta_E= -1.14e-07  |g|= 1.3e-05  |ddm|= 0.000579
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.62381e-05
diis-c [-7.47516042e-11  6.04212710e-04 -1.57797911e-02  1.01517558e+00]
  HOMO = -0.300732849887828  LUMO = 5.13136754356258
  mo_energy =
[-4.72442040e+00 -3.00732850e-01  5.13136754e+00  4.23256239e+01
  3.14902075e+02  3.20640402e+03]
E1 = -19.04697727157241  E_coul = 4.49833629790792
cycle= 4 E= -14.5486409736645  delta_E= -7.02e-12  |g|= 5.53e-07  |ddm|= 2.39e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04697727157241  E_coul = 4.49833629790792
  HOMO = -0.300732809923998  LUMO = 5.13136800809056
  mo_energy =
[-4.72441953e+00 -3.00732810e-01  5.13136801e+00  4.23256255e+01
  3.14902077e+02  3.20640403e+03]
E1 = -19.04697736016861  E_coul = 4.498336386504103
Extra cycle  E= -14.5486409736645  delta_E= -1.78e-14  |g|= 3.06e-08  |ddm|= 2.28e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126703e+03 1.92111853e+02 2.89952002e+01 6.38366321e+00
 1.65491424e+00 1.04525427e-01]
E = -14.548640973664508
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26703264        1
[INPUT] 0    0    [1    /1   ]  192.111852667        1
[INPUT] 0    0    [1    /1   ]  28.9952001951        1
[INPUT] 0    0    [1    /1   ]  6.38366320537        1
[INPUT] 0    0    [1    /1   ]  1.65491423838        1
[INPUT] 0    0    [1    /1   ]  0.104525427479       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2670326432637, 1.0]], [0, [192.11185266672246, 1.0]], [0, [28.99520019511804, 1.0]], [0, [6.3836632053710325, 1.0]], [0, [1.6549142383838107, 1.0]], [0, [0.10452542747869038, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26703264]
bas 1, expnt(s) = [192.11185267]
bas 2, expnt(s) = [28.9952002]
bas 3, expnt(s) = [6.38366321]
bas 4, expnt(s) = [1.65491424]
bas 5, expnt(s) = [0.10452543]
CPU time:        32.04
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126703e+03 7.33171918e+02 1.92111853e+02 1.30370894e+02
 2.89952002e+01 3.15689115e+01 6.38366321e+00 1.01465289e+01
 1.65491424e+00 3.68635065e+00 1.04525427e-01 4.64442002e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986687806008863
cond(S) = 21.106741310573486
E1 = -19.04623811735404  E_coul = 4.519951336414966
init E= -14.5262867809391
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301638966232485  LUMO = 5.1336640853363
  mo_energy =
[-4.71251550e+00 -3.01638966e-01  5.13366409e+00  4.23406734e+01
  3.14925637e+02  3.20643380e+03]
E1 = -19.04902729565881  E_coul = 4.500409987609275
cycle= 1 E= -14.5486173080495  delta_E= -0.0223  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151898
diis-c [-2.30729157e-04  1.00000000e+00]
  HOMO = -0.30064845795316  LUMO = 5.13178139124693
  mo_energy =
[-4.72346623e+00 -3.00648458e-01  5.13178139e+00  4.23265447e+01
  3.14903120e+02  3.20640515e+03]
E1 = -19.047088181251468  E_coul = 4.498447321668642
cycle= 2 E= -14.5486408595828  delta_E= -2.36e-05  |g|= 0.00113  |ddm|= 0.00831
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130782
diis-c [-6.07197776e-07 -7.43890752e-02  1.07438908e+00]
  HOMO = -0.300733296828358  LUMO = 5.13135799549207
  mo_energy =
[-4.72443659e+00 -3.00733297e-01  5.13135800e+00  4.23255846e+01
  3.14902005e+02  3.20640394e+03]
E1 = -19.046975960979307  E_coul = 4.498334987321841
cycle= 3 E= -14.5486409736575  delta_E= -1.14e-07  |g|= 1.3e-05  |ddm|= 0.000579
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.62381e-05
diis-c [-7.47516042e-11  6.04212710e-04 -1.57797911e-02  1.01517558e+00]
  HOMO = -0.300732849887828  LUMO = 5.13136754356258
  mo_energy =
[-4.72442040e+00 -3.00732850e-01  5.13136754e+00  4.23256239e+01
  3.14902075e+02  3.20640402e+03]
E1 = -19.04697727157241  E_coul = 4.49833629790792
cycle= 4 E= -14.5486409736645  delta_E= -7.02e-12  |g|= 5.53e-07  |ddm|= 2.39e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04697727157241  E_coul = 4.49833629790792
  HOMO = -0.300732809923998  LUMO = 5.13136800809056
  mo_energy =
[-4.72441953e+00 -3.00732810e-01  5.13136801e+00  4.23256255e+01
  3.14902077e+02  3.20640403e+03]
E1 = -19.04697736016861  E_coul = 4.498336386504103
Extra cycle  E= -14.5486409736645  delta_E= -1.78e-14  |g|= 3.06e-08  |ddm|= 2.28e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.106741310573486
E1 = -19.04697736016861  E_coul = 4.498336386504103
init E= -14.5486409736645
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300732807733361  LUMO = 5.13136803007099
  mo_energy =
[-4.72441949e+00 -3.00732808e-01  5.13136803e+00  4.23256256e+01
  3.14902077e+02  3.20640403e+03]
E1 = -19.046977364668074  E_coul = 4.498336391003572
cycle= 1 E= -14.5486409736645  delta_E= 7.11e-15  |g|= 1.72e-09  |ddm|= 1.31e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.046977364668074  E_coul = 4.498336391003572
  HOMO = -0.30073280760768  LUMO = 5.13136803115006
  mo_energy =
[-4.72441948e+00 -3.00732808e-01  5.13136803e+00  4.23256256e+01
  3.14902077e+02  3.20640403e+03]
E1 = -19.046977364905487  E_coul = 4.498336391240983
Extra cycle  E= -14.5486409736645  delta_E= -3.55e-15  |g|= 1.02e-10  |ddm|= 7.87e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126703e+03 1.92111853e+02 2.89952002e+01 6.38366321e+00
 1.65491424e+00 1.04525427e-01]
grad_E = [ 5.83935984e-07  9.41733454e-05 -2.64768759e-04  2.98260481e-04
 -1.31228798e-03  1.02617551e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26694987        1
[INPUT] 0    0    [1    /1   ]  192.098581742        1
[INPUT] 0    0    [1    /1   ]  29.0280196283        1
[INPUT] 0    0    [1    /1   ]  6.39792693348        1
[INPUT] 0    0    [1    /1   ]  1.65604432262        1
[INPUT] 0    0    [1    /1   ]  0.104541096057       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.266949867294, 1.0]], [0, [192.0985817418822, 1.0]], [0, [29.028019628340903, 1.0]], [0, [6.397926933482081, 1.0]], [0, [1.6560443226203883, 1.0]], [0, [0.10454109605670601, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26694987]
bas 1, expnt(s) = [192.09858174]
bas 2, expnt(s) = [29.02801963]
bas 3, expnt(s) = [6.39792693]
bas 4, expnt(s) = [1.65604432]
bas 5, expnt(s) = [0.1045411]
CPU time:        34.00
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126695e+03 7.33171894e+02 1.92098582e+02 1.30364140e+02
 2.90280196e+01 3.15957072e+01 6.39792693e+00 1.01635278e+01
 1.65604432e+00 3.68823845e+00 1.04541096e-01 4.64494217e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866835444429207
cond(S) = 21.10622816822053
E1 = -19.046271245299376  E_coul = 4.519999737808546
init E= -14.5262715074908
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301632438098322  LUMO = 5.14395406817622
  mo_energy =
[-4.71250137e+00 -3.01632438e-01  5.14395407e+00  4.24166522e+01
  3.15067320e+02  3.20652899e+03]
E1 = -19.04906324328636  E_coul = 4.500440044958638
cycle= 1 E= -14.5486231983277  delta_E= -0.0224  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151723
diis-c [-2.30199452e-04  1.00000000e+00]
  HOMO = -0.30063738468547  LUMO = 5.14204646174353
  mo_energy =
[-4.72346515e+00 -3.00637385e-01  5.14204646e+00  4.24024554e+01
  3.15044810e+02  3.20650033e+03]
E1 = -19.047122404909896  E_coul = 4.498475800528828
cycle= 2 E= -14.5486466043811  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00829
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130353
diis-c [-6.08380511e-07 -7.40307756e-02  1.07403078e+00]
  HOMO = -0.300721898483478  LUMO = 5.14162141719985
  mo_energy =
[-4.72443633e+00 -3.00721898e-01  5.14162142e+00  4.24014873e+01
  3.15043686e+02  3.20649912e+03]
E1 = -19.047010309020642  E_coul = 4.4983635918171885
cycle= 3 E= -14.5486467172035  delta_E= -1.13e-07  |g|= 1.31e-05  |ddm|= 0.000575
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.63163e-05
diis-c [-7.61019790e-11  5.73965637e-04 -1.56246344e-02  1.01505067e+00]
  HOMO = -0.300721469552796  LUMO = 5.1416308834882
  mo_energy =
[-4.72442037e+00 -3.00721470e-01  5.14163088e+00  4.24015264e+01
  3.15043755e+02  3.20649920e+03]
E1 = -19.047011597874544  E_coul = 4.498364880663933
cycle= 4 E= -14.5486467172106  delta_E= -7.16e-12  |g|= 5.62e-07  |ddm|= 2.39e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047011597874544  E_coul = 4.498364880663933
  HOMO = -0.300721429195715  LUMO = 5.1416313545067
  mo_energy =
[-4.72441949e+00 -3.00721429e-01  5.14163135e+00  4.24015280e+01
  3.15043757e+02  3.20649920e+03]
E1 = -19.047011687392736  E_coul = 4.498364970182108
Extra cycle  E= -14.5486467172106  delta_E= -1.78e-14  |g|= 3.11e-08  |ddm|= 2.3e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126695e+03 1.92098582e+02 2.90280196e+01 6.39792693e+00
 1.65604432e+00 1.04541096e-01]
E = -14.548646717210628
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26694987        1
[INPUT] 0    0    [1    /1   ]  192.098581742        1
[INPUT] 0    0    [1    /1   ]  29.0280196283        1
[INPUT] 0    0    [1    /1   ]  6.39792693348        1
[INPUT] 0    0    [1    /1   ]  1.65604432262        1
[INPUT] 0    0    [1    /1   ]  0.104541096057       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.266949867294, 1.0]], [0, [192.0985817418822, 1.0]], [0, [29.028019628340903, 1.0]], [0, [6.397926933482081, 1.0]], [0, [1.6560443226203883, 1.0]], [0, [0.10454109605670601, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26694987]
bas 1, expnt(s) = [192.09858174]
bas 2, expnt(s) = [29.02801963]
bas 3, expnt(s) = [6.39792693]
bas 4, expnt(s) = [1.65604432]
bas 5, expnt(s) = [0.1045411]
CPU time:        34.29
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126695e+03 7.33171894e+02 1.92098582e+02 1.30364140e+02
 2.90280196e+01 3.15957072e+01 6.39792693e+00 1.01635278e+01
 1.65604432e+00 3.68823845e+00 1.04541096e-01 4.64494217e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866835444429207
cond(S) = 21.10622816822053
E1 = -19.046271245299376  E_coul = 4.519999737808546
init E= -14.5262715074908
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301632438098322  LUMO = 5.14395406817622
  mo_energy =
[-4.71250137e+00 -3.01632438e-01  5.14395407e+00  4.24166522e+01
  3.15067320e+02  3.20652899e+03]
E1 = -19.04906324328636  E_coul = 4.500440044958638
cycle= 1 E= -14.5486231983277  delta_E= -0.0224  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151723
diis-c [-2.30199452e-04  1.00000000e+00]
  HOMO = -0.30063738468547  LUMO = 5.14204646174353
  mo_energy =
[-4.72346515e+00 -3.00637385e-01  5.14204646e+00  4.24024554e+01
  3.15044810e+02  3.20650033e+03]
E1 = -19.047122404909896  E_coul = 4.498475800528828
cycle= 2 E= -14.5486466043811  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00829
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130353
diis-c [-6.08380511e-07 -7.40307756e-02  1.07403078e+00]
  HOMO = -0.300721898483478  LUMO = 5.14162141719985
  mo_energy =
[-4.72443633e+00 -3.00721898e-01  5.14162142e+00  4.24014873e+01
  3.15043686e+02  3.20649912e+03]
E1 = -19.047010309020642  E_coul = 4.4983635918171885
cycle= 3 E= -14.5486467172035  delta_E= -1.13e-07  |g|= 1.31e-05  |ddm|= 0.000575
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.63163e-05
diis-c [-7.61019790e-11  5.73965637e-04 -1.56246344e-02  1.01505067e+00]
  HOMO = -0.300721469552796  LUMO = 5.1416308834882
  mo_energy =
[-4.72442037e+00 -3.00721470e-01  5.14163088e+00  4.24015264e+01
  3.15043755e+02  3.20649920e+03]
E1 = -19.047011597874544  E_coul = 4.498364880663933
cycle= 4 E= -14.5486467172106  delta_E= -7.16e-12  |g|= 5.62e-07  |ddm|= 2.39e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047011597874544  E_coul = 4.498364880663933
  HOMO = -0.300721429195715  LUMO = 5.1416313545067
  mo_energy =
[-4.72441949e+00 -3.00721429e-01  5.14163135e+00  4.24015280e+01
  3.15043757e+02  3.20649920e+03]
E1 = -19.047011687392736  E_coul = 4.498364970182108
Extra cycle  E= -14.5486467172106  delta_E= -1.78e-14  |g|= 3.11e-08  |ddm|= 2.3e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.10622816822053
E1 = -19.047011687392736  E_coul = 4.498364970182108
init E= -14.5486467172106
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300721426991788  LUMO = 5.14163137677763
  mo_energy =
[-4.72441945e+00 -3.00721427e-01  5.14163138e+00  4.24015281e+01
  3.15043757e+02  3.20649920e+03]
E1 = -19.04701169193132  E_coul = 4.498364974720691
cycle= 1 E= -14.5486467172106  delta_E= -1.78e-15  |g|= 1.73e-09  |ddm|= 1.31e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04701169193132  E_coul = 4.498364974720691
  HOMO = -0.300721426865717  LUMO = 5.14163137786951
  mo_energy =
[-4.72441944e+00 -3.00721427e-01  5.14163138e+00  4.24015281e+01
  3.15043757e+02  3.20649920e+03]
E1 = -19.047011692170223  E_coul = 4.498364974959596
Extra cycle  E= -14.5486467172106  delta_E= 3.55e-15  |g|= 1.03e-10  |ddm|= 7.88e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126695e+03 1.92098582e+02 2.90280196e+01 6.39792693e+00
 1.65604432e+00 1.04541096e-01]
grad_E = [ 5.85256571e-07  9.41162199e-05 -2.91006089e-04  6.20360091e-04
 -2.13681633e-03  1.70273571e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26673707        1
[INPUT] 0    0    [1    /1   ]  192.064378265        1
[INPUT] 0    0    [1    /1   ]  29.1142084705        1
[INPUT] 0    0    [1    /1   ]  6.42546660799        1
[INPUT] 0    0    [1    /1   ]  1.65881630045        1
[INPUT] 0    0    [1    /1   ]  0.104561250019       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.266737065426, 1.0]], [0, [192.06437826452733, 1.0]], [0, [29.11420847051402, 1.0]], [0, [6.425466607991717, 1.0]], [0, [1.658816300445972, 1.0]], [0, [0.10456125001898765, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26673707]
bas 1, expnt(s) = [192.06437826]
bas 2, expnt(s) = [29.11420847]
bas 3, expnt(s) = [6.42546661]
bas 4, expnt(s) = [1.6588163]
bas 5, expnt(s) = [0.10456125]
CPU time:        36.34
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126674e+03 7.33171833e+02 1.92064378e+02 1.30346731e+02
 2.91142085e+01 3.16660406e+01 6.42546661e+00 1.01963217e+01
 1.65881630e+00 3.69286767e+00 1.04561250e-01 4.64561376e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986674933706089
cond(S) = 21.10136184062396
E1 = -19.04629846017058  E_coul = 4.520035945734148
init E= -14.5262625144364
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301629194048446  LUMO = 5.16518192639297
  mo_energy =
[-4.71249452e+00 -3.01629194e-01  5.16518193e+00  4.25860019e+01
  3.15405484e+02  3.20675452e+03]
E1 = -19.049168117160058  E_coul = 4.500531112696348
cycle= 1 E= -14.5486370044637  delta_E= -0.0224  |g|= 0.017  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151288
diis-c [-2.28881349e-04  1.00000000e+00]
  HOMO = -0.300623186931801  LUMO = 5.16326038440858
  mo_energy =
[-4.72344060e+00 -3.00623187e-01  5.16326038e+00  4.25717617e+01
  3.15383068e+02  3.20672598e+03]
E1 = -19.04723039865745  E_coul = 4.498570240185416
cycle= 2 E= -14.548660158472  delta_E= -2.32e-05  |g|= 0.00111  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0012963
diis-c [-6.04414025e-07 -7.37159044e-02  1.07371590e+00]
  HOMO = -0.300707040204259  LUMO = 5.16283423801372
  mo_energy =
[-4.72441031e+00 -3.00707040e-01  5.16283424e+00  4.25707859e+01
  3.15381935e+02  3.20672476e+03]
E1 = -19.047118935346  E_coul = 4.4984586662051775
cycle= 3 E= -14.5486602691408  delta_E= -1.11e-07  |g|= 1.32e-05  |ddm|= 0.000569
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.61544e-05
diis-c [-7.76430045e-11  5.35636405e-04 -1.51965984e-02  1.01466096e+00]
  HOMO = -0.300706617301388  LUMO = 5.16284368230562
  mo_energy =
[-4.72439448e+00 -3.00706617e-01  5.16284368e+00  4.25708247e+01
  3.15382004e+02  3.20672484e+03]
E1 = -19.04712021736749  E_coul = 4.4984599482195
cycle= 4 E= -14.548660269148  delta_E= -7.17e-12  |g|= 5.73e-07  |ddm|= 2.39e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04712021736749  E_coul = 4.4984599482195
  HOMO = -0.300706576730317  LUMO = 5.16284415991559
  mo_energy =
[-4.72439358e+00 -3.00706577e-01  5.16284416e+00  4.25708264e+01
  3.15382006e+02  3.20672484e+03]
E1 = -19.047120307490832  E_coul = 4.498460038342835
Extra cycle  E= -14.548660269148  delta_E= -8.88e-15  |g|= 3.14e-08  |ddm|= 2.3e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126674e+03 1.92064378e+02 2.91142085e+01 6.42546661e+00
 1.65881630e+00 1.04561250e-01]
E = -14.548660269147998
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26673707        1
[INPUT] 0    0    [1    /1   ]  192.064378265        1
[INPUT] 0    0    [1    /1   ]  29.1142084705        1
[INPUT] 0    0    [1    /1   ]  6.42546660799        1
[INPUT] 0    0    [1    /1   ]  1.65881630045        1
[INPUT] 0    0    [1    /1   ]  0.104561250019       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.266737065426, 1.0]], [0, [192.06437826452733, 1.0]], [0, [29.11420847051402, 1.0]], [0, [6.425466607991717, 1.0]], [0, [1.658816300445972, 1.0]], [0, [0.10456125001898765, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26673707]
bas 1, expnt(s) = [192.06437826]
bas 2, expnt(s) = [29.11420847]
bas 3, expnt(s) = [6.42546661]
bas 4, expnt(s) = [1.6588163]
bas 5, expnt(s) = [0.10456125]
CPU time:        36.66
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126674e+03 7.33171833e+02 1.92064378e+02 1.30346731e+02
 2.91142085e+01 3.16660406e+01 6.42546661e+00 1.01963217e+01
 1.65881630e+00 3.69286767e+00 1.04561250e-01 4.64561376e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986674933706089
cond(S) = 21.10136184062396
E1 = -19.04629846017058  E_coul = 4.520035945734148
init E= -14.5262625144364
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301629194048446  LUMO = 5.16518192639297
  mo_energy =
[-4.71249452e+00 -3.01629194e-01  5.16518193e+00  4.25860019e+01
  3.15405484e+02  3.20675452e+03]
E1 = -19.049168117160058  E_coul = 4.500531112696348
cycle= 1 E= -14.5486370044637  delta_E= -0.0224  |g|= 0.017  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151288
diis-c [-2.28881349e-04  1.00000000e+00]
  HOMO = -0.300623186931801  LUMO = 5.16326038440858
  mo_energy =
[-4.72344060e+00 -3.00623187e-01  5.16326038e+00  4.25717617e+01
  3.15383068e+02  3.20672598e+03]
E1 = -19.04723039865745  E_coul = 4.498570240185416
cycle= 2 E= -14.548660158472  delta_E= -2.32e-05  |g|= 0.00111  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0012963
diis-c [-6.04414025e-07 -7.37159044e-02  1.07371590e+00]
  HOMO = -0.300707040204259  LUMO = 5.16283423801372
  mo_energy =
[-4.72441031e+00 -3.00707040e-01  5.16283424e+00  4.25707859e+01
  3.15381935e+02  3.20672476e+03]
E1 = -19.047118935346  E_coul = 4.4984586662051775
cycle= 3 E= -14.5486602691408  delta_E= -1.11e-07  |g|= 1.32e-05  |ddm|= 0.000569
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.61544e-05
diis-c [-7.76430045e-11  5.35636405e-04 -1.51965984e-02  1.01466096e+00]
  HOMO = -0.300706617301388  LUMO = 5.16284368230562
  mo_energy =
[-4.72439448e+00 -3.00706617e-01  5.16284368e+00  4.25708247e+01
  3.15382004e+02  3.20672484e+03]
E1 = -19.04712021736749  E_coul = 4.4984599482195
cycle= 4 E= -14.548660269148  delta_E= -7.17e-12  |g|= 5.73e-07  |ddm|= 2.39e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04712021736749  E_coul = 4.4984599482195
  HOMO = -0.300706576730317  LUMO = 5.16284415991559
  mo_energy =
[-4.72439358e+00 -3.00706577e-01  5.16284416e+00  4.25708264e+01
  3.15382006e+02  3.20672484e+03]
E1 = -19.047120307490832  E_coul = 4.498460038342835
Extra cycle  E= -14.548660269148  delta_E= -8.88e-15  |g|= 3.14e-08  |ddm|= 2.3e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.10136184062396
E1 = -19.047120307490832  E_coul = 4.498460038342835
init E= -14.548660269148
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300706574528814  LUMO = 5.16284418244954
  mo_energy =
[-4.72439354e+00 -3.00706575e-01  5.16284418e+00  4.25708265e+01
  3.15382006e+02  3.20672484e+03]
E1 = -19.047120312043337  E_coul = 4.498460042895323
cycle= 1 E= -14.548660269148  delta_E= -1.42e-14  |g|= 1.74e-09  |ddm|= 1.31e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047120312043337  E_coul = 4.498460042895323
  HOMO = -0.300706574403584  LUMO = 5.16284418355084
  mo_energy =
[-4.72439354e+00 -3.00706574e-01  5.16284418e+00  4.25708265e+01
  3.15382006e+02  3.20672484e+03]
E1 = -19.04712031228184  E_coul = 4.4984600431338535
Extra cycle  E= -14.548660269148  delta_E= 2.49e-14  |g|= 1.02e-10  |ddm|= 7.78e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126674e+03 1.92064378e+02 2.91142085e+01 6.42546661e+00
 1.65881630e+00 1.04561250e-01]
grad_E = [ 5.93688958e-07  9.29566257e-05 -3.14647415e-04  1.06019614e-03
 -3.23569266e-03  2.61091330e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26627515        1
[INPUT] 0    0    [1    /1   ]  191.990022586        1
[INPUT] 0    0    [1    /1   ]  29.303741484         1
[INPUT] 0    0    [1    /1   ]  6.47274081237        1
[INPUT] 0    0    [1    /1   ]  1.66463597077        1
[INPUT] 0    0    [1    /1   ]  0.104577376485       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.266275154462, 1.0]], [0, [191.99002258551076, 1.0]], [0, [29.30374148402522, 1.0]], [0, [6.472740812369041, 1.0]], [0, [1.6646359707699474, 1.0]], [0, [0.10457737648512197, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26627515]
bas 1, expnt(s) = [191.99002259]
bas 2, expnt(s) = [29.30374148]
bas 3, expnt(s) = [6.47274081]
bas 4, expnt(s) = [1.66463597]
bas 5, expnt(s) = [0.10457738]
CPU time:        38.74
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126628e+03 7.33171701e+02 1.91990023e+02 1.30308882e+02
 2.93037415e+01 3.18205242e+01 6.47274081e+00 1.02525333e+01
 1.66463597e+00 3.70258025e+00 1.04577376e-01 4.64615112e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986659593790323
cond(S) = 21.086396078320043
E1 = -19.04628620998817  E_coul = 4.519995607909553
init E= -14.5262906020786
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301640583574778  LUMO = 5.20410933853894
  mo_energy =
[-4.71251895e+00 -3.01640584e-01  5.20410934e+00  4.29180217e+01
  3.16103444e+02  3.20721803e+03]
E1 = -19.049413207738645  E_coul = 4.500748699167094
cycle= 1 E= -14.5486645085716  delta_E= -0.0224  |g|= 0.0169  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0150314
diis-c [-2.25942828e-04  1.00000000e+00]
  HOMO = -0.300611906005445  LUMO = 5.20222625152972
  mo_energy =
[-4.72335667e+00 -3.00611906e-01  5.20222625e+00  4.29038675e+01
  3.16081339e+02  3.20718990e+03]
E1 = -19.047492357593843  E_coul = 4.498805079274382
cycle= 2 E= -14.5486872783195  delta_E= -2.28e-05  |g|= 0.0011  |ddm|= 0.00813
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0012856
diis-c [-5.86029389e-07 -7.38845068e-02  1.07388451e+00]
  HOMO = -0.300694575392953  LUMO = 5.20180195614212
  mo_energy =
[-4.72431844e+00 -3.00694575e-01  5.20180196e+00  4.29028925e+01
  3.16080209e+02  3.20718868e+03]
E1 = -19.04738266370703  E_coul = 4.49869527792961
cycle= 3 E= -14.5486873857774  delta_E= -1.07e-07  |g|= 1.29e-05  |ddm|= 0.000558
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.52984e-05
diis-c [-7.82413456e-11  5.03077346e-04 -1.41854732e-02  1.01368240e+00]
  HOMO = -0.300694110250004  LUMO = 5.20181161884861
  mo_energy =
[-4.72430221e+00 -3.00694110e-01  5.20181162e+00  4.29029316e+01
  3.16080277e+02  3.20718877e+03]
E1 = -19.04738399871317  E_coul = 4.498696612929031
cycle= 4 E= -14.5486873857841  delta_E= -6.72e-12  |g|= 5.75e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04738399871317  E_coul = 4.498696612929031
  HOMO = -0.300694070150823  LUMO = 5.20181209779471
  mo_energy =
[-4.72430132e+00 -3.00694070e-01  5.20181210e+00  4.29029333e+01
  3.16080280e+02  3.20718877e+03]
E1 = -19.047384087960637  E_coul = 4.498696702176492
Extra cycle  E= -14.5486873857841  delta_E= -7.11e-15  |g|= 3.13e-08  |ddm|= 2.26e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126628e+03 1.91990023e+02 2.93037415e+01 6.47274081e+00
 1.66463597e+00 1.04577376e-01]
E = -14.548687385784145
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:29:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26627515        1
[INPUT] 0    0    [1    /1   ]  191.990022586        1
[INPUT] 0    0    [1    /1   ]  29.303741484         1
[INPUT] 0    0    [1    /1   ]  6.47274081237        1
[INPUT] 0    0    [1    /1   ]  1.66463597077        1
[INPUT] 0    0    [1    /1   ]  0.104577376485       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.266275154462, 1.0]], [0, [191.99002258551076, 1.0]], [0, [29.30374148402522, 1.0]], [0, [6.472740812369041, 1.0]], [0, [1.6646359707699474, 1.0]], [0, [0.10457737648512197, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26627515]
bas 1, expnt(s) = [191.99002259]
bas 2, expnt(s) = [29.30374148]
bas 3, expnt(s) = [6.47274081]
bas 4, expnt(s) = [1.66463597]
bas 5, expnt(s) = [0.10457738]
CPU time:        39.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126628e+03 7.33171701e+02 1.91990023e+02 1.30308882e+02
 2.93037415e+01 3.18205242e+01 6.47274081e+00 1.02525333e+01
 1.66463597e+00 3.70258025e+00 1.04577376e-01 4.64615112e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986659593790323
cond(S) = 21.086396078320043
E1 = -19.04628620998817  E_coul = 4.519995607909553
init E= -14.5262906020786
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301640583574778  LUMO = 5.20410933853894
  mo_energy =
[-4.71251895e+00 -3.01640584e-01  5.20410934e+00  4.29180217e+01
  3.16103444e+02  3.20721803e+03]
E1 = -19.049413207738645  E_coul = 4.500748699167094
cycle= 1 E= -14.5486645085716  delta_E= -0.0224  |g|= 0.0169  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0150314
diis-c [-2.25942828e-04  1.00000000e+00]
  HOMO = -0.300611906005445  LUMO = 5.20222625152972
  mo_energy =
[-4.72335667e+00 -3.00611906e-01  5.20222625e+00  4.29038675e+01
  3.16081339e+02  3.20718990e+03]
E1 = -19.047492357593843  E_coul = 4.498805079274382
cycle= 2 E= -14.5486872783195  delta_E= -2.28e-05  |g|= 0.0011  |ddm|= 0.00813
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0012856
diis-c [-5.86029389e-07 -7.38845068e-02  1.07388451e+00]
  HOMO = -0.300694575392953  LUMO = 5.20180195614212
  mo_energy =
[-4.72431844e+00 -3.00694575e-01  5.20180196e+00  4.29028925e+01
  3.16080209e+02  3.20718868e+03]
E1 = -19.04738266370703  E_coul = 4.49869527792961
cycle= 3 E= -14.5486873857774  delta_E= -1.07e-07  |g|= 1.29e-05  |ddm|= 0.000558
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.52984e-05
diis-c [-7.82413456e-11  5.03077346e-04 -1.41854732e-02  1.01368240e+00]
  HOMO = -0.300694110250004  LUMO = 5.20181161884861
  mo_energy =
[-4.72430221e+00 -3.00694110e-01  5.20181162e+00  4.29029316e+01
  3.16080277e+02  3.20718877e+03]
E1 = -19.04738399871317  E_coul = 4.498696612929031
cycle= 4 E= -14.5486873857841  delta_E= -6.72e-12  |g|= 5.75e-07  |ddm|= 2.38e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04738399871317  E_coul = 4.498696612929031
  HOMO = -0.300694070150823  LUMO = 5.20181209779471
  mo_energy =
[-4.72430132e+00 -3.00694070e-01  5.20181210e+00  4.29029333e+01
  3.16080280e+02  3.20718877e+03]
E1 = -19.047384087960637  E_coul = 4.498696702176492
Extra cycle  E= -14.5486873857841  delta_E= -7.11e-15  |g|= 3.13e-08  |ddm|= 2.26e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.086396078320043
E1 = -19.047384087960637  E_coul = 4.498696702176492
init E= -14.5486873857841
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30069406799501  LUMO = 5.20181212027728
  mo_energy =
[-4.72430127e+00 -3.00694068e-01  5.20181212e+00  4.29029334e+01
  3.16080280e+02  3.20718877e+03]
E1 = -19.047384092438183  E_coul = 4.49869670665403
cycle= 1 E= -14.5486873857842  delta_E= -7.11e-15  |g|= 1.71e-09  |ddm|= 1.27e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047384092438183  E_coul = 4.49869670665403
  HOMO = -0.300694067873482  LUMO = 5.20181212136928
  mo_energy =
[-4.72430127e+00 -3.00694068e-01  5.20181212e+00  4.29029334e+01
  3.16080280e+02  3.20718877e+03]
E1 = -19.047384092670953  E_coul = 4.4986967068867925
Extra cycle  E= -14.5486873857842  delta_E= -7.11e-15  |g|= 9.86e-11  |ddm|= 7.5e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126628e+03 1.91990023e+02 2.93037415e+01 6.47274081e+00
 1.66463597e+00 1.04577376e-01]
grad_E = [ 6.18758500e-07  8.91110339e-05 -3.07365185e-04  1.48723533e-03
 -4.22241418e-03  3.44346873e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26554488        1
[INPUT] 0    0    [1    /1   ]  191.872334346        1
[INPUT] 0    0    [1    /1   ]  29.6064302597        1
[INPUT] 0    0    [1    /1   ]  6.53159262626        1
[INPUT] 0    0    [1    /1   ]  1.67344302602        1
[INPUT] 0    0    [1    /1   ]  0.104568939899       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.265544880352, 1.0]], [0, [191.87233434563944, 1.0]], [0, [29.606430259681332, 1.0]], [0, [6.531592626259301, 1.0]], [0, [1.6734430260212976, 1.0]], [0, [0.10456893989857857, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26554488]
bas 1, expnt(s) = [191.87233435]
bas 2, expnt(s) = [29.60643026]
bas 3, expnt(s) = [6.53159263]
bas 4, expnt(s) = [1.67344303]
bas 5, expnt(s) = [0.10456894]
CPU time:        41.18
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126554e+03 7.33171492e+02 1.91872334e+02 1.30248969e+02
 2.96064303e+01 3.20667214e+01 6.53159263e+00 1.03223681e+01
 1.67344303e+00 3.71726243e+00 1.04568940e-01 4.64587000e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986639727853332
cond(S) = 21.05622628158256
E1 = -19.046178669672305  E_coul = 4.519789351802131
init E= -14.5263893178702
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30168056797751  LUMO = 5.25626172876238
  mo_energy =
[-4.71260413e+00 -3.01680568e-01  5.25626173e+00  4.33973047e+01
  3.17159918e+02  3.20791788e+03]
E1 = -19.049814648708512  E_coul = 4.501110955960965
cycle= 1 E= -14.5487036927475  delta_E= -0.0223  |g|= 0.0168  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148743
diis-c [-2.21245248e-04  1.00000000e+00]
  HOMO = -0.300618045820797  LUMO = 5.2545224938417
  mo_energy =
[-4.72318880e+00 -3.00618046e-01  5.25452249e+00  4.33835036e+01
  3.17138427e+02  3.20789061e+03]
E1 = -19.047931860717146  E_coul = 4.499205808145046
cycle= 2 E= -14.5487260525721  delta_E= -2.24e-05  |g|= 0.00108  |ddm|= 0.00799
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127453
diis-c [-5.46479609e-07 -7.51389990e-02  1.07513900e+00]
  HOMO = -0.300699175666358  LUMO = 5.25410620300881
  mo_energy =
[-4.72413263e+00 -3.00699176e-01  5.25410620e+00  4.33825508e+01
  3.17137327e+02  3.20788943e+03]
E1 = -19.04782536493646  E_coul = 4.4990992081820504
cycle= 3 E= -14.5487261567544  delta_E= -1.04e-07  |g|= 1.21e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.34847e-05
diis-c [-7.57644338e-11  5.09820820e-04 -1.25360742e-02  1.01202625e+00]
  HOMO = -0.30069858473254  LUMO = 5.25411649423945
  mo_energy =
[-4.72411504e+00 -3.00698585e-01  5.25411649e+00  4.33825911e+01
  3.17137396e+02  3.20788951e+03]
E1 = -19.04782685327121  E_coul = 4.499100696510858
cycle= 4 E= -14.5487261567604  delta_E= -5.94e-12  |g|= 5.56e-07  |ddm|= 2.56e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04782685327121  E_coul = 4.499100696510858
  HOMO = -0.300698546273419  LUMO = 5.25411696088214
  mo_energy =
[-4.72411418e+00 -3.00698546e-01  5.25411696e+00  4.33825928e+01
  3.17137398e+02  3.20788951e+03]
E1 = -19.04782693888063  E_coul = 4.49910078212027
Extra cycle  E= -14.5487261567604  delta_E= -7.11e-15  |g|= 3e-08  |ddm|= 2.16e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126554e+03 1.91872334e+02 2.96064303e+01 6.53159263e+00
 1.67344303e+00 1.04568940e-01]
E = -14.54872615676036
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26554488        1
[INPUT] 0    0    [1    /1   ]  191.872334346        1
[INPUT] 0    0    [1    /1   ]  29.6064302597        1
[INPUT] 0    0    [1    /1   ]  6.53159262626        1
[INPUT] 0    0    [1    /1   ]  1.67344302602        1
[INPUT] 0    0    [1    /1   ]  0.104568939899       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.265544880352, 1.0]], [0, [191.87233434563944, 1.0]], [0, [29.606430259681332, 1.0]], [0, [6.531592626259301, 1.0]], [0, [1.6734430260212976, 1.0]], [0, [0.10456893989857857, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26554488]
bas 1, expnt(s) = [191.87233435]
bas 2, expnt(s) = [29.60643026]
bas 3, expnt(s) = [6.53159263]
bas 4, expnt(s) = [1.67344303]
bas 5, expnt(s) = [0.10456894]
CPU time:        41.53
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126554e+03 7.33171492e+02 1.91872334e+02 1.30248969e+02
 2.96064303e+01 3.20667214e+01 6.53159263e+00 1.03223681e+01
 1.67344303e+00 3.71726243e+00 1.04568940e-01 4.64587000e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986639727853332
cond(S) = 21.05622628158256
E1 = -19.046178669672305  E_coul = 4.519789351802131
init E= -14.5263893178702
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30168056797751  LUMO = 5.25626172876238
  mo_energy =
[-4.71260413e+00 -3.01680568e-01  5.25626173e+00  4.33973047e+01
  3.17159918e+02  3.20791788e+03]
E1 = -19.049814648708512  E_coul = 4.501110955960965
cycle= 1 E= -14.5487036927475  delta_E= -0.0223  |g|= 0.0168  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148743
diis-c [-2.21245248e-04  1.00000000e+00]
  HOMO = -0.300618045820797  LUMO = 5.2545224938417
  mo_energy =
[-4.72318880e+00 -3.00618046e-01  5.25452249e+00  4.33835036e+01
  3.17138427e+02  3.20789061e+03]
E1 = -19.047931860717146  E_coul = 4.499205808145046
cycle= 2 E= -14.5487260525721  delta_E= -2.24e-05  |g|= 0.00108  |ddm|= 0.00799
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127453
diis-c [-5.46479609e-07 -7.51389990e-02  1.07513900e+00]
  HOMO = -0.300699175666358  LUMO = 5.25410620300881
  mo_energy =
[-4.72413263e+00 -3.00699176e-01  5.25410620e+00  4.33825508e+01
  3.17137327e+02  3.20788943e+03]
E1 = -19.04782536493646  E_coul = 4.4990992081820504
cycle= 3 E= -14.5487261567544  delta_E= -1.04e-07  |g|= 1.21e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.34847e-05
diis-c [-7.57644338e-11  5.09820820e-04 -1.25360742e-02  1.01202625e+00]
  HOMO = -0.30069858473254  LUMO = 5.25411649423945
  mo_energy =
[-4.72411504e+00 -3.00698585e-01  5.25411649e+00  4.33825911e+01
  3.17137396e+02  3.20788951e+03]
E1 = -19.04782685327121  E_coul = 4.499100696510858
cycle= 4 E= -14.5487261567604  delta_E= -5.94e-12  |g|= 5.56e-07  |ddm|= 2.56e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04782685327121  E_coul = 4.499100696510858
  HOMO = -0.300698546273419  LUMO = 5.25411696088214
  mo_energy =
[-4.72411418e+00 -3.00698546e-01  5.25411696e+00  4.33825928e+01
  3.17137398e+02  3.20788951e+03]
E1 = -19.04782693888063  E_coul = 4.49910078212027
Extra cycle  E= -14.5487261567604  delta_E= -7.11e-15  |g|= 3e-08  |ddm|= 2.16e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.05622628158256
E1 = -19.04782693888063  E_coul = 4.49910078212027
init E= -14.5487261567604
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300698544223623  LUMO = 5.25411698260216
  mo_energy =
[-4.72411414e+00 -3.00698544e-01  5.25411698e+00  4.33825929e+01
  3.17137398e+02  3.20788951e+03]
E1 = -19.047826943136577  E_coul = 4.49910078637621
cycle= 1 E= -14.5487261567604  delta_E= -7.11e-15  |g|= 1.63e-09  |ddm|= 1.2e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047826943136577  E_coul = 4.49910078637621
  HOMO = -0.300698544109174  LUMO = 5.25411698364741
  mo_energy =
[-4.72411414e+00 -3.00698544e-01  5.25411698e+00  4.33825929e+01
  3.17137398e+02  3.20788951e+03]
E1 = -19.047826943355716  E_coul = 4.499100786595344
Extra cycle  E= -14.5487261567604  delta_E= -5.33e-15  |g|= 9.27e-11  |ddm|= 7.02e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126554e+03 1.91872334e+02 2.96064303e+01 6.53159263e+00
 1.67344303e+00 1.04568940e-01]
grad_E = [ 6.66723250e-07  8.15085469e-05 -2.27536882e-04  1.52689112e-03
 -4.07744819e-03  3.34754764e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26490545        1
[INPUT] 0    0    [1    /1   ]  191.769156552        1
[INPUT] 0    0    [1    /1   ]  29.8747076108        1
[INPUT] 0    0    [1    /1   ]  6.56558140698        1
[INPUT] 0    0    [1    /1   ]  1.68028617036        1
[INPUT] 0    0    [1    /1   ]  0.104529239012       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2649054481205, 1.0]], [0, [191.76915655181443, 1.0]], [0, [29.874707610756957, 1.0]], [0, [6.56558140697568, 1.0]], [0, [1.680286170359818, 1.0]], [0, [0.1045292390122523, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26490545]
bas 1, expnt(s) = [191.76915655]
bas 2, expnt(s) = [29.87470761]
bas 3, expnt(s) = [6.56558141]
bas 4, expnt(s) = [1.68028617]
bas 5, expnt(s) = [0.10452924]
CPU time:        43.79
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126491e+03 7.33171309e+02 1.91769157e+02 1.30196435e+02
 2.98747076e+01 3.22844039e+01 6.56558141e+00 1.03626282e+01
 1.68028617e+00 3.72865725e+00 1.04529239e-01 4.64454704e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986627024392524
cond(S) = 21.016373140102004
E1 = -19.045972497865424  E_coul = 4.519473456677913
init E= -14.5264990411875
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301734971453391  LUMO = 5.29036162252231
  mo_energy =
[-4.71272439e+00 -3.01734971e-01  5.29036162e+00  4.37647767e+01
  3.18031253e+02  3.20849268e+03]
E1 = -19.050149888033275  E_coul = 4.501415444742773
cycle= 1 E= -14.5487344432905  delta_E= -0.0222  |g|= 0.0168  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147512
diis-c [-2.1759729e-04  1.0000000e+00]
  HOMO = -0.300646463032133  LUMO = 5.28882171359579
  mo_energy =
[-4.72302345e+00 -3.00646463e-01  5.28882171e+00  4.37514692e+01
  3.18010383e+02  3.20846630e+03]
E1 = -19.048309649504233  E_coul = 4.49955299176472
cycle= 2 E= -14.5487566577395  delta_E= -2.22e-05  |g|= 0.00109  |ddm|= 0.00791
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127118
diis-c [-5.05259781e-07 -7.70357916e-02  1.07703579e+00]
  HOMO = -0.300726617998536  LUMO = 5.2884171063497
  mo_energy =
[-4.72394706e+00 -3.00726618e-01  5.28841711e+00  4.37505550e+01
  3.18009330e+02  3.20846517e+03]
E1 = -19.048206229276083  E_coul = 4.4994494684064925
cycle= 3 E= -14.5487567608696  delta_E= -1.03e-07  |g|= 1.14e-05  |ddm|= 0.00054
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.17713e-05
diis-c [-7.06940753e-11  5.78989944e-04 -1.12919832e-02  1.01071299e+00]
  HOMO = -0.300725874186979  LUMO = 5.28842812543149
  mo_energy =
[-4.72392779e+00 -3.00725874e-01  5.28842813e+00  4.37505971e+01
  3.18009401e+02  3.20846525e+03]
E1 = -19.04820789609124  E_coul = 4.499451135215912
cycle= 4 E= -14.5487567608753  delta_E= -5.74e-12  |g|= 5.17e-07  |ddm|= 3.11e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04820789609124  E_coul = 4.499451135215912
  HOMO = -0.300725838138179  LUMO = 5.28842856682696
  mo_energy =
[-4.72392697e+00 -3.00725838e-01  5.28842857e+00  4.37505986e+01
  3.18009404e+02  3.20846525e+03]
E1 = -19.04820797629421  E_coul = 4.499451215418856
Extra cycle  E= -14.5487567608754  delta_E= -2.66e-14  |g|= 2.79e-08  |ddm|= 2.02e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126491e+03 1.91769157e+02 2.98747076e+01 6.56558141e+00
 1.68028617e+00 1.04529239e-01]
E = -14.548756760875357
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26490545        1
[INPUT] 0    0    [1    /1   ]  191.769156552        1
[INPUT] 0    0    [1    /1   ]  29.8747076108        1
[INPUT] 0    0    [1    /1   ]  6.56558140698        1
[INPUT] 0    0    [1    /1   ]  1.68028617036        1
[INPUT] 0    0    [1    /1   ]  0.104529239012       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2649054481205, 1.0]], [0, [191.76915655181443, 1.0]], [0, [29.874707610756957, 1.0]], [0, [6.56558140697568, 1.0]], [0, [1.680286170359818, 1.0]], [0, [0.1045292390122523, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26490545]
bas 1, expnt(s) = [191.76915655]
bas 2, expnt(s) = [29.87470761]
bas 3, expnt(s) = [6.56558141]
bas 4, expnt(s) = [1.68028617]
bas 5, expnt(s) = [0.10452924]
CPU time:        44.18
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126491e+03 7.33171309e+02 1.91769157e+02 1.30196435e+02
 2.98747076e+01 3.22844039e+01 6.56558141e+00 1.03626282e+01
 1.68028617e+00 3.72865725e+00 1.04529239e-01 4.64454704e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986627024392524
cond(S) = 21.016373140102004
E1 = -19.045972497865424  E_coul = 4.519473456677913
init E= -14.5264990411875
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301734971453391  LUMO = 5.29036162252231
  mo_energy =
[-4.71272439e+00 -3.01734971e-01  5.29036162e+00  4.37647767e+01
  3.18031253e+02  3.20849268e+03]
E1 = -19.050149888033275  E_coul = 4.501415444742773
cycle= 1 E= -14.5487344432905  delta_E= -0.0222  |g|= 0.0168  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147512
diis-c [-2.1759729e-04  1.0000000e+00]
  HOMO = -0.300646463032133  LUMO = 5.28882171359579
  mo_energy =
[-4.72302345e+00 -3.00646463e-01  5.28882171e+00  4.37514692e+01
  3.18010383e+02  3.20846630e+03]
E1 = -19.048309649504233  E_coul = 4.49955299176472
cycle= 2 E= -14.5487566577395  delta_E= -2.22e-05  |g|= 0.00109  |ddm|= 0.00791
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127118
diis-c [-5.05259781e-07 -7.70357916e-02  1.07703579e+00]
  HOMO = -0.300726617998536  LUMO = 5.2884171063497
  mo_energy =
[-4.72394706e+00 -3.00726618e-01  5.28841711e+00  4.37505550e+01
  3.18009330e+02  3.20846517e+03]
E1 = -19.048206229276083  E_coul = 4.4994494684064925
cycle= 3 E= -14.5487567608696  delta_E= -1.03e-07  |g|= 1.14e-05  |ddm|= 0.00054
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.17713e-05
diis-c [-7.06940753e-11  5.78989944e-04 -1.12919832e-02  1.01071299e+00]
  HOMO = -0.300725874186979  LUMO = 5.28842812543149
  mo_energy =
[-4.72392779e+00 -3.00725874e-01  5.28842813e+00  4.37505971e+01
  3.18009401e+02  3.20846525e+03]
E1 = -19.04820789609124  E_coul = 4.499451135215912
cycle= 4 E= -14.5487567608753  delta_E= -5.74e-12  |g|= 5.17e-07  |ddm|= 3.11e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04820789609124  E_coul = 4.499451135215912
  HOMO = -0.300725838138179  LUMO = 5.28842856682696
  mo_energy =
[-4.72392697e+00 -3.00725838e-01  5.28842857e+00  4.37505986e+01
  3.18009404e+02  3.20846525e+03]
E1 = -19.04820797629421  E_coul = 4.499451215418856
Extra cycle  E= -14.5487567608754  delta_E= -2.66e-14  |g|= 2.79e-08  |ddm|= 2.02e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.016373140102004
E1 = -19.04820797629421  E_coul = 4.499451215418856
init E= -14.5487567608754
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.300725836220122  LUMO = 5.28842858721805
  mo_energy =
[-4.72392694e+00 -3.00725836e-01  5.28842859e+00  4.37505987e+01
  3.18009404e+02  3.20846525e+03]
E1 = -19.048207980256002  E_coul = 4.49945121938065
cycle= 1 E= -14.5487567608754  delta_E= 3.55e-15  |g|= 1.51e-09  |ddm|= 1.12e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048207980256002  E_coul = 4.49945121938065
  HOMO = -0.300725836113494  LUMO = 5.28842858819235
  mo_energy =
[-4.72392693e+00 -3.00725836e-01  5.28842859e+00  4.37505987e+01
  3.18009404e+02  3.20846525e+03]
E1 = -19.048207980458816  E_coul = 4.499451219583473
Extra cycle  E= -14.5487567608753  delta_E= 1.07e-14  |g|= 8.62e-11  |ddm|= 6.53e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126491e+03 1.91769157e+02 2.98747076e+01 6.56558141e+00
 1.68028617e+00 1.04529239e-01]
grad_E = [ 7.17787989e-07  7.32753181e-05 -8.98565430e-05  9.37291330e-04
 -2.33100535e-03  1.87728833e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26472862        1
[INPUT] 0    0    [1    /1   ]  191.740539285        1
[INPUT] 0    0    [1    /1   ]  29.9515389722        1
[INPUT] 0    0    [1    /1   ]  6.55966755097        1
[INPUT] 0    0    [1    /1   ]  1.68113648325        1
[INPUT] 0    0    [1    /1   ]  0.104495051786       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2647286245556, 1.0]], [0, [191.7405392846245, 1.0]], [0, [29.95153897223167, 1.0]], [0, [6.559667550966568, 1.0]], [0, [1.6811364832504558, 1.0]], [0, [0.10449505178597442, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26472862]
bas 1, expnt(s) = [191.74053928]
bas 2, expnt(s) = [29.95153897]
bas 3, expnt(s) = [6.55966755]
bas 4, expnt(s) = [1.68113648]
bas 5, expnt(s) = [0.10449505]
CPU time:        46.39
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126473e+03 7.33171259e+02 1.91740539e+02 1.30181863e+02
 2.99515390e+01 3.23466553e+01 6.55966755e+00 1.03556269e+01
 1.68113648e+00 3.73007234e+00 1.04495052e-01 4.64340771e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866276386164534
cond(S) = 20.98867413796499
E1 = -19.045831606315506  E_coul = 4.519289393219047
init E= -14.5265422130965
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301762850678523  LUMO = 5.28885584672396
  mo_energy =
[-4.71279307e+00 -3.01762851e-01  5.28885585e+00  4.38193836e+01
  3.18224382e+02  3.20861634e+03]
E1 = -19.050218632165134  E_coul = 4.5014743153358285
cycle= 1 E= -14.5487443168293  delta_E= -0.0222  |g|= 0.0168  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147328
diis-c [-2.17055812e-04  1.00000000e+00]
  HOMO = -0.300671087114022  LUMO = 5.28742163596013
  mo_energy =
[-4.72297439e+00 -3.00671087e-01  5.28742164e+00  4.38063321e+01
  3.18203710e+02  3.20859029e+03]
E1 = -19.048396531305517  E_coul = 4.499629855131888
cycle= 2 E= -14.5487666761736  delta_E= -2.24e-05  |g|= 0.00109  |ddm|= 0.00791
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127591
diis-c [-4.89267139e-07 -7.81797139e-02  1.07817971e+00]
  HOMO = -0.300751298735363  LUMO = 5.28702370338602
  mo_energy =
[-4.72388932e+00 -3.00751299e-01  5.28702370e+00  4.38054432e+01
  3.18202688e+02  3.20858919e+03]
E1 = -19.04829413125494  E_coul = 4.499527350747305
cycle= 3 E= -14.5487667805076  delta_E= -1.04e-07  |g|= 1.12e-05  |ddm|= 0.000542
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1201e-05
diis-c [-6.72677901e-11  6.54758795e-04 -1.11778709e-02  1.01052311e+00]
  HOMO = -0.300750477046071  LUMO = 5.28703506391338
  mo_energy =
[-4.72386917e+00 -3.00750477e-01  5.28703506e+00  4.38054861e+01
  3.18202761e+02  3.20858928e+03]
E1 = -19.0482958852484  E_coul = 4.499529104734827
cycle= 4 E= -14.5487667805136  delta_E= -5.94e-12  |g|= 4.89e-07  |ddm|= 3.46e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.0482958852484  E_coul = 4.499529104734827
  HOMO = -0.300750442672638  LUMO = 5.2870354857113
  mo_energy =
[-4.72386840e+00 -3.00750443e-01  5.28703549e+00  4.38054876e+01
  3.18202763e+02  3.20858928e+03]
E1 = -19.048295961897878  E_coul = 4.499529181384294
Extra cycle  E= -14.5487667805136  delta_E= -1.07e-14  |g|= 2.65e-08  |ddm|= 1.93e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126473e+03 1.91740539e+02 2.99515390e+01 6.55966755e+00
 1.68113648e+00 1.04495052e-01]
E = -14.548766780513585
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26472862        1
[INPUT] 0    0    [1    /1   ]  191.740539285        1
[INPUT] 0    0    [1    /1   ]  29.9515389722        1
[INPUT] 0    0    [1    /1   ]  6.55966755097        1
[INPUT] 0    0    [1    /1   ]  1.68113648325        1
[INPUT] 0    0    [1    /1   ]  0.104495051786       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2647286245556, 1.0]], [0, [191.7405392846245, 1.0]], [0, [29.95153897223167, 1.0]], [0, [6.559667550966568, 1.0]], [0, [1.6811364832504558, 1.0]], [0, [0.10449505178597442, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26472862]
bas 1, expnt(s) = [191.74053928]
bas 2, expnt(s) = [29.95153897]
bas 3, expnt(s) = [6.55966755]
bas 4, expnt(s) = [1.68113648]
bas 5, expnt(s) = [0.10449505]
CPU time:        46.78
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126473e+03 7.33171259e+02 1.91740539e+02 1.30181863e+02
 2.99515390e+01 3.23466553e+01 6.55966755e+00 1.03556269e+01
 1.68113648e+00 3.73007234e+00 1.04495052e-01 4.64340771e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866276386164534
cond(S) = 20.98867413796499
E1 = -19.045831606315506  E_coul = 4.519289393219047
init E= -14.5265422130965
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301762850678523  LUMO = 5.28885584672396
  mo_energy =
[-4.71279307e+00 -3.01762851e-01  5.28885585e+00  4.38193836e+01
  3.18224382e+02  3.20861634e+03]
E1 = -19.050218632165134  E_coul = 4.5014743153358285
cycle= 1 E= -14.5487443168293  delta_E= -0.0222  |g|= 0.0168  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147328
diis-c [-2.17055812e-04  1.00000000e+00]
  HOMO = -0.300671087114022  LUMO = 5.28742163596013
  mo_energy =
[-4.72297439e+00 -3.00671087e-01  5.28742164e+00  4.38063321e+01
  3.18203710e+02  3.20859029e+03]
E1 = -19.048396531305517  E_coul = 4.499629855131888
cycle= 2 E= -14.5487666761736  delta_E= -2.24e-05  |g|= 0.00109  |ddm|= 0.00791
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127591
diis-c [-4.89267139e-07 -7.81797139e-02  1.07817971e+00]
  HOMO = -0.300751298735363  LUMO = 5.28702370338602
  mo_energy =
[-4.72388932e+00 -3.00751299e-01  5.28702370e+00  4.38054432e+01
  3.18202688e+02  3.20858919e+03]
E1 = -19.04829413125494  E_coul = 4.499527350747305
cycle= 3 E= -14.5487667805076  delta_E= -1.04e-07  |g|= 1.12e-05  |ddm|= 0.000542
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1201e-05
diis-c [-6.72677901e-11  6.54758795e-04 -1.11778709e-02  1.01052311e+00]
  HOMO = -0.300750477046071  LUMO = 5.28703506391338
  mo_energy =
[-4.72386917e+00 -3.00750477e-01  5.28703506e+00  4.38054861e+01
  3.18202761e+02  3.20858928e+03]
E1 = -19.0482958852484  E_coul = 4.499529104734827
cycle= 4 E= -14.5487667805136  delta_E= -5.94e-12  |g|= 4.89e-07  |ddm|= 3.46e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.0482958852484  E_coul = 4.499529104734827
  HOMO = -0.300750442672638  LUMO = 5.2870354857113
  mo_energy =
[-4.72386840e+00 -3.00750443e-01  5.28703549e+00  4.38054876e+01
  3.18202763e+02  3.20858928e+03]
E1 = -19.048295961897878  E_coul = 4.499529181384294
Extra cycle  E= -14.5487667805136  delta_E= -1.07e-14  |g|= 2.65e-08  |ddm|= 1.93e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.98867413796499
E1 = -19.048295961897878  E_coul = 4.499529181384294
init E= -14.5487667805136
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300750440836325  LUMO = 5.28703550516324
  mo_energy =
[-4.72386836e+00 -3.00750441e-01  5.28703551e+00  4.38054877e+01
  3.18202763e+02  3.20858928e+03]
E1 = -19.048295965681902  E_coul = 4.499529185168314
cycle= 1 E= -14.5487667805136  delta_E= -3.55e-15  |g|= 1.44e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048295965681902  E_coul = 4.499529185168314
  HOMO = -0.30075044073413  LUMO = 5.2870355060919
  mo_energy =
[-4.72386836e+00 -3.00750441e-01  5.28703551e+00  4.38054877e+01
  3.18202763e+02  3.20858928e+03]
E1 = -19.048295965875685  E_coul = 4.499529185362098
Extra cycle  E= -14.5487667805136  delta_E= 1.78e-15  |g|= 8.26e-11  |ddm|= 6.27e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126473e+03 1.91740539e+02 2.99515390e+01 6.55966755e+00
 1.68113648e+00 1.04495052e-01]
grad_E = [ 7.39881686e-07  6.95318693e-05  7.89125217e-06  2.59767311e-04
 -6.08300358e-04  4.54913307e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26478994        1
[INPUT] 0    0    [1    /1   ]  191.750426574        1
[INPUT] 0    0    [1    /1   ]  29.9269602595        1
[INPUT] 0    0    [1    /1   ]  6.5481723717         1
[INPUT] 0    0    [1    /1   ]  1.6800282586         1
[INPUT] 0    0    [1    /1   ]  0.104485854582       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2647899400595, 1.0]], [0, [191.75042657440164, 1.0]], [0, [29.9269602595409, 1.0]], [0, [6.5481723716965945, 1.0]], [0, [1.6800282585975728, 1.0]], [0, [0.10448585458191485, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26478994]
bas 1, expnt(s) = [191.75042657]
bas 2, expnt(s) = [29.92696026]
bas 3, expnt(s) = [6.54817237]
bas 4, expnt(s) = [1.68002826]
bas 5, expnt(s) = [0.10448585]
CPU time:        48.88
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126479e+03 7.33171276e+02 1.91750427e+02 1.30186898e+02
 2.99269603e+01 3.23267451e+01 6.54817237e+00 1.03420135e+01
 1.68002826e+00 3.72822800e+00 1.04485855e-01 4.64310119e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866311058860977
cond(S) = 20.984608287122967
E1 = -19.045814970733566  E_coul = 4.5192654852667715
init E= -14.5265494854668
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176532763114  LUMO = 5.27997782169951
  mo_energy =
[-4.71280249e+00 -3.01765328e-01  5.27997782e+00  4.37589875e+01
  3.18114774e+02  3.20854163e+03]
E1 = -19.050189541929658  E_coul = 4.501444308916693
cycle= 1 E= -14.548745233013  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147492
diis-c [-2.17540368e-04  1.00000000e+00]
  HOMO = -0.30067774052799  LUMO = 5.27855632614828
  mo_energy =
[-4.72298325e+00 -3.00677741e-01  5.27855633e+00  4.37459671e+01
  3.18094073e+02  3.20851556e+03]
E1 = -19.048367740953637  E_coul = 4.499600036103386
cycle= 2 E= -14.5487677048503  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00793
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127928
diis-c [-4.89576535e-07 -7.83925515e-02  1.07839255e+00]
  HOMO = -0.300758210169581  LUMO = 5.27815938401653
  mo_energy =
[-4.72389802e+00 -3.00758210e-01  5.27815938e+00  4.37450832e+01
  3.18093057e+02  3.20851446e+03]
E1 = -19.048265194957327  E_coul = 4.4994973848579995
cycle= 3 E= -14.5487678100993  delta_E= -1.05e-07  |g|= 1.11e-05  |ddm|= 0.000545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12191e-05
diis-c [-6.64812796e-11  6.79512961e-04 -1.13719224e-02  1.01069241e+00]
  HOMO = -0.300757378776021  LUMO = 5.27817077765357
  mo_energy =
[-4.72387776e+00 -3.00757379e-01  5.27817078e+00  4.37451263e+01
  3.18093129e+02  3.20851455e+03]
E1 = -19.048266959450576  E_coul = 4.499499149345302
cycle= 4 E= -14.5487678101053  delta_E= -5.95e-12  |g|= 4.83e-07  |ddm|= 3.5e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048266959450576  E_coul = 4.499499149345302
  HOMO = -0.300757344751587  LUMO = 5.27817119458068
  mo_energy =
[-4.72387699e+00 -3.00757345e-01  5.27817119e+00  4.37451278e+01
  3.18093132e+02  3.20851455e+03]
E1 = -19.048267035401043  E_coul = 4.499499225295746
Extra cycle  E= -14.5487678101053  delta_E= -2.13e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126479e+03 1.91750427e+02 2.99269603e+01 6.54817237e+00
 1.68002826e+00 1.04485855e-01]
E = -14.548767810105296
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26478994        1
[INPUT] 0    0    [1    /1   ]  191.750426574        1
[INPUT] 0    0    [1    /1   ]  29.9269602595        1
[INPUT] 0    0    [1    /1   ]  6.5481723717         1
[INPUT] 0    0    [1    /1   ]  1.6800282586         1
[INPUT] 0    0    [1    /1   ]  0.104485854582       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2647899400595, 1.0]], [0, [191.75042657440164, 1.0]], [0, [29.9269602595409, 1.0]], [0, [6.5481723716965945, 1.0]], [0, [1.6800282585975728, 1.0]], [0, [0.10448585458191485, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26478994]
bas 1, expnt(s) = [191.75042657]
bas 2, expnt(s) = [29.92696026]
bas 3, expnt(s) = [6.54817237]
bas 4, expnt(s) = [1.68002826]
bas 5, expnt(s) = [0.10448585]
CPU time:        49.28
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126479e+03 7.33171276e+02 1.91750427e+02 1.30186898e+02
 2.99269603e+01 3.23267451e+01 6.54817237e+00 1.03420135e+01
 1.68002826e+00 3.72822800e+00 1.04485855e-01 4.64310119e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866311058860977
cond(S) = 20.984608287122967
E1 = -19.045814970733566  E_coul = 4.5192654852667715
init E= -14.5265494854668
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176532763114  LUMO = 5.27997782169951
  mo_energy =
[-4.71280249e+00 -3.01765328e-01  5.27997782e+00  4.37589875e+01
  3.18114774e+02  3.20854163e+03]
E1 = -19.050189541929658  E_coul = 4.501444308916693
cycle= 1 E= -14.548745233013  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147492
diis-c [-2.17540368e-04  1.00000000e+00]
  HOMO = -0.30067774052799  LUMO = 5.27855632614828
  mo_energy =
[-4.72298325e+00 -3.00677741e-01  5.27855633e+00  4.37459671e+01
  3.18094073e+02  3.20851556e+03]
E1 = -19.048367740953637  E_coul = 4.499600036103386
cycle= 2 E= -14.5487677048503  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00793
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127928
diis-c [-4.89576535e-07 -7.83925515e-02  1.07839255e+00]
  HOMO = -0.300758210169581  LUMO = 5.27815938401653
  mo_energy =
[-4.72389802e+00 -3.00758210e-01  5.27815938e+00  4.37450832e+01
  3.18093057e+02  3.20851446e+03]
E1 = -19.048265194957327  E_coul = 4.4994973848579995
cycle= 3 E= -14.5487678100993  delta_E= -1.05e-07  |g|= 1.11e-05  |ddm|= 0.000545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12191e-05
diis-c [-6.64812796e-11  6.79512961e-04 -1.13719224e-02  1.01069241e+00]
  HOMO = -0.300757378776021  LUMO = 5.27817077765357
  mo_energy =
[-4.72387776e+00 -3.00757379e-01  5.27817078e+00  4.37451263e+01
  3.18093129e+02  3.20851455e+03]
E1 = -19.048266959450576  E_coul = 4.499499149345302
cycle= 4 E= -14.5487678101053  delta_E= -5.95e-12  |g|= 4.83e-07  |ddm|= 3.5e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048266959450576  E_coul = 4.499499149345302
  HOMO = -0.300757344751587  LUMO = 5.27817119458068
  mo_energy =
[-4.72387699e+00 -3.00757345e-01  5.27817119e+00  4.37451278e+01
  3.18093132e+02  3.20851455e+03]
E1 = -19.048267035401043  E_coul = 4.499499225295746
Extra cycle  E= -14.5487678101053  delta_E= -2.13e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.984608287122967
E1 = -19.048267035401043  E_coul = 4.499499225295746
init E= -14.5487678101053
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757342928963  LUMO = 5.27817121382343
  mo_energy =
[-4.72387695e+00 -3.00757343e-01  5.27817121e+00  4.37451279e+01
  3.18093132e+02  3.20851455e+03]
E1 = -19.048267039155164  E_coul = 4.499499229049869
cycle= 1 E= -14.5487678101053  delta_E= 1.78e-15  |g|= 1.43e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048267039155164  E_coul = 4.499499229049869
  HOMO = -0.300757342827351  LUMO = 5.2781712147432
  mo_energy =
[-4.72387695e+00 -3.00757343e-01  5.27817121e+00  4.37451279e+01
  3.18093132e+02  3.20851455e+03]
E1 = -19.048267039347717  E_coul = 4.499499229242424
Extra cycle  E= -14.5487678101053  delta_E= 1.78e-15  |g|= 8.21e-11  |ddm|= 6.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126479e+03 1.91750427e+02 2.99269603e+01 6.54817237e+00
 1.68002826e+00 1.04485855e-01]
grad_E = [ 7.39324145e-07  6.94848213e-05  2.87371240e-05  2.35616712e-05
 -5.04731055e-05  3.58487698e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2648242         1
[INPUT] 0    0    [1    /1   ]  191.756002889        1
[INPUT] 0    0    [1    /1   ]  29.9124278748        1
[INPUT] 0    0    [1    /1   ]  6.54502070718        1
[INPUT] 0    0    [1    /1   ]  1.67965707923        1
[INPUT] 0    0    [1    /1   ]  0.104485102769       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2648242001515, 1.0]], [0, [191.7560028893569, 1.0]], [0, [29.912427874818814, 1.0]], [0, [6.5450207071793605, 1.0]], [0, [1.6796570792258187, 1.0]], [0, [0.1044851027688001, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2648242]
bas 1, expnt(s) = [191.75600289]
bas 2, expnt(s) = [29.91242787]
bas 3, expnt(s) = [6.54502071]
bas 4, expnt(s) = [1.67965708]
bas 5, expnt(s) = [0.1044851]
CPU time:        51.38
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126482e+03 7.33171286e+02 1.91756003e+02 1.30189737e+02
 2.99124279e+01 3.23149712e+01 6.54502071e+00 1.03382801e+01
 1.67965708e+00 3.72761021e+00 1.04485103e-01 4.64307613e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866321416654635
cond(S) = 20.986365912524526
E1 = -19.045819324862816  E_coul = 4.5192697965738935
init E= -14.5265495282889
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301764418264818  LUMO = 5.2774216224798
  mo_energy =
[-4.71280113e+00 -3.01764418e-01  5.27742162e+00  4.37351776e+01
  3.18063085e+02  3.20850694e+03]
E1 = -19.050177576652057  E_coul = 4.501432318417332
cycle= 1 E= -14.5487452582347  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147563
diis-c [-2.17748394e-04  1.00000000e+00]
  HOMO = -0.300678280716416  LUMO = 5.27599731542994
  mo_energy =
[-4.72298873e+00 -3.00678281e-01  5.27599732e+00  4.37221521e+01
  3.18042366e+02  3.20848084e+03]
E1 = -19.048354700885163  E_coul = 4.499586946857194
cycle= 2 E= -14.548767754028  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00794
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127998
diis-c [-4.90830000e-07 -7.83717164e-02  1.07837172e+00]
  HOMO = -0.300758823204971  LUMO = 5.27560024172841
  mo_energy =
[-4.72390401e+00 -3.00758823e-01  5.27560024e+00  4.37212681e+01
  3.18041349e+02  3.20847974e+03]
E1 = -19.048252044883196  E_coul = 4.4994841854110055
cycle= 3 E= -14.5487678594722  delta_E= -1.05e-07  |g|= 1.11e-05  |ddm|= 0.000545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12635e-05
diis-c [-6.64576173e-11  6.81410510e-04 -1.14414190e-02  1.01076001e+00]
  HOMO = -0.300757994770949  LUMO = 5.27561161926328
  mo_energy =
[-4.72388377e+00 -3.00757995e-01  5.27561162e+00  4.37213112e+01
  3.18041422e+02  3.20847983e+03]
E1 = -19.048253805909486  E_coul = 4.499485946431364
cycle= 4 E= -14.5487678594781  delta_E= -5.93e-12  |g|= 4.83e-07  |ddm|= 3.48e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048253805909486  E_coul = 4.499485946431364
  HOMO = -0.300757960724345  LUMO = 5.27561203611659
  mo_energy =
[-4.72388300e+00 -3.00757961e-01  5.27561204e+00  4.37213127e+01
  3.18041424e+02  3.20847983e+03]
E1 = -19.048253881907108  E_coul = 4.499486022428974
Extra cycle  E= -14.5487678594781  delta_E= -1.07e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126482e+03 1.91756003e+02 2.99124279e+01 6.54502071e+00
 1.67965708e+00 1.04485103e-01]
E = -14.548767859478133
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2648242         1
[INPUT] 0    0    [1    /1   ]  191.756002889        1
[INPUT] 0    0    [1    /1   ]  29.9124278748        1
[INPUT] 0    0    [1    /1   ]  6.54502070718        1
[INPUT] 0    0    [1    /1   ]  1.67965707923        1
[INPUT] 0    0    [1    /1   ]  0.104485102769       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2648242001515, 1.0]], [0, [191.7560028893569, 1.0]], [0, [29.912427874818814, 1.0]], [0, [6.5450207071793605, 1.0]], [0, [1.6796570792258187, 1.0]], [0, [0.1044851027688001, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2648242]
bas 1, expnt(s) = [191.75600289]
bas 2, expnt(s) = [29.91242787]
bas 3, expnt(s) = [6.54502071]
bas 4, expnt(s) = [1.67965708]
bas 5, expnt(s) = [0.1044851]
CPU time:        51.79
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126482e+03 7.33171286e+02 1.91756003e+02 1.30189737e+02
 2.99124279e+01 3.23149712e+01 6.54502071e+00 1.03382801e+01
 1.67965708e+00 3.72761021e+00 1.04485103e-01 4.64307613e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866321416654635
cond(S) = 20.986365912524526
E1 = -19.045819324862816  E_coul = 4.5192697965738935
init E= -14.5265495282889
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301764418264818  LUMO = 5.2774216224798
  mo_energy =
[-4.71280113e+00 -3.01764418e-01  5.27742162e+00  4.37351776e+01
  3.18063085e+02  3.20850694e+03]
E1 = -19.050177576652057  E_coul = 4.501432318417332
cycle= 1 E= -14.5487452582347  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147563
diis-c [-2.17748394e-04  1.00000000e+00]
  HOMO = -0.300678280716416  LUMO = 5.27599731542994
  mo_energy =
[-4.72298873e+00 -3.00678281e-01  5.27599732e+00  4.37221521e+01
  3.18042366e+02  3.20848084e+03]
E1 = -19.048354700885163  E_coul = 4.499586946857194
cycle= 2 E= -14.548767754028  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00794
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00127998
diis-c [-4.90830000e-07 -7.83717164e-02  1.07837172e+00]
  HOMO = -0.300758823204971  LUMO = 5.27560024172841
  mo_energy =
[-4.72390401e+00 -3.00758823e-01  5.27560024e+00  4.37212681e+01
  3.18041349e+02  3.20847974e+03]
E1 = -19.048252044883196  E_coul = 4.4994841854110055
cycle= 3 E= -14.5487678594722  delta_E= -1.05e-07  |g|= 1.11e-05  |ddm|= 0.000545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12635e-05
diis-c [-6.64576173e-11  6.81410510e-04 -1.14414190e-02  1.01076001e+00]
  HOMO = -0.300757994770949  LUMO = 5.27561161926328
  mo_energy =
[-4.72388377e+00 -3.00757995e-01  5.27561162e+00  4.37213112e+01
  3.18041422e+02  3.20847983e+03]
E1 = -19.048253805909486  E_coul = 4.499485946431364
cycle= 4 E= -14.5487678594781  delta_E= -5.93e-12  |g|= 4.83e-07  |ddm|= 3.48e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048253805909486  E_coul = 4.499485946431364
  HOMO = -0.300757960724345  LUMO = 5.27561203611659
  mo_energy =
[-4.72388300e+00 -3.00757961e-01  5.27561204e+00  4.37213127e+01
  3.18041424e+02  3.20847983e+03]
E1 = -19.048253881907108  E_coul = 4.499486022428974
Extra cycle  E= -14.5487678594781  delta_E= -1.07e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.986365912524526
E1 = -19.048253881907108  E_coul = 4.499486022428974
init E= -14.5487678594781
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757958899484  LUMO = 5.27561205536263
  mo_energy =
[-4.72388296e+00 -3.00757959e-01  5.27561206e+00  4.37213127e+01
  3.18041424e+02  3.20847983e+03]
E1 = -19.048253885665204  E_coul = 4.499486026187084
cycle= 1 E= -14.5487678594781  delta_E= 1.24e-14  |g|= 1.43e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048253885665204  E_coul = 4.499486026187084
  HOMO = -0.300757958797693  LUMO = 5.27561205628294
  mo_energy =
[-4.72388296e+00 -3.00757959e-01  5.27561206e+00  4.37213127e+01
  3.18041424e+02  3.20847983e+03]
E1 = -19.048253885858077  E_coul = 4.499486026379945
Extra cycle  E= -14.5487678594781  delta_E= -1.24e-14  |g|= 8.22e-11  |ddm|= 6.25e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126482e+03 1.91756003e+02 2.99124279e+01 6.54502071e+00
 1.67965708e+00 1.04485103e-01]
grad_E = [ 7.37264773e-07  6.97867898e-05  2.73066696e-05  7.74888442e-07
  7.96159361e-06 -5.13955208e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26483106        1
[INPUT] 0    0    [1    /1   ]  191.757172354        1
[INPUT] 0    0    [1    /1   ]  29.909137041         1
[INPUT] 0    0    [1    /1   ]  6.5445024519         1
[INPUT] 0    0    [1    /1   ]  1.67959165917        1
[INPUT] 0    0    [1    /1   ]  0.104485125501       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.264831063528, 1.0]], [0, [191.75717235435727, 1.0]], [0, [29.90913704103082, 1.0]], [0, [6.544502451895307, 1.0]], [0, [1.6795916591722306, 1.0]], [0, [0.10448512550107189, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26483106]
bas 1, expnt(s) = [191.75717235]
bas 2, expnt(s) = [29.90913704]
bas 3, expnt(s) = [6.54450245]
bas 4, expnt(s) = [1.67959166]
bas 5, expnt(s) = [0.10448513]
CPU time:        53.90
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126483e+03 7.33171288e+02 1.91757172e+02 1.30190333e+02
 2.99091370e+01 3.23123048e+01 6.54450245e+00 1.03376661e+01
 1.67959166e+00 3.72750132e+00 1.04485126e-01 4.64307689e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866323202688063
cond(S) = 20.987028200392608
E1 = -19.045820756025062  E_coul = 4.519271447474216
init E= -14.5265493085508
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301764135560099  LUMO = 5.27699569445317
  mo_energy =
[-4.71280057e+00 -3.01764136e-01  5.27699569e+00  4.37304364e+01
  3.18052002e+02  3.20849935e+03]
E1 = -19.050175239336976  E_coul = 4.5014299767371995
cycle= 1 E= -14.5487452625998  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147578
diis-c [-2.17793284e-04  1.00000000e+00]
  HOMO = -0.3006782627652  LUMO = 5.27557033062201
  mo_energy =
[-4.72298992e+00 -3.00678263e-01  5.27557033e+00  4.37174089e+01
  3.18031279e+02  3.20847324e+03]
E1 = -19.048352076687067  E_coul = 4.499584315070563
cycle= 2 E= -14.5487677616165  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00794
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128007
diis-c [-4.91164432e-07 -7.83593199e-02  1.07835932e+00]
  HOMO = -0.300758817194344  LUMO = 5.27517319672477
  mo_energy =
[-4.72390533e+00 -3.00758817e-01  5.27517320e+00  4.37165248e+01
  3.18030262e+02  3.20847214e+03]
E1 = -19.048249396053443  E_coul = 4.499481528966553
cycle= 3 E= -14.5487678670869  delta_E= -1.05e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12752e-05
diis-c [-6.64722007e-11  6.81204749e-04 -1.14551265e-02  1.01077392e+00]
  HOMO = -0.300757989887584  LUMO = 5.27518456868129
  mo_energy =
[-4.72388510e+00 -3.00757990e-01  5.27518457e+00  4.37165679e+01
  3.18030335e+02  3.20847223e+03]
E1 = -19.04825115577261  E_coul = 4.499483288679794
cycle= 4 E= -14.5487678670928  delta_E= -5.93e-12  |g|= 4.83e-07  |ddm|= 3.48e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04825115577261  E_coul = 4.499483288679794
  HOMO = -0.30075795582481  LUMO = 5.27518498565301
  mo_energy =
[-4.72388433e+00 -3.00757956e-01  5.27518499e+00  4.37165693e+01
  3.18030337e+02  3.20847223e+03]
E1 = -19.048251231802897  E_coul = 4.499483364710066
Extra cycle  E= -14.5487678670928  delta_E= -1.42e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126483e+03 1.91757172e+02 2.99091370e+01 6.54450245e+00
 1.67959166e+00 1.04485126e-01]
E = -14.548767867092831
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26483106        1
[INPUT] 0    0    [1    /1   ]  191.757172354        1
[INPUT] 0    0    [1    /1   ]  29.909137041         1
[INPUT] 0    0    [1    /1   ]  6.5445024519         1
[INPUT] 0    0    [1    /1   ]  1.67959165917        1
[INPUT] 0    0    [1    /1   ]  0.104485125501       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.264831063528, 1.0]], [0, [191.75717235435727, 1.0]], [0, [29.90913704103082, 1.0]], [0, [6.544502451895307, 1.0]], [0, [1.6795916591722306, 1.0]], [0, [0.10448512550107189, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26483106]
bas 1, expnt(s) = [191.75717235]
bas 2, expnt(s) = [29.90913704]
bas 3, expnt(s) = [6.54450245]
bas 4, expnt(s) = [1.67959166]
bas 5, expnt(s) = [0.10448513]
CPU time:        54.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126483e+03 7.33171288e+02 1.91757172e+02 1.30190333e+02
 2.99091370e+01 3.23123048e+01 6.54450245e+00 1.03376661e+01
 1.67959166e+00 3.72750132e+00 1.04485126e-01 4.64307689e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866323202688063
cond(S) = 20.987028200392608
E1 = -19.045820756025062  E_coul = 4.519271447474216
init E= -14.5265493085508
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301764135560099  LUMO = 5.27699569445317
  mo_energy =
[-4.71280057e+00 -3.01764136e-01  5.27699569e+00  4.37304364e+01
  3.18052002e+02  3.20849935e+03]
E1 = -19.050175239336976  E_coul = 4.5014299767371995
cycle= 1 E= -14.5487452625998  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147578
diis-c [-2.17793284e-04  1.00000000e+00]
  HOMO = -0.3006782627652  LUMO = 5.27557033062201
  mo_energy =
[-4.72298992e+00 -3.00678263e-01  5.27557033e+00  4.37174089e+01
  3.18031279e+02  3.20847324e+03]
E1 = -19.048352076687067  E_coul = 4.499584315070563
cycle= 2 E= -14.5487677616165  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00794
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128007
diis-c [-4.91164432e-07 -7.83593199e-02  1.07835932e+00]
  HOMO = -0.300758817194344  LUMO = 5.27517319672477
  mo_energy =
[-4.72390533e+00 -3.00758817e-01  5.27517320e+00  4.37165248e+01
  3.18030262e+02  3.20847214e+03]
E1 = -19.048249396053443  E_coul = 4.499481528966553
cycle= 3 E= -14.5487678670869  delta_E= -1.05e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12752e-05
diis-c [-6.64722007e-11  6.81204749e-04 -1.14551265e-02  1.01077392e+00]
  HOMO = -0.300757989887584  LUMO = 5.27518456868129
  mo_energy =
[-4.72388510e+00 -3.00757990e-01  5.27518457e+00  4.37165679e+01
  3.18030335e+02  3.20847223e+03]
E1 = -19.04825115577261  E_coul = 4.499483288679794
cycle= 4 E= -14.5487678670928  delta_E= -5.93e-12  |g|= 4.83e-07  |ddm|= 3.48e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04825115577261  E_coul = 4.499483288679794
  HOMO = -0.30075795582481  LUMO = 5.27518498565301
  mo_energy =
[-4.72388433e+00 -3.00757956e-01  5.27518499e+00  4.37165693e+01
  3.18030337e+02  3.20847223e+03]
E1 = -19.048251231802897  E_coul = 4.499483364710066
Extra cycle  E= -14.5487678670928  delta_E= -1.42e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.987028200392608
E1 = -19.048251231802897  E_coul = 4.499483364710066
init E= -14.5487678670928
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757953998938  LUMO = 5.27518500490584
  mo_energy =
[-4.72388430e+00 -3.00757954e-01  5.27518500e+00  4.37165694e+01
  3.18030337e+02  3.20847223e+03]
E1 = -19.048251235562947  E_coul = 4.499483368470107
cycle= 1 E= -14.5487678670928  delta_E= -8.88e-15  |g|= 1.43e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048251235562947  E_coul = 4.499483368470107
  HOMO = -0.300757953897081  LUMO = 5.27518500582658
  mo_energy =
[-4.72388430e+00 -3.00757954e-01  5.27518501e+00  4.37165694e+01
  3.18030337e+02  3.20847223e+03]
E1 = -19.048251235755902  E_coul = 4.499483368663071
Extra cycle  E= -14.5487678670928  delta_E= 8.88e-15  |g|= 8.23e-11  |ddm|= 6.26e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126483e+03 1.91757172e+02 2.99091370e+01 6.54450245e+00
 1.67959166e+00 1.04485126e-01]
grad_E = [ 7.36712184e-07  6.98721624e-05  2.62688162e-05  1.50846497e-06
  8.45327039e-06 -5.68629353e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26484195        1
[INPUT] 0    0    [1    /1   ]  191.759203354        1
[INPUT] 0    0    [1    /1   ]  29.9027156803        1
[INPUT] 0    0    [1    /1   ]  6.54352925467        1
[INPUT] 0    0    [1    /1   ]  1.67946811423        1
[INPUT] 0    0    [1    /1   ]  0.104485201896       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.264841954532, 1.0]], [0, [191.75920335375395, 1.0]], [0, [29.902715680328722, 1.0]], [0, [6.543529254672086, 1.0]], [0, [1.6794681142267889, 1.0]], [0, [0.10448520189561218, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26484195]
bas 1, expnt(s) = [191.75920335]
bas 2, expnt(s) = [29.90271568]
bas 3, expnt(s) = [6.54352925]
bas 4, expnt(s) = [1.67946811]
bas 5, expnt(s) = [0.1044852]
CPU time:        56.50
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126484e+03 7.33171291e+02 1.91759203e+02 1.30191367e+02
 2.99027157e+01 3.23071016e+01 6.54352925e+00 1.03365131e+01
 1.67946811e+00 3.72729568e+00 1.04485202e-01 4.64307944e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866326575815405
cond(S) = 20.988387183962153
E1 = -19.045823613399683  E_coul = 4.519274772589244
init E= -14.5265488408104
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176357454371  LUMO = 5.27619554060314
  mo_energy =
[-4.71279944e+00 -3.01763575e-01  5.27619554e+00  4.37213135e+01
  3.18030226e+02  3.20848384e+03]
E1 = -19.050170798773113  E_coul = 4.501425518759783
cycle= 1 E= -14.5487452800133  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147608
diis-c [-2.17880689e-04  1.00000000e+00]
  HOMO = -0.300678204319838  LUMO = 5.27476805626656
  mo_energy =
[-4.72299222e+00 -3.00678204e-01  5.27476806e+00  4.37082820e+01
  3.18009496e+02  3.20845772e+03]
E1 = -19.048347071784516  E_coul = 4.499579286883018
cycle= 2 E= -14.5487677849015  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00794
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128023
diis-c [-4.91825485e-07 -7.83336969e-02  1.07833370e+00]
  HOMO = -0.300758781116499  LUMO = 5.27437080031883
  mo_energy =
[-4.72390789e+00 -3.00758781e-01  5.27437080e+00  4.37073975e+01
  3.18008478e+02  3.20845662e+03]
E1 = -19.04824434338783  E_coul = 4.499476452968284
cycle= 3 E= -14.5487678904195  delta_E= -1.06e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12985e-05
diis-c [-6.65040241e-11  6.80690337e-04 -1.14815456e-02  1.01080086e+00]
  HOMO = -0.300757956095429  LUMO = 5.2743821610149
  mo_energy =
[-4.72388769e+00 -3.00757956e-01  5.27438216e+00  4.37074406e+01
  3.18008551e+02  3.20845671e+03]
E1 = -19.048246100455064  E_coul = 4.499478210029607
cycle= 4 E= -14.5487678904255  delta_E= -5.91e-12  |g|= 4.83e-07  |ddm|= 3.47e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048246100455064  E_coul = 4.499478210029607
  HOMO = -0.300757921999203  LUMO = 5.27438257824087
  mo_energy =
[-4.72388692e+00 -3.00757922e-01  5.27438258e+00  4.37074420e+01
  3.18008553e+02  3.20845671e+03]
E1 = -19.048246176552755  E_coul = 4.499478286127285
Extra cycle  E= -14.5487678904255  delta_E= -1.42e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126484e+03 1.91759203e+02 2.99027157e+01 6.54352925e+00
 1.67946811e+00 1.04485202e-01]
E = -14.54876789042547
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26484195        1
[INPUT] 0    0    [1    /1   ]  191.759203354        1
[INPUT] 0    0    [1    /1   ]  29.9027156803        1
[INPUT] 0    0    [1    /1   ]  6.54352925467        1
[INPUT] 0    0    [1    /1   ]  1.67946811423        1
[INPUT] 0    0    [1    /1   ]  0.104485201896       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.264841954532, 1.0]], [0, [191.75920335375395, 1.0]], [0, [29.902715680328722, 1.0]], [0, [6.543529254672086, 1.0]], [0, [1.6794681142267889, 1.0]], [0, [0.10448520189561218, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26484195]
bas 1, expnt(s) = [191.75920335]
bas 2, expnt(s) = [29.90271568]
bas 3, expnt(s) = [6.54352925]
bas 4, expnt(s) = [1.67946811]
bas 5, expnt(s) = [0.1044852]
CPU time:        56.96
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126484e+03 7.33171291e+02 1.91759203e+02 1.30191367e+02
 2.99027157e+01 3.23071016e+01 6.54352925e+00 1.03365131e+01
 1.67946811e+00 3.72729568e+00 1.04485202e-01 4.64307944e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866326575815405
cond(S) = 20.988387183962153
E1 = -19.045823613399683  E_coul = 4.519274772589244
init E= -14.5265488408104
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176357454371  LUMO = 5.27619554060314
  mo_energy =
[-4.71279944e+00 -3.01763575e-01  5.27619554e+00  4.37213135e+01
  3.18030226e+02  3.20848384e+03]
E1 = -19.050170798773113  E_coul = 4.501425518759783
cycle= 1 E= -14.5487452800133  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.156
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147608
diis-c [-2.17880689e-04  1.00000000e+00]
  HOMO = -0.300678204319838  LUMO = 5.27476805626656
  mo_energy =
[-4.72299222e+00 -3.00678204e-01  5.27476806e+00  4.37082820e+01
  3.18009496e+02  3.20845772e+03]
E1 = -19.048347071784516  E_coul = 4.499579286883018
cycle= 2 E= -14.5487677849015  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00794
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128023
diis-c [-4.91825485e-07 -7.83336969e-02  1.07833370e+00]
  HOMO = -0.300758781116499  LUMO = 5.27437080031883
  mo_energy =
[-4.72390789e+00 -3.00758781e-01  5.27437080e+00  4.37073975e+01
  3.18008478e+02  3.20845662e+03]
E1 = -19.04824434338783  E_coul = 4.499476452968284
cycle= 3 E= -14.5487678904195  delta_E= -1.06e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.12985e-05
diis-c [-6.65040241e-11  6.80690337e-04 -1.14815456e-02  1.01080086e+00]
  HOMO = -0.300757956095429  LUMO = 5.2743821610149
  mo_energy =
[-4.72388769e+00 -3.00757956e-01  5.27438216e+00  4.37074406e+01
  3.18008551e+02  3.20845671e+03]
E1 = -19.048246100455064  E_coul = 4.499478210029607
cycle= 4 E= -14.5487678904255  delta_E= -5.91e-12  |g|= 4.83e-07  |ddm|= 3.47e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048246100455064  E_coul = 4.499478210029607
  HOMO = -0.300757921999203  LUMO = 5.27438257824087
  mo_energy =
[-4.72388692e+00 -3.00757922e-01  5.27438258e+00  4.37074420e+01
  3.18008553e+02  3.20845671e+03]
E1 = -19.048246176552755  E_coul = 4.499478286127285
Extra cycle  E= -14.5487678904255  delta_E= -1.42e-14  |g|= 2.62e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.988387183962153
E1 = -19.048246176552755  E_coul = 4.499478286127285
init E= -14.5487678904255
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757920171278  LUMO = 5.27438259750805
  mo_energy =
[-4.72388688e+00 -3.00757920e-01  5.27438260e+00  4.37074421e+01
  3.18008554e+02  3.20845671e+03]
E1 = -19.0482461803167  E_coul = 4.499478289891237
cycle= 1 E= -14.5487678904255  delta_E= 7.11e-15  |g|= 1.43e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.0482461803167  E_coul = 4.499478289891237
  HOMO = -0.300757920069289  LUMO = 5.2743825984296
  mo_energy =
[-4.72388688e+00 -3.00757920e-01  5.27438260e+00  4.37074421e+01
  3.18008554e+02  3.20845671e+03]
E1 = -19.04824618050991  E_coul = 4.499478290084446
Extra cycle  E= -14.5487678904255  delta_E=    0  |g|= 8.24e-11  |ddm|= 6.27e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126484e+03 1.91759203e+02 2.99027157e+01 6.54352925e+00
 1.67946811e+00 1.04485202e-01]
grad_E = [ 7.35628657e-07  7.00413416e-05  2.41150879e-05  4.01246719e-06
  7.21885439e-06 -5.26691570e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26485186        1
[INPUT] 0    0    [1    /1   ]  191.761577717        1
[INPUT] 0    0    [1    /1   ]  29.8932780971        1
[INPUT] 0    0    [1    /1   ]  6.54210597906        1
[INPUT] 0    0    [1    /1   ]  1.67928739333        1
[INPUT] 0    0    [1    /1   ]  0.104485317923       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.264851858316, 1.0]], [0, [191.76157771715785, 1.0]], [0, [29.89327809712438, 1.0]], [0, [6.542105979062724, 1.0]], [0, [1.679287393330335, 1.0]], [0, [0.10448531792297076, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26485186]
bas 1, expnt(s) = [191.76157772]
bas 2, expnt(s) = [29.8932781]
bas 3, expnt(s) = [6.54210598]
bas 4, expnt(s) = [1.67928739]
bas 5, expnt(s) = [0.10448532]
CPU time:        59.15
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126485e+03 7.33171294e+02 1.91761578e+02 1.30192576e+02
 2.98932781e+01 3.22994540e+01 6.54210598e+00 1.03348269e+01
 1.67928739e+00 3.72699487e+00 1.04485318e-01 4.64308330e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866331511733937
cond(S) = 20.99042172887576
E1 = -19.04582782946419  E_coul = 4.519279669602068
init E= -14.5265481598621
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176275043144  LUMO = 5.27502538190444
  mo_energy =
[-4.71279779e+00 -3.01762750e-01  5.27502538e+00  4.37079292e+01
  3.17997533e+02  3.20845911e+03]
E1 = -19.050164329335594  E_coul = 4.501419002391751
cycle= 1 E= -14.5487453269438  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147651
diis-c [-2.18009033e-04  1.00000000e+00]
  HOMO = -0.30067811583705  LUMO = 5.27359478122272
  mo_energy =
[-4.72299560e+00 -3.00678116e-01  5.27359478e+00  4.36948917e+01
  3.17976793e+02  3.20843298e+03]
E1 = -19.04833977342384  E_coul = 4.4995719330273785
cycle= 2 E= -14.5487678403965  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00795
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128047
diis-c [-4.92796857e-07 -7.82959287e-02  1.07829593e+00]
  HOMO = -0.300758725349143  LUMO = 5.27319734556583
  mo_energy =
[-4.72391165e+00 -3.00758725e-01  5.27319735e+00  4.36940068e+01
  3.17975775e+02  3.20843188e+03]
E1 = -19.048236974940938  E_coul = 4.4994690289568835
cycle= 3 E= -14.5487679459841  delta_E= -1.06e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1333e-05
diis-c [-6.65513252e-11  6.79922529e-04 -1.15202792e-02  1.01084036e+00]
  HOMO = -0.300757903694666  LUMO = 5.27320868967872
  mo_energy =
[-4.72389148e+00 -3.00757904e-01  5.27320869e+00  4.36940498e+01
  3.17975848e+02  3.20843197e+03]
E1 = -19.048238728099825  E_coul = 4.499470782109865
cycle= 4 E= -14.54876794599  delta_E= -5.91e-12  |g|= 4.84e-07  |ddm|= 3.45e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048238728099825  E_coul = 4.499470782109865
  HOMO = -0.300757869549115  LUMO = 5.27320910728061
  mo_energy =
[-4.72389071e+00 -3.00757870e-01  5.27320911e+00  4.36940513e+01
  3.17975850e+02  3.20843197e+03]
E1 = -19.048238804296943  E_coul = 4.499470858306972
Extra cycle  E= -14.54876794599  delta_E= -1.24e-14  |g|= 2.63e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126485e+03 1.91761578e+02 2.98932781e+01 6.54210598e+00
 1.67928739e+00 1.04485318e-01]
E = -14.548767945989972
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26485186        1
[INPUT] 0    0    [1    /1   ]  191.761577717        1
[INPUT] 0    0    [1    /1   ]  29.8932780971        1
[INPUT] 0    0    [1    /1   ]  6.54210597906        1
[INPUT] 0    0    [1    /1   ]  1.67928739333        1
[INPUT] 0    0    [1    /1   ]  0.104485317923       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.264851858316, 1.0]], [0, [191.76157771715785, 1.0]], [0, [29.89327809712438, 1.0]], [0, [6.542105979062724, 1.0]], [0, [1.679287393330335, 1.0]], [0, [0.10448531792297076, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26485186]
bas 1, expnt(s) = [191.76157772]
bas 2, expnt(s) = [29.8932781]
bas 3, expnt(s) = [6.54210598]
bas 4, expnt(s) = [1.67928739]
bas 5, expnt(s) = [0.10448532]
CPU time:        59.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126485e+03 7.33171294e+02 1.91761578e+02 1.30192576e+02
 2.98932781e+01 3.22994540e+01 6.54210598e+00 1.03348269e+01
 1.67928739e+00 3.72699487e+00 1.04485318e-01 4.64308330e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866331511733937
cond(S) = 20.99042172887576
E1 = -19.04582782946419  E_coul = 4.519279669602068
init E= -14.5265481598621
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176275043144  LUMO = 5.27502538190444
  mo_energy =
[-4.71279779e+00 -3.01762750e-01  5.27502538e+00  4.37079292e+01
  3.17997533e+02  3.20845911e+03]
E1 = -19.050164329335594  E_coul = 4.501419002391751
cycle= 1 E= -14.5487453269438  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147651
diis-c [-2.18009033e-04  1.00000000e+00]
  HOMO = -0.30067811583705  LUMO = 5.27359478122272
  mo_energy =
[-4.72299560e+00 -3.00678116e-01  5.27359478e+00  4.36948917e+01
  3.17976793e+02  3.20843298e+03]
E1 = -19.04833977342384  E_coul = 4.4995719330273785
cycle= 2 E= -14.5487678403965  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00795
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128047
diis-c [-4.92796857e-07 -7.82959287e-02  1.07829593e+00]
  HOMO = -0.300758725349143  LUMO = 5.27319734556583
  mo_energy =
[-4.72391165e+00 -3.00758725e-01  5.27319735e+00  4.36940068e+01
  3.17975775e+02  3.20843188e+03]
E1 = -19.048236974940938  E_coul = 4.4994690289568835
cycle= 3 E= -14.5487679459841  delta_E= -1.06e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1333e-05
diis-c [-6.65513252e-11  6.79922529e-04 -1.15202792e-02  1.01084036e+00]
  HOMO = -0.300757903694666  LUMO = 5.27320868967872
  mo_energy =
[-4.72389148e+00 -3.00757904e-01  5.27320869e+00  4.36940498e+01
  3.17975848e+02  3.20843197e+03]
E1 = -19.048238728099825  E_coul = 4.499470782109865
cycle= 4 E= -14.54876794599  delta_E= -5.91e-12  |g|= 4.84e-07  |ddm|= 3.45e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048238728099825  E_coul = 4.499470782109865
  HOMO = -0.300757869549115  LUMO = 5.27320910728061
  mo_energy =
[-4.72389071e+00 -3.00757870e-01  5.27320911e+00  4.36940513e+01
  3.17975850e+02  3.20843197e+03]
E1 = -19.048238804296943  E_coul = 4.499470858306972
Extra cycle  E= -14.54876794599  delta_E= -1.24e-14  |g|= 2.63e-08  |ddm|= 1.92e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.99042172887576
E1 = -19.048238804296943  E_coul = 4.499470858306972
init E= -14.54876794599
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757867718167  LUMO = 5.27320912656899
  mo_energy =
[-4.72389068e+00 -3.00757868e-01  5.27320913e+00  4.36940513e+01
  3.17975850e+02  3.20843197e+03]
E1 = -19.048238808066674  E_coul = 4.499470862076702
cycle= 1 E= -14.54876794599  delta_E=    0  |g|= 1.43e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048238808066674  E_coul = 4.499470862076702
  HOMO = -0.30075786761598  LUMO = 5.2732091274917
  mo_energy =
[-4.72389067e+00 -3.00757868e-01  5.27320913e+00  4.36940514e+01
  3.17975850e+02  3.20843197e+03]
E1 = -19.048238808260248  E_coul = 4.4994708622702655
Extra cycle  E= -14.54876794599  delta_E= -1.07e-14  |g|= 8.26e-11  |ddm|= 6.28e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126485e+03 1.91761578e+02 2.98932781e+01 6.54210598e+00
 1.67928739e+00 1.04485318e-01]
grad_E = [ 7.34062231e-07  7.02889092e-05  2.09432878e-05  7.83094309e-06
  5.12868825e-06 -4.46852420e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26485238        1
[INPUT] 0    0    [1    /1   ]  191.763978262        1
[INPUT] 0    0    [1    /1   ]  29.8772618077        1
[INPUT] 0    0    [1    /1   ]  6.53969490103        1
[INPUT] 0    0    [1    /1   ]  1.67898118421        1
[INPUT] 0    0    [1    /1   ]  0.104485515071       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2648523826883, 1.0]], [0, [191.76397826200426, 1.0]], [0, [29.87726180771609, 1.0]], [0, [6.5396949010286995, 1.0]], [0, [1.678981184213477, 1.0]], [0, [0.10448551507133165, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26485238]
bas 1, expnt(s) = [191.76397826]
bas 2, expnt(s) = [29.87726181]
bas 3, expnt(s) = [6.5396949]
bas 4, expnt(s) = [1.67898118]
bas 5, expnt(s) = [0.10448552]
CPU time:        61.77
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126485e+03 7.33171294e+02 1.91763978e+02 1.30193798e+02
 2.98772618e+01 3.22864740e+01 6.53969490e+00 1.03319701e+01
 1.67898118e+00 3.72648516e+00 1.04485515e-01 4.64308987e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986633987459278
cond(S) = 20.99394990984776
E1 = -19.04583502018412  E_coul = 4.519287980489089
init E= -14.526547039695
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176135416515  LUMO = 5.27304273511336
  mo_energy =
[-4.71279501e+00 -3.01761354e-01  5.27304274e+00  4.36852288e+01
  3.17940162e+02  3.20841195e+03]
E1 = -19.05015344553855  E_coul = 4.5014079821607025
cycle= 1 E= -14.5487454633778  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147725
diis-c [-2.1822643e-04  1.0000000e+00]
  HOMO = -0.300677966063965  LUMO = 5.27160685986244
  mo_energy =
[-4.72300133e+00 -3.00677966e-01  5.27160686e+00  4.36721814e+01
  3.17919404e+02  3.20838578e+03]
E1 = -19.0483274842682  E_coul = 4.499559492918705
cycle= 2 E= -14.5487679913495  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00795
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128088
diis-c [-4.94441663e-07 -7.82321161e-02  1.07823212e+00]
  HOMO = -0.300758631058334  LUMO = 5.27120911955564
  mo_energy =
[-4.72391804e+00 -3.00758631e-01  5.27120912e+00  4.36712956e+01
  3.17918385e+02  3.20838468e+03]
E1 = -19.048224566912257  E_coul = 4.499456469857215
cycle= 3 E= -14.548768097055  delta_E= -1.06e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.13919e-05
diis-c [-6.66319803e-11  6.78629035e-04 -1.15858360e-02  1.01090721e+00]
  HOMO = -0.300757815102024  LUMO = 5.27122043559253
  mo_energy =
[-4.72389793e+00 -3.00757815e-01  5.27122044e+00  4.36713386e+01
  3.17918458e+02  3.20838477e+03]
E1 = -19.04822631345122  E_coul = 4.499458216390318
cycle= 4 E= -14.5487680970609  delta_E= -5.86e-12  |g|= 4.85e-07  |ddm|= 3.42e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04822631345122  E_coul = 4.499458216390318
  HOMO = -0.300757780872998  LUMO = 5.27122085383039
  mo_energy =
[-4.72389716e+00 -3.00757781e-01  5.27122085e+00  4.36713401e+01
  3.17918460e+02  3.20838477e+03]
E1 = -19.048226389816737  E_coul = 4.499458292755813
Extra cycle  E= -14.5487680970609  delta_E= -2.13e-14  |g|= 2.63e-08  |ddm|= 1.93e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126485e+03 1.91763978e+02 2.98772618e+01 6.53969490e+00
 1.67898118e+00 1.04485515e-01]
E = -14.548768097060924
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26485238        1
[INPUT] 0    0    [1    /1   ]  191.763978262        1
[INPUT] 0    0    [1    /1   ]  29.8772618077        1
[INPUT] 0    0    [1    /1   ]  6.53969490103        1
[INPUT] 0    0    [1    /1   ]  1.67898118421        1
[INPUT] 0    0    [1    /1   ]  0.104485515071       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2648523826883, 1.0]], [0, [191.76397826200426, 1.0]], [0, [29.87726180771609, 1.0]], [0, [6.5396949010286995, 1.0]], [0, [1.678981184213477, 1.0]], [0, [0.10448551507133165, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26485238]
bas 1, expnt(s) = [191.76397826]
bas 2, expnt(s) = [29.87726181]
bas 3, expnt(s) = [6.5396949]
bas 4, expnt(s) = [1.67898118]
bas 5, expnt(s) = [0.10448552]
CPU time:        62.26
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126485e+03 7.33171294e+02 1.91763978e+02 1.30193798e+02
 2.98772618e+01 3.22864740e+01 6.53969490e+00 1.03319701e+01
 1.67898118e+00 3.72648516e+00 1.04485515e-01 4.64308987e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986633987459278
cond(S) = 20.99394990984776
E1 = -19.04583502018412  E_coul = 4.519287980489089
init E= -14.526547039695
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30176135416515  LUMO = 5.27304273511336
  mo_energy =
[-4.71279501e+00 -3.01761354e-01  5.27304274e+00  4.36852288e+01
  3.17940162e+02  3.20841195e+03]
E1 = -19.05015344553855  E_coul = 4.5014079821607025
cycle= 1 E= -14.5487454633778  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147725
diis-c [-2.1822643e-04  1.0000000e+00]
  HOMO = -0.300677966063965  LUMO = 5.27160685986244
  mo_energy =
[-4.72300133e+00 -3.00677966e-01  5.27160686e+00  4.36721814e+01
  3.17919404e+02  3.20838578e+03]
E1 = -19.0483274842682  E_coul = 4.499559492918705
cycle= 2 E= -14.5487679913495  delta_E= -2.25e-05  |g|= 0.0011  |ddm|= 0.00795
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128088
diis-c [-4.94441663e-07 -7.82321161e-02  1.07823212e+00]
  HOMO = -0.300758631058334  LUMO = 5.27120911955564
  mo_energy =
[-4.72391804e+00 -3.00758631e-01  5.27120912e+00  4.36712956e+01
  3.17918385e+02  3.20838468e+03]
E1 = -19.048224566912257  E_coul = 4.499456469857215
cycle= 3 E= -14.548768097055  delta_E= -1.06e-07  |g|= 1.11e-05  |ddm|= 0.000546
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.13919e-05
diis-c [-6.66319803e-11  6.78629035e-04 -1.15858360e-02  1.01090721e+00]
  HOMO = -0.300757815102024  LUMO = 5.27122043559253
  mo_energy =
[-4.72389793e+00 -3.00757815e-01  5.27122044e+00  4.36713386e+01
  3.17918458e+02  3.20838477e+03]
E1 = -19.04822631345122  E_coul = 4.499458216390318
cycle= 4 E= -14.5487680970609  delta_E= -5.86e-12  |g|= 4.85e-07  |ddm|= 3.42e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04822631345122  E_coul = 4.499458216390318
  HOMO = -0.300757780872998  LUMO = 5.27122085383039
  mo_energy =
[-4.72389716e+00 -3.00757781e-01  5.27122085e+00  4.36713401e+01
  3.17918460e+02  3.20838477e+03]
E1 = -19.048226389816737  E_coul = 4.499458292755813
Extra cycle  E= -14.5487680970609  delta_E= -2.13e-14  |g|= 2.63e-08  |ddm|= 1.93e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.99394990984776
E1 = -19.048226389816737  E_coul = 4.499458292755813
init E= -14.5487680970609
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757779036932  LUMO = 5.27122087315452
  mo_energy =
[-4.72389712e+00 -3.00757779e-01  5.27122087e+00  4.36713401e+01
  3.17918460e+02  3.20838477e+03]
E1 = -19.048226393596316  E_coul = 4.499458296535384
cycle= 1 E= -14.5487680970609  delta_E= -8.88e-15  |g|= 1.44e-09  |ddm|= 1.08e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048226393596316  E_coul = 4.499458296535384
  HOMO = -0.300757778934409  LUMO = 5.27122087407937
  mo_energy =
[-4.72389712e+00 -3.00757779e-01  5.27122087e+00  4.36713401e+01
  3.17918460e+02  3.20838477e+03]
E1 = -19.04822639379044  E_coul = 4.499458296729504
Extra cycle  E= -14.5487680970609  delta_E= -3.55e-15  |g|= 8.28e-11  |ddm|= 6.3e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126485e+03 1.91763978e+02 2.98772618e+01 6.53969490e+00
 1.67898118e+00 1.04485515e-01]
grad_E = [ 7.31479695e-07  7.07049781e-05  1.55931725e-05  1.42912558e-05
  1.56928800e-06 -3.10204746e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26481131        1
[INPUT] 0    0    [1    /1   ]  191.763663041        1
[INPUT] 0    0    [1    /1   ]  29.8513870105        1
[INPUT] 0    0    [1    /1   ]  6.53580843809        1
[INPUT] 0    0    [1    /1   ]  1.67848738924        1
[INPUT] 0    0    [1    /1   ]  0.104485833259       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2648113113753, 1.0]], [0, [191.76366304135482, 1.0]], [0, [29.851387010545142, 1.0]], [0, [6.535808438087542, 1.0]], [0, [1.6784873892370236, 1.0]], [0, [0.10448583325873864, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26481131]
bas 1, expnt(s) = [191.76366304]
bas 2, expnt(s) = [29.85138701]
bas 3, expnt(s) = [6.53580844]
bas 4, expnt(s) = [1.67848739]
bas 5, expnt(s) = [0.10448583]
CPU time:        64.43
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126481e+03 7.33171282e+02 1.91763663e+02 1.30193638e+02
 2.98513870e+01 3.22655008e+01 6.53580844e+00 1.03273646e+01
 1.67848739e+00 3.72566315e+00 1.04485833e-01 4.64310048e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866353357194746
cond(S) = 20.99983956000577
E1 = -19.045846733237642  E_coul = 4.51930140747377
init E= -14.5265453257639
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301759103916342  LUMO = 5.26984573273564
  mo_energy =
[-4.71279060e+00 -3.01759104e-01  5.26984573e+00  4.36485829e+01
  3.17842603e+02  3.20832234e+03]
E1 = -19.050136095449037  E_coul = 4.501390265393355
cycle= 1 E= -14.5487458300557  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147843
diis-c [-2.18576503e-04  1.00000000e+00]
  HOMO = -0.300677725823689  LUMO = 5.26840137243681
  mo_energy =
[-4.72301062e+00 -3.00677726e-01  5.26840137e+00  4.36355195e+01
  3.17821816e+02  3.20829613e+03]
E1 = -19.048307866845736  E_coul = 4.4995394853763715
cycle= 2 E= -14.5487683814694  delta_E= -2.26e-05  |g|= 0.0011  |ddm|= 0.00796
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128154
diis-c [-4.97088889e-07 -7.81298592e-02  1.07812986e+00]
  HOMO = -0.300758480426909  LUMO = 5.26800314084551
  mo_energy =
[-4.72392838e+00 -3.00758480e-01  5.26800314e+00  4.36346324e+01
  3.17820796e+02  3.20829503e+03]
E1 = -19.048204757545932  E_coul = 4.499436270180488
cycle= 3 E= -14.5487684873654  delta_E= -1.06e-07  |g|= 1.12e-05  |ddm|= 0.000547
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.14879e-05
diis-c [-6.67631701e-11  6.76569330e-04 -1.16912780e-02  1.01101471e+00]
  HOMO = -0.300757673630903  LUMO = 5.2680144117263
  mo_energy =
[-4.72390838e+00 -3.00757674e-01  5.26801441e+00  4.36346753e+01
  3.17820869e+02  3.20829512e+03]
E1 = -19.048206493430797  E_coul = 4.499438006059518
cycle= 4 E= -14.5487684873713  delta_E= -5.84e-12  |g|= 4.86e-07  |ddm|= 3.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048206493430797  E_coul = 4.499438006059518
  HOMO = -0.300757639267682  LUMO = 5.26801483098553
  mo_energy =
[-4.72390760e+00 -3.00757639e-01  5.26801483e+00  4.36346768e+01
  3.17820871e+02  3.20829512e+03]
E1 = -19.048206570067354  E_coul = 4.499438082696059
Extra cycle  E= -14.5487684873713  delta_E= -1.42e-14  |g|= 2.64e-08  |ddm|= 1.94e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126481e+03 1.91763663e+02 2.98513870e+01 6.53580844e+00
 1.67848739e+00 1.04485833e-01]
E = -14.548768487371294
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26481131        1
[INPUT] 0    0    [1    /1   ]  191.763663041        1
[INPUT] 0    0    [1    /1   ]  29.8513870105        1
[INPUT] 0    0    [1    /1   ]  6.53580843809        1
[INPUT] 0    0    [1    /1   ]  1.67848738924        1
[INPUT] 0    0    [1    /1   ]  0.104485833259       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2648113113753, 1.0]], [0, [191.76366304135482, 1.0]], [0, [29.851387010545142, 1.0]], [0, [6.535808438087542, 1.0]], [0, [1.6784873892370236, 1.0]], [0, [0.10448583325873864, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26481131]
bas 1, expnt(s) = [191.76366304]
bas 2, expnt(s) = [29.85138701]
bas 3, expnt(s) = [6.53580844]
bas 4, expnt(s) = [1.67848739]
bas 5, expnt(s) = [0.10448583]
CPU time:        64.95
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126481e+03 7.33171282e+02 1.91763663e+02 1.30193638e+02
 2.98513870e+01 3.22655008e+01 6.53580844e+00 1.03273646e+01
 1.67848739e+00 3.72566315e+00 1.04485833e-01 4.64310048e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866353357194746
cond(S) = 20.99983956000577
E1 = -19.045846733237642  E_coul = 4.51930140747377
init E= -14.5265453257639
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301759103916342  LUMO = 5.26984573273564
  mo_energy =
[-4.71279060e+00 -3.01759104e-01  5.26984573e+00  4.36485829e+01
  3.17842603e+02  3.20832234e+03]
E1 = -19.050136095449037  E_coul = 4.501390265393355
cycle= 1 E= -14.5487458300557  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147843
diis-c [-2.18576503e-04  1.00000000e+00]
  HOMO = -0.300677725823689  LUMO = 5.26840137243681
  mo_energy =
[-4.72301062e+00 -3.00677726e-01  5.26840137e+00  4.36355195e+01
  3.17821816e+02  3.20829613e+03]
E1 = -19.048307866845736  E_coul = 4.4995394853763715
cycle= 2 E= -14.5487683814694  delta_E= -2.26e-05  |g|= 0.0011  |ddm|= 0.00796
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128154
diis-c [-4.97088889e-07 -7.81298592e-02  1.07812986e+00]
  HOMO = -0.300758480426909  LUMO = 5.26800314084551
  mo_energy =
[-4.72392838e+00 -3.00758480e-01  5.26800314e+00  4.36346324e+01
  3.17820796e+02  3.20829503e+03]
E1 = -19.048204757545932  E_coul = 4.499436270180488
cycle= 3 E= -14.5487684873654  delta_E= -1.06e-07  |g|= 1.12e-05  |ddm|= 0.000547
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.14879e-05
diis-c [-6.67631701e-11  6.76569330e-04 -1.16912780e-02  1.01101471e+00]
  HOMO = -0.300757673630903  LUMO = 5.2680144117263
  mo_energy =
[-4.72390838e+00 -3.00757674e-01  5.26801441e+00  4.36346753e+01
  3.17820869e+02  3.20829512e+03]
E1 = -19.048206493430797  E_coul = 4.499438006059518
cycle= 4 E= -14.5487684873713  delta_E= -5.84e-12  |g|= 4.86e-07  |ddm|= 3.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048206493430797  E_coul = 4.499438006059518
  HOMO = -0.300757639267682  LUMO = 5.26801483098553
  mo_energy =
[-4.72390760e+00 -3.00757639e-01  5.26801483e+00  4.36346768e+01
  3.17820871e+02  3.20829512e+03]
E1 = -19.048206570067354  E_coul = 4.499438082696059
Extra cycle  E= -14.5487684873713  delta_E= -1.42e-14  |g|= 2.64e-08  |ddm|= 1.94e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.99983956000577
E1 = -19.048206570067354  E_coul = 4.499438082696059
init E= -14.5487684873713
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757637423377  LUMO = 5.26801485036734
  mo_energy =
[-4.72390756e+00 -3.00757637e-01  5.26801485e+00  4.36346768e+01
  3.17820871e+02  3.20829512e+03]
E1 = -19.048206573862718  E_coul = 4.499438086491419
cycle= 1 E= -14.5487684873713  delta_E= -3.55e-15  |g|= 1.44e-09  |ddm|= 1.08e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048206573862718  E_coul = 4.499438086491419
  HOMO = -0.300757637320321  LUMO = 5.26801485129544
  mo_energy =
[-4.72390756e+00 -3.00757637e-01  5.26801485e+00  4.36346768e+01
  3.17820871e+02  3.20829512e+03]
E1 = -19.04820657405778  E_coul = 4.499438086686485
Extra cycle  E= -14.5487684873713  delta_E= 3.55e-15  |g|= 8.33e-11  |ddm|= 6.34e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126481e+03 1.91763663e+02 2.98513870e+01 6.53580844e+00
 1.67848739e+00 1.04485833e-01]
grad_E = [ 7.27503467e-07  7.13665327e-05  7.04133893e-06  2.46200901e-05
 -4.12407936e-06 -9.16720353e-07]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26463425        1
[INPUT] 0    0    [1    /1   ]  191.752254748        1
[INPUT] 0    0    [1    /1   ]  29.808385752         1
[INPUT] 0    0    [1    /1   ]  6.52937154566        1
[INPUT] 0    0    [1    /1   ]  1.67766897161        1
[INPUT] 0    0    [1    /1   ]  0.104486361243       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2646342498251, 1.0]], [0, [191.7522547475632, 1.0]], [0, [29.80838575200315, 1.0]], [0, [6.529371545662559, 1.0]], [0, [1.6776689716149726, 1.0]], [0, [0.10448636124272995, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26463425]
bas 1, expnt(s) = [191.75225475]
bas 2, expnt(s) = [29.80838575]
bas 3, expnt(s) = [6.52937155]
bas 4, expnt(s) = [1.67766897]
bas 5, expnt(s) = [0.10448636]
CPU time:        67.17
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126463e+03 7.33171232e+02 1.91752255e+02 1.30187829e+02
 2.98083858e+01 3.22306354e+01 6.52937155e+00 1.03197354e+01
 1.67766897e+00 3.72430061e+00 1.04486361e-01 4.64311808e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866375692851244
cond(S) = 21.01012044050428
E1 = -19.045866458168348  E_coul = 4.519323726378625
init E= -14.5265427317897
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.3017553780207  LUMO = 5.26454777190406
  mo_energy =
[-4.71278343e+00 -3.01755378e-01  5.26454777e+00  4.35877506e+01
  3.17667815e+02  3.20813865e+03]
E1 = -19.05010786560835  E_coul = 4.501361046139214
cycle= 1 E= -14.5487468194691  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148039
diis-c [-2.19155237e-04  1.00000000e+00]
  HOMO = -0.300677330994711  LUMO = 5.26308940381975
  mo_energy =
[-4.72302614e+00 -3.00677331e-01  5.26308940e+00  4.35746606e+01
  3.17646983e+02  3.20811237e+03]
E1 = -19.048275876338025  E_coul = 4.499506466526088
cycle= 2 E= -14.5487694098119  delta_E= -2.26e-05  |g|= 0.0011  |ddm|= 0.00797
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128264
diis-c [-5.01461966e-07 -7.79621473e-02  1.07796215e+00]
  HOMO = -0.300758234488289  LUMO = 5.26269035795486
  mo_energy =
[-4.72394564e+00 -3.00758234e-01  5.26269036e+00  4.35737714e+01
  3.17645960e+02  3.20811126e+03]
E1 = -19.048172448237377  E_coul = 4.499402932212587
cycle= 3 E= -14.5487695160248  delta_E= -1.06e-07  |g|= 1.12e-05  |ddm|= 0.000548
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.16498e-05
diis-c [-6.69834616e-11  6.73226917e-04 -1.18652798e-02  1.01119205e+00]
  HOMO = -0.300757442795753  LUMO = 5.26270155432573
  mo_energy =
[-4.72392580e+00 -3.00757443e-01  5.26270155e+00  4.35738141e+01
  3.17646032e+02  3.20811135e+03]
E1 = -19.048174166523204  E_coul = 4.499404650492639
cycle= 4 E= -14.5487695160306  delta_E= -5.77e-12  |g|= 4.89e-07  |ddm|= 3.3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048174166523204  E_coul = 4.499404650492639
  HOMO = -0.30075740821128  LUMO = 5.26270197526613
  mo_energy =
[-4.72392502e+00 -3.00757408e-01  5.26270198e+00  4.35738156e+01
  3.17646035e+02  3.20811135e+03]
E1 = -19.048174243607722  E_coul = 4.499404727577124
Extra cycle  E= -14.5487695160306  delta_E= -3.38e-14  |g|= 2.66e-08  |ddm|= 1.95e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126463e+03 1.91752255e+02 2.98083858e+01 6.52937155e+00
 1.67766897e+00 1.04486361e-01]
E = -14.548769516030598
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26463425        1
[INPUT] 0    0    [1    /1   ]  191.752254748        1
[INPUT] 0    0    [1    /1   ]  29.808385752         1
[INPUT] 0    0    [1    /1   ]  6.52937154566        1
[INPUT] 0    0    [1    /1   ]  1.67766897161        1
[INPUT] 0    0    [1    /1   ]  0.104486361243       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2646342498251, 1.0]], [0, [191.7522547475632, 1.0]], [0, [29.80838575200315, 1.0]], [0, [6.529371545662559, 1.0]], [0, [1.6776689716149726, 1.0]], [0, [0.10448636124272995, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26463425]
bas 1, expnt(s) = [191.75225475]
bas 2, expnt(s) = [29.80838575]
bas 3, expnt(s) = [6.52937155]
bas 4, expnt(s) = [1.67766897]
bas 5, expnt(s) = [0.10448636]
CPU time:        67.70
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126463e+03 7.33171232e+02 1.91752255e+02 1.30187829e+02
 2.98083858e+01 3.22306354e+01 6.52937155e+00 1.03197354e+01
 1.67766897e+00 3.72430061e+00 1.04486361e-01 4.64311808e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866375692851244
cond(S) = 21.01012044050428
E1 = -19.045866458168348  E_coul = 4.519323726378625
init E= -14.5265427317897
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.3017553780207  LUMO = 5.26454777190406
  mo_energy =
[-4.71278343e+00 -3.01755378e-01  5.26454777e+00  4.35877506e+01
  3.17667815e+02  3.20813865e+03]
E1 = -19.05010786560835  E_coul = 4.501361046139214
cycle= 1 E= -14.5487468194691  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148039
diis-c [-2.19155237e-04  1.00000000e+00]
  HOMO = -0.300677330994711  LUMO = 5.26308940381975
  mo_energy =
[-4.72302614e+00 -3.00677331e-01  5.26308940e+00  4.35746606e+01
  3.17646983e+02  3.20811237e+03]
E1 = -19.048275876338025  E_coul = 4.499506466526088
cycle= 2 E= -14.5487694098119  delta_E= -2.26e-05  |g|= 0.0011  |ddm|= 0.00797
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128264
diis-c [-5.01461966e-07 -7.79621473e-02  1.07796215e+00]
  HOMO = -0.300758234488289  LUMO = 5.26269035795486
  mo_energy =
[-4.72394564e+00 -3.00758234e-01  5.26269036e+00  4.35737714e+01
  3.17645960e+02  3.20811126e+03]
E1 = -19.048172448237377  E_coul = 4.499402932212587
cycle= 3 E= -14.5487695160248  delta_E= -1.06e-07  |g|= 1.12e-05  |ddm|= 0.000548
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.16498e-05
diis-c [-6.69834616e-11  6.73226917e-04 -1.18652798e-02  1.01119205e+00]
  HOMO = -0.300757442795753  LUMO = 5.26270155432573
  mo_energy =
[-4.72392580e+00 -3.00757443e-01  5.26270155e+00  4.35738141e+01
  3.17646032e+02  3.20811135e+03]
E1 = -19.048174166523204  E_coul = 4.499404650492639
cycle= 4 E= -14.5487695160306  delta_E= -5.77e-12  |g|= 4.89e-07  |ddm|= 3.3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048174166523204  E_coul = 4.499404650492639
  HOMO = -0.30075740821128  LUMO = 5.26270197526613
  mo_energy =
[-4.72392502e+00 -3.00757408e-01  5.26270198e+00  4.35738156e+01
  3.17646035e+02  3.20811135e+03]
E1 = -19.048174243607722  E_coul = 4.499404727577124
Extra cycle  E= -14.5487695160306  delta_E= -3.38e-14  |g|= 2.66e-08  |ddm|= 1.95e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.01012044050428
E1 = -19.048174243607722  E_coul = 4.499404727577124
init E= -14.5487695160306
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757406353364  LUMO = 5.26270199474308
  mo_energy =
[-4.72392499e+00 -3.00757406e-01  5.26270199e+00  4.35738156e+01
  3.17646035e+02  3.20811135e+03]
E1 = -19.048174247429245  E_coul = 4.499404731398657
cycle= 1 E= -14.5487695160306  delta_E= 1.07e-14  |g|= 1.46e-09  |ddm|= 1.09e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048174247429245  E_coul = 4.499404731398657
  HOMO = -0.300757406249421  LUMO = 5.26270199567666
  mo_energy =
[-4.72392499e+00 -3.00757406e-01  5.26270200e+00  4.35738156e+01
  3.17646035e+02  3.20811135e+03]
E1 = -19.04817424762587  E_coul = 4.499404731595286
Extra cycle  E= -14.5487695160306  delta_E= 3.55e-15  |g|= 8.41e-11  |ddm|= 6.4e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126463e+03 1.91752255e+02 2.98083858e+01 6.52937155e+00
 1.67766897e+00 1.04486361e-01]
grad_E = [ 7.21403251e-07  7.24386188e-05 -6.93443748e-06  4.15013115e-05
 -1.34332471e-05  2.65523267e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26405984        1
[INPUT] 0    0    [1    /1   ]  191.70530935         1
[INPUT] 0    0    [1    /1   ]  29.7366569306        1
[INPUT] 0    0    [1    /1   ]  6.51869004534        1
[INPUT] 0    0    [1    /1   ]  1.676309347          1
[INPUT] 0    0    [1    /1   ]  0.104487239923       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2640598422697, 1.0]], [0, [191.70530935036717, 1.0]], [0, [29.73665693063595, 1.0]], [0, [6.518690045344513, 1.0]], [0, [1.6763093469991281, 1.0]], [0, [0.10448723992307198, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26405984]
bas 1, expnt(s) = [191.70530935]
bas 2, expnt(s) = [29.73665693]
bas 3, expnt(s) = [6.51869005]
bas 4, expnt(s) = [1.67630935]
bas 5, expnt(s) = [0.10448724]
CPU time:        69.95
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126406e+03 7.33171067e+02 1.91705309e+02 1.30163923e+02
 2.97366569e+01 3.21724497e+01 6.51869005e+00 1.03070711e+01
 1.67630935e+00 3.72203668e+00 1.04487240e-01 4.64314736e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866412767560977
cond(S) = 21.028539501896375
E1 = -19.04590005953901  E_coul = 4.519360979372009
init E= -14.526539080167
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301749197599492  LUMO = 5.25574877094709
  mo_energy =
[-4.71277192e+00 -3.01749198e-01  5.25574877e+00  4.34864557e+01
  3.17343806e+02  3.20774303e+03]
E1 = -19.05006233607374  E_coul = 4.501312889886141
cycle= 1 E= -14.5487494461876  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148362
diis-c [-2.20112423e-04  1.00000000e+00]
  HOMO = -0.300676683444736  LUMO = 5.25426727733212
  mo_energy =
[-4.72305221e+00 -3.00676683e-01  5.25426728e+00  4.34733220e+01
  3.17322898e+02  3.20771662e+03]
E1 = -19.048224091104444  E_coul = 4.499451989699156
cycle= 2 E= -14.5487721014053  delta_E= -2.27e-05  |g|= 0.0011  |ddm|= 0.008
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128448
diis-c [-5.08687632e-07 -7.76883123e-02  1.07768831e+00]
  HOMO = -0.30075783530558  LUMO = 5.25386687844112
  mo_energy =
[-4.72397462e+00 -3.00757835e-01  5.25386688e+00  4.34724292e+01
  3.17321870e+02  3.20771551e+03]
E1 = -19.048120131496365  E_coul = 4.499347923349348
cycle= 3 E= -14.548772208147  delta_E= -1.07e-07  |g|= 1.12e-05  |ddm|= 0.00055
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.19259e-05
diis-c [-6.73566110e-11  6.67865403e-04 -1.21522719e-02  1.01148441e+00]
  HOMO = -0.300757068492023  LUMO = 5.25387795192604
  mo_energy =
[-4.72395505e+00 -3.00757068e-01  5.25387795e+00  4.34724716e+01
  3.17321943e+02  3.20771560e+03]
E1 = -19.048121820703223  E_coul = 4.499349612550499
cycle= 4 E= -14.5487722081527  delta_E= -5.71e-12  |g|= 4.93e-07  |ddm|= 3.18e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048121820703223  E_coul = 4.499349612550499
  HOMO = -0.300757033543068  LUMO = 5.25387837562834
  mo_energy =
[-4.72395426e+00 -3.00757034e-01  5.25387838e+00  4.34724731e+01
  3.17321945e+02  3.20771560e+03]
E1 = -19.04812189852842  E_coul = 4.499349690375674
Extra cycle  E= -14.5487722081527  delta_E= -2.49e-14  |g|= 2.68e-08  |ddm|= 1.97e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126406e+03 1.91705309e+02 2.97366569e+01 6.51869005e+00
 1.67630935e+00 1.04487240e-01]
E = -14.548772208152748
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26405984        1
[INPUT] 0    0    [1    /1   ]  191.70530935         1
[INPUT] 0    0    [1    /1   ]  29.7366569306        1
[INPUT] 0    0    [1    /1   ]  6.51869004534        1
[INPUT] 0    0    [1    /1   ]  1.676309347          1
[INPUT] 0    0    [1    /1   ]  0.104487239923       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2640598422697, 1.0]], [0, [191.70530935036717, 1.0]], [0, [29.73665693063595, 1.0]], [0, [6.518690045344513, 1.0]], [0, [1.6763093469991281, 1.0]], [0, [0.10448723992307198, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26405984]
bas 1, expnt(s) = [191.70530935]
bas 2, expnt(s) = [29.73665693]
bas 3, expnt(s) = [6.51869005]
bas 4, expnt(s) = [1.67630935]
bas 5, expnt(s) = [0.10448724]
CPU time:        70.49
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126406e+03 7.33171067e+02 1.91705309e+02 1.30163923e+02
 2.97366569e+01 3.21724497e+01 6.51869005e+00 1.03070711e+01
 1.67630935e+00 3.72203668e+00 1.04487240e-01 4.64314736e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866412767560977
cond(S) = 21.028539501896375
E1 = -19.04590005953901  E_coul = 4.519360979372009
init E= -14.526539080167
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301749197599492  LUMO = 5.25574877094709
  mo_energy =
[-4.71277192e+00 -3.01749198e-01  5.25574877e+00  4.34864557e+01
  3.17343806e+02  3.20774303e+03]
E1 = -19.05006233607374  E_coul = 4.501312889886141
cycle= 1 E= -14.5487494461876  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148362
diis-c [-2.20112423e-04  1.00000000e+00]
  HOMO = -0.300676683444736  LUMO = 5.25426727733212
  mo_energy =
[-4.72305221e+00 -3.00676683e-01  5.25426728e+00  4.34733220e+01
  3.17322898e+02  3.20771662e+03]
E1 = -19.048224091104444  E_coul = 4.499451989699156
cycle= 2 E= -14.5487721014053  delta_E= -2.27e-05  |g|= 0.0011  |ddm|= 0.008
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128448
diis-c [-5.08687632e-07 -7.76883123e-02  1.07768831e+00]
  HOMO = -0.30075783530558  LUMO = 5.25386687844112
  mo_energy =
[-4.72397462e+00 -3.00757835e-01  5.25386688e+00  4.34724292e+01
  3.17321870e+02  3.20771551e+03]
E1 = -19.048120131496365  E_coul = 4.499347923349348
cycle= 3 E= -14.548772208147  delta_E= -1.07e-07  |g|= 1.12e-05  |ddm|= 0.00055
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.19259e-05
diis-c [-6.73566110e-11  6.67865403e-04 -1.21522719e-02  1.01148441e+00]
  HOMO = -0.300757068492023  LUMO = 5.25387795192604
  mo_energy =
[-4.72395505e+00 -3.00757068e-01  5.25387795e+00  4.34724716e+01
  3.17321943e+02  3.20771560e+03]
E1 = -19.048121820703223  E_coul = 4.499349612550499
cycle= 4 E= -14.5487722081527  delta_E= -5.71e-12  |g|= 4.93e-07  |ddm|= 3.18e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048121820703223  E_coul = 4.499349612550499
  HOMO = -0.300757033543068  LUMO = 5.25387837562834
  mo_energy =
[-4.72395426e+00 -3.00757034e-01  5.25387838e+00  4.34724731e+01
  3.17321945e+02  3.20771560e+03]
E1 = -19.04812189852842  E_coul = 4.499349690375674
Extra cycle  E= -14.5487722081527  delta_E= -2.49e-14  |g|= 2.68e-08  |ddm|= 1.97e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.028539501896375
E1 = -19.04812189852842  E_coul = 4.499349690375674
init E= -14.5487722081527
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300757031662663  LUMO = 5.25387839526253
  mo_energy =
[-4.72395423e+00 -3.00757032e-01  5.25387840e+00  4.34724732e+01
  3.17321945e+02  3.20771560e+03]
E1 = -19.048121902393348  E_coul = 4.499349694240604
cycle= 1 E= -14.5487722081527  delta_E= 3.55e-15  |g|= 1.47e-09  |ddm|= 1.1e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.048121902393348  E_coul = 4.499349694240604
  HOMO = -0.300757031557255  LUMO = 5.25387839620513
  mo_energy =
[-4.72395423e+00 -3.00757032e-01  5.25387840e+00  4.34724732e+01
  3.17321945e+02  3.20771560e+03]
E1 = -19.04812190259257  E_coul = 4.499349694439841
Extra cycle  E= -14.5487722081527  delta_E= 1.6e-14  |g|= 8.53e-11  |ddm|= 6.5e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [1.92126406e+03 1.91705309e+02 2.97366569e+01 6.51869005e+00
 1.67630935e+00 1.04487240e-01]
grad_E = [ 7.12527162e-07  7.41577509e-05 -2.96488025e-05  6.89488572e-05
 -2.85850577e-05  8.46505467e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26237328        1
[INPUT] 0    0    [1    /1   ]  191.554485557        1
[INPUT] 0    0    [1    /1   ]  29.6146123851        1
[INPUT] 0    0    [1    /1   ]  6.50065409334        1
[INPUT] 0    0    [1    /1   ]  1.67400954224        1
[INPUT] 0    0    [1    /1   ]  0.104488729877       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2623732758007, 1.0]], [0, [191.55448555655295, 1.0]], [0, [29.614612385144753, 1.0]], [0, [6.50065409334185, 1.0]], [0, [1.6740095422372234, 1.0]], [0, [0.10448872987712081, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26237328]
bas 1, expnt(s) = [191.55448556]
bas 2, expnt(s) = [29.61461239]
bas 3, expnt(s) = [6.50065409]
bas 4, expnt(s) = [1.67400954]
bas 5, expnt(s) = [0.10448873]
CPU time:        72.75
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126237e+03 7.33170584e+02 1.91554486e+02 1.30087111e+02
 2.96146124e+01 3.20733677e+01 6.50065409e+00 1.02856755e+01
 1.67400954e+00 3.71820620e+00 1.04488730e-01 4.64319702e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866475382756974
cond(S) = 21.063136149817588
E1 = -19.045959155168273  E_coul = 4.51942447387615
init E= -14.5265346812921
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30173876683124  LUMO = 5.24087329768007
  mo_energy =
[-4.71275343e+00 -3.01738767e-01  5.24087330e+00  4.33145567e+01
  3.16710029e+02  3.20684320e+03]
E1 = -19.049988879015043  E_coul = 4.501232475589301
cycle= 1 E= -14.5487564034257  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148902
diis-c [-2.21718679e-04  1.00000000e+00]
  HOMO = -0.300675608522978  LUMO = 5.23935307111665
  mo_energy =
[-4.72309702e+00 -3.00675609e-01  5.23935307e+00  4.33013498e+01
  3.16688997e+02  3.20681659e+03]
E1 = -19.048140027288202  E_coul = 4.499360858363876
cycle= 2 E= -14.5487791689243  delta_E= -2.28e-05  |g|= 0.00111  |ddm|= 0.00804
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128762
diis-c [-5.20801001e-07 -7.72382913e-02  1.07723829e+00]
  HOMO = -0.300757183358335  LUMO = 5.23895038180078
  mo_energy =
[-4.72402437e+00 -3.00757183e-01  5.23895038e+00  4.33004509e+01
  3.16687962e+02  3.20681547e+03]
E1 = -19.048035163119774  E_coul = 4.499255886551876
cycle= 3 E= -14.5487792765679  delta_E= -1.08e-07  |g|= 1.13e-05  |ddm|= 0.000554
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.24099e-05
diis-c [-6.80055861e-11  6.59313237e-04 -1.26318764e-02  1.01197256e+00]
  HOMO = -0.300756458047213  LUMO = 5.23896124988655
  mo_energy =
[-4.72400525e+00 -3.00756458e-01  5.23896125e+00  4.33004928e+01
  3.16688034e+02  3.20681556e+03]
E1 = -19.048036803566696  E_coul = 4.49925752699316
cycle= 4 E= -14.5487792765735  delta_E= -5.64e-12  |g|= 4.99e-07  |ddm|= 2.99e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048036803566696  E_coul = 4.49925752699316
  HOMO = -0.300756422489966  LUMO = 5.238961678178
  mo_energy =
[-4.72400445e+00 -3.00756422e-01  5.23896168e+00  4.33004944e+01
  3.16688036e+02  3.20681556e+03]
E1 = -19.048036882635774  E_coul = 4.499257606062219
Extra cycle  E= -14.5487792765736  delta_E= -1.95e-14  |g|= 2.73e-08  |ddm|= 2.01e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126237e+03 1.91554486e+02 2.96146124e+01 6.50065409e+00
 1.67400954e+00 1.04488730e-01]
E = -14.548779276573555
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.26237328        1
[INPUT] 0    0    [1    /1   ]  191.554485557        1
[INPUT] 0    0    [1    /1   ]  29.6146123851        1
[INPUT] 0    0    [1    /1   ]  6.50065409334        1
[INPUT] 0    0    [1    /1   ]  1.67400954224        1
[INPUT] 0    0    [1    /1   ]  0.104488729877       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2623732758007, 1.0]], [0, [191.55448555655295, 1.0]], [0, [29.614612385144753, 1.0]], [0, [6.50065409334185, 1.0]], [0, [1.6740095422372234, 1.0]], [0, [0.10448872987712081, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.26237328]
bas 1, expnt(s) = [191.55448556]
bas 2, expnt(s) = [29.61461239]
bas 3, expnt(s) = [6.50065409]
bas 4, expnt(s) = [1.67400954]
bas 5, expnt(s) = [0.10448873]
CPU time:        73.32
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126237e+03 7.33170584e+02 1.91554486e+02 1.30087111e+02
 2.96146124e+01 3.20733677e+01 6.50065409e+00 1.02856755e+01
 1.67400954e+00 3.71820620e+00 1.04488730e-01 4.64319702e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866475382756974
cond(S) = 21.063136149817588
E1 = -19.045959155168273  E_coul = 4.51942447387615
init E= -14.5265346812921
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30173876683124  LUMO = 5.24087329768007
  mo_energy =
[-4.71275343e+00 -3.01738767e-01  5.24087330e+00  4.33145567e+01
  3.16710029e+02  3.20684320e+03]
E1 = -19.049988879015043  E_coul = 4.501232475589301
cycle= 1 E= -14.5487564034257  delta_E= -0.0222  |g|= 0.0169  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148902
diis-c [-2.21718679e-04  1.00000000e+00]
  HOMO = -0.300675608522978  LUMO = 5.23935307111665
  mo_energy =
[-4.72309702e+00 -3.00675609e-01  5.23935307e+00  4.33013498e+01
  3.16688997e+02  3.20681659e+03]
E1 = -19.048140027288202  E_coul = 4.499360858363876
cycle= 2 E= -14.5487791689243  delta_E= -2.28e-05  |g|= 0.00111  |ddm|= 0.00804
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128762
diis-c [-5.20801001e-07 -7.72382913e-02  1.07723829e+00]
  HOMO = -0.300757183358335  LUMO = 5.23895038180078
  mo_energy =
[-4.72402437e+00 -3.00757183e-01  5.23895038e+00  4.33004509e+01
  3.16687962e+02  3.20681547e+03]
E1 = -19.048035163119774  E_coul = 4.499255886551876
cycle= 3 E= -14.5487792765679  delta_E= -1.08e-07  |g|= 1.13e-05  |ddm|= 0.000554
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.24099e-05
diis-c [-6.80055861e-11  6.59313237e-04 -1.26318764e-02  1.01197256e+00]
  HOMO = -0.300756458047213  LUMO = 5.23896124988655
  mo_energy =
[-4.72400525e+00 -3.00756458e-01  5.23896125e+00  4.33004928e+01
  3.16688034e+02  3.20681556e+03]
E1 = -19.048036803566696  E_coul = 4.49925752699316
cycle= 4 E= -14.5487792765735  delta_E= -5.64e-12  |g|= 4.99e-07  |ddm|= 2.99e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.048036803566696  E_coul = 4.49925752699316
  HOMO = -0.300756422489966  LUMO = 5.238961678178
  mo_energy =
[-4.72400445e+00 -3.00756422e-01  5.23896168e+00  4.33004944e+01
  3.16688036e+02  3.20681556e+03]
E1 = -19.048036882635774  E_coul = 4.499257606062219
Extra cycle  E= -14.5487792765736  delta_E= -1.95e-14  |g|= 2.73e-08  |ddm|= 2.01e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.063136149817588
E1 = -19.048036882635774  E_coul = 4.499257606062219
init E= -14.5487792765736
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300756420571842  LUMO = 5.23896169807566
  mo_energy =
[-4.72400441e+00 -3.00756421e-01  5.23896170e+00  4.33004944e+01
  3.16688036e+02  3.20681556e+03]
E1 = -19.04803688657397  E_coul = 4.49925761000041
cycle= 1 E= -14.5487792765736  delta_E= -7.11e-15  |g|= 1.5e-09  |ddm|= 1.13e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04803688657397  E_coul = 4.49925761000041
  HOMO = -0.300756420463963  LUMO = 5.23896169903358
  mo_energy =
[-4.72400441e+00 -3.00756420e-01  5.23896170e+00  4.33004944e+01
  3.16688036e+02  3.20681556e+03]
E1 = -19.048036886777595  E_coul = 4.499257610204044
Extra cycle  E= -14.5487792765736  delta_E= 1.07e-14  |g|= 8.74e-11  |ddm|= 6.67e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92126237e+03 1.91554486e+02 2.96146124e+01 6.50065409e+00
 1.67400954e+00 1.04488730e-01]
grad_E = [ 7.00718125e-07  7.69108800e-05 -6.68114370e-05  1.13919195e-04
 -5.34691275e-05  1.79927027e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2576693         1
[INPUT] 0    0    [1    /1   ]  191.115030204        1
[INPUT] 0    0    [1    /1   ]  29.4024350269        1
[INPUT] 0    0    [1    /1   ]  6.46963069498        1
[INPUT] 0    0    [1    /1   ]  1.67004286185        1
[INPUT] 0    0    [1    /1   ]  0.104491307563       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2576692998139, 1.0]], [0, [191.11503020355735, 1.0]], [0, [29.402435026893915, 1.0]], [0, [6.469630694982918, 1.0]], [0, [1.6700428618547636, 1.0]], [0, [0.10449130756294729, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2576693]
bas 1, expnt(s) = [191.1150302]
bas 2, expnt(s) = [29.40243503]
bas 3, expnt(s) = [6.46963069]
bas 4, expnt(s) = [1.67004286]
bas 5, expnt(s) = [0.10449131]
CPU time:        75.73
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92125767e+03 7.33169238e+02 1.91115030e+02 1.29863217e+02
 2.94024350e+01 3.19008679e+01 6.46963069e+00 1.02488383e+01
 1.67004286e+00 3.71159634e+00 1.04491308e-01 4.64328293e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866583068425543
cond(S) = 21.131575515337182
E1 = -19.04606734258209  E_coul = 4.519535348120709
init E= -14.5265319944614
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301720832742209  LUMO = 5.21524430125325
  mo_energy =
[-4.71272398e+00 -3.01720833e-01  5.21524430e+00  4.30168379e+01
  3.15402127e+02  3.20471268e+03]
E1 = -19.049871395804452  E_coul = 4.501096654317499
cycle= 1 E= -14.548774741487  delta_E= -0.0222  |g|= 0.017  |ddm|= 0.159
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0149816
diis-c [-2.24447892e-04  1.00000000e+00]
  HOMO = -0.300673801685105  LUMO = 5.21365829002726
  mo_energy =
[-4.72317600e+00 -3.00673802e-01  5.21365829e+00  4.30035066e+01
  3.15380889e+02  3.20468573e+03]
E1 = -19.04800416731589  E_coul = 4.499206468625312
cycle= 2 E= -14.5487976986906  delta_E= -2.3e-05  |g|= 0.00111  |ddm|= 0.0081
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0012931
diis-c [-5.41383042e-07 -7.64993356e-02  1.07649934e+00]
  HOMO = -0.300756114406054  LUMO = 5.2132516412864
  mo_energy =
[-4.72411191e+00 -3.00756114e-01  5.21325164e+00  4.30025972e+01
  3.15379841e+02  3.20468460e+03]
E1 = -19.047897726079903  E_coul = 4.499099918169493
cycle= 3 E= -14.5487978079104  delta_E= -1.09e-07  |g|= 1.16e-05  |ddm|= 0.00056
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.32835e-05
diis-c [-6.91680689e-11  6.45966313e-04 -1.34418563e-02  1.01279589e+00]
  HOMO = -0.300755459047845  LUMO = 5.21326216207192
  mo_energy =
[-4.72409356e+00 -3.00755459e-01  5.21326216e+00  4.30026384e+01
  3.15379912e+02  3.20468469e+03]
E1 = -19.04789928361133  E_coul = 4.49910147569524
cycle= 4 E= -14.5487978079161  delta_E= -5.68e-12  |g|= 5.11e-07  |ddm|= 2.71e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04789928361133  E_coul = 4.49910147569524
  HOMO = -0.300755422463142  LUMO = 5.2132625980576
  mo_energy =
[-4.72409274e+00 -3.00755422e-01  5.21326260e+00  4.30026400e+01
  3.15379914e+02  3.20468469e+03]
E1 = -19.047899364803442  E_coul = 4.4991015568873465
Extra cycle  E= -14.5487978079161  delta_E= -7.11e-15  |g|= 2.8e-08  |ddm|= 2.08e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92125767e+03 1.91115030e+02 2.94024350e+01 6.46963069e+00
 1.67004286e+00 1.04491308e-01]
E = -14.548797807916095
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.2576693         1
[INPUT] 0    0    [1    /1   ]  191.115030204        1
[INPUT] 0    0    [1    /1   ]  29.4024350269        1
[INPUT] 0    0    [1    /1   ]  6.46963069498        1
[INPUT] 0    0    [1    /1   ]  1.67004286185        1
[INPUT] 0    0    [1    /1   ]  0.104491307563       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2576692998139, 1.0]], [0, [191.11503020355735, 1.0]], [0, [29.402435026893915, 1.0]], [0, [6.469630694982918, 1.0]], [0, [1.6700428618547636, 1.0]], [0, [0.10449130756294729, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.2576693]
bas 1, expnt(s) = [191.1150302]
bas 2, expnt(s) = [29.40243503]
bas 3, expnt(s) = [6.46963069]
bas 4, expnt(s) = [1.67004286]
bas 5, expnt(s) = [0.10449131]
CPU time:        76.34
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92125767e+03 7.33169238e+02 1.91115030e+02 1.29863217e+02
 2.94024350e+01 3.19008679e+01 6.46963069e+00 1.02488383e+01
 1.67004286e+00 3.71159634e+00 1.04491308e-01 4.64328293e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866583068425543
cond(S) = 21.131575515337182
E1 = -19.04606734258209  E_coul = 4.519535348120709
init E= -14.5265319944614
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301720832742209  LUMO = 5.21524430125325
  mo_energy =
[-4.71272398e+00 -3.01720833e-01  5.21524430e+00  4.30168379e+01
  3.15402127e+02  3.20471268e+03]
E1 = -19.049871395804452  E_coul = 4.501096654317499
cycle= 1 E= -14.548774741487  delta_E= -0.0222  |g|= 0.017  |ddm|= 0.159
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0149816
diis-c [-2.24447892e-04  1.00000000e+00]
  HOMO = -0.300673801685105  LUMO = 5.21365829002726
  mo_energy =
[-4.72317600e+00 -3.00673802e-01  5.21365829e+00  4.30035066e+01
  3.15380889e+02  3.20468573e+03]
E1 = -19.04800416731589  E_coul = 4.499206468625312
cycle= 2 E= -14.5487976986906  delta_E= -2.3e-05  |g|= 0.00111  |ddm|= 0.0081
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0012931
diis-c [-5.41383042e-07 -7.64993356e-02  1.07649934e+00]
  HOMO = -0.300756114406054  LUMO = 5.2132516412864
  mo_energy =
[-4.72411191e+00 -3.00756114e-01  5.21325164e+00  4.30025972e+01
  3.15379841e+02  3.20468460e+03]
E1 = -19.047897726079903  E_coul = 4.499099918169493
cycle= 3 E= -14.5487978079104  delta_E= -1.09e-07  |g|= 1.16e-05  |ddm|= 0.00056
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.32835e-05
diis-c [-6.91680689e-11  6.45966313e-04 -1.34418563e-02  1.01279589e+00]
  HOMO = -0.300755459047845  LUMO = 5.21326216207192
  mo_energy =
[-4.72409356e+00 -3.00755459e-01  5.21326216e+00  4.30026384e+01
  3.15379912e+02  3.20468469e+03]
E1 = -19.04789928361133  E_coul = 4.49910147569524
cycle= 4 E= -14.5487978079161  delta_E= -5.68e-12  |g|= 5.11e-07  |ddm|= 2.71e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04789928361133  E_coul = 4.49910147569524
  HOMO = -0.300755422463142  LUMO = 5.2132625980576
  mo_energy =
[-4.72409274e+00 -3.00755422e-01  5.21326260e+00  4.30026400e+01
  3.15379914e+02  3.20468469e+03]
E1 = -19.047899364803442  E_coul = 4.4991015568873465
Extra cycle  E= -14.5487978079161  delta_E= -7.11e-15  |g|= 2.8e-08  |ddm|= 2.08e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.131575515337182
E1 = -19.047899364803442  E_coul = 4.4991015568873465
init E= -14.5487978079161
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300755420480763  LUMO = 5.21326261840363
  mo_energy =
[-4.72409271e+00 -3.00755420e-01  5.21326262e+00  4.30026400e+01
  3.15379915e+02  3.20468469e+03]
E1 = -19.04789936886771  E_coul = 4.499101560951616
cycle= 1 E= -14.5487978079161  delta_E=    0  |g|= 1.55e-09  |ddm|= 1.17e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04789936886771  E_coul = 4.499101560951616
  HOMO = -0.300755420368653  LUMO = 5.21326261938791
  mo_energy =
[-4.72409270e+00 -3.00755420e-01  5.21326262e+00  4.30026400e+01
  3.15379915e+02  3.20468469e+03]
E1 = -19.047899369078998  E_coul = 4.499101561162891
Extra cycle  E= -14.5487978079161  delta_E= -1.07e-14  |g|= 9.1e-11  |ddm|= 6.96e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92125767e+03 1.91115030e+02 2.94024350e+01 6.46963069e+00
 1.67004286e+00 1.04491308e-01]
grad_E = [ 6.88404611e-07  8.12823983e-05 -1.27844199e-04  1.88083394e-04
 -9.47197671e-05  3.37511162e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.24493708        1
[INPUT] 0    0    [1    /1   ]  189.896974518        1
[INPUT] 0    0    [1    /1   ]  29.0231595441        1
[INPUT] 0    0    [1    /1   ]  6.41493231428        1
[INPUT] 0    0    [1    /1   ]  1.66301969147        1
[INPUT] 0    0    [1    /1   ]  0.104495883947       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2449370839938, 1.0]], [0, [189.89697451811207, 1.0]], [0, [29.023159544123367, 1.0]], [0, [6.414932314281368, 1.0]], [0, [1.6630196914689557, 1.0]], [0, [0.10449588394688986, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.24493708]
bas 1, expnt(s) = [189.89697452]
bas 2, expnt(s) = [29.02315954]
bas 3, expnt(s) = [6.41493231]
bas 4, expnt(s) = [1.66301969]
bas 5, expnt(s) = [0.10449588]
CPU time:        78.79
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92124494e+03 7.33165594e+02 1.89896975e+02 1.29241967e+02
 2.90231595e+01 3.15917396e+01 6.41493231e+00 1.01837817e+01
 1.66301969e+00 3.69988366e+00 1.04495884e-01 4.64343545e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866772692711443
cond(S) = 21.275003182706172
E1 = -19.04627686327897  E_coul = 4.519735658645305
init E= -14.5265412046337
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301689209898651  LUMO = 5.16996943882446
  mo_energy =
[-4.71267751e+00 -3.01689210e-01  5.16996944e+00  4.24874424e+01
  3.12561391e+02  3.19952394e+03]
E1 = -19.0496872621178  E_coul = 4.500864394983481
cycle= 1 E= -14.5488228671343  delta_E= -0.0223  |g|= 0.0171  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151372
diis-c [-2.29135309e-04  1.00000000e+00]
  HOMO = -0.300670700946039  LUMO = 5.16826972073177
  mo_energy =
[-4.72331945e+00 -3.00670701e-01  5.16826972e+00  4.24738971e+01
  3.12539810e+02  3.19949643e+03]
E1 = -19.047787213920184  E_coul = 4.498941045940811
cycle= 2 E= -14.5488461679794  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130296
diis-c [-5.76895502e-07 -7.53002682e-02  1.07530027e+00]
  HOMO = -0.300754345749509  LUMO = 5.16785602114067
  mo_energy =
[-4.72427075e+00 -3.00754346e-01  5.16785602e+00  4.24729690e+01
  3.12538740e+02  3.19949527e+03]
E1 = -19.047677925579766  E_coul = 4.498831645527243
cycle= 3 E= -14.5488462800525  delta_E= -1.12e-07  |g|= 1.23e-05  |ddm|= 0.000571
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.49e-05
diis-c [-7.13300759e-11  6.26119904e-04 -1.48213395e-02  1.01419522e+00]
  HOMO = -0.30075380945752  LUMO = 5.16786594776258
  mo_energy =
[-4.72425368e+00 -3.00753809e-01  5.16786595e+00  4.24730089e+01
  3.12538810e+02  3.19949535e+03]
E1 = -19.04767933977855  E_coul = 4.498833059719839
cycle= 4 E= -14.5488462800587  delta_E= -6.19e-12  |g|= 5.31e-07  |ddm|= 2.41e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04767933977855  E_coul = 4.498833059719839
  HOMO = -0.300753771108448  LUMO = 5.16786639679381
  mo_energy =
[-4.72425284e+00 -3.00753771e-01  5.16786640e+00  4.24730105e+01
  3.12538812e+02  3.19949536e+03]
E1 = -19.047679424679863  E_coul = 4.4988331446211385
Extra cycle  E= -14.5488462800587  delta_E= -1.42e-14  |g|= 2.93e-08  |ddm|= 2.19e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92124494e+03 1.89896975e+02 2.90231595e+01 6.41493231e+00
 1.66301969e+00 1.04495884e-01]
E = -14.548846280058726
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.24493708        1
[INPUT] 0    0    [1    /1   ]  189.896974518        1
[INPUT] 0    0    [1    /1   ]  29.0231595441        1
[INPUT] 0    0    [1    /1   ]  6.41493231428        1
[INPUT] 0    0    [1    /1   ]  1.66301969147        1
[INPUT] 0    0    [1    /1   ]  0.104495883947       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2449370839938, 1.0]], [0, [189.89697451811207, 1.0]], [0, [29.023159544123367, 1.0]], [0, [6.414932314281368, 1.0]], [0, [1.6630196914689557, 1.0]], [0, [0.10449588394688986, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.24493708]
bas 1, expnt(s) = [189.89697452]
bas 2, expnt(s) = [29.02315954]
bas 3, expnt(s) = [6.41493231]
bas 4, expnt(s) = [1.66301969]
bas 5, expnt(s) = [0.10449588]
CPU time:        79.41
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92124494e+03 7.33165594e+02 1.89896975e+02 1.29241967e+02
 2.90231595e+01 3.15917396e+01 6.41493231e+00 1.01837817e+01
 1.66301969e+00 3.69988366e+00 1.04495884e-01 4.64343545e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866772692711443
cond(S) = 21.275003182706172
E1 = -19.04627686327897  E_coul = 4.519735658645305
init E= -14.5265412046337
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301689209898651  LUMO = 5.16996943882446
  mo_energy =
[-4.71267751e+00 -3.01689210e-01  5.16996944e+00  4.24874424e+01
  3.12561391e+02  3.19952394e+03]
E1 = -19.0496872621178  E_coul = 4.500864394983481
cycle= 1 E= -14.5488228671343  delta_E= -0.0223  |g|= 0.0171  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151372
diis-c [-2.29135309e-04  1.00000000e+00]
  HOMO = -0.300670700946039  LUMO = 5.16826972073177
  mo_energy =
[-4.72331945e+00 -3.00670701e-01  5.16826972e+00  4.24738971e+01
  3.12539810e+02  3.19949643e+03]
E1 = -19.047787213920184  E_coul = 4.498941045940811
cycle= 2 E= -14.5488461679794  delta_E= -2.33e-05  |g|= 0.00112  |ddm|= 0.00823
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130296
diis-c [-5.76895502e-07 -7.53002682e-02  1.07530027e+00]
  HOMO = -0.300754345749509  LUMO = 5.16785602114067
  mo_energy =
[-4.72427075e+00 -3.00754346e-01  5.16785602e+00  4.24729690e+01
  3.12538740e+02  3.19949527e+03]
E1 = -19.047677925579766  E_coul = 4.498831645527243
cycle= 3 E= -14.5488462800525  delta_E= -1.12e-07  |g|= 1.23e-05  |ddm|= 0.000571
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.49e-05
diis-c [-7.13300759e-11  6.26119904e-04 -1.48213395e-02  1.01419522e+00]
  HOMO = -0.30075380945752  LUMO = 5.16786594776258
  mo_energy =
[-4.72425368e+00 -3.00753809e-01  5.16786595e+00  4.24730089e+01
  3.12538810e+02  3.19949535e+03]
E1 = -19.04767933977855  E_coul = 4.498833059719839
cycle= 4 E= -14.5488462800587  delta_E= -6.19e-12  |g|= 5.31e-07  |ddm|= 2.41e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04767933977855  E_coul = 4.498833059719839
  HOMO = -0.300753771108448  LUMO = 5.16786639679381
  mo_energy =
[-4.72425284e+00 -3.00753771e-01  5.16786640e+00  4.24730105e+01
  3.12538812e+02  3.19949536e+03]
E1 = -19.047679424679863  E_coul = 4.4988331446211385
Extra cycle  E= -14.5488462800587  delta_E= -1.42e-14  |g|= 2.93e-08  |ddm|= 2.19e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.275003182706172
E1 = -19.047679424679863  E_coul = 4.4988331446211385
init E= -14.5488462800587
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300753769014138  LUMO = 5.16786641791922
  mo_energy =
[-4.72425280e+00 -3.00753769e-01  5.16786642e+00  4.24730105e+01
  3.12538812e+02  3.19949536e+03]
E1 = -19.047679428967456  E_coul = 4.49883314890874
cycle= 1 E= -14.5488462800587  delta_E= 1.07e-14  |g|= 1.64e-09  |ddm|= 1.25e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047679428967456  E_coul = 4.49883314890874
  HOMO = -0.300753768894582  LUMO = 5.16786641895008
  mo_energy =
[-4.72425280e+00 -3.00753769e-01  5.16786642e+00  4.24730105e+01
  3.12538812e+02  3.19949536e+03]
E1 = -19.04767942919241  E_coul = 4.498833149133692
Extra cycle  E= -14.5488462800587  delta_E= -3.55e-15  |g|= 9.73e-11  |ddm|= 7.48e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92124494e+03 1.89896975e+02 2.90231595e+01 6.41493231e+00
 1.66301969e+00 1.04495884e-01]
grad_E = [ 6.86594823e-07  8.81333960e-05 -2.28694402e-04  3.11987653e-04
 -1.64321519e-04  6.03712114e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.21136057        1
[INPUT] 0    0    [1    /1   ]  186.640237683        1
[INPUT] 0    0    [1    /1   ]  28.3270779997        1
[INPUT] 0    0    [1    /1   ]  6.31611110496        1
[INPUT] 0    0    [1    /1   ]  1.65024918563        1
[INPUT] 0    0    [1    /1   ]  0.104504200435       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2113605746965, 1.0]], [0, [186.64023768275032, 1.0]], [0, [28.327077999728434, 1.0]], [0, [6.316111104961662, 1.0]], [0, [1.6502491856324544, 1.0]], [0, [0.10450420043525599, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.21136057]
bas 1, expnt(s) = [186.64023768]
bas 2, expnt(s) = [28.327078]
bas 3, expnt(s) = [6.3161111]
bas 4, expnt(s) = [1.65024919]
bas 5, expnt(s) = [0.1045042]
CPU time:        82.01
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92121136e+03 7.33155984e+02 1.86640238e+02 1.27576001e+02
 2.83270780e+01 3.10217546e+01 6.31611110e+00 1.00658938e+01
 1.65024919e+00 3.67855429e+00 1.04504200e-01 4.64371261e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9867114104063988
cond(S) = 21.592963705655862
E1 = -19.04671220262785  E_coul = 4.52011230894663
init E= -14.5265998936812
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301631974594944  LUMO = 5.08802570137558
  mo_energy =
[-4.71260526e+00 -3.01631975e-01  5.08802570e+00  4.15226093e+01
  3.06161084e+02  3.18674878e+03]
E1 = -19.04941465417641  E_coul = 4.500466755048918
cycle= 1 E= -14.5489478991275  delta_E= -0.0223  |g|= 0.0173  |ddm|= 0.164
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153979
diis-c [-2.3709405e-04  1.0000000e+00]
  HOMO = -0.300665222795841  LUMO = 5.08612698279917
  mo_energy =
[-4.72358655e+00 -3.00665223e-01  5.08612698e+00  4.15086926e+01
  3.06138938e+02  3.18672032e+03]
E1 = -19.04745392046973  E_coul = 4.498482083189698
cycle= 2 E= -14.54897183728  delta_E= -2.39e-05  |g|= 0.00114  |ddm|= 0.00846
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00132126
diis-c [-6.38523645e-07 -7.34555009e-02  1.07345550e+00]
  HOMO = -0.300751373676795  LUMO = 5.0857002908863
  mo_energy =
[-4.72456652e+00 -3.00751374e-01  5.08570029e+00  4.15077300e+01
  3.06137826e+02  3.18671911e+03]
E1 = -19.04733926587323  E_coul = 4.498367311130586
cycle= 3 E= -14.5489719547426  delta_E= -1.17e-07  |g|= 1.38e-05  |ddm|= 0.000592
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.78806e-05
diis-c [-7.55228788e-11  5.99841404e-04 -1.71407216e-02  1.01654088e+00]
  HOMO = -0.300751038789077  LUMO = 5.08570920401561
  mo_energy =
[-4.72455164e+00 -3.00751039e-01  5.08570920e+00  4.15077676e+01
  3.06137893e+02  3.18671919e+03]
E1 = -19.047340430789433  E_coul = 4.498368476038528
cycle= 4 E= -14.5489719547509  delta_E= -8.26e-12  |g|= 5.66e-07  |ddm|= 2.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047340430789433  E_coul = 4.498368476038528
  HOMO = -0.300750997350758  LUMO = 5.08570967536325
  mo_energy =
[-4.72455074e+00 -3.00750997e-01  5.08570968e+00  4.15077693e+01
  3.06137896e+02  3.18671920e+03]
E1 = -19.047340522364042  E_coul = 4.498368567613117
Extra cycle  E= -14.5489719547509  delta_E= -2.13e-14  |g|= 3.17e-08  |ddm|= 2.39e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92121136e+03 1.86640238e+02 2.83270780e+01 6.31611110e+00
 1.65024919e+00 1.04504200e-01]
E = -14.548971954750925
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.21136057        1
[INPUT] 0    0    [1    /1   ]  186.640237683        1
[INPUT] 0    0    [1    /1   ]  28.3270779997        1
[INPUT] 0    0    [1    /1   ]  6.31611110496        1
[INPUT] 0    0    [1    /1   ]  1.65024918563        1
[INPUT] 0    0    [1    /1   ]  0.104504200435       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.2113605746965, 1.0]], [0, [186.64023768275032, 1.0]], [0, [28.327077999728434, 1.0]], [0, [6.316111104961662, 1.0]], [0, [1.6502491856324544, 1.0]], [0, [0.10450420043525599, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.21136057]
bas 1, expnt(s) = [186.64023768]
bas 2, expnt(s) = [28.327078]
bas 3, expnt(s) = [6.3161111]
bas 4, expnt(s) = [1.65024919]
bas 5, expnt(s) = [0.1045042]
CPU time:        82.53
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92121136e+03 7.33155984e+02 1.86640238e+02 1.27576001e+02
 2.83270780e+01 3.10217546e+01 6.31611110e+00 1.00658938e+01
 1.65024919e+00 3.67855429e+00 1.04504200e-01 4.64371261e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9867114104063988
cond(S) = 21.592963705655862
E1 = -19.04671220262785  E_coul = 4.52011230894663
init E= -14.5265998936812
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301631974594944  LUMO = 5.08802570137558
  mo_energy =
[-4.71260526e+00 -3.01631975e-01  5.08802570e+00  4.15226093e+01
  3.06161084e+02  3.18674878e+03]
E1 = -19.04941465417641  E_coul = 4.500466755048918
cycle= 1 E= -14.5489478991275  delta_E= -0.0223  |g|= 0.0173  |ddm|= 0.164
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153979
diis-c [-2.3709405e-04  1.0000000e+00]
  HOMO = -0.300665222795841  LUMO = 5.08612698279917
  mo_energy =
[-4.72358655e+00 -3.00665223e-01  5.08612698e+00  4.15086926e+01
  3.06138938e+02  3.18672032e+03]
E1 = -19.04745392046973  E_coul = 4.498482083189698
cycle= 2 E= -14.54897183728  delta_E= -2.39e-05  |g|= 0.00114  |ddm|= 0.00846
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00132126
diis-c [-6.38523645e-07 -7.34555009e-02  1.07345550e+00]
  HOMO = -0.300751373676795  LUMO = 5.0857002908863
  mo_energy =
[-4.72456652e+00 -3.00751374e-01  5.08570029e+00  4.15077300e+01
  3.06137826e+02  3.18671911e+03]
E1 = -19.04733926587323  E_coul = 4.498367311130586
cycle= 3 E= -14.5489719547426  delta_E= -1.17e-07  |g|= 1.38e-05  |ddm|= 0.000592
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.78806e-05
diis-c [-7.55228788e-11  5.99841404e-04 -1.71407216e-02  1.01654088e+00]
  HOMO = -0.300751038789077  LUMO = 5.08570920401561
  mo_energy =
[-4.72455164e+00 -3.00751039e-01  5.08570920e+00  4.15077676e+01
  3.06137893e+02  3.18671919e+03]
E1 = -19.047340430789433  E_coul = 4.498368476038528
cycle= 4 E= -14.5489719547509  delta_E= -8.26e-12  |g|= 5.66e-07  |ddm|= 2.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047340430789433  E_coul = 4.498368476038528
  HOMO = -0.300750997350758  LUMO = 5.08570967536325
  mo_energy =
[-4.72455074e+00 -3.00750997e-01  5.08570968e+00  4.15077693e+01
  3.06137896e+02  3.18671920e+03]
E1 = -19.047340522364042  E_coul = 4.498368567613117
Extra cycle  E= -14.5489719547509  delta_E= -2.13e-14  |g|= 3.17e-08  |ddm|= 2.39e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.592963705655862
E1 = -19.047340522364042  E_coul = 4.498368567613117
init E= -14.5489719547509
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300750995055661  LUMO = 5.08570969787765
  mo_energy =
[-4.72455070e+00 -3.00750995e-01  5.08570970e+00  4.15077693e+01
  3.06137896e+02  3.18671920e+03]
E1 = -19.04734052706294  E_coul = 4.498368572312008
cycle= 1 E= -14.5489719547509  delta_E= -7.11e-15  |g|= 1.8e-09  |ddm|= 1.38e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04734052706294  E_coul = 4.498368572312008
  HOMO = -0.30075099492252  LUMO = 5.0857096989943
  mo_energy =
[-4.72455070e+00 -3.00750995e-01  5.08570970e+00  4.15077693e+01
  3.06137896e+02  3.18671920e+03]
E1 = -19.04734052731359  E_coul = 4.498368572562657
Extra cycle  E= -14.5489719547509  delta_E=    0  |g|= 1.09e-10  |ddm|= 8.43e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92121136e+03 1.86640238e+02 2.83270780e+01 6.31611110e+00
 1.65024919e+00 1.04504200e-01]
grad_E = [ 7.32985486e-07  9.85437044e-05 -3.95577514e-04  5.22422968e-04
 -2.84057198e-04  1.07665757e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.12587948        1
[INPUT] 0    0    [1    /1   ]  178.278969942        1
[INPUT] 0    0    [1    /1   ]  27.0333369609        1
[INPUT] 0    0    [1    /1   ]  6.13512142188        1
[INPUT] 0    0    [1    /1   ]  1.62662173704        1
[INPUT] 0    0    [1    /1   ]  0.104519388183       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.125879482057, 1.0]], [0, [178.27896994156322, 1.0]], [0, [27.03333696094499, 1.0]], [0, [6.135121421882478, 1.0]], [0, [1.6266217370394382, 1.0]], [0, [0.10451938818296669, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.12587948]
bas 1, expnt(s) = [178.27896994]
bas 2, expnt(s) = [27.03333696]
bas 3, expnt(s) = [6.13512142]
bas 4, expnt(s) = [1.62662174]
bas 5, expnt(s) = [0.10451939]
CPU time:        85.00
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92112588e+03 7.33131519e+02 1.78278970e+02 1.23265094e+02
 2.70333370e+01 2.99529615e+01 6.13512142e+00 9.84877909e+00
 1.62662174e+00 3.63898238e+00 1.04519388e-01 4.64421876e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986773611067306
cond(S) = 22.337043978875634
E1 = -19.047692098358414  E_coul = 4.520849688739051
init E= -14.5268424096194
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301526476956974  LUMO = 4.93781826746949
  mo_energy =
[-4.71249371e+00 -3.01526477e-01  4.93781827e+00  3.97456801e+01
  2.91588581e+02  3.15569966e+03]
E1 = -19.049074648867382  E_coul = 4.499809863493346
cycle= 1 E= -14.549264785374  delta_E= -0.0224  |g|= 0.0176  |ddm|= 0.17
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0157917
diis-c [-2.49377429e-04  1.00000000e+00]
  HOMO = -0.300655156433418  LUMO = 4.93557436663923
  mo_energy =
[-4.72408406e+00 -3.00655156e-01  4.93557437e+00  3.97311318e+01
  2.91565557e+02  3.15566967e+03]
E1 = -19.046998057458616  E_coul = 4.497708116423062
cycle= 2 E= -14.5492899410356  delta_E= -2.52e-05  |g|= 0.00117  |ddm|= 0.0089
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00135594
diis-c [-7.42488217e-07 -7.11173520e-02  1.07111735e+00]
  HOMO = -0.300746237031977  LUMO = 4.93512297370688
  mo_energy =
[-4.72511954e+00 -3.00746237e-01  4.93512297e+00  3.97301039e+01
  2.91564364e+02  3.15566837e+03]
E1 = -19.046872789488397  E_coul = 4.497582720320587
cycle= 3 E= -14.5492900691678  delta_E= -1.28e-07  |g|= 1.71e-05  |ddm|= 0.000633
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.29672e-05
diis-c [-8.40370686e-11  5.74144917e-04 -2.07279877e-02  1.02015384e+00]
  HOMO = -0.300746221769174  LUMO = 4.93513025511145
  mo_energy =
[-4.72510811e+00 -3.00746222e-01  4.93513026e+00  3.97301377e+01
  2.91564428e+02  3.15566845e+03]
E1 = -19.04687353817844  E_coul = 4.497583468995796
cycle= 4 E= -14.5492900691826  delta_E= -1.48e-11  |g|= 6.31e-07  |ddm|= 4.15e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04687353817844  E_coul = 4.497583468995796
  HOMO = -0.300746174751255  LUMO = 4.93513076494436
  mo_energy =
[-4.72510713e+00 -3.00746175e-01  4.93513076e+00  3.97301394e+01
  2.91564431e+02  3.15566845e+03]
E1 = -19.04687364225787  E_coul = 4.4975835730752
Extra cycle  E= -14.5492900691827  delta_E= -2.84e-14  |g|= 3.62e-08  |ddm|= 2.77e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92112588e+03 1.78278970e+02 2.70333370e+01 6.13512142e+00
 1.62662174e+00 1.04519388e-01]
E = -14.549290069182671
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1921.12587948        1
[INPUT] 0    0    [1    /1   ]  178.278969942        1
[INPUT] 0    0    [1    /1   ]  27.0333369609        1
[INPUT] 0    0    [1    /1   ]  6.13512142188        1
[INPUT] 0    0    [1    /1   ]  1.62662173704        1
[INPUT] 0    0    [1    /1   ]  0.104519388183       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1921.125879482057, 1.0]], [0, [178.27896994156322, 1.0]], [0, [27.03333696094499, 1.0]], [0, [6.135121421882478, 1.0]], [0, [1.6266217370394382, 1.0]], [0, [0.10451938818296669, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1921.12587948]
bas 1, expnt(s) = [178.27896994]
bas 2, expnt(s) = [27.03333696]
bas 3, expnt(s) = [6.13512142]
bas 4, expnt(s) = [1.62662174]
bas 5, expnt(s) = [0.10451939]
CPU time:        85.62
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92112588e+03 7.33131519e+02 1.78278970e+02 1.23265094e+02
 2.70333370e+01 2.99529615e+01 6.13512142e+00 9.84877909e+00
 1.62662174e+00 3.63898238e+00 1.04519388e-01 4.64421876e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986773611067306
cond(S) = 22.337043978875634
E1 = -19.047692098358414  E_coul = 4.520849688739051
init E= -14.5268424096194
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301526476956974  LUMO = 4.93781826746949
  mo_energy =
[-4.71249371e+00 -3.01526477e-01  4.93781827e+00  3.97456801e+01
  2.91588581e+02  3.15569966e+03]
E1 = -19.049074648867382  E_coul = 4.499809863493346
cycle= 1 E= -14.549264785374  delta_E= -0.0224  |g|= 0.0176  |ddm|= 0.17
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0157917
diis-c [-2.49377429e-04  1.00000000e+00]
  HOMO = -0.300655156433418  LUMO = 4.93557436663923
  mo_energy =
[-4.72408406e+00 -3.00655156e-01  4.93557437e+00  3.97311318e+01
  2.91565557e+02  3.15566967e+03]
E1 = -19.046998057458616  E_coul = 4.497708116423062
cycle= 2 E= -14.5492899410356  delta_E= -2.52e-05  |g|= 0.00117  |ddm|= 0.0089
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00135594
diis-c [-7.42488217e-07 -7.11173520e-02  1.07111735e+00]
  HOMO = -0.300746237031977  LUMO = 4.93512297370688
  mo_energy =
[-4.72511954e+00 -3.00746237e-01  4.93512297e+00  3.97301039e+01
  2.91564364e+02  3.15566837e+03]
E1 = -19.046872789488397  E_coul = 4.497582720320587
cycle= 3 E= -14.5492900691678  delta_E= -1.28e-07  |g|= 1.71e-05  |ddm|= 0.000633
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.29672e-05
diis-c [-8.40370686e-11  5.74144917e-04 -2.07279877e-02  1.02015384e+00]
  HOMO = -0.300746221769174  LUMO = 4.93513025511145
  mo_energy =
[-4.72510811e+00 -3.00746222e-01  4.93513026e+00  3.97301377e+01
  2.91564428e+02  3.15566845e+03]
E1 = -19.04687353817844  E_coul = 4.497583468995796
cycle= 4 E= -14.5492900691826  delta_E= -1.48e-11  |g|= 6.31e-07  |ddm|= 4.15e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04687353817844  E_coul = 4.497583468995796
  HOMO = -0.300746174751255  LUMO = 4.93513076494436
  mo_energy =
[-4.72510713e+00 -3.00746175e-01  4.93513076e+00  3.97301394e+01
  2.91564431e+02  3.15566845e+03]
E1 = -19.04687364225787  E_coul = 4.4975835730752
Extra cycle  E= -14.5492900691827  delta_E= -2.84e-14  |g|= 3.62e-08  |ddm|= 2.77e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.337043978875634
E1 = -19.04687364225787  E_coul = 4.4975835730752
init E= -14.5492900691827
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300746172078645  LUMO = 4.93513079001428
  mo_energy =
[-4.72510708e+00 -3.00746172e-01  4.93513079e+00  3.97301395e+01
  2.91564431e+02  3.15566845e+03]
E1 = -19.04687364775706  E_coul = 4.497583578574394
cycle= 1 E= -14.5492900691827  delta_E= 5.33e-15  |g|= 2.11e-09  |ddm|= 1.65e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04687364775706  E_coul = 4.497583578574394
  HOMO = -0.300746171919207  LUMO = 4.93513079129662
  mo_energy =
[-4.72510707e+00 -3.00746172e-01  4.93513079e+00  3.97301395e+01
  2.91564431e+02  3.15566845e+03]
E1 = -19.04687364805935  E_coul = 4.497583578876683
Extra cycle  E= -14.5492900691827  delta_E= -1.78e-15  |g|= 1.31e-10  |ddm|= 1.03e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92112588e+03 1.78278970e+02 2.70333370e+01 6.13512142e+00
 1.62662174e+00 1.04519388e-01]
grad_E = [ 9.49603500e-07  1.12698399e-04 -6.63759367e-04  8.78654732e-04
 -4.83559874e-04  2.03391993e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.92566607        1
[INPUT] 0    0    [1    /1   ]  158.587340687        1
[INPUT] 0    0    [1    /1   ]  24.7404988861        1
[INPUT] 0    0    [1    /1   ]  5.81705341033        1
[INPUT] 0    0    [1    /1   ]  1.58438038944        1
[INPUT] 0    0    [1    /1   ]  0.104545042624       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.925666068891, 1.0]], [0, [158.58734068689932, 1.0]], [0, [24.740498886064948, 1.0]], [0, [5.8170534103324965, 1.0]], [0, [1.584380389440801, 1.0]], [0, [0.10454504262355588, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.92566607]
bas 1, expnt(s) = [158.58734069]
bas 2, expnt(s) = [24.74049889]
bas 3, expnt(s) = [5.81705341]
bas 4, expnt(s) = [1.58438039]
bas 5, expnt(s) = [0.10454504]
CPU time:        87.96
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92092567e+03 7.33074215e+02 1.58587341e+02 1.12905841e+02
 2.47404989e+01 2.80266612e+01 5.81705341e+00 9.46329357e+00
 1.58438039e+00 3.56787490e+00 1.04545043e-01 4.64507368e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986883488218459
cond(S) = 24.14976653795186
E1 = -19.049950129211684  E_coul = 4.522297003894386
init E= -14.5276531253173
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301337757446846  LUMO = 4.67385330482518
  mo_energy =
[-4.71230799e+00 -3.01337757e-01  4.67385330e+00  3.66350439e+01
  2.60163862e+02  3.08555896e+03]
E1 = -19.048875796462887  E_coul = 4.498888948356557
cycle= 1 E= -14.5499868481063  delta_E= -0.0223  |g|= 0.018  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0161619
diis-c [-2.6120727e-04  1.0000000e+00]
  HOMO = -0.300636214464856  LUMO = 4.67106420923532
  mo_energy =
[-4.72492554e+00 -3.00636214e-01  4.67106421e+00  3.66195341e+01
  2.60139720e+02  3.08552687e+03]
E1 = -19.046581204835118  E_coul = 4.496566910311422
cycle= 2 E= -14.5500142945237  delta_E= -2.74e-05  |g|= 0.00123  |ddm|= 0.00975
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00141967
diis-c [-8.93877655e-07 -7.02509735e-02  1.07025097e+00]
  HOMO = -0.300737126528151  LUMO = 4.67056673128599
  mo_energy =
[-4.72606827e+00 -3.00737127e-01  4.67056673e+00  3.66183848e+01
  2.60138378e+02  3.08552540e+03]
E1 = -19.046434599024934  E_coul = 4.496420154793963
cycle= 3 E= -14.550014444231  delta_E= -1.5e-07  |g|= 2.17e-05  |ddm|= 0.000717
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.94782e-05
diis-c [-1.01943031e-10  5.65958301e-04 -2.46223381e-02  1.02405638e+00]
  HOMO = -0.300737482792892  LUMO = 4.67057205361212
  mo_energy =
[-4.72606077e+00 -3.00737483e-01  4.67057205e+00  3.66184138e+01
  2.60138437e+02  3.08552547e+03]
E1 = -19.046434814740977  E_coul = 4.496420370481883
cycle= 4 E= -14.5500144442591  delta_E= -2.81e-11  |g|= 7.5e-07  |ddm|= 6.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046434814740977  E_coul = 4.496420370481883
  HOMO = -0.300737425006725  LUMO = 4.67057263060238
  mo_energy =
[-4.72605961e+00 -3.00737425e-01  4.67057263e+00  3.66184158e+01
  2.60138440e+02  3.08552548e+03]
E1 = -19.046434943496802  E_coul = 4.496420499237671
Extra cycle  E= -14.5500144442591  delta_E= -3.55e-14  |g|= 4.49e-08  |ddm|= 3.54e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92092567e+03 1.58587341e+02 2.47404989e+01 5.81705341e+00
 1.58438039e+00 1.04545043e-01]
E = -14.55001444425913
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.92566607        1
[INPUT] 0    0    [1    /1   ]  158.587340687        1
[INPUT] 0    0    [1    /1   ]  24.7404988861        1
[INPUT] 0    0    [1    /1   ]  5.81705341033        1
[INPUT] 0    0    [1    /1   ]  1.58438038944        1
[INPUT] 0    0    [1    /1   ]  0.104545042624       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.925666068891, 1.0]], [0, [158.58734068689932, 1.0]], [0, [24.740498886064948, 1.0]], [0, [5.8170534103324965, 1.0]], [0, [1.584380389440801, 1.0]], [0, [0.10454504262355588, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.92566607]
bas 1, expnt(s) = [158.58734069]
bas 2, expnt(s) = [24.74049889]
bas 3, expnt(s) = [5.81705341]
bas 4, expnt(s) = [1.58438039]
bas 5, expnt(s) = [0.10454504]
CPU time:        88.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92092567e+03 7.33074215e+02 1.58587341e+02 1.12905841e+02
 2.47404989e+01 2.80266612e+01 5.81705341e+00 9.46329357e+00
 1.58438039e+00 3.56787490e+00 1.04545043e-01 4.64507368e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986883488218459
cond(S) = 24.14976653795186
E1 = -19.049950129211684  E_coul = 4.522297003894386
init E= -14.5276531253173
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301337757446846  LUMO = 4.67385330482518
  mo_energy =
[-4.71230799e+00 -3.01337757e-01  4.67385330e+00  3.66350439e+01
  2.60163862e+02  3.08555896e+03]
E1 = -19.048875796462887  E_coul = 4.498888948356557
cycle= 1 E= -14.5499868481063  delta_E= -0.0223  |g|= 0.018  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0161619
diis-c [-2.6120727e-04  1.0000000e+00]
  HOMO = -0.300636214464856  LUMO = 4.67106420923532
  mo_energy =
[-4.72492554e+00 -3.00636214e-01  4.67106421e+00  3.66195341e+01
  2.60139720e+02  3.08552687e+03]
E1 = -19.046581204835118  E_coul = 4.496566910311422
cycle= 2 E= -14.5500142945237  delta_E= -2.74e-05  |g|= 0.00123  |ddm|= 0.00975
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00141967
diis-c [-8.93877655e-07 -7.02509735e-02  1.07025097e+00]
  HOMO = -0.300737126528151  LUMO = 4.67056673128599
  mo_energy =
[-4.72606827e+00 -3.00737127e-01  4.67056673e+00  3.66183848e+01
  2.60138378e+02  3.08552540e+03]
E1 = -19.046434599024934  E_coul = 4.496420154793963
cycle= 3 E= -14.550014444231  delta_E= -1.5e-07  |g|= 2.17e-05  |ddm|= 0.000717
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.94782e-05
diis-c [-1.01943031e-10  5.65958301e-04 -2.46223381e-02  1.02405638e+00]
  HOMO = -0.300737482792892  LUMO = 4.67057205361212
  mo_energy =
[-4.72606077e+00 -3.00737483e-01  4.67057205e+00  3.66184138e+01
  2.60138437e+02  3.08552547e+03]
E1 = -19.046434814740977  E_coul = 4.496420370481883
cycle= 4 E= -14.5500144442591  delta_E= -2.81e-11  |g|= 7.5e-07  |ddm|= 6.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046434814740977  E_coul = 4.496420370481883
  HOMO = -0.300737425006725  LUMO = 4.67057263060238
  mo_energy =
[-4.72605961e+00 -3.00737425e-01  4.67057263e+00  3.66184158e+01
  2.60138440e+02  3.08552548e+03]
E1 = -19.046434943496802  E_coul = 4.496420499237671
Extra cycle  E= -14.5500144442591  delta_E= -3.55e-14  |g|= 4.49e-08  |ddm|= 3.54e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 24.14976653795186
E1 = -19.046434943496802  E_coul = 4.496420499237671
init E= -14.5500144442591
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300737421560855  LUMO = 4.67057266052149
  mo_energy =
[-4.72605955e+00 -3.00737422e-01  4.67057266e+00  3.66184159e+01
  2.60138441e+02  3.08552548e+03]
E1 = -19.04643495066799  E_coul = 4.496420506408864
cycle= 1 E= -14.5500144442591  delta_E= 3.55e-15  |g|= 2.75e-09  |ddm|= 2.21e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04643495066799  E_coul = 4.496420506408864
  HOMO = -0.300737421344889  LUMO = 4.67057266214047
  mo_energy =
[-4.72605955e+00 -3.00737421e-01  4.67057266e+00  3.66184159e+01
  2.60138441e+02  3.08552548e+03]
E1 = -19.046434951084084  E_coul = 4.496420506824959
Extra cycle  E= -14.5500144442591  delta_E= 1.78e-15  |g|= 1.79e-10  |ddm|= 1.45e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92092567e+03 1.58587341e+02 2.47404989e+01 5.81705341e+00
 1.58438039e+00 1.04545043e-01]
grad_E = [ 1.74428789e-06  1.18112708e-04 -9.88167868e-04  1.33724120e-03
 -6.45732903e-04  4.52144766e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.64251378        1
[INPUT] 0    0    [1    /1   ]  130.602878352        1
[INPUT] 0    0    [1    /1   ]  22.4255670026        1
[INPUT] 0    0    [1    /1   ]  5.49433248781        1
[INPUT] 0    0    [1    /1   ]  1.53957606159        1
[INPUT] 0    0    [1    /1   ]  0.104564125          1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.6425137832468, 1.0]], [0, [130.60287835238194, 1.0]], [0, [22.4255670025916, 1.0]], [0, [5.49433248780939, 1.0]], [0, [1.539576061588491, 1.0]], [0, [0.10456412499998177, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.64251378]
bas 1, expnt(s) = [130.60287835]
bas 2, expnt(s) = [22.425567]
bas 3, expnt(s) = [5.49433249]
bas 4, expnt(s) = [1.53957606]
bas 5, expnt(s) = [0.10456412]
CPU time:        91.34
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92064251e+03 7.32993169e+02 1.30602878e+02 9.76066900e+01
 2.24255670e+01 2.60359002e+01 5.49433249e+00 9.06674136e+00
 1.53957606e+00 3.49193287e+00 1.04564125e-01 4.64570956e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.987002182734108
cond(S) = 27.106549336720246
E1 = -19.052062663034736  E_coul = 4.523979382844747
init E= -14.52808328019
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301139438273015  LUMO = 4.40095883088991
  mo_energy =
[-4.71198443e+00 -3.01139438e-01  4.40095883e+00  3.35313602e+01
  2.19294768e+02  2.99041226e+03]
E1 = -19.04893105567798  E_coul = 4.4982826531391
cycle= 1 E= -14.5506484025389  delta_E= -0.0226  |g|= 0.0182  |ddm|= 0.195
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.016377
diis-c [-2.68207126e-04  1.00000000e+00]
  HOMO = -0.300615286490604  LUMO = 4.39774693340426
  mo_energy =
[-4.72558157e+00 -3.00615286e-01  4.39774693e+00  3.35150462e+01
  2.19270047e+02  2.99037918e+03]
E1 = -19.04640141735772  E_coul = 4.495722950692212
cycle= 2 E= -14.5506784666655  delta_E= -3.01e-05  |g|= 0.0013  |ddm|= 0.0107
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00149294
diis-c [-1.04955772e-06 -7.11682387e-02  1.07116824e+00]
  HOMO = -0.300727858921328  LUMO = 4.39720368386391
  mo_energy =
[-4.72684115e+00 -3.00727859e-01  4.39720368e+00  3.35137779e+01
  2.19268550e+02  2.99037754e+03]
E1 = -19.046229948668763  E_coul = 4.495551304558123
cycle= 3 E= -14.5506786441106  delta_E= -1.77e-07  |g|= 2.57e-05  |ddm|= 0.000821
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.55788e-05
diis-c [-1.35326492e-10  4.78954038e-04 -2.69122343e-02  1.02643328e+00]
  HOMO = -0.300728536806422  LUMO = 4.3972073334807
  mo_energy =
[-4.72683679e+00 -3.00728537e-01  4.39720733e+00  3.35138028e+01
  2.19268606e+02  2.99037761e+03]
E1 = -19.046229636963638  E_coul = 4.495550992808623
cycle= 4 E= -14.550678644155  delta_E= -4.44e-11  |g|= 8.99e-07  |ddm|= 9.79e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046229636963638  E_coul = 4.495550992808623
  HOMO = -0.300728459890061  LUMO = 4.39720801125636
  mo_energy =
[-4.72683537e+00 -3.00728460e-01  4.39720801e+00  3.35138051e+01
  2.19268609e+02  2.99037762e+03]
E1 = -19.04622980458055  E_coul = 4.495551160425465
Extra cycle  E= -14.5506786441551  delta_E= -6.93e-14  |g|= 5.77e-08  |ddm|= 4.91e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92064251e+03 1.30602878e+02 2.24255670e+01 5.49433249e+00
 1.53957606e+00 1.04564125e-01]
E = -14.550678644155084
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.64251378        1
[INPUT] 0    0    [1    /1   ]  130.602878352        1
[INPUT] 0    0    [1    /1   ]  22.4255670026        1
[INPUT] 0    0    [1    /1   ]  5.49433248781        1
[INPUT] 0    0    [1    /1   ]  1.53957606159        1
[INPUT] 0    0    [1    /1   ]  0.104564125          1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.6425137832468, 1.0]], [0, [130.60287835238194, 1.0]], [0, [22.4255670025916, 1.0]], [0, [5.49433248780939, 1.0]], [0, [1.539576061588491, 1.0]], [0, [0.10456412499998177, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.64251378]
bas 1, expnt(s) = [130.60287835]
bas 2, expnt(s) = [22.425567]
bas 3, expnt(s) = [5.49433249]
bas 4, expnt(s) = [1.53957606]
bas 5, expnt(s) = [0.10456412]
CPU time:        91.97
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92064251e+03 7.32993169e+02 1.30602878e+02 9.76066900e+01
 2.24255670e+01 2.60359002e+01 5.49433249e+00 9.06674136e+00
 1.53957606e+00 3.49193287e+00 1.04564125e-01 4.64570956e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.987002182734108
cond(S) = 27.106549336720246
E1 = -19.052062663034736  E_coul = 4.523979382844747
init E= -14.52808328019
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301139438273015  LUMO = 4.40095883088991
  mo_energy =
[-4.71198443e+00 -3.01139438e-01  4.40095883e+00  3.35313602e+01
  2.19294768e+02  2.99041226e+03]
E1 = -19.04893105567798  E_coul = 4.4982826531391
cycle= 1 E= -14.5506484025389  delta_E= -0.0226  |g|= 0.0182  |ddm|= 0.195
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.016377
diis-c [-2.68207126e-04  1.00000000e+00]
  HOMO = -0.300615286490604  LUMO = 4.39774693340426
  mo_energy =
[-4.72558157e+00 -3.00615286e-01  4.39774693e+00  3.35150462e+01
  2.19270047e+02  2.99037918e+03]
E1 = -19.04640141735772  E_coul = 4.495722950692212
cycle= 2 E= -14.5506784666655  delta_E= -3.01e-05  |g|= 0.0013  |ddm|= 0.0107
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00149294
diis-c [-1.04955772e-06 -7.11682387e-02  1.07116824e+00]
  HOMO = -0.300727858921328  LUMO = 4.39720368386391
  mo_energy =
[-4.72684115e+00 -3.00727859e-01  4.39720368e+00  3.35137779e+01
  2.19268550e+02  2.99037754e+03]
E1 = -19.046229948668763  E_coul = 4.495551304558123
cycle= 3 E= -14.5506786441106  delta_E= -1.77e-07  |g|= 2.57e-05  |ddm|= 0.000821
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.55788e-05
diis-c [-1.35326492e-10  4.78954038e-04 -2.69122343e-02  1.02643328e+00]
  HOMO = -0.300728536806422  LUMO = 4.3972073334807
  mo_energy =
[-4.72683679e+00 -3.00728537e-01  4.39720733e+00  3.35138028e+01
  2.19268606e+02  2.99037761e+03]
E1 = -19.046229636963638  E_coul = 4.495550992808623
cycle= 4 E= -14.550678644155  delta_E= -4.44e-11  |g|= 8.99e-07  |ddm|= 9.79e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046229636963638  E_coul = 4.495550992808623
  HOMO = -0.300728459890061  LUMO = 4.39720801125636
  mo_energy =
[-4.72683537e+00 -3.00728460e-01  4.39720801e+00  3.35138051e+01
  2.19268609e+02  2.99037762e+03]
E1 = -19.04622980458055  E_coul = 4.495551160425465
Extra cycle  E= -14.5506786441551  delta_E= -6.93e-14  |g|= 5.77e-08  |ddm|= 4.91e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 27.106549336720246
E1 = -19.04622980458055  E_coul = 4.495551160425465
init E= -14.5506786441551
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300728455032183  LUMO = 4.39720804834159
  mo_energy =
[-4.72683529e+00 -3.00728455e-01  4.39720805e+00  3.35138052e+01
  2.19268609e+02  2.99037762e+03]
E1 = -19.046229814500474  E_coul = 4.4955511703453945
cycle= 1 E= -14.5506786441551  delta_E= 3.55e-15  |g|= 3.85e-09  |ddm|= 3.27e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.046229814500474  E_coul = 4.4955511703453945
  HOMO = -0.300728454707618  LUMO = 4.39720805047622
  mo_energy =
[-4.72683528e+00 -3.00728455e-01  4.39720805e+00  3.35138052e+01
  2.19268609e+02  2.99037762e+03]
E1 = -19.04622981511505  E_coul = 4.495551170959977
Extra cycle  E= -14.5506786441551  delta_E= 7.11e-15  |g|= 2.76e-10  |ddm|= 2.29e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92064251e+03 1.30602878e+02 2.24255670e+01 5.49433249e+00
 1.53957606e+00 1.04564125e-01]
grad_E = [ 3.62443857e-06  2.59464201e-05 -5.83972667e-04  4.92166525e-04
  6.64848141e-04  7.66572967e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74414989        1
[INPUT] 0    0    [1    /1   ]  140.540825451        1
[INPUT] 0    0    [1    /1   ]  23.9886360134        1
[INPUT] 0    0    [1    /1   ]  5.71807712029        1
[INPUT] 0    0    [1    /1   ]  1.56775344636        1
[INPUT] 0    0    [1    /1   ]  0.104537415804       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7441498912892, 1.0]], [0, [140.54082545101792, 1.0]], [0, [23.988636013422912, 1.0]], [0, [5.718077120291434, 1.0]], [0, [1.5677534463587186, 1.0]], [0, [0.10453741580421795, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74414989]
bas 1, expnt(s) = [140.54082545]
bas 2, expnt(s) = [23.98863601]
bas 3, expnt(s) = [5.71807712]
bas 4, expnt(s) = [1.56775345]
bas 5, expnt(s) = [0.10453742]
CPU time:        94.46
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074415e+03 7.33022261e+02 1.40540825e+02 1.03125698e+02
 2.39886360e+01 2.73854064e+01 5.71807712e+00 9.34227249e+00
 1.56775345e+00 3.53975617e+00 1.04537416e-01 4.64481953e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9869243667432293
cond(S) = 25.53399958914663
E1 = -19.051280532971955  E_coul = 4.522749621890756
init E= -14.5285309110812
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301289328045908  LUMO = 4.57765627016925
  mo_energy =
[-4.71261288e+00 -3.01289328e-01  4.57765627e+00  3.56291500e+01
  2.36518476e+02  3.02636745e+03]
E1 = -19.04950022699734  E_coul = 4.49853995156465
cycle= 1 E= -14.5509602754327  delta_E= -0.0224  |g|= 0.0179  |ddm|= 0.186
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0157393
diis-c [-2.47724844e-04  1.00000000e+00]
  HOMO = -0.300651923986443  LUMO = 4.57476796609281
  mo_energy =
[-4.72557151e+00 -3.00651924e-01  4.57476797e+00  3.56133185e+01
  2.36494469e+02  3.02633608e+03]
E1 = -19.047131593090903  E_coul = 4.496142838701851
cycle= 2 E= -14.5509887543891  delta_E= -2.85e-05  |g|= 0.00126  |ddm|= 0.0101
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00145475
diis-c [-8.57128021e-07 -7.69114780e-02  1.07691148e+00]
  HOMO = -0.30075747260433  LUMO = 4.57425494208771
  mo_energy =
[-4.72675783e+00 -3.00757473e-01  4.57425494e+00  3.56121304e+01
  2.36493077e+02  3.02633456e+03]
E1 = -19.046976452655272  E_coul = 4.495987538042499
cycle= 3 E= -14.5509889146128  delta_E= -1.6e-07  |g|= 1.8e-05  |ddm|= 0.000757
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.42439e-05
diis-c [-1.21390080e-10  4.97306284e-04 -1.91297953e-02  1.01863249e+00]
  HOMO = -0.300757315803951  LUMO = 4.57426277430216
  mo_energy =
[-4.72674422e+00 -3.00757316e-01  4.57426277e+00  3.56121656e+01
  2.36493143e+02  3.02633465e+03]
E1 = -19.046977416648456  E_coul = 4.495988502019645
cycle= 4 E= -14.5509889146288  delta_E= -1.6e-11  |g|= 7.97e-07  |ddm|= 4.17e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046977416648456  E_coul = 4.495988502019645
  HOMO = -0.300757249935226  LUMO = 4.57426339297404
  mo_energy =
[-4.72674296e+00 -3.00757250e-01  4.57426339e+00  3.56121677e+01
  2.36493147e+02  3.02633465e+03]
E1 = -19.046977560100178  E_coul = 4.495988645471331
Extra cycle  E= -14.5509889146288  delta_E= -3.55e-14  |g|= 4.94e-08  |ddm|= 4.09e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92074415e+03 1.40540825e+02 2.39886360e+01 5.71807712e+00
 1.56775345e+00 1.04537416e-01]
E = -14.550988914628846
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74414989        1
[INPUT] 0    0    [1    /1   ]  140.540825451        1
[INPUT] 0    0    [1    /1   ]  23.9886360134        1
[INPUT] 0    0    [1    /1   ]  5.71807712029        1
[INPUT] 0    0    [1    /1   ]  1.56775344636        1
[INPUT] 0    0    [1    /1   ]  0.104537415804       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7441498912892, 1.0]], [0, [140.54082545101792, 1.0]], [0, [23.988636013422912, 1.0]], [0, [5.718077120291434, 1.0]], [0, [1.5677534463587186, 1.0]], [0, [0.10453741580421795, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74414989]
bas 1, expnt(s) = [140.54082545]
bas 2, expnt(s) = [23.98863601]
bas 3, expnt(s) = [5.71807712]
bas 4, expnt(s) = [1.56775345]
bas 5, expnt(s) = [0.10453742]
CPU time:        95.12
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074415e+03 7.33022261e+02 1.40540825e+02 1.03125698e+02
 2.39886360e+01 2.73854064e+01 5.71807712e+00 9.34227249e+00
 1.56775345e+00 3.53975617e+00 1.04537416e-01 4.64481953e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9869243667432293
cond(S) = 25.53399958914663
E1 = -19.051280532971955  E_coul = 4.522749621890756
init E= -14.5285309110812
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301289328045908  LUMO = 4.57765627016925
  mo_energy =
[-4.71261288e+00 -3.01289328e-01  4.57765627e+00  3.56291500e+01
  2.36518476e+02  3.02636745e+03]
E1 = -19.04950022699734  E_coul = 4.49853995156465
cycle= 1 E= -14.5509602754327  delta_E= -0.0224  |g|= 0.0179  |ddm|= 0.186
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0157393
diis-c [-2.47724844e-04  1.00000000e+00]
  HOMO = -0.300651923986443  LUMO = 4.57476796609281
  mo_energy =
[-4.72557151e+00 -3.00651924e-01  4.57476797e+00  3.56133185e+01
  2.36494469e+02  3.02633608e+03]
E1 = -19.047131593090903  E_coul = 4.496142838701851
cycle= 2 E= -14.5509887543891  delta_E= -2.85e-05  |g|= 0.00126  |ddm|= 0.0101
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00145475
diis-c [-8.57128021e-07 -7.69114780e-02  1.07691148e+00]
  HOMO = -0.30075747260433  LUMO = 4.57425494208771
  mo_energy =
[-4.72675783e+00 -3.00757473e-01  4.57425494e+00  3.56121304e+01
  2.36493077e+02  3.02633456e+03]
E1 = -19.046976452655272  E_coul = 4.495987538042499
cycle= 3 E= -14.5509889146128  delta_E= -1.6e-07  |g|= 1.8e-05  |ddm|= 0.000757
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.42439e-05
diis-c [-1.21390080e-10  4.97306284e-04 -1.91297953e-02  1.01863249e+00]
  HOMO = -0.300757315803951  LUMO = 4.57426277430216
  mo_energy =
[-4.72674422e+00 -3.00757316e-01  4.57426277e+00  3.56121656e+01
  2.36493143e+02  3.02633465e+03]
E1 = -19.046977416648456  E_coul = 4.495988502019645
cycle= 4 E= -14.5509889146288  delta_E= -1.6e-11  |g|= 7.97e-07  |ddm|= 4.17e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.046977416648456  E_coul = 4.495988502019645
  HOMO = -0.300757249935226  LUMO = 4.57426339297404
  mo_energy =
[-4.72674296e+00 -3.00757250e-01  4.57426339e+00  3.56121677e+01
  2.36493147e+02  3.02633465e+03]
E1 = -19.046977560100178  E_coul = 4.495988645471331
Extra cycle  E= -14.5509889146288  delta_E= -3.55e-14  |g|= 4.94e-08  |ddm|= 4.09e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 25.53399958914663
E1 = -19.046977560100178  E_coul = 4.495988645471331
init E= -14.5509889146288
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30075724591457  LUMO = 4.57426342552474
  mo_energy =
[-4.72674289e+00 -3.00757246e-01  4.57426343e+00  3.56121678e+01
  2.36493147e+02  3.02633465e+03]
E1 = -19.04697756826611  E_coul = 4.4959886536372595
cycle= 1 E= -14.5509889146289  delta_E= -7.11e-15  |g|= 3.18e-09  |ddm|= 2.63e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04697756826611  E_coul = 4.4959886536372595
  HOMO = -0.300757245655369  LUMO = 4.57426342732152
  mo_energy =
[-4.72674288e+00 -3.00757246e-01  4.57426343e+00  3.56121678e+01
  2.36493147e+02  3.02633465e+03]
E1 = -19.046977568752325  E_coul = 4.495988654123487
Extra cycle  E= -14.5509889146288  delta_E= 1.42e-14  |g|= 2.19e-10  |ddm|= 1.78e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92074415e+03 1.40540825e+02 2.39886360e+01 5.71807712e+00
 1.56775345e+00 1.04537416e-01]
grad_E = [ 3.03552259e-06  2.70695129e-05 -2.47323651e-04 -2.53180741e-05
  3.74861309e-04 -4.64634441e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74141015        1
[INPUT] 0    0    [1    /1   ]  140.1949259          1
[INPUT] 0    0    [1    /1   ]  24.479300262         1
[INPUT] 0    0    [1    /1   ]  5.8126916123         1
[INPUT] 0    0    [1    /1   ]  1.57974931748        1
[INPUT] 0    0    [1    /1   ]  0.104541309735       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7414101477307, 1.0]], [0, [140.19492589958094, 1.0]], [0, [24.47930026201006, 1.0]], [0, [5.812691612303572, 1.0]], [0, [1.5797493174797956, 1.0]], [0, [0.10454130973525946, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74141015]
bas 1, expnt(s) = [140.1949259]
bas 2, expnt(s) = [24.47930026]
bas 3, expnt(s) = [5.81269161]
bas 4, expnt(s) = [1.57974932]
bas 5, expnt(s) = [0.10454131]
CPU time:        97.80
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074141e+03 7.33021476e+02 1.40194926e+02 1.02935279e+02
 2.44793003e+01 2.78044478e+01 5.81269161e+00 9.45797117e+00
 1.57974932e+00 3.56005048e+00 1.04541310e-01 4.64494929e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9868942236411975
cond(S) = 25.39907119847173
E1 = -19.0508021194237  E_coul = 4.522375754828294
init E= -14.5284263645954
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.301338072536422  LUMO = 4.65183775890061
  mo_energy =
[-4.71278917e+00 -3.01338073e-01  4.65183776e+00  3.63724025e+01
  2.38032315e+02  3.02694927e+03]
E1 = -19.049790104268325  E_coul = 4.49876021093873
cycle= 1 E= -14.5510298933296  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156574
diis-c [-2.45155401e-04  1.00000000e+00]
  HOMO = -0.300654277712951  LUMO = 4.64907734765851
  mo_energy =
[-4.72549351e+00 -3.00654278e-01  4.64907735e+00  3.63567628e+01
  2.38008794e+02  3.02691883e+03]
E1 = -19.04748086108341  E_coul = 4.4964232082817315
cycle= 2 E= -14.5510576528017  delta_E= -2.78e-05  |g|= 0.00124  |ddm|= 0.00983
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00143855
diis-c [-8.13264549e-07 -7.72384459e-02  1.07723845e+00]
  HOMO = -0.300756821830748  LUMO = 4.64857593424917
  mo_energy =
[-4.72665081e+00 -3.00756822e-01  4.64857593e+00  3.63556028e+01
  2.38007438e+02  3.02691735e+03]
E1 = -19.047332058005697  E_coul = 4.496274252307262
cycle= 3 E= -14.5510578056984  delta_E= -1.53e-07  |g|= 1.69e-05  |ddm|= 0.00073
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.2296e-05
diis-c [-1.21909824e-10  4.54655678e-04 -1.74166363e-02  1.01696198e+00]
  HOMO = -0.300756548155593  LUMO = 4.64858438020619
  mo_energy =
[-4.72663596e+00 -3.00756548e-01  4.64858438e+00  3.63556394e+01
  2.38007506e+02  3.02691744e+03]
E1 = -19.047333192200536  E_coul = 4.496275386488927
cycle= 4 E= -14.5510578057116  delta_E= -1.32e-11  |g|= 7.75e-07  |ddm|= 3.51e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047333192200536  E_coul = 4.496275386488927
  HOMO = -0.300756484570458  LUMO = 4.64858498944979
  mo_energy =
[-4.72663473e+00 -3.00756485e-01  4.64858499e+00  3.63556414e+01
  2.38007509e+02  3.02691744e+03]
E1 = -19.047333329980397  E_coul = 4.496275524268737
Extra cycle  E= -14.5510578057117  delta_E= -5.15e-14  |g|= 4.75e-08  |ddm|= 3.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92074141e+03 1.40194926e+02 2.44793003e+01 5.81269161e+00
 1.57974932e+00 1.04541310e-01]
E = -14.551057805711661
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:30:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74141015        1
[INPUT] 0    0    [1    /1   ]  140.1949259          1
[INPUT] 0    0    [1    /1   ]  24.479300262         1
[INPUT] 0    0    [1    /1   ]  5.8126916123         1
[INPUT] 0    0    [1    /1   ]  1.57974931748        1
[INPUT] 0    0    [1    /1   ]  0.104541309735       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7414101477307, 1.0]], [0, [140.19492589958094, 1.0]], [0, [24.47930026201006, 1.0]], [0, [5.812691612303572, 1.0]], [0, [1.5797493174797956, 1.0]], [0, [0.10454130973525946, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74141015]
bas 1, expnt(s) = [140.1949259]
bas 2, expnt(s) = [24.47930026]
bas 3, expnt(s) = [5.81269161]
bas 4, expnt(s) = [1.57974932]
bas 5, expnt(s) = [0.10454131]
CPU time:        98.46
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074141e+03 7.33021476e+02 1.40194926e+02 1.02935279e+02
 2.44793003e+01 2.78044478e+01 5.81269161e+00 9.45797117e+00
 1.57974932e+00 3.56005048e+00 1.04541310e-01 4.64494929e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9868942236411975
cond(S) = 25.39907119847173
E1 = -19.0508021194237  E_coul = 4.522375754828294
init E= -14.5284263645954
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301338072536422  LUMO = 4.65183775890061
  mo_energy =
[-4.71278917e+00 -3.01338073e-01  4.65183776e+00  3.63724025e+01
  2.38032315e+02  3.02694927e+03]
E1 = -19.049790104268325  E_coul = 4.49876021093873
cycle= 1 E= -14.5510298933296  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156574
diis-c [-2.45155401e-04  1.00000000e+00]
  HOMO = -0.300654277712951  LUMO = 4.64907734765851
  mo_energy =
[-4.72549351e+00 -3.00654278e-01  4.64907735e+00  3.63567628e+01
  2.38008794e+02  3.02691883e+03]
E1 = -19.04748086108341  E_coul = 4.4964232082817315
cycle= 2 E= -14.5510576528017  delta_E= -2.78e-05  |g|= 0.00124  |ddm|= 0.00983
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00143855
diis-c [-8.13264549e-07 -7.72384459e-02  1.07723845e+00]
  HOMO = -0.300756821830748  LUMO = 4.64857593424917
  mo_energy =
[-4.72665081e+00 -3.00756822e-01  4.64857593e+00  3.63556028e+01
  2.38007438e+02  3.02691735e+03]
E1 = -19.047332058005697  E_coul = 4.496274252307262
cycle= 3 E= -14.5510578056984  delta_E= -1.53e-07  |g|= 1.69e-05  |ddm|= 0.00073
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.2296e-05
diis-c [-1.21909824e-10  4.54655678e-04 -1.74166363e-02  1.01696198e+00]
  HOMO = -0.300756548155593  LUMO = 4.64858438020619
  mo_energy =
[-4.72663596e+00 -3.00756548e-01  4.64858438e+00  3.63556394e+01
  2.38007506e+02  3.02691744e+03]
E1 = -19.047333192200536  E_coul = 4.496275386488927
cycle= 4 E= -14.5510578057116  delta_E= -1.32e-11  |g|= 7.75e-07  |ddm|= 3.51e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047333192200536  E_coul = 4.496275386488927
  HOMO = -0.300756484570458  LUMO = 4.64858498944979
  mo_energy =
[-4.72663473e+00 -3.00756485e-01  4.64858499e+00  3.63556414e+01
  2.38007509e+02  3.02691744e+03]
E1 = -19.047333329980397  E_coul = 4.496275524268737
Extra cycle  E= -14.5510578057117  delta_E= -5.15e-14  |g|= 4.75e-08  |ddm|= 3.9e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 25.39907119847173
E1 = -19.047333329980397  E_coul = 4.496275524268737
init E= -14.5510578057117
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.300756480746848  LUMO = 4.64858502100673
  mo_energy =
[-4.72663466e+00 -3.00756481e-01  4.64858502e+00  3.63556415e+01
  2.38007509e+02  3.02691744e+03]
E1 = -19.047333337705954  E_coul = 4.496275531994302
cycle= 1 E= -14.5510578057117  delta_E= 8.88e-15  |g|= 3.02e-09  |ddm|= 2.48e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047333337705954  E_coul = 4.496275531994302
  HOMO = -0.300756480503694  LUMO = 4.64858502272006
  mo_energy =
[-4.72663466e+00 -3.00756481e-01  4.64858502e+00  3.63556415e+01
  2.38007509e+02  3.02691744e+03]
E1 = -19.04733333815898  E_coul = 4.4962755324473225
Extra cycle  E= -14.5510578057117  delta_E= -7.11e-15  |g|= 2.05e-10  |ddm|= 1.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92074141e+03 1.40194926e+02 2.44793003e+01 5.81269161e+00
 1.57974932e+00 1.04541310e-01]
grad_E = [ 3.16428432e-06  6.19826160e-07 -7.12267541e-06 -5.77442143e-05
 -1.81995155e-04 -2.26000326e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:31:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74708299        1
[INPUT] 0    0    [1    /1   ]  140.744709454        1
[INPUT] 0    0    [1    /1   ]  24.6012076401        1
[INPUT] 0    0    [1    /1   ]  5.83954675845        1
[INPUT] 0    0    [1    /1   ]  1.58424976447        1
[INPUT] 0    0    [1    /1   ]  0.104545215012       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7470829945566, 1.0]], [0, [140.74470945360366, 1.0]], [0, [24.60120764012543, 1.0]], [0, [5.839546758450828, 1.0]], [0, [1.5842497644722144, 1.0]], [0, [0.10454521501164105, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74708299]
bas 1, expnt(s) = [140.74470945]
bas 2, expnt(s) = [24.60120764]
bas 3, expnt(s) = [5.83954676]
bas 4, expnt(s) = [1.58424976]
bas 5, expnt(s) = [0.10454522]
CPU time:       101.10
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074708e+03 7.33023100e+02 1.40744709e+02 1.03237881e+02
 2.46012076e+01 2.79082333e+01 5.83954676e+00 9.49072478e+00
 1.58424976e+00 3.56765428e+00 1.04545215e-01 4.64507943e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986885502839465
cond(S) = 25.348653678282417
E1 = -19.050738843322087  E_coul = 4.522291110613455
init E= -14.5284477327086
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301353188862234  LUMO = 4.67620823394288
  mo_energy =
[-4.71281860e+00 -3.01353189e-01  4.67620823e+00  3.65730900e+01
  2.39158771e+02  3.02909400e+03]
E1 = -19.049989908115563  E_coul = 4.498958216795252
cycle= 1 E= -14.5510316913203  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156321
diis-c [-2.44362626e-04  1.00000000e+00]
  HOMO = -0.30065198966616  LUMO = 4.67350790204807
  mo_energy =
[-4.72539757e+00 -3.00651990e-01  4.67350790e+00  3.65576067e+01
  2.39135497e+02  3.02906389e+03]
E1 = -19.047703298316055  E_coul = 4.496644108462738
cycle= 2 E= -14.5510591898533  delta_E= -2.75e-05  |g|= 0.00123  |ddm|= 0.00975
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00143203
diis-c [-7.98921233e-07 -7.72265207e-02  1.07722652e+00]
  HOMO = -0.300753487087514  LUMO = 4.673011158371
  mo_energy =
[-4.72654356e+00 -3.00753487e-01  4.67301116e+00  3.65564594e+01
  2.39134159e+02  3.02906243e+03]
E1 = -19.04755669469399  E_coul = 4.496497354392914
cycle= 3 E= -14.5510593403011  delta_E= -1.5e-07  |g|= 1.66e-05  |ddm|= 0.000722
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.17788e-05
diis-c [-1.19717113e-10  4.52628398e-04 -1.70902861e-02  1.01663766e+00]
  HOMO = -0.300753189380183  LUMO = 4.67301971877097
  mo_energy =
[-4.72652850e+00 -3.00753189e-01  4.67301972e+00  3.65564962e+01
  2.39134227e+02  3.02906252e+03]
E1 = -19.047557861092667  E_coul = 4.496498520779047
cycle= 4 E= -14.5510593403136  delta_E= -1.25e-11  |g|= 7.65e-07  |ddm|= 3.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047557861092667  E_coul = 4.496498520779047
  HOMO = -0.300753126956053  LUMO = 4.67302032122289
  mo_energy =
[-4.72652728e+00 -3.00753127e-01  4.67302032e+00  3.65564982e+01
  2.39134230e+02  3.02906252e+03]
E1 = -19.047557996285377  E_coul = 4.496498655971728
Extra cycle  E= -14.5510593403136  delta_E= -3.02e-14  |g|= 4.66e-08  |ddm|= 3.82e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92074708e+03 1.40744709e+02 2.46012076e+01 5.83954676e+00
 1.58424976e+00 1.04545215e-01]
E = -14.55105934031365
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:31:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74708299        1
[INPUT] 0    0    [1    /1   ]  140.744709454        1
[INPUT] 0    0    [1    /1   ]  24.6012076401        1
[INPUT] 0    0    [1    /1   ]  5.83954675845        1
[INPUT] 0    0    [1    /1   ]  1.58424976447        1
[INPUT] 0    0    [1    /1   ]  0.104545215012       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7470829945566, 1.0]], [0, [140.74470945360366, 1.0]], [0, [24.60120764012543, 1.0]], [0, [5.839546758450828, 1.0]], [0, [1.5842497644722144, 1.0]], [0, [0.10454521501164105, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74708299]
bas 1, expnt(s) = [140.74470945]
bas 2, expnt(s) = [24.60120764]
bas 3, expnt(s) = [5.83954676]
bas 4, expnt(s) = [1.58424976]
bas 5, expnt(s) = [0.10454522]
CPU time:       101.78
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074708e+03 7.33023100e+02 1.40744709e+02 1.03237881e+02
 2.46012076e+01 2.79082333e+01 5.83954676e+00 9.49072478e+00
 1.58424976e+00 3.56765428e+00 1.04545215e-01 4.64507943e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986885502839465
cond(S) = 25.348653678282417
E1 = -19.050738843322087  E_coul = 4.522291110613455
init E= -14.5284477327086
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301353188862234  LUMO = 4.67620823394288
  mo_energy =
[-4.71281860e+00 -3.01353189e-01  4.67620823e+00  3.65730900e+01
  2.39158771e+02  3.02909400e+03]
E1 = -19.049989908115563  E_coul = 4.498958216795252
cycle= 1 E= -14.5510316913203  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156321
diis-c [-2.44362626e-04  1.00000000e+00]
  HOMO = -0.30065198966616  LUMO = 4.67350790204807
  mo_energy =
[-4.72539757e+00 -3.00651990e-01  4.67350790e+00  3.65576067e+01
  2.39135497e+02  3.02906389e+03]
E1 = -19.047703298316055  E_coul = 4.496644108462738
cycle= 2 E= -14.5510591898533  delta_E= -2.75e-05  |g|= 0.00123  |ddm|= 0.00975
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00143203
diis-c [-7.98921233e-07 -7.72265207e-02  1.07722652e+00]
  HOMO = -0.300753487087514  LUMO = 4.673011158371
  mo_energy =
[-4.72654356e+00 -3.00753487e-01  4.67301116e+00  3.65564594e+01
  2.39134159e+02  3.02906243e+03]
E1 = -19.04755669469399  E_coul = 4.496497354392914
cycle= 3 E= -14.5510593403011  delta_E= -1.5e-07  |g|= 1.66e-05  |ddm|= 0.000722
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.17788e-05
diis-c [-1.19717113e-10  4.52628398e-04 -1.70902861e-02  1.01663766e+00]
  HOMO = -0.300753189380183  LUMO = 4.67301971877097
  mo_energy =
[-4.72652850e+00 -3.00753189e-01  4.67301972e+00  3.65564962e+01
  2.39134227e+02  3.02906252e+03]
E1 = -19.047557861092667  E_coul = 4.496498520779047
cycle= 4 E= -14.5510593403136  delta_E= -1.25e-11  |g|= 7.65e-07  |ddm|= 3.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047557861092667  E_coul = 4.496498520779047
  HOMO = -0.300753126956053  LUMO = 4.67302032122289
  mo_energy =
[-4.72652728e+00 -3.00753127e-01  4.67302032e+00  3.65564982e+01
  2.39134230e+02  3.02906252e+03]
E1 = -19.047557996285377  E_coul = 4.496498655971728
Extra cycle  E= -14.5510593403136  delta_E= -3.02e-14  |g|= 4.66e-08  |ddm|= 3.82e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 25.348653678282417
E1 = -19.047557996285377  E_coul = 4.496498655971728
init E= -14.5510593403136
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300753123219058  LUMO = 4.67302035228723
  mo_energy =
[-4.72652722e+00 -3.00753123e-01  4.67302035e+00  3.65564983e+01
  2.39134230e+02  3.02906252e+03]
E1 = -19.047558003830254  E_coul = 4.496498663516594
cycle= 1 E= -14.5510593403137  delta_E= -1.07e-14  |g|= 2.95e-09  |ddm|= 2.41e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047558003830254  E_coul = 4.496498663516594
  HOMO = -0.300753122982494  LUMO = 4.67302035396544
  mo_energy =
[-4.72652722e+00 -3.00753123e-01  4.67302035e+00  3.65564983e+01
  2.39134230e+02  3.02906252e+03]
E1 = -19.047558004270474  E_coul = 4.496498663956805
Extra cycle  E= -14.5510593403137  delta_E= -8.88e-15  |g|= 2e-10  |ddm|= 1.6e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92074708e+03 1.40744709e+02 2.46012076e+01 5.83954676e+00
 1.58424976e+00 1.04545215e-01]
grad_E = [ 3.13721523e-06  2.83406885e-07 -4.50142103e-06  3.44411469e-05
 -1.64823678e-04  5.85933712e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:31:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74719658        1
[INPUT] 0    0    [1    /1   ]  140.755203064        1
[INPUT] 0    0    [1    /1   ]  24.6094252678        1
[INPUT] 0    0    [1    /1   ]  5.84132951206        1
[INPUT] 0    0    [1    /1   ]  1.58482450563        1
[INPUT] 0    0    [1    /1   ]  0.104543656006       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7471965762854, 1.0]], [0, [140.75520306371737, 1.0]], [0, [24.609425267764266, 1.0]], [0, [5.841329512059308, 1.0]], [0, [1.5848245056273476, 1.0]], [0, [0.10454365600576004, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74719658]
bas 1, expnt(s) = [140.75520306]
bas 2, expnt(s) = [24.60942527]
bas 3, expnt(s) = [5.84132951]
bas 4, expnt(s) = [1.58482451]
bas 5, expnt(s) = [0.10454366]
CPU time:       104.41
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074720e+03 7.33023133e+02 1.40755203e+02 1.03243654e+02
 2.46094253e+01 2.79152247e+01 5.84132951e+00 9.49289776e+00
 1.58482451e+00 3.56862495e+00 1.04543656e-01 4.64502747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9868849710434264
cond(S) = 25.351491922928883
E1 = -19.05072125239105  E_coul = 4.522276265654114
init E= -14.5284449867369
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301356411465803  LUMO = 4.67849527655772
  mo_energy =
[-4.71282296e+00 -3.01356411e-01  4.67849528e+00  3.65875407e+01
  2.39204827e+02  3.02915609e+03]
E1 = -19.050027631730583  E_coul = 4.498995884834913
cycle= 1 E= -14.5510317468957  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156343
diis-c [-2.44429972e-04  1.00000000e+00]
  HOMO = -0.300653051411936  LUMO = 4.67580942501429
  mo_energy =
[-4.72537769e+00 -3.00653051e-01  4.67580943e+00  3.65720982e+01
  2.39181605e+02  3.02912605e+03]
E1 = -19.047744820908957  E_coul = 4.496685594121184
cycle= 2 E= -14.5510592267878  delta_E= -2.75e-05  |g|= 0.00123  |ddm|= 0.00974
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0014316
diis-c [-7.97669557e-07 -7.72157058e-02  1.07721571e+00]
  HOMO = -0.300754436269316  LUMO = 4.67531368047961
  mo_energy =
[-4.72652173e+00 -3.00754436e-01  4.67531368e+00  3.65709542e+01
  2.39180271e+02  3.02912460e+03]
E1 = -19.047598532403782  E_coul = 4.496539155317246
cycle= 3 E= -14.5510593770865  delta_E= -1.5e-07  |g|= 1.65e-05  |ddm|= 0.000721
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.17577e-05
diis-c [-1.19278805e-10  4.54366903e-04 -1.71011032e-02  1.01664674e+00]
  HOMO = -0.300754138058952  LUMO = 4.67532224037472
  mo_energy =
[-4.72650667e+00 -3.00754138e-01  4.67532224e+00  3.65709909e+01
  2.39180339e+02  3.02912468e+03]
E1 = -19.047599698620644  E_coul = 4.49654032152162
cycle= 4 E= -14.551059377099  delta_E= -1.25e-11  |g|= 7.62e-07  |ddm|= 3.36e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047599698620644  E_coul = 4.49654032152162
  HOMO = -0.300754075771189  LUMO = 4.67532284130848
  mo_energy =
[-4.72650545e+00 -3.00754076e-01  4.67532284e+00  3.65709930e+01
  2.39180342e+02  3.02912469e+03]
E1 = -19.047599833415287  E_coul = 4.496540456316233
Extra cycle  E= -14.5510593770991  delta_E= -3.2e-14  |g|= 4.65e-08  |ddm|= 3.81e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92074720e+03 1.40755203e+02 2.46094253e+01 5.84132951e+00
 1.58482451e+00 1.04543656e-01]
E = -14.551059377099055
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:31:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74719658        1
[INPUT] 0    0    [1    /1   ]  140.755203064        1
[INPUT] 0    0    [1    /1   ]  24.6094252678        1
[INPUT] 0    0    [1    /1   ]  5.84132951206        1
[INPUT] 0    0    [1    /1   ]  1.58482450563        1
[INPUT] 0    0    [1    /1   ]  0.104543656006       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7471965762854, 1.0]], [0, [140.75520306371737, 1.0]], [0, [24.609425267764266, 1.0]], [0, [5.841329512059308, 1.0]], [0, [1.5848245056273476, 1.0]], [0, [0.10454365600576004, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74719658]
bas 1, expnt(s) = [140.75520306]
bas 2, expnt(s) = [24.60942527]
bas 3, expnt(s) = [5.84132951]
bas 4, expnt(s) = [1.58482451]
bas 5, expnt(s) = [0.10454366]
CPU time:       105.10
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074720e+03 7.33023133e+02 1.40755203e+02 1.03243654e+02
 2.46094253e+01 2.79152247e+01 5.84132951e+00 9.49289776e+00
 1.58482451e+00 3.56862495e+00 1.04543656e-01 4.64502747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9868849710434264
cond(S) = 25.351491922928883
E1 = -19.05072125239105  E_coul = 4.522276265654114
init E= -14.5284449867369
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301356411465803  LUMO = 4.67849527655772
  mo_energy =
[-4.71282296e+00 -3.01356411e-01  4.67849528e+00  3.65875407e+01
  2.39204827e+02  3.02915609e+03]
E1 = -19.050027631730583  E_coul = 4.498995884834913
cycle= 1 E= -14.5510317468957  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156343
diis-c [-2.44429972e-04  1.00000000e+00]
  HOMO = -0.300653051411936  LUMO = 4.67580942501429
  mo_energy =
[-4.72537769e+00 -3.00653051e-01  4.67580943e+00  3.65720982e+01
  2.39181605e+02  3.02912605e+03]
E1 = -19.047744820908957  E_coul = 4.496685594121184
cycle= 2 E= -14.5510592267878  delta_E= -2.75e-05  |g|= 0.00123  |ddm|= 0.00974
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0014316
diis-c [-7.97669557e-07 -7.72157058e-02  1.07721571e+00]
  HOMO = -0.300754436269316  LUMO = 4.67531368047961
  mo_energy =
[-4.72652173e+00 -3.00754436e-01  4.67531368e+00  3.65709542e+01
  2.39180271e+02  3.02912460e+03]
E1 = -19.047598532403782  E_coul = 4.496539155317246
cycle= 3 E= -14.5510593770865  delta_E= -1.5e-07  |g|= 1.65e-05  |ddm|= 0.000721
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.17577e-05
diis-c [-1.19278805e-10  4.54366903e-04 -1.71011032e-02  1.01664674e+00]
  HOMO = -0.300754138058952  LUMO = 4.67532224037472
  mo_energy =
[-4.72650667e+00 -3.00754138e-01  4.67532224e+00  3.65709909e+01
  2.39180339e+02  3.02912468e+03]
E1 = -19.047599698620644  E_coul = 4.49654032152162
cycle= 4 E= -14.551059377099  delta_E= -1.25e-11  |g|= 7.62e-07  |ddm|= 3.36e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.047599698620644  E_coul = 4.49654032152162
  HOMO = -0.300754075771189  LUMO = 4.67532284130848
  mo_energy =
[-4.72650545e+00 -3.00754076e-01  4.67532284e+00  3.65709930e+01
  2.39180342e+02  3.02912469e+03]
E1 = -19.047599833415287  E_coul = 4.496540456316233
Extra cycle  E= -14.5510593770991  delta_E= -3.2e-14  |g|= 4.65e-08  |ddm|= 3.81e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 25.351491922928883
E1 = -19.047599833415287  E_coul = 4.496540456316233
init E= -14.5510593770991
    CPU time for initialize scf      0.03 sec, wall time      0.04 sec
  HOMO = -0.300754072042631  LUMO = 4.67532287227765
  mo_energy =
[-4.72650539e+00 -3.00754072e-01  4.67532287e+00  3.65709931e+01
  2.39180342e+02  3.02912469e+03]
E1 = -19.047599840935533  E_coul = 4.496540463836466
cycle= 1 E= -14.5510593770991  delta_E= -1.24e-14  |g|= 2.94e-09  |ddm|= 2.41e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047599840935533  E_coul = 4.496540463836466
  HOMO = -0.300754071806614  LUMO = 4.67532287394998
  mo_energy =
[-4.72650538e+00 -3.00754072e-01  4.67532287e+00  3.65709931e+01
  2.39180342e+02  3.02912469e+03]
E1 = -19.047599841374183  E_coul = 4.496540464275116
Extra cycle  E= -14.5510593770991  delta_E=    0  |g|= 1.99e-10  |ddm|= 1.6e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [1.92074720e+03 1.40755203e+02 2.46094253e+01 5.84132951e+00
 1.58482451e+00 1.04543656e-01]
grad_E = [ 3.13809451e-06 -5.43507425e-08  2.83917987e-07  3.46424827e-06
 -2.56595205e-05  2.22690258e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:31:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74717731        1
[INPUT] 0    0    [1    /1   ]  140.75371072         1
[INPUT] 0    0    [1    /1   ]  24.6088567314        1
[INPUT] 0    0    [1    /1   ]  5.84136226683        1
[INPUT] 0    0    [1    /1   ]  1.58489417769        1
[INPUT] 0    0    [1    /1   ]  0.104543034811       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7471773141249, 1.0]], [0, [140.75371072017262, 1.0]], [0, [24.60885673144973, 1.0]], [0, [5.841362266826054, 1.0]], [0, [1.5848941776906422, 1.0]], [0, [0.10454303481107201, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74717731]
bas 1, expnt(s) = [140.75371072]
bas 2, expnt(s) = [24.60885673]
bas 3, expnt(s) = [5.84136227]
bas 4, expnt(s) = [1.58489418]
bas 5, expnt(s) = [0.10454303]
CPU time:       107.85
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074718e+03 7.33023127e+02 1.40753711e+02 1.03242833e+02
 2.46088567e+01 2.79147410e+01 5.84136227e+00 9.49293768e+00
 1.58489418e+00 3.56874261e+00 1.04543035e-01 4.64500677e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9868849768906465
cond(S) = 25.353159124805323
E1 = -19.050717318205088  E_coul = 4.522272929926942
init E= -14.5284443882781
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301357041607392  LUMO = 4.67868500590576
  mo_energy =
[-4.71282400e+00 -3.01357042e-01  4.67868501e+00  3.65874005e+01
  2.39201666e+02  3.02915005e+03]
E1 = -19.050030816557374  E_coul = 4.498999068263266
cycle= 1 E= -14.5510317482941  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156353
diis-c [-2.4446252e-04  1.0000000e+00]
  HOMO = -0.300653482345735  LUMO = 4.67600102687862
  mo_energy =
[-4.72537567e+00 -3.00653482e-01  4.67600103e+00  3.65719642e+01
  2.39178451e+02  3.02912001e+03]
E1 = -19.04774844324825  E_coul = 4.496689215446185
cycle= 2 E= -14.5510592278021  delta_E= -2.75e-05  |g|= 0.00123  |ddm|= 0.00974
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0014316
diis-c [-7.97619857e-07 -7.72113864e-02  1.07721139e+00]
  HOMO = -0.300754857443737  LUMO = 4.67550540764663
  mo_energy =
[-4.72651947e+00 -3.00754857e-01  4.67550541e+00  3.65708206e+01
  2.39177118e+02  3.02911856e+03]
E1 = -19.047602188367396  E_coul = 4.4965428102692035
cycle= 3 E= -14.5510593780982  delta_E= -1.5e-07  |g|= 1.65e-05  |ddm|= 0.000721
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.17608e-05
diis-c [-1.19207376e-10  4.54698155e-04 -1.71079481e-02  1.01665325e+00]
  HOMO = -0.3007545595747  LUMO = 4.6755139652672
  mo_energy =
[-4.72650442e+00 -3.00754560e-01  4.67551397e+00  3.65708573e+01
  2.39177185e+02  3.02911864e+03]
E1 = -19.0476033539616  E_coul = 4.496543975850936
cycle= 4 E= -14.5510593781107  delta_E= -1.25e-11  |g|= 7.62e-07  |ddm|= 3.36e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.0476033539616  E_coul = 4.496543975850936
  HOMO = -0.300754497301687  LUMO = 4.67551456599689
  mo_energy =
[-4.72650320e+00 -3.00754497e-01  4.67551457e+00  3.65708594e+01
  2.39177189e+02  3.02911865e+03]
E1 = -19.047603488709946  E_coul = 4.496544110599248
Extra cycle  E= -14.5510593781107  delta_E= -3.55e-14  |g|= 4.65e-08  |ddm|= 3.81e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [1.92074718e+03 1.40753711e+02 2.46088567e+01 5.84136227e+00
 1.58489418e+00 1.04543035e-01]
E = -14.551059378110697
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:31:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74717731        1
[INPUT] 0    0    [1    /1   ]  140.75371072         1
[INPUT] 0    0    [1    /1   ]  24.6088567314        1
[INPUT] 0    0    [1    /1   ]  5.84136226683        1
[INPUT] 0    0    [1    /1   ]  1.58489417769        1
[INPUT] 0    0    [1    /1   ]  0.104543034811       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7471773141249, 1.0]], [0, [140.75371072017262, 1.0]], [0, [24.60885673144973, 1.0]], [0, [5.841362266826054, 1.0]], [0, [1.5848941776906422, 1.0]], [0, [0.10454303481107201, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74717731]
bas 1, expnt(s) = [140.75371072]
bas 2, expnt(s) = [24.60885673]
bas 3, expnt(s) = [5.84136227]
bas 4, expnt(s) = [1.58489418]
bas 5, expnt(s) = [0.10454303]
CPU time:       108.54
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074718e+03 7.33023127e+02 1.40753711e+02 1.03242833e+02
 2.46088567e+01 2.79147410e+01 5.84136227e+00 9.49293768e+00
 1.58489418e+00 3.56874261e+00 1.04543035e-01 4.64500677e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9868849768906465
cond(S) = 25.353159124805323
E1 = -19.050717318205088  E_coul = 4.522272929926942
init E= -14.5284443882781
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301357041607392  LUMO = 4.67868500590576
  mo_energy =
[-4.71282400e+00 -3.01357042e-01  4.67868501e+00  3.65874005e+01
  2.39201666e+02  3.02915005e+03]
E1 = -19.050030816557374  E_coul = 4.498999068263266
cycle= 1 E= -14.5510317482941  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156353
diis-c [-2.4446252e-04  1.0000000e+00]
  HOMO = -0.300653482345735  LUMO = 4.67600102687862
  mo_energy =
[-4.72537567e+00 -3.00653482e-01  4.67600103e+00  3.65719642e+01
  2.39178451e+02  3.02912001e+03]
E1 = -19.04774844324825  E_coul = 4.496689215446185
cycle= 2 E= -14.5510592278021  delta_E= -2.75e-05  |g|= 0.00123  |ddm|= 0.00974
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0014316
diis-c [-7.97619857e-07 -7.72113864e-02  1.07721139e+00]
  HOMO = -0.300754857443737  LUMO = 4.67550540764663
  mo_energy =
[-4.72651947e+00 -3.00754857e-01  4.67550541e+00  3.65708206e+01
  2.39177118e+02  3.02911856e+03]
E1 = -19.047602188367396  E_coul = 4.4965428102692035
cycle= 3 E= -14.5510593780982  delta_E= -1.5e-07  |g|= 1.65e-05  |ddm|= 0.000721
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.17608e-05
diis-c [-1.19207376e-10  4.54698155e-04 -1.71079481e-02  1.01665325e+00]
  HOMO = -0.3007545595747  LUMO = 4.6755139652672
  mo_energy =
[-4.72650442e+00 -3.00754560e-01  4.67551397e+00  3.65708573e+01
  2.39177185e+02  3.02911864e+03]
E1 = -19.0476033539616  E_coul = 4.496543975850936
cycle= 4 E= -14.5510593781107  delta_E= -1.25e-11  |g|= 7.62e-07  |ddm|= 3.36e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.0476033539616  E_coul = 4.496543975850936
  HOMO = -0.300754497301687  LUMO = 4.67551456599689
  mo_energy =
[-4.72650320e+00 -3.00754497e-01  4.67551457e+00  3.65708594e+01
  2.39177189e+02  3.02911865e+03]
E1 = -19.047603488709946  E_coul = 4.496544110599248
Extra cycle  E= -14.5510593781107  delta_E= -3.55e-14  |g|= 4.65e-08  |ddm|= 3.81e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 25.353159124805323
E1 = -19.047603488709946  E_coul = 4.496544110599248
init E= -14.5510593781107
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300754493573923  LUMO = 4.67551459695422
  mo_energy =
[-4.72650314e+00 -3.00754494e-01  4.67551460e+00  3.65708595e+01
  2.39177189e+02  3.02911865e+03]
E1 = -19.047603496227477  E_coul = 4.496544118116767
cycle= 1 E= -14.5510593781107  delta_E= -1.42e-14  |g|= 2.94e-09  |ddm|= 2.41e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.047603496227477  E_coul = 4.496544118116767
  HOMO = -0.300754493337953  LUMO = 4.67551459862581
  mo_energy =
[-4.72650314e+00 -3.00754493e-01  4.67551460e+00  3.65708595e+01
  2.39177189e+02  3.02911865e+03]
E1 = -19.04760349666599  E_coul = 4.496544118555286
Extra cycle  E= -14.5510593781107  delta_E= 7.11e-15  |g|= 1.99e-10  |ddm|= 1.6e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92074718e+03 1.40753711e+02 2.46088567e+01 5.84136227e+00
 1.58489418e+00 1.04543035e-01]
grad_E = [ 3.13810706e-06 -3.80256348e-08  1.42378929e-07 -1.46134938e-07
 -1.50049311e-06  7.90978149e-07]
 message: Optimization terminated successfully
 success: True
  status: 0
     fun: -14.551059378110697
       x: [ 1.921e+03  1.408e+02  2.461e+01  5.841e+00  1.585e+00
            1.045e-01]
     nit: 41
     jac: [ 3.138e-06 -3.803e-08  1.424e-07 -1.461e-07 -1.500e-06
            7.910e-07]
    nfev: 43
    njev: 41
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
exp_Be_5s = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]

N = 6

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_5s[:]
exps[0, 0] = np.max(exp_Be_5s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:31:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1920.74717731        1
[INPUT] 0    0    [1    /1   ]  140.75371072         1
[INPUT] 0    0    [1    /1   ]  24.6088567314        1
[INPUT] 0    0    [1    /1   ]  5.84136226683        1
[INPUT] 0    0    [1    /1   ]  1.58489417769        1
[INPUT] 0    0    [1    /1   ]  0.104543034811       1

nuclear repulsion = 0
number of shells = 6
number of NR pGTOs = 6
number of NR cGTOs = 6
basis = {'Be': [[0, [1920.7471773141249, 1.0]], [0, [140.75371072017262, 1.0]], [0, [24.60885673144973, 1.0]], [0, [5.841362266826054, 1.0]], [0, [1.5848941776906422, 1.0]], [0, [0.10454303481107201, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1920.74717731]
bas 1, expnt(s) = [140.75371072]
bas 2, expnt(s) = [24.60885673]
bas 3, expnt(s) = [5.84136227]
bas 4, expnt(s) = [1.58489418]
bas 5, expnt(s) = [0.10454303]
CPU time:       111.15
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92074718e+03 7.33023127e+02 1.40753711e+02 1.03242833e+02
 2.46088567e+01 2.79147410e+01 5.84136227e+00 9.49293768e+00
 1.58489418e+00 3.56874261e+00 1.04543035e-01 4.64500677e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9868849768906465
cond(S) = 25.353159124805323
E1 = -19.050717318205088  E_coul = 4.522272929926942
init E= -14.5284443882781
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301357041607392  LUMO = 4.67868500590576
  mo_energy =
[-4.71282400e+00 -3.01357042e-01  4.67868501e+00  3.65874005e+01
  2.39201666e+02  3.02915005e+03]
E1 = -19.050030816557374  E_coul = 4.498999068263266
cycle= 1 E= -14.5510317482941  delta_E= -0.0226  |g|= 0.0178  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156353
diis-c [-2.4446252e-04  1.0000000e+00]
  HOMO = -0.300653482345735  LUMO = 4.67600102687862
  mo_energy =
[-4.72537567e+00 -3.00653482e-01  4.67600103e+00  3.65719642e+01
  2.39178451e+02  3.02912001e+03]
E1 = -19.04774844324825  E_coul = 4.496689215446185
cycle= 2 E= -14.5510592278021  delta_E= -2.75e-05  |g|= 0.00123  |ddm|= 0.00974
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0014316
diis-c [-7.97619857e-07 -7.72113864e-02  1.07721139e+00]
  HOMO = -0.300754857443737  LUMO = 4.67550540764663
  mo_energy =
[-4.72651947e+00 -3.00754857e-01  4.67550541e+00  3.65708206e+01
  2.39177118e+02  3.02911856e+03]
E1 = -19.047602188367396  E_coul = 4.4965428102692035
cycle= 3 E= -14.5510593780982  delta_E= -1.5e-07  |g|= 1.65e-05  |ddm|= 0.000721
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.17608e-05
diis-c [-1.19207376e-10  4.54698155e-04 -1.71079481e-02  1.01665325e+00]
  HOMO = -0.3007545595747  LUMO = 4.6755139652672
  mo_energy =
[-4.72650442e+00 -3.00754560e-01  4.67551397e+00  3.65708573e+01
  2.39177185e+02  3.02911864e+03]
E1 = -19.0476033539616  E_coul = 4.496543975850936
cycle= 4 E= -14.5510593781107  delta_E= -1.25e-11  |g|= 7.62e-07  |ddm|= 3.36e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.0476033539616  E_coul = 4.496543975850936
  HOMO = -0.300754497301687  LUMO = 4.67551456599689
  mo_energy =
[-4.72650320e+00 -3.00754497e-01  4.67551457e+00  3.65708594e+01
  2.39177189e+02  3.02911865e+03]
E1 = -19.047603488709946  E_coul = 4.496544110599248
Extra cycle  E= -14.5510593781107  delta_E= -3.55e-14  |g|= 4.65e-08  |ddm|= 3.81e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [1.92074718e+03 1.40753711e+02 2.46088567e+01 5.84136227e+00
 1.58489418e+00 1.04543035e-01]
E = -14.551059378110697
E = -14.551059378110697
exp = [1.9207471773141249e+03,1.4075371072017262e+02,2.4608856731449730e+01,5.8413622668260539e+00,1.5848941776906422e+00,1.0454303481107201e-01]
