#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875672        1
[INPUT] 0    0    [1    /1   ]  65.9910875672        1
[INPUT] 0    0    [1    /1   ]  9.84863704159        1
[INPUT] 0    0    [1    /1   ]  2.05031881622        1
[INPUT] 0    0    [1    /1   ]  0.103864292065       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108756722832, 1.0]], [0, [65.99108756722832, 1.0]], [0, [9.84863704158983, 1.0]], [0, [2.0503188162180708, 1.0]], [0, [0.1038642920648396, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087567]
bas 1, expnt(s) = [65.99108757]
bas 2, expnt(s) = [9.84863704]
bas 3, expnt(s) = [2.05031882]
bas 4, expnt(s) = [0.10386429]
CPU time:         1.09
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910876e+02 3.28949317e+02 6.59910876e+01 5.84963797e+01
 9.84863704e+00 1.40458208e+01 2.05031882e+00 4.32893507e+00
 1.03864292e-01 4.62237018e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848445356851077
cond(S) = 10.199059614185074
E1 = -18.99114639308143  E_coul = 4.509954285920107
init E= -14.4811921071613
    CPU time for initialize scf      0.11 sec, wall time      0.12 sec
  HOMO = -0.303240362908251  LUMO = 8.12438887737019
  mo_energy =
[-4.69612828e+00 -3.03240363e-01  8.12438888e+00  9.10184523e+01
  1.03978691e+03]
E1 = -19.022411041416145  E_coul = 4.51351512270285
cycle= 1 E= -14.5088959187133  delta_E= -0.0277  |g|= 0.0184  |ddm|= 0.0837
    CPU time for cycle= 1      0.25 sec, wall time      0.26 sec
diis-norm(errvec)=0.0200708
diis-c [-4.02837383e-04  1.00000000e+00]
  HOMO = -0.300451106117634  LUMO = 8.13005414311534
  mo_energy =
[-4.69724414e+00 -3.00451106e-01  8.13005414e+00  9.10146670e+01
  1.03976917e+03]
E1 = -19.021625588987362  E_coul = 4.5127195282707735
cycle= 2 E= -14.5089060607166  delta_E= -1.01e-05  |g|= 0.000709  |ddm|= 0.0036
    CPU time for cycle= 2      0.07 sec, wall time      0.07 sec
diis-norm(errvec)=0.000777712
diis-c [-2.91516608e-07 -2.86995437e-02  1.02869954e+00]
  HOMO = -0.300482713507814  LUMO = 8.12990017769521
  mo_energy =
[-4.69762199e+00 -3.00482714e-01  8.12990018e+00  9.10142791e+01
  1.03976849e+03]
E1 = -19.021604146520584  E_coul = 4.512698061693279
cycle= 3 E= -14.5089060848273  delta_E= -2.41e-08  |g|= 1.76e-05  |ddm|= 0.000173
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.36155e-05
diis-c [-3.10327908e-11  1.03762657e-03 -4.47105445e-02  1.04367292e+00]
  HOMO = -0.300483221387155  LUMO = 8.12990480971567
  mo_energy =
[-4.69762085e+00 -3.00483221e-01  8.12990481e+00  9.10143072e+01
  1.03976854e+03]
E1 = -19.02160423902457  E_coul = 4.512698154181348
cycle= 4 E= -14.5089060848432  delta_E= -1.59e-11  |g|= 1.25e-07  |ddm|= 4.08e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02160423902457  E_coul = 4.512698154181348
  HOMO = -0.300483221104082  LUMO = 8.12990490741727
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143076e+01
  1.03976854e+03]
E1 = -19.02160424668442  E_coul = 4.512698161841195
Extra cycle  E= -14.5089060848432  delta_E= -1.78e-15  |g|= 6.02e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.47 sec, wall time      0.48 sec
exp = [6.59910876e+02 6.59910876e+01 9.84863704e+00 2.05031882e+00
 1.03864292e-01]
E = -14.508906084843224
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875672        1
[INPUT] 0    0    [1    /1   ]  65.9910875672        1
[INPUT] 0    0    [1    /1   ]  9.84863704159        1
[INPUT] 0    0    [1    /1   ]  2.05031881622        1
[INPUT] 0    0    [1    /1   ]  0.103864292065       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108756722832, 1.0]], [0, [65.99108756722832, 1.0]], [0, [9.84863704158983, 1.0]], [0, [2.0503188162180708, 1.0]], [0, [0.1038642920648396, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087567]
bas 1, expnt(s) = [65.99108757]
bas 2, expnt(s) = [9.84863704]
bas 3, expnt(s) = [2.05031882]
bas 4, expnt(s) = [0.10386429]
CPU time:         1.68
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910876e+02 3.28949317e+02 6.59910876e+01 5.84963797e+01
 9.84863704e+00 1.40458208e+01 2.05031882e+00 4.32893507e+00
 1.03864292e-01 4.62237018e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848445356851077
cond(S) = 10.199059614185074
E1 = -18.99114639308143  E_coul = 4.509954285920107
init E= -14.4811921071613
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303240362908251  LUMO = 8.12438887737019
  mo_energy =
[-4.69612828e+00 -3.03240363e-01  8.12438888e+00  9.10184523e+01
  1.03978691e+03]
E1 = -19.022411041416145  E_coul = 4.51351512270285
cycle= 1 E= -14.5088959187133  delta_E= -0.0277  |g|= 0.0184  |ddm|= 0.0837
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0200708
diis-c [-4.02837383e-04  1.00000000e+00]
  HOMO = -0.300451106117634  LUMO = 8.13005414311534
  mo_energy =
[-4.69724414e+00 -3.00451106e-01  8.13005414e+00  9.10146670e+01
  1.03976917e+03]
E1 = -19.021625588987362  E_coul = 4.5127195282707735
cycle= 2 E= -14.5089060607166  delta_E= -1.01e-05  |g|= 0.000709  |ddm|= 0.0036
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000777712
diis-c [-2.91516608e-07 -2.86995437e-02  1.02869954e+00]
  HOMO = -0.300482713507814  LUMO = 8.12990017769521
  mo_energy =
[-4.69762199e+00 -3.00482714e-01  8.12990018e+00  9.10142791e+01
  1.03976849e+03]
E1 = -19.021604146520584  E_coul = 4.512698061693279
cycle= 3 E= -14.5089060848273  delta_E= -2.41e-08  |g|= 1.76e-05  |ddm|= 0.000173
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.36155e-05
diis-c [-3.10327908e-11  1.03762657e-03 -4.47105445e-02  1.04367292e+00]
  HOMO = -0.300483221387155  LUMO = 8.12990480971567
  mo_energy =
[-4.69762085e+00 -3.00483221e-01  8.12990481e+00  9.10143072e+01
  1.03976854e+03]
E1 = -19.02160423902457  E_coul = 4.512698154181348
cycle= 4 E= -14.5089060848432  delta_E= -1.59e-11  |g|= 1.25e-07  |ddm|= 4.08e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02160423902457  E_coul = 4.512698154181348
  HOMO = -0.300483221104082  LUMO = 8.12990490741727
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143076e+01
  1.03976854e+03]
E1 = -19.02160424668442  E_coul = 4.512698161841195
Extra cycle  E= -14.5089060848432  delta_E= -1.78e-15  |g|= 6.02e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.199059614185074
E1 = -19.02160424668442  E_coul = 4.512698161841195
init E= -14.5089060848432
    CPU time for initialize scf      0.25 sec, wall time      0.25 sec
  HOMO = -0.30048322112317  LUMO = 8.12990491138655
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143077e+01
  1.03976854e+03]
E1 = -19.021604246975297  E_coul = 4.512698162132072
cycle= 1 E= -14.5089060848432  delta_E= -1.78e-15  |g|= 3.02e-10  |ddm|= 8.93e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.021604246975297  E_coul = 4.512698162132072
  HOMO = -0.300483221126061  LUMO = 8.1299049115545
  mo_energy =
[-4.69762074e+00 -3.00483221e-01  8.12990491e+00  9.10143077e+01
  1.03976854e+03]
E1 = -19.02160424698675  E_coul = 4.512698162143529
Extra cycle  E= -14.5089060848432  delta_E= 3.55e-15  |g|= 1.56e-11  |ddm|= 4.93e-11
    CPU time for scf_cycle      0.87 sec, wall time      0.88 sec
exp = [6.59910876e+02 6.59910876e+01 9.84863704e+00 2.05031882e+00
 1.03864292e-01]
grad_E = [ 8.80297047e-06  1.25466564e-03 -4.22498533e-03  5.14006767e-03
 -1.17916658e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910866869        1
[INPUT] 0    0    [1    /1   ]  65.9898329016        1
[INPUT] 0    0    [1    /1   ]  9.85286202692        1
[INPUT] 0    0    [1    /1   ]  2.04517874855        1
[INPUT] 0    0    [1    /1   ]  0.115655957882       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108668693127, 1.0]], [0, [65.98983290159073, 1.0]], [0, [9.852862026924432, 1.0]], [0, [2.045178748552285, 1.0]], [0, [0.11565595788159477, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91086687]
bas 1, expnt(s) = [65.9898329]
bas 2, expnt(s) = [9.85286203]
bas 3, expnt(s) = [2.04517875]
bas 4, expnt(s) = [0.11565596]
CPU time:         6.13
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910867e+02 3.28949313e+02 6.59898329e+01 5.84955456e+01
 9.85286203e+00 1.40503397e+01 2.04517875e+00 4.32079317e+00
 1.15655958e-01 5.01061497e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978911871550939
cond(S) = 10.282706621922891
E1 = -19.065426967507463  E_coul = 4.580911043080588
init E= -14.4845159244269
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.29459168022225  LUMO = 8.18593573882518
  mo_energy =
[-4.66798883e+00 -2.94591680e-01  8.18593574e+00  9.10699331e+01
  1.03983075e+03]
E1 = -19.119453095527994  E_coul = 4.613393030789541
cycle= 1 E= -14.5060600647385  delta_E= -0.0215  |g|= 0.014  |ddm|= 0.0272
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0194834
diis-c [-3.79602189e-04  1.00000000e+00]
  HOMO = -0.289899521191038  LUMO = 8.20010326289743
  mo_energy =
[-4.65643471e+00 -2.89899521e-01  8.20010326e+00  9.10845218e+01
  1.03983481e+03]
E1 = -19.119177274326958  E_coul = 4.613115731720842
cycle= 2 E= -14.5060615426061  delta_E= -1.48e-06  |g|= 0.000327  |ddm|= 0.000892
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000438829
diis-c [-3.30197826e-08 -2.09315278e-02  1.02093153e+00]
  HOMO = -0.289908651439868  LUMO = 8.20003735462078
  mo_energy =
[-4.65656716e+00 -2.89908651e-01  8.20003735e+00  9.10842148e+01
  1.03983411e+03]
E1 = -19.119171616491172  E_coul = 4.613110072044469
cycle= 3 E= -14.5060615444467  delta_E= -1.84e-09  |g|= 6.04e-06  |ddm|= 4.19e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.57815e-06
diis-c [-2.08375476e-11  7.62608968e-04 -3.47839073e-02  1.03402130e+00]
  HOMO = -0.289908830285761  LUMO = 8.2000387985638
  mo_energy =
[-4.65656690e+00 -2.89908830e-01  8.20003880e+00  9.10842235e+01
  1.03983412e+03]
E1 = -19.11917163456051  E_coul = 4.613110090112007
cycle= 4 E= -14.5060615444485  delta_E= -1.8e-12  |g|= 1.52e-07  |ddm|= 1.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.11917163456051  E_coul = 4.613110090112007
  HOMO = -0.289908834532215  LUMO = 8.20003883102066
  mo_energy =
[-4.65656689e+00 -2.89908835e-01  8.20003883e+00  9.10842237e+01
  1.03983412e+03]
E1 = -19.11917163512492  E_coul = 4.61311009067643
Extra cycle  E= -14.5060615444485  delta_E= 1.07e-14  |g|= 8.25e-09  |ddm|= 3.13e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910867e+02 6.59898329e+01 9.85286203e+00 2.04517875e+00
 1.15655958e-01]
E = -14.506061544448492
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910874792        1
[INPUT] 0    0    [1    /1   ]  65.9909621007        1
[INPUT] 0    0    [1    /1   ]  9.84905954012        1
[INPUT] 0    0    [1    /1   ]  2.04980480945        1
[INPUT] 0    0    [1    /1   ]  0.105043458647       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108747919861, 1.0]], [0, [65.99096210066456, 1.0]], [0, [9.84905954012329, 1.0]], [0, [2.049804809451492, 1.0]], [0, [0.10504345864651513, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087479]
bas 1, expnt(s) = [65.9909621]
bas 2, expnt(s) = [9.84905954]
bas 3, expnt(s) = [2.04980481]
bas 4, expnt(s) = [0.10504346]
CPU time:         6.25
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910875e+02 3.28949316e+02 6.59909621e+01 5.84962963e+01
 9.84905954e+00 1.40462727e+01 2.04980481e+00 4.32812111e+00
 1.05043459e-01 4.66167276e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984857833833938
cond(S) = 10.207164394108013
E1 = -19.00066928630116  E_coul = 4.518125013930798
init E= -14.4825442723704
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302375626169088  LUMO = 8.13091602380803
  mo_energy =
[-4.69291712e+00 -3.02375626e-01  8.13091602e+00  9.10239523e+01
  1.03979166e+03]
E1 = -19.032757089952362  E_coul = 4.523873283689746
cycle= 1 E= -14.5088838062626  delta_E= -0.0263  |g|= 0.0178  |ddm|= 0.0764
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0197866
diis-c [-3.91510051e-04  1.00000000e+00]
  HOMO = -0.299500508932857  LUMO = 8.13716764391028
  mo_energy =
[-4.69300893e+00 -2.99500509e-01  8.13716764e+00  9.10217668e+01
  1.03977586e+03]
E1 = -19.03202045109116  E_coul = 4.523127894973677
cycle= 2 E= -14.5088925561175  delta_E= -8.75e-06  |g|= 0.000665  |ddm|= 0.00332
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000728578
diis-c [-2.56615014e-07 -2.71935595e-02  1.02719356e+00]
  HOMO = -0.299529948498497  LUMO = 8.13702203134105
  mo_energy =
[-4.69336253e+00 -2.99529948e-01  8.13702203e+00  9.10213846e+01
  1.03977518e+03]
E1 = -19.03200043870231  E_coul = 4.523107861941319
cycle= 3 E= -14.508892576761  delta_E= -2.06e-08  |g|= 1.72e-05  |ddm|= 0.00016
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.28519e-05
diis-c [-3.05440560e-11  1.04681433e-03 -4.62689977e-02  1.04522218e+00]
  HOMO = -0.299530465236199  LUMO = 8.13702614884448
  mo_energy =
[-4.69336195e+00 -2.99530465e-01  8.13702615e+00  9.10214104e+01
  1.03977522e+03]
E1 = -19.03200049200564  E_coul = 4.523107915229388
cycle= 4 E= -14.5088925767763  delta_E= -1.53e-11  |g|= 1.21e-07  |ddm|= 4.02e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03200049200564  E_coul = 4.523107915229388
  HOMO = -0.299530465317409  LUMO = 8.13702623707657
  mo_energy =
[-4.69336187e+00 -2.99530465e-01  8.13702624e+00  9.10214108e+01
  1.03977522e+03]
E1 = -19.032000498763523  E_coul = 4.5231079219872745
Extra cycle  E= -14.5088925767762  delta_E= 3.55e-15  |g|= 5.92e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910875e+02 6.59909621e+01 9.84905954e+00 2.04980481e+00
 1.05043459e-01]
E = -14.508892576776248
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875418        1
[INPUT] 0    0    [1    /1   ]  65.9910513179        1
[INPUT] 0    0    [1    /1   ]  9.84875910821        1
[INPUT] 0    0    [1    /1   ]  2.0501703114         1
[INPUT] 0    0    [1    /1   ]  0.10420497225        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108754179512, 1.0]], [0, [65.99105131792068, 1.0]], [0, [9.84875910820949, 1.0]], [0, [2.0501703113985035, 1.0]], [0, [0.10420497225007753, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087542]
bas 1, expnt(s) = [65.99105132]
bas 2, expnt(s) = [9.84875911]
bas 3, expnt(s) = [2.05017031]
bas 4, expnt(s) = [0.10420497]
CPU time:         6.36
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910875e+02 3.28949317e+02 6.59910513e+01 5.84963556e+01
 9.84875911e+00 1.40459514e+01 2.05017031e+00 4.32869991e+00
 1.04204972e-01 4.63373674e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848638096392603
cond(S) = 10.201395236472964
E1 = -18.99394936622594  E_coul = 4.512341126129155
init E= -14.4816082400968
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30299052977943  LUMO = 8.1262837660921
  mo_energy =
[-4.69519084e+00 -3.02990530e-01  8.12628377e+00  9.10200499e+01
  1.03978829e+03]
E1 = -19.02541568296677  E_coul = 4.516516689417684
cycle= 1 E= -14.5088989935491  delta_E= -0.0273  |g|= 0.0182  |ddm|= 0.0816
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0199837
diis-c [-3.99347774e-04  1.00000000e+00]
  HOMO = -0.300179005506859  LUMO = 8.13211197092248
  mo_energy =
[-4.69601679e+00 -3.00179006e-01  8.13211197e+00  9.10167210e+01
  1.03977111e+03]
E1 = -19.02464427043673  E_coul = 4.515735549778398
cycle= 2 E= -14.5089087206583  delta_E= -9.73e-06  |g|= 0.000697  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000763356
diis-c [-2.81380021e-07 -2.82553532e-02  1.02825535e+00]
  HOMO = -0.300209988719567  LUMO = 8.13196040446726
  mo_energy =
[-4.69638765e+00 -3.00209989e-01  8.13196040e+00  9.10163347e+01
  1.03977043e+03]
E1 = -19.024623237189562  E_coul = 4.515714493450599
cycle= 3 E= -14.508908743739  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.34183e-05
diis-c [-3.08788520e-11  1.04043094e-03 -4.51780787e-02  1.04413765e+00]
  HOMO = -0.30021050020655  LUMO = 8.13196488323079
  mo_energy =
[-4.69638668e+00 -3.00210500e-01  8.13196488e+00  9.10163621e+01
  1.03977047e+03]
E1 = -19.024623317595832  E_coul = 4.515714573841102
cycle= 4 E= -14.5089087437547  delta_E= -1.58e-11  |g|= 1.23e-07  |ddm|= 4.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024623317595832  E_coul = 4.515714573841102
  HOMO = -0.300210500026843  LUMO = 8.13196497816375
  mo_energy =
[-4.69638658e+00 -3.00210500e-01  8.13196498e+00  9.10163625e+01
  1.03977047e+03]
E1 = -19.024623324992934  E_coul = 4.515714581238202
Extra cycle  E= -14.5089087437547  delta_E= -1.78e-15  |g|= 5.99e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
exp = [6.59910875e+02 6.59910513e+01 9.84875911e+00 2.05017031e+00
 1.04204972e-01]
E = -14.508908743754732
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910875418        1
[INPUT] 0    0    [1    /1   ]  65.9910513179        1
[INPUT] 0    0    [1    /1   ]  9.84875910821        1
[INPUT] 0    0    [1    /1   ]  2.0501703114         1
[INPUT] 0    0    [1    /1   ]  0.10420497225        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108754179512, 1.0]], [0, [65.99105131792068, 1.0]], [0, [9.84875910820949, 1.0]], [0, [2.0501703113985035, 1.0]], [0, [0.10420497225007753, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91087542]
bas 1, expnt(s) = [65.99105132]
bas 2, expnt(s) = [9.84875911]
bas 3, expnt(s) = [2.05017031]
bas 4, expnt(s) = [0.10420497]
CPU time:         6.47
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910875e+02 3.28949317e+02 6.59910513e+01 5.84963556e+01
 9.84875911e+00 1.40459514e+01 2.05017031e+00 4.32869991e+00
 1.04204972e-01 4.63373674e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848638096392603
cond(S) = 10.201395236472964
E1 = -18.99394936622594  E_coul = 4.512341126129155
init E= -14.4816082400968
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30299052977943  LUMO = 8.1262837660921
  mo_energy =
[-4.69519084e+00 -3.02990530e-01  8.12628377e+00  9.10200499e+01
  1.03978829e+03]
E1 = -19.02541568296677  E_coul = 4.516516689417684
cycle= 1 E= -14.5088989935491  delta_E= -0.0273  |g|= 0.0182  |ddm|= 0.0816
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0199837
diis-c [-3.99347774e-04  1.00000000e+00]
  HOMO = -0.300179005506859  LUMO = 8.13211197092248
  mo_energy =
[-4.69601679e+00 -3.00179006e-01  8.13211197e+00  9.10167210e+01
  1.03977111e+03]
E1 = -19.02464427043673  E_coul = 4.515735549778398
cycle= 2 E= -14.5089087206583  delta_E= -9.73e-06  |g|= 0.000697  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000763356
diis-c [-2.81380021e-07 -2.82553532e-02  1.02825535e+00]
  HOMO = -0.300209988719567  LUMO = 8.13196040446726
  mo_energy =
[-4.69638765e+00 -3.00209989e-01  8.13196040e+00  9.10163347e+01
  1.03977043e+03]
E1 = -19.024623237189562  E_coul = 4.515714493450599
cycle= 3 E= -14.508908743739  delta_E= -2.31e-08  |g|= 1.75e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.34183e-05
diis-c [-3.08788520e-11  1.04043094e-03 -4.51780787e-02  1.04413765e+00]
  HOMO = -0.30021050020655  LUMO = 8.13196488323079
  mo_energy =
[-4.69638668e+00 -3.00210500e-01  8.13196488e+00  9.10163621e+01
  1.03977047e+03]
E1 = -19.024623317595832  E_coul = 4.515714573841102
cycle= 4 E= -14.5089087437547  delta_E= -1.58e-11  |g|= 1.23e-07  |ddm|= 4.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.024623317595832  E_coul = 4.515714573841102
  HOMO = -0.300210500026843  LUMO = 8.13196497816375
  mo_energy =
[-4.69638658e+00 -3.00210500e-01  8.13196498e+00  9.10163625e+01
  1.03977047e+03]
E1 = -19.024623324992934  E_coul = 4.515714581238202
Extra cycle  E= -14.5089087437547  delta_E= -1.78e-15  |g|= 5.99e-09  |ddm|= 1.68e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.201395236472964
E1 = -19.024623324992934  E_coul = 4.515714581238202
init E= -14.5089087437547
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300210500050287  LUMO = 8.1319649820374
  mo_energy =
[-4.69638658e+00 -3.00210500e-01  8.13196498e+00  9.10163626e+01
  1.03977047e+03]
E1 = -19.024623325274508  E_coul = 4.515714581519773
cycle= 1 E= -14.5089087437547  delta_E= -1.78e-15  |g|= 3.02e-10  |ddm|= 8.98e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.024623325274508  E_coul = 4.515714581519773
  HOMO = -0.300210500053345  LUMO = 8.13196498220209
  mo_energy =
[-4.69638658e+00 -3.00210500e-01  8.13196498e+00  9.10163626e+01
  1.03977047e+03]
E1 = -19.024623325285607  E_coul = 4.515714581530875
Extra cycle  E= -14.5089087437547  delta_E= 3.55e-15  |g|= 1.56e-11  |ddm|= 4.97e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59910875e+02 6.59910513e+01 9.84875911e+00 2.05017031e+00
 1.04204972e-01]
grad_E = [ 8.80691753e-06  1.25416010e-03 -4.20403293e-03  5.00354172e-03
  3.87668440e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910863808        1
[INPUT] 0    0    [1    /1   ]  65.9893976634        1
[INPUT] 0    0    [1    /1   ]  9.85430847481        1
[INPUT] 0    0    [1    /1   ]  2.04352965848        1
[INPUT] 0    0    [1    /1   ]  0.104138420719       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108638081318, 1.0]], [0, [65.98939766336505, 1.0]], [0, [9.854308474810065, 1.0]], [0, [2.0435296584775076, 1.0]], [0, [0.10413842071861011, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91086381]
bas 1, expnt(s) = [65.98939766]
bas 2, expnt(s) = [9.85430847]
bas 3, expnt(s) = [2.04352966]
bas 4, expnt(s) = [0.10413842]
CPU time:         8.42
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910864e+02 3.28949312e+02 6.59893977e+01 5.84952562e+01
 9.85430847e+00 1.40518867e+01 2.04352966e+00 4.31817992e+00
 1.04138421e-01 4.63151702e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984894958512035
cond(S) = 10.17198999634552
E1 = -18.993717342706844  E_coul = 4.511623681911148
init E= -14.4820936607957
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30301258427606  LUMO = 8.10912576963225
  mo_energy =
[-4.69554784e+00 -3.03012584e-01  8.10912577e+00  9.10124084e+01
  1.03978167e+03]
E1 = -19.02305565681321  E_coul = 4.5141181541286235
cycle= 1 E= -14.5089375026846  delta_E= -0.0268  |g|= 0.0173  |ddm|= 0.0833
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0188459
diis-c [-3.55168979e-04  1.00000000e+00]
  HOMO = -0.300247814478283  LUMO = 8.1142382292078
  mo_energy =
[-4.69716646e+00 -3.00247814e-01  8.11423823e+00  9.10068517e+01
  1.03976213e+03]
E1 = -19.022226900837893  E_coul = 4.513279764155269
cycle= 2 E= -14.5089471366826  delta_E= -9.63e-06  |g|= 0.000676  |ddm|= 0.00356
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000741802
diis-c [-2.70936455e-07 -2.88647413e-02  1.02886474e+00]
  HOMO = -0.300279454543282  LUMO = 8.11406181729672
  mo_energy =
[-4.69756635e+00 -3.00279455e-01  8.11406182e+00  9.10063738e+01
  1.03976134e+03]
E1 = -19.02220350536851  E_coul = 4.513256345971538
cycle= 3 E= -14.508947159397  delta_E= -2.27e-08  |g|= 1.69e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.27432e-05
diis-c [-2.49236963e-11  1.03852266e-03 -4.48232688e-02  1.04378475e+00]
  HOMO = -0.300279951746557  LUMO = 8.11406605515996
  mo_energy =
[-4.69756553e+00 -3.00279952e-01  8.11406606e+00  9.10064000e+01
  1.03976139e+03]
E1 = -19.02220356960495  E_coul = 4.513256410193245
cycle= 4 E= -14.5089471594117  delta_E= -1.47e-11  |g|= 1.2e-07  |ddm|= 3.94e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02220356960495  E_coul = 4.513256410193245
  HOMO = -0.300279950953058  LUMO = 8.11406615613637
  mo_energy =
[-4.69756542e+00 -3.00279951e-01  8.11406616e+00  9.10064005e+01
  1.03976139e+03]
E1 = -19.022203577684937  E_coul = 4.51325641827324
Extra cycle  E= -14.5089471594117  delta_E= 8.88e-15  |g|= 5.64e-09  |ddm|= 1.55e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910864e+02 6.59893977e+01 9.85430847e+00 2.04352966e+00
 1.04138421e-01]
E = -14.508947159411697
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910863808        1
[INPUT] 0    0    [1    /1   ]  65.9893976634        1
[INPUT] 0    0    [1    /1   ]  9.85430847481        1
[INPUT] 0    0    [1    /1   ]  2.04352965848        1
[INPUT] 0    0    [1    /1   ]  0.104138420719       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108638081318, 1.0]], [0, [65.98939766336505, 1.0]], [0, [9.854308474810065, 1.0]], [0, [2.0435296584775076, 1.0]], [0, [0.10413842071861011, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91086381]
bas 1, expnt(s) = [65.98939766]
bas 2, expnt(s) = [9.85430847]
bas 3, expnt(s) = [2.04352966]
bas 4, expnt(s) = [0.10413842]
CPU time:         8.55
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910864e+02 3.28949312e+02 6.59893977e+01 5.84952562e+01
 9.85430847e+00 1.40518867e+01 2.04352966e+00 4.31817992e+00
 1.04138421e-01 4.63151702e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984894958512035
cond(S) = 10.17198999634552
E1 = -18.993717342706844  E_coul = 4.511623681911148
init E= -14.4820936607957
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30301258427606  LUMO = 8.10912576963225
  mo_energy =
[-4.69554784e+00 -3.03012584e-01  8.10912577e+00  9.10124084e+01
  1.03978167e+03]
E1 = -19.02305565681321  E_coul = 4.5141181541286235
cycle= 1 E= -14.5089375026846  delta_E= -0.0268  |g|= 0.0173  |ddm|= 0.0833
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0188459
diis-c [-3.55168979e-04  1.00000000e+00]
  HOMO = -0.300247814478283  LUMO = 8.1142382292078
  mo_energy =
[-4.69716646e+00 -3.00247814e-01  8.11423823e+00  9.10068517e+01
  1.03976213e+03]
E1 = -19.022226900837893  E_coul = 4.513279764155269
cycle= 2 E= -14.5089471366826  delta_E= -9.63e-06  |g|= 0.000676  |ddm|= 0.00356
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000741802
diis-c [-2.70936455e-07 -2.88647413e-02  1.02886474e+00]
  HOMO = -0.300279454543282  LUMO = 8.11406181729672
  mo_energy =
[-4.69756635e+00 -3.00279455e-01  8.11406182e+00  9.10063738e+01
  1.03976134e+03]
E1 = -19.02220350536851  E_coul = 4.513256345971538
cycle= 3 E= -14.508947159397  delta_E= -2.27e-08  |g|= 1.69e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.27432e-05
diis-c [-2.49236963e-11  1.03852266e-03 -4.48232688e-02  1.04378475e+00]
  HOMO = -0.300279951746557  LUMO = 8.11406605515996
  mo_energy =
[-4.69756553e+00 -3.00279952e-01  8.11406606e+00  9.10064000e+01
  1.03976139e+03]
E1 = -19.02220356960495  E_coul = 4.513256410193245
cycle= 4 E= -14.5089471594117  delta_E= -1.47e-11  |g|= 1.2e-07  |ddm|= 3.94e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02220356960495  E_coul = 4.513256410193245
  HOMO = -0.300279950953058  LUMO = 8.11406615613637
  mo_energy =
[-4.69756542e+00 -3.00279951e-01  8.11406616e+00  9.10064005e+01
  1.03976139e+03]
E1 = -19.022203577684937  E_coul = 4.51325641827324
Extra cycle  E= -14.5089471594117  delta_E= 8.88e-15  |g|= 5.64e-09  |ddm|= 1.55e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.17198999634552
E1 = -19.022203577684937  E_coul = 4.51325641827324
init E= -14.5089471594117
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300279950950553  LUMO = 8.11406616014858
  mo_energy =
[-4.69756542e+00 -3.00279951e-01  8.11406616e+00  9.10064005e+01
  1.03976139e+03]
E1 = -19.022203577986684  E_coul = 4.513256418574987
cycle= 1 E= -14.5089471594117  delta_E=    0  |g|= 2.78e-10  |ddm|= 7.94e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.022203577986684  E_coul = 4.513256418574987
  HOMO = -0.300279950952467  LUMO = 8.11406616031452
  mo_energy =
[-4.69756542e+00 -3.00279951e-01  8.11406616e+00  9.10064005e+01
  1.03976139e+03]
E1 = -19.022203577998315  E_coul = 4.513256418586614
Extra cycle  E= -14.5089471594117  delta_E= -3.55e-15  |g|= 1.42e-11  |ddm|= 4.34e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59910864e+02 6.59893977e+01 9.85430847e+00 2.04352966e+00
 1.04138421e-01]
grad_E = [ 8.93418250e-06  1.22879690e-03 -3.34232553e-03 -4.17959983e-04
  1.15103768e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910846202        1
[INPUT] 0    0    [1    /1   ]  65.9869526925        1
[INPUT] 0    0    [1    /1   ]  9.86139341409        1
[INPUT] 0    0    [1    /1   ]  2.04138350399        1
[INPUT] 0    0    [1    /1   ]  0.104109642116       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108462024061, 1.0]], [0, [65.98695269247276, 1.0]], [0, [9.861393414087315, 1.0]], [0, [2.041383503989561, 1.0]], [0, [0.10410964211631465, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.9108462]
bas 1, expnt(s) = [65.98695269]
bas 2, expnt(s) = [9.86139341]
bas 3, expnt(s) = [2.0413835]
bas 4, expnt(s) = [0.10410964]
CPU time:        10.67
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910846e+02 3.28949306e+02 6.59869527e+01 5.84936307e+01
 9.86139341e+00 1.40594632e+01 2.04138350e+00 4.31477819e+00
 1.04109642e-01 4.63055705e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984903143412443
cond(S) = 10.161408335796567
E1 = -18.99360949690612  E_coul = 4.5113235170312285
init E= -14.4822859798749
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303025310849192  LUMO = 8.10675943459185
  mo_energy =
[-4.69569666e+00 -3.03025311e-01  8.10675943e+00  9.10249834e+01
  1.03978921e+03]
E1 = -19.022119829879866  E_coul = 4.5131605194228985
cycle= 1 E= -14.508959310457  delta_E= -0.0267  |g|= 0.017  |ddm|= 0.084
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0183316
diis-c [-3.3604631e-04  1.0000000e+00]
  HOMO = -0.300276644016286  LUMO = 8.11158933503173
  mo_energy =
[-4.69762733e+00 -3.00276644e-01  8.11158934e+00  9.10185564e+01
  1.03976881e+03]
E1 = -19.021267281544535  E_coul = 4.512298386085669
cycle= 2 E= -14.5089688954589  delta_E= -9.59e-06  |g|= 0.000667  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000732226
diis-c [-2.65728075e-07 -2.92078762e-02  1.02920788e+00]
  HOMO = -0.300308526451098  LUMO = 8.11140231329337
  mo_energy =
[-4.69803934e+00 -3.00308526e-01  8.11140231e+00  9.10180394e+01
  1.03976798e+03]
E1 = -19.021242906722033  E_coul = 4.51227398875741
cycle= 3 E= -14.5089689179646  delta_E= -2.25e-08  |g|= 1.66e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.23662e-05
diis-c [-2.24010758e-11  1.03657883e-03 -4.45437309e-02  1.04350715e+00]
  HOMO = -0.300309013284053  LUMO = 8.11140647034019
  mo_energy =
[-4.69803854e+00 -3.00309013e-01  8.11140647e+00  9.10180652e+01
  1.03976802e+03]
E1 = -19.02124296753881  E_coul = 4.512274049560042
cycle= 4 E= -14.5089689179788  delta_E= -1.41e-11  |g|= 1.18e-07  |ddm|= 3.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02124296753881  E_coul = 4.512274049560042
  HOMO = -0.300309012225983  LUMO = 8.11140657411483
  mo_energy =
[-4.69803842e+00 -3.00309012e-01  8.11140657e+00  9.10180657e+01
  1.03976802e+03]
E1 = -19.021242975921698  E_coul = 4.512274057942931
Extra cycle  E= -14.5089689179788  delta_E= 3.55e-15  |g|= 5.5e-09  |ddm|= 1.52e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910846e+02 6.59869527e+01 9.86139341e+00 2.04138350e+00
 1.04109642e-01]
E = -14.508968917978766
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910846202        1
[INPUT] 0    0    [1    /1   ]  65.9869526925        1
[INPUT] 0    0    [1    /1   ]  9.86139341409        1
[INPUT] 0    0    [1    /1   ]  2.04138350399        1
[INPUT] 0    0    [1    /1   ]  0.104109642116       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9108462024061, 1.0]], [0, [65.98695269247276, 1.0]], [0, [9.861393414087315, 1.0]], [0, [2.041383503989561, 1.0]], [0, [0.10410964211631465, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.9108462]
bas 1, expnt(s) = [65.98695269]
bas 2, expnt(s) = [9.86139341]
bas 3, expnt(s) = [2.0413835]
bas 4, expnt(s) = [0.10410964]
CPU time:        10.82
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910846e+02 3.28949306e+02 6.59869527e+01 5.84936307e+01
 9.86139341e+00 1.40594632e+01 2.04138350e+00 4.31477819e+00
 1.04109642e-01 4.63055705e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984903143412443
cond(S) = 10.161408335796567
E1 = -18.99360949690612  E_coul = 4.5113235170312285
init E= -14.4822859798749
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303025310849192  LUMO = 8.10675943459185
  mo_energy =
[-4.69569666e+00 -3.03025311e-01  8.10675943e+00  9.10249834e+01
  1.03978921e+03]
E1 = -19.022119829879866  E_coul = 4.5131605194228985
cycle= 1 E= -14.508959310457  delta_E= -0.0267  |g|= 0.017  |ddm|= 0.084
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0183316
diis-c [-3.3604631e-04  1.0000000e+00]
  HOMO = -0.300276644016286  LUMO = 8.11158933503173
  mo_energy =
[-4.69762733e+00 -3.00276644e-01  8.11158934e+00  9.10185564e+01
  1.03976881e+03]
E1 = -19.021267281544535  E_coul = 4.512298386085669
cycle= 2 E= -14.5089688954589  delta_E= -9.59e-06  |g|= 0.000667  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000732226
diis-c [-2.65728075e-07 -2.92078762e-02  1.02920788e+00]
  HOMO = -0.300308526451098  LUMO = 8.11140231329337
  mo_energy =
[-4.69803934e+00 -3.00308526e-01  8.11140231e+00  9.10180394e+01
  1.03976798e+03]
E1 = -19.021242906722033  E_coul = 4.51227398875741
cycle= 3 E= -14.5089689179646  delta_E= -2.25e-08  |g|= 1.66e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.23662e-05
diis-c [-2.24010758e-11  1.03657883e-03 -4.45437309e-02  1.04350715e+00]
  HOMO = -0.300309013284053  LUMO = 8.11140647034019
  mo_energy =
[-4.69803854e+00 -3.00309013e-01  8.11140647e+00  9.10180652e+01
  1.03976802e+03]
E1 = -19.02124296753881  E_coul = 4.512274049560042
cycle= 4 E= -14.5089689179788  delta_E= -1.41e-11  |g|= 1.18e-07  |ddm|= 3.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02124296753881  E_coul = 4.512274049560042
  HOMO = -0.300309012225983  LUMO = 8.11140657411483
  mo_energy =
[-4.69803842e+00 -3.00309012e-01  8.11140657e+00  9.10180657e+01
  1.03976802e+03]
E1 = -19.021242975921698  E_coul = 4.512274057942931
Extra cycle  E= -14.5089689179788  delta_E= 3.55e-15  |g|= 5.5e-09  |ddm|= 1.52e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.161408335796567
E1 = -19.021242975921698  E_coul = 4.512274057942931
init E= -14.5089689179788
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300309012212374  LUMO = 8.11140657819363
  mo_energy =
[-4.69803842e+00 -3.00309012e-01  8.11140658e+00  9.10180657e+01
  1.03976802e+03]
E1 = -19.021242976232458  E_coul = 4.512274058253694
cycle= 1 E= -14.5089689179788  delta_E= 3.55e-15  |g|= 2.68e-10  |ddm|= 7.54e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.021242976232458  E_coul = 4.512274058253694
  HOMO = -0.3003090122138  LUMO = 8.11140657836027
  mo_energy =
[-4.69803842e+00 -3.00309012e-01  8.11140658e+00  9.10180657e+01
  1.03976802e+03]
E1 = -19.021242976244338  E_coul = 4.51227405826557
Extra cycle  E= -14.5089689179788  delta_E= -5.33e-15  |g|= 1.35e-11  |ddm|= 4.09e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59910846e+02 6.59869527e+01 9.86139341e+00 2.04138350e+00
 1.04109642e-01]
grad_E = [ 9.01923634e-06  1.21305106e-03 -2.91205373e-03 -2.75078778e-03
 -3.99779041e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.91076983         1
[INPUT] 0    0    [1    /1   ]  65.9764324643        1
[INPUT] 0    0    [1    /1   ]  9.8906877079         1
[INPUT] 0    0    [1    /1   ]  2.03930336561        1
[INPUT] 0    0    [1    /1   ]  0.104050671796       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9107698302988, 1.0]], [0, [65.97643246425098, 1.0]], [0, [9.890687707896033, 1.0]], [0, [2.039303365611053, 1.0]], [0, [0.10405067179631834, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91076983]
bas 1, expnt(s) = [65.97643246]
bas 2, expnt(s) = [9.89068771]
bas 3, expnt(s) = [2.03930337]
bas 4, expnt(s) = [0.10405067]
CPU time:        12.86
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910770e+02 3.28949277e+02 6.59764325e+01 5.84866364e+01
 9.89068771e+00 1.40907754e+01 2.03930337e+00 4.31148025e+00
 1.04050672e-01 4.62858976e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9849051107078135
cond(S) = 10.146627105887069
E1 = -18.99339503574405  E_coul = 4.510743092053861
init E= -14.4826519436902
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303061370508687  LUMO = 8.11796042214301
  mo_energy =
[-4.69598835e+00 -3.03061371e-01  8.11796042e+00  9.11008497e+01
  1.03983740e+03]
E1 = -19.020487899938715  E_coul = 4.511456721905524
cycle= 1 E= -14.5090311780332  delta_E= -0.0264  |g|= 0.0161  |ddm|= 0.0851
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0172126
diis-c [-2.9627406e-04  1.0000000e+00]
  HOMO = -0.300333164737724  LUMO = 8.12229583382886
  mo_energy =
[-4.69845858e+00 -3.00333165e-01  8.12229583e+00  9.10929392e+01
  1.03981573e+03]
E1 = -19.019590308895125  E_coul = 4.510549684963941
cycle= 2 E= -14.5090406239312  delta_E= -9.45e-06  |g|= 0.000647  |ddm|= 0.00359
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00071142
diis-c [-2.52807345e-07 -3.01341442e-02  1.03013414e+00]
  HOMO = -0.300365402417532  LUMO = 8.12208767616262
  mo_energy =
[-4.69889375e+00 -3.00365402e-01  8.12208768e+00  9.10923444e+01
  1.03981481e+03]
E1 = -19.01956408294241  E_coul = 4.510523437103062
cycle= 3 E= -14.5090406458393  delta_E= -2.19e-08  |g|= 1.56e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.13424e-05
diis-c [-1.73874699e-11  1.02903453e-03 -4.36044230e-02  1.04257539e+00]
  HOMO = -0.300365855899508  LUMO = 8.12209173566725
  mo_energy =
[-4.69889284e+00 -3.00365856e-01  8.12209174e+00  9.10923693e+01
  1.03981485e+03]
E1 = -19.019564147158718  E_coul = 4.510523501306775
cycle= 4 E= -14.5090406458519  delta_E= -1.26e-11  |g|= 1.17e-07  |ddm|= 3.63e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.019564147158718  E_coul = 4.510523501306775
  HOMO = -0.300365854311014  LUMO = 8.12209184538094
  mo_energy =
[-4.69889272e+00 -3.00365854e-01  8.12209185e+00  9.10923698e+01
  1.03981485e+03]
E1 = -19.01956415615056  E_coul = 4.51052351029862
Extra cycle  E= -14.5090406458519  delta_E= 1.78e-15  |g|= 5.26e-09  |ddm|= 1.48e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910770e+02 6.59764325e+01 9.89068771e+00 2.03930337e+00
 1.04050672e-01]
E = -14.509040645851941
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.91076983         1
[INPUT] 0    0    [1    /1   ]  65.9764324643        1
[INPUT] 0    0    [1    /1   ]  9.8906877079         1
[INPUT] 0    0    [1    /1   ]  2.03930336561        1
[INPUT] 0    0    [1    /1   ]  0.104050671796       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9107698302988, 1.0]], [0, [65.97643246425098, 1.0]], [0, [9.890687707896033, 1.0]], [0, [2.039303365611053, 1.0]], [0, [0.10405067179631834, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91076983]
bas 1, expnt(s) = [65.97643246]
bas 2, expnt(s) = [9.89068771]
bas 3, expnt(s) = [2.03930337]
bas 4, expnt(s) = [0.10405067]
CPU time:        13.00
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910770e+02 3.28949277e+02 6.59764325e+01 5.84866364e+01
 9.89068771e+00 1.40907754e+01 2.03930337e+00 4.31148025e+00
 1.04050672e-01 4.62858976e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9849051107078135
cond(S) = 10.146627105887069
E1 = -18.99339503574405  E_coul = 4.510743092053861
init E= -14.4826519436902
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303061370508687  LUMO = 8.11796042214301
  mo_energy =
[-4.69598835e+00 -3.03061371e-01  8.11796042e+00  9.11008497e+01
  1.03983740e+03]
E1 = -19.020487899938715  E_coul = 4.511456721905524
cycle= 1 E= -14.5090311780332  delta_E= -0.0264  |g|= 0.0161  |ddm|= 0.0851
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0172126
diis-c [-2.9627406e-04  1.0000000e+00]
  HOMO = -0.300333164737724  LUMO = 8.12229583382886
  mo_energy =
[-4.69845858e+00 -3.00333165e-01  8.12229583e+00  9.10929392e+01
  1.03981573e+03]
E1 = -19.019590308895125  E_coul = 4.510549684963941
cycle= 2 E= -14.5090406239312  delta_E= -9.45e-06  |g|= 0.000647  |ddm|= 0.00359
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00071142
diis-c [-2.52807345e-07 -3.01341442e-02  1.03013414e+00]
  HOMO = -0.300365402417532  LUMO = 8.12208767616262
  mo_energy =
[-4.69889375e+00 -3.00365402e-01  8.12208768e+00  9.10923444e+01
  1.03981481e+03]
E1 = -19.01956408294241  E_coul = 4.510523437103062
cycle= 3 E= -14.5090406458393  delta_E= -2.19e-08  |g|= 1.56e-05  |ddm|= 0.00017
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.13424e-05
diis-c [-1.73874699e-11  1.02903453e-03 -4.36044230e-02  1.04257539e+00]
  HOMO = -0.300365855899508  LUMO = 8.12209173566725
  mo_energy =
[-4.69889284e+00 -3.00365856e-01  8.12209174e+00  9.10923693e+01
  1.03981485e+03]
E1 = -19.019564147158718  E_coul = 4.510523501306775
cycle= 4 E= -14.5090406458519  delta_E= -1.26e-11  |g|= 1.17e-07  |ddm|= 3.63e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.019564147158718  E_coul = 4.510523501306775
  HOMO = -0.300365854311014  LUMO = 8.12209184538094
  mo_energy =
[-4.69889272e+00 -3.00365854e-01  8.12209185e+00  9.10923698e+01
  1.03981485e+03]
E1 = -19.01956415615056  E_coul = 4.51052351029862
Extra cycle  E= -14.5090406458519  delta_E= 1.78e-15  |g|= 5.26e-09  |ddm|= 1.48e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.146627105887069
E1 = -19.01956415615056  E_coul = 4.51052351029862
init E= -14.5090406458519
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300365854275357  LUMO = 8.12209184960214
  mo_energy =
[-4.69889271e+00 -3.00365854e-01  8.12209185e+00  9.10923698e+01
  1.03981485e+03]
E1 = -19.0195641564792  E_coul = 4.510523510627262
cycle= 1 E= -14.5090406458519  delta_E= 5.33e-15  |g|= 2.49e-10  |ddm|= 6.85e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.0195641564792  E_coul = 4.510523510627262
  HOMO = -0.300365854275808  LUMO = 8.12209184977057
  mo_energy =
[-4.69889271e+00 -3.00365854e-01  8.12209185e+00  9.10923698e+01
  1.03981485e+03]
E1 = -19.019564156491544  E_coul = 4.510523510639605
Extra cycle  E= -14.5090406458519  delta_E= -3.55e-15  |g|= 1.23e-11  |ddm|= 3.6e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910770e+02 6.59764325e+01 9.89068771e+00 2.03930337e+00
 1.04050672e-01]
grad_E = [ 9.28790748e-06  1.16595982e-03 -1.86037512e-03 -7.44258055e-03
 -2.50637492e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910603262        1
[INPUT] 0    0    [1    /1   ]  65.9536439066        1
[INPUT] 0    0    [1    /1   ]  9.9525384011         1
[INPUT] 0    0    [1    /1   ]  2.04252711863        1
[INPUT] 0    0    [1    /1   ]  0.10399355122        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.910603262363, 1.0]], [0, [65.95364390658693, 1.0]], [0, [9.952538401103192, 1.0]], [0, [2.0425271186277385, 1.0]], [0, [0.10399355122022724, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91060326]
bas 1, expnt(s) = [65.95364391]
bas 2, expnt(s) = [9.9525384]
bas 3, expnt(s) = [2.04252712]
bas 4, expnt(s) = [0.10399355]
CPU time:        15.05
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910603e+02 3.28949215e+02 6.59536439e+01 5.84714846e+01
 9.95253840e+00 1.41568106e+01 2.04252712e+00 4.31659097e+00
 1.03993551e-01 4.62668392e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984875799366673
cond(S) = 10.148141325433018
E1 = -18.9932180149462  E_coul = 4.510262058830494
init E= -14.4829559561157
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303118520714624  LUMO = 8.16522775524733
  mo_energy =
[-4.69623884e+00 -3.03118521e-01  8.16522776e+00  9.12875538e+01
  1.03995791e+03]
E1 = -19.019551396607135  E_coul = 4.5103914455682
cycle= 1 E= -14.5091599510389  delta_E= -0.0262  |g|= 0.0152  |ddm|= 0.0857
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0159962
diis-c [-2.55878493e-04  1.00000000e+00]
  HOMO = -0.300382459202253  LUMO = 8.16927212770424
  mo_energy =
[-4.69900620e+00 -3.00382459e-01  8.16927213e+00  9.12788782e+01
  1.03993614e+03]
E1 = -19.018618973631344  E_coul = 4.509449813265859
cycle= 2 E= -14.5091691603655  delta_E= -9.21e-06  |g|= 0.000623  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000687968
diis-c [-2.35381474e-07 -3.14667778e-02  1.03146678e+00]
  HOMO = -0.300414713358885  LUMO = 8.16904499706664
  mo_energy =
[-4.69945979e+00 -3.00414713e-01  8.16904500e+00  9.12782141e+01
  1.03993514e+03]
E1 = -19.018591323467653  E_coul = 4.509422142164837
cycle= 3 E= -14.5091691813028  delta_E= -2.09e-08  |g|= 1.43e-05  |ddm|= 0.000167
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.98302e-05
diis-c [-1.30167056e-11  1.01193543e-03 -4.19142630e-02  1.04090233e+00]
  HOMO = -0.300415110508364  LUMO = 8.16904909492319
  mo_energy =
[-4.69945850e+00 -3.00415111e-01  8.16904909e+00  9.12782384e+01
  1.03993518e+03]
E1 = -19.018591411370874  E_coul = 4.509422230057619
cycle= 4 E= -14.5091691813133  delta_E= -1.04e-11  |g|= 1.16e-07  |ddm|= 3.27e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.018591411370874  E_coul = 4.509422230057619
  HOMO = -0.300415108426309  LUMO = 8.16904921062245
  mo_energy =
[-4.69945837e+00 -3.00415108e-01  8.16904921e+00  9.12782388e+01
  1.03993518e+03]
E1 = -19.018591420903462  E_coul = 4.509422239590193
Extra cycle  E= -14.5091691813133  delta_E= -1.42e-14  |g|= 5.05e-09  |ddm|= 1.48e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
exp = [6.59910603e+02 6.59536439e+01 9.95253840e+00 2.04252712e+00
 1.03993551e-01]
E = -14.509169181313268
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910603262        1
[INPUT] 0    0    [1    /1   ]  65.9536439066        1
[INPUT] 0    0    [1    /1   ]  9.9525384011         1
[INPUT] 0    0    [1    /1   ]  2.04252711863        1
[INPUT] 0    0    [1    /1   ]  0.10399355122        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.910603262363, 1.0]], [0, [65.95364390658693, 1.0]], [0, [9.952538401103192, 1.0]], [0, [2.0425271186277385, 1.0]], [0, [0.10399355122022724, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91060326]
bas 1, expnt(s) = [65.95364391]
bas 2, expnt(s) = [9.9525384]
bas 3, expnt(s) = [2.04252712]
bas 4, expnt(s) = [0.10399355]
CPU time:        15.20
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910603e+02 3.28949215e+02 6.59536439e+01 5.84714846e+01
 9.95253840e+00 1.41568106e+01 2.04252712e+00 4.31659097e+00
 1.03993551e-01 4.62668392e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984875799366673
cond(S) = 10.148141325433018
E1 = -18.9932180149462  E_coul = 4.510262058830494
init E= -14.4829559561157
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303118520714624  LUMO = 8.16522775524733
  mo_energy =
[-4.69623884e+00 -3.03118521e-01  8.16522776e+00  9.12875538e+01
  1.03995791e+03]
E1 = -19.019551396607135  E_coul = 4.5103914455682
cycle= 1 E= -14.5091599510389  delta_E= -0.0262  |g|= 0.0152  |ddm|= 0.0857
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0159962
diis-c [-2.55878493e-04  1.00000000e+00]
  HOMO = -0.300382459202253  LUMO = 8.16927212770424
  mo_energy =
[-4.69900620e+00 -3.00382459e-01  8.16927213e+00  9.12788782e+01
  1.03993614e+03]
E1 = -19.018618973631344  E_coul = 4.509449813265859
cycle= 2 E= -14.5091691603655  delta_E= -9.21e-06  |g|= 0.000623  |ddm|= 0.00358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000687968
diis-c [-2.35381474e-07 -3.14667778e-02  1.03146678e+00]
  HOMO = -0.300414713358885  LUMO = 8.16904499706664
  mo_energy =
[-4.69945979e+00 -3.00414713e-01  8.16904500e+00  9.12782141e+01
  1.03993514e+03]
E1 = -19.018591323467653  E_coul = 4.509422142164837
cycle= 3 E= -14.5091691813028  delta_E= -2.09e-08  |g|= 1.43e-05  |ddm|= 0.000167
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.98302e-05
diis-c [-1.30167056e-11  1.01193543e-03 -4.19142630e-02  1.04090233e+00]
  HOMO = -0.300415110508364  LUMO = 8.16904909492319
  mo_energy =
[-4.69945850e+00 -3.00415111e-01  8.16904909e+00  9.12782384e+01
  1.03993518e+03]
E1 = -19.018591411370874  E_coul = 4.509422230057619
cycle= 4 E= -14.5091691813133  delta_E= -1.04e-11  |g|= 1.16e-07  |ddm|= 3.27e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.018591411370874  E_coul = 4.509422230057619
  HOMO = -0.300415108426309  LUMO = 8.16904921062245
  mo_energy =
[-4.69945837e+00 -3.00415108e-01  8.16904921e+00  9.12782388e+01
  1.03993518e+03]
E1 = -19.018591420903462  E_coul = 4.509422239590193
Extra cycle  E= -14.5091691813133  delta_E= -1.42e-14  |g|= 5.05e-09  |ddm|= 1.48e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.148141325433018
E1 = -19.018591420903462  E_coul = 4.509422239590193
init E= -14.5091691813133
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300415108370672  LUMO = 8.16904921498122
  mo_energy =
[-4.69945836e+00 -3.00415108e-01  8.16904921e+00  9.12782388e+01
  1.03993518e+03]
E1 = -19.018591421247102  E_coul = 4.509422239933837
cycle= 1 E= -14.5091691813133  delta_E= 3.55e-15  |g|= 2.32e-10  |ddm|= 6.33e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.018591421247102  E_coul = 4.509422239933837
  HOMO = -0.300415108370236  LUMO = 8.16904921515118
  mo_energy =
[-4.69945836e+00 -3.00415108e-01  8.16904922e+00  9.12782388e+01
  1.03993518e+03]
E1 = -19.018591421259803  E_coul = 4.509422239946541
Extra cycle  E= -14.5091691813133  delta_E= 3.55e-15  |g|= 1.12e-11  |ddm|= 3.16e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59910603e+02 6.59536439e+01 9.95253840e+00 2.04252712e+00
 1.03993551e-01]
grad_E = [ 9.76175707e-06  1.08742648e-03 -4.78588018e-04 -1.17306452e-02
 -4.93482445e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910300259        1
[INPUT] 0    0    [1    /1   ]  65.9125072834        1
[INPUT] 0    0    [1    /1   ]  10.0616875097        1
[INPUT] 0    0    [1    /1   ]  2.05702927156        1
[INPUT] 0    0    [1    /1   ]  0.103971637315       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9103002587685, 1.0]], [0, [65.91250728343395, 1.0]], [0, [10.061687509744985, 1.0]], [0, [2.057029271562542, 1.0]], [0, [0.10397163731487062, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91030026]
bas 1, expnt(s) = [65.91250728]
bas 2, expnt(s) = [10.06168751]
bas 3, expnt(s) = [2.05702927]
bas 4, expnt(s) = [0.10397164]
CPU time:        17.15
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910300e+02 3.28949102e+02 6.59125073e+01 5.84441301e+01
 1.00616875e+01 1.42730946e+01 2.05702927e+00 4.33955681e+00
 1.03971637e-01 4.62595269e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984786779732258
cond(S) = 10.188999228243224
E1 = -18.99333139014761  E_coul = 4.510299816910958
init E= -14.4830315732367
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303196537925444  LUMO = 8.27630411265681
  mo_energy =
[-4.69624355e+00 -3.03196538e-01  8.27630411e+00  9.16471894e+01
  1.04019184e+03]
E1 = -19.020832344735602  E_coul = 4.511479095196184
cycle= 1 E= -14.5093532495394  delta_E= -0.0263  |g|= 0.0144  |ddm|= 0.0843
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151351
diis-c [-2.29070955e-04  1.00000000e+00]
  HOMO = -0.300387710223698  LUMO = 8.2807199242043
  mo_energy =
[-4.69855358e+00 -3.00387710e-01  8.28071992e+00  9.16399234e+01
  1.04017282e+03]
E1 = -19.019908240671683  E_coul = 4.510546182089901
cycle= 2 E= -14.5093620585818  delta_E= -8.81e-06  |g|= 0.0006  |ddm|= 0.0035
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000666598
diis-c [-2.16048713e-07 -3.26147918e-02  1.03261479e+00]
  HOMO = -0.300419141693827  LUMO = 8.28048951273504
  mo_energy =
[-4.69900403e+00 -3.00419142e-01  8.28048951e+00  9.16392480e+01
  1.04017182e+03]
E1 = -19.019880938806406  E_coul = 4.5105188606898245
cycle= 3 E= -14.5093620781166  delta_E= -1.95e-08  |g|= 1.29e-05  |ddm|= 0.000161
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.81917e-05
diis-c [-1.04322242e-11  9.83998791e-04 -3.99642095e-02  1.03898021e+00]
  HOMO = -0.300419475123639  LUMO = 8.28049376624117
  mo_energy =
[-4.69900221e+00 -3.00419475e-01  8.28049377e+00  9.16392719e+01
  1.04017186e+03]
E1 = -19.019881064465043  E_coul = 4.510518986340109
cycle= 4 E= -14.5093620781249  delta_E= -8.35e-12  |g|= 1.12e-07  |ddm|= 2.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.019881064465043  E_coul = 4.510518986340109
  HOMO = -0.300419472759143  LUMO = 8.28049388378736
  mo_energy =
[-4.69900207e+00 -3.00419473e-01  8.28049388e+00  9.16392723e+01
  1.04017186e+03]
E1 = -19.01988107407336  E_coul = 4.5105189959484315
Extra cycle  E= -14.5093620781249  delta_E= 3.55e-15  |g|= 4.75e-09  |ddm|= 1.45e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910300e+02 6.59125073e+01 1.00616875e+01 2.05702927e+00
 1.03971637e-01]
E = -14.50936207812493
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910300259        1
[INPUT] 0    0    [1    /1   ]  65.9125072834        1
[INPUT] 0    0    [1    /1   ]  10.0616875097        1
[INPUT] 0    0    [1    /1   ]  2.05702927156        1
[INPUT] 0    0    [1    /1   ]  0.103971637315       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9103002587685, 1.0]], [0, [65.91250728343395, 1.0]], [0, [10.061687509744985, 1.0]], [0, [2.057029271562542, 1.0]], [0, [0.10397163731487062, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91030026]
bas 1, expnt(s) = [65.91250728]
bas 2, expnt(s) = [10.06168751]
bas 3, expnt(s) = [2.05702927]
bas 4, expnt(s) = [0.10397164]
CPU time:        17.32
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910300e+02 3.28949102e+02 6.59125073e+01 5.84441301e+01
 1.00616875e+01 1.42730946e+01 2.05702927e+00 4.33955681e+00
 1.03971637e-01 4.62595269e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984786779732258
cond(S) = 10.188999228243224
E1 = -18.99333139014761  E_coul = 4.510299816910958
init E= -14.4830315732367
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303196537925444  LUMO = 8.27630411265681
  mo_energy =
[-4.69624355e+00 -3.03196538e-01  8.27630411e+00  9.16471894e+01
  1.04019184e+03]
E1 = -19.020832344735602  E_coul = 4.511479095196184
cycle= 1 E= -14.5093532495394  delta_E= -0.0263  |g|= 0.0144  |ddm|= 0.0843
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151351
diis-c [-2.29070955e-04  1.00000000e+00]
  HOMO = -0.300387710223698  LUMO = 8.2807199242043
  mo_energy =
[-4.69855358e+00 -3.00387710e-01  8.28071992e+00  9.16399234e+01
  1.04017282e+03]
E1 = -19.019908240671683  E_coul = 4.510546182089901
cycle= 2 E= -14.5093620585818  delta_E= -8.81e-06  |g|= 0.0006  |ddm|= 0.0035
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000666598
diis-c [-2.16048713e-07 -3.26147918e-02  1.03261479e+00]
  HOMO = -0.300419141693827  LUMO = 8.28048951273504
  mo_energy =
[-4.69900403e+00 -3.00419142e-01  8.28048951e+00  9.16392480e+01
  1.04017182e+03]
E1 = -19.019880938806406  E_coul = 4.5105188606898245
cycle= 3 E= -14.5093620781166  delta_E= -1.95e-08  |g|= 1.29e-05  |ddm|= 0.000161
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.81917e-05
diis-c [-1.04322242e-11  9.83998791e-04 -3.99642095e-02  1.03898021e+00]
  HOMO = -0.300419475123639  LUMO = 8.28049376624117
  mo_energy =
[-4.69900221e+00 -3.00419475e-01  8.28049377e+00  9.16392719e+01
  1.04017186e+03]
E1 = -19.019881064465043  E_coul = 4.510518986340109
cycle= 4 E= -14.5093620781249  delta_E= -8.35e-12  |g|= 1.12e-07  |ddm|= 2.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.019881064465043  E_coul = 4.510518986340109
  HOMO = -0.300419472759143  LUMO = 8.28049388378736
  mo_energy =
[-4.69900207e+00 -3.00419473e-01  8.28049388e+00  9.16392723e+01
  1.04017186e+03]
E1 = -19.01988107407336  E_coul = 4.5105189959484315
Extra cycle  E= -14.5093620781249  delta_E= 3.55e-15  |g|= 4.75e-09  |ddm|= 1.45e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.188999228243224
E1 = -19.01988107407336  E_coul = 4.5105189959484315
init E= -14.5093620781249
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300419472691953  LUMO = 8.28049388813396
  mo_energy =
[-4.69900207e+00 -3.00419473e-01  8.28049389e+00  9.16392724e+01
  1.04017186e+03]
E1 = -19.019881074415427  E_coul = 4.510518996290497
cycle= 1 E= -14.5093620781249  delta_E=    0  |g|= 2.12e-10  |ddm|= 5.85e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.019881074415427  E_coul = 4.510518996290497
  HOMO = -0.300419472690933  LUMO = 8.28049388830024
  mo_energy =
[-4.69900207e+00 -3.00419473e-01  8.28049389e+00  9.16392724e+01
  1.04017186e+03]
E1 = -19.019881074427925  E_coul = 4.510518996302985
Extra cycle  E= -14.5093620781249  delta_E= -1.07e-14  |g|= 1e-11  |ddm|= 2.77e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910300e+02 6.59125073e+01 1.00616875e+01 2.05702927e+00
 1.03971637e-01]
grad_E = [ 1.04865835e-05  9.74728123e-04  9.46354064e-04 -1.26418194e-02
 -5.96702153e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910024312        1
[INPUT] 0    0    [1    /1   ]  65.8755847803        1
[INPUT] 0    0    [1    /1   ]  10.1561974018        1
[INPUT] 0    0    [1    /1   ]  2.07762290329        1
[INPUT] 0    0    [1    /1   ]  0.10402812299        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9100243118876, 1.0]], [0, [65.87558478033641, 1.0]], [0, [10.156197401786592, 1.0]], [0, [2.077622903293533, 1.0]], [0, [0.10402812298950453, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91002431]
bas 1, expnt(s) = [65.87558478]
bas 2, expnt(s) = [10.1561974]
bas 3, expnt(s) = [2.0776229]
bas 4, expnt(s) = [0.10402812]
CPU time:        19.34
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910024e+02 3.28948998e+02 6.58755848e+01 5.84195741e+01
 1.01561974e+01 1.43735278e+01 2.07762290e+00 4.37209981e+00
 1.04028123e-01 4.62783745e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846686103322764
cond(S) = 10.25874192785844
E1 = -18.993958491963  E_coul = 4.5111856952346105
init E= -14.4827727967284
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303241861333764  LUMO = 8.39790975778654
  mo_energy =
[-4.69582840e+00 -3.03241861e-01  8.39790976e+00  9.19856404e+01
  1.04041246e+03]
E1 = -19.024688842943124  E_coul = 4.515199734053737
cycle= 1 E= -14.5094891088894  delta_E= -0.0267  |g|= 0.0144  |ddm|= 0.0809
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0154275
diis-c [-2.38008023e-04  1.00000000e+00]
  HOMO = -0.300313683379756  LUMO = 8.40349009297276
  mo_energy =
[-4.69683504e+00 -3.00313683e-01  8.40349009e+00  9.19821648e+01
  1.04039860e+03]
E1 = -19.02383368579007  E_coul = 4.514336129424912
cycle= 2 E= -14.5094975563652  delta_E= -8.45e-06  |g|= 0.000595  |ddm|= 0.00337
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000662708
diis-c [-2.07991777e-07 -3.21837144e-02  1.03218371e+00]
  HOMO = -0.300343660297439  LUMO = 8.40328447994186
  mo_energy =
[-4.69725097e+00 -3.00343660e-01  8.40328448e+00  9.19815795e+01
  1.04039773e+03]
E1 = -19.02380918007442  E_coul = 4.51431160513788
cycle= 3 E= -14.5094975749365  delta_E= -1.86e-08  |g|= 1.27e-05  |ddm|= 0.000154
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.78642e-05
diis-c [-9.09385547e-12  9.81162209e-04 -4.00626208e-02  1.03908146e+00]
  HOMO = -0.300343981517036  LUMO = 8.40328879482543
  mo_energy =
[-4.69724906e+00 -3.00343982e-01  8.40328879e+00  9.19816033e+01
  1.04039776e+03]
E1 = -19.02380931891077  E_coul = 4.514311743966289
cycle= 4 E= -14.5094975749445  delta_E= -7.94e-12  |g|= 1.02e-07  |ddm|= 2.76e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02380931891077  E_coul = 4.514311743966289
  HOMO = -0.300343979360945  LUMO = 8.40328890347191
  mo_energy =
[-4.69724894e+00 -3.00343979e-01  8.40328890e+00  9.19816037e+01
  1.04039777e+03]
E1 = -19.02380932768582  E_coul = 4.514311752741341
Extra cycle  E= -14.5094975749445  delta_E= 3.55e-15  |g|= 4.32e-09  |ddm|= 1.33e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59910024e+02 6.58755848e+01 1.01561974e+01 2.07762290e+00
 1.04028123e-01]
E = -14.50949757494448
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.910024312        1
[INPUT] 0    0    [1    /1   ]  65.8755847803        1
[INPUT] 0    0    [1    /1   ]  10.1561974018        1
[INPUT] 0    0    [1    /1   ]  2.07762290329        1
[INPUT] 0    0    [1    /1   ]  0.10402812299        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9100243118876, 1.0]], [0, [65.87558478033641, 1.0]], [0, [10.156197401786592, 1.0]], [0, [2.077622903293533, 1.0]], [0, [0.10402812298950453, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.91002431]
bas 1, expnt(s) = [65.87558478]
bas 2, expnt(s) = [10.1561974]
bas 3, expnt(s) = [2.0776229]
bas 4, expnt(s) = [0.10402812]
CPU time:        19.53
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59910024e+02 3.28948998e+02 6.58755848e+01 5.84195741e+01
 1.01561974e+01 1.43735278e+01 2.07762290e+00 4.37209981e+00
 1.04028123e-01 4.62783745e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846686103322764
cond(S) = 10.25874192785844
E1 = -18.993958491963  E_coul = 4.5111856952346105
init E= -14.4827727967284
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303241861333764  LUMO = 8.39790975778654
  mo_energy =
[-4.69582840e+00 -3.03241861e-01  8.39790976e+00  9.19856404e+01
  1.04041246e+03]
E1 = -19.024688842943124  E_coul = 4.515199734053737
cycle= 1 E= -14.5094891088894  delta_E= -0.0267  |g|= 0.0144  |ddm|= 0.0809
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0154275
diis-c [-2.38008023e-04  1.00000000e+00]
  HOMO = -0.300313683379756  LUMO = 8.40349009297276
  mo_energy =
[-4.69683504e+00 -3.00313683e-01  8.40349009e+00  9.19821648e+01
  1.04039860e+03]
E1 = -19.02383368579007  E_coul = 4.514336129424912
cycle= 2 E= -14.5094975563652  delta_E= -8.45e-06  |g|= 0.000595  |ddm|= 0.00337
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000662708
diis-c [-2.07991777e-07 -3.21837144e-02  1.03218371e+00]
  HOMO = -0.300343660297439  LUMO = 8.40328447994186
  mo_energy =
[-4.69725097e+00 -3.00343660e-01  8.40328448e+00  9.19815795e+01
  1.04039773e+03]
E1 = -19.02380918007442  E_coul = 4.51431160513788
cycle= 3 E= -14.5094975749365  delta_E= -1.86e-08  |g|= 1.27e-05  |ddm|= 0.000154
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.78642e-05
diis-c [-9.09385547e-12  9.81162209e-04 -4.00626208e-02  1.03908146e+00]
  HOMO = -0.300343981517036  LUMO = 8.40328879482543
  mo_energy =
[-4.69724906e+00 -3.00343982e-01  8.40328879e+00  9.19816033e+01
  1.04039776e+03]
E1 = -19.02380931891077  E_coul = 4.514311743966289
cycle= 4 E= -14.5094975749445  delta_E= -7.94e-12  |g|= 1.02e-07  |ddm|= 2.76e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02380931891077  E_coul = 4.514311743966289
  HOMO = -0.300343979360945  LUMO = 8.40328890347191
  mo_energy =
[-4.69724894e+00 -3.00343979e-01  8.40328890e+00  9.19816037e+01
  1.04039777e+03]
E1 = -19.02380932768582  E_coul = 4.514311752741341
Extra cycle  E= -14.5094975749445  delta_E= 3.55e-15  |g|= 4.32e-09  |ddm|= 1.33e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.25874192785844
E1 = -19.02380932768582  E_coul = 4.514311752741341
init E= -14.5094975749445
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30034397929939  LUMO = 8.40328890747289
  mo_energy =
[-4.69724893e+00 -3.00343979e-01  8.40328891e+00  9.19816037e+01
  1.04039777e+03]
E1 = -19.02380932799735  E_coul = 4.514311753052861
cycle= 1 E= -14.5094975749445  delta_E= -7.11e-15  |g|= 1.92e-10  |ddm|= 5.31e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02380932799735  E_coul = 4.514311753052861
  HOMO = -0.300343979298424  LUMO = 8.40328890762531
  mo_energy =
[-4.69724893e+00 -3.00343979e-01  8.40328891e+00  9.19816037e+01
  1.04039777e+03]
E1 = -19.023809328008678  E_coul = 4.5143117530642
Extra cycle  E= -14.5094975749445  delta_E= 7.11e-15  |g|= 9.01e-12  |ddm|= 2.49e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59910024e+02 6.58755848e+01 1.01561974e+01 2.07762290e+00
 1.04028123e-01]
grad_E = [ 1.10093411e-05  9.00672477e-04  1.28075141e-03 -7.36700101e-03
 -3.81891793e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909941808        1
[INPUT] 0    0    [1    /1   ]  65.8652662438        1
[INPUT] 0    0    [1    /1   ]  10.1785115303        1
[INPUT] 0    0    [1    /1   ]  2.08819554444        1
[INPUT] 0    0    [1    /1   ]  0.104097399214       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099418075942, 1.0]], [0, [65.86526624383589, 1.0]], [0, [10.178511530260792, 1.0]], [0, [2.088195544442061, 1.0]], [0, [0.1040973992142667, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90994181]
bas 1, expnt(s) = [65.86526624]
bas 2, expnt(s) = [10.17851153]
bas 3, expnt(s) = [2.08819554]
bas 4, expnt(s) = [0.1040974]
CPU time:        21.64
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909942e+02 3.28948968e+02 6.58652662e+01 5.84127110e+01
 1.01785115e+01 1.43972063e+01 2.08819554e+00 4.38877582e+00
 1.04097399e-01 4.63014864e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846084282815006
cond(S) = 10.299058589897587
E1 = -18.994514417392388  E_coul = 4.512012592112889
init E= -14.4825018252795
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303235723395569  LUMO = 8.44449643168805
  mo_energy =
[-4.69544069e+00 -3.03235723e-01  8.44449643e+00  9.20843712e+01
  1.04047498e+03]
E1 = -19.027592672814727  E_coul = 4.51806774557446
cycle= 1 E= -14.5095249272403  delta_E= -0.027  |g|= 0.0149  |ddm|= 0.0787
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0162095
diis-c [-2.62748971e-04  1.00000000e+00]
  HOMO = -0.300238322416228  LUMO = 8.45095421808213
  mo_energy =
[-4.69549427e+00 -3.00238322e-01  8.45095422e+00  9.20836256e+01
  1.04046436e+03]
E1 = -19.026796877813556  E_coul = 4.517263585343969
cycle= 2 E= -14.5095332924696  delta_E= -8.37e-06  |g|= 0.000605  |ddm|= 0.0033
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000673116
diis-c [-2.10900163e-07 -3.13236381e-02  1.03132364e+00]
  HOMO = -0.300267439099939  LUMO = 8.45077372933236
  mo_energy =
[-4.69588002e+00 -3.00267439e-01  8.45077373e+00  9.20831308e+01
  1.04046360e+03]
E1 = -19.026774764242298  E_coul = 4.517241453268369
cycle= 3 E= -14.5095333109739  delta_E= -1.85e-08  |g|= 1.32e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.83979e-05
diis-c [-8.91040591e-12  1.00035602e-03 -4.11635160e-02  1.04016316e+00]
  HOMO = -0.300267777176369  LUMO = 8.45077810065439
  mo_energy =
[-4.69587819e+00 -3.00267777e-01  8.45077810e+00  9.20831549e+01
  1.04046364e+03]
E1 = -19.02677490373415  E_coul = 4.517241592751702
cycle= 4 E= -14.5095333109824  delta_E= -8.52e-12  |g|= 9.64e-08  |ddm|= 2.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02677490373415  E_coul = 4.517241592751702
  HOMO = -0.300267775423486  LUMO = 8.45077819953645
  mo_energy =
[-4.69587808e+00 -3.00267775e-01  8.45077820e+00  9.20831553e+01
  1.04046364e+03]
E1 = -19.026774911659086  E_coul = 4.517241600676645
Extra cycle  E= -14.5095333109824  delta_E= 7.11e-15  |g|= 4.13e-09  |ddm|= 1.22e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909942e+02 6.58652662e+01 1.01785115e+01 2.08819554e+00
 1.04097399e-01]
E = -14.509533310982441
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909941808        1
[INPUT] 0    0    [1    /1   ]  65.8652662438        1
[INPUT] 0    0    [1    /1   ]  10.1785115303        1
[INPUT] 0    0    [1    /1   ]  2.08819554444        1
[INPUT] 0    0    [1    /1   ]  0.104097399214       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099418075942, 1.0]], [0, [65.86526624383589, 1.0]], [0, [10.178511530260792, 1.0]], [0, [2.088195544442061, 1.0]], [0, [0.1040973992142667, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90994181]
bas 1, expnt(s) = [65.86526624]
bas 2, expnt(s) = [10.17851153]
bas 3, expnt(s) = [2.08819554]
bas 4, expnt(s) = [0.1040974]
CPU time:        21.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909942e+02 3.28948968e+02 6.58652662e+01 5.84127110e+01
 1.01785115e+01 1.43972063e+01 2.08819554e+00 4.38877582e+00
 1.04097399e-01 4.63014864e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846084282815006
cond(S) = 10.299058589897587
E1 = -18.994514417392388  E_coul = 4.512012592112889
init E= -14.4825018252795
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303235723395569  LUMO = 8.44449643168805
  mo_energy =
[-4.69544069e+00 -3.03235723e-01  8.44449643e+00  9.20843712e+01
  1.04047498e+03]
E1 = -19.027592672814727  E_coul = 4.51806774557446
cycle= 1 E= -14.5095249272403  delta_E= -0.027  |g|= 0.0149  |ddm|= 0.0787
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0162095
diis-c [-2.62748971e-04  1.00000000e+00]
  HOMO = -0.300238322416228  LUMO = 8.45095421808213
  mo_energy =
[-4.69549427e+00 -3.00238322e-01  8.45095422e+00  9.20836256e+01
  1.04046436e+03]
E1 = -19.026796877813556  E_coul = 4.517263585343969
cycle= 2 E= -14.5095332924696  delta_E= -8.37e-06  |g|= 0.000605  |ddm|= 0.0033
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000673116
diis-c [-2.10900163e-07 -3.13236381e-02  1.03132364e+00]
  HOMO = -0.300267439099939  LUMO = 8.45077372933236
  mo_energy =
[-4.69588002e+00 -3.00267439e-01  8.45077373e+00  9.20831308e+01
  1.04046360e+03]
E1 = -19.026774764242298  E_coul = 4.517241453268369
cycle= 3 E= -14.5095333109739  delta_E= -1.85e-08  |g|= 1.32e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.83979e-05
diis-c [-8.91040591e-12  1.00035602e-03 -4.11635160e-02  1.04016316e+00]
  HOMO = -0.300267777176369  LUMO = 8.45077810065439
  mo_energy =
[-4.69587819e+00 -3.00267777e-01  8.45077810e+00  9.20831549e+01
  1.04046364e+03]
E1 = -19.02677490373415  E_coul = 4.517241592751702
cycle= 4 E= -14.5095333109824  delta_E= -8.52e-12  |g|= 9.64e-08  |ddm|= 2.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02677490373415  E_coul = 4.517241592751702
  HOMO = -0.300267775423486  LUMO = 8.45077819953645
  mo_energy =
[-4.69587808e+00 -3.00267775e-01  8.45077820e+00  9.20831553e+01
  1.04046364e+03]
E1 = -19.026774911659086  E_coul = 4.517241600676645
Extra cycle  E= -14.5095333109824  delta_E= 7.11e-15  |g|= 4.13e-09  |ddm|= 1.22e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.299058589897587
E1 = -19.026774911659086  E_coul = 4.517241600676645
init E= -14.5095333109824
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300267775375447  LUMO = 8.45077820322026
  mo_energy =
[-4.69587808e+00 -3.00267775e-01  8.45077820e+00  9.20831553e+01
  1.04046364e+03]
E1 = -19.0267749119426  E_coul = 4.517241600960156
cycle= 1 E= -14.5095333109824  delta_E= -3.55e-15  |g|= 1.86e-10  |ddm|= 5.11e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.0267749119426  E_coul = 4.517241600960156
  HOMO = -0.30026777537493  LUMO = 8.4507782033623
  mo_energy =
[-4.69587808e+00 -3.00267775e-01  8.45077820e+00  9.20831553e+01
  1.04046364e+03]
E1 = -19.02677491195304  E_coul = 4.517241600970587
Extra cycle  E= -14.5095333109825  delta_E= -8.88e-15  |g|= 8.82e-12  |ddm|= 2.47e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59909942e+02 6.58652662e+01 1.01785115e+01 2.08819554e+00
 1.04097399e-01]
grad_E = [ 1.10610619e-05  8.98102527e-04  7.72135197e-04 -1.94348753e-03
 -1.07238459e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909946542        1
[INPUT] 0    0    [1    /1   ]  65.866740367         1
[INPUT] 0    0    [1    /1   ]  10.1702756493        1
[INPUT] 0    0    [1    /1   ]  2.08974498489        1
[INPUT] 0    0    [1    /1   ]  0.104123633666       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099465416015, 1.0]], [0, [65.8667403669851, 1.0]], [0, [10.17027564928001, 1.0]], [0, [2.08974498488742, 1.0]], [0, [0.10412363366613794, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90994654]
bas 1, expnt(s) = [65.86674037]
bas 2, expnt(s) = [10.17027565]
bas 3, expnt(s) = [2.08974498]
bas 4, expnt(s) = [0.10412363]
CPU time:        24.03
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909947e+02 3.28948969e+02 6.58667404e+01 5.84136915e+01
 1.01702756e+01 1.43884684e+01 2.08974498e+00 4.39121795e+00
 1.04123634e-01 4.63102378e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846011736618117
cond(S) = 10.306934055159294
E1 = -18.994695528535743  E_coul = 4.512283128195019
init E= -14.4824124003407
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303222982412473  LUMO = 8.44429355871081
  mo_energy =
[-4.69532039e+00 -3.03222982e-01  8.44429356e+00  9.20651097e+01
  1.04045918e+03]
E1 = -19.028417092873717  E_coul = 4.518887191560708
cycle= 1 E= -14.509529901313  delta_E= -0.0271  |g|= 0.0152  |ddm|= 0.0781
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0166065
diis-c [-2.75775313e-04  1.00000000e+00]
  HOMO = -0.300212562481064  LUMO = 8.45099560346723
  mo_energy =
[-4.69511281e+00 -3.00212562e-01  8.45099560e+00  9.20650994e+01
  1.04044929e+03]
E1 = -19.0276406688286  E_coul = 4.5181023665791615
cycle= 2 E= -14.5095383022494  delta_E= -8.4e-06  |g|= 0.000612  |ddm|= 0.00329
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000680409
diis-c [-2.14456331e-07 -3.09596378e-02  1.03095964e+00]
  HOMO = -0.300241498140806  LUMO = 8.45082418434407
  mo_energy =
[-4.69548863e+00 -3.00241498e-01  8.45082418e+00  9.20646373e+01
  1.04044856e+03]
E1 = -19.027619337904014  E_coul = 4.518081016976005
cycle= 3 E= -14.509538320928  delta_E= -1.87e-08  |g|= 1.35e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.87588e-05
diis-c [-9.34883845e-12  1.01019821e-03 -4.16899673e-02  1.04067977e+00]
  HOMO = -0.30024184735146  LUMO = 8.45082859035194
  mo_energy =
[-4.69548684e+00 -3.00241847e-01  8.45082859e+00  9.20646617e+01
  1.04044860e+03]
E1 = -19.027619476610834  E_coul = 4.518081155673886
cycle= 4 E= -14.5095383209369  delta_E= -8.94e-12  |g|= 9.56e-08  |ddm|= 2.94e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.027619476610834  E_coul = 4.518081155673886
  HOMO = -0.300241845788815  LUMO = 8.45082868584499
  mo_energy =
[-4.69548674e+00 -3.00241846e-01  8.45082869e+00  9.20646621e+01
  1.04044860e+03]
E1 = -19.027619484242617  E_coul = 4.518081163305657
Extra cycle  E= -14.509538320937  delta_E= -1.42e-14  |g|= 4.14e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909947e+02 6.58667404e+01 1.01702756e+01 2.08974498e+00
 1.04123634e-01]
E = -14.509538320936961
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909946542        1
[INPUT] 0    0    [1    /1   ]  65.866740367         1
[INPUT] 0    0    [1    /1   ]  10.1702756493        1
[INPUT] 0    0    [1    /1   ]  2.08974498489        1
[INPUT] 0    0    [1    /1   ]  0.104123633666       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099465416015, 1.0]], [0, [65.8667403669851, 1.0]], [0, [10.17027564928001, 1.0]], [0, [2.08974498488742, 1.0]], [0, [0.10412363366613794, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90994654]
bas 1, expnt(s) = [65.86674037]
bas 2, expnt(s) = [10.17027565]
bas 3, expnt(s) = [2.08974498]
bas 4, expnt(s) = [0.10412363]
CPU time:        24.27
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909947e+02 3.28948969e+02 6.58667404e+01 5.84136915e+01
 1.01702756e+01 1.43884684e+01 2.08974498e+00 4.39121795e+00
 1.04123634e-01 4.63102378e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846011736618117
cond(S) = 10.306934055159294
E1 = -18.994695528535743  E_coul = 4.512283128195019
init E= -14.4824124003407
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303222982412473  LUMO = 8.44429355871081
  mo_energy =
[-4.69532039e+00 -3.03222982e-01  8.44429356e+00  9.20651097e+01
  1.04045918e+03]
E1 = -19.028417092873717  E_coul = 4.518887191560708
cycle= 1 E= -14.509529901313  delta_E= -0.0271  |g|= 0.0152  |ddm|= 0.0781
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0166065
diis-c [-2.75775313e-04  1.00000000e+00]
  HOMO = -0.300212562481064  LUMO = 8.45099560346723
  mo_energy =
[-4.69511281e+00 -3.00212562e-01  8.45099560e+00  9.20650994e+01
  1.04044929e+03]
E1 = -19.0276406688286  E_coul = 4.5181023665791615
cycle= 2 E= -14.5095383022494  delta_E= -8.4e-06  |g|= 0.000612  |ddm|= 0.00329
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000680409
diis-c [-2.14456331e-07 -3.09596378e-02  1.03095964e+00]
  HOMO = -0.300241498140806  LUMO = 8.45082418434407
  mo_energy =
[-4.69548863e+00 -3.00241498e-01  8.45082418e+00  9.20646373e+01
  1.04044856e+03]
E1 = -19.027619337904014  E_coul = 4.518081016976005
cycle= 3 E= -14.509538320928  delta_E= -1.87e-08  |g|= 1.35e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.87588e-05
diis-c [-9.34883845e-12  1.01019821e-03 -4.16899673e-02  1.04067977e+00]
  HOMO = -0.30024184735146  LUMO = 8.45082859035194
  mo_energy =
[-4.69548684e+00 -3.00241847e-01  8.45082859e+00  9.20646617e+01
  1.04044860e+03]
E1 = -19.027619476610834  E_coul = 4.518081155673886
cycle= 4 E= -14.5095383209369  delta_E= -8.94e-12  |g|= 9.56e-08  |ddm|= 2.94e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.027619476610834  E_coul = 4.518081155673886
  HOMO = -0.300241845788815  LUMO = 8.45082868584499
  mo_energy =
[-4.69548674e+00 -3.00241846e-01  8.45082869e+00  9.20646621e+01
  1.04044860e+03]
E1 = -19.027619484242617  E_coul = 4.518081163305657
Extra cycle  E= -14.509538320937  delta_E= -1.42e-14  |g|= 4.14e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.306934055159294
E1 = -19.027619484242617  E_coul = 4.518081163305657
init E= -14.509538320937
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30024184574766  LUMO = 8.45082868943273
  mo_energy =
[-4.69548673e+00 -3.00241846e-01  8.45082869e+00  9.20646621e+01
  1.04044860e+03]
E1 = -19.027619484517192  E_coul = 4.518081163580249
cycle= 1 E= -14.5095383209369  delta_E= 1.78e-14  |g|= 1.89e-10  |ddm|= 5.16e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.027619484517192  E_coul = 4.518081163580249
  HOMO = -0.300241845747411  LUMO = 8.45082868957229
  mo_energy =
[-4.69548673e+00 -3.00241846e-01  8.45082869e+00  9.20646621e+01
  1.04044860e+03]
E1 = -19.027619484527374  E_coul = 4.51808116359042
Extra cycle  E= -14.509538320937  delta_E= -1.07e-14  |g|= 9.01e-12  |ddm|= 2.55e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59909947e+02 6.58667404e+01 1.01702756e+01 2.08974498e+00
 1.04123634e-01]
grad_E = [ 1.09759849e-05  9.12857571e-04  4.04795765e-04  2.71166418e-05
 -9.45822838e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909944776        1
[INPUT] 0    0    [1    /1   ]  65.8674044614        1
[INPUT] 0    0    [1    /1   ]  10.1640271931        1
[INPUT] 0    0    [1    /1   ]  2.08955951669        1
[INPUT] 0    0    [1    /1   ]  0.104129981217       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099447755523, 1.0]], [0, [65.86740446137051, 1.0]], [0, [10.164027193111124, 1.0]], [0, [2.0895595166942575, 1.0]], [0, [0.10412998121695358, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90994478]
bas 1, expnt(s) = [65.86740446]
bas 2, expnt(s) = [10.16402719]
bas 3, expnt(s) = [2.08955952]
bas 4, expnt(s) = [0.10412998]
CPU time:        26.36
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909945e+02 3.28948969e+02 6.58674045e+01 5.84141332e+01
 1.01640272e+01 1.43818379e+01 2.08955952e+00 4.39092565e+00
 1.04129981e-01 4.63123551e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984603269310166
cond(S) = 10.307318640552753
E1 = -18.9947357186191  E_coul = 4.512340362782749
init E= -14.4823953558364
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303217504644023  LUMO = 8.43989733911042
  mo_energy =
[-4.69529772e+00 -3.03217505e-01  8.43989734e+00  9.20451252e+01
  1.04044204e+03]
E1 = -19.02856533666593  E_coul = 4.519033925371425
cycle= 1 E= -14.5095314112945  delta_E= -0.0271  |g|= 0.0153  |ddm|= 0.0781
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0167352
diis-c [-2.80066482e-04  1.00000000e+00]
  HOMO = -0.300206967614739  LUMO = 8.44664175679044
  mo_energy =
[-4.69504580e+00 -3.00206968e-01  8.44664176e+00  9.20452361e+01
  1.04043221e+03]
E1 = -19.027793296370263  E_coul = 4.518253458891442
cycle= 2 E= -14.5095398374788  delta_E= -8.43e-06  |g|= 0.000615  |ddm|= 0.00329
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000683119
diis-c [-2.16018431e-07 -3.08497392e-02  1.03084974e+00]
  HOMO = -0.30023589043172  LUMO = 8.44647263191516
  mo_energy =
[-4.69541935e+00 -3.00235890e-01  8.44647263e+00  9.20447823e+01
  1.04043150e+03]
E1 = -19.02777214378868  E_coul = 4.518232287536505
cycle= 3 E= -14.5095398562522  delta_E= -1.88e-08  |g|= 1.36e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.88957e-05
diis-c [-9.59535975e-12  1.01332469e-03 -4.18588481e-02  1.04084552e+00]
  HOMO = -0.300236243939451  LUMO = 8.44647704826814
  mo_energy =
[-4.69541758e+00 -3.00236244e-01  8.44647705e+00  9.20448068e+01
  1.04043154e+03]
E1 = -19.027772281814425  E_coul = 4.518232425553145
cycle= 4 E= -14.5095398562613  delta_E= -9.11e-12  |g|= 9.57e-08  |ddm|= 2.97e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.027772281814425  E_coul = 4.518232425553145
  HOMO = -0.300236242435648  LUMO = 8.44647714293683
  mo_energy =
[-4.69541747e+00 -3.00236242e-01  8.44647714e+00  9.20448072e+01
  1.04043154e+03]
E1 = -19.02777228937509  E_coul = 4.518232433113809
Extra cycle  E= -14.5095398562613  delta_E=    0  |g|= 4.16e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [6.59909945e+02 6.58674045e+01 1.01640272e+01 2.08955952e+00
 1.04129981e-01]
E = -14.50953985626128
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909944776        1
[INPUT] 0    0    [1    /1   ]  65.8674044614        1
[INPUT] 0    0    [1    /1   ]  10.1640271931        1
[INPUT] 0    0    [1    /1   ]  2.08955951669        1
[INPUT] 0    0    [1    /1   ]  0.104129981217       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099447755523, 1.0]], [0, [65.86740446137051, 1.0]], [0, [10.164027193111124, 1.0]], [0, [2.0895595166942575, 1.0]], [0, [0.10412998121695358, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90994478]
bas 1, expnt(s) = [65.86740446]
bas 2, expnt(s) = [10.16402719]
bas 3, expnt(s) = [2.08955952]
bas 4, expnt(s) = [0.10412998]
CPU time:        26.62
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909945e+02 3.28948969e+02 6.58674045e+01 5.84141332e+01
 1.01640272e+01 1.43818379e+01 2.08955952e+00 4.39092565e+00
 1.04129981e-01 4.63123551e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984603269310166
cond(S) = 10.307318640552753
E1 = -18.9947357186191  E_coul = 4.512340362782749
init E= -14.4823953558364
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303217504644023  LUMO = 8.43989733911042
  mo_energy =
[-4.69529772e+00 -3.03217505e-01  8.43989734e+00  9.20451252e+01
  1.04044204e+03]
E1 = -19.02856533666593  E_coul = 4.519033925371425
cycle= 1 E= -14.5095314112945  delta_E= -0.0271  |g|= 0.0153  |ddm|= 0.0781
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0167352
diis-c [-2.80066482e-04  1.00000000e+00]
  HOMO = -0.300206967614739  LUMO = 8.44664175679044
  mo_energy =
[-4.69504580e+00 -3.00206968e-01  8.44664176e+00  9.20452361e+01
  1.04043221e+03]
E1 = -19.027793296370263  E_coul = 4.518253458891442
cycle= 2 E= -14.5095398374788  delta_E= -8.43e-06  |g|= 0.000615  |ddm|= 0.00329
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000683119
diis-c [-2.16018431e-07 -3.08497392e-02  1.03084974e+00]
  HOMO = -0.30023589043172  LUMO = 8.44647263191516
  mo_energy =
[-4.69541935e+00 -3.00235890e-01  8.44647263e+00  9.20447823e+01
  1.04043150e+03]
E1 = -19.02777214378868  E_coul = 4.518232287536505
cycle= 3 E= -14.5095398562522  delta_E= -1.88e-08  |g|= 1.36e-05  |ddm|= 0.000152
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.88957e-05
diis-c [-9.59535975e-12  1.01332469e-03 -4.18588481e-02  1.04084552e+00]
  HOMO = -0.300236243939451  LUMO = 8.44647704826814
  mo_energy =
[-4.69541758e+00 -3.00236244e-01  8.44647705e+00  9.20448068e+01
  1.04043154e+03]
E1 = -19.027772281814425  E_coul = 4.518232425553145
cycle= 4 E= -14.5095398562613  delta_E= -9.11e-12  |g|= 9.57e-08  |ddm|= 2.97e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.027772281814425  E_coul = 4.518232425553145
  HOMO = -0.300236242435648  LUMO = 8.44647714293683
  mo_energy =
[-4.69541747e+00 -3.00236242e-01  8.44647714e+00  9.20448072e+01
  1.04043154e+03]
E1 = -19.02777228937509  E_coul = 4.518232433113809
Extra cycle  E= -14.5095398562613  delta_E=    0  |g|= 4.16e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.307318640552753
E1 = -19.02777228937509  E_coul = 4.518232433113809
init E= -14.5095398562613
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300236242396724  LUMO = 8.44647714650455
  mo_energy =
[-4.69541747e+00 -3.00236242e-01  8.44647715e+00  9.20448072e+01
  1.04043154e+03]
E1 = -19.02777228964774  E_coul = 4.518232433386452
cycle= 1 E= -14.5095398562613  delta_E= -7.11e-15  |g|= 1.9e-10  |ddm|= 5.2e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02777228964774  E_coul = 4.518232433386452
  HOMO = -0.300236242396564  LUMO = 8.44647714664385
  mo_energy =
[-4.69541747e+00 -3.00236242e-01  8.44647715e+00  9.20448072e+01
  1.04043154e+03]
E1 = -19.02777228965784  E_coul = 4.518232433396554
Extra cycle  E= -14.5095398562613  delta_E= 1.78e-15  |g|= 9.12e-12  |ddm|= 2.58e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59909945e+02 6.58674045e+01 1.01640272e+01 2.08955952e+00
 1.04129981e-01]
grad_E = [1.09299144e-05 9.20497909e-04 2.65112873e-04 5.30698211e-04
 2.51699192e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.90991254         1
[INPUT] 0    0    [1    /1   ]  65.8658891475        1
[INPUT] 0    0    [1    /1   ]  10.1539643191        1
[INPUT] 0    0    [1    /1   ]  2.08905503119        1
[INPUT] 0    0    [1    /1   ]  0.104138069188       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099125395337, 1.0]], [0, [65.86588914751623, 1.0]], [0, [10.153964319125517, 1.0]], [0, [2.0890550311878595, 1.0]], [0, [0.10413806918801417, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90991254]
bas 1, expnt(s) = [65.86588915]
bas 2, expnt(s) = [10.15396432]
bas 3, expnt(s) = [2.08905503]
bas 4, expnt(s) = [0.10413807]
CPU time:        28.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909913e+02 3.28948957e+02 6.58658891e+01 5.84131253e+01
 1.01539643e+01 1.43711575e+01 2.08905503e+00 4.39013055e+00
 1.04138069e-01 4.63150530e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846077969406153
cond(S) = 10.307319347267876
E1 = -18.994786264880446  E_coul = 4.5124096038772175
init E= -14.4823766610032
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303209394259487  LUMO = 8.43218532458133
  mo_energy =
[-4.69527247e+00 -3.03209394e-01  8.43218532e+00  9.20095131e+01
  1.04040554e+03]
E1 = -19.028731710378956  E_coul = 4.519196850461247
cycle= 1 E= -14.5095348599177  delta_E= -0.0272  |g|= 0.0155  |ddm|= 0.078
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0169151
diis-c [-2.86120577e-04  1.00000000e+00]
  HOMO = -0.300200160645497  LUMO = 8.43897579299036
  mo_energy =
[-4.69497289e+00 -3.00200161e-01  8.43897579e+00  9.20097524e+01
  1.04039576e+03]
E1 = -19.02796511541286  E_coul = 4.518421788883763
cycle= 2 E= -14.5095433265291  delta_E= -8.47e-06  |g|= 0.000619  |ddm|= 0.0033
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000687049
diis-c [-2.18364146e-07 -3.07015945e-02  1.03070159e+00]
  HOMO = -0.300229082146644  LUMO = 8.43880963812406
  mo_energy =
[-4.69534360e+00 -3.00229082e-01  8.43880964e+00  9.20093094e+01
  1.04039505e+03]
E1 = -19.02794418478245  E_coul = 4.518400839332976
cycle= 3 E= -14.5095433454495  delta_E= -1.89e-08  |g|= 1.38e-05  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.90929e-05
diis-c [-9.99999417e-12  1.01746995e-03 -4.20876002e-02  1.04107013e+00]
  HOMO = -0.300229441854882  LUMO = 8.43881406918265
  mo_energy =
[-4.69534185e+00 -3.00229442e-01  8.43881407e+00  9.20093341e+01
  1.04039509e+03]
E1 = -19.02794432176616  E_coul = 4.518400976307346
cycle= 4 E= -14.5095433454588  delta_E= -9.34e-12  |g|= 9.6e-08  |ddm|= 3.01e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02794432176616  E_coul = 4.518400976307346
  HOMO = -0.300229440431511  LUMO = 8.43881416283012
  mo_energy =
[-4.69534174e+00 -3.00229440e-01  8.43881416e+00  9.20093345e+01
  1.04039510e+03]
E1 = -19.02794432923834  E_coul = 4.518400983779524
Extra cycle  E= -14.5095433454588  delta_E= -1.78e-15  |g|= 4.19e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909913e+02 6.58658891e+01 1.01539643e+01 2.08905503e+00
 1.04138069e-01]
E = -14.509543345458816
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.90991254         1
[INPUT] 0    0    [1    /1   ]  65.8658891475        1
[INPUT] 0    0    [1    /1   ]  10.1539643191        1
[INPUT] 0    0    [1    /1   ]  2.08905503119        1
[INPUT] 0    0    [1    /1   ]  0.104138069188       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9099125395337, 1.0]], [0, [65.86588914751623, 1.0]], [0, [10.153964319125517, 1.0]], [0, [2.0890550311878595, 1.0]], [0, [0.10413806918801417, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90991254]
bas 1, expnt(s) = [65.86588915]
bas 2, expnt(s) = [10.15396432]
bas 3, expnt(s) = [2.08905503]
bas 4, expnt(s) = [0.10413807]
CPU time:        29.17
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909913e+02 3.28948957e+02 6.58658891e+01 5.84131253e+01
 1.01539643e+01 1.43711575e+01 2.08905503e+00 4.39013055e+00
 1.04138069e-01 4.63150530e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846077969406153
cond(S) = 10.307319347267876
E1 = -18.994786264880446  E_coul = 4.5124096038772175
init E= -14.4823766610032
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303209394259487  LUMO = 8.43218532458133
  mo_energy =
[-4.69527247e+00 -3.03209394e-01  8.43218532e+00  9.20095131e+01
  1.04040554e+03]
E1 = -19.028731710378956  E_coul = 4.519196850461247
cycle= 1 E= -14.5095348599177  delta_E= -0.0272  |g|= 0.0155  |ddm|= 0.078
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0169151
diis-c [-2.86120577e-04  1.00000000e+00]
  HOMO = -0.300200160645497  LUMO = 8.43897579299036
  mo_energy =
[-4.69497289e+00 -3.00200161e-01  8.43897579e+00  9.20097524e+01
  1.04039576e+03]
E1 = -19.02796511541286  E_coul = 4.518421788883763
cycle= 2 E= -14.5095433265291  delta_E= -8.47e-06  |g|= 0.000619  |ddm|= 0.0033
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000687049
diis-c [-2.18364146e-07 -3.07015945e-02  1.03070159e+00]
  HOMO = -0.300229082146644  LUMO = 8.43880963812406
  mo_energy =
[-4.69534360e+00 -3.00229082e-01  8.43880964e+00  9.20093094e+01
  1.04039505e+03]
E1 = -19.02794418478245  E_coul = 4.518400839332976
cycle= 3 E= -14.5095433454495  delta_E= -1.89e-08  |g|= 1.38e-05  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.90929e-05
diis-c [-9.99999417e-12  1.01746995e-03 -4.20876002e-02  1.04107013e+00]
  HOMO = -0.300229441854882  LUMO = 8.43881406918265
  mo_energy =
[-4.69534185e+00 -3.00229442e-01  8.43881407e+00  9.20093341e+01
  1.04039509e+03]
E1 = -19.02794432176616  E_coul = 4.518400976307346
cycle= 4 E= -14.5095433454588  delta_E= -9.34e-12  |g|= 9.6e-08  |ddm|= 3.01e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02794432176616  E_coul = 4.518400976307346
  HOMO = -0.300229440431511  LUMO = 8.43881416283012
  mo_energy =
[-4.69534174e+00 -3.00229440e-01  8.43881416e+00  9.20093345e+01
  1.04039510e+03]
E1 = -19.02794432923834  E_coul = 4.518400983779524
Extra cycle  E= -14.5095433454588  delta_E= -1.78e-15  |g|= 4.19e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.307319347267876
E1 = -19.02794432923834  E_coul = 4.518400983779524
init E= -14.5095433454588
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300229440395687  LUMO = 8.43881416637497
  mo_energy =
[-4.69534174e+00 -3.00229440e-01  8.43881417e+00  9.20093345e+01
  1.04039510e+03]
E1 = -19.027944329508603  E_coul = 4.518400984049787
cycle= 1 E= -14.5095433454588  delta_E=    0  |g|= 1.93e-10  |ddm|= 5.27e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.027944329508603  E_coul = 4.518400984049787
  HOMO = -0.30022944039566  LUMO = 8.43881416651396
  mo_energy =
[-4.69534174e+00 -3.00229440e-01  8.43881417e+00  9.20093345e+01
  1.04039510e+03]
E1 = -19.027944329518654  E_coul = 4.518400984059844
Extra cycle  E= -14.5095433454588  delta_E= 7.11e-15  |g|= 9.24e-12  |ddm|= 2.65e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59909913e+02 6.58658891e+01 1.01539643e+01 2.08905503e+00
 1.04138069e-01]
grad_E = [1.08633006e-05 9.31995446e-04 6.38204130e-05 1.18612401e-03
 5.85982555e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909779284        1
[INPUT] 0    0    [1    /1   ]  65.8563461549        1
[INPUT] 0    0    [1    /1   ]  10.1373324095        1
[INPUT] 0    0    [1    /1   ]  2.08814896123        1
[INPUT] 0    0    [1    /1   ]  0.104150547178       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9097792836876, 1.0]], [0, [65.85634615486586, 1.0]], [0, [10.137332409459303, 1.0]], [0, [2.0881489612300146, 1.0]], [0, [0.10415054717752487, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90977928]
bas 1, expnt(s) = [65.85634615]
bas 2, expnt(s) = [10.13733241]
bas 3, expnt(s) = [2.08814896]
bas 4, expnt(s) = [0.10415055]
CPU time:        31.28
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909779e+02 3.28948907e+02 6.58563462e+01 5.84067778e+01
 1.01373324e+01 1.43534992e+01 2.08814896e+00 4.38870239e+00
 1.04150547e-01 4.63192151e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984615645446145
cond(S) = 10.30765852796098
E1 = -18.994865067047947  E_coul = 4.512514989631601
init E= -14.4823500774163
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303196383787059  LUMO = 8.41923981947959
  mo_energy =
[-4.69523643e+00 -3.03196384e-01  8.41923982e+00  9.19430774e+01
  1.04032237e+03]
E1 = -19.028980764575188  E_coul = 4.519437046429551
cycle= 1 E= -14.5095437181456  delta_E= -0.0272  |g|= 0.0157  |ddm|= 0.0779
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0172003
diis-c [-2.9585133e-04  1.0000000e+00]
  HOMO = -0.300189846971513  LUMO = 8.42609726887073
  mo_energy =
[-4.69486757e+00 -3.00189847e-01  8.42609727e+00  9.19435040e+01
  1.04031263e+03]
E1 = -19.02822246914179  E_coul = 4.518670217101097
cycle= 2 E= -14.5095522520407  delta_E= -8.53e-06  |g|= 0.000625  |ddm|= 0.0033
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000693405
diis-c [-2.22191135e-07 -3.04786559e-02  1.03047866e+00]
  HOMO = -0.300218774482788  LUMO = 8.42593569003372
  mo_energy =
[-4.69523394e+00 -3.00218774e-01  8.42593569e+00  9.19430779e+01
  1.04031194e+03]
E1 = -19.02820187655788  E_coul = 4.51864960535522
cycle= 3 E= -14.5095522712027  delta_E= -1.92e-08  |g|= 1.4e-05  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.94037e-05
diis-c [-1.07359389e-11  1.02338604e-03 -4.24254891e-02  1.04140210e+00]
  HOMO = -0.300219143867018  LUMO = 8.4259401469273
  mo_energy =
[-4.69523222e+00 -3.00219144e-01  8.42594015e+00  9.19431028e+01
  1.04031198e+03]
E1 = -19.028202012121483  E_coul = 4.518649740909109
cycle= 4 E= -14.5095522712124  delta_E= -9.71e-12  |g|= 9.65e-08  |ddm|= 3.08e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028202012121483  E_coul = 4.518649740909109
  HOMO = -0.300219142568606  LUMO = 8.42594023911178
  mo_energy =
[-4.69523212e+00 -3.00219143e-01  8.42594024e+00  9.19431032e+01
  1.04031198e+03]
E1 = -19.028202019464857  E_coul = 4.518649748252481
Extra cycle  E= -14.5095522712124  delta_E=    0  |g|= 4.25e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909779e+02 6.58563462e+01 1.01373324e+01 2.08814896e+00
 1.04150547e-01]
E = -14.509552271212375
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909779284        1
[INPUT] 0    0    [1    /1   ]  65.8563461549        1
[INPUT] 0    0    [1    /1   ]  10.1373324095        1
[INPUT] 0    0    [1    /1   ]  2.08814896123        1
[INPUT] 0    0    [1    /1   ]  0.104150547178       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9097792836876, 1.0]], [0, [65.85634615486586, 1.0]], [0, [10.137332409459303, 1.0]], [0, [2.0881489612300146, 1.0]], [0, [0.10415054717752487, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90977928]
bas 1, expnt(s) = [65.85634615]
bas 2, expnt(s) = [10.13733241]
bas 3, expnt(s) = [2.08814896]
bas 4, expnt(s) = [0.10415055]
CPU time:        31.55
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909779e+02 3.28948907e+02 6.58563462e+01 5.84067778e+01
 1.01373324e+01 1.43534992e+01 2.08814896e+00 4.38870239e+00
 1.04150547e-01 4.63192151e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984615645446145
cond(S) = 10.30765852796098
E1 = -18.994865067047947  E_coul = 4.512514989631601
init E= -14.4823500774163
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303196383787059  LUMO = 8.41923981947959
  mo_energy =
[-4.69523643e+00 -3.03196384e-01  8.41923982e+00  9.19430774e+01
  1.04032237e+03]
E1 = -19.028980764575188  E_coul = 4.519437046429551
cycle= 1 E= -14.5095437181456  delta_E= -0.0272  |g|= 0.0157  |ddm|= 0.0779
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0172003
diis-c [-2.9585133e-04  1.0000000e+00]
  HOMO = -0.300189846971513  LUMO = 8.42609726887073
  mo_energy =
[-4.69486757e+00 -3.00189847e-01  8.42609727e+00  9.19435040e+01
  1.04031263e+03]
E1 = -19.02822246914179  E_coul = 4.518670217101097
cycle= 2 E= -14.5095522520407  delta_E= -8.53e-06  |g|= 0.000625  |ddm|= 0.0033
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000693405
diis-c [-2.22191135e-07 -3.04786559e-02  1.03047866e+00]
  HOMO = -0.300218774482788  LUMO = 8.42593569003372
  mo_energy =
[-4.69523394e+00 -3.00218774e-01  8.42593569e+00  9.19430779e+01
  1.04031194e+03]
E1 = -19.02820187655788  E_coul = 4.51864960535522
cycle= 3 E= -14.5095522712027  delta_E= -1.92e-08  |g|= 1.4e-05  |ddm|= 0.000153
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.94037e-05
diis-c [-1.07359389e-11  1.02338604e-03 -4.24254891e-02  1.04140210e+00]
  HOMO = -0.300219143867018  LUMO = 8.4259401469273
  mo_energy =
[-4.69523222e+00 -3.00219144e-01  8.42594015e+00  9.19431028e+01
  1.04031198e+03]
E1 = -19.028202012121483  E_coul = 4.518649740909109
cycle= 4 E= -14.5095522712124  delta_E= -9.71e-12  |g|= 9.65e-08  |ddm|= 3.08e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028202012121483  E_coul = 4.518649740909109
  HOMO = -0.300219142568606  LUMO = 8.42594023911178
  mo_energy =
[-4.69523212e+00 -3.00219143e-01  8.42594024e+00  9.19431032e+01
  1.04031198e+03]
E1 = -19.028202019464857  E_coul = 4.518649748252481
Extra cycle  E= -14.5095522712124  delta_E=    0  |g|= 4.25e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.30765852796098
E1 = -19.028202019464857  E_coul = 4.518649748252481
init E= -14.5095522712124
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300219142537678  LUMO = 8.42594024262589
  mo_energy =
[-4.69523212e+00 -3.00219143e-01  8.42594024e+00  9.19431032e+01
  1.04031198e+03]
E1 = -19.028202019731772  E_coul = 4.5186497485193895
cycle= 1 E= -14.5095522712124  delta_E= -7.11e-15  |g|= 1.97e-10  |ddm|= 5.41e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.028202019731772  E_coul = 4.5186497485193895
  HOMO = -0.300219142537863  LUMO = 8.4259402427647
  mo_energy =
[-4.69523212e+00 -3.00219143e-01  8.42594024e+00  9.19431032e+01
  1.04031198e+03]
E1 = -19.02820201974176  E_coul = 4.518649748529381
Extra cycle  E= -14.5095522712124  delta_E= 3.55e-15  |g|= 9.56e-12  |ddm|= 2.75e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59909779e+02 6.58563462e+01 1.01373324e+01 2.08814896e+00
 1.04150547e-01]
grad_E = [ 1.07675169e-05  9.50063661e-04 -2.54079387e-04  2.20033937e-03
  1.10162875e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909343885        1
[INPUT] 0    0    [1    /1   ]  65.821780233         1
[INPUT] 0    0    [1    /1   ]  10.1087752334        1
[INPUT] 0    0    [1    /1   ]  2.08652964105        1
[INPUT] 0    0    [1    /1   ]  0.104170903919       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9093438851386, 1.0]], [0, [65.82178023303473, 1.0]], [0, [10.10877523336355, 1.0]], [0, [2.0865296410497183, 1.0]], [0, [0.10417090391857411, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90934389]
bas 1, expnt(s) = [65.82178023]
bas 2, expnt(s) = [10.10877523]
bas 3, expnt(s) = [2.08652964]
bas 4, expnt(s) = [0.1041709]
CPU time:        33.51
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909344e+02 3.28948744e+02 6.58217802e+01 5.83837844e+01
 1.01087752e+01 1.43231628e+01 2.08652964e+00 4.38614963e+00
 1.04170904e-01 4.63260049e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984629354379937
cond(S) = 10.30962821211197
E1 = -18.994996825039326  E_coul = 4.512685907577592
init E= -14.4823109174617
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303174687096766  LUMO = 8.39688311309646
  mo_energy =
[-4.69518301e+00 -3.03174687e-01  8.39688311e+00  9.18098848e+01
  1.04012087e+03]
E1 = -19.029384503882223  E_coul = 4.5198173619159565
cycle= 1 E= -14.5095671419663  delta_E= -0.0273  |g|= 0.0161  |ddm|= 0.0778
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0176737
diis-c [-3.12361302e-04  1.00000000e+00]
  HOMO = -0.300173289601396  LUMO = 8.40384494262017
  mo_energy =
[-4.69470574e+00 -3.00173290e-01  8.40384494e+00  9.18106083e+01
  1.04011118e+03]
E1 = -19.028639586161663  E_coul = 4.519063793148818
cycle= 2 E= -14.5095757930128  delta_E= -8.65e-06  |g|= 0.000636  |ddm|= 0.00331
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000704215
diis-c [-2.28731661e-07 -3.01393816e-02  1.03013938e+00]
  HOMO = -0.300202237441667  LUMO = 8.40369077602286
  mo_energy =
[-4.69506513e+00 -3.00202237e-01  8.40369078e+00  9.18102095e+01
  1.04011053e+03]
E1 = -19.02861953749192  E_coul = 4.519043724901693
cycle= 3 E= -14.5095758125902  delta_E= -1.96e-08  |g|= 1.45e-05  |ddm|= 0.000155
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.99096e-05
diis-c [-1.21773790e-11  1.03169774e-03 -4.29240270e-02  1.04189233e+00]
  HOMO = -0.30020262228705  LUMO = 8.40369528299931
  mo_energy =
[-4.69506345e+00 -3.00202622e-01  8.40369528e+00  9.18102349e+01
  1.04011057e+03]
E1 = -19.028619671448602  E_coul = 4.5190438588480095
cycle= 4 E= -14.5095758126006  delta_E= -1.04e-11  |g|= 9.79e-08  |ddm|= 3.19e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028619671448602  E_coul = 4.5190438588480095
  HOMO = -0.300202621191856  LUMO = 8.4036953730697
  mo_energy =
[-4.69506336e+00 -3.00202621e-01  8.40369537e+00  9.18102353e+01
  1.04011057e+03]
E1 = -19.028619678600045  E_coul = 4.51904386599946
Extra cycle  E= -14.5095758126006  delta_E= 8.88e-15  |g|= 4.37e-09  |ddm|= 1.22e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59909344e+02 6.58217802e+01 1.01087752e+01 2.08652964e+00
 1.04170904e-01]
E = -14.509575812600584
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.909343885        1
[INPUT] 0    0    [1    /1   ]  65.821780233         1
[INPUT] 0    0    [1    /1   ]  10.1087752334        1
[INPUT] 0    0    [1    /1   ]  2.08652964105        1
[INPUT] 0    0    [1    /1   ]  0.104170903919       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9093438851386, 1.0]], [0, [65.82178023303473, 1.0]], [0, [10.10877523336355, 1.0]], [0, [2.0865296410497183, 1.0]], [0, [0.10417090391857411, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90934389]
bas 1, expnt(s) = [65.82178023]
bas 2, expnt(s) = [10.10877523]
bas 3, expnt(s) = [2.08652964]
bas 4, expnt(s) = [0.1041709]
CPU time:        33.79
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59909344e+02 3.28948744e+02 6.58217802e+01 5.83837844e+01
 1.01087752e+01 1.43231628e+01 2.08652964e+00 4.38614963e+00
 1.04170904e-01 4.63260049e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984629354379937
cond(S) = 10.30962821211197
E1 = -18.994996825039326  E_coul = 4.512685907577592
init E= -14.4823109174617
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303174687096766  LUMO = 8.39688311309646
  mo_energy =
[-4.69518301e+00 -3.03174687e-01  8.39688311e+00  9.18098848e+01
  1.04012087e+03]
E1 = -19.029384503882223  E_coul = 4.5198173619159565
cycle= 1 E= -14.5095671419663  delta_E= -0.0273  |g|= 0.0161  |ddm|= 0.0778
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0176737
diis-c [-3.12361302e-04  1.00000000e+00]
  HOMO = -0.300173289601396  LUMO = 8.40384494262017
  mo_energy =
[-4.69470574e+00 -3.00173290e-01  8.40384494e+00  9.18106083e+01
  1.04011118e+03]
E1 = -19.028639586161663  E_coul = 4.519063793148818
cycle= 2 E= -14.5095757930128  delta_E= -8.65e-06  |g|= 0.000636  |ddm|= 0.00331
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000704215
diis-c [-2.28731661e-07 -3.01393816e-02  1.03013938e+00]
  HOMO = -0.300202237441667  LUMO = 8.40369077602286
  mo_energy =
[-4.69506513e+00 -3.00202237e-01  8.40369078e+00  9.18102095e+01
  1.04011053e+03]
E1 = -19.02861953749192  E_coul = 4.519043724901693
cycle= 3 E= -14.5095758125902  delta_E= -1.96e-08  |g|= 1.45e-05  |ddm|= 0.000155
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.99096e-05
diis-c [-1.21773790e-11  1.03169774e-03 -4.29240270e-02  1.04189233e+00]
  HOMO = -0.30020262228705  LUMO = 8.40369528299931
  mo_energy =
[-4.69506345e+00 -3.00202622e-01  8.40369528e+00  9.18102349e+01
  1.04011057e+03]
E1 = -19.028619671448602  E_coul = 4.5190438588480095
cycle= 4 E= -14.5095758126006  delta_E= -1.04e-11  |g|= 9.79e-08  |ddm|= 3.19e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028619671448602  E_coul = 4.5190438588480095
  HOMO = -0.300202621191856  LUMO = 8.4036953730697
  mo_energy =
[-4.69506336e+00 -3.00202621e-01  8.40369537e+00  9.18102353e+01
  1.04011057e+03]
E1 = -19.028619678600045  E_coul = 4.51904386599946
Extra cycle  E= -14.5095758126006  delta_E= 8.88e-15  |g|= 4.37e-09  |ddm|= 1.22e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.30962821211197
E1 = -19.028619678600045  E_coul = 4.51904386599946
init E= -14.5095758126006
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300202621169084  LUMO = 8.40369537654379
  mo_energy =
[-4.69506335e+00 -3.00202621e-01  8.40369538e+00  9.18102353e+01
  1.04011057e+03]
E1 = -19.02861967886212  E_coul = 4.519043866261536
cycle= 1 E= -14.5095758126006  delta_E=    0  |g|= 2.06e-10  |ddm|= 5.68e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02861967886212  E_coul = 4.519043866261536
  HOMO = -0.300202621169631  LUMO = 8.40369537668277
  mo_energy =
[-4.69506335e+00 -3.00202621e-01  8.40369538e+00  9.18102353e+01
  1.04011057e+03]
E1 = -19.028619678872  E_coul = 4.5190438662714225
Extra cycle  E= -14.5095758126006  delta_E= 5.33e-15  |g|= 1.01e-11  |ddm|= 2.94e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59909344e+02 6.58217802e+01 1.01087752e+01 2.08652964e+00
 1.04170904e-01]
grad_E = [ 1.06383757e-05  9.79017014e-04 -7.74435400e-04  3.85313594e-03
  1.94117967e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.908072401        1
[INPUT] 0    0    [1    /1   ]  65.716407084         1
[INPUT] 0    0    [1    /1   ]  10.0591910954        1
[INPUT] 0    0    [1    /1   ]  2.08359588333        1
[INPUT] 0    0    [1    /1   ]  0.10420396473        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9080724013352, 1.0]], [0, [65.71640708396285, 1.0]], [0, [10.05919109543108, 1.0]], [0, [2.0835958833289334, 1.0]], [0, [0.10420396473041889, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.9080724]
bas 1, expnt(s) = [65.71640708]
bas 2, expnt(s) = [10.0591911]
bas 3, expnt(s) = [2.08359588]
bas 4, expnt(s) = [0.10420396]
CPU time:        35.77
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59908072e+02 3.28948269e+02 6.57164071e+01 5.83136711e+01
 1.00591911e+01 1.42704385e+01 2.08359588e+00 4.38152347e+00
 1.04203965e-01 4.63370314e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846534925852017
cond(S) = 10.316688445680438
E1 = -18.99522126719302  E_coul = 4.512961689612015
init E= -14.482259577581
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303138515248566  LUMO = 8.35786408859721
  mo_energy =
[-4.69510944e+00 -3.03138515e-01  8.35786409e+00  9.15310716e+01
  1.03962470e+03]
E1 = -19.030039266360998  E_coul = 4.520410909475091
cycle= 1 E= -14.5096283568859  delta_E= -0.0274  |g|= 0.0168  |ddm|= 0.0777
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0184563
diis-c [-3.40633569e-04  1.00000000e+00]
  HOMO = -0.300147024252604  LUMO = 8.36498465655849
  mo_energy =
[-4.69446593e+00 -3.00147024e-01  8.36498466e+00  9.15322614e+01
  1.03961509e+03]
E1 = -19.029315697476783  E_coul = 4.5196784816138065
cycle= 2 E= -14.509637215863  delta_E= -8.86e-06  |g|= 0.000655  |ddm|= 0.00333
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000722779
diis-c [-2.40016799e-07 -2.96570702e-02  1.02965707e+00]
  HOMO = -0.300176029328076  LUMO = 8.36484237854714
  mo_energy =
[-4.69481421e+00 -3.00176029e-01  8.36484238e+00  9.15319071e+01
  1.03961448e+03]
E1 = -19.029296514580075  E_coul = 4.519659278413259
cycle= 3 E= -14.5096372361668  delta_E= -2.03e-08  |g|= 1.52e-05  |ddm|= 0.000157
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.07219e-05
diis-c [-1.50793056e-11  1.04246654e-03 -4.36068709e-02  1.04256440e+00]
  HOMO = -0.300176438218834  LUMO = 8.36484698661183
  mo_energy =
[-4.69481257e+00 -3.00176438e-01  8.36484699e+00  9.15319333e+01
  1.03961452e+03]
E1 = -19.029296647797842  E_coul = 4.519659411619562
cycle= 4 E= -14.5096372361783  delta_E= -1.15e-11  |g|= 1.01e-07  |ddm|= 3.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.029296647797842  E_coul = 4.519659411619562
  HOMO = -0.300176437455539  LUMO = 8.36484707383407
  mo_energy =
[-4.69481247e+00 -3.00176437e-01  8.36484707e+00  9.15319336e+01
  1.03961452e+03]
E1 = -19.029296654675274  E_coul = 4.519659418497002
Extra cycle  E= -14.5096372361783  delta_E= 8.88e-15  |g|= 4.62e-09  |ddm|= 1.27e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59908072e+02 6.57164071e+01 1.00591911e+01 2.08359588e+00
 1.04203965e-01]
E = -14.509637236178271
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.908072401        1
[INPUT] 0    0    [1    /1   ]  65.716407084         1
[INPUT] 0    0    [1    /1   ]  10.0591910954        1
[INPUT] 0    0    [1    /1   ]  2.08359588333        1
[INPUT] 0    0    [1    /1   ]  0.10420396473        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9080724013352, 1.0]], [0, [65.71640708396285, 1.0]], [0, [10.05919109543108, 1.0]], [0, [2.0835958833289334, 1.0]], [0, [0.10420396473041889, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.9080724]
bas 1, expnt(s) = [65.71640708]
bas 2, expnt(s) = [10.0591911]
bas 3, expnt(s) = [2.08359588]
bas 4, expnt(s) = [0.10420396]
CPU time:        36.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59908072e+02 3.28948269e+02 6.57164071e+01 5.83136711e+01
 1.00591911e+01 1.42704385e+01 2.08359588e+00 4.38152347e+00
 1.04203965e-01 4.63370314e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9846534925852017
cond(S) = 10.316688445680438
E1 = -18.99522126719302  E_coul = 4.512961689612015
init E= -14.482259577581
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303138515248566  LUMO = 8.35786408859721
  mo_energy =
[-4.69510944e+00 -3.03138515e-01  8.35786409e+00  9.15310716e+01
  1.03962470e+03]
E1 = -19.030039266360998  E_coul = 4.520410909475091
cycle= 1 E= -14.5096283568859  delta_E= -0.0274  |g|= 0.0168  |ddm|= 0.0777
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0184563
diis-c [-3.40633569e-04  1.00000000e+00]
  HOMO = -0.300147024252604  LUMO = 8.36498465655849
  mo_energy =
[-4.69446593e+00 -3.00147024e-01  8.36498466e+00  9.15322614e+01
  1.03961509e+03]
E1 = -19.029315697476783  E_coul = 4.5196784816138065
cycle= 2 E= -14.509637215863  delta_E= -8.86e-06  |g|= 0.000655  |ddm|= 0.00333
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000722779
diis-c [-2.40016799e-07 -2.96570702e-02  1.02965707e+00]
  HOMO = -0.300176029328076  LUMO = 8.36484237854714
  mo_energy =
[-4.69481421e+00 -3.00176029e-01  8.36484238e+00  9.15319071e+01
  1.03961448e+03]
E1 = -19.029296514580075  E_coul = 4.519659278413259
cycle= 3 E= -14.5096372361668  delta_E= -2.03e-08  |g|= 1.52e-05  |ddm|= 0.000157
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.07219e-05
diis-c [-1.50793056e-11  1.04246654e-03 -4.36068709e-02  1.04256440e+00]
  HOMO = -0.300176438218834  LUMO = 8.36484698661183
  mo_energy =
[-4.69481257e+00 -3.00176438e-01  8.36484699e+00  9.15319333e+01
  1.03961452e+03]
E1 = -19.029296647797842  E_coul = 4.519659411619562
cycle= 4 E= -14.5096372361783  delta_E= -1.15e-11  |g|= 1.01e-07  |ddm|= 3.37e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.029296647797842  E_coul = 4.519659411619562
  HOMO = -0.300176437455539  LUMO = 8.36484707383407
  mo_energy =
[-4.69481247e+00 -3.00176437e-01  8.36484707e+00  9.15319336e+01
  1.03961452e+03]
E1 = -19.029296654675274  E_coul = 4.519659418497002
Extra cycle  E= -14.5096372361783  delta_E= 8.88e-15  |g|= 4.62e-09  |ddm|= 1.27e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.316688445680438
E1 = -19.029296654675274  E_coul = 4.519659418497002
init E= -14.5096372361783
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300176437446532  LUMO = 8.36484707726535
  mo_energy =
[-4.69481247e+00 -3.00176437e-01  8.36484708e+00  9.15319337e+01
  1.03961452e+03]
E1 = -19.029296654930867  E_coul = 4.519659418752581
cycle= 1 E= -14.5096372361783  delta_E= -1.42e-14  |g|= 2.22e-10  |ddm|= 6.24e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.029296654930867  E_coul = 4.519659418752581
  HOMO = -0.300176437447704  LUMO = 8.3648470774054
  mo_energy =
[-4.69481247e+00 -3.00176437e-01  8.36484708e+00  9.15319337e+01
  1.03961452e+03]
E1 = -19.029296654940655  E_coul = 4.51965941876238
Extra cycle  E= -14.5096372361783  delta_E= 1.07e-14  |g|= 1.1e-11  |ddm|= 3.31e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59908072e+02 6.57164071e+01 1.00591911e+01 2.08359588e+00
 1.04203965e-01]
grad_E = [ 1.05017074e-05  1.02432351e-03 -1.61895578e-03  6.53017766e-03
  3.29960962e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.904539393        1
[INPUT] 0    0    [1    /1   ]  65.4172197285        1
[INPUT] 0    0    [1    /1   ]  9.97034866112        1
[INPUT] 0    0    [1    /1   ]  2.07805845239        1
[INPUT] 0    0    [1    /1   ]  0.104257871187       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9045393929562, 1.0]], [0, [65.4172197284746, 1.0]], [0, [9.97034866112213, 1.0]], [0, [2.0780584523892642, 1.0]], [0, [0.1042578711869942, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90453939]
bas 1, expnt(s) = [65.41721973]
bas 2, expnt(s) = [9.97034866]
bas 3, expnt(s) = [2.07805845]
bas 4, expnt(s) = [0.10425787]
CPU time:        38.04
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59904539e+02 3.28946948e+02 6.54172197e+01 5.81144439e+01
 9.97034866e+00 1.41758067e+01 2.07805845e+00 4.37278721e+00
 1.04257871e-01 4.63550084e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984697305053758
cond(S) = 10.33845208814646
E1 = -18.995623492219938  E_coul = 4.513406993206739
init E= -14.4822164990132
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303077342992243  LUMO = 8.28754876767817
  mo_energy =
[-4.69502334e+00 -3.03077343e-01  8.28754877e+00  9.09159845e+01
  1.03837987e+03]
E1 = -19.031108039848405  E_coul = 4.5213198530292456
cycle= 1 E= -14.5097881868192  delta_E= -0.0276  |g|= 0.0179  |ddm|= 0.0777
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0197511
diis-c [-3.90104924e-04  1.00000000e+00]
  HOMO = -0.300105780618173  LUMO = 8.294901432798
  mo_energy =
[-4.69413280e+00 -3.00105781e-01  8.29490143e+00  9.09178968e+01
  1.03837033e+03]
E1 = -19.03041834453217  E_coul = 4.520620913803841
cycle= 2 E= -14.5097974307283  delta_E= -9.24e-06  |g|= 0.000686  |ddm|= 0.00336
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000755432
diis-c [-2.59984928e-07 -2.90507047e-02  1.02905070e+00]
  HOMO = -0.300134941372015  LUMO = 8.29477814115858
  mo_energy =
[-4.69446349e+00 -3.00134941e-01  8.29477814e+00  9.09176148e+01
  1.03836980e+03]
E1 = -19.030400531220618  E_coul = 4.520603078862285
cycle= 3 E= -14.5097974523583  delta_E= -2.16e-08  |g|= 1.63e-05  |ddm|= 0.000161
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.20218e-05
diis-c [-2.10116195e-11  1.05581939e-03 -4.44544880e-02  1.04339867e+00]
  HOMO = -0.300135386747215  LUMO = 8.29478295978068
  mo_energy =
[-4.69446182e+00 -3.00135387e-01  8.29478296e+00  9.09176425e+01
  1.03836985e+03]
E1 = -19.03040066770787  E_coul = 4.520603215336233
cycle= 4 E= -14.5097974523716  delta_E= -1.33e-11  |g|= 1.08e-07  |ddm|= 3.65e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03040066770787  E_coul = 4.520603215336233
  HOMO = -0.300135386541061  LUMO = 8.29478304344992
  mo_energy =
[-4.69446173e+00 -3.00135387e-01  8.29478304e+00  9.09176428e+01
  1.03836985e+03]
E1 = -19.030400674204444  E_coul = 4.520603221832809
Extra cycle  E= -14.5097974523716  delta_E= 1.78e-15  |g|= 5.13e-09  |ddm|= 1.43e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59904539e+02 6.54172197e+01 9.97034866e+00 2.07805845e+00
 1.04257871e-01]
E = -14.509797452371634
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.904539393        1
[INPUT] 0    0    [1    /1   ]  65.4172197285        1
[INPUT] 0    0    [1    /1   ]  9.97034866112        1
[INPUT] 0    0    [1    /1   ]  2.07805845239        1
[INPUT] 0    0    [1    /1   ]  0.104257871187       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.9045393929562, 1.0]], [0, [65.4172197284746, 1.0]], [0, [9.97034866112213, 1.0]], [0, [2.0780584523892642, 1.0]], [0, [0.1042578711869942, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.90453939]
bas 1, expnt(s) = [65.41721973]
bas 2, expnt(s) = [9.97034866]
bas 3, expnt(s) = [2.07805845]
bas 4, expnt(s) = [0.10425787]
CPU time:        38.36
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59904539e+02 3.28946948e+02 6.54172197e+01 5.81144439e+01
 9.97034866e+00 1.41758067e+01 2.07805845e+00 4.37278721e+00
 1.04257871e-01 4.63550084e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984697305053758
cond(S) = 10.33845208814646
E1 = -18.995623492219938  E_coul = 4.513406993206739
init E= -14.4822164990132
    CPU time for initialize scf      0.03 sec, wall time      0.04 sec
  HOMO = -0.303077342992243  LUMO = 8.28754876767817
  mo_energy =
[-4.69502334e+00 -3.03077343e-01  8.28754877e+00  9.09159845e+01
  1.03837987e+03]
E1 = -19.031108039848405  E_coul = 4.5213198530292456
cycle= 1 E= -14.5097881868192  delta_E= -0.0276  |g|= 0.0179  |ddm|= 0.0777
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0197511
diis-c [-3.90104924e-04  1.00000000e+00]
  HOMO = -0.300105780618173  LUMO = 8.294901432798
  mo_energy =
[-4.69413280e+00 -3.00105781e-01  8.29490143e+00  9.09178968e+01
  1.03837033e+03]
E1 = -19.03041834453217  E_coul = 4.520620913803841
cycle= 2 E= -14.5097974307283  delta_E= -9.24e-06  |g|= 0.000686  |ddm|= 0.00336
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000755432
diis-c [-2.59984928e-07 -2.90507047e-02  1.02905070e+00]
  HOMO = -0.300134941372015  LUMO = 8.29477814115858
  mo_energy =
[-4.69446349e+00 -3.00134941e-01  8.29477814e+00  9.09176148e+01
  1.03836980e+03]
E1 = -19.030400531220618  E_coul = 4.520603078862285
cycle= 3 E= -14.5097974523583  delta_E= -2.16e-08  |g|= 1.63e-05  |ddm|= 0.000161
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.20218e-05
diis-c [-2.10116195e-11  1.05581939e-03 -4.44544880e-02  1.04339867e+00]
  HOMO = -0.300135386747215  LUMO = 8.29478295978068
  mo_energy =
[-4.69446182e+00 -3.00135387e-01  8.29478296e+00  9.09176425e+01
  1.03836985e+03]
E1 = -19.03040066770787  E_coul = 4.520603215336233
cycle= 4 E= -14.5097974523716  delta_E= -1.33e-11  |g|= 1.08e-07  |ddm|= 3.65e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03040066770787  E_coul = 4.520603215336233
  HOMO = -0.300135386541061  LUMO = 8.29478304344992
  mo_energy =
[-4.69446173e+00 -3.00135387e-01  8.29478304e+00  9.09176428e+01
  1.03836985e+03]
E1 = -19.030400674204444  E_coul = 4.520603221832809
Extra cycle  E= -14.5097974523716  delta_E= 1.78e-15  |g|= 5.13e-09  |ddm|= 1.43e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.33845208814646
E1 = -19.030400674204444  E_coul = 4.520603221832809
init E= -14.5097974523716
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300135386556176  LUMO = 8.29478304685376
  mo_energy =
[-4.69446173e+00 -3.00135387e-01  8.29478305e+00  9.09176429e+01
  1.03836985e+03]
E1 = -19.030400674451855  E_coul = 4.520603222080223
cycle= 1 E= -14.5097974523716  delta_E= 1.78e-15  |g|= 2.54e-10  |ddm|= 7.45e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.030400674451855  E_coul = 4.520603222080223
  HOMO = -0.300135386558486  LUMO = 8.29478304699763
  mo_energy =
[-4.69446173e+00 -3.00135387e-01  8.29478305e+00  9.09176429e+01
  1.03836985e+03]
E1 = -19.030400674461607  E_coul = 4.520603222089969
Extra cycle  E= -14.5097974523716  delta_E= -5.33e-15  |g|= 1.29e-11  |ddm|= 4.05e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59904539e+02 6.54172197e+01 9.97034866e+00 2.07805845e+00
 1.04257871e-01]
grad_E = [ 1.04707937e-05  1.09379780e-03 -2.99320167e-03  1.08763355e-02
  5.50017352e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.895102732        1
[INPUT] 0    0    [1    /1   ]  64.6084651558        1
[INPUT] 0    0    [1    /1   ]  9.8071500356         1
[INPUT] 0    0    [1    /1   ]  2.06724787499        1
[INPUT] 0    0    [1    /1   ]  0.104344844369       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8951027315097, 1.0]], [0, [64.60846515576169, 1.0]], [0, [9.807150035599841, 1.0]], [0, [2.0672478749872476, 1.0]], [0, [0.10434484436921705, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.89510273]
bas 1, expnt(s) = [64.60846516]
bas 2, expnt(s) = [9.80715004]
bas 3, expnt(s) = [2.06724787]
bas 4, expnt(s) = [0.10434484]
CPU time:        40.34
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59895103e+02 3.28943420e+02 6.46084652e+01 5.75747542e+01
 9.80715004e+00 1.40014218e+01 2.06724787e+00 4.35571484e+00
 1.04344844e-01 4.63840078e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.98477833262391
cond(S) = 10.401149300915229
E1 = -18.9964078613279  E_coul = 4.514115297926992
init E= -14.4822925634009
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302973586962524  LUMO = 8.15766581559387
  mo_energy =
[-4.69497031e+00 -3.02973587e-01  8.15766582e+00  8.95158106e+01
  1.03525893e+03]
E1 = -19.032842812784207  E_coul = 4.522642820194056
cycle= 1 E= -14.5101999925902  delta_E= -0.0279  |g|= 0.0196  |ddm|= 0.0782
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0218332
diis-c [-4.76688596e-04  1.00000000e+00]
  HOMO = -0.300043223941412  LUMO = 8.16532669879409
  mo_energy =
[-4.69374013e+00 -3.00043224e-01  8.16532670e+00  8.95187985e+01
  1.03524942e+03]
E1 = -19.03220536298016  E_coul = 4.521995386435538
cycle= 2 E= -14.5102099765446  delta_E= -9.98e-06  |g|= 0.000743  |ddm|= 0.00344
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00081338
diis-c [-2.95723056e-07 -2.85024810e-02  1.02850248e+00]
  HOMO = -0.300072799401524  LUMO = 8.16523294291059
  mo_energy =
[-4.69404374e+00 -3.00072799e-01  8.16523294e+00  8.95186327e+01
  1.03524903e+03]
E1 = -19.032189657406512  E_coul = 4.5219796566909745
cycle= 3 E= -14.5102100007155  delta_E= -2.42e-08  |g|= 1.81e-05  |ddm|= 0.000169
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.40727e-05
diis-c [-3.24837283e-11  1.07519063e-03 -4.53896647e-02  1.04431447e+00]
  HOMO = -0.300073298030019  LUMO = 8.16523818972716
  mo_energy =
[-4.69404187e+00 -3.00073298e-01  8.16523819e+00  8.95186632e+01
  1.03524908e+03]
E1 = -19.03218980824422  E_coul = 4.521979807512165
cycle= 4 E= -14.5102100007321  delta_E= -1.65e-11  |g|= 1.24e-07  |ddm|= 4.12e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03218980824422  E_coul = 4.521979807512165
  HOMO = -0.300073298771855  LUMO = 8.16523826915179
  mo_energy =
[-4.69404180e+00 -3.00073299e-01  8.16523827e+00  8.95186636e+01
  1.03524908e+03]
E1 = -19.032189814207868  E_coul = 4.521979813475813
Extra cycle  E= -14.5102100007321  delta_E=    0  |g|= 6.18e-09  |ddm|= 1.83e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59895103e+02 6.46084652e+01 9.80715004e+00 2.06724787e+00
 1.04344844e-01]
E = -14.510210000732055
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.895102732        1
[INPUT] 0    0    [1    /1   ]  64.6084651558        1
[INPUT] 0    0    [1    /1   ]  9.8071500356         1
[INPUT] 0    0    [1    /1   ]  2.06724787499        1
[INPUT] 0    0    [1    /1   ]  0.104344844369       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8951027315097, 1.0]], [0, [64.60846515576169, 1.0]], [0, [9.807150035599841, 1.0]], [0, [2.0672478749872476, 1.0]], [0, [0.10434484436921705, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.89510273]
bas 1, expnt(s) = [64.60846516]
bas 2, expnt(s) = [9.80715004]
bas 3, expnt(s) = [2.06724787]
bas 4, expnt(s) = [0.10434484]
CPU time:        40.67
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59895103e+02 3.28943420e+02 6.46084652e+01 5.75747542e+01
 9.80715004e+00 1.40014218e+01 2.06724787e+00 4.35571484e+00
 1.04344844e-01 4.63840078e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.98477833262391
cond(S) = 10.401149300915229
E1 = -18.9964078613279  E_coul = 4.514115297926992
init E= -14.4822925634009
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302973586962524  LUMO = 8.15766581559387
  mo_energy =
[-4.69497031e+00 -3.02973587e-01  8.15766582e+00  8.95158106e+01
  1.03525893e+03]
E1 = -19.032842812784207  E_coul = 4.522642820194056
cycle= 1 E= -14.5101999925902  delta_E= -0.0279  |g|= 0.0196  |ddm|= 0.0782
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0218332
diis-c [-4.76688596e-04  1.00000000e+00]
  HOMO = -0.300043223941412  LUMO = 8.16532669879409
  mo_energy =
[-4.69374013e+00 -3.00043224e-01  8.16532670e+00  8.95187985e+01
  1.03524942e+03]
E1 = -19.03220536298016  E_coul = 4.521995386435538
cycle= 2 E= -14.5102099765446  delta_E= -9.98e-06  |g|= 0.000743  |ddm|= 0.00344
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00081338
diis-c [-2.95723056e-07 -2.85024810e-02  1.02850248e+00]
  HOMO = -0.300072799401524  LUMO = 8.16523294291059
  mo_energy =
[-4.69404374e+00 -3.00072799e-01  8.16523294e+00  8.95186327e+01
  1.03524903e+03]
E1 = -19.032189657406512  E_coul = 4.5219796566909745
cycle= 3 E= -14.5102100007155  delta_E= -2.42e-08  |g|= 1.81e-05  |ddm|= 0.000169
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.40727e-05
diis-c [-3.24837283e-11  1.07519063e-03 -4.53896647e-02  1.04431447e+00]
  HOMO = -0.300073298030019  LUMO = 8.16523818972716
  mo_energy =
[-4.69404187e+00 -3.00073298e-01  8.16523819e+00  8.95186632e+01
  1.03524908e+03]
E1 = -19.03218980824422  E_coul = 4.521979807512165
cycle= 4 E= -14.5102100007321  delta_E= -1.65e-11  |g|= 1.24e-07  |ddm|= 4.12e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03218980824422  E_coul = 4.521979807512165
  HOMO = -0.300073298771855  LUMO = 8.16523826915179
  mo_energy =
[-4.69404180e+00 -3.00073299e-01  8.16523827e+00  8.95186636e+01
  1.03524908e+03]
E1 = -19.032189814207868  E_coul = 4.521979813475813
Extra cycle  E= -14.5102100007321  delta_E=    0  |g|= 6.18e-09  |ddm|= 1.83e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.401149300915229
E1 = -19.032189814207868  E_coul = 4.521979813475813
init E= -14.5102100007321
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300073298829991  LUMO = 8.16523827257065
  mo_energy =
[-4.69404179e+00 -3.00073299e-01  8.16523827e+00  8.95186636e+01
  1.03524908e+03]
E1 = -19.032189814445008  E_coul = 4.521979813712946
cycle= 1 E= -14.5102100007321  delta_E= -7.11e-15  |g|= 3.18e-10  |ddm|= 1e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.032189814445008  E_coul = 4.521979813712946
  HOMO = -0.300073298834416  LUMO = 8.16523827272328
  mo_energy =
[-4.69404179e+00 -3.00073299e-01  8.16523827e+00  8.95186636e+01
  1.03524908e+03]
E1 = -19.03218981445481  E_coul = 4.5219798137227505
Extra cycle  E= -14.5102100007321  delta_E= 3.55e-15  |g|= 1.67e-11  |ddm|= 5.54e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59895103e+02 6.46084652e+01 9.80715004e+00 2.06724787e+00
 1.04344844e-01]
grad_E = [ 1.09304063e-05  1.19465893e-03 -5.20016998e-03  1.78370101e-02
  9.00927428e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.870981562        1
[INPUT] 0    0    [1    /1   ]  62.526510542         1
[INPUT] 0    0    [1    /1   ]  9.504130672          1
[INPUT] 0    0    [1    /1   ]  2.04576188584        1
[INPUT] 0    0    [1    /1   ]  0.104480342187       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8709815621125, 1.0]], [0, [62.52651054202975, 1.0]], [0, [9.504130671996629, 1.0]], [0, [2.0457618858391795, 1.0]], [0, [0.10448034218672955, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.87098156]
bas 1, expnt(s) = [62.52651054]
bas 2, expnt(s) = [9.50413067]
bas 3, expnt(s) = [2.04576189]
bas 4, expnt(s) = [0.10448034]
CPU time:        42.68
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59870982e+02 3.28934402e+02 6.25265105e+01 5.61775983e+01
 9.50413067e+00 1.36756924e+01 2.04576189e+00 4.32171712e+00
 1.04480342e-01 4.64291747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9849275741001606
cond(S) = 10.576499154310978
E1 = -18.998166465095473  E_coul = 4.515202593125377
init E= -14.4829638719701
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302800488842373  LUMO = 7.91570447346504
  mo_energy =
[-4.69509887e+00 -3.02800489e-01  7.91570447e+00  8.63161605e+01
  1.02760296e+03]
E1 = -19.03558631102018  E_coul = 4.524356986120276
cycle= 1 E= -14.5112293248999  delta_E= -0.0283  |g|= 0.0222  |ddm|= 0.0798
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.024884
diis-c [-6.19213319e-04  1.00000000e+00]
  HOMO = -0.299955582844456  LUMO = 7.92368100319589
  mo_energy =
[-4.69348604e+00 -2.99955583e-01  7.92368100e+00  8.63206071e+01
  1.02759328e+03]
E1 = -19.035023092476912  E_coul = 4.523782336202667
cycle= 2 E= -14.5112407562742  delta_E= -1.14e-05  |g|= 0.00084  |ddm|= 0.00362
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000913372
diis-c [-3.57745962e-07 -2.85403573e-02  1.02854036e+00]
  HOMO = -0.299986248606371  LUMO = 7.92362986592864
  mo_energy =
[-4.69375118e+00 -2.99986249e-01  7.92362987e+00  8.63206184e+01
  1.02759309e+03]
E1 = -19.03501037734757  E_coul = 4.52376959177606
cycle= 3 E= -14.5112407855715  delta_E= -2.93e-08  |g|= 2.09e-05  |ddm|= 0.000185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7237e-05
diis-c [-4.96296210e-11  1.12094593e-03 -4.65579370e-02  1.04543699e+00]
  HOMO = -0.299986823337568  LUMO = 7.92363588567163
  mo_energy =
[-4.69374874e+00 -2.99986823e-01  7.92363589e+00  8.63206537e+01
  1.02759315e+03]
E1 = -19.03501056278113  E_coul = 4.5237697771873515
cycle= 4 E= -14.5112407855938  delta_E= -2.23e-11  |g|= 1.52e-07  |ddm|= 4.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03501056278113  E_coul = 4.5237697771873515
  HOMO = -0.299986825581172  LUMO = 7.92363595843289
  mo_energy =
[-4.69374868e+00 -2.99986826e-01  7.92363596e+00  8.63206540e+01
  1.02759315e+03]
E1 = -19.03501056789905  E_coul = 4.52376978230527
Extra cycle  E= -14.5112407855938  delta_E=    0  |g|= 8e-09  |ddm|= 2.61e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59870982e+02 6.25265105e+01 9.50413067e+00 2.04576189e+00
 1.04480342e-01]
E = -14.511240785593781
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.870981562        1
[INPUT] 0    0    [1    /1   ]  62.526510542         1
[INPUT] 0    0    [1    /1   ]  9.504130672          1
[INPUT] 0    0    [1    /1   ]  2.04576188584        1
[INPUT] 0    0    [1    /1   ]  0.104480342187       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8709815621125, 1.0]], [0, [62.52651054202975, 1.0]], [0, [9.504130671996629, 1.0]], [0, [2.0457618858391795, 1.0]], [0, [0.10448034218672955, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.87098156]
bas 1, expnt(s) = [62.52651054]
bas 2, expnt(s) = [9.50413067]
bas 3, expnt(s) = [2.04576189]
bas 4, expnt(s) = [0.10448034]
CPU time:        43.02
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59870982e+02 3.28934402e+02 6.25265105e+01 5.61775983e+01
 9.50413067e+00 1.36756924e+01 2.04576189e+00 4.32171712e+00
 1.04480342e-01 4.64291747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9849275741001606
cond(S) = 10.576499154310978
E1 = -18.998166465095473  E_coul = 4.515202593125377
init E= -14.4829638719701
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302800488842373  LUMO = 7.91570447346504
  mo_energy =
[-4.69509887e+00 -3.02800489e-01  7.91570447e+00  8.63161605e+01
  1.02760296e+03]
E1 = -19.03558631102018  E_coul = 4.524356986120276
cycle= 1 E= -14.5112293248999  delta_E= -0.0283  |g|= 0.0222  |ddm|= 0.0798
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.024884
diis-c [-6.19213319e-04  1.00000000e+00]
  HOMO = -0.299955582844456  LUMO = 7.92368100319589
  mo_energy =
[-4.69348604e+00 -2.99955583e-01  7.92368100e+00  8.63206071e+01
  1.02759328e+03]
E1 = -19.035023092476912  E_coul = 4.523782336202667
cycle= 2 E= -14.5112407562742  delta_E= -1.14e-05  |g|= 0.00084  |ddm|= 0.00362
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000913372
diis-c [-3.57745962e-07 -2.85403573e-02  1.02854036e+00]
  HOMO = -0.299986248606371  LUMO = 7.92362986592864
  mo_energy =
[-4.69375118e+00 -2.99986249e-01  7.92362987e+00  8.63206184e+01
  1.02759309e+03]
E1 = -19.03501037734757  E_coul = 4.52376959177606
cycle= 3 E= -14.5112407855715  delta_E= -2.93e-08  |g|= 2.09e-05  |ddm|= 0.000185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7237e-05
diis-c [-4.96296210e-11  1.12094593e-03 -4.65579370e-02  1.04543699e+00]
  HOMO = -0.299986823337568  LUMO = 7.92363588567163
  mo_energy =
[-4.69374874e+00 -2.99986823e-01  7.92363589e+00  8.63206537e+01
  1.02759315e+03]
E1 = -19.03501056278113  E_coul = 4.5237697771873515
cycle= 4 E= -14.5112407855938  delta_E= -2.23e-11  |g|= 1.52e-07  |ddm|= 4.86e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03501056278113  E_coul = 4.5237697771873515
  HOMO = -0.299986825581172  LUMO = 7.92363595843289
  mo_energy =
[-4.69374868e+00 -2.99986826e-01  7.92363596e+00  8.63206540e+01
  1.02759315e+03]
E1 = -19.03501056789905  E_coul = 4.52376978230527
Extra cycle  E= -14.5112407855938  delta_E=    0  |g|= 8e-09  |ddm|= 2.61e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.576499154310978
E1 = -19.03501056789905  E_coul = 4.52376978230527
init E= -14.5112407855938
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299986825710391  LUMO = 7.92363596185427
  mo_energy =
[-4.69374868e+00 -2.99986826e-01  7.92363596e+00  8.63206541e+01
  1.02759315e+03]
E1 = -19.03501056811765  E_coul = 4.523769782523863
cycle= 1 E= -14.5112407855938  delta_E= -3.55e-15  |g|= 4.3e-10  |ddm|= 1.47e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03501056811765  E_coul = 4.523769782523863
  HOMO = -0.299986825718493  LUMO = 7.92363596201955
  mo_energy =
[-4.69374868e+00 -2.99986826e-01  7.92363596e+00  8.63206541e+01
  1.02759315e+03]
E1 = -19.035010568127372  E_coul = 4.523769782533587
Extra cycle  E= -14.5112407855938  delta_E=    0  |g|= 2.33e-11  |ddm|= 8.27e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59870982e+02 6.25265105e+01 9.50413067e+00 2.04576189e+00
 1.04480342e-01]
grad_E = [ 1.30640982e-05  1.31917298e-03 -8.57311424e-03  2.84963189e-02
  1.43595733e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.814737155        1
[INPUT] 0    0    [1    /1   ]  57.6502359769        1
[INPUT] 0    0    [1    /1   ]  8.96903705438        1
[INPUT] 0    0    [1    /1   ]  2.00455293579        1
[INPUT] 0    0    [1    /1   ]  0.104663944762       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8147371554116, 1.0]], [0, [57.65023597685976, 1.0]], [0, [8.969037054375915, 1.0]], [0, [2.004552935792831, 1.0]], [0, [0.10466394476223828, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.81473716]
bas 1, expnt(s) = [57.65023598]
bas 2, expnt(s) = [8.96903705]
bas 3, expnt(s) = [2.00455294]
bas 4, expnt(s) = [0.10466394]
CPU time:        45.04
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59814737e+02 3.28913374e+02 5.76502360e+01 5.28586225e+01
 8.96903705e+00 1.30940618e+01 2.00455294e+00 4.25626021e+00
 1.04663945e-01 4.64903535e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985186623143746
cond(S) = 11.053856692047509
E1 = -19.002591174426758  E_coul = 4.516712318897398
init E= -14.4858788555294
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30253434945867  LUMO = 7.48882612100315
  mo_energy =
[-4.69574705e+00 -3.02534349e-01  7.48882612e+00  7.94546584e+01
  1.01027635e+03]
E1 = -19.039320528995063  E_coul = 4.5257723781633405
cycle= 1 E= -14.5135481508317  delta_E= -0.0277  |g|= 0.0249  |ddm|= 0.0843
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.028143
diis-c [-7.92027395e-04  1.00000000e+00]
  HOMO = -0.299860258598127  LUMO = 7.4967837054749
  mo_energy =
[-4.69403428e+00 -2.99860259e-01  7.49678371e+00  7.94604388e+01
  1.01026591e+03]
E1 = -19.03882825599527  E_coul = 4.5252661285278775
cycle= 2 E= -14.5135621274674  delta_E= -1.4e-05  |g|= 0.000987  |ddm|= 0.004
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105808
diis-c [-4.42841599e-07 -3.01184082e-02  1.03011841e+00]
  HOMO = -0.299893731988441  LUMO = 7.4967774589261
  mo_energy =
[-4.69426192e+00 -2.99893732e-01  7.49677746e+00  7.94606612e+01
  1.01026596e+03]
E1 = -19.038818244643  E_coul = 4.52525607768406
cycle= 3 E= -14.5135621669589  delta_E= -3.95e-08  |g|= 2.47e-05  |ddm|= 0.000218
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.16916e-05
diis-c [-4.60032534e-11  1.25948746e-03 -4.93921870e-02  1.04813270e+00]
  HOMO = -0.299894419231658  LUMO = 7.49678441673894
  mo_energy =
[-4.69425855e+00 -2.99894419e-01  7.49678442e+00  7.94607028e+01
  1.01026603e+03]
E1 = -19.038818468192403  E_coul = 4.525256301201213
cycle= 4 E= -14.5135621669912  delta_E= -3.22e-11  |g|= 1.6e-07  |ddm|= 6.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.038818468192403  E_coul = 4.525256301201213
  HOMO = -0.299894422779439  LUMO = 7.496784470118
  mo_energy =
[-4.69425851e+00 -2.99894423e-01  7.49678447e+00  7.94607030e+01
  1.01026603e+03]
E1 = -19.038818471646625  E_coul = 4.525256304655429
Extra cycle  E= -14.5135621669912  delta_E= -7.11e-15  |g|= 8.86e-09  |ddm|= 3.15e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59814737e+02 5.76502360e+01 8.96903705e+00 2.00455294e+00
 1.04663945e-01]
E = -14.513562166991196
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.814737155        1
[INPUT] 0    0    [1    /1   ]  57.6502359769        1
[INPUT] 0    0    [1    /1   ]  8.96903705438        1
[INPUT] 0    0    [1    /1   ]  2.00455293579        1
[INPUT] 0    0    [1    /1   ]  0.104663944762       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.8147371554116, 1.0]], [0, [57.65023597685976, 1.0]], [0, [8.969037054375915, 1.0]], [0, [2.004552935792831, 1.0]], [0, [0.10466394476223828, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.81473716]
bas 1, expnt(s) = [57.65023598]
bas 2, expnt(s) = [8.96903705]
bas 3, expnt(s) = [2.00455294]
bas 4, expnt(s) = [0.10466394]
CPU time:        45.42
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59814737e+02 3.28913374e+02 5.76502360e+01 5.28586225e+01
 8.96903705e+00 1.30940618e+01 2.00455294e+00 4.25626021e+00
 1.04663945e-01 4.64903535e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985186623143746
cond(S) = 11.053856692047509
E1 = -19.002591174426758  E_coul = 4.516712318897398
init E= -14.4858788555294
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30253434945867  LUMO = 7.48882612100315
  mo_energy =
[-4.69574705e+00 -3.02534349e-01  7.48882612e+00  7.94546584e+01
  1.01027635e+03]
E1 = -19.039320528995063  E_coul = 4.5257723781633405
cycle= 1 E= -14.5135481508317  delta_E= -0.0277  |g|= 0.0249  |ddm|= 0.0843
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.028143
diis-c [-7.92027395e-04  1.00000000e+00]
  HOMO = -0.299860258598127  LUMO = 7.4967837054749
  mo_energy =
[-4.69403428e+00 -2.99860259e-01  7.49678371e+00  7.94604388e+01
  1.01026591e+03]
E1 = -19.03882825599527  E_coul = 4.5252661285278775
cycle= 2 E= -14.5135621274674  delta_E= -1.4e-05  |g|= 0.000987  |ddm|= 0.004
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105808
diis-c [-4.42841599e-07 -3.01184082e-02  1.03011841e+00]
  HOMO = -0.299893731988441  LUMO = 7.4967774589261
  mo_energy =
[-4.69426192e+00 -2.99893732e-01  7.49677746e+00  7.94606612e+01
  1.01026596e+03]
E1 = -19.038818244643  E_coul = 4.52525607768406
cycle= 3 E= -14.5135621669589  delta_E= -3.95e-08  |g|= 2.47e-05  |ddm|= 0.000218
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.16916e-05
diis-c [-4.60032534e-11  1.25948746e-03 -4.93921870e-02  1.04813270e+00]
  HOMO = -0.299894419231658  LUMO = 7.49678441673894
  mo_energy =
[-4.69425855e+00 -2.99894419e-01  7.49678442e+00  7.94607028e+01
  1.01026603e+03]
E1 = -19.038818468192403  E_coul = 4.525256301201213
cycle= 4 E= -14.5135621669912  delta_E= -3.22e-11  |g|= 1.6e-07  |ddm|= 6.07e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.038818468192403  E_coul = 4.525256301201213
  HOMO = -0.299894422779439  LUMO = 7.496784470118
  mo_energy =
[-4.69425851e+00 -2.99894423e-01  7.49678447e+00  7.94607030e+01
  1.01026603e+03]
E1 = -19.038818471646625  E_coul = 4.525256304655429
Extra cycle  E= -14.5135621669912  delta_E= -7.11e-15  |g|= 8.86e-09  |ddm|= 3.15e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.053856692047509
E1 = -19.038818471646625  E_coul = 4.525256304655429
init E= -14.5135621669912
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299894422967932  LUMO = 7.49678447294604
  mo_energy =
[-4.69425851e+00 -2.99894423e-01  7.49678447e+00  7.94607031e+01
  1.01026603e+03]
E1 = -19.038818471808497  E_coul = 4.525256304817299
cycle= 1 E= -14.5135621669912  delta_E= -1.78e-15  |g|= 4.99e-10  |ddm|= 1.82e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.038818471808497  E_coul = 4.525256304817299
  HOMO = -0.299894422979312  LUMO = 7.49678447309558
  mo_energy =
[-4.69425851e+00 -2.99894423e-01  7.49678447e+00  7.94607031e+01
  1.01026603e+03]
E1 = -19.03881847181626  E_coul = 4.52525630482506
Extra cycle  E= -14.5135621669912  delta_E= -1.78e-15  |g|= 2.83e-11  |ddm|= 1.06e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59814737e+02 5.76502360e+01 8.96903705e+00 2.00455294e+00
 1.04663945e-01]
grad_E = [ 2.03393251e-05  1.35374894e-03 -1.26283876e-02  4.19967950e-02
  2.13352472e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724017244        1
[INPUT] 0    0    [1    /1   ]  49.7595419976        1
[INPUT] 0    0    [1    /1   ]  8.31632390696        1
[INPUT] 0    0    [1    /1   ]  1.94512438686        1
[INPUT] 0    0    [1    /1   ]  0.104753451029       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7240172440041, 1.0]], [0, [49.759541997561854, 1.0]], [0, [8.316323906961951, 1.0]], [0, [1.945124386856798, 1.0]], [0, [0.10475345102918499, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72401724]
bas 1, expnt(s) = [49.759542]
bas 2, expnt(s) = [8.31632391]
bas 3, expnt(s) = [1.94512439]
bas 4, expnt(s) = [0.10475345]
CPU time:        47.47
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724017e+02 3.28879456e+02 4.97595420e+01 4.73339017e+01
 8.31632391e+00 1.23726740e+01 1.94512439e+00 4.16126677e+00
 1.04753451e-01 4.65201685e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855436235515898
cond(S) = 12.036713395035715
E1 = -19.009439207591914  E_coul = 4.5178781437257935
init E= -14.4915610638661
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302257179065397  LUMO = 6.96271474922411
  mo_energy =
[-4.69695124e+00 -3.02257179e-01  6.96271475e+00  6.91983661e+01
  9.83114546e+02]
E1 = -19.039932431191076  E_coul = 4.523353045843035
cycle= 1 E= -14.516579385348  delta_E= -0.025  |g|= 0.0238  |ddm|= 0.0934
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0289181
diis-c [-8.36253619e-04  1.00000000e+00]
  HOMO = -0.299871836033938  LUMO = 6.96917963569997
  mo_energy =
[-4.69674880e+00 -2.99871836e-01  6.96917964e+00  6.92021478e+01
  9.83101024e+02]
E1 = -19.039338699978963  E_coul = 4.522743557681143
cycle= 2 E= -14.5165951422978  delta_E= -1.58e-05  |g|= 0.00106  |ddm|= 0.00458
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111772
diis-c [-5.11719021e-07 -3.06172209e-02  1.03061722e+00]
  HOMO = -0.29991098820173  LUMO = 6.96914865374278
  mo_energy =
[-4.69702417e+00 -2.99910988e-01  6.96914865e+00  6.92023356e+01
  9.83101071e+02]
E1 = -19.039322710121223  E_coul = 4.522727516965861
cycle= 3 E= -14.5165951931554  delta_E= -5.09e-08  |g|= 2.99e-05  |ddm|= 0.000263
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.7046e-05
diis-c [-1.51313332e-11  1.26507064e-03 -5.37790002e-02  1.05251393e+00]
  HOMO = -0.2999119167482  LUMO = 6.96915506660784
  mo_energy =
[-4.69702196e+00 -2.99911917e-01  6.96915507e+00  6.92023772e+01
  9.83101145e+02]
E1 = -19.03932278796585  E_coul = 4.522727594760872
cycle= 4 E= -14.516595193205  delta_E= -4.96e-11  |g|= 4.56e-08  |ddm|= 8.09e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03932278796585  E_coul = 4.522727594760872
  HOMO = -0.299911915766461  LUMO = 6.96915512012981
  mo_energy =
[-4.69702188e+00 -2.99911916e-01  6.96915512e+00  6.92023775e+01
  9.83101146e+02]
E1 = -19.039322793266415  E_coul = 4.522727600061455
Extra cycle  E= -14.516595193205  delta_E= 1.78e-14  |g|= 2.18e-09  |ddm|= 7.66e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724017e+02 4.97595420e+01 8.31632391e+00 1.94512439e+00
 1.04753451e-01]
E = -14.51659519320496
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724017244        1
[INPUT] 0    0    [1    /1   ]  49.7595419976        1
[INPUT] 0    0    [1    /1   ]  8.31632390696        1
[INPUT] 0    0    [1    /1   ]  1.94512438686        1
[INPUT] 0    0    [1    /1   ]  0.104753451029       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7240172440041, 1.0]], [0, [49.759541997561854, 1.0]], [0, [8.316323906961951, 1.0]], [0, [1.945124386856798, 1.0]], [0, [0.10475345102918499, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72401724]
bas 1, expnt(s) = [49.759542]
bas 2, expnt(s) = [8.31632391]
bas 3, expnt(s) = [1.94512439]
bas 4, expnt(s) = [0.10475345]
CPU time:        47.85
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724017e+02 3.28879456e+02 4.97595420e+01 4.73339017e+01
 8.31632391e+00 1.23726740e+01 1.94512439e+00 4.16126677e+00
 1.04753451e-01 4.65201685e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855436235515898
cond(S) = 12.036713395035715
E1 = -19.009439207591914  E_coul = 4.5178781437257935
init E= -14.4915610638661
    CPU time for initialize scf      0.03 sec, wall time      0.08 sec
  HOMO = -0.302257179065397  LUMO = 6.96271474922411
  mo_energy =
[-4.69695124e+00 -3.02257179e-01  6.96271475e+00  6.91983661e+01
  9.83114546e+02]
E1 = -19.039932431191076  E_coul = 4.523353045843035
cycle= 1 E= -14.516579385348  delta_E= -0.025  |g|= 0.0238  |ddm|= 0.0934
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0289181
diis-c [-8.36253619e-04  1.00000000e+00]
  HOMO = -0.299871836033938  LUMO = 6.96917963569997
  mo_energy =
[-4.69674880e+00 -2.99871836e-01  6.96917964e+00  6.92021478e+01
  9.83101024e+02]
E1 = -19.039338699978963  E_coul = 4.522743557681143
cycle= 2 E= -14.5165951422978  delta_E= -1.58e-05  |g|= 0.00106  |ddm|= 0.00458
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111772
diis-c [-5.11719021e-07 -3.06172209e-02  1.03061722e+00]
  HOMO = -0.29991098820173  LUMO = 6.96914865374278
  mo_energy =
[-4.69702417e+00 -2.99910988e-01  6.96914865e+00  6.92023356e+01
  9.83101071e+02]
E1 = -19.039322710121223  E_coul = 4.522727516965861
cycle= 3 E= -14.5165951931554  delta_E= -5.09e-08  |g|= 2.99e-05  |ddm|= 0.000263
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.7046e-05
diis-c [-1.51313332e-11  1.26507064e-03 -5.37790002e-02  1.05251393e+00]
  HOMO = -0.2999119167482  LUMO = 6.96915506660784
  mo_energy =
[-4.69702196e+00 -2.99911917e-01  6.96915507e+00  6.92023772e+01
  9.83101145e+02]
E1 = -19.03932278796585  E_coul = 4.522727594760872
cycle= 4 E= -14.516595193205  delta_E= -4.96e-11  |g|= 4.56e-08  |ddm|= 8.09e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03932278796585  E_coul = 4.522727594760872
  HOMO = -0.299911915766461  LUMO = 6.96915512012981
  mo_energy =
[-4.69702188e+00 -2.99911916e-01  6.96915512e+00  6.92023775e+01
  9.83101146e+02]
E1 = -19.039322793266415  E_coul = 4.522727600061455
Extra cycle  E= -14.516595193205  delta_E= 1.78e-14  |g|= 2.18e-09  |ddm|= 7.66e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.14 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.036713395035715
E1 = -19.039322793266415  E_coul = 4.522727600061455
init E= -14.516595193205
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299911915727811  LUMO = 6.96915512212248
  mo_energy =
[-4.69702188e+00 -2.99911916e-01  6.96915512e+00  6.92023775e+01
  9.83101146e+02]
E1 = -19.03932279346266  E_coul = 4.522727600257701
cycle= 1 E= -14.516595193205  delta_E= 1.78e-15  |g|= 1.19e-10  |ddm|= 3.43e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03932279346266  E_coul = 4.522727600257701
  HOMO = -0.299911915727285  LUMO = 6.96915512220237
  mo_energy =
[-4.69702188e+00 -2.99911916e-01  6.96915512e+00  6.92023775e+01
  9.83101146e+02]
E1 = -19.039322793470312  E_coul = 4.522727600265349
Extra cycle  E= -14.516595193205  delta_E= -5.33e-15  |g|= 6.55e-12  |ddm|= 1.85e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724017e+02 4.97595420e+01 8.31632391e+00 1.94512439e+00
 1.04753451e-01]
grad_E = [ 3.78182930e-05  7.24682106e-04 -1.19376556e-02  4.47490355e-02
  2.44059514e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.713391611        1
[INPUT] 0    0    [1    /1   ]  48.8212195254        1
[INPUT] 0    0    [1    /1   ]  8.37694565527        1
[INPUT] 0    0    [1    /1   ]  1.92911056352        1
[INPUT] 0    0    [1    /1   ]  0.104465334784       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7133916112648, 1.0]], [0, [48.82121952544996, 1.0]], [0, [8.376945655274346, 1.0]], [0, [1.929110563515193, 1.0]], [0, [0.10446533478372214, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.71339161]
bas 1, expnt(s) = [48.82121953]
bas 2, expnt(s) = [8.37694566]
bas 3, expnt(s) = [1.92911056]
bas 4, expnt(s) = [0.10446533]
CPU time:        49.94
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59713392e+02 3.28875483e+02 4.88212195e+01 4.66628749e+01
 8.37694566e+00 1.24402554e+01 1.92911056e+00 4.13554607e+00
 1.04465335e-01 4.64241728e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856601036855084
cond(S) = 12.055590312224524
E1 = -19.00935114996624  E_coul = 4.515771504201123
init E= -14.4935796457651
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30238680479854  LUMO = 6.95577168071759
  mo_energy =
[-4.69866574e+00 -3.02386805e-01  6.95577168e+00  6.83951192e+01
  9.80282122e+02]
E1 = -19.03373726947303  E_coul = 4.51560995646659
cycle= 1 E= -14.5181273130064  delta_E= -0.0245  |g|= 0.0198  |ddm|= 0.0992
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0256299
diis-c [-6.56893031e-04  1.00000000e+00]
  HOMO = -0.300161299854593  LUMO = 6.96000269555434
  mo_energy =
[-4.70110401e+00 -3.00161300e-01  6.96000270e+00  6.83927240e+01
  9.80263789e+02]
E1 = -19.032888614867815  E_coul = 4.51474730521006
cycle= 2 E= -14.5181413096578  delta_E= -1.4e-05  |g|= 0.000914  |ddm|= 0.00467
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000983573
diis-c [-5.19377476e-07 -2.68274671e-02  1.02682747e+00]
  HOMO = -0.300202742582989  LUMO = 6.95987281989596
  mo_energy =
[-4.70150586e+00 -3.00202743e-01  6.95987282e+00  6.83925477e+01
  9.80263425e+02]
E1 = -19.032860267970786  E_coul = 4.51471891322071
cycle= 3 E= -14.5181413547501  delta_E= -4.51e-08  |g|= 3.05e-05  |ddm|= 0.00026
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.76098e-05
diis-c [-4.82701288e-11  8.62210702e-04 -5.18469387e-02  1.05098473e+00]
  HOMO = -0.300203834724787  LUMO = 6.95987670115195
  mo_energy =
[-4.70150774e+00 -3.00203835e-01  6.95987670e+00  6.83925790e+01
  9.80263483e+02]
E1 = -19.032860027144007  E_coul = 4.514718672340557
cycle= 4 E= -14.5181413548035  delta_E= -5.34e-11  |g|= 1.04e-07  |ddm|= 8.66e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.032860027144007  E_coul = 4.514718672340557
  HOMO = -0.30020382687896  LUMO = 6.9598768478127
  mo_energy =
[-4.70150751e+00 -3.00203827e-01  6.95987685e+00  6.83925795e+01
  9.80263484e+02]
E1 = -19.032860043414207  E_coul = 4.514718688610756
Extra cycle  E= -14.5181413548035  delta_E=    0  |g|= 4.17e-09  |ddm|= 3.45e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59713392e+02 4.88212195e+01 8.37694566e+00 1.92911056e+00
 1.04465335e-01]
E = -14.51814135480345
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.713391611        1
[INPUT] 0    0    [1    /1   ]  48.8212195254        1
[INPUT] 0    0    [1    /1   ]  8.37694565527        1
[INPUT] 0    0    [1    /1   ]  1.92911056352        1
[INPUT] 0    0    [1    /1   ]  0.104465334784       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7133916112648, 1.0]], [0, [48.82121952544996, 1.0]], [0, [8.376945655274346, 1.0]], [0, [1.929110563515193, 1.0]], [0, [0.10446533478372214, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.71339161]
bas 1, expnt(s) = [48.82121953]
bas 2, expnt(s) = [8.37694566]
bas 3, expnt(s) = [1.92911056]
bas 4, expnt(s) = [0.10446533]
CPU time:        50.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59713392e+02 3.28875483e+02 4.88212195e+01 4.66628749e+01
 8.37694566e+00 1.24402554e+01 1.92911056e+00 4.13554607e+00
 1.04465335e-01 4.64241728e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856601036855084
cond(S) = 12.055590312224524
E1 = -19.00935114996624  E_coul = 4.515771504201123
init E= -14.4935796457651
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30238680479854  LUMO = 6.95577168071759
  mo_energy =
[-4.69866574e+00 -3.02386805e-01  6.95577168e+00  6.83951192e+01
  9.80282122e+02]
E1 = -19.03373726947303  E_coul = 4.51560995646659
cycle= 1 E= -14.5181273130064  delta_E= -0.0245  |g|= 0.0198  |ddm|= 0.0992
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0256299
diis-c [-6.56893031e-04  1.00000000e+00]
  HOMO = -0.300161299854593  LUMO = 6.96000269555434
  mo_energy =
[-4.70110401e+00 -3.00161300e-01  6.96000270e+00  6.83927240e+01
  9.80263789e+02]
E1 = -19.032888614867815  E_coul = 4.51474730521006
cycle= 2 E= -14.5181413096578  delta_E= -1.4e-05  |g|= 0.000914  |ddm|= 0.00467
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000983573
diis-c [-5.19377476e-07 -2.68274671e-02  1.02682747e+00]
  HOMO = -0.300202742582989  LUMO = 6.95987281989596
  mo_energy =
[-4.70150586e+00 -3.00202743e-01  6.95987282e+00  6.83925477e+01
  9.80263425e+02]
E1 = -19.032860267970786  E_coul = 4.51471891322071
cycle= 3 E= -14.5181413547501  delta_E= -4.51e-08  |g|= 3.05e-05  |ddm|= 0.00026
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.76098e-05
diis-c [-4.82701288e-11  8.62210702e-04 -5.18469387e-02  1.05098473e+00]
  HOMO = -0.300203834724787  LUMO = 6.95987670115195
  mo_energy =
[-4.70150774e+00 -3.00203835e-01  6.95987670e+00  6.83925790e+01
  9.80263483e+02]
E1 = -19.032860027144007  E_coul = 4.514718672340557
cycle= 4 E= -14.5181413548035  delta_E= -5.34e-11  |g|= 1.04e-07  |ddm|= 8.66e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.032860027144007  E_coul = 4.514718672340557
  HOMO = -0.30020382687896  LUMO = 6.9598768478127
  mo_energy =
[-4.70150751e+00 -3.00203827e-01  6.95987685e+00  6.83925795e+01
  9.80263484e+02]
E1 = -19.032860043414207  E_coul = 4.514718688610756
Extra cycle  E= -14.5181413548035  delta_E=    0  |g|= 4.17e-09  |ddm|= 3.45e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.055590312224524
E1 = -19.032860043414207  E_coul = 4.514718688610756
init E= -14.5181413548035
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300203826555188  LUMO = 6.95987685280761
  mo_energy =
[-4.70150751e+00 -3.00203827e-01  6.95987685e+00  6.83925796e+01
  9.80263484e+02]
E1 = -19.03286004401394  E_coul = 4.514718689210492
cycle= 1 E= -14.5181413548034  delta_E= 1.78e-15  |g|= 1.94e-10  |ddm|= 1.49e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03286004401394  E_coul = 4.514718689210492
  HOMO = -0.300203826541436  LUMO = 6.95987685298277
  mo_energy =
[-4.70150751e+00 -3.00203827e-01  6.95987685e+00  6.83925796e+01
  9.80263484e+02]
E1 = -19.032860044036873  E_coul = 4.514718689233426
Extra cycle  E= -14.5181413548034  delta_E= 1.78e-15  |g|= 9.5e-12  |ddm|= 6.87e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59713392e+02 4.88212195e+01 8.37694566e+00 1.92911056e+00
 1.04465335e-01]
grad_E = [ 4.17061339e-05  2.29386251e-04 -5.80363398e-03  2.43342621e-02
  1.20269613e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.731463288        1
[INPUT] 0    0    [1    /1   ]  50.3835558236        1
[INPUT] 0    0    [1    /1   ]  8.63798840531        1
[INPUT] 0    0    [1    /1   ]  1.92279370656        1
[INPUT] 0    0    [1    /1   ]  0.104125488723       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7314632882598, 1.0]], [0, [50.38355582359431, 1.0]], [0, [8.637988405312672, 1.0]], [0, [1.9227937065580476, 1.0]], [0, [0.10412548872256353, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.73146329]
bas 1, expnt(s) = [50.38355582]
bas 2, expnt(s) = [8.63798841]
bas 3, expnt(s) = [1.92279371]
bas 4, expnt(s) = [0.10412549]
CPU time:        52.41
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59731463e+02 3.28882240e+02 5.03835558e+01 4.77784036e+01
 8.63798841e+00 1.27298852e+01 1.92279371e+00 4.12538555e+00
 1.04125489e-01 4.63108566e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856529239155587
cond(S) = 11.668580873269217
E1 = -19.00619565048103  E_coul = 4.512611038795337
init E= -14.4935846116857
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302601201395788  LUMO = 7.08140328006925
  mo_energy =
[-4.70032414e+00 -3.02601201e-01  7.08140328e+00  7.07563737e+01
  9.85957670e+02]
E1 = -19.025056484029342  E_coul = 4.506358704235637
cycle= 1 E= -14.5186977797937  delta_E= -0.0251  |g|= 0.0168  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0213597
diis-c [-4.56238185e-04  1.00000000e+00]
  HOMO = -0.300478587214938  LUMO = 7.08320184614635
  mo_energy =
[-4.70569696e+00 -3.00478587e-01  7.08320185e+00  7.07462627e+01
  9.85932983e+02]
E1 = -19.023940717128745  E_coul = 4.505230287537325
cycle= 2 E= -14.5187104295914  delta_E= -1.26e-05  |g|= 0.000772  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000863516
diis-c [-4.97312798e-07 -2.39017036e-02  1.02390170e+00]
  HOMO = -0.300521214427371  LUMO = 7.08296003164626
  mo_energy =
[-4.70623237e+00 -3.00521214e-01  7.08296003e+00  7.07456642e+01
  9.85932124e+02]
E1 = -19.023900763438508  E_coul = 4.505190296081204
cycle= 3 E= -14.5187104673573  delta_E= -3.78e-08  |g|= 2.81e-05  |ddm|= 0.000246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.54854e-05
diis-c [-4.51313428e-11  5.06845156e-04 -4.86676882e-02  1.04816084e+00]
  HOMO = -0.300522365560784  LUMO = 7.08296089735365
  mo_energy =
[-4.70623840e+00 -3.00522366e-01  7.08296090e+00  7.07456827e+01
  9.85932162e+02]
E1 = -19.023900215373367  E_coul = 4.505189747968796
cycle= 4 E= -14.5187104674046  delta_E= -4.73e-11  |g|= 1.97e-07  |ddm|= 8.29e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.023900215373367  E_coul = 4.505189747968796
  HOMO = -0.300522351201855  LUMO = 7.0829611590621
  mo_energy =
[-4.70623801e+00 -3.00522351e-01  7.08296116e+00  7.07456837e+01
  9.85932163e+02]
E1 = -19.023900244318117  E_coul = 4.50518977691354
Extra cycle  E= -14.5187104674046  delta_E= -7.11e-15  |g|= 8.48e-09  |ddm|= 6.27e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59731463e+02 5.03835558e+01 8.63798841e+00 1.92279371e+00
 1.04125489e-01]
E = -14.518710467404578
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.731463288        1
[INPUT] 0    0    [1    /1   ]  50.3835558236        1
[INPUT] 0    0    [1    /1   ]  8.63798840531        1
[INPUT] 0    0    [1    /1   ]  1.92279370656        1
[INPUT] 0    0    [1    /1   ]  0.104125488723       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7314632882598, 1.0]], [0, [50.38355582359431, 1.0]], [0, [8.637988405312672, 1.0]], [0, [1.9227937065580476, 1.0]], [0, [0.10412548872256353, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.73146329]
bas 1, expnt(s) = [50.38355582]
bas 2, expnt(s) = [8.63798841]
bas 3, expnt(s) = [1.92279371]
bas 4, expnt(s) = [0.10412549]
CPU time:        52.83
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59731463e+02 3.28882240e+02 5.03835558e+01 4.77784036e+01
 8.63798841e+00 1.27298852e+01 1.92279371e+00 4.12538555e+00
 1.04125489e-01 4.63108566e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856529239155587
cond(S) = 11.668580873269217
E1 = -19.00619565048103  E_coul = 4.512611038795337
init E= -14.4935846116857
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302601201395788  LUMO = 7.08140328006925
  mo_energy =
[-4.70032414e+00 -3.02601201e-01  7.08140328e+00  7.07563737e+01
  9.85957670e+02]
E1 = -19.025056484029342  E_coul = 4.506358704235637
cycle= 1 E= -14.5186977797937  delta_E= -0.0251  |g|= 0.0168  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0213597
diis-c [-4.56238185e-04  1.00000000e+00]
  HOMO = -0.300478587214938  LUMO = 7.08320184614635
  mo_energy =
[-4.70569696e+00 -3.00478587e-01  7.08320185e+00  7.07462627e+01
  9.85932983e+02]
E1 = -19.023940717128745  E_coul = 4.505230287537325
cycle= 2 E= -14.5187104295914  delta_E= -1.26e-05  |g|= 0.000772  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000863516
diis-c [-4.97312798e-07 -2.39017036e-02  1.02390170e+00]
  HOMO = -0.300521214427371  LUMO = 7.08296003164626
  mo_energy =
[-4.70623237e+00 -3.00521214e-01  7.08296003e+00  7.07456642e+01
  9.85932124e+02]
E1 = -19.023900763438508  E_coul = 4.505190296081204
cycle= 3 E= -14.5187104673573  delta_E= -3.78e-08  |g|= 2.81e-05  |ddm|= 0.000246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.54854e-05
diis-c [-4.51313428e-11  5.06845156e-04 -4.86676882e-02  1.04816084e+00]
  HOMO = -0.300522365560784  LUMO = 7.08296089735365
  mo_energy =
[-4.70623840e+00 -3.00522366e-01  7.08296090e+00  7.07456827e+01
  9.85932162e+02]
E1 = -19.023900215373367  E_coul = 4.505189747968796
cycle= 4 E= -14.5187104674046  delta_E= -4.73e-11  |g|= 1.97e-07  |ddm|= 8.29e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.023900215373367  E_coul = 4.505189747968796
  HOMO = -0.300522351201855  LUMO = 7.0829611590621
  mo_energy =
[-4.70623801e+00 -3.00522351e-01  7.08296116e+00  7.07456837e+01
  9.85932163e+02]
E1 = -19.023900244318117  E_coul = 4.50518977691354
Extra cycle  E= -14.5187104674046  delta_E= -7.11e-15  |g|= 8.48e-09  |ddm|= 6.27e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.668580873269217
E1 = -19.023900244318117  E_coul = 4.50518977691354
init E= -14.5187104674046
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300522350623636  LUMO = 7.08296116817345
  mo_energy =
[-4.70623799e+00 -3.00522351e-01  7.08296117e+00  7.07456838e+01
  9.85932163e+02]
E1 = -19.02390024539239  E_coul = 4.505189777987808
cycle= 1 E= -14.5187104674046  delta_E= -3.55e-15  |g|= 3.72e-10  |ddm|= 2.67e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02390024539239  E_coul = 4.505189777987808
  HOMO = -0.300522350599229  LUMO = 7.08296116849505
  mo_energy =
[-4.70623799e+00 -3.00522351e-01  7.08296117e+00  7.07456838e+01
  9.85932163e+02]
E1 = -19.02390024543313  E_coul = 4.505189778028557
Extra cycle  E= -14.5187104674046  delta_E= 8.88e-15  |g|= 1.73e-11  |ddm|= 1.2e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59731463e+02 5.03835558e+01 8.63798841e+00 1.92279371e+00
 1.04125489e-01]
grad_E = [ 3.91033045e-05  7.45389352e-05  1.57581691e-04 -2.51969752e-03
 -2.56596210e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.723221431        1
[INPUT] 0    0    [1    /1   ]  49.6695816489        1
[INPUT] 0    0    [1    /1   ]  8.58050895725        1
[INPUT] 0    0    [1    /1   ]  1.92063905669        1
[INPUT] 0    0    [1    /1   ]  0.104185629916       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7232214309986, 1.0]], [0, [49.6695816489414, 1.0]], [0, [8.580508957254896, 1.0]], [0, [1.920639056686845, 1.0]], [0, [0.10418562991614017, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72322143]
bas 1, expnt(s) = [49.66958165]
bas 2, expnt(s) = [8.58050896]
bas 3, expnt(s) = [1.92063906]
bas 4, expnt(s) = [0.10418563]
CPU time:        54.94
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59723221e+02 3.28879158e+02 4.96695816e+01 4.72697060e+01
 8.58050896e+00 1.26663012e+01 1.92063906e+00 4.12191794e+00
 1.04185630e-01 4.63309164e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985674991976299
cond(S) = 11.787133509181736
E1 = -19.00661673936968  E_coul = 4.5131850997008645
init E= -14.4934316396688
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302546685644526  LUMO = 7.04523264743647
  mo_energy =
[-4.70010380e+00 -3.02546686e-01  7.04523265e+00  6.98522799e+01
  9.83526599e+02]
E1 = -19.026010404523287  E_coul = 4.507287409221323
cycle= 1 E= -14.518722995302  delta_E= -0.0253  |g|= 0.0171  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221878
diis-c [-4.92298523e-04  1.00000000e+00]
  HOMO = -0.300429124430386  LUMO = 7.04716632173084
  mo_energy =
[-4.70529471e+00 -3.00429124e-01  7.04716632e+00  6.98428256e+01
  9.83502542e+02]
E1 = -19.024906313415325  E_coul = 4.506170586941081
cycle= 2 E= -14.5187357264742  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00471
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871722
diis-c [-5.12857792e-07 -2.29266652e-02  1.02292667e+00]
  HOMO = -0.300471879976501  LUMO = 7.04693095158501
  mo_energy =
[-4.70582352e+00 -3.00471880e-01  7.04693095e+00  6.98422545e+01
  9.83501718e+02]
E1 = -19.024866637377492  E_coul = 4.506130872405198
cycle= 3 E= -14.5187357649723  delta_E= -3.85e-08  |g|= 2.93e-05  |ddm|= 0.000249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.67678e-05
diis-c [-4.66007747e-11  4.97405725e-04 -4.98382872e-02  1.04934088e+00]
  HOMO = -0.300473091918203  LUMO = 7.04693164536253
  mo_energy =
[-4.70583006e+00 -3.00473092e-01  7.04693165e+00  6.98422729e+01
  9.83501757e+02]
E1 = -19.02486604390658  E_coul = 4.506130278882761
cycle= 4 E= -14.5187357650238  delta_E= -5.15e-11  |g|= 1.97e-07  |ddm|= 8.71e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02486604390658  E_coul = 4.506130278882761
  HOMO = -0.300473077274767  LUMO = 7.04693190609047
  mo_energy =
[-4.70582967e+00 -3.00473077e-01  7.04693191e+00  6.98422739e+01
  9.83501758e+02]
E1 = -19.02486607307093  E_coul = 4.506130308047109
Extra cycle  E= -14.5187357650238  delta_E=    0  |g|= 8.55e-09  |ddm|= 6.43e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59723221e+02 4.96695816e+01 8.58050896e+00 1.92063906e+00
 1.04185630e-01]
E = -14.51873576502382
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.723221431        1
[INPUT] 0    0    [1    /1   ]  49.6695816489        1
[INPUT] 0    0    [1    /1   ]  8.58050895725        1
[INPUT] 0    0    [1    /1   ]  1.92063905669        1
[INPUT] 0    0    [1    /1   ]  0.104185629916       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7232214309986, 1.0]], [0, [49.6695816489414, 1.0]], [0, [8.580508957254896, 1.0]], [0, [1.920639056686845, 1.0]], [0, [0.10418562991614017, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72322143]
bas 1, expnt(s) = [49.66958165]
bas 2, expnt(s) = [8.58050896]
bas 3, expnt(s) = [1.92063906]
bas 4, expnt(s) = [0.10418563]
CPU time:        55.38
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59723221e+02 3.28879158e+02 4.96695816e+01 4.72697060e+01
 8.58050896e+00 1.26663012e+01 1.92063906e+00 4.12191794e+00
 1.04185630e-01 4.63309164e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985674991976299
cond(S) = 11.787133509181736
E1 = -19.00661673936968  E_coul = 4.5131850997008645
init E= -14.4934316396688
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302546685644526  LUMO = 7.04523264743647
  mo_energy =
[-4.70010380e+00 -3.02546686e-01  7.04523265e+00  6.98522799e+01
  9.83526599e+02]
E1 = -19.026010404523287  E_coul = 4.507287409221323
cycle= 1 E= -14.518722995302  delta_E= -0.0253  |g|= 0.0171  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221878
diis-c [-4.92298523e-04  1.00000000e+00]
  HOMO = -0.300429124430386  LUMO = 7.04716632173084
  mo_energy =
[-4.70529471e+00 -3.00429124e-01  7.04716632e+00  6.98428256e+01
  9.83502542e+02]
E1 = -19.024906313415325  E_coul = 4.506170586941081
cycle= 2 E= -14.5187357264742  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00471
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871722
diis-c [-5.12857792e-07 -2.29266652e-02  1.02292667e+00]
  HOMO = -0.300471879976501  LUMO = 7.04693095158501
  mo_energy =
[-4.70582352e+00 -3.00471880e-01  7.04693095e+00  6.98422545e+01
  9.83501718e+02]
E1 = -19.024866637377492  E_coul = 4.506130872405198
cycle= 3 E= -14.5187357649723  delta_E= -3.85e-08  |g|= 2.93e-05  |ddm|= 0.000249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.67678e-05
diis-c [-4.66007747e-11  4.97405725e-04 -4.98382872e-02  1.04934088e+00]
  HOMO = -0.300473091918203  LUMO = 7.04693164536253
  mo_energy =
[-4.70583006e+00 -3.00473092e-01  7.04693165e+00  6.98422729e+01
  9.83501757e+02]
E1 = -19.02486604390658  E_coul = 4.506130278882761
cycle= 4 E= -14.5187357650238  delta_E= -5.15e-11  |g|= 1.97e-07  |ddm|= 8.71e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02486604390658  E_coul = 4.506130278882761
  HOMO = -0.300473077274767  LUMO = 7.04693190609047
  mo_energy =
[-4.70582967e+00 -3.00473077e-01  7.04693191e+00  6.98422739e+01
  9.83501758e+02]
E1 = -19.02486607307093  E_coul = 4.506130308047109
Extra cycle  E= -14.5187357650238  delta_E=    0  |g|= 8.55e-09  |ddm|= 6.43e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.787133509181736
E1 = -19.02486607307093  E_coul = 4.506130308047109
init E= -14.5187357650238
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300473076680263  LUMO = 7.04693191516052
  mo_energy =
[-4.70582965e+00 -3.00473077e-01  7.04693192e+00  6.98422739e+01
  9.83501758e+02]
E1 = -19.024866074157185  E_coul = 4.506130309133363
cycle= 1 E= -14.5187357650238  delta_E= -1.78e-15  |g|= 3.83e-10  |ddm|= 2.77e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.024866074157185  E_coul = 4.506130309133363
  HOMO = -0.300473076654883  LUMO = 7.0469319154803
  mo_energy =
[-4.70582965e+00 -3.00473077e-01  7.04693192e+00  6.98422739e+01
  9.83501758e+02]
E1 = -19.024866074198606  E_coul = 4.506130309174775
Extra cycle  E= -14.5187357650238  delta_E= -8.88e-15  |g|= 1.83e-11  |ddm|= 1.27e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59723221e+02 4.96695816e+01 8.58050896e+00 1.92063906e+00
 1.04185630e-01]
grad_E = [ 4.09127339e-05 -1.59262967e-05  7.82225300e-05 -3.56405104e-04
  7.87516253e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724428315        1
[INPUT] 0    0    [1    /1   ]  49.7775869936        1
[INPUT] 0    0    [1    /1   ]  8.58987939852        1
[INPUT] 0    0    [1    /1   ]  1.92211957956        1
[INPUT] 0    0    [1    /1   ]  0.104185299835       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7244283152872, 1.0]], [0, [49.77758699362805, 1.0]], [0, [8.589879398522168, 1.0]], [0, [1.9221195795631612, 1.0]], [0, [0.10418529983478989, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72442832]
bas 1, expnt(s) = [49.77758699]
bas 2, expnt(s) = [8.5898794]
bas 3, expnt(s) = [1.92211958]
bas 4, expnt(s) = [0.1041853]
CPU time:        57.48
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724428e+02 3.28879610e+02 4.97775870e+01 4.73467752e+01
 8.58987940e+00 1.26766741e+01 1.92211958e+00 4.12430074e+00
 1.04185300e-01 4.63308063e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856682057083894
cond(S) = 11.775403026951645
E1 = -19.006674206008057  E_coul = 4.513184758017686
init E= -14.4934894479904
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302553342072757  LUMO = 7.05451279991751
  mo_energy =
[-4.70009802e+00 -3.02553342e-01  7.05451280e+00  6.99953082e+01
  9.83899096e+02]
E1 = -19.02619385814892  E_coul = 4.507470130645545
cycle= 1 E= -14.5187237275034  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.022119
diis-c [-4.8924846e-04  1.0000000e+00]
  HOMO = -0.300427989671002  LUMO = 7.05651524325945
  mo_energy =
[-4.70520484e+00 -3.00427990e-01  7.05651524e+00  6.99860332e+01
  9.83875253e+02]
E1 = -19.02509703942403  E_coul = 4.506360605159038
cycle= 2 E= -14.518736434265  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871551
diis-c [-5.09020802e-07 -2.31676349e-02  1.02316763e+00]
  HOMO = -0.300470600091699  LUMO = 7.05628223656829
  mo_energy =
[-4.70573019e+00 -3.00470600e-01  7.05628224e+00  6.99854700e+01
  9.83874438e+02]
E1 = -19.025057733912362  E_coul = 4.506321261259673
cycle= 3 E= -14.5187364726527  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65176e-05
diis-c [-4.63534113e-11  5.07081259e-04 -4.96740290e-02  1.04916695e+00]
  HOMO = -0.300471795816681  LUMO = 7.05628305900637
  mo_energy =
[-4.70573650e+00 -3.00471796e-01  7.05628306e+00  6.99854887e+01
  9.83874477e+02]
E1 = -19.025057160814224  E_coul = 4.506320688110897
cycle= 4 E= -14.5187364727033  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025057160814224  E_coul = 4.506320688110897
  HOMO = -0.30047178142035  LUMO = 7.05628331621814
  mo_energy =
[-4.70573611e+00 -3.00471781e-01  7.05628332e+00  6.99854897e+01
  9.83874478e+02]
E1 = -19.02505718951407  E_coul = 4.506320716810734
Extra cycle  E= -14.5187364727033  delta_E= -7.11e-15  |g|= 8.39e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724428e+02 4.97775870e+01 8.58987940e+00 1.92211958e+00
 1.04185300e-01]
E = -14.518736472703335
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:25:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724428315        1
[INPUT] 0    0    [1    /1   ]  49.7775869936        1
[INPUT] 0    0    [1    /1   ]  8.58987939852        1
[INPUT] 0    0    [1    /1   ]  1.92211957956        1
[INPUT] 0    0    [1    /1   ]  0.104185299835       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7244283152872, 1.0]], [0, [49.77758699362805, 1.0]], [0, [8.589879398522168, 1.0]], [0, [1.9221195795631612, 1.0]], [0, [0.10418529983478989, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72442832]
bas 1, expnt(s) = [49.77758699]
bas 2, expnt(s) = [8.5898794]
bas 3, expnt(s) = [1.92211958]
bas 4, expnt(s) = [0.1041853]
CPU time:        57.95
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724428e+02 3.28879610e+02 4.97775870e+01 4.73467752e+01
 8.58987940e+00 1.26766741e+01 1.92211958e+00 4.12430074e+00
 1.04185300e-01 4.63308063e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856682057083894
cond(S) = 11.775403026951645
E1 = -19.006674206008057  E_coul = 4.513184758017686
init E= -14.4934894479904
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302553342072757  LUMO = 7.05451279991751
  mo_energy =
[-4.70009802e+00 -3.02553342e-01  7.05451280e+00  6.99953082e+01
  9.83899096e+02]
E1 = -19.02619385814892  E_coul = 4.507470130645545
cycle= 1 E= -14.5187237275034  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.022119
diis-c [-4.8924846e-04  1.0000000e+00]
  HOMO = -0.300427989671002  LUMO = 7.05651524325945
  mo_energy =
[-4.70520484e+00 -3.00427990e-01  7.05651524e+00  6.99860332e+01
  9.83875253e+02]
E1 = -19.02509703942403  E_coul = 4.506360605159038
cycle= 2 E= -14.518736434265  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871551
diis-c [-5.09020802e-07 -2.31676349e-02  1.02316763e+00]
  HOMO = -0.300470600091699  LUMO = 7.05628223656829
  mo_energy =
[-4.70573019e+00 -3.00470600e-01  7.05628224e+00  6.99854700e+01
  9.83874438e+02]
E1 = -19.025057733912362  E_coul = 4.506321261259673
cycle= 3 E= -14.5187364726527  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65176e-05
diis-c [-4.63534113e-11  5.07081259e-04 -4.96740290e-02  1.04916695e+00]
  HOMO = -0.300471795816681  LUMO = 7.05628305900637
  mo_energy =
[-4.70573650e+00 -3.00471796e-01  7.05628306e+00  6.99854887e+01
  9.83874477e+02]
E1 = -19.025057160814224  E_coul = 4.506320688110897
cycle= 4 E= -14.5187364727033  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025057160814224  E_coul = 4.506320688110897
  HOMO = -0.30047178142035  LUMO = 7.05628331621814
  mo_energy =
[-4.70573611e+00 -3.00471781e-01  7.05628332e+00  6.99854897e+01
  9.83874478e+02]
E1 = -19.02505718951407  E_coul = 4.506320716810734
Extra cycle  E= -14.5187364727033  delta_E= -7.11e-15  |g|= 8.39e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.775403026951645
E1 = -19.02505718951407  E_coul = 4.506320716810734
init E= -14.5187364727033
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300471780836563  LUMO = 7.0562833251558
  mo_energy =
[-4.70573610e+00 -3.00471781e-01  7.05628333e+00  6.99854898e+01
  9.83874478e+02]
E1 = -19.02505719058162  E_coul = 4.506320717878282
cycle= 1 E= -14.5187364727033  delta_E= -3.55e-15  |g|= 3.76e-10  |ddm|= 2.72e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02505719058162  E_coul = 4.506320717878282
  HOMO = -0.300471780811684  LUMO = 7.05628332547064
  mo_energy =
[-4.70573610e+00 -3.00471781e-01  7.05628333e+00  6.99854898e+01
  9.83874478e+02]
E1 = -19.025057190622235  E_coul = 4.50632071791891
Extra cycle  E= -14.5187364727033  delta_E= 1.42e-14  |g|= 1.79e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59724428e+02 4.97775870e+01 8.58987940e+00 1.92211958e+00
 1.04185300e-01]
grad_E = [ 4.06264942e-05  1.39067618e-06 -1.94662213e-05  2.09412892e-05
  7.04373828e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724386376        1
[INPUT] 0    0    [1    /1   ]  49.7773121132        1
[INPUT] 0    0    [1    /1   ]  8.59070085506        1
[INPUT] 0    0    [1    /1   ]  1.92221810363        1
[INPUT] 0    0    [1    /1   ]  0.10418388168        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7243863759121, 1.0]], [0, [49.77731211323416, 1.0]], [0, [8.59070085505763, 1.0]], [0, [1.9222181036316162, 1.0]], [0, [0.10418388167989691, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72438638]
bas 1, expnt(s) = [49.77731211]
bas 2, expnt(s) = [8.59070086]
bas 3, expnt(s) = [1.9222181]
bas 4, expnt(s) = [0.10418388]
CPU time:        60.17
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724386e+02 3.28879594e+02 4.97773121e+01 4.73465791e+01
 8.59070086e+00 1.26775833e+01 1.92221810e+00 4.12445929e+00
 1.04183882e-01 4.63303333e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856677102062785
cond(S) = 11.775707937417351
E1 = -19.006657278303983  E_coul = 4.51317557681482
init E= -14.4934817014892
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302554680455393  LUMO = 7.05527607388773
  mo_energy =
[-4.70010129e+00 -3.02554680e-01  7.05527607e+00  6.99979743e+01
  9.83900802e+02]
E1 = -19.0261846384857  E_coul = 4.507460897793104
cycle= 1 E= -14.5187237406926  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221185
diis-c [-4.89229598e-04  1.00000000e+00]
  HOMO = -0.300429045480336  LUMO = 7.05727802302133
  mo_energy =
[-4.70520841e+00 -3.00429045e-01  7.05727802e+00  6.99886998e+01
  9.83876970e+02]
E1 = -19.02508764729289  E_coul = 4.506351202583261
cycle= 2 E= -14.5187364447096  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871385
diis-c [-5.09034302e-07 -2.31537863e-02  1.02315379e+00]
  HOMO = -0.300471650501941  LUMO = 7.0570449093328
  mo_energy =
[-4.70573384e+00 -3.00471651e-01  7.05704491e+00  6.99881362e+01
  9.83876155e+02]
E1 = -19.02504833677219  E_coul = 4.506311853692714
cycle= 3 E= -14.5187364830795  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65165e-05
diis-c [-4.63333941e-11  5.06175400e-04 -4.96694085e-02  1.04916323e+00]
  HOMO = -0.300472846399502  LUMO = 7.05704572605034
  mo_energy =
[-4.70574015e+00 -3.00472846e-01  7.05704573e+00  6.99881550e+01
  9.83876193e+02]
E1 = -19.025047763191864  E_coul = 4.5063112800617535
cycle= 4 E= -14.5187364831301  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025047763191864  E_coul = 4.5063112800617535
  HOMO = -0.300472831993145  LUMO = 7.0570459834565
  mo_energy =
[-4.70573977e+00 -3.00472832e-01  7.05704598e+00  6.99881559e+01
  9.83876195e+02]
E1 = -19.025047791910268  E_coul = 4.506311308780154
Extra cycle  E= -14.5187364831301  delta_E= -3.55e-15  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724386e+02 4.97773121e+01 8.59070086e+00 1.92221810e+00
 1.04183882e-01]
E = -14.518736483130114
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724386376        1
[INPUT] 0    0    [1    /1   ]  49.7773121132        1
[INPUT] 0    0    [1    /1   ]  8.59070085506        1
[INPUT] 0    0    [1    /1   ]  1.92221810363        1
[INPUT] 0    0    [1    /1   ]  0.10418388168        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7243863759121, 1.0]], [0, [49.77731211323416, 1.0]], [0, [8.59070085505763, 1.0]], [0, [1.9222181036316162, 1.0]], [0, [0.10418388167989691, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72438638]
bas 1, expnt(s) = [49.77731211]
bas 2, expnt(s) = [8.59070086]
bas 3, expnt(s) = [1.9222181]
bas 4, expnt(s) = [0.10418388]
CPU time:        60.65
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724386e+02 3.28879594e+02 4.97773121e+01 4.73465791e+01
 8.59070086e+00 1.26775833e+01 1.92221810e+00 4.12445929e+00
 1.04183882e-01 4.63303333e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856677102062785
cond(S) = 11.775707937417351
E1 = -19.006657278303983  E_coul = 4.51317557681482
init E= -14.4934817014892
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302554680455393  LUMO = 7.05527607388773
  mo_energy =
[-4.70010129e+00 -3.02554680e-01  7.05527607e+00  6.99979743e+01
  9.83900802e+02]
E1 = -19.0261846384857  E_coul = 4.507460897793104
cycle= 1 E= -14.5187237406926  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221185
diis-c [-4.89229598e-04  1.00000000e+00]
  HOMO = -0.300429045480336  LUMO = 7.05727802302133
  mo_energy =
[-4.70520841e+00 -3.00429045e-01  7.05727802e+00  6.99886998e+01
  9.83876970e+02]
E1 = -19.02508764729289  E_coul = 4.506351202583261
cycle= 2 E= -14.5187364447096  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.0047
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871385
diis-c [-5.09034302e-07 -2.31537863e-02  1.02315379e+00]
  HOMO = -0.300471650501941  LUMO = 7.0570449093328
  mo_energy =
[-4.70573384e+00 -3.00471651e-01  7.05704491e+00  6.99881362e+01
  9.83876155e+02]
E1 = -19.02504833677219  E_coul = 4.506311853692714
cycle= 3 E= -14.5187364830795  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65165e-05
diis-c [-4.63333941e-11  5.06175400e-04 -4.96694085e-02  1.04916323e+00]
  HOMO = -0.300472846399502  LUMO = 7.05704572605034
  mo_energy =
[-4.70574015e+00 -3.00472846e-01  7.05704573e+00  6.99881550e+01
  9.83876193e+02]
E1 = -19.025047763191864  E_coul = 4.5063112800617535
cycle= 4 E= -14.5187364831301  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025047763191864  E_coul = 4.5063112800617535
  HOMO = -0.300472831993145  LUMO = 7.0570459834565
  mo_energy =
[-4.70573977e+00 -3.00472832e-01  7.05704598e+00  6.99881559e+01
  9.83876195e+02]
E1 = -19.025047791910268  E_coul = 4.506311308780154
Extra cycle  E= -14.5187364831301  delta_E= -3.55e-15  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.775707937417351
E1 = -19.025047791910268  E_coul = 4.506311308780154
init E= -14.5187364831301
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30047283140901  LUMO = 7.05704599240075
  mo_energy =
[-4.70573976e+00 -3.00472831e-01  7.05704599e+00  6.99881560e+01
  9.83876195e+02]
E1 = -19.025047792978437  E_coul = 4.506311309848326
cycle= 1 E= -14.5187364831301  delta_E= 1.78e-15  |g|= 3.76e-10  |ddm|= 2.72e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025047792978437  E_coul = 4.506311309848326
  HOMO = -0.30047283138412  LUMO = 7.05704599271577
  mo_energy =
[-4.70573976e+00 -3.00472831e-01  7.05704599e+00  6.99881560e+01
  9.83876195e+02]
E1 = -19.025047793019112  E_coul = 4.506311309888993
Extra cycle  E= -14.5187364831301  delta_E= -7.11e-15  |g|= 1.79e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724386e+02 4.97773121e+01 8.59070086e+00 1.92221810e+00
 1.04183882e-01]
grad_E = [ 4.06337274e-05 -1.07113264e-07 -2.91358356e-06 -6.70121266e-06
  9.00129722e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724328215        1
[INPUT] 0    0    [1    /1   ]  49.777725892         1
[INPUT] 0    0    [1    /1   ]  8.59115680758        1
[INPUT] 0    0    [1    /1   ]  1.92229810006        1
[INPUT] 0    0    [1    /1   ]  0.10418346911        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7243282150808, 1.0]], [0, [49.777725892030645, 1.0]], [0, [8.591156807577148, 1.0]], [0, [1.9222981000556143, 1.0]], [0, [0.10418346911042697, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72432822]
bas 1, expnt(s) = [49.77772589]
bas 2, expnt(s) = [8.59115681]
bas 3, expnt(s) = [1.9222981]
bas 4, expnt(s) = [0.10418347]
CPU time:        62.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724328e+02 3.28879572e+02 4.97777259e+01 4.73468743e+01
 8.59115681e+00 1.26780879e+01 1.92229810e+00 4.12458803e+00
 1.04183469e-01 4.63301957e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985667363492589
cond(S) = 11.775937839417649
E1 = -19.006652540119457  E_coul = 4.513173576786361
init E= -14.4934789633331
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302555265786155  LUMO = 7.05577298936708
  mo_energy =
[-4.70010172e+00 -3.02555266e-01  7.05577299e+00  7.00001150e+01
  9.83903554e+02]
E1 = -19.026188868632534  E_coul = 4.507465123042304
cycle= 1 E= -14.5187237455902  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221193
diis-c [-4.89262226e-04  1.00000000e+00]
  HOMO = -0.300429295247015  LUMO = 7.0577770354477
  mo_energy =
[-4.70520604e+00 -3.00429295e-01  7.05777704e+00  6.99908479e+01
  9.83879734e+02]
E1 = -19.025092032751537  E_coul = 4.506355584960325
cycle= 2 E= -14.5187364477912  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871325
diis-c [-5.08985006e-07 -2.31503207e-02  1.02315032e+00]
  HOMO = -0.300471894021549  LUMO = 7.05754395587288
  mo_energy =
[-4.70573141e+00 -3.00471894e-01  7.05754396e+00  6.99902844e+01
  9.83878920e+02]
E1 = -19.025052730855908  E_coul = 4.5063162447043
cycle= 3 E= -14.5187364861516  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65134e-05
diis-c [-4.63219659e-11  5.05972354e-04 -4.96667657e-02  1.04916079e+00]
  HOMO = -0.300473089766344  LUMO = 7.05754477271837
  mo_energy =
[-4.70573772e+00 -3.00473090e-01  7.05754477e+00  6.99903031e+01
  9.83878958e+02]
E1 = -19.025052157439912  E_coul = 4.506315671237673
cycle= 4 E= -14.5187364862022  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025052157439912  E_coul = 4.506315671237673
  HOMO = -0.300473075360975  LUMO = 7.05754503011858
  mo_energy =
[-4.70573733e+00 -3.00473075e-01  7.05754503e+00  6.99903041e+01
  9.83878960e+02]
E1 = -19.025052186155293  E_coul = 4.506315699953055
Extra cycle  E= -14.5187364862022  delta_E= 3.55e-15  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724328e+02 4.97777259e+01 8.59115681e+00 1.92229810e+00
 1.04183469e-01]
E = -14.518736486202236
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724328215        1
[INPUT] 0    0    [1    /1   ]  49.777725892         1
[INPUT] 0    0    [1    /1   ]  8.59115680758        1
[INPUT] 0    0    [1    /1   ]  1.92229810006        1
[INPUT] 0    0    [1    /1   ]  0.10418346911        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7243282150808, 1.0]], [0, [49.777725892030645, 1.0]], [0, [8.591156807577148, 1.0]], [0, [1.9222981000556143, 1.0]], [0, [0.10418346911042697, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72432822]
bas 1, expnt(s) = [49.77772589]
bas 2, expnt(s) = [8.59115681]
bas 3, expnt(s) = [1.9222981]
bas 4, expnt(s) = [0.10418347]
CPU time:        63.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724328e+02 3.28879572e+02 4.97777259e+01 4.73468743e+01
 8.59115681e+00 1.26780879e+01 1.92229810e+00 4.12458803e+00
 1.04183469e-01 4.63301957e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985667363492589
cond(S) = 11.775937839417649
E1 = -19.006652540119457  E_coul = 4.513173576786361
init E= -14.4934789633331
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302555265786155  LUMO = 7.05577298936708
  mo_energy =
[-4.70010172e+00 -3.02555266e-01  7.05577299e+00  7.00001150e+01
  9.83903554e+02]
E1 = -19.026188868632534  E_coul = 4.507465123042304
cycle= 1 E= -14.5187237455902  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221193
diis-c [-4.89262226e-04  1.00000000e+00]
  HOMO = -0.300429295247015  LUMO = 7.0577770354477
  mo_energy =
[-4.70520604e+00 -3.00429295e-01  7.05777704e+00  6.99908479e+01
  9.83879734e+02]
E1 = -19.025092032751537  E_coul = 4.506355584960325
cycle= 2 E= -14.5187364477912  delta_E= -1.27e-05  |g|= 0.000781  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871325
diis-c [-5.08985006e-07 -2.31503207e-02  1.02315032e+00]
  HOMO = -0.300471894021549  LUMO = 7.05754395587288
  mo_energy =
[-4.70573141e+00 -3.00471894e-01  7.05754396e+00  6.99902844e+01
  9.83878920e+02]
E1 = -19.025052730855908  E_coul = 4.5063162447043
cycle= 3 E= -14.5187364861516  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65134e-05
diis-c [-4.63219659e-11  5.05972354e-04 -4.96667657e-02  1.04916079e+00]
  HOMO = -0.300473089766344  LUMO = 7.05754477271837
  mo_energy =
[-4.70573772e+00 -3.00473090e-01  7.05754477e+00  6.99903031e+01
  9.83878958e+02]
E1 = -19.025052157439912  E_coul = 4.506315671237673
cycle= 4 E= -14.5187364862022  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025052157439912  E_coul = 4.506315671237673
  HOMO = -0.300473075360975  LUMO = 7.05754503011858
  mo_energy =
[-4.70573733e+00 -3.00473075e-01  7.05754503e+00  6.99903041e+01
  9.83878960e+02]
E1 = -19.025052186155293  E_coul = 4.506315699953055
Extra cycle  E= -14.5187364862022  delta_E= 3.55e-15  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.775937839417649
E1 = -19.025052186155293  E_coul = 4.506315699953055
init E= -14.5187364862022
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300473074776912  LUMO = 7.05754503906227
  mo_energy =
[-4.70573732e+00 -3.00473075e-01  7.05754504e+00  6.99903042e+01
  9.83878960e+02]
E1 = -19.025052187223277  E_coul = 4.5063157010210535
cycle= 1 E= -14.5187364862022  delta_E= 1.24e-14  |g|= 3.76e-10  |ddm|= 2.72e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025052187223277  E_coul = 4.5063157010210535
  HOMO = -0.300473074752027  LUMO = 7.05754503937728
  mo_energy =
[-4.70573732e+00 -3.00473075e-01  7.05754504e+00  6.99903042e+01
  9.83878960e+02]
E1 = -19.02505218726393  E_coul = 4.506315701061706
Extra cycle  E= -14.5187364862022  delta_E= -1.78e-15  |g|= 1.79e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724328e+02 4.97777259e+01 8.59115681e+00 1.92229810e+00
 1.04183469e-01]
grad_E = [ 4.06355481e-05 -6.67587862e-07  2.15991752e-06 -2.71407572e-06
 -8.41341557e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724205197        1
[INPUT] 0    0    [1    /1   ]  49.7781943946        1
[INPUT] 0    0    [1    /1   ]  8.59152453556        1
[INPUT] 0    0    [1    /1   ]  1.9223633917         1
[INPUT] 0    0    [1    /1   ]  0.104183166545       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7242051973774, 1.0]], [0, [49.7781943946261, 1.0]], [0, [8.591524535556056, 1.0]], [0, [1.9223633917010976, 1.0]], [0, [0.1041831665448921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.7242052]
bas 1, expnt(s) = [49.77819439]
bas 2, expnt(s) = [8.59152454]
bas 3, expnt(s) = [1.92236339]
bas 4, expnt(s) = [0.10418317]
CPU time:        65.51
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724205e+02 3.28879526e+02 4.97781944e+01 4.73472085e+01
 8.59152454e+00 1.26784949e+01 1.92236339e+00 4.12469310e+00
 1.04183167e-01 4.63300948e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856670817047313
cond(S) = 11.77610711214754
E1 = -19.006649126973237  E_coul = 4.513172172508212
init E= -14.493476954465
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302555721115835  LUMO = 7.05617552170346
  mo_energy =
[-4.70010198e+00 -3.02555721e-01  7.05617552e+00  7.00019795e+01
  9.83906099e+02]
E1 = -19.0261928059186  E_coul = 4.507469054884929
cycle= 1 E= -14.5187237510337  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221198
diis-c [-4.89285812e-04  1.00000000e+00]
  HOMO = -0.300429471550461  LUMO = 7.05818138258764
  mo_energy =
[-4.70520390e+00 -3.00429472e-01  7.05818138e+00  6.99927186e+01
  9.83882291e+02]
E1 = -19.025096109878074  E_coul = 4.506359658114491
cycle= 2 E= -14.5187364517636  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871278
diis-c [-5.08939496e-07 -2.31480360e-02  1.02314804e+00]
  HOMO = -0.300472065129135  LUMO = 7.05794833606286
  mo_energy =
[-4.70572920e+00 -3.00472065e-01  7.05794834e+00  6.99921552e+01
  9.83881476e+02]
E1 = -19.02505681560583  E_coul = 4.506320325489385
cycle= 3 E= -14.5187364901164  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65106e-05
diis-c [-4.63126927e-11  5.05836102e-04 -4.96645181e-02  1.04915868e+00]
  HOMO = -0.300473260726284  LUMO = 7.05794915327863
  mo_energy =
[-4.70573551e+00 -3.00473261e-01  7.05794915e+00  6.99921739e+01
  9.83881515e+02]
E1 = -19.02505624235791  E_coul = 4.506319752190847
cycle= 4 E= -14.5187364901671  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02505624235791  E_coul = 4.506319752190847
  HOMO = -0.300473246322229  LUMO = 7.05794941066571
  mo_energy =
[-4.70573512e+00 -3.00473246e-01  7.05794941e+00  6.99921749e+01
  9.83881516e+02]
E1 = -19.02505627106987  E_coul = 4.506319780902813
Extra cycle  E= -14.5187364901671  delta_E= 3.55e-15  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724205e+02 4.97781944e+01 8.59152454e+00 1.92236339e+00
 1.04183167e-01]
E = -14.518736490167058
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.724205197        1
[INPUT] 0    0    [1    /1   ]  49.7781943946        1
[INPUT] 0    0    [1    /1   ]  8.59152453556        1
[INPUT] 0    0    [1    /1   ]  1.9223633917         1
[INPUT] 0    0    [1    /1   ]  0.104183166545       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7242051973774, 1.0]], [0, [49.7781943946261, 1.0]], [0, [8.591524535556056, 1.0]], [0, [1.9223633917010976, 1.0]], [0, [0.1041831665448921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.7242052]
bas 1, expnt(s) = [49.77819439]
bas 2, expnt(s) = [8.59152454]
bas 3, expnt(s) = [1.92236339]
bas 4, expnt(s) = [0.10418317]
CPU time:        66.02
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59724205e+02 3.28879526e+02 4.97781944e+01 4.73472085e+01
 8.59152454e+00 1.26784949e+01 1.92236339e+00 4.12469310e+00
 1.04183167e-01 4.63300948e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856670817047313
cond(S) = 11.77610711214754
E1 = -19.006649126973237  E_coul = 4.513172172508212
init E= -14.493476954465
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302555721115835  LUMO = 7.05617552170346
  mo_energy =
[-4.70010198e+00 -3.02555721e-01  7.05617552e+00  7.00019795e+01
  9.83906099e+02]
E1 = -19.0261928059186  E_coul = 4.507469054884929
cycle= 1 E= -14.5187237510337  delta_E= -0.0252  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221198
diis-c [-4.89285812e-04  1.00000000e+00]
  HOMO = -0.300429471550461  LUMO = 7.05818138258764
  mo_energy =
[-4.70520390e+00 -3.00429472e-01  7.05818138e+00  6.99927186e+01
  9.83882291e+02]
E1 = -19.025096109878074  E_coul = 4.506359658114491
cycle= 2 E= -14.5187364517636  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871278
diis-c [-5.08939496e-07 -2.31480360e-02  1.02314804e+00]
  HOMO = -0.300472065129135  LUMO = 7.05794833606286
  mo_energy =
[-4.70572920e+00 -3.00472065e-01  7.05794834e+00  6.99921552e+01
  9.83881476e+02]
E1 = -19.02505681560583  E_coul = 4.506320325489385
cycle= 3 E= -14.5187364901164  delta_E= -3.84e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65106e-05
diis-c [-4.63126927e-11  5.05836102e-04 -4.96645181e-02  1.04915868e+00]
  HOMO = -0.300473260726284  LUMO = 7.05794915327863
  mo_energy =
[-4.70573551e+00 -3.00473261e-01  7.05794915e+00  6.99921739e+01
  9.83881515e+02]
E1 = -19.02505624235791  E_coul = 4.506319752190847
cycle= 4 E= -14.5187364901671  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.62e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02505624235791  E_coul = 4.506319752190847
  HOMO = -0.300473246322229  LUMO = 7.05794941066571
  mo_energy =
[-4.70573512e+00 -3.00473246e-01  7.05794941e+00  6.99921749e+01
  9.83881516e+02]
E1 = -19.02505627106987  E_coul = 4.506319780902813
Extra cycle  E= -14.5187364901671  delta_E= 3.55e-15  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.77610711214754
E1 = -19.02505627106987  E_coul = 4.506319780902813
init E= -14.5187364901671
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300473245738245  LUMO = 7.05794941960859
  mo_energy =
[-4.70573511e+00 -3.00473246e-01  7.05794942e+00  6.99921749e+01
  9.83881516e+02]
E1 = -19.025056272137697  E_coul = 4.506319781970643
cycle= 1 E= -14.5187364901671  delta_E= 3.55e-15  |g|= 3.76e-10  |ddm|= 2.72e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025056272137697  E_coul = 4.506319781970643
  HOMO = -0.300473245713364  LUMO = 7.05794941992354
  mo_energy =
[-4.70573511e+00 -3.00473246e-01  7.05794942e+00  6.99921749e+01
  9.83881516e+02]
E1 = -19.025056272178364  E_coul = 4.506319782011302
Extra cycle  E= -14.5187364901671  delta_E= -7.11e-15  |g|= 1.79e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59724205e+02 4.97781944e+01 8.59152454e+00 1.92236339e+00
 1.04183167e-01]
grad_E = [ 4.06365644e-05 -1.07625858e-06  5.86416281e-06  1.57456571e-06
 -2.11267314e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.723674634        1
[INPUT] 0    0    [1    /1   ]  49.779250229         1
[INPUT] 0    0    [1    /1   ]  8.5923441111         1
[INPUT] 0    0    [1    /1   ]  1.9225091838         1
[INPUT] 0    0    [1    /1   ]  0.104182497894       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7236746344091, 1.0]], [0, [49.77925022900434, 1.0]], [0, [8.592344111103419, 1.0]], [0, [1.922509183801062, 1.0]], [0, [0.1041824978940471, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72367463]
bas 1, expnt(s) = [49.77925023]
bas 2, expnt(s) = [8.59234411]
bas 3, expnt(s) = [1.92250918]
bas 4, expnt(s) = [0.1041825]
CPU time:        68.22
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59723675e+02 3.28879328e+02 4.97792502e+01 4.73479617e+01
 8.59234411e+00 1.26794020e+01 1.92250918e+00 4.12492771e+00
 1.04182498e-01 4.63298718e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985666452620496
cond(S) = 11.776484781298993
E1 = -19.006641598571203  E_coul = 4.513169086787325
init E= -14.4934725117839
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302556733321497  LUMO = 7.05707344608965
  mo_energy =
[-4.70010255e+00 -3.02556733e-01  7.05707345e+00  7.00061476e+01
  9.83911473e+02]
E1 = -19.026201709046582  E_coul = 4.507477940670882
cycle= 1 E= -14.5187237683757  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.022121
diis-c [-4.89338316e-04  1.00000000e+00]
  HOMO = -0.30042985960216  LUMO = 7.05908338229002
  mo_energy =
[-4.70519908e+00 -3.00429860e-01  7.05908338e+00  6.99969006e+01
  9.83887688e+02]
E1 = -19.025105327839235  E_coul = 4.506368862014994
cycle= 2 E= -14.5187364658242  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871174
diis-c [-5.08837109e-07 -2.31430271e-02  1.02314303e+00]
  HOMO = -0.30047244156377  LUMO = 7.0588504106183
  mo_energy =
[-4.70572422e+00 -3.00472442e-01  7.05885041e+00  6.99963375e+01
  9.83886874e+02]
E1 = -19.02506605069815  E_coul = 4.506329546537852
cycle= 3 E= -14.5187365041603  delta_E= -3.83e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65043e-05
diis-c [-4.62919940e-11  5.05537238e-04 -4.96594928e-02  1.04915396e+00]
  HOMO = -0.300473636827635  LUMO = 7.05885122870858
  mo_energy =
[-4.70573053e+00 -3.00473637e-01  7.05885123e+00  6.99963562e+01
  9.83886913e+02]
E1 = -19.025065477831358  E_coul = 4.50632897362046
cycle= 4 E= -14.5187365042109  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.61e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025065477831358  E_coul = 4.50632897362046
  HOMO = -0.300473622426601  LUMO = 7.05885148606481
  mo_energy =
[-4.70573014e+00 -3.00473622e-01  7.05885149e+00  6.99963572e+01
  9.83886914e+02]
E1 = -19.025065506535505  E_coul = 4.5063290023246205
Extra cycle  E= -14.5187365042109  delta_E= 1.42e-14  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59723675e+02 4.97792502e+01 8.59234411e+00 1.92250918e+00
 1.04182498e-01]
E = -14.518736504210885
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.723674634        1
[INPUT] 0    0    [1    /1   ]  49.779250229         1
[INPUT] 0    0    [1    /1   ]  8.5923441111         1
[INPUT] 0    0    [1    /1   ]  1.9225091838         1
[INPUT] 0    0    [1    /1   ]  0.104182497894       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7236746344091, 1.0]], [0, [49.77925022900434, 1.0]], [0, [8.592344111103419, 1.0]], [0, [1.922509183801062, 1.0]], [0, [0.1041824978940471, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72367463]
bas 1, expnt(s) = [49.77925023]
bas 2, expnt(s) = [8.59234411]
bas 3, expnt(s) = [1.92250918]
bas 4, expnt(s) = [0.1041825]
CPU time:        68.74
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59723675e+02 3.28879328e+02 4.97792502e+01 4.73479617e+01
 8.59234411e+00 1.26794020e+01 1.92250918e+00 4.12492771e+00
 1.04182498e-01 4.63298718e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985666452620496
cond(S) = 11.776484781298993
E1 = -19.006641598571203  E_coul = 4.513169086787325
init E= -14.4934725117839
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302556733321497  LUMO = 7.05707344608965
  mo_energy =
[-4.70010255e+00 -3.02556733e-01  7.05707345e+00  7.00061476e+01
  9.83911473e+02]
E1 = -19.026201709046582  E_coul = 4.507477940670882
cycle= 1 E= -14.5187237683757  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.022121
diis-c [-4.89338316e-04  1.00000000e+00]
  HOMO = -0.30042985960216  LUMO = 7.05908338229002
  mo_energy =
[-4.70519908e+00 -3.00429860e-01  7.05908338e+00  6.99969006e+01
  9.83887688e+02]
E1 = -19.025105327839235  E_coul = 4.506368862014994
cycle= 2 E= -14.5187364658242  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871174
diis-c [-5.08837109e-07 -2.31430271e-02  1.02314303e+00]
  HOMO = -0.30047244156377  LUMO = 7.0588504106183
  mo_energy =
[-4.70572422e+00 -3.00472442e-01  7.05885041e+00  6.99963375e+01
  9.83886874e+02]
E1 = -19.02506605069815  E_coul = 4.506329546537852
cycle= 3 E= -14.5187365041603  delta_E= -3.83e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65043e-05
diis-c [-4.62919940e-11  5.05537238e-04 -4.96594928e-02  1.04915396e+00]
  HOMO = -0.300473636827635  LUMO = 7.05885122870858
  mo_energy =
[-4.70573053e+00 -3.00473637e-01  7.05885123e+00  6.99963562e+01
  9.83886913e+02]
E1 = -19.025065477831358  E_coul = 4.50632897362046
cycle= 4 E= -14.5187365042109  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.61e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025065477831358  E_coul = 4.50632897362046
  HOMO = -0.300473622426601  LUMO = 7.05885148606481
  mo_energy =
[-4.70573014e+00 -3.00473622e-01  7.05885149e+00  6.99963572e+01
  9.83886914e+02]
E1 = -19.025065506535505  E_coul = 4.5063290023246205
Extra cycle  E= -14.5187365042109  delta_E= 1.42e-14  |g|= 8.4e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.776484781298993
E1 = -19.025065506535505  E_coul = 4.5063290023246205
init E= -14.5187365042109
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300473621842796  LUMO = 7.05885149500593
  mo_energy =
[-4.70573013e+00 -3.00473622e-01  7.05885150e+00  6.99963572e+01
  9.83886914e+02]
E1 = -19.025065507602967  E_coul = 4.506329003392072
cycle= 1 E= -14.5187365042109  delta_E= -1.07e-14  |g|= 3.76e-10  |ddm|= 2.72e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025065507602967  E_coul = 4.506329003392072
  HOMO = -0.300473621817922  LUMO = 7.05885149532083
  mo_energy =
[-4.70573013e+00 -3.00473622e-01  7.05885150e+00  6.99963572e+01
  9.83886914e+02]
E1 = -19.02506550764359  E_coul = 4.506329003432692
Extra cycle  E= -14.5187365042109  delta_E=    0  |g|= 1.79e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59723675e+02 4.97792502e+01 8.59234411e+00 1.92250918e+00
 1.04182498e-01]
grad_E = [ 4.06387850e-05 -1.98140004e-06  1.40571525e-05  1.13749982e-05
 -4.92139615e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.722276647        1
[INPUT] 0    0    [1    /1   ]  49.7807688752        1
[INPUT] 0    0    [1    /1   ]  8.59353076659        1
[INPUT] 0    0    [1    /1   ]  1.92272035137        1
[INPUT] 0    0    [1    /1   ]  0.104181530241       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7222766469664, 1.0]], [0, [49.78076887521673, 1.0]], [0, [8.593530766592796, 1.0]], [0, [1.9227203513723972, 1.0]], [0, [0.10418153024089918, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72227665]
bas 1, expnt(s) = [49.78076888]
bas 2, expnt(s) = [8.59353077]
bas 3, expnt(s) = [1.92272035]
bas 4, expnt(s) = [0.10418153]
CPU time:        70.95
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722277e+02 3.28878805e+02 4.97807689e+01 4.73490450e+01
 8.59353077e+00 1.26807153e+01 1.92272035e+00 4.12526751e+00
 1.04181530e-01 4.63295491e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985665540826112
cond(S) = 11.77703509854447
E1 = -19.006630719824788  E_coul = 4.513164625460386
init E= -14.4934660943644
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302558199223494  LUMO = 7.0583738332213
  mo_energy =
[-4.70010337e+00 -3.02558199e-01  7.05837383e+00  7.00121728e+01
  9.83918393e+02]
E1 = -19.0262146372999  E_coul = 4.507490831021153
cycle= 1 E= -14.5187238062787  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221227
diis-c [-4.89414031e-04  1.00000000e+00]
  HOMO = -0.300430421086395  LUMO = 7.0603896781706
  mo_energy =
[-4.70519209e+00 -3.00430421e-01  7.06038968e+00  7.00029461e+01
  9.83894643e+02]
E1 = -19.02511871228672  E_coul = 4.506382213309783
cycle= 2 E= -14.5187364989769  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871023
diis-c [-5.08688751e-07 -2.31357997e-02  1.02313580e+00]
  HOMO = -0.300472986228126  LUMO = 7.06015681502858
  mo_energy =
[-4.70571701e+00 -3.00472986e-01  7.06015682e+00  7.00023833e+01
  9.83893829e+02]
E1 = -19.025079459956956  E_coul = 4.506342922668257
cycle= 3 E= -14.5187365372887  delta_E= -3.83e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64952e-05
diis-c [-4.62619650e-11  5.05105308e-04 -4.96522016e-02  1.04914710e+00]
  HOMO = -0.300474181008489  LUMO = 7.06015763439353
  mo_energy =
[-4.70572331e+00 -3.00474181e-01  7.06015763e+00  7.00024020e+01
  9.83893868e+02]
E1 = -19.025078887642977  E_coul = 4.506342350303714
cycle= 4 E= -14.5187365373393  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.61e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025078887642977  E_coul = 4.506342350303714
  HOMO = -0.300474166611846  LUMO = 7.06015789170485
  mo_energy =
[-4.70572293e+00 -3.00474167e-01  7.06015789e+00  7.00024030e+01
  9.83893869e+02]
E1 = -19.025078916335833  E_coul = 4.506342378996566
Extra cycle  E= -14.5187365373393  delta_E= -5.33e-15  |g|= 8.39e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59722277e+02 4.97807689e+01 8.59353077e+00 1.92272035e+00
 1.04181530e-01]
E = -14.518736537339267
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.722276647        1
[INPUT] 0    0    [1    /1   ]  49.7807688752        1
[INPUT] 0    0    [1    /1   ]  8.59353076659        1
[INPUT] 0    0    [1    /1   ]  1.92272035137        1
[INPUT] 0    0    [1    /1   ]  0.104181530241       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7222766469664, 1.0]], [0, [49.78076887521673, 1.0]], [0, [8.593530766592796, 1.0]], [0, [1.9227203513723972, 1.0]], [0, [0.10418153024089918, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.72227665]
bas 1, expnt(s) = [49.78076888]
bas 2, expnt(s) = [8.59353077]
bas 3, expnt(s) = [1.92272035]
bas 4, expnt(s) = [0.10418153]
CPU time:        71.50
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59722277e+02 3.28878805e+02 4.97807689e+01 4.73490450e+01
 8.59353077e+00 1.26807153e+01 1.92272035e+00 4.12526751e+00
 1.04181530e-01 4.63295491e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985665540826112
cond(S) = 11.77703509854447
E1 = -19.006630719824788  E_coul = 4.513164625460386
init E= -14.4934660943644
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302558199223494  LUMO = 7.0583738332213
  mo_energy =
[-4.70010337e+00 -3.02558199e-01  7.05837383e+00  7.00121728e+01
  9.83918393e+02]
E1 = -19.0262146372999  E_coul = 4.507490831021153
cycle= 1 E= -14.5187238062787  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221227
diis-c [-4.89414031e-04  1.00000000e+00]
  HOMO = -0.300430421086395  LUMO = 7.0603896781706
  mo_energy =
[-4.70519209e+00 -3.00430421e-01  7.06038968e+00  7.00029461e+01
  9.83894643e+02]
E1 = -19.02511871228672  E_coul = 4.506382213309783
cycle= 2 E= -14.5187364989769  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871023
diis-c [-5.08688751e-07 -2.31357997e-02  1.02313580e+00]
  HOMO = -0.300472986228126  LUMO = 7.06015681502858
  mo_energy =
[-4.70571701e+00 -3.00472986e-01  7.06015682e+00  7.00023833e+01
  9.83893829e+02]
E1 = -19.025079459956956  E_coul = 4.506342922668257
cycle= 3 E= -14.5187365372887  delta_E= -3.83e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64952e-05
diis-c [-4.62619650e-11  5.05105308e-04 -4.96522016e-02  1.04914710e+00]
  HOMO = -0.300474181008489  LUMO = 7.06015763439353
  mo_energy =
[-4.70572331e+00 -3.00474181e-01  7.06015763e+00  7.00024020e+01
  9.83893868e+02]
E1 = -19.025078887642977  E_coul = 4.506342350303714
cycle= 4 E= -14.5187365373393  delta_E= -5.06e-11  |g|= 1.94e-07  |ddm|= 8.61e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025078887642977  E_coul = 4.506342350303714
  HOMO = -0.300474166611846  LUMO = 7.06015789170485
  mo_energy =
[-4.70572293e+00 -3.00474167e-01  7.06015789e+00  7.00024030e+01
  9.83893869e+02]
E1 = -19.025078916335833  E_coul = 4.506342378996566
Extra cycle  E= -14.5187365373393  delta_E= -5.33e-15  |g|= 8.39e-09  |ddm|= 6.32e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.77703509854447
E1 = -19.025078916335833  E_coul = 4.506342378996566
init E= -14.5187365373393
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300474166028298  LUMO = 7.06015790064339
  mo_energy =
[-4.70572291e+00 -3.00474166e-01  7.06015790e+00  7.00024030e+01
  9.83893869e+02]
E1 = -19.0250789174027  E_coul = 4.5063423800634395
cycle= 1 E= -14.5187365373393  delta_E= 8.88e-15  |g|= 3.76e-10  |ddm|= 2.72e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.0250789174027  E_coul = 4.5063423800634395
  HOMO = -0.300474166003443  LUMO = 7.06015790095813
  mo_energy =
[-4.70572291e+00 -3.00474166e-01  7.06015790e+00  7.00024030e+01
  9.83893869e+02]
E1 = -19.025078917443295  E_coul = 4.506342380104035
Extra cycle  E= -14.5187365373393  delta_E= -1.78e-15  |g|= 1.79e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59722277e+02 4.97807689e+01 8.59353077e+00 1.92272035e+00
 1.04181530e-01]
grad_E = [ 4.06420250e-05 -3.29185237e-06  2.59180333e-05  2.56024302e-05
 -8.98726987e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.718221137        1
[INPUT] 0    0    [1    /1   ]  49.7832981605        1
[INPUT] 0    0    [1    /1   ]  8.59553361168        1
[INPUT] 0    0    [1    /1   ]  1.92307689965        1
[INPUT] 0    0    [1    /1   ]  0.104179896418       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7182211369723, 1.0]], [0, [49.78329816048046, 1.0]], [0, [8.595533611683402, 1.0]], [0, [1.9230768996509393, 1.0]], [0, [0.10417989641846342, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.71822114]
bas 1, expnt(s) = [49.78329816]
bas 2, expnt(s) = [8.59553361]
bas 3, expnt(s) = [1.9230769]
bas 4, expnt(s) = [0.1041799]
CPU time:        73.76
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59718221e+02 3.28877289e+02 4.97832982e+01 4.73508493e+01
 8.59553361e+00 1.26829318e+01 1.92307690e+00 4.12584124e+00
 1.04179896e-01 4.63290042e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985663999524529
cond(S) = 11.777973982726252
E1 = -19.006612391932492  E_coul = 4.513157099156245
init E= -14.4934552927762
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.3025606752966  LUMO = 7.06056924236373
  mo_energy =
[-4.70010477e+00 -3.02560675e-01  7.06056924e+00  7.00223089e+01
  9.83927735e+02]
E1 = -19.02623652238227  E_coul = 4.507512617682014
cycle= 1 E= -14.5187239047003  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221256
diis-c [-4.89541057e-04  1.00000000e+00]
  HOMO = -0.300431369376963  LUMO = 7.06259507338031
  mo_energy =
[-4.70518029e+00 -3.00431369e-01  7.06259507e+00  7.00131165e+01
  9.83904043e+02]
E1 = -19.025141367296303  E_coul = 4.506404777912751
cycle= 2 E= -14.5187365893836  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000870769
diis-c [-5.08438381e-07 -2.31236407e-02  1.02312364e+00]
  HOMO = -0.300473906142414  LUMO = 7.06236239345056
  mo_energy =
[-4.70570483e+00 -3.00473906e-01  7.06236239e+00  7.00125543e+01
  9.83903231e+02]
E1 = -19.02510215681793  E_coul = 4.5063655291636
cycle= 3 E= -14.5187366276543  delta_E= -3.83e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64798e-05
diis-c [-4.62111274e-11  5.04376882e-04 -4.96398605e-02  1.04913548e+00]
  HOMO = -0.300475100105586  LUMO = 7.06236321497339
  mo_energy =
[-4.70571113e+00 -3.00475100e-01  7.06236321e+00  7.00125730e+01
  9.83903269e+02]
E1 = -19.02510158543759  E_coul = 4.506364957732765
cycle= 4 E= -14.5187366277048  delta_E= -5.05e-11  |g|= 1.94e-07  |ddm|= 8.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02510158543759  E_coul = 4.506364957732765
  HOMO = -0.300475085716362  LUMO = 7.06236347220873
  mo_energy =
[-4.70571075e+00 -3.00475086e-01  7.06236347e+00  7.00125740e+01
  9.83903271e+02]
E1 = -19.025101614111346  E_coul = 4.506364986406517
Extra cycle  E= -14.5187366277048  delta_E= -3.55e-15  |g|= 8.39e-09  |ddm|= 6.31e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59718221e+02 4.97832982e+01 8.59553361e+00 1.92307690e+00
 1.04179896e-01]
E = -14.518736627704829
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.718221137        1
[INPUT] 0    0    [1    /1   ]  49.7832981605        1
[INPUT] 0    0    [1    /1   ]  8.59553361168        1
[INPUT] 0    0    [1    /1   ]  1.92307689965        1
[INPUT] 0    0    [1    /1   ]  0.104179896418       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7182211369723, 1.0]], [0, [49.78329816048046, 1.0]], [0, [8.595533611683402, 1.0]], [0, [1.9230768996509393, 1.0]], [0, [0.10417989641846342, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.71822114]
bas 1, expnt(s) = [49.78329816]
bas 2, expnt(s) = [8.59553361]
bas 3, expnt(s) = [1.9230769]
bas 4, expnt(s) = [0.1041799]
CPU time:        74.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59718221e+02 3.28877289e+02 4.97832982e+01 4.73508493e+01
 8.59553361e+00 1.26829318e+01 1.92307690e+00 4.12584124e+00
 1.04179896e-01 4.63290042e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985663999524529
cond(S) = 11.777973982726252
E1 = -19.006612391932492  E_coul = 4.513157099156245
init E= -14.4934552927762
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.3025606752966  LUMO = 7.06056924236373
  mo_energy =
[-4.70010477e+00 -3.02560675e-01  7.06056924e+00  7.00223089e+01
  9.83927735e+02]
E1 = -19.02623652238227  E_coul = 4.507512617682014
cycle= 1 E= -14.5187239047003  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221256
diis-c [-4.89541057e-04  1.00000000e+00]
  HOMO = -0.300431369376963  LUMO = 7.06259507338031
  mo_energy =
[-4.70518029e+00 -3.00431369e-01  7.06259507e+00  7.00131165e+01
  9.83904043e+02]
E1 = -19.025141367296303  E_coul = 4.506404777912751
cycle= 2 E= -14.5187365893836  delta_E= -1.27e-05  |g|= 0.00078  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000870769
diis-c [-5.08438381e-07 -2.31236407e-02  1.02312364e+00]
  HOMO = -0.300473906142414  LUMO = 7.06236239345056
  mo_energy =
[-4.70570483e+00 -3.00473906e-01  7.06236239e+00  7.00125543e+01
  9.83903231e+02]
E1 = -19.02510215681793  E_coul = 4.5063655291636
cycle= 3 E= -14.5187366276543  delta_E= -3.83e-08  |g|= 2.91e-05  |ddm|= 0.000248
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64798e-05
diis-c [-4.62111274e-11  5.04376882e-04 -4.96398605e-02  1.04913548e+00]
  HOMO = -0.300475100105586  LUMO = 7.06236321497339
  mo_energy =
[-4.70571113e+00 -3.00475100e-01  7.06236321e+00  7.00125730e+01
  9.83903269e+02]
E1 = -19.02510158543759  E_coul = 4.506364957732765
cycle= 4 E= -14.5187366277048  delta_E= -5.05e-11  |g|= 1.94e-07  |ddm|= 8.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02510158543759  E_coul = 4.506364957732765
  HOMO = -0.300475085716362  LUMO = 7.06236347220873
  mo_energy =
[-4.70571075e+00 -3.00475086e-01  7.06236347e+00  7.00125740e+01
  9.83903271e+02]
E1 = -19.025101614111346  E_coul = 4.506364986406517
Extra cycle  E= -14.5187366277048  delta_E= -3.55e-15  |g|= 8.39e-09  |ddm|= 6.31e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.777973982726252
E1 = -19.025101614111346  E_coul = 4.506364986406517
init E= -14.5187366277048
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300475085133254  LUMO = 7.06236348114287
  mo_energy =
[-4.70571074e+00 -3.00475085e-01  7.06236348e+00  7.00125740e+01
  9.83903271e+02]
E1 = -19.025101615177288  E_coul = 4.5063649874724545
cycle= 1 E= -14.5187366277048  delta_E= -3.55e-15  |g|= 3.75e-10  |ddm|= 2.72e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025101615177288  E_coul = 4.5063649874724545
  HOMO = -0.30047508510842  LUMO = 7.06236348145744
  mo_energy =
[-4.70571074e+00 -3.00475085e-01  7.06236348e+00  7.00125740e+01
  9.83903271e+02]
E1 = -19.02510161521782  E_coul = 4.506364987512987
Extra cycle  E= -14.5187366277048  delta_E=    0  |g|= 1.78e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59718221e+02 4.97832982e+01 8.59553361e+00 1.92307690e+00
 1.04179896e-01]
grad_E = [ 4.06475835e-05 -5.50566461e-06  4.59550234e-05  4.96431878e-05
 -1.58558224e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.707380237        1
[INPUT] 0    0    [1    /1   ]  49.7872259327        1
[INPUT] 0    0    [1    /1   ]  8.59871417473        1
[INPUT] 0    0    [1    /1   ]  1.92364345413        1
[INPUT] 0    0    [1    /1   ]  0.104177300011       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7073802368058, 1.0]], [0, [49.7872259326626, 1.0]], [0, [8.598714174730084, 1.0]], [0, [1.9236434541268326, 1.0]], [0, [0.10417730001087688, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.70738024]
bas 1, expnt(s) = [49.78722593]
bas 2, expnt(s) = [8.59871417]
bas 3, expnt(s) = [1.92364345]
bas 4, expnt(s) = [0.1041773]
CPU time:        76.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59707380e+02 3.28873236e+02 4.97872259e+01 4.73536512e+01
 8.59871417e+00 1.26864514e+01 1.92364345e+00 4.12675284e+00
 1.04177300e-01 4.63281382e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856615457997226
cond(S) = 11.779491123538238
E1 = -19.0065833698779  E_coul = 4.513145154340945
init E= -14.493438215537
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302564612460402  LUMO = 7.06405714481696
  mo_energy =
[-4.70010703e+00 -3.02564612e-01  7.06405714e+00  7.00383183e+01
  9.83936501e+02]
E1 = -19.026271438608912  E_coul = 4.5075472882443
cycle= 1 E= -14.5187241503646  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221301
diis-c [-4.89740797e-04  1.00000000e+00]
  HOMO = -0.300432877113472  LUMO = 7.06609886690691
  mo_energy =
[-4.70516157e+00 -3.00432877e-01  7.06609887e+00  7.00291803e+01
  9.83912903e+02]
E1 = -19.025177505936885  E_coul = 4.5064406836096165
cycle= 2 E= -14.5187368223273  delta_E= -1.27e-05  |g|= 0.000779  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000870367
diis-c [-5.08040902e-07 -2.31044301e-02  1.02310443e+00]
  HOMO = -0.300475368850487  LUMO = 7.06586647795859
  mo_energy =
[-4.70568551e+00 -3.00475369e-01  7.06586648e+00  7.00286191e+01
  9.83912092e+02]
E1 = -19.025138361847564  E_coul = 4.506401501314516
cycle= 3 E= -14.518736860533  delta_E= -3.82e-08  |g|= 2.91e-05  |ddm|= 0.000247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64553e-05
diis-c [-4.61299890e-11  5.03221395e-04 -4.96201719e-02  1.04911695e+00]
  HOMO = -0.300476561513208  LUMO = 7.06586730292289
  mo_energy =
[-4.70569180e+00 -3.00476562e-01  7.06586730e+00  7.00286378e+01
  9.83912131e+02]
E1 = -19.025137791951117  E_coul = 4.506400931367656
cycle= 4 E= -14.5187368605835  delta_E= -5.04e-11  |g|= 1.93e-07  |ddm|= 8.59e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025137791951117  E_coul = 4.506400931367656
  HOMO = -0.300476547135781  LUMO = 7.06586756003732
  mo_energy =
[-4.70569142e+00 -3.00476547e-01  7.06586756e+00  7.00286388e+01
  9.83912132e+02]
E1 = -19.02513782059454  E_coul = 4.506400960011066
Extra cycle  E= -14.5187368605835  delta_E= -1.24e-14  |g|= 8.38e-09  |ddm|= 6.31e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59707380e+02 4.97872259e+01 8.59871417e+00 1.92364345e+00
 1.04177300e-01]
E = -14.518736860583473
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.707380237        1
[INPUT] 0    0    [1    /1   ]  49.7872259327        1
[INPUT] 0    0    [1    /1   ]  8.59871417473        1
[INPUT] 0    0    [1    /1   ]  1.92364345413        1
[INPUT] 0    0    [1    /1   ]  0.104177300011       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.7073802368058, 1.0]], [0, [49.7872259326626, 1.0]], [0, [8.598714174730084, 1.0]], [0, [1.9236434541268326, 1.0]], [0, [0.10417730001087688, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.70738024]
bas 1, expnt(s) = [49.78722593]
bas 2, expnt(s) = [8.59871417]
bas 3, expnt(s) = [1.92364345]
bas 4, expnt(s) = [0.1041773]
CPU time:        77.14
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59707380e+02 3.28873236e+02 4.97872259e+01 4.73536512e+01
 8.59871417e+00 1.26864514e+01 1.92364345e+00 4.12675284e+00
 1.04177300e-01 4.63281382e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856615457997226
cond(S) = 11.779491123538238
E1 = -19.0065833698779  E_coul = 4.513145154340945
init E= -14.493438215537
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302564612460402  LUMO = 7.06405714481696
  mo_energy =
[-4.70010703e+00 -3.02564612e-01  7.06405714e+00  7.00383183e+01
  9.83936501e+02]
E1 = -19.026271438608912  E_coul = 4.5075472882443
cycle= 1 E= -14.5187241503646  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221301
diis-c [-4.89740797e-04  1.00000000e+00]
  HOMO = -0.300432877113472  LUMO = 7.06609886690691
  mo_energy =
[-4.70516157e+00 -3.00432877e-01  7.06609887e+00  7.00291803e+01
  9.83912903e+02]
E1 = -19.025177505936885  E_coul = 4.5064406836096165
cycle= 2 E= -14.5187368223273  delta_E= -1.27e-05  |g|= 0.000779  |ddm|= 0.00469
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000870367
diis-c [-5.08040902e-07 -2.31044301e-02  1.02310443e+00]
  HOMO = -0.300475368850487  LUMO = 7.06586647795859
  mo_energy =
[-4.70568551e+00 -3.00475369e-01  7.06586648e+00  7.00286191e+01
  9.83912092e+02]
E1 = -19.025138361847564  E_coul = 4.506401501314516
cycle= 3 E= -14.518736860533  delta_E= -3.82e-08  |g|= 2.91e-05  |ddm|= 0.000247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64553e-05
diis-c [-4.61299890e-11  5.03221395e-04 -4.96201719e-02  1.04911695e+00]
  HOMO = -0.300476561513208  LUMO = 7.06586730292289
  mo_energy =
[-4.70569180e+00 -3.00476562e-01  7.06586730e+00  7.00286378e+01
  9.83912131e+02]
E1 = -19.025137791951117  E_coul = 4.506400931367656
cycle= 4 E= -14.5187368605835  delta_E= -5.04e-11  |g|= 1.93e-07  |ddm|= 8.59e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025137791951117  E_coul = 4.506400931367656
  HOMO = -0.300476547135781  LUMO = 7.06586756003732
  mo_energy =
[-4.70569142e+00 -3.00476547e-01  7.06586756e+00  7.00286388e+01
  9.83912132e+02]
E1 = -19.02513782059454  E_coul = 4.506400960011066
Extra cycle  E= -14.5187368605835  delta_E= -1.24e-14  |g|= 8.38e-09  |ddm|= 6.31e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.779491123538238
E1 = -19.02513782059454  E_coul = 4.506400960011066
init E= -14.5187368605835
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300476546553368  LUMO = 7.06586756896454
  mo_energy =
[-4.70569140e+00 -3.00476547e-01  7.06586757e+00  7.00286388e+01
  9.83912132e+02]
E1 = -19.025137821658948  E_coul = 4.506400961075487
cycle= 1 E= -14.5187368605835  delta_E= 1.24e-14  |g|= 3.75e-10  |ddm|= 2.71e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025137821658948  E_coul = 4.506400961075487
  HOMO = -0.300476546528575  LUMO = 7.06586756927864
  mo_energy =
[-4.70569140e+00 -3.00476547e-01  7.06586757e+00  7.00286388e+01
  9.83912132e+02]
E1 = -19.02513782169945  E_coul = 4.506400961115976
Extra cycle  E= -14.5187368605835  delta_E= -1.24e-14  |g|= 1.78e-11  |ddm|= 1.24e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59707380e+02 4.97872259e+01 8.59871417e+00 1.92364345e+00
 1.04177300e-01]
grad_E = [ 4.06566471e-05 -9.02680283e-06  7.78244105e-05  8.78807938e-05
 -2.67803780e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.678205187        1
[INPUT] 0    0    [1    /1   ]  49.7933641441        1
[INPUT] 0    0    [1    /1   ]  8.60387391361        1
[INPUT] 0    0    [1    /1   ]  1.92456347413        1
[INPUT] 0    0    [1    /1   ]  0.104173082998       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.6782051865537, 1.0]], [0, [49.793364144125135, 1.0]], [0, [8.603873913607199, 1.0]], [0, [1.9245634741258806, 1.0]], [0, [0.10417308299784894, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.67820519]
bas 1, expnt(s) = [49.79336414]
bas 2, expnt(s) = [8.60387391]
bas 3, expnt(s) = [1.92456347]
bas 4, expnt(s) = [0.10417308]
CPU time:        79.38
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59678205e+02 3.28862327e+02 4.97933641e+01 4.73580298e+01
 8.60387391e+00 1.26921604e+01 1.92456347e+00 4.12823302e+00
 1.04173083e-01 4.63267317e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856575491812567
cond(S) = 11.782021299959359
E1 = -19.006536506959264  E_coul = 4.513125794863946
init E= -14.4934107120953
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302571013053024  LUMO = 7.0697195207603
  mo_energy =
[-4.70011078e+00 -3.02571013e-01  7.06971952e+00  7.00640606e+01
  9.83934742e+02]
E1 = -19.026328507885335  E_coul = 4.507603723721276
cycle= 1 E= -14.5187247841641  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221373
diis-c [-4.90059603e-04  1.00000000e+00]
  HOMO = -0.300435327927575  LUMO = 7.0717871088249
  mo_energy =
[-4.70513121e+00 -3.00435328e-01  7.07178711e+00  7.00550113e+01
  9.83911297e+02]
E1 = -19.025236557645187  E_coul = 4.506499122135961
cycle= 2 E= -14.5187374355092  delta_E= -1.27e-05  |g|= 0.000779  |ddm|= 0.00468
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000869715
diis-c [-5.07396389e-07 -2.30735226e-02  1.02307352e+00]
  HOMO = -0.300477746704214  LUMO = 7.07155519201722
  mo_energy =
[-4.70565418e+00 -3.00477747e-01  7.07155519e+00  7.00544517e+01
  9.83910489e+02]
E1 = -19.02519752106901  E_coul = 4.506460047459188
cycle= 3 E= -14.5187374736098  delta_E= -3.81e-08  |g|= 2.9e-05  |ddm|= 0.000247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64154e-05
diis-c [-4.59973076e-11  5.01350116e-04 -4.95879929e-02  1.04908664e+00]
  HOMO = -0.300478937250078  LUMO = 7.07155602260249
  mo_energy =
[-4.70566046e+00 -3.00478937e-01  7.07155602e+00  7.00544704e+01
  9.83910527e+02]
E1 = -19.02519695358298  E_coul = 4.506459479922913
cycle= 4 E= -14.5187374736601  delta_E= -5.02e-11  |g|= 1.93e-07  |ddm|= 8.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02519695358298  E_coul = 4.506459479922913
  HOMO = -0.300478922891835  LUMO = 7.07155627952003
  mo_energy =
[-4.70566007e+00 -3.00478923e-01  7.07155628e+00  7.00544713e+01
  9.83910529e+02]
E1 = -19.02519698217718  E_coul = 4.506459508517115
Extra cycle  E= -14.5187374736601  delta_E=    0  |g|= 8.37e-09  |ddm|= 6.3e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59678205e+02 4.97933641e+01 8.60387391e+00 1.92456347e+00
 1.04173083e-01]
E = -14.518737473660067
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.678205187        1
[INPUT] 0    0    [1    /1   ]  49.7933641441        1
[INPUT] 0    0    [1    /1   ]  8.60387391361        1
[INPUT] 0    0    [1    /1   ]  1.92456347413        1
[INPUT] 0    0    [1    /1   ]  0.104173082998       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.6782051865537, 1.0]], [0, [49.793364144125135, 1.0]], [0, [8.603873913607199, 1.0]], [0, [1.9245634741258806, 1.0]], [0, [0.10417308299784894, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.67820519]
bas 1, expnt(s) = [49.79336414]
bas 2, expnt(s) = [8.60387391]
bas 3, expnt(s) = [1.92456347]
bas 4, expnt(s) = [0.10417308]
CPU time:        79.96
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59678205e+02 3.28862327e+02 4.97933641e+01 4.73580298e+01
 8.60387391e+00 1.26921604e+01 1.92456347e+00 4.12823302e+00
 1.04173083e-01 4.63267317e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856575491812567
cond(S) = 11.782021299959359
E1 = -19.006536506959264  E_coul = 4.513125794863946
init E= -14.4934107120953
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302571013053024  LUMO = 7.0697195207603
  mo_energy =
[-4.70011078e+00 -3.02571013e-01  7.06971952e+00  7.00640606e+01
  9.83934742e+02]
E1 = -19.026328507885335  E_coul = 4.507603723721276
cycle= 1 E= -14.5187247841641  delta_E= -0.0253  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221373
diis-c [-4.90059603e-04  1.00000000e+00]
  HOMO = -0.300435327927575  LUMO = 7.0717871088249
  mo_energy =
[-4.70513121e+00 -3.00435328e-01  7.07178711e+00  7.00550113e+01
  9.83911297e+02]
E1 = -19.025236557645187  E_coul = 4.506499122135961
cycle= 2 E= -14.5187374355092  delta_E= -1.27e-05  |g|= 0.000779  |ddm|= 0.00468
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000869715
diis-c [-5.07396389e-07 -2.30735226e-02  1.02307352e+00]
  HOMO = -0.300477746704214  LUMO = 7.07155519201722
  mo_energy =
[-4.70565418e+00 -3.00477747e-01  7.07155519e+00  7.00544517e+01
  9.83910489e+02]
E1 = -19.02519752106901  E_coul = 4.506460047459188
cycle= 3 E= -14.5187374736098  delta_E= -3.81e-08  |g|= 2.9e-05  |ddm|= 0.000247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64154e-05
diis-c [-4.59973076e-11  5.01350116e-04 -4.95879929e-02  1.04908664e+00]
  HOMO = -0.300478937250078  LUMO = 7.07155602260249
  mo_energy =
[-4.70566046e+00 -3.00478937e-01  7.07155602e+00  7.00544704e+01
  9.83910527e+02]
E1 = -19.02519695358298  E_coul = 4.506459479922913
cycle= 4 E= -14.5187374736601  delta_E= -5.02e-11  |g|= 1.93e-07  |ddm|= 8.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02519695358298  E_coul = 4.506459479922913
  HOMO = -0.300478922891835  LUMO = 7.07155627952003
  mo_energy =
[-4.70566007e+00 -3.00478923e-01  7.07155628e+00  7.00544713e+01
  9.83910529e+02]
E1 = -19.02519698217718  E_coul = 4.506459508517115
Extra cycle  E= -14.5187374736601  delta_E=    0  |g|= 8.37e-09  |ddm|= 6.3e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.782021299959359
E1 = -19.02519698217718  E_coul = 4.506459508517115
init E= -14.5187374736601
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300478922310553  LUMO = 7.07155628843596
  mo_energy =
[-4.70566006e+00 -3.00478922e-01  7.07155629e+00  7.00544714e+01
  9.83910529e+02]
E1 = -19.02519698323917  E_coul = 4.506459509579104
cycle= 1 E= -14.5187374736601  delta_E= 1.78e-15  |g|= 3.74e-10  |ddm|= 2.71e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02519698323917  E_coul = 4.506459509579104
  HOMO = -0.300478922285822  LUMO = 7.07155628874952
  mo_energy =
[-4.70566006e+00 -3.00478922e-01  7.07155629e+00  7.00544714e+01
  9.83910529e+02]
E1 = -19.025196983279507  E_coul = 4.506459509619452
Extra cycle  E= -14.5187374736601  delta_E= 1.07e-14  |g|= 1.78e-11  |ddm|= 1.23e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59678205e+02 4.97933641e+01 8.60387391e+00 1.92456347e+00
 1.04173083e-01]
grad_E = [ 4.06719740e-05 -1.47537150e-05  1.29657781e-04  1.50068704e-04
 -4.45481605e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.601004013        1
[INPUT] 0    0    [1    /1   ]  49.8026017627        1
[INPUT] 0    0    [1    /1   ]  8.6121533112         1
[INPUT] 0    0    [1    /1   ]  1.92604215084        1
[INPUT] 0    0    [1    /1   ]  0.104166303397       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.6010040126564, 1.0]], [0, [49.802601762675174, 1.0]], [0, [8.612153311204978, 1.0]], [0, [1.9260421508404129, 1.0]], [0, [0.10416630339724195, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.60100401]
bas 1, expnt(s) = [49.80260176]
bas 2, expnt(s) = [8.61215331]
bas 3, expnt(s) = [1.92604215]
bas 4, expnt(s) = [0.1041663]
CPU time:        82.18
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59601004e+02 3.28833462e+02 4.98026018e+01 4.73646190e+01
 8.61215331e+00 1.27013194e+01 1.92604215e+00 4.13061164e+00
 1.04166303e-01 4.63244705e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856510944075745
cond(S) = 11.786262244435328
E1 = -19.006461885928296  E_coul = 4.513094777331287
init E= -14.493367108597
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302581318713061  LUMO = 7.07881602744379
  mo_energy =
[-4.70011706e+00 -3.02581319e-01  7.07881603e+00  7.01047669e+01
  9.83890022e+02]
E1 = -19.02642119505282  E_coul = 4.5076947772591085
cycle= 1 E= -14.5187264177937  delta_E= -0.0254  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221485
diis-c [-4.90557408e-04  1.00000000e+00]
  HOMO = -0.300439273291187  LUMO = 7.08092534549624
  mo_energy =
[-4.70508254e+00 -3.00439273e-01  7.08092535e+00  7.00958607e+01
  9.83866822e+02]
E1 = -19.025332424202453  E_coul = 4.506593388098358
cycle= 2 E= -14.5187390361041  delta_E= -1.26e-05  |g|= 0.000777  |ddm|= 0.00467
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000868673
diis-c [-5.06362936e-07 -2.30246012e-02  1.02302460e+00]
  HOMO = -0.300481575220769  LUMO = 7.0806941865351
  mo_energy =
[-4.70560395e+00 -3.00481575e-01  7.08069419e+00  7.00953036e+01
  9.83866018e+02]
E1 = -19.02529355965932  E_coul = 4.506554485622884
cycle= 3 E= -14.5187390740364  delta_E= -3.79e-08  |g|= 2.9e-05  |ddm|= 0.000246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.6351e-05
diis-c [-4.57816743e-11  4.98355746e-04 -4.95357306e-02  1.04903737e+00]
  HOMO = -0.300482762351135  LUMO = 7.08069502623908
  mo_energy =
[-4.70561021e+00 -3.00482762e-01  7.08069503e+00  7.00953222e+01
  9.83866056e+02]
E1 = -19.025292996049473  E_coul = 4.506553921963035
cycle= 4 E= -14.5187390740864  delta_E= -5e-11  |g|= 1.93e-07  |ddm|= 8.54e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025292996049473  E_coul = 4.506553921963035
  HOMO = -0.300482748023781  LUMO = 7.08069528283882
  mo_energy =
[-4.70560983e+00 -3.00482748e-01  7.08069528e+00  7.00953232e+01
  9.83866058e+02]
E1 = -19.025293024564743  E_coul = 4.506553950478305
Extra cycle  E= -14.5187390740864  delta_E=    0  |g|= 8.35e-09  |ddm|= 6.28e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59601004e+02 4.98026018e+01 8.61215331e+00 1.92604215e+00
 1.04166303e-01]
E = -14.518739074086437
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.601004013        1
[INPUT] 0    0    [1    /1   ]  49.8026017627        1
[INPUT] 0    0    [1    /1   ]  8.6121533112         1
[INPUT] 0    0    [1    /1   ]  1.92604215084        1
[INPUT] 0    0    [1    /1   ]  0.104166303397       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.6010040126564, 1.0]], [0, [49.802601762675174, 1.0]], [0, [8.612153311204978, 1.0]], [0, [1.9260421508404129, 1.0]], [0, [0.10416630339724195, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.60100401]
bas 1, expnt(s) = [49.80260176]
bas 2, expnt(s) = [8.61215331]
bas 3, expnt(s) = [1.92604215]
bas 4, expnt(s) = [0.1041663]
CPU time:        82.77
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59601004e+02 3.28833462e+02 4.98026018e+01 4.73646190e+01
 8.61215331e+00 1.27013194e+01 1.92604215e+00 4.13061164e+00
 1.04166303e-01 4.63244705e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856510944075745
cond(S) = 11.786262244435328
E1 = -19.006461885928296  E_coul = 4.513094777331287
init E= -14.493367108597
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302581318713061  LUMO = 7.07881602744379
  mo_energy =
[-4.70011706e+00 -3.02581319e-01  7.07881603e+00  7.01047669e+01
  9.83890022e+02]
E1 = -19.02642119505282  E_coul = 4.5076947772591085
cycle= 1 E= -14.5187264177937  delta_E= -0.0254  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221485
diis-c [-4.90557408e-04  1.00000000e+00]
  HOMO = -0.300439273291187  LUMO = 7.08092534549624
  mo_energy =
[-4.70508254e+00 -3.00439273e-01  7.08092535e+00  7.00958607e+01
  9.83866822e+02]
E1 = -19.025332424202453  E_coul = 4.506593388098358
cycle= 2 E= -14.5187390361041  delta_E= -1.26e-05  |g|= 0.000777  |ddm|= 0.00467
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000868673
diis-c [-5.06362936e-07 -2.30246012e-02  1.02302460e+00]
  HOMO = -0.300481575220769  LUMO = 7.0806941865351
  mo_energy =
[-4.70560395e+00 -3.00481575e-01  7.08069419e+00  7.00953036e+01
  9.83866018e+02]
E1 = -19.02529355965932  E_coul = 4.506554485622884
cycle= 3 E= -14.5187390740364  delta_E= -3.79e-08  |g|= 2.9e-05  |ddm|= 0.000246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.6351e-05
diis-c [-4.57816743e-11  4.98355746e-04 -4.95357306e-02  1.04903737e+00]
  HOMO = -0.300482762351135  LUMO = 7.08069502623908
  mo_energy =
[-4.70561021e+00 -3.00482762e-01  7.08069503e+00  7.00953222e+01
  9.83866056e+02]
E1 = -19.025292996049473  E_coul = 4.506553921963035
cycle= 4 E= -14.5187390740864  delta_E= -5e-11  |g|= 1.93e-07  |ddm|= 8.54e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025292996049473  E_coul = 4.506553921963035
  HOMO = -0.300482748023781  LUMO = 7.08069528283882
  mo_energy =
[-4.70560983e+00 -3.00482748e-01  7.08069528e+00  7.00953232e+01
  9.83866058e+02]
E1 = -19.025293024564743  E_coul = 4.506553950478305
Extra cycle  E= -14.5187390740864  delta_E=    0  |g|= 8.35e-09  |ddm|= 6.28e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.786262244435328
E1 = -19.025293024564743  E_coul = 4.506553950478305
init E= -14.5187390740864
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300482747444316  LUMO = 7.08069529173664
  mo_energy =
[-4.70560981e+00 -3.00482747e-01  7.08069529e+00  7.00953232e+01
  9.83866058e+02]
E1 = -19.025293025622823  E_coul = 4.506553951536394
cycle= 1 E= -14.5187390740864  delta_E= 7.11e-15  |g|= 3.73e-10  |ddm|= 2.7e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025293025622823  E_coul = 4.506553951536394
  HOMO = -0.300482747419685  LUMO = 7.08069529204927
  mo_energy =
[-4.70560981e+00 -3.00482747e-01  7.08069529e+00  7.00953232e+01
  9.83866058e+02]
E1 = -19.025293025662997  E_coul = 4.50655395157656
Extra cycle  E= -14.5187390740864  delta_E= -7.11e-15  |g|= 1.77e-11  |ddm|= 1.23e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59601004e+02 4.98026018e+01 8.61215331e+00 1.92604215e+00
 1.04166303e-01]
grad_E = [ 4.06982030e-05 -2.39816472e-05  2.13177609e-04  2.50260478e-04
 -7.31765849e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.397159453        1
[INPUT] 0    0    [1    /1   ]  49.8158144822        1
[INPUT] 0    0    [1    /1   ]  8.62543554026        1
[INPUT] 0    0    [1    /1   ]  1.92842063558        1
[INPUT] 0    0    [1    /1   ]  0.104155393324       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.3971594532784, 1.0]], [0, [49.81581448217247, 1.0]], [0, [8.625435540259193, 1.0]], [0, [1.9284206355793239, 1.0]], [0, [0.10415539332448241, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.39715945]
bas 1, expnt(s) = [49.81581448]
bas 2, expnt(s) = [8.62543554]
bas 3, expnt(s) = [1.92842064]
bas 4, expnt(s) = [0.10415539]
CPU time:        85.03
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59397159e+02 3.28757242e+02 4.98158145e+01 4.73740431e+01
 8.62543554e+00 1.27160082e+01 1.92842064e+00 4.13443675e+00
 1.04155393e-01 4.63208315e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856406304465684
cond(S) = 11.793543007457087
E1 = -19.006343701484546  E_coul = 4.51304513753358
init E= -14.493298563951
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302597943834871  LUMO = 7.09343673667588
  mo_energy =
[-4.70012780e+00 -3.02597944e-01  7.09343674e+00  7.01684936e+01
  9.83707996e+02]
E1 = -19.026572805490694  E_coul = 4.507842144800898
cycle= 1 E= -14.5187306606898  delta_E= -0.0254  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221657
diis-c [-4.91319586e-04  1.00000000e+00]
  HOMO = -0.300445636260534  LUMO = 7.09561358716743
  mo_energy =
[-4.70500459e+00 -3.00445636e-01  7.09561359e+00  7.01598189e+01
  9.83685195e+02]
E1 = -19.025489131134258  E_coul = 4.5067459050069
cycle= 2 E= -14.5187432261274  delta_E= -1.26e-05  |g|= 0.000775  |ddm|= 0.00465
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00086701
diis-c [-5.04706761e-07 -2.29478848e-02  1.02294788e+00]
  HOMO = -0.300487751315354  LUMO = 7.09538364465741
  mo_energy =
[-4.70552351e+00 -3.00487751e-01  7.09538364e+00  7.01592658e+01
  9.83684398e+02]
E1 = -19.025450541338266  E_coul = 4.506707277547024
cycle= 3 E= -14.5187432637912  delta_E= -3.77e-08  |g|= 2.89e-05  |ddm|= 0.000245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.62469e-05
diis-c [-4.54287097e-11  4.93573597e-04 -4.94502382e-02  1.04895666e+00]
  HOMO = -0.300488932917093  LUMO = 7.09538449924895
  mo_energy =
[-4.70552974e+00 -3.00488933e-01  7.09538450e+00  7.01592845e+01
  9.83684436e+02]
E1 = -19.025449983969008  E_coul = 4.506706720128174
cycle= 4 E= -14.5187432638408  delta_E= -4.96e-11  |g|= 1.93e-07  |ddm|= 8.5e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025449983969008  E_coul = 4.506706720128174
  HOMO = -0.300488918639591  LUMO = 7.09538475533388
  mo_energy =
[-4.70552935e+00 -3.00488919e-01  7.09538476e+00  7.01592854e+01
  9.83684438e+02]
E1 = -19.02545001235775  E_coul = 4.506706748516908
Extra cycle  E= -14.5187432638408  delta_E= -1.07e-14  |g|= 8.32e-09  |ddm|= 6.26e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.59397159e+02 4.98158145e+01 8.62543554e+00 1.92842064e+00
 1.04155393e-01]
E = -14.518743263840843
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  659.397159453        1
[INPUT] 0    0    [1    /1   ]  49.8158144822        1
[INPUT] 0    0    [1    /1   ]  8.62543554026        1
[INPUT] 0    0    [1    /1   ]  1.92842063558        1
[INPUT] 0    0    [1    /1   ]  0.104155393324       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [659.3971594532784, 1.0]], [0, [49.81581448217247, 1.0]], [0, [8.625435540259193, 1.0]], [0, [1.9284206355793239, 1.0]], [0, [0.10415539332448241, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [659.39715945]
bas 1, expnt(s) = [49.81581448]
bas 2, expnt(s) = [8.62543554]
bas 3, expnt(s) = [1.92842064]
bas 4, expnt(s) = [0.10415539]
CPU time:        85.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.59397159e+02 3.28757242e+02 4.98158145e+01 4.73740431e+01
 8.62543554e+00 1.27160082e+01 1.92842064e+00 4.13443675e+00
 1.04155393e-01 4.63208315e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9856406304465684
cond(S) = 11.793543007457087
E1 = -19.006343701484546  E_coul = 4.51304513753358
init E= -14.493298563951
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302597943834871  LUMO = 7.09343673667588
  mo_energy =
[-4.70012780e+00 -3.02597944e-01  7.09343674e+00  7.01684936e+01
  9.83707996e+02]
E1 = -19.026572805490694  E_coul = 4.507842144800898
cycle= 1 E= -14.5187306606898  delta_E= -0.0254  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221657
diis-c [-4.91319586e-04  1.00000000e+00]
  HOMO = -0.300445636260534  LUMO = 7.09561358716743
  mo_energy =
[-4.70500459e+00 -3.00445636e-01  7.09561359e+00  7.01598189e+01
  9.83685195e+02]
E1 = -19.025489131134258  E_coul = 4.5067459050069
cycle= 2 E= -14.5187432261274  delta_E= -1.26e-05  |g|= 0.000775  |ddm|= 0.00465
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00086701
diis-c [-5.04706761e-07 -2.29478848e-02  1.02294788e+00]
  HOMO = -0.300487751315354  LUMO = 7.09538364465741
  mo_energy =
[-4.70552351e+00 -3.00487751e-01  7.09538364e+00  7.01592658e+01
  9.83684398e+02]
E1 = -19.025450541338266  E_coul = 4.506707277547024
cycle= 3 E= -14.5187432637912  delta_E= -3.77e-08  |g|= 2.89e-05  |ddm|= 0.000245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.62469e-05
diis-c [-4.54287097e-11  4.93573597e-04 -4.94502382e-02  1.04895666e+00]
  HOMO = -0.300488932917093  LUMO = 7.09538449924895
  mo_energy =
[-4.70552974e+00 -3.00488933e-01  7.09538450e+00  7.01592845e+01
  9.83684436e+02]
E1 = -19.025449983969008  E_coul = 4.506706720128174
cycle= 4 E= -14.5187432638408  delta_E= -4.96e-11  |g|= 1.93e-07  |ddm|= 8.5e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.025449983969008  E_coul = 4.506706720128174
  HOMO = -0.300488918639591  LUMO = 7.09538475533388
  mo_energy =
[-4.70552935e+00 -3.00488919e-01  7.09538476e+00  7.01592854e+01
  9.83684438e+02]
E1 = -19.02545001235775  E_coul = 4.506706748516908
Extra cycle  E= -14.5187432638408  delta_E= -1.07e-14  |g|= 8.32e-09  |ddm|= 6.26e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.793543007457087
E1 = -19.02545001235775  E_coul = 4.506706748516908
init E= -14.5187432638408
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300488918063037  LUMO = 7.0953847642027
  mo_energy =
[-4.70552934e+00 -3.00488918e-01  7.09538476e+00  7.01592855e+01
  9.83684438e+02]
E1 = -19.025450013409575  E_coul = 4.506706749568738
cycle= 1 E= -14.5187432638408  delta_E= 7.11e-15  |g|= 3.71e-10  |ddm|= 2.68e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025450013409575  E_coul = 4.506706749568738
  HOMO = -0.30048891803857  LUMO = 7.09538476451383
  mo_energy =
[-4.70552934e+00 -3.00488918e-01  7.09538476e+00  7.01592855e+01
  9.83684438e+02]
E1 = -19.025450013449422  E_coul = 4.506706749608591
Extra cycle  E= -14.5187432638408  delta_E= 3.55e-15  |g|= 1.76e-11  |ddm|= 1.22e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.59397159e+02 4.98158145e+01 8.62543554e+00 1.92842064e+00
 1.04155393e-01]
grad_E = [ 4.07445878e-05 -3.88865971e-05  3.48076258e-04  4.12036380e-04
 -1.19412097e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  658.861288756        1
[INPUT] 0    0    [1    /1   ]  49.8326434274        1
[INPUT] 0    0    [1    /1   ]  8.64659884503        1
[INPUT] 0    0    [1    /1   ]  1.93222708988        1
[INPUT] 0    0    [1    /1   ]  0.104137920709       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [658.8612887564541, 1.0]], [0, [49.83264342743545, 1.0]], [0, [8.646598845032978, 1.0]], [0, [1.9322270898769645, 1.0]], [0, [0.1041379207085104, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [658.86128876]
bas 1, expnt(s) = [49.83264343]
bas 2, expnt(s) = [8.64659885]
bas 3, expnt(s) = [1.93222709]
bas 4, expnt(s) = [0.10413792]
CPU time:        87.95
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.58861289e+02 3.28556844e+02 4.98326434e+01 4.73860456e+01
 8.64659885e+00 1.27394010e+01 1.93222709e+00 4.14055587e+00
 1.04137921e-01 4.63150034e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985623674306639
cond(S) = 11.806407164651164
E1 = -19.00615946255518  E_coul = 4.512966345875388
init E= -14.4931931166798
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30262467570446  LUMO = 7.11680483878604
  mo_energy =
[-4.70014665e+00 -3.02624676e-01  7.11680484e+00  7.02658873e+01
  9.83127056e+02]
E1 = -19.02682202003927  E_coul = 4.508080323404659
cycle= 1 E= -14.5187416966346  delta_E= -0.0255  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221909
diis-c [-4.92436923e-04  1.00000000e+00]
  HOMO = -0.300455863650999  LUMO = 7.11909082005304
  mo_energy =
[-4.70488075e+00 -3.00455864e-01  7.11909082e+00  7.02575870e+01
  9.83104901e+02]
E1 = -19.0257464568083  E_coul = 4.506992278672212
cycle= 2 E= -14.5187541781361  delta_E= -1.25e-05  |g|= 0.000772  |ddm|= 0.00463
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864384
diis-c [-5.02071544e-07 -2.28302909e-02  1.02283029e+00]
  HOMO = -0.300497682395754  LUMO = 7.11886281772948
  mo_energy =
[-4.70539571e+00 -3.00497682e-01  7.11886282e+00  7.02570403e+01
  9.83104115e+02]
E1 = -19.02570830167259  E_coul = 4.506954086296704
cycle= 3 E= -14.5187542153759  delta_E= -3.72e-08  |g|= 2.87e-05  |ddm|= 0.000243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.60786e-05
diis-c [-4.48483901e-11  4.86008962e-04 -4.93096496e-02  1.04882364e+00]
  HOMO = -0.300498855058311  LUMO = 7.11886369671863
  mo_energy =
[-4.70540188e+00 -3.00498855e-01  7.11886370e+00  7.02570589e+01
  9.83104153e+02]
E1 = -19.02570775430659  E_coul = 4.506953538881768
cycle= 4 E= -14.5187542154248  delta_E= -4.89e-11  |g|= 1.92e-07  |ddm|= 8.42e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02570775430659  E_coul = 4.506953538881768
  HOMO = -0.300498840861008  LUMO = 7.11886395197064
  mo_energy =
[-4.70540150e+00 -3.00498841e-01  7.11886395e+00  7.02570599e+01
  9.83104155e+02]
E1 = -19.025707782493797  E_coul = 4.506953567068962
Extra cycle  E= -14.5187542154248  delta_E= -1.07e-14  |g|= 8.26e-09  |ddm|= 6.21e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.58861289e+02 4.98326434e+01 8.64659885e+00 1.93222709e+00
 1.04137921e-01]
E = -14.518754215424835
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  658.861288756        1
[INPUT] 0    0    [1    /1   ]  49.8326434274        1
[INPUT] 0    0    [1    /1   ]  8.64659884503        1
[INPUT] 0    0    [1    /1   ]  1.93222708988        1
[INPUT] 0    0    [1    /1   ]  0.104137920709       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [658.8612887564541, 1.0]], [0, [49.83264342743545, 1.0]], [0, [8.646598845032978, 1.0]], [0, [1.9322270898769645, 1.0]], [0, [0.1041379207085104, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [658.86128876]
bas 1, expnt(s) = [49.83264343]
bas 2, expnt(s) = [8.64659885]
bas 3, expnt(s) = [1.93222709]
bas 4, expnt(s) = [0.10413792]
CPU time:        88.57
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.58861289e+02 3.28556844e+02 4.98326434e+01 4.73860456e+01
 8.64659885e+00 1.27394010e+01 1.93222709e+00 4.14055587e+00
 1.04137921e-01 4.63150034e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985623674306639
cond(S) = 11.806407164651164
E1 = -19.00615946255518  E_coul = 4.512966345875388
init E= -14.4931931166798
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30262467570446  LUMO = 7.11680483878604
  mo_energy =
[-4.70014665e+00 -3.02624676e-01  7.11680484e+00  7.02658873e+01
  9.83127056e+02]
E1 = -19.02682202003927  E_coul = 4.508080323404659
cycle= 1 E= -14.5187416966346  delta_E= -0.0255  |g|= 0.017  |ddm|= 0.104
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0221909
diis-c [-4.92436923e-04  1.00000000e+00]
  HOMO = -0.300455863650999  LUMO = 7.11909082005304
  mo_energy =
[-4.70488075e+00 -3.00455864e-01  7.11909082e+00  7.02575870e+01
  9.83104901e+02]
E1 = -19.0257464568083  E_coul = 4.506992278672212
cycle= 2 E= -14.5187541781361  delta_E= -1.25e-05  |g|= 0.000772  |ddm|= 0.00463
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864384
diis-c [-5.02071544e-07 -2.28302909e-02  1.02283029e+00]
  HOMO = -0.300497682395754  LUMO = 7.11886281772948
  mo_energy =
[-4.70539571e+00 -3.00497682e-01  7.11886282e+00  7.02570403e+01
  9.83104115e+02]
E1 = -19.02570830167259  E_coul = 4.506954086296704
cycle= 3 E= -14.5187542153759  delta_E= -3.72e-08  |g|= 2.87e-05  |ddm|= 0.000243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.60786e-05
diis-c [-4.48483901e-11  4.86008962e-04 -4.93096496e-02  1.04882364e+00]
  HOMO = -0.300498855058311  LUMO = 7.11886369671863
  mo_energy =
[-4.70540188e+00 -3.00498855e-01  7.11886370e+00  7.02570589e+01
  9.83104153e+02]
E1 = -19.02570775430659  E_coul = 4.506953538881768
cycle= 4 E= -14.5187542154248  delta_E= -4.89e-11  |g|= 1.92e-07  |ddm|= 8.42e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.02570775430659  E_coul = 4.506953538881768
  HOMO = -0.300498840861008  LUMO = 7.11886395197064
  mo_energy =
[-4.70540150e+00 -3.00498841e-01  7.11886395e+00  7.02570599e+01
  9.83104155e+02]
E1 = -19.025707782493797  E_coul = 4.506953567068962
Extra cycle  E= -14.5187542154248  delta_E= -1.07e-14  |g|= 8.26e-09  |ddm|= 6.21e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.806407164651164
E1 = -19.025707782493797  E_coul = 4.506953567068962
init E= -14.5187542154248
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300498840289111  LUMO = 7.11886396079314
  mo_energy =
[-4.70540148e+00 -3.00498840e-01  7.11886396e+00  7.02570599e+01
  9.83104155e+02]
E1 = -19.025707783535754  E_coul = 4.506953568110918
cycle= 1 E= -14.5187542154248  delta_E= -1.78e-15  |g|= 3.68e-10  |ddm|= 2.66e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.025707783535754  E_coul = 4.506953568110918
  HOMO = -0.3004988402649  LUMO = 7.11886396110191
  mo_energy =
[-4.70540148e+00 -3.00498840e-01  7.11886396e+00  7.02570599e+01
  9.83104155e+02]
E1 = -19.02570778357513  E_coul = 4.506953568150292
Extra cycle  E= -14.5187542154248  delta_E=    0  |g|= 1.74e-11  |ddm|= 1.2e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.58861289e+02 4.98326434e+01 8.64659885e+00 1.93222709e+00
 1.04137921e-01]
grad_E = [ 4.08298671e-05 -6.29010663e-05  5.65413343e-04  6.72474302e-04
 -1.93886349e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  657.454362874        1
[INPUT] 0    0    [1    /1   ]  49.848100996         1
[INPUT] 0    0    [1    /1   ]  8.68005086731        1
[INPUT] 0    0    [1    /1   ]  1.93828815871        1
[INPUT] 0    0    [1    /1   ]  0.104110068032       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [657.4543628737654, 1.0]], [0, [49.84810099596189, 1.0]], [0, [8.680050867306132, 1.0]], [0, [1.9382881587085432, 1.0]], [0, [0.10411006803190148, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [657.45436287]
bas 1, expnt(s) = [49.848101]
bas 2, expnt(s) = [8.68005087]
bas 3, expnt(s) = [1.93828816]
bas 4, expnt(s) = [0.10411007]
CPU time:        91.00
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.57454363e+02 3.28030505e+02 4.98481010e+01 4.73970692e+01
 8.68005087e+00 1.27763478e+01 1.93828816e+00 4.15029322e+00
 1.04110068e-01 4.63057126e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855961361757988
cond(S) = 11.830115457549262
E1 = -19.005879226097857  E_coul = 4.512842544934358
init E= -14.4930366811635
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302667567230631  LUMO = 7.15393007437753
  mo_energy =
[-4.70018110e+00 -3.02667567e-01  7.15393007e+00  7.04088917e+01
  9.81437507e+02]
E1 = -19.027236024478615  E_coul = 4.508465560576813
cycle= 1 E= -14.5187704639018  delta_E= -0.0257  |g|= 0.017  |ddm|= 0.103
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222248
diis-c [-4.9394095e-04  1.0000000e+00]
  HOMO = -0.300472266452497  LUMO = 7.15639252389023
  mo_energy =
[-4.70468605e+00 -3.00472266e-01  7.15639252e+00  7.04011969e+01
  9.81416403e+02]
E1 = -19.02617326257162  E_coul = 4.507390449085606
cycle= 2 E= -14.518782813486  delta_E= -1.23e-05  |g|= 0.000767  |ddm|= 0.00459
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000860297
diis-c [-4.97911724e-07 -2.26567171e-02  1.02265672e+00]
  HOMO = -0.300513620373624  LUMO = 7.15616759427236
  mo_energy =
[-4.70519477e+00 -3.00513620e-01  7.15616759e+00  7.04006605e+01
  9.81415635e+02]
E1 = -19.026135786861488  E_coul = 4.507352936796993
cycle= 3 E= -14.5187828500645  delta_E= -3.66e-08  |g|= 2.85e-05  |ddm|= 0.00024
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.58062e-05
diis-c [-4.38861995e-11  4.74191965e-04 -4.90757451e-02  1.04860155e+00]
  HOMO = -0.300514778559197  LUMO = 7.15616851360753
  mo_energy =
[-4.70520083e+00 -3.00514779e-01  7.15616851e+00  7.04006790e+01
  9.81415673e+02]
E1 = -19.026135255472333  E_coul = 4.507352405359922
cycle= 4 E= -14.5187828501124  delta_E= -4.79e-11  |g|= 1.91e-07  |ddm|= 8.31e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.026135255472333  E_coul = 4.507352405359922
  HOMO = -0.300514764490709  LUMO = 7.15616876750936
  mo_energy =
[-4.70520046e+00 -3.00514764e-01  7.15616877e+00  7.04006799e+01
  9.81415674e+02]
E1 = -19.026135283341215  E_coul = 4.507352433228804
Extra cycle  E= -14.5187828501124  delta_E=    0  |g|= 8.18e-09  |ddm|= 6.15e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.57454363e+02 4.98481010e+01 8.68005087e+00 1.93828816e+00
 1.04110068e-01]
E = -14.518782850112412
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  657.454362874        1
[INPUT] 0    0    [1    /1   ]  49.848100996         1
[INPUT] 0    0    [1    /1   ]  8.68005086731        1
[INPUT] 0    0    [1    /1   ]  1.93828815871        1
[INPUT] 0    0    [1    /1   ]  0.104110068032       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [657.4543628737654, 1.0]], [0, [49.84810099596189, 1.0]], [0, [8.680050867306132, 1.0]], [0, [1.9382881587085432, 1.0]], [0, [0.10411006803190148, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [657.45436287]
bas 1, expnt(s) = [49.848101]
bas 2, expnt(s) = [8.68005087]
bas 3, expnt(s) = [1.93828816]
bas 4, expnt(s) = [0.10411007]
CPU time:        91.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.57454363e+02 3.28030505e+02 4.98481010e+01 4.73970692e+01
 8.68005087e+00 1.27763478e+01 1.93828816e+00 4.15029322e+00
 1.04110068e-01 4.63057126e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855961361757988
cond(S) = 11.830115457549262
E1 = -19.005879226097857  E_coul = 4.512842544934358
init E= -14.4930366811635
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302667567230631  LUMO = 7.15393007437753
  mo_energy =
[-4.70018110e+00 -3.02667567e-01  7.15393007e+00  7.04088917e+01
  9.81437507e+02]
E1 = -19.027236024478615  E_coul = 4.508465560576813
cycle= 1 E= -14.5187704639018  delta_E= -0.0257  |g|= 0.017  |ddm|= 0.103
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222248
diis-c [-4.9394095e-04  1.0000000e+00]
  HOMO = -0.300472266452497  LUMO = 7.15639252389023
  mo_energy =
[-4.70468605e+00 -3.00472266e-01  7.15639252e+00  7.04011969e+01
  9.81416403e+02]
E1 = -19.02617326257162  E_coul = 4.507390449085606
cycle= 2 E= -14.518782813486  delta_E= -1.23e-05  |g|= 0.000767  |ddm|= 0.00459
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000860297
diis-c [-4.97911724e-07 -2.26567171e-02  1.02265672e+00]
  HOMO = -0.300513620373624  LUMO = 7.15616759427236
  mo_energy =
[-4.70519477e+00 -3.00513620e-01  7.15616759e+00  7.04006605e+01
  9.81415635e+02]
E1 = -19.026135786861488  E_coul = 4.507352936796993
cycle= 3 E= -14.5187828500645  delta_E= -3.66e-08  |g|= 2.85e-05  |ddm|= 0.00024
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.58062e-05
diis-c [-4.38861995e-11  4.74191965e-04 -4.90757451e-02  1.04860155e+00]
  HOMO = -0.300514778559197  LUMO = 7.15616851360753
  mo_energy =
[-4.70520083e+00 -3.00514779e-01  7.15616851e+00  7.04006790e+01
  9.81415673e+02]
E1 = -19.026135255472333  E_coul = 4.507352405359922
cycle= 4 E= -14.5187828501124  delta_E= -4.79e-11  |g|= 1.91e-07  |ddm|= 8.31e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.026135255472333  E_coul = 4.507352405359922
  HOMO = -0.300514764490709  LUMO = 7.15616876750936
  mo_energy =
[-4.70520046e+00 -3.00514764e-01  7.15616877e+00  7.04006799e+01
  9.81415674e+02]
E1 = -19.026135283341215  E_coul = 4.507352433228804
Extra cycle  E= -14.5187828501124  delta_E=    0  |g|= 8.18e-09  |ddm|= 6.15e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.830115457549262
E1 = -19.026135283341215  E_coul = 4.507352433228804
init E= -14.5187828501124
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300514763926204  LUMO = 7.15616877625871
  mo_energy =
[-4.70520044e+00 -3.00514764e-01  7.15616878e+00  7.04006800e+01
  9.81415674e+02]
E1 = -19.026135284367673  E_coul = 4.507352434255265
cycle= 1 E= -14.5187828501124  delta_E= 3.55e-15  |g|= 3.63e-10  |ddm|= 2.62e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.026135284367673  E_coul = 4.507352434255265
  HOMO = -0.3005147639024  LUMO = 7.15616877656379
  mo_energy =
[-4.70520044e+00 -3.00514764e-01  7.15616878e+00  7.04006800e+01
  9.81415674e+02]
E1 = -19.02613528440631  E_coul = 4.507352434293893
Extra cycle  E= -14.5187828501124  delta_E= -7.11e-15  |g|= 1.71e-11  |ddm|= 1.18e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.57454363e+02 4.98481010e+01 8.68005087e+00 1.93828816e+00
 1.04110068e-01]
grad_E = [ 4.09948528e-05 -1.01558069e-04  9.15249704e-04  1.09091994e-03
 -3.13704321e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  653.761056925        1
[INPUT] 0    0    [1    /1   ]  49.8426354544        1
[INPUT] 0    0    [1    /1   ]  8.73226576258        1
[INPUT] 0    0    [1    /1   ]  1.94786801373        1
[INPUT] 0    0    [1    /1   ]  0.104065972415       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [653.7610569251699, 1.0]], [0, [49.84263545435683, 1.0]], [0, [8.732265762584294, 1.0]], [0, [1.9478680137303213, 1.0]], [0, [0.10406597241534737, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [653.76105693]
bas 1, expnt(s) = [49.84263545]
bas 2, expnt(s) = [8.73226576]
bas 3, expnt(s) = [1.94786801]
bas 4, expnt(s) = [0.10406597]
CPU time:        94.02
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.53761057e+02 3.26647478e+02 4.98426355e+01 4.73931715e+01
 8.73226576e+00 1.28339467e+01 1.94786801e+00 4.16566814e+00
 1.04065972e-01 4.62910023e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855512390087213
cond(S) = 11.876286447884615
E1 = -19.005471974504992  E_coul = 4.512651054991239
init E= -14.4928209195138
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30273620452221  LUMO = 7.21236958059414
  mo_energy =
[-4.70024745e+00 -3.02736205e-01  7.21236958e+00  7.06030300e+01
  9.76739631e+02]
E1 = -19.027935214636734  E_coul = 4.509089631751296
cycle= 1 E= -14.5188455828854  delta_E= -0.026  |g|= 0.0169  |ddm|= 0.102
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222613
diis-c [-4.9556468e-04  1.0000000e+00]
  HOMO = -0.300498506074493  LUMO = 7.21511779432203
  mo_energy =
[-4.70438524e+00 -3.00498506e-01  7.21511779e+00  7.05963160e+01
  9.76720242e+02]
E1 = -19.026892403836637  E_coul = 4.508034675475927
cycle= 2 E= -14.5188577283607  delta_E= -1.21e-05  |g|= 0.000758  |ddm|= 0.00453
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00085408
diis-c [-4.91414949e-07 -2.24190440e-02  1.02241904e+00]
  HOMO = -0.300539142797107  LUMO = 7.21489768033561
  mo_energy =
[-4.70488423e+00 -3.00539143e-01  7.21489768e+00  7.05957959e+01
  9.76719502e+02]
E1 = -19.026855970695866  E_coul = 4.507998206767569
cycle= 3 E= -14.5188577639283  delta_E= -3.56e-08  |g|= 2.81e-05  |ddm|= 0.000235
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.53635e-05
diis-c [-4.22751915e-11  4.56106181e-04 -4.86787175e-02  1.04822261e+00]
  HOMO = -0.300540277435443  LUMO = 7.21489866745439
  mo_energy =
[-4.70489014e+00 -3.00540277e-01  7.21489867e+00  7.05958142e+01
  9.76719540e+02]
E1 = -19.026855464725067  E_coul = 4.507997700750499
cycle= 4 E= -14.5188577639746  delta_E= -4.63e-11  |g|= 1.89e-07  |ddm|= 8.12e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.026855464725067  E_coul = 4.507997700750499
  HOMO = -0.300540263573684  LUMO = 7.21489891915977
  mo_energy =
[-4.70488977e+00 -3.00540264e-01  7.21489892e+00  7.05958152e+01
  9.76719541e+02]
E1 = -19.026855492096892  E_coul = 4.507997728122323
Extra cycle  E= -14.5188577639746  delta_E= -1.78e-15  |g|= 8.06e-09  |ddm|= 6.04e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.53761057e+02 4.98426355e+01 8.73226576e+00 1.94786801e+00
 1.04065972e-01]
E = -14.51885776397457
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  653.761056925        1
[INPUT] 0    0    [1    /1   ]  49.8426354544        1
[INPUT] 0    0    [1    /1   ]  8.73226576258        1
[INPUT] 0    0    [1    /1   ]  1.94786801373        1
[INPUT] 0    0    [1    /1   ]  0.104065972415       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [653.7610569251699, 1.0]], [0, [49.84263545435683, 1.0]], [0, [8.732265762584294, 1.0]], [0, [1.9478680137303213, 1.0]], [0, [0.10406597241534737, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [653.76105693]
bas 1, expnt(s) = [49.84263545]
bas 2, expnt(s) = [8.73226576]
bas 3, expnt(s) = [1.94786801]
bas 4, expnt(s) = [0.10406597]
CPU time:        94.65
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.53761057e+02 3.26647478e+02 4.98426355e+01 4.73931715e+01
 8.73226576e+00 1.28339467e+01 1.94786801e+00 4.16566814e+00
 1.04065972e-01 4.62910023e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855512390087213
cond(S) = 11.876286447884615
E1 = -19.005471974504992  E_coul = 4.512651054991239
init E= -14.4928209195138
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30273620452221  LUMO = 7.21236958059414
  mo_energy =
[-4.70024745e+00 -3.02736205e-01  7.21236958e+00  7.06030300e+01
  9.76739631e+02]
E1 = -19.027935214636734  E_coul = 4.509089631751296
cycle= 1 E= -14.5188455828854  delta_E= -0.026  |g|= 0.0169  |ddm|= 0.102
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222613
diis-c [-4.9556468e-04  1.0000000e+00]
  HOMO = -0.300498506074493  LUMO = 7.21511779432203
  mo_energy =
[-4.70438524e+00 -3.00498506e-01  7.21511779e+00  7.05963160e+01
  9.76720242e+02]
E1 = -19.026892403836637  E_coul = 4.508034675475927
cycle= 2 E= -14.5188577283607  delta_E= -1.21e-05  |g|= 0.000758  |ddm|= 0.00453
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00085408
diis-c [-4.91414949e-07 -2.24190440e-02  1.02241904e+00]
  HOMO = -0.300539142797107  LUMO = 7.21489768033561
  mo_energy =
[-4.70488423e+00 -3.00539143e-01  7.21489768e+00  7.05957959e+01
  9.76719502e+02]
E1 = -19.026855970695866  E_coul = 4.507998206767569
cycle= 3 E= -14.5188577639283  delta_E= -3.56e-08  |g|= 2.81e-05  |ddm|= 0.000235
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.53635e-05
diis-c [-4.22751915e-11  4.56106181e-04 -4.86787175e-02  1.04822261e+00]
  HOMO = -0.300540277435443  LUMO = 7.21489866745439
  mo_energy =
[-4.70489014e+00 -3.00540277e-01  7.21489867e+00  7.05958142e+01
  9.76719540e+02]
E1 = -19.026855464725067  E_coul = 4.507997700750499
cycle= 4 E= -14.5188577639746  delta_E= -4.63e-11  |g|= 1.89e-07  |ddm|= 8.12e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.026855464725067  E_coul = 4.507997700750499
  HOMO = -0.300540263573684  LUMO = 7.21489891915977
  mo_energy =
[-4.70488977e+00 -3.00540264e-01  7.21489892e+00  7.05958152e+01
  9.76719541e+02]
E1 = -19.026855492096892  E_coul = 4.507997728122323
Extra cycle  E= -14.5188577639746  delta_E= -1.78e-15  |g|= 8.06e-09  |ddm|= 6.04e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.876286447884615
E1 = -19.026855492096892  E_coul = 4.507997728122323
init E= -14.5188577639746
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300540263020822  LUMO = 7.21489892779474
  mo_energy =
[-4.70488975e+00 -3.00540263e-01  7.21489893e+00  7.05958152e+01
  9.76719541e+02]
E1 = -19.02685549309949  E_coul = 4.507997729124919
cycle= 1 E= -14.5188577639746  delta_E=    0  |g|= 3.55e-10  |ddm|= 2.56e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02685549309949  E_coul = 4.507997729124919
  HOMO = -0.300540262997653  LUMO = 7.21489892809416
  mo_energy =
[-4.70488975e+00 -3.00540263e-01  7.21489893e+00  7.05958152e+01
  9.76719541e+02]
E1 = -19.026855493136964  E_coul = 4.507997729162397
Extra cycle  E= -14.5188577639746  delta_E= 3.55e-15  |g|= 1.66e-11  |ddm|= 1.15e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.53761057e+02 4.98426355e+01 8.73226576e+00 1.94786801e+00
 1.04065972e-01]
grad_E = [ 4.13331319e-05 -1.63723801e-04  1.47785100e-03  1.76116037e-03
 -5.06210379e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  644.030149737        1
[INPUT] 0    0    [1    /1   ]  49.7545220051        1
[INPUT] 0    0    [1    /1   ]  8.81243508872        1
[INPUT] 0    0    [1    /1   ]  1.96290376822        1
[INPUT] 0    0    [1    /1   ]  0.103996604092       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [644.0301497368824, 1.0]], [0, [49.75452200511183, 1.0]], [0, [8.812435088719152, 1.0]], [0, [1.9629037682227028, 1.0]], [0, [0.10399660409178745, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [644.03014974]
bas 1, expnt(s) = [49.75452201]
bas 2, expnt(s) = [8.81243509]
bas 3, expnt(s) = [1.96290377]
bas 4, expnt(s) = [0.1039966]
CPU time:        96.99
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.44030150e+02 3.22994163e+02 4.97545220e+01 4.73303202e+01
 8.81243509e+00 1.29222153e+01 1.96290377e+00 4.18976130e+00
 1.03996604e-01 4.62678579e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9854772909499894
cond(S) = 11.972950546925281
E1 = -19.00493203820756  E_coul = 4.512360888643113
init E= -14.4925711495644
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30284612575015  LUMO = 7.3033837547676
  mo_energy =
[-4.70038380e+00 -3.02846126e-01  7.30338375e+00  7.08227294e+01
  9.63947849e+02]
E1 = -19.029150105186293  E_coul = 4.510107413942967
cycle= 1 E= -14.5190426912433  delta_E= -0.0265  |g|= 0.0169  |ddm|= 0.101
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222703
diis-c [-4.95968171e-04  1.00000000e+00]
  HOMO = -0.300540535112414  LUMO = 7.30659777724067
  mo_energy =
[-4.70393273e+00 -3.00540535e-01  7.30659778e+00  7.08176136e+01
  9.63931285e+02]
E1 = -19.02813793800211  E_coul = 4.509083410510021
cycle= 2 E= -14.5190545274921  delta_E= -1.18e-05  |g|= 0.000746  |ddm|= 0.00444
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000844979
diis-c [-4.81340137e-07 -2.21487592e-02  1.02214876e+00]
  HOMO = -0.300580089238297  LUMO = 7.3063851284798
  mo_energy =
[-4.70441683e+00 -3.00580089e-01  7.30638513e+00  7.08171192e+01
  9.63930591e+02]
E1 = -19.028103066357744  E_coul = 4.509048504801507
cycle= 3 E= -14.5190545615562  delta_E= -3.41e-08  |g|= 2.75e-05  |ddm|= 0.000228
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.46314e-05
diis-c [-3.95512554e-11  4.29306282e-04 -4.79774472e-02  1.04754814e+00]
  HOMO = -0.300581184961353  LUMO = 7.30638623356359
  mo_energy =
[-4.70442245e+00 -3.00581185e-01  7.30638623e+00  7.08171374e+01
  9.63930628e+02]
E1 = -19.028102600958505  E_coul = 4.509048039358635
cycle= 4 E= -14.5190545615999  delta_E= -4.36e-11  |g|= 1.86e-07  |ddm|= 7.82e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028102600958505  E_coul = 4.509048039358635
  HOMO = -0.300581171433983  LUMO = 7.30638648164503
  mo_energy =
[-4.70442209e+00 -3.00581171e-01  7.30638648e+00  7.08171383e+01
  9.63930630e+02]
E1 = -19.028102627562568  E_coul = 4.5090480659627
Extra cycle  E= -14.5190545615999  delta_E= 1.78e-15  |g|= 7.88e-09  |ddm|= 5.88e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.44030150e+02 4.97545220e+01 8.81243509e+00 1.96290377e+00
 1.03996604e-01]
E = -14.519054561599868
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  644.030149737        1
[INPUT] 0    0    [1    /1   ]  49.7545220051        1
[INPUT] 0    0    [1    /1   ]  8.81243508872        1
[INPUT] 0    0    [1    /1   ]  1.96290376822        1
[INPUT] 0    0    [1    /1   ]  0.103996604092       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [644.0301497368824, 1.0]], [0, [49.75452200511183, 1.0]], [0, [8.812435088719152, 1.0]], [0, [1.9629037682227028, 1.0]], [0, [0.10399660409178745, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [644.03014974]
bas 1, expnt(s) = [49.75452201]
bas 2, expnt(s) = [8.81243509]
bas 3, expnt(s) = [1.96290377]
bas 4, expnt(s) = [0.1039966]
CPU time:        97.64
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.44030150e+02 3.22994163e+02 4.97545220e+01 4.73303202e+01
 8.81243509e+00 1.29222153e+01 1.96290377e+00 4.18976130e+00
 1.03996604e-01 4.62678579e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9854772909499894
cond(S) = 11.972950546925281
E1 = -19.00493203820756  E_coul = 4.512360888643113
init E= -14.4925711495644
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30284612575015  LUMO = 7.3033837547676
  mo_energy =
[-4.70038380e+00 -3.02846126e-01  7.30338375e+00  7.08227294e+01
  9.63947849e+02]
E1 = -19.029150105186293  E_coul = 4.510107413942967
cycle= 1 E= -14.5190426912433  delta_E= -0.0265  |g|= 0.0169  |ddm|= 0.101
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0222703
diis-c [-4.95968171e-04  1.00000000e+00]
  HOMO = -0.300540535112414  LUMO = 7.30659777724067
  mo_energy =
[-4.70393273e+00 -3.00540535e-01  7.30659778e+00  7.08176136e+01
  9.63931285e+02]
E1 = -19.02813793800211  E_coul = 4.509083410510021
cycle= 2 E= -14.5190545274921  delta_E= -1.18e-05  |g|= 0.000746  |ddm|= 0.00444
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000844979
diis-c [-4.81340137e-07 -2.21487592e-02  1.02214876e+00]
  HOMO = -0.300580089238297  LUMO = 7.3063851284798
  mo_energy =
[-4.70441683e+00 -3.00580089e-01  7.30638513e+00  7.08171192e+01
  9.63930591e+02]
E1 = -19.028103066357744  E_coul = 4.509048504801507
cycle= 3 E= -14.5190545615562  delta_E= -3.41e-08  |g|= 2.75e-05  |ddm|= 0.000228
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.46314e-05
diis-c [-3.95512554e-11  4.29306282e-04 -4.79774472e-02  1.04754814e+00]
  HOMO = -0.300581184961353  LUMO = 7.30638623356359
  mo_energy =
[-4.70442245e+00 -3.00581185e-01  7.30638623e+00  7.08171374e+01
  9.63930628e+02]
E1 = -19.028102600958505  E_coul = 4.509048039358635
cycle= 4 E= -14.5190545615999  delta_E= -4.36e-11  |g|= 1.86e-07  |ddm|= 7.82e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.028102600958505  E_coul = 4.509048039358635
  HOMO = -0.300581171433983  LUMO = 7.30638648164503
  mo_energy =
[-4.70442209e+00 -3.00581171e-01  7.30638648e+00  7.08171383e+01
  9.63930630e+02]
E1 = -19.028102627562568  E_coul = 4.5090480659627
Extra cycle  E= -14.5190545615999  delta_E= 1.78e-15  |g|= 7.88e-09  |ddm|= 5.88e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.972950546925281
E1 = -19.028102627562568  E_coul = 4.5090480659627
init E= -14.5190545615999
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300581170899398  LUMO = 7.30638649010293
  mo_energy =
[-4.70442208e+00 -3.00581171e-01  7.30638649e+00  7.08171383e+01
  9.63930630e+02]
E1 = -19.02810262852915  E_coul = 4.509048066929289
cycle= 1 E= -14.5190545615999  delta_E= 5.33e-15  |g|= 3.43e-10  |ddm|= 2.46e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.02810262852915  E_coul = 4.509048066929289
  HOMO = -0.300581170877216  LUMO = 7.3063864903939
  mo_energy =
[-4.70442208e+00 -3.00581171e-01  7.30638649e+00  7.08171383e+01
  9.63930630e+02]
E1 = -19.02810262856497  E_coul = 4.5090480669650965
Extra cycle  E= -14.5190545615999  delta_E= -1.07e-14  |g|= 1.58e-11  |ddm|= 1.09e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.44030150e+02 4.97545220e+01 8.81243509e+00 1.96290377e+00
 1.03996604e-01]
grad_E = [ 4.20708526e-05 -2.63846966e-04  2.38476019e-03  2.83378312e-03
 -8.16214767e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  618.045508965        1
[INPUT] 0    0    [1    /1   ]  49.3994268262        1
[INPUT] 0    0    [1    /1   ]  8.93341172678        1
[INPUT] 0    0    [1    /1   ]  1.98653063509        1
[INPUT] 0    0    [1    /1   ]  0.103887304507       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [618.045508965445, 1.0]], [0, [49.39942682623476, 1.0]], [0, [8.933411726777459, 1.0]], [0, [1.9865306350861087, 1.0]], [0, [0.10388730450676993, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [618.04550897]
bas 1, expnt(s) = [49.39942683]
bas 2, expnt(s) = [8.93341173]
bas 3, expnt(s) = [1.98653064]
bas 4, expnt(s) = [0.1038873]
CPU time:       100.09
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.18045509e+02 3.13170154e+02 4.93994268e+01 4.70767482e+01
 8.93341173e+00 1.30550349e+01 1.98653064e+00 4.22752782e+00
 1.03887305e-01 4.62313827e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985352094072797
cond(S) = 12.197254384287787
E1 = -19.004371817802124  E_coul = 4.511930244221871
init E= -14.4924415735803
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303024653668875  LUMO = 7.44415673701351
  mo_energy =
[-4.70068733e+00 -3.03024654e-01  7.44415674e+00  7.09358221e+01
  9.29171679e+02]
E1 = -19.03137232784143  E_coul = 4.511804455499884
cycle= 1 E= -14.5195678723415  delta_E= -0.0271  |g|= 0.0167  |ddm|= 0.0987
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.022135
diis-c [-4.89959938e-04  1.00000000e+00]
  HOMO = -0.300608883057497  LUMO = 7.44814729501819
  mo_energy =
[-4.70327824e+00 -3.00608883e-01  7.44814730e+00  7.09333612e+01
  9.29159891e+02]
E1 = -19.030406858411844  E_coul = 4.510827606557014
cycle= 2 E= -14.5195792518548  delta_E= -1.14e-05  |g|= 0.000727  |ddm|= 0.00432
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000832547
diis-c [-4.65356955e-07 -2.20471508e-02  1.02204715e+00]
  HOMO = -0.300646842154893  LUMO = 7.44794621979468
  mo_energy =
[-4.70373977e+00 -3.00646842e-01  7.44794622e+00  7.09329075e+01
  9.29159272e+02]
E1 = -19.030374270039992  E_coul = 4.510794986282019
cycle= 3 E= -14.519579283758  delta_E= -3.19e-08  |g|= 2.63e-05  |ddm|= 0.000219
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.33474e-05
diis-c [-3.49400907e-11  3.91907038e-04 -4.66235660e-02  1.04623166e+00]
  HOMO = -0.300647869964996  LUMO = 7.44794755017606
  mo_energy =
[-4.70374484e+00 -3.00647870e-01  7.44794755e+00  7.09329255e+01
  9.29159308e+02]
E1 = -19.030373871802606  E_coul = 4.510794588005368
cycle= 4 E= -14.5195792837972  delta_E= -3.93e-11  |g|= 1.83e-07  |ddm|= 7.31e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.030373871802606  E_coul = 4.510794588005368
  HOMO = -0.30064785700059  LUMO = 7.44794779197677
  mo_energy =
[-4.70374449e+00 -3.00647857e-01  7.44794779e+00  7.09329263e+01
  9.29159310e+02]
E1 = -19.030373897213234  E_coul = 4.5107946134159915
Extra cycle  E= -14.5195792837972  delta_E= -3.55e-15  |g|= 7.6e-09  |ddm|= 5.61e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [6.18045509e+02 4.93994268e+01 8.93341173e+00 1.98653064e+00
 1.03887305e-01]
E = -14.519579283797242
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  618.045508965        1
[INPUT] 0    0    [1    /1   ]  49.3994268262        1
[INPUT] 0    0    [1    /1   ]  8.93341172678        1
[INPUT] 0    0    [1    /1   ]  1.98653063509        1
[INPUT] 0    0    [1    /1   ]  0.103887304507       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [618.045508965445, 1.0]], [0, [49.39942682623476, 1.0]], [0, [8.933411726777459, 1.0]], [0, [1.9865306350861087, 1.0]], [0, [0.10388730450676993, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [618.04550897]
bas 1, expnt(s) = [49.39942683]
bas 2, expnt(s) = [8.93341173]
bas 3, expnt(s) = [1.98653064]
bas 4, expnt(s) = [0.1038873]
CPU time:       100.75
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 6.18045509e+02 3.13170154e+02 4.93994268e+01 4.70767482e+01
 8.93341173e+00 1.30550349e+01 1.98653064e+00 4.22752782e+00
 1.03887305e-01 4.62313827e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985352094072797
cond(S) = 12.197254384287787
E1 = -19.004371817802124  E_coul = 4.511930244221871
init E= -14.4924415735803
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303024653668875  LUMO = 7.44415673701351
  mo_energy =
[-4.70068733e+00 -3.03024654e-01  7.44415674e+00  7.09358221e+01
  9.29171679e+02]
E1 = -19.03137232784143  E_coul = 4.511804455499884
cycle= 1 E= -14.5195678723415  delta_E= -0.0271  |g|= 0.0167  |ddm|= 0.0987
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.022135
diis-c [-4.89959938e-04  1.00000000e+00]
  HOMO = -0.300608883057497  LUMO = 7.44814729501819
  mo_energy =
[-4.70327824e+00 -3.00608883e-01  7.44814730e+00  7.09333612e+01
  9.29159891e+02]
E1 = -19.030406858411844  E_coul = 4.510827606557014
cycle= 2 E= -14.5195792518548  delta_E= -1.14e-05  |g|= 0.000727  |ddm|= 0.00432
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000832547
diis-c [-4.65356955e-07 -2.20471508e-02  1.02204715e+00]
  HOMO = -0.300646842154893  LUMO = 7.44794621979468
  mo_energy =
[-4.70373977e+00 -3.00646842e-01  7.44794622e+00  7.09329075e+01
  9.29159272e+02]
E1 = -19.030374270039992  E_coul = 4.510794986282019
cycle= 3 E= -14.519579283758  delta_E= -3.19e-08  |g|= 2.63e-05  |ddm|= 0.000219
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.33474e-05
diis-c [-3.49400907e-11  3.91907038e-04 -4.66235660e-02  1.04623166e+00]
  HOMO = -0.300647869964996  LUMO = 7.44794755017606
  mo_energy =
[-4.70374484e+00 -3.00647870e-01  7.44794755e+00  7.09329255e+01
  9.29159308e+02]
E1 = -19.030373871802606  E_coul = 4.510794588005368
cycle= 4 E= -14.5195792837972  delta_E= -3.93e-11  |g|= 1.83e-07  |ddm|= 7.31e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.030373871802606  E_coul = 4.510794588005368
  HOMO = -0.30064785700059  LUMO = 7.44794779197677
  mo_energy =
[-4.70374449e+00 -3.00647857e-01  7.44794779e+00  7.09329263e+01
  9.29159310e+02]
E1 = -19.030373897213234  E_coul = 4.5107946134159915
Extra cycle  E= -14.5195792837972  delta_E= -3.55e-15  |g|= 7.6e-09  |ddm|= 5.61e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.197254384287787
E1 = -19.030373897213234  E_coul = 4.5107946134159915
init E= -14.5195792837972
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300647856495295  LUMO = 7.44794780015868
  mo_energy =
[-4.70374448e+00 -3.00647856e-01  7.44794780e+00  7.09329264e+01
  9.29159310e+02]
E1 = -19.03037389812615  E_coul = 4.51079461432891
cycle= 1 E= -14.5195792837972  delta_E= 1.78e-15  |g|= 3.25e-10  |ddm|= 2.31e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03037389812615  E_coul = 4.51079461432891
  HOMO = -0.30064785647465  LUMO = 7.44794780043752
  mo_energy =
[-4.70374448e+00 -3.00647856e-01  7.44794780e+00  7.09329264e+01
  9.29159310e+02]
E1 = -19.0303738981595  E_coul = 4.510794614362254
Extra cycle  E= -14.5195792837972  delta_E= -5.33e-15  |g|= 1.46e-11  |ddm|= 1.01e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [6.18045509e+02 4.93994268e+01 8.93341173e+00 1.98653064e+00
 1.03887305e-01]
grad_E = [ 4.37767902e-05 -4.25867577e-04  3.86196434e-03  4.57275536e-03
 -1.32316107e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  545.536955793        1
[INPUT] 0    0    [1    /1   ]  48.1858826851        1
[INPUT] 0    0    [1    /1   ]  9.11535658682        1
[INPUT] 0    0    [1    /1   ]  2.02506342072        1
[INPUT] 0    0    [1    /1   ]  0.103708618185       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [545.5369557930542, 1.0]], [0, [48.18588268506305, 1.0]], [0, [9.115356586824108, 1.0]], [0, [2.025063420718848, 1.0]], [0, [0.10370861818456573, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [545.53695579]
bas 1, expnt(s) = [48.18588269]
bas 2, expnt(s) = [9.11535659]
bas 3, expnt(s) = [2.02506342]
bas 4, expnt(s) = [0.10370862]
CPU time:       103.19
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 5.45536956e+02 2.85189253e+02 4.81858827e+01 4.62066931e+01
 9.11535659e+00 1.32539483e+01 2.02506342e+00 4.28888100e+00
 1.03708618e-01 4.61717313e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9851224019685816
cond(S) = 12.829041802479914
E1 = -19.004379201978406  E_coul = 4.511288690849681
init E= -14.4930905111287
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303332386463514  LUMO = 7.66540581091447
  mo_energy =
[-4.70144340e+00 -3.03332386e-01  7.66540581e+00  7.04381576e+01
  8.31476471e+02]
E1 = -19.035885970769698  E_coul = 4.514845667840067
cycle= 1 E= -14.5210403029296  delta_E= -0.0279  |g|= 0.0163  |ddm|= 0.0958
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0213302
diis-c [-4.54976717e-04  1.00000000e+00]
  HOMO = -0.300726913504132  LUMO = 7.67079273847526
  mo_energy =
[-4.70237551e+00 -3.00726914e-01  7.67079274e+00  7.04403806e+01
  8.31473284e+02]
E1 = -19.034994629428333  E_coul = 4.513943602966111
cycle= 2 E= -14.5210510264622  delta_E= -1.07e-05  |g|= 0.0007  |ddm|= 0.00413
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000818528
diis-c [-4.34785059e-07 -2.32770371e-02  1.02327704e+00]
  HOMO = -0.300762553756366  LUMO = 7.67061086103189
  mo_energy =
[-4.70280168e+00 -3.00762554e-01  7.67061086e+00  7.04399965e+01
  8.31472795e+02]
E1 = -19.03496542404407  E_coul = 4.5139143686649
cycle= 3 E= -14.5210510553792  delta_E= -2.89e-08  |g|= 2.38e-05  |ddm|= 0.000205
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.05564e-05
diis-c [-2.74293183e-11  3.49252153e-04 -4.33013410e-02  1.04295209e+00]
  HOMO = -0.300763437177247  LUMO = 7.67061276093166
  mo_energy =
[-4.70280538e+00 -3.00763437e-01  7.67061276e+00  7.04400146e+01
  8.31472830e+02]
E1 = -19.034965158671824  E_coul = 4.5139141032616426
cycle= 4 E= -14.5210510554102  delta_E= -3.1e-11  |g|= 1.76e-07  |ddm|= 6.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.034965158671824  E_coul = 4.5139141032616426
  HOMO = -0.300763425300433  LUMO = 7.67061298985756
  mo_energy =
[-4.70280505e+00 -3.00763425e-01  7.67061299e+00  7.04400154e+01
  8.31472832e+02]
E1 = -19.034965182049454  E_coul = 4.5139141266392695
Extra cycle  E= -14.5210510554102  delta_E= -3.55e-15  |g|= 7.16e-09  |ddm|= 5.13e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [5.45536956e+02 4.81858827e+01 9.11535659e+00 2.02506342e+00
 1.03708618e-01]
E = -14.521051055410185
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  545.536955793        1
[INPUT] 0    0    [1    /1   ]  48.1858826851        1
[INPUT] 0    0    [1    /1   ]  9.11535658682        1
[INPUT] 0    0    [1    /1   ]  2.02506342072        1
[INPUT] 0    0    [1    /1   ]  0.103708618185       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [545.5369557930542, 1.0]], [0, [48.18588268506305, 1.0]], [0, [9.115356586824108, 1.0]], [0, [2.025063420718848, 1.0]], [0, [0.10370861818456573, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [545.53695579]
bas 1, expnt(s) = [48.18588269]
bas 2, expnt(s) = [9.11535659]
bas 3, expnt(s) = [2.02506342]
bas 4, expnt(s) = [0.10370862]
CPU time:       103.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 5.45536956e+02 2.85189253e+02 4.81858827e+01 4.62066931e+01
 9.11535659e+00 1.32539483e+01 2.02506342e+00 4.28888100e+00
 1.03708618e-01 4.61717313e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9851224019685816
cond(S) = 12.829041802479914
E1 = -19.004379201978406  E_coul = 4.511288690849681
init E= -14.4930905111287
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303332386463514  LUMO = 7.66540581091447
  mo_energy =
[-4.70144340e+00 -3.03332386e-01  7.66540581e+00  7.04381576e+01
  8.31476471e+02]
E1 = -19.035885970769698  E_coul = 4.514845667840067
cycle= 1 E= -14.5210403029296  delta_E= -0.0279  |g|= 0.0163  |ddm|= 0.0958
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0213302
diis-c [-4.54976717e-04  1.00000000e+00]
  HOMO = -0.300726913504132  LUMO = 7.67079273847526
  mo_energy =
[-4.70237551e+00 -3.00726914e-01  7.67079274e+00  7.04403806e+01
  8.31473284e+02]
E1 = -19.034994629428333  E_coul = 4.513943602966111
cycle= 2 E= -14.5210510264622  delta_E= -1.07e-05  |g|= 0.0007  |ddm|= 0.00413
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000818528
diis-c [-4.34785059e-07 -2.32770371e-02  1.02327704e+00]
  HOMO = -0.300762553756366  LUMO = 7.67061086103189
  mo_energy =
[-4.70280168e+00 -3.00762554e-01  7.67061086e+00  7.04399965e+01
  8.31472795e+02]
E1 = -19.03496542404407  E_coul = 4.5139143686649
cycle= 3 E= -14.5210510553792  delta_E= -2.89e-08  |g|= 2.38e-05  |ddm|= 0.000205
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.05564e-05
diis-c [-2.74293183e-11  3.49252153e-04 -4.33013410e-02  1.04295209e+00]
  HOMO = -0.300763437177247  LUMO = 7.67061276093166
  mo_energy =
[-4.70280538e+00 -3.00763437e-01  7.67061276e+00  7.04400146e+01
  8.31472830e+02]
E1 = -19.034965158671824  E_coul = 4.5139141032616426
cycle= 4 E= -14.5210510554102  delta_E= -3.1e-11  |g|= 1.76e-07  |ddm|= 6.34e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.034965158671824  E_coul = 4.5139141032616426
  HOMO = -0.300763425300433  LUMO = 7.67061298985756
  mo_energy =
[-4.70280505e+00 -3.00763425e-01  7.67061299e+00  7.04400154e+01
  8.31472832e+02]
E1 = -19.034965182049454  E_coul = 4.5139141266392695
Extra cycle  E= -14.5210510554102  delta_E= -3.55e-15  |g|= 7.16e-09  |ddm|= 5.13e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.829041802479914
E1 = -19.034965182049454  E_coul = 4.5139141266392695
init E= -14.5210510554102
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300763424847237  LUMO = 7.67061299755815
  mo_energy =
[-4.70280504e+00 -3.00763425e-01  7.67061300e+00  7.04400154e+01
  8.31472832e+02]
E1 = -19.03496518287784  E_coul = 4.5139141274676575
cycle= 1 E= -14.5210510554102  delta_E= 1.78e-15  |g|= 2.95e-10  |ddm|= 2.05e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03496518287784  E_coul = 4.5139141274676575
  HOMO = -0.300763424829194  LUMO = 7.6706129978186
  mo_energy =
[-4.70280504e+00 -3.00763425e-01  7.67061300e+00  7.04400154e+01
  8.31472832e+02]
E1 = -19.034965182907595  E_coul = 4.513914127497405
Extra cycle  E= -14.5210510554102  delta_E= -7.11e-15  |g|= 1.26e-11  |ddm|= 8.64e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [5.45536956e+02 4.81858827e+01 9.11535659e+00 2.02506342e+00
 1.03708618e-01]
grad_E = [ 4.77104348e-05 -6.81242190e-04  6.31313435e-03  7.64362045e-03
 -2.20351974e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  312.423814778        1
[INPUT] 0    0    [1    /1   ]  43.4658061699        1
[INPUT] 0    0    [1    /1   ]  9.39009056822        1
[INPUT] 0    0    [1    /1   ]  2.09696177529        1
[INPUT] 0    0    [1    /1   ]  0.103370791151       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [312.4238147775455, 1.0]], [0, [43.46580616986015, 1.0]], [0, [9.390090568223492, 1.0]], [0, [2.0969617752932654, 1.0]], [0, [0.10337079115072864, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [312.42381478]
bas 1, expnt(s) = [43.46580617]
bas 2, expnt(s) = [9.39009057]
bas 3, expnt(s) = [2.09696178]
bas 4, expnt(s) = [0.10337079]
CPU time:       106.38
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.12423815e+02 1.87747050e+02 4.34658062e+01 4.27686782e+01
 9.39009057e+00 1.35524358e+01 2.09696178e+00 4.40258662e+00
 1.03370791e-01 4.60588833e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984599088709088
cond(S) = 16.285038183926144
E1 = -19.0068472928872  E_coul = 4.510247683502124
init E= -14.4965996093851
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303953664516638  LUMO = 8.0218419734734
  mo_energy =
[-4.70325611e+00 -3.03953665e-01  8.02184197e+00  6.68095134e+01
  5.20853998e+02]
E1 = -19.04663298392329  E_coul = 4.521792571599735
cycle= 1 E= -14.5248404123236  delta_E= -0.0282  |g|= 0.0145  |ddm|= 0.0924
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0161921
diis-c [-2.62183925e-04  1.00000000e+00]
  HOMO = -0.300955560146808  LUMO = 8.03052445502869
  mo_energy =
[-4.70057313e+00 -3.00955560e-01  8.03052446e+00  6.68215047e+01
  5.20868251e+02]
E1 = -19.045906298556453  E_coul = 4.521055875308254
cycle= 2 E= -14.5248504232482  delta_E= -1e-05  |g|= 0.000684  |ddm|= 0.00388
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000828716
diis-c [-2.55801215e-07 -4.22781451e-02  1.04227815e+00]
  HOMO = -0.300988092871324  LUMO = 8.03039515313217
  mo_energy =
[-4.70092478e+00 -3.00988093e-01  8.03039515e+00  6.68213037e+01
  5.20868061e+02]
E1 = -19.04588400981389  E_coul = 4.521033560623283
cycle= 3 E= -14.5248504491906  delta_E= -2.59e-08  |g|= 1.05e-05  |ddm|= 0.000191
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.50042e-05
diis-c [-1.66248409e-11  5.14160969e-04 -2.50008886e-02  1.02448673e+00]
  HOMO = -0.300988247380402  LUMO = 8.03040042773886
  mo_energy =
[-4.70092028e+00 -3.00988247e-01  8.03040043e+00  6.68213265e+01
  5.20868100e+02]
E1 = -19.045884329659057  E_coul = 4.521033880463383
cycle= 4 E= -14.5248504491957  delta_E= -5.07e-12  |g|= 1.35e-07  |ddm|= 2.14e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.045884329659057  E_coul = 4.521033880463383
  HOMO = -0.300988239362109  LUMO = 8.03040059841051
  mo_energy =
[-4.70092005e+00 -3.00988239e-01  8.03040060e+00  6.68213271e+01
  5.20868101e+02]
E1 = -19.045884346419733  E_coul = 4.521033897224062
Extra cycle  E= -14.5248504491957  delta_E= 1.78e-15  |g|= 5.34e-09  |ddm|= 3.53e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [3.12423815e+02 4.34658062e+01 9.39009057e+00 2.09696178e+00
 1.03370791e-01]
E = -14.524850449195672
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  312.423814778        1
[INPUT] 0    0    [1    /1   ]  43.4658061699        1
[INPUT] 0    0    [1    /1   ]  9.39009056822        1
[INPUT] 0    0    [1    /1   ]  2.09696177529        1
[INPUT] 0    0    [1    /1   ]  0.103370791151       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [312.4238147775455, 1.0]], [0, [43.46580616986015, 1.0]], [0, [9.390090568223492, 1.0]], [0, [2.0969617752932654, 1.0]], [0, [0.10337079115072864, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [312.42381478]
bas 1, expnt(s) = [43.46580617]
bas 2, expnt(s) = [9.39009057]
bas 3, expnt(s) = [2.09696178]
bas 4, expnt(s) = [0.10337079]
CPU time:       107.06
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.12423815e+02 1.87747050e+02 4.34658062e+01 4.27686782e+01
 9.39009057e+00 1.35524358e+01 2.09696178e+00 4.40258662e+00
 1.03370791e-01 4.60588833e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984599088709088
cond(S) = 16.285038183926144
E1 = -19.0068472928872  E_coul = 4.510247683502124
init E= -14.4965996093851
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303953664516638  LUMO = 8.0218419734734
  mo_energy =
[-4.70325611e+00 -3.03953665e-01  8.02184197e+00  6.68095134e+01
  5.20853998e+02]
E1 = -19.04663298392329  E_coul = 4.521792571599735
cycle= 1 E= -14.5248404123236  delta_E= -0.0282  |g|= 0.0145  |ddm|= 0.0924
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0161921
diis-c [-2.62183925e-04  1.00000000e+00]
  HOMO = -0.300955560146808  LUMO = 8.03052445502869
  mo_energy =
[-4.70057313e+00 -3.00955560e-01  8.03052446e+00  6.68215047e+01
  5.20868251e+02]
E1 = -19.045906298556453  E_coul = 4.521055875308254
cycle= 2 E= -14.5248504232482  delta_E= -1e-05  |g|= 0.000684  |ddm|= 0.00388
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000828716
diis-c [-2.55801215e-07 -4.22781451e-02  1.04227815e+00]
  HOMO = -0.300988092871324  LUMO = 8.03039515313217
  mo_energy =
[-4.70092478e+00 -3.00988093e-01  8.03039515e+00  6.68213037e+01
  5.20868061e+02]
E1 = -19.04588400981389  E_coul = 4.521033560623283
cycle= 3 E= -14.5248504491906  delta_E= -2.59e-08  |g|= 1.05e-05  |ddm|= 0.000191
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.50042e-05
diis-c [-1.66248409e-11  5.14160969e-04 -2.50008886e-02  1.02448673e+00]
  HOMO = -0.300988247380402  LUMO = 8.03040042773886
  mo_energy =
[-4.70092028e+00 -3.00988247e-01  8.03040043e+00  6.68213265e+01
  5.20868100e+02]
E1 = -19.045884329659057  E_coul = 4.521033880463383
cycle= 4 E= -14.5248504491957  delta_E= -5.07e-12  |g|= 1.35e-07  |ddm|= 2.14e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.045884329659057  E_coul = 4.521033880463383
  HOMO = -0.300988239362109  LUMO = 8.03040059841051
  mo_energy =
[-4.70092005e+00 -3.00988239e-01  8.03040060e+00  6.68213271e+01
  5.20868101e+02]
E1 = -19.045884346419733  E_coul = 4.521033897224062
Extra cycle  E= -14.5248504491957  delta_E= 1.78e-15  |g|= 5.34e-09  |ddm|= 3.53e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 16.285038183926144
E1 = -19.045884346419733  E_coul = 4.521033897224062
init E= -14.5248504491957
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300988239064379  LUMO = 8.03040060419038
  mo_energy =
[-4.70092004e+00 -3.00988239e-01  8.03040060e+00  6.68213271e+01
  5.20868101e+02]
E1 = -19.04588434700723  E_coul = 4.521033897811552
cycle= 1 E= -14.5248504491957  delta_E= -7.11e-15  |g|= 2.09e-10  |ddm|= 1.34e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04588434700723  E_coul = 4.521033897811552
  HOMO = -0.300988239053148  LUMO = 8.03040060438828
  mo_energy =
[-4.70092004e+00 -3.00988239e-01  8.03040060e+00  6.68213271e+01
  5.20868101e+02]
E1 = -19.04588434702812  E_coul = 4.521033897832441
Extra cycle  E= -14.5248504491957  delta_E=    0  |g|= 8.15e-12  |ddm|= 5.24e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [3.12423815e+02 4.34658062e+01 9.39009057e+00 2.09696178e+00
 1.03370791e-01]
grad_E = [ 2.52662564e-05 -6.14617746e-04  9.09859031e-03  1.75594310e-02
 -4.04308474e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  244.936237647        1
[INPUT] 0    0    [1    /1   ]  38.1562868127        1
[INPUT] 0    0    [1    /1   ]  8.90127794943        1
[INPUT] 0    0    [1    /1   ]  2.03815897921        1
[INPUT] 0    0    [1    /1   ]  0.103550572114       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [244.93623764734423, 1.0]], [0, [38.156286812710476, 1.0]], [0, [8.901277949434085, 1.0]], [0, [2.0381589792127217, 1.0]], [0, [0.10355057211396591, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [244.93623765]
bas 1, expnt(s) = [38.15628681]
bas 2, expnt(s) = [8.90127795]
bas 3, expnt(s) = [2.03815898]
bas 4, expnt(s) = [0.10355057]
CPU time:       109.39
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.44936238e+02 1.56424511e+02 3.81562868e+01 3.87873048e+01
 8.90127795e+00 1.30197995e+01 2.03815898e+00 4.30966553e+00
 1.03550572e-01 4.61189490e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985057875636165
cond(S) = 18.959048518427874
E1 = -19.01269697936888  E_coul = 4.511453987661003
init E= -14.5012429917079
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303563301825768  LUMO = 7.55737253726573
  mo_energy =
[-4.70455834e+00 -3.03563302e-01  7.55737254e+00  5.98890774e+01
  4.18826382e+02]
E1 = -19.04473916844973  E_coul = 4.516844978096753
cycle= 1 E= -14.527894190353  delta_E= -0.0267  |g|= 0.0147  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156895
diis-c [-2.46161802e-04  1.00000000e+00]
  HOMO = -0.300918155250494  LUMO = 7.56337035172774
  mo_energy =
[-4.70461167e+00 -3.00918155e-01  7.56337035e+00  5.98946968e+01
  4.18833002e+02]
E1 = -19.043828722460603  E_coul = 4.515923557188247
cycle= 2 E= -14.5279051652724  delta_E= -1.1e-05  |g|= 0.000701  |ddm|= 0.00437
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000873486
diis-c [-2.98308525e-07 -4.54493632e-02  1.04544936e+00]
  HOMO = -0.300955644267154  LUMO = 7.56317844483079
  mo_energy =
[-4.70505613e+00 -3.00955644e-01  7.56317844e+00  5.98943166e+01
  4.18832605e+02]
E1 = -19.043796486471102  E_coul = 4.515891291014335
cycle= 3 E= -14.5279051954568  delta_E= -3.02e-08  |g|= 1.08e-05  |ddm|= 0.000221
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.50459e-05
diis-c [-2.20917689e-11  3.67055009e-04 -2.15238013e-02  1.02115675e+00]
  HOMO = -0.300955787532564  LUMO = 7.56318363051569
  mo_energy =
[-4.70505134e+00 -3.00955788e-01  7.56318363e+00  5.98943384e+01
  4.18832643e+02]
E1 = -19.04379682340121  E_coul = 4.515891627939097
cycle= 4 E= -14.5279051954621  delta_E= -5.34e-12  |g|= 2.1e-07  |ddm|= 2.25e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04379682340121  E_coul = 4.515891627939097
  HOMO = -0.300955775982022  LUMO = 7.56318385971413
  mo_energy =
[-4.70505101e+00 -3.00955776e-01  7.56318386e+00  5.98943392e+01
  4.18832644e+02]
E1 = -19.043796848234678  E_coul = 4.515891652772561
Extra cycle  E= -14.5279051954621  delta_E= -5.33e-15  |g|= 8.73e-09  |ddm|= 5.38e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [2.44936238e+02 3.81562868e+01 8.90127795e+00 2.03815898e+00
 1.03550572e-01]
E = -14.527905195462116
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  244.936237647        1
[INPUT] 0    0    [1    /1   ]  38.1562868127        1
[INPUT] 0    0    [1    /1   ]  8.90127794943        1
[INPUT] 0    0    [1    /1   ]  2.03815897921        1
[INPUT] 0    0    [1    /1   ]  0.103550572114       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [244.93623764734423, 1.0]], [0, [38.156286812710476, 1.0]], [0, [8.901277949434085, 1.0]], [0, [2.0381589792127217, 1.0]], [0, [0.10355057211396591, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [244.93623765]
bas 1, expnt(s) = [38.15628681]
bas 2, expnt(s) = [8.90127795]
bas 3, expnt(s) = [2.03815898]
bas 4, expnt(s) = [0.10355057]
CPU time:       110.06
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.44936238e+02 1.56424511e+02 3.81562868e+01 3.87873048e+01
 8.90127795e+00 1.30197995e+01 2.03815898e+00 4.30966553e+00
 1.03550572e-01 4.61189490e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.985057875636165
cond(S) = 18.959048518427874
E1 = -19.01269697936888  E_coul = 4.511453987661003
init E= -14.5012429917079
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303563301825768  LUMO = 7.55737253726573
  mo_energy =
[-4.70455834e+00 -3.03563302e-01  7.55737254e+00  5.98890774e+01
  4.18826382e+02]
E1 = -19.04473916844973  E_coul = 4.516844978096753
cycle= 1 E= -14.527894190353  delta_E= -0.0267  |g|= 0.0147  |ddm|= 0.105
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0156895
diis-c [-2.46161802e-04  1.00000000e+00]
  HOMO = -0.300918155250494  LUMO = 7.56337035172774
  mo_energy =
[-4.70461167e+00 -3.00918155e-01  7.56337035e+00  5.98946968e+01
  4.18833002e+02]
E1 = -19.043828722460603  E_coul = 4.515923557188247
cycle= 2 E= -14.5279051652724  delta_E= -1.1e-05  |g|= 0.000701  |ddm|= 0.00437
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000873486
diis-c [-2.98308525e-07 -4.54493632e-02  1.04544936e+00]
  HOMO = -0.300955644267154  LUMO = 7.56317844483079
  mo_energy =
[-4.70505613e+00 -3.00955644e-01  7.56317844e+00  5.98943166e+01
  4.18832605e+02]
E1 = -19.043796486471102  E_coul = 4.515891291014335
cycle= 3 E= -14.5279051954568  delta_E= -3.02e-08  |g|= 1.08e-05  |ddm|= 0.000221
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.50459e-05
diis-c [-2.20917689e-11  3.67055009e-04 -2.15238013e-02  1.02115675e+00]
  HOMO = -0.300955787532564  LUMO = 7.56318363051569
  mo_energy =
[-4.70505134e+00 -3.00955788e-01  7.56318363e+00  5.98943384e+01
  4.18832643e+02]
E1 = -19.04379682340121  E_coul = 4.515891627939097
cycle= 4 E= -14.5279051954621  delta_E= -5.34e-12  |g|= 2.1e-07  |ddm|= 2.25e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.04379682340121  E_coul = 4.515891627939097
  HOMO = -0.300955775982022  LUMO = 7.56318385971413
  mo_energy =
[-4.70505101e+00 -3.00955776e-01  7.56318386e+00  5.98943392e+01
  4.18832644e+02]
E1 = -19.043796848234678  E_coul = 4.515891652772561
Extra cycle  E= -14.5279051954621  delta_E= -5.33e-15  |g|= 8.73e-09  |ddm|= 5.38e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.959048518427874
E1 = -19.043796848234678  E_coul = 4.515891652772561
init E= -14.5279051954621
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300955775535049  LUMO = 7.56318386796992
  mo_energy =
[-4.70505100e+00 -3.00955776e-01  7.56318387e+00  5.98943392e+01
  4.18832644e+02]
E1 = -19.04379684915901  E_coul = 4.515891653696909
cycle= 1 E= -14.5279051954621  delta_E= 1.6e-14  |g|= 3.55e-10  |ddm|= 2.14e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.04379684915901  E_coul = 4.515891653696909
  HOMO = -0.300955775517328  LUMO = 7.56318386827172
  mo_energy =
[-4.70505100e+00 -3.00955776e-01  7.56318387e+00  5.98943392e+01
  4.18832644e+02]
E1 = -19.043796849193956  E_coul = 4.515891653731848
Extra cycle  E= -14.5279051954621  delta_E= -7.11e-15  |g|= 1.43e-11  |ddm|= 8.72e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [2.44936238e+02 3.81562868e+01 8.90127795e+00 2.03815898e+00
 1.03550572e-01]
grad_E = [ 1.37599299e-05 -8.80243750e-04  1.07034132e-02  8.24899741e-03
 -3.12034291e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  300.432511289        1
[INPUT] 0    0    [1    /1   ]  25.8086846685        1
[INPUT] 0    0    [1    /1   ]  6.5642937787         1
[INPUT] 0    0    [1    /1   ]  1.70764533942        1
[INPUT] 0    0    [1    /1   ]  0.104582798529       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [300.4325112891064, 1.0]], [0, [25.808684668465784, 1.0]], [0, [6.564293778704155, 1.0]], [0, [1.7076453394218456, 1.0]], [0, [0.10458279852937546, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [300.43251129]
bas 1, expnt(s) = [25.80868467]
bas 2, expnt(s) = [6.56429378]
bas 3, expnt(s) = [1.70764534]
bas 4, expnt(s) = [0.1045828]
CPU time:       112.52
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.00432511e+02 1.82316183e+02 2.58086847e+01 2.89294001e+01
 6.56429378e+00 1.03611040e+01 1.70764534e+00 3.77409895e+00
 1.04582799e-01 4.64633178e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986455765365452
cond(S) = 20.910246888401222
E1 = -18.977651987707834  E_coul = 4.51922048879967
init E= -14.4584314989082
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301115426876719  LUMO = 5.42908456728281
  mo_energy =
[-4.69250888e+00 -3.01115427e-01  5.42908457e+00  4.01578672e+01
  4.38463562e+02]
E1 = -18.999004019060823  E_coul = 4.491980441340154
cycle= 1 E= -14.5070235777207  delta_E= -0.0486  |g|= 0.0366  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0520654
diis-c [-0.00271081  1.        ]
  HOMO = -0.300043840308719  LUMO = 5.4240441820106
  mo_energy =
[-4.70748861e+00 -3.00043840e-01  5.42404418e+00  4.01348637e+01
  4.38421823e+02]
E1 = -18.996686528139172  E_coul = 4.489639975119663
cycle= 2 E= -14.5070465530195  delta_E= -2.3e-05  |g|= 0.00103  |ddm|= 0.0082
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00115476
diis-c [-1.28505011e-06 -4.24521442e-03  1.00424521e+00]
  HOMO = -0.300118601504436  LUMO = 5.42348484652314
  mo_energy =
[-4.70858970e+00 -3.00118602e-01  5.42348485e+00  4.01333798e+01
  4.38419942e+02]
E1 = -18.996566320062033  E_coul = 4.489519687374808
cycle= 3 E= -14.5070466326872  delta_E= -7.97e-08  |g|= 5.94e-05  |ddm|= 0.000474
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.76037e-05
diis-c [-1.61592818e-10  3.18617883e-04 -7.27456709e-02  1.07242705e+00]
  HOMO = -0.300122926183626  LUMO = 5.42345913256611
  mo_energy =
[-4.70864453e+00 -3.00122926e-01  5.42345913e+00  4.01333199e+01
  4.38419883e+02]
E1 = -18.99656004675651  E_coul = 4.48951341377316
cycle= 4 E= -14.5070466329834  delta_E= -2.96e-10  |g|= 9.25e-07  |ddm|= 2.94e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.99656004675651  E_coul = 4.48951341377316
  HOMO = -0.300122903051474  LUMO = 5.42345963886874
  mo_energy =
[-4.70864371e+00 -3.00122903e-01  5.42345964e+00  4.01333217e+01
  4.38419886e+02]
E1 = -18.99656012678541  E_coul = 4.489513493802032
Extra cycle  E= -14.5070466329834  delta_E= -2.84e-14  |g|= 5.06e-08  |ddm|= 1.64e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [3.00432511e+02 2.58086847e+01 6.56429378e+00 1.70764534e+00
 1.04582799e-01]
E = -14.507046632983378
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  257.040809726        1
[INPUT] 0    0    [1    /1   ]  35.4630890475        1
[INPUT] 0    0    [1    /1   ]  8.39154654794        1
[INPUT] 0    0    [1    /1   ]  1.96606898266        1
[INPUT] 0    0    [1    /1   ]  0.103775716222       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [257.0408097258497, 1.0]], [0, [35.463089047460066, 1.0]], [0, [8.391546547943385, 1.0]], [0, [1.9660689826554172, 1.0]], [0, [0.10377571622233105, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [257.04080973]
bas 1, expnt(s) = [35.46308905]
bas 2, expnt(s) = [8.39154655]
bas 3, expnt(s) = [1.96606898]
bas 4, expnt(s) = [0.10377572]
CPU time:       113.21
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.57040810e+02 1.62187203e+02 3.54630890e+01 3.67153309e+01
 8.39154655e+00 1.24565143e+01 1.96606898e+00 4.19482732e+00
 1.03775716e-01 4.61941339e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855217851831215
cond(S) = 18.911766363501894
E1 = -19.016493624977393  E_coul = 4.512807551215874
init E= -14.5036860737615
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303096566565056  LUMO = 7.07269982409756
  mo_energy =
[-4.70546368e+00 -3.03096567e-01  7.07269982e+00  5.55493115e+01
  4.23042337e+02]
E1 = -19.041164570296726  E_coul = 4.5109996228865015
cycle= 1 E= -14.5301649474102  delta_E= -0.0265  |g|= 0.0169  |ddm|= 0.119
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0185525
diis-c [-3.44194381e-04  1.00000000e+00]
  HOMO = -0.300841054867108  LUMO = 7.07578680004508
  mo_energy =
[-4.70874752e+00 -3.00841055e-01  7.07578680e+00  5.55479816e+01
  4.23039497e+02]
E1 = -19.040017718907492  E_coul = 4.50984033024761
cycle= 2 E= -14.5301773886599  delta_E= -1.24e-05  |g|= 0.000734  |ddm|= 0.00496
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000924829
diis-c [-5.16474416e-07 -3.24169844e-02  1.03241698e+00]
  HOMO = -0.300884218101319  LUMO = 7.07552217545211
  mo_energy =
[-4.70930313e+00 -3.00884218e-01  7.07552218e+00  5.55473907e+01
  4.23038847e+02]
E1 = -19.039972482962554  E_coul = 4.509795058260842
cycle= 3 E= -14.5301774247017  delta_E= -3.6e-08  |g|= 2.1e-05  |ddm|= 0.000256
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.8594e-05
diis-c [-3.40864114e-11  2.28546473e-04 -3.41244291e-02  1.03389588e+00]
  HOMO = -0.300885034037068  LUMO = 7.07552318686148
  mo_energy =
[-4.70930678e+00 -3.00885034e-01  7.07552319e+00  5.55474030e+01
  4.23038875e+02]
E1 = -19.039972126774323  E_coul = 4.509794702046682
cycle= 4 E= -14.5301774247276  delta_E= -2.59e-11  |g|= 3.26e-07  |ddm|= 6.22e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.039972126774323  E_coul = 4.509794702046682
  HOMO = -0.300885018832429  LUMO = 7.07552348785062
  mo_energy =
[-4.70930634e+00 -3.00885019e-01  7.07552349e+00  5.55474040e+01
  4.23038877e+02]
E1 = -19.039972162276467  E_coul = 4.509794737548809
Extra cycle  E= -14.5301774247277  delta_E= -1.78e-14  |g|= 1.41e-08  |ddm|= 7.47e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [2.57040810e+02 3.54630890e+01 8.39154655e+00 1.96606898e+00
 1.03775716e-01]
E = -14.530177424727658
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  257.040809726        1
[INPUT] 0    0    [1    /1   ]  35.4630890475        1
[INPUT] 0    0    [1    /1   ]  8.39154654794        1
[INPUT] 0    0    [1    /1   ]  1.96606898266        1
[INPUT] 0    0    [1    /1   ]  0.103775716222       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [257.0408097258497, 1.0]], [0, [35.463089047460066, 1.0]], [0, [8.391546547943385, 1.0]], [0, [1.9660689826554172, 1.0]], [0, [0.10377571622233105, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [257.04080973]
bas 1, expnt(s) = [35.46308905]
bas 2, expnt(s) = [8.39154655]
bas 3, expnt(s) = [1.96606898]
bas 4, expnt(s) = [0.10377572]
CPU time:       113.92
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.57040810e+02 1.62187203e+02 3.54630890e+01 3.67153309e+01
 8.39154655e+00 1.24565143e+01 1.96606898e+00 4.19482732e+00
 1.03775716e-01 4.61941339e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9855217851831215
cond(S) = 18.911766363501894
E1 = -19.016493624977393  E_coul = 4.512807551215874
init E= -14.5036860737615
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303096566565056  LUMO = 7.07269982409756
  mo_energy =
[-4.70546368e+00 -3.03096567e-01  7.07269982e+00  5.55493115e+01
  4.23042337e+02]
E1 = -19.041164570296726  E_coul = 4.5109996228865015
cycle= 1 E= -14.5301649474102  delta_E= -0.0265  |g|= 0.0169  |ddm|= 0.119
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0185525
diis-c [-3.44194381e-04  1.00000000e+00]
  HOMO = -0.300841054867108  LUMO = 7.07578680004508
  mo_energy =
[-4.70874752e+00 -3.00841055e-01  7.07578680e+00  5.55479816e+01
  4.23039497e+02]
E1 = -19.040017718907492  E_coul = 4.50984033024761
cycle= 2 E= -14.5301773886599  delta_E= -1.24e-05  |g|= 0.000734  |ddm|= 0.00496
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000924829
diis-c [-5.16474416e-07 -3.24169844e-02  1.03241698e+00]
  HOMO = -0.300884218101319  LUMO = 7.07552217545211
  mo_energy =
[-4.70930313e+00 -3.00884218e-01  7.07552218e+00  5.55473907e+01
  4.23038847e+02]
E1 = -19.039972482962554  E_coul = 4.509795058260842
cycle= 3 E= -14.5301774247017  delta_E= -3.6e-08  |g|= 2.1e-05  |ddm|= 0.000256
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.8594e-05
diis-c [-3.40864114e-11  2.28546473e-04 -3.41244291e-02  1.03389588e+00]
  HOMO = -0.300885034037068  LUMO = 7.07552318686148
  mo_energy =
[-4.70930678e+00 -3.00885034e-01  7.07552319e+00  5.55474030e+01
  4.23038875e+02]
E1 = -19.039972126774323  E_coul = 4.509794702046682
cycle= 4 E= -14.5301774247276  delta_E= -2.59e-11  |g|= 3.26e-07  |ddm|= 6.22e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.039972126774323  E_coul = 4.509794702046682
  HOMO = -0.300885018832429  LUMO = 7.07552348785062
  mo_energy =
[-4.70930634e+00 -3.00885019e-01  7.07552349e+00  5.55474040e+01
  4.23038877e+02]
E1 = -19.039972162276467  E_coul = 4.509794737548809
Extra cycle  E= -14.5301774247277  delta_E= -1.78e-14  |g|= 1.41e-08  |ddm|= 7.47e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.911766363501894
E1 = -19.039972162276467  E_coul = 4.509794737548809
init E= -14.5301774247277
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300885018229364  LUMO = 7.07552349952974
  mo_energy =
[-4.70930633e+00 -3.00885018e-01  7.07552350e+00  5.55474040e+01
  4.23038877e+02]
E1 = -19.03997216368454  E_coul = 4.50979473895688
cycle= 1 E= -14.5301774247277  delta_E=    0  |g|= 5.99e-10  |ddm|= 3.04e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03997216368454  E_coul = 4.50979473895688
  HOMO = -0.300885018204944  LUMO = 7.07552349999179
  mo_energy =
[-4.70930632e+00 -3.00885018e-01  7.07552350e+00  5.55474040e+01
  4.23038877e+02]
E1 = -19.039972163741187  E_coul = 4.50979473901354
Extra cycle  E= -14.5301774247276  delta_E= 1.07e-14  |g|= 2.5e-11  |ddm|= 1.26e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.57040810e+02 3.54630890e+01 8.39154655e+00 1.96606898e+00
 1.03775716e-01]
grad_E = [ 6.32911321e-05 -1.66725902e-03  1.25435441e-02 -3.00330195e-03
 -2.04671503e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  163.728908066        1
[INPUT] 0    0    [1    /1   ]  27.7201116671        1
[INPUT] 0    0    [1    /1   ]  6.95436720112        1
[INPUT] 0    0    [1    /1   ]  1.78001237215        1
[INPUT] 0    0    [1    /1   ]  0.10420517255        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [163.7289080661696, 1.0]], [0, [27.720111667121678, 1.0]], [0, [6.954367201124416, 1.0]], [0, [1.780012372148352, 1.0]], [0, [0.1042051725497401, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [163.72890807]
bas 1, expnt(s) = [27.72011167]
bas 2, expnt(s) = [6.9543672]
bas 3, expnt(s) = [1.78001237]
bas 4, expnt(s) = [0.10420517]
CPU time:       116.31
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.63728908e+02 1.15640257e+02 2.77201117e+01 3.05218783e+01
 6.95436720e+00 1.08195261e+01 1.78001237e+00 3.89342927e+00
 1.04205173e-01 4.63374342e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986403711498612
cond(S) = 24.121697295302127
E1 = -19.03226196085101  E_coul = 4.51739137380309
init E= -14.5148705870479
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302085947361796  LUMO = 5.75699244866628
  mo_energy =
[ -4.70727971  -0.30208595   5.75699245  43.3880609  280.55781684]
E1 = -19.040056535084194  E_coul = 4.503622772629503
cycle= 1 E= -14.5364337624547  delta_E= -0.0216  |g|= 0.0166  |ddm|= 0.153
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0154373
diis-c [-2.38309677e-04  1.00000000e+00]
  HOMO = -0.300683040918417  LUMO = 5.75644701645046
  mo_energy =
[ -4.71573127  -0.30068304   5.75644702  43.37796062 280.54175524]
E1 = -19.038433150762415  E_coul = 4.501980671774873
cycle= 2 E= -14.5364524789875  delta_E= -1.87e-05  |g|= 0.000961  |ddm|= 0.0071
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00115954
diis-c [-5.27628604e-07 -6.22624933e-02  1.06226249e+00]
  HOMO = -0.300750160768317  LUMO = 5.7560833425235
  mo_energy =
[ -4.71653694  -0.30075016   5.75608334  43.37713985 280.54080879]
E1 = -19.038350543834294  E_coul = 4.501897989428606
cycle= 3 E= -14.5364525544057  delta_E= -7.54e-08  |g|= 1.39e-05  |ddm|= 0.000442
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.85086e-05
diis-c [-5.90443447e-11  4.43446080e-04 -1.91497607e-02  1.01870631e+00]
  HOMO = -0.300750155390806  LUMO = 5.75609016222242
  mo_energy =
[ -4.71652754  -0.30075016   5.75609016  43.3771682  280.54086058]
E1 = -19.038351206971434  E_coul = 4.50189865255681
cycle= 4 E= -14.5364525544146  delta_E= -8.94e-12  |g|= 4.8e-07  |ddm|= 2.99e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.038351206971434  E_coul = 4.50189865255681
  HOMO = -0.300750125497605  LUMO = 5.75609056852695
  mo_energy =
[ -4.71652683  -0.30075013   5.75609057  43.37716957 280.54086266]
E1 = -19.038351273612754  E_coul = 4.501898719198112
Extra cycle  E= -14.5364525544146  delta_E= -1.78e-14  |g|= 2.44e-08  |ddm|= 1.66e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.63728908e+02 2.77201117e+01 6.95436720e+00 1.78001237e+00
 1.04205173e-01]
E = -14.536452554414641
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:26:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  163.728908066        1
[INPUT] 0    0    [1    /1   ]  27.7201116671        1
[INPUT] 0    0    [1    /1   ]  6.95436720112        1
[INPUT] 0    0    [1    /1   ]  1.78001237215        1
[INPUT] 0    0    [1    /1   ]  0.10420517255        1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [163.7289080661696, 1.0]], [0, [27.720111667121678, 1.0]], [0, [6.954367201124416, 1.0]], [0, [1.780012372148352, 1.0]], [0, [0.1042051725497401, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [163.72890807]
bas 1, expnt(s) = [27.72011167]
bas 2, expnt(s) = [6.9543672]
bas 3, expnt(s) = [1.78001237]
bas 4, expnt(s) = [0.10420517]
CPU time:       117.00
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.63728908e+02 1.15640257e+02 2.77201117e+01 3.05218783e+01
 6.95436720e+00 1.08195261e+01 1.78001237e+00 3.89342927e+00
 1.04205173e-01 4.63374342e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986403711498612
cond(S) = 24.121697295302127
E1 = -19.03226196085101  E_coul = 4.51739137380309
init E= -14.5148705870479
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302085947361796  LUMO = 5.75699244866628
  mo_energy =
[ -4.70727971  -0.30208595   5.75699245  43.3880609  280.55781684]
E1 = -19.040056535084194  E_coul = 4.503622772629503
cycle= 1 E= -14.5364337624547  delta_E= -0.0216  |g|= 0.0166  |ddm|= 0.153
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0154373
diis-c [-2.38309677e-04  1.00000000e+00]
  HOMO = -0.300683040918417  LUMO = 5.75644701645046
  mo_energy =
[ -4.71573127  -0.30068304   5.75644702  43.37796062 280.54175524]
E1 = -19.038433150762415  E_coul = 4.501980671774873
cycle= 2 E= -14.5364524789875  delta_E= -1.87e-05  |g|= 0.000961  |ddm|= 0.0071
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00115954
diis-c [-5.27628604e-07 -6.22624933e-02  1.06226249e+00]
  HOMO = -0.300750160768317  LUMO = 5.7560833425235
  mo_energy =
[ -4.71653694  -0.30075016   5.75608334  43.37713985 280.54080879]
E1 = -19.038350543834294  E_coul = 4.501897989428606
cycle= 3 E= -14.5364525544057  delta_E= -7.54e-08  |g|= 1.39e-05  |ddm|= 0.000442
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.85086e-05
diis-c [-5.90443447e-11  4.43446080e-04 -1.91497607e-02  1.01870631e+00]
  HOMO = -0.300750155390806  LUMO = 5.75609016222242
  mo_energy =
[ -4.71652754  -0.30075016   5.75609016  43.3771682  280.54086058]
E1 = -19.038351206971434  E_coul = 4.50189865255681
cycle= 4 E= -14.5364525544146  delta_E= -8.94e-12  |g|= 4.8e-07  |ddm|= 2.99e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.038351206971434  E_coul = 4.50189865255681
  HOMO = -0.300750125497605  LUMO = 5.75609056852695
  mo_energy =
[ -4.71652683  -0.30075013   5.75609057  43.37716957 280.54086266]
E1 = -19.038351273612754  E_coul = 4.501898719198112
Extra cycle  E= -14.5364525544146  delta_E= -1.78e-14  |g|= 2.44e-08  |ddm|= 1.66e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 24.121697295302127
E1 = -19.038351273612754  E_coul = 4.501898719198112
init E= -14.5364525544146
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30075012402453  LUMO = 5.75609058648694
  mo_energy =
[ -4.71652679  -0.30075012   5.75609059  43.37716962 280.54086274]
E1 = -19.038351276719546  E_coul = 4.501898722304911
cycle= 1 E= -14.5364525544146  delta_E= 7.11e-15  |g|= 1.23e-09  |ddm|= 8.49e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.038351276719546  E_coul = 4.501898722304911
  HOMO = -0.300750123948853  LUMO = 5.756090587303
  mo_energy =
[ -4.71652679  -0.30075012   5.75609059  43.37716963 280.54086275]
E1 = -19.03835127686846  E_coul = 4.5018987224538165
Extra cycle  E= -14.5364525544146  delta_E= -1.07e-14  |g|= 6.29e-11  |ddm|= 4.52e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.63728908e+02 2.77201117e+01 6.95436720e+00 1.78001237e+00
 1.04205173e-01]
grad_E = [-3.43287938e-05 -1.04885437e-03  7.60359837e-03 -5.37232066e-04
 -5.10322419e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  231.707378387        1
[INPUT] 0    0    [1    /1   ]  28.9263974575        1
[INPUT] 0    0    [1    /1   ]  5.76461830516        1
[INPUT] 0    0    [1    /1   ]  1.58124435654        1
[INPUT] 0    0    [1    /1   ]  0.104751331859       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [231.70737838692418, 1.0]], [0, [28.92639745747128, 1.0]], [0, [5.7646183051647135, 1.0]], [0, [1.5812443565438268, 1.0]], [0, [0.1047513318586773, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [231.70737839]
bas 1, expnt(s) = [28.92639746]
bas 2, expnt(s) = [5.76461831]
bas 3, expnt(s) = [1.58124436]
bas 4, expnt(s) = [0.10475133]
CPU time:       119.61
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.31707378e+02 1.50044445e+02 2.89263975e+01 3.15127124e+01
 5.76461831e+00 9.39924438e+00 1.58124436e+00 3.56257705e+00
 1.04751332e-01 4.65194626e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986771858474762
cond(S) = 18.652098680459773
E1 = -19.036169167457466  E_coul = 4.5223311679508615
init E= -14.5138379995066
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301127288276997  LUMO = 4.63829700496646
  mo_energy =
[-4.70453688e+00 -3.01127288e-01  4.63829700e+00  4.02151266e+01
  3.61103943e+02]
E1 = -19.035759434030282  E_coul = 4.501668252137705
cycle= 1 E= -14.5340911818926  delta_E= -0.0203  |g|= 0.0224  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0193824
diis-c [-3.75678824e-04  1.00000000e+00]
  HOMO = -0.300274763250685  LUMO = 4.63702218946052
  mo_energy =
[-4.71595098e+00 -3.00274763e-01  4.63702219e+00  4.02002563e+01
  3.61070575e+02]
E1 = -19.033862250404287  E_coul = 4.499740405676096
cycle= 2 E= -14.5341218447282  delta_E= -3.07e-05  |g|= 0.00148  |ddm|= 0.00938
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00151678
diis-c [-1.01912879e-06 -6.21174843e-02  1.06211748e+00]
  HOMO = -0.300371719395605  LUMO = 4.63666365479126
  mo_energy =
[-4.71687903e+00 -3.00371719e-01  4.63666365e+00  4.01995818e+01
  3.61069638e+02]
E1 = -19.033746425856503  E_coul = 4.499624404511909
cycle= 3 E= -14.5341220213446  delta_E= -1.77e-07  |g|= 3.29e-05  |ddm|= 0.000719
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.70813e-05
diis-c [-4.02828651e-11  2.15718144e-03 -4.86766024e-02  1.04651942e+00]
  HOMO = -0.300372953174416  LUMO = 4.63666696969692
  mo_energy =
[-4.71687647e+00 -3.00372953e-01  4.63666697e+00  4.01996179e+01
  3.61069723e+02]
E1 = -19.033745541600442  E_coul = 4.499623520172992
cycle= 4 E= -14.5341220214275  delta_E= -8.29e-11  |g|= 2.71e-07  |ddm|= 1.39e-05
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.033745541600442  E_coul = 4.499623520172992
  HOMO = -0.300372955925387  LUMO = 4.63666707051403
  mo_energy =
[-4.71687629e+00 -3.00372956e-01  4.63666707e+00  4.01996184e+01
  3.61069724e+02]
E1 = -19.033745557796767  E_coul = 4.4996235363693176
Extra cycle  E= -14.5341220214275  delta_E=    0  |g|= 1.85e-08  |ddm|= 5.4e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [2.31707378e+02 2.89263975e+01 5.76461831e+00 1.58124436e+00
 1.04751332e-01]
E = -14.53412202142745
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.391731856        1
[INPUT] 0    0    [1    /1   ]  28.2287367787        1
[INPUT] 0    0    [1    /1   ]  6.45271479857        1
[INPUT] 0    0    [1    /1   ]  1.69620271036        1
[INPUT] 0    0    [1    /1   ]  0.104435458226       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.39173185562257, 1.0]], [0, [28.22873677865137, 1.0]], [0, [6.452714798566932, 1.0]], [0, [1.6962027103632398, 1.0]], [0, [0.10443545822635464, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.39173186]
bas 1, expnt(s) = [28.22873678]
bas 2, expnt(s) = [6.4527148]
bas 3, expnt(s) = [1.69620271]
bas 4, expnt(s) = [0.10443546]
CPU time:       120.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92391732e+02 1.30513317e+02 2.82287368e+01 3.09409474e+01
 6.45271480e+00 1.02287338e+01 1.69620271e+00 3.75511584e+00
 1.04435458e-01 4.64142147e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986637477306881
cond(S) = 21.15385652750385
E1 = -19.03881586224919  E_coul = 4.519568844011307
init E= -14.5192470182379
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301695290276214  LUMO = 5.28371320898964
  mo_energy =
[-4.70807611e+00 -3.01695290e-01  5.28371321e+00  4.20934501e+01
  3.14174678e+02]
E1 = -19.041951639085013  E_coul = 4.502497750098811
cycle= 1 E= -14.5394538889862  delta_E= -0.0202  |g|= 0.0173  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0160753
diis-c [-2.5841486e-04  1.0000000e+00]
  HOMO = -0.300570218510722  LUMO = 5.28254143242261
  mo_energy =
[-4.71791829e+00 -3.00570219e-01  5.28254143e+00  4.20812165e+01
  3.14153307e+02]
E1 = -19.040176552109752  E_coul = 4.5007003885822545
cycle= 2 E= -14.5394761635275  delta_E= -2.23e-05  |g|= 0.00111  |ddm|= 0.00796
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00126289
diis-c [-6.50890332e-07 -6.44150298e-02  1.06441503e+00]
  HOMO = -0.300648794294164  LUMO = 5.28216443570591
  mo_energy =
[-4.71879708e+00 -3.00648794e-01  5.28216444e+00  4.20803920e+01
  3.14152332e+02]
E1 = -19.040078462324434  E_coul = 4.50060219415566
cycle= 3 E= -14.5394762681688  delta_E= -1.05e-07  |g|= 1.75e-05  |ddm|= 0.000539
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.48986e-05
diis-c [-5.89647007e-11  7.85842676e-04 -2.62815753e-02  1.02549573e+00]
  HOMO = -0.30064900739559  LUMO = 5.2821706520626
  mo_energy =
[-4.71878857e+00 -3.00649007e-01  5.28217065e+00  4.20804231e+01
  3.14152394e+02]
E1 = -19.040078892488378  E_coul = 4.500602624302261
cycle= 4 E= -14.5394762681861  delta_E= -1.73e-11  |g|= 4.4e-07  |ddm|= 4.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.040078892488378  E_coul = 4.500602624302261
  HOMO = -0.300648974555666  LUMO = 5.28217104011115
  mo_energy =
[-4.71878785e+00 -3.00648975e-01  5.28217104e+00  4.20804244e+01
  3.14152396e+02]
E1 = -19.0400789642924  E_coul = 4.500602696106281
Extra cycle  E= -14.5394762681861  delta_E= -3.55e-15  |g|= 2.44e-08  |ddm|= 1.89e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [1.92391732e+02 2.82287368e+01 6.45271480e+00 1.69620271e+00
 1.04435458e-01]
E = -14.539476268186121
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.391731856        1
[INPUT] 0    0    [1    /1   ]  28.2287367787        1
[INPUT] 0    0    [1    /1   ]  6.45271479857        1
[INPUT] 0    0    [1    /1   ]  1.69620271036        1
[INPUT] 0    0    [1    /1   ]  0.104435458226       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.39173185562257, 1.0]], [0, [28.22873677865137, 1.0]], [0, [6.452714798566932, 1.0]], [0, [1.6962027103632398, 1.0]], [0, [0.10443545822635464, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.39173186]
bas 1, expnt(s) = [28.22873678]
bas 2, expnt(s) = [6.4527148]
bas 3, expnt(s) = [1.69620271]
bas 4, expnt(s) = [0.10443546]
CPU time:       121.05
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92391732e+02 1.30513317e+02 2.82287368e+01 3.09409474e+01
 6.45271480e+00 1.02287338e+01 1.69620271e+00 3.75511584e+00
 1.04435458e-01 4.64142147e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986637477306881
cond(S) = 21.15385652750385
E1 = -19.03881586224919  E_coul = 4.519568844011307
init E= -14.5192470182379
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301695290276214  LUMO = 5.28371320898964
  mo_energy =
[-4.70807611e+00 -3.01695290e-01  5.28371321e+00  4.20934501e+01
  3.14174678e+02]
E1 = -19.041951639085013  E_coul = 4.502497750098811
cycle= 1 E= -14.5394538889862  delta_E= -0.0202  |g|= 0.0173  |ddm|= 0.157
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0160753
diis-c [-2.5841486e-04  1.0000000e+00]
  HOMO = -0.300570218510722  LUMO = 5.28254143242261
  mo_energy =
[-4.71791829e+00 -3.00570219e-01  5.28254143e+00  4.20812165e+01
  3.14153307e+02]
E1 = -19.040176552109752  E_coul = 4.5007003885822545
cycle= 2 E= -14.5394761635275  delta_E= -2.23e-05  |g|= 0.00111  |ddm|= 0.00796
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00126289
diis-c [-6.50890332e-07 -6.44150298e-02  1.06441503e+00]
  HOMO = -0.300648794294164  LUMO = 5.28216443570591
  mo_energy =
[-4.71879708e+00 -3.00648794e-01  5.28216444e+00  4.20803920e+01
  3.14152332e+02]
E1 = -19.040078462324434  E_coul = 4.50060219415566
cycle= 3 E= -14.5394762681688  delta_E= -1.05e-07  |g|= 1.75e-05  |ddm|= 0.000539
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.48986e-05
diis-c [-5.89647007e-11  7.85842676e-04 -2.62815753e-02  1.02549573e+00]
  HOMO = -0.30064900739559  LUMO = 5.2821706520626
  mo_energy =
[-4.71878857e+00 -3.00649007e-01  5.28217065e+00  4.20804231e+01
  3.14152394e+02]
E1 = -19.040078892488378  E_coul = 4.500602624302261
cycle= 4 E= -14.5394762681861  delta_E= -1.73e-11  |g|= 4.4e-07  |ddm|= 4.92e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.040078892488378  E_coul = 4.500602624302261
  HOMO = -0.300648974555666  LUMO = 5.28217104011115
  mo_energy =
[-4.71878785e+00 -3.00648975e-01  5.28217104e+00  4.20804244e+01
  3.14152396e+02]
E1 = -19.0400789642924  E_coul = 4.500602696106281
Extra cycle  E= -14.5394762681861  delta_E= -3.55e-15  |g|= 2.44e-08  |ddm|= 1.89e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.15385652750385
E1 = -19.0400789642924  E_coul = 4.500602696106281
init E= -14.5394762681861
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300648972773185  LUMO = 5.28217105799057
  mo_energy =
[-4.71878781e+00 -3.00648973e-01  5.28217106e+00  4.20804245e+01
  3.14152396e+02]
E1 = -19.040078967859007  E_coul = 4.500602699672878
cycle= 1 E= -14.5394762681861  delta_E= -7.11e-15  |g|= 1.38e-09  |ddm|= 1.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.040078967859007  E_coul = 4.500602699672878
  HOMO = -0.300648972672457  LUMO = 5.28217105884696
  mo_energy =
[-4.71878781e+00 -3.00648973e-01  5.28217106e+00  4.20804245e+01
  3.14152396e+02]
E1 = -19.040078968043485  E_coul = 4.500602699857357
Extra cycle  E= -14.5394762681861  delta_E=    0  |g|= 8.24e-11  |ddm|= 6.36e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92391732e+02 2.82287368e+01 6.45271480e+00 1.69620271e+00
 1.04435458e-01]
grad_E = [ 3.10272186e-05 -6.26629073e-04  1.08220793e-03  7.42527371e-03
  1.78493704e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  191.430300454        1
[INPUT] 0    0    [1    /1   ]  29.511460546         1
[INPUT] 0    0    [1    /1   ]  6.39307865095        1
[INPUT] 0    0    [1    /1   ]  1.6618558447         1
[INPUT] 0    0    [1    /1   ]  0.104434853068       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [191.43030045394434, 1.0]], [0, [29.511460545991362, 1.0]], [0, [6.3930786509522, 1.0]], [0, [1.6618558447002478, 1.0]], [0, [0.10443485306840797, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [191.43030045]
bas 1, expnt(s) = [29.51146055]
bas 2, expnt(s) = [6.39307865]
bas 3, expnt(s) = [1.66185584]
bas 4, expnt(s) = [0.10443485]
CPU time:       123.49
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.91430300e+02 1.30023854e+02 2.95114605e+01 3.19895442e+01
 6.39307865e+00 1.01577509e+01 1.66185584e+00 3.69794149e+00
 1.04434853e-01 4.64140130e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866741837162625
cond(S) = 20.050135946389755
E1 = -19.039121720635194  E_coul = 4.519334216357292
init E= -14.5197875042779
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.30160467758327  LUMO = 5.15513695654587
  mo_energy =
[-4.70835528e+00 -3.01604678e-01  5.15513696e+00  4.29490779e+01
  3.16807668e+02]
E1 = -19.03927524669705  E_coul = 4.499660623672028
cycle= 1 E= -14.539614623025  delta_E= -0.0198  |g|= 0.0176  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0145722
diis-c [-2.12349397e-04  1.00000000e+00]
  HOMO = -0.300593389100746  LUMO = 5.15344134446084
  mo_energy =
[-4.71939481e+00 -3.00593389e-01  5.15344134e+00  4.29342240e+01
  3.16782017e+02]
E1 = -19.037407131088017  E_coul = 4.497768583815946
cycle= 2 E= -14.5396385472721  delta_E= -2.39e-05  |g|= 0.00116  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130451
diis-c [-4.96871634e-07 -8.15651622e-02  1.08156516e+00]
  HOMO = -0.300677838657116  LUMO = 5.15304243726868
  mo_energy =
[-4.72033443e+00 -3.00677839e-01  5.15304244e+00  4.29333350e+01
  3.16780931e+02]
E1 = -19.037300782896914  E_coul = 4.497662118871505
cycle= 3 E= -14.5396386640254  delta_E= -1.17e-07  |g|= 1.14e-05  |ddm|= 0.00058
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.30352e-05
diis-c [-4.80021461e-11  1.37061857e-03 -1.72129453e-02  1.01584233e+00]
  HOMO = -0.300676809517832  LUMO = 5.15305501253284
  mo_energy =
[-4.72031101e+00 -3.00676810e-01  5.15305501e+00  4.29333833e+01
  3.16781016e+02]
E1 = -19.037302799229405  E_coul = 4.497664135196908
cycle= 4 E= -14.5396386640325  delta_E= -7.09e-12  |g|= 3.57e-07  |ddm|= 4.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.037302799229405  E_coul = 4.497664135196908
  HOMO = -0.300676790067261  LUMO = 5.15305530365085
  mo_energy =
[-4.72031047e+00 -3.00676790e-01  5.15305530e+00  4.29333844e+01
  3.16781017e+02]
E1 = -19.037302851967144  E_coul = 4.497664187934646
Extra cycle  E= -14.5396386640325  delta_E= -1.78e-15  |g|= 1.95e-08  |ddm|= 1.16e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.91430300e+02 2.95114605e+01 6.39307865e+00 1.66185584e+00
 1.04434853e-01]
E = -14.539638664032498
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  191.430300454        1
[INPUT] 0    0    [1    /1   ]  29.511460546         1
[INPUT] 0    0    [1    /1   ]  6.39307865095        1
[INPUT] 0    0    [1    /1   ]  1.6618558447         1
[INPUT] 0    0    [1    /1   ]  0.104434853068       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [191.43030045394434, 1.0]], [0, [29.511460545991362, 1.0]], [0, [6.3930786509522, 1.0]], [0, [1.6618558447002478, 1.0]], [0, [0.10443485306840797, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [191.43030045]
bas 1, expnt(s) = [29.51146055]
bas 2, expnt(s) = [6.39307865]
bas 3, expnt(s) = [1.66185584]
bas 4, expnt(s) = [0.10443485]
CPU time:       124.21
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.91430300e+02 1.30023854e+02 2.95114605e+01 3.19895442e+01
 6.39307865e+00 1.01577509e+01 1.66185584e+00 3.69794149e+00
 1.04434853e-01 4.64140130e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866741837162625
cond(S) = 20.050135946389755
E1 = -19.039121720635194  E_coul = 4.519334216357292
init E= -14.5197875042779
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30160467758327  LUMO = 5.15513695654587
  mo_energy =
[-4.70835528e+00 -3.01604678e-01  5.15513696e+00  4.29490779e+01
  3.16807668e+02]
E1 = -19.03927524669705  E_coul = 4.499660623672028
cycle= 1 E= -14.539614623025  delta_E= -0.0198  |g|= 0.0176  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0145722
diis-c [-2.12349397e-04  1.00000000e+00]
  HOMO = -0.300593389100746  LUMO = 5.15344134446084
  mo_energy =
[-4.71939481e+00 -3.00593389e-01  5.15344134e+00  4.29342240e+01
  3.16782017e+02]
E1 = -19.037407131088017  E_coul = 4.497768583815946
cycle= 2 E= -14.5396385472721  delta_E= -2.39e-05  |g|= 0.00116  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00130451
diis-c [-4.96871634e-07 -8.15651622e-02  1.08156516e+00]
  HOMO = -0.300677838657116  LUMO = 5.15304243726868
  mo_energy =
[-4.72033443e+00 -3.00677839e-01  5.15304244e+00  4.29333350e+01
  3.16780931e+02]
E1 = -19.037300782896914  E_coul = 4.497662118871505
cycle= 3 E= -14.5396386640254  delta_E= -1.17e-07  |g|= 1.14e-05  |ddm|= 0.00058
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.30352e-05
diis-c [-4.80021461e-11  1.37061857e-03 -1.72129453e-02  1.01584233e+00]
  HOMO = -0.300676809517832  LUMO = 5.15305501253284
  mo_energy =
[-4.72031101e+00 -3.00676810e-01  5.15305501e+00  4.29333833e+01
  3.16781016e+02]
E1 = -19.037302799229405  E_coul = 4.497664135196908
cycle= 4 E= -14.5396386640325  delta_E= -7.09e-12  |g|= 3.57e-07  |ddm|= 4.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.037302799229405  E_coul = 4.497664135196908
  HOMO = -0.300676790067261  LUMO = 5.15305530365085
  mo_energy =
[-4.72031047e+00 -3.00676790e-01  5.15305530e+00  4.29333844e+01
  3.16781017e+02]
E1 = -19.037302851967144  E_coul = 4.497664187934646
Extra cycle  E= -14.5396386640325  delta_E= -1.78e-15  |g|= 1.95e-08  |ddm|= 1.16e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.050135946389755
E1 = -19.037302851967144  E_coul = 4.497664187934646
init E= -14.5396386640325
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300676788999438  LUMO = 5.1530553174423
  mo_energy =
[-4.72031045e+00 -3.00676789e-01  5.15305532e+00  4.29333845e+01
  3.16781017e+02]
E1 = -19.03730285457499  E_coul = 4.497664190542482
cycle= 1 E= -14.5396386640325  delta_E= -8.88e-15  |g|= 1.03e-09  |ddm|= 6.14e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03730285457499  E_coul = 4.497664190542482
  HOMO = -0.300676788942933  LUMO = 5.15305531811915
  mo_energy =
[-4.72031045e+00 -3.00676789e-01  5.15305532e+00  4.29333845e+01
  3.16781017e+02]
E1 = -19.037302854708145  E_coul = 4.497664190675641
Extra cycle  E= -14.5396386640325  delta_E= 3.55e-15  |g|= 5.33e-11  |ddm|= 3.34e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.91430300e+02 2.95114605e+01 6.39307865e+00 1.66185584e+00
 1.04434853e-01]
grad_E = [-2.75540487e-05  6.28915211e-04 -3.54334897e-03  6.85854926e-03
 -1.16514268e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  195.109248296        1
[INPUT] 0    0    [1    /1   ]  29.4510424236        1
[INPUT] 0    0    [1    /1   ]  6.50314230298        1
[INPUT] 0    0    [1    /1   ]  1.67693053625        1
[INPUT] 0    0    [1    /1   ]  0.104400123107       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [195.1092482955696, 1.0]], [0, [29.451042423598057, 1.0]], [0, [6.503142302978263, 1.0]], [0, [1.6769305362518223, 1.0]], [0, [0.1044001231068236, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [195.1092483]
bas 1, expnt(s) = [29.45104242]
bas 2, expnt(s) = [6.5031423]
bas 3, expnt(s) = [1.67693054]
bas 4, expnt(s) = [0.10440012]
CPU time:       126.74
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.95109248e+02 1.31893507e+02 2.94510424e+01 3.19404130e+01
 6.50314230e+00 1.02886281e+01 1.67693054e+00 3.72307109e+00
 1.04400123e-01 4.64024362e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986641642395321
cond(S) = 20.13096702998814
E1 = -19.03863521292774  E_coul = 4.5189026845572196
init E= -14.5197325283705
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301669870517896  LUMO = 5.25358514735796
  mo_energy =
[-4.70861303e+00 -3.01669871e-01  5.25358515e+00  4.32783695e+01
  3.21441167e+02]
E1 = -19.039091995944396  E_coul = 4.499272455128761
cycle= 1 E= -14.5398195408156  delta_E= -0.0201  |g|= 0.017  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0146925
diis-c [-2.15869958e-04  1.00000000e+00]
  HOMO = -0.300621968850585  LUMO = 5.25171648054815
  mo_energy =
[-4.71966226e+00 -3.00621969e-01  5.25171648e+00  4.32634029e+01
  3.21416241e+02]
E1 = -19.03721124666427  E_coul = 4.497368897819916
cycle= 2 E= -14.5398423488444  delta_E= -2.28e-05  |g|= 0.00111  |ddm|= 0.00805
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00126935
diis-c [-5.33708051e-07 -7.61241471e-02  1.07612415e+00]
  HOMO = -0.300703646096154  LUMO = 5.25130493740929
  mo_energy =
[-4.72060564e+00 -3.00703646e-01  5.25130494e+00  4.32624578e+01
  3.21415101e+02]
E1 = -19.03710603943007  E_coul = 4.497263583711159
cycle= 3 E= -14.5398424557189  delta_E= -1.07e-07  |g|= 1.15e-05  |ddm|= 0.000552
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.40035e-05
diis-c [-6.74783459e-11  8.42916527e-04 -1.56682752e-02  1.01482536e+00]
  HOMO = -0.300702967272799  LUMO = 5.2513159223589
  mo_energy =
[-4.72058645e+00 -3.00702967e-01  5.25131592e+00  4.32625012e+01
  3.21415177e+02]
E1 = -19.03710763704284  E_coul = 4.497265181318177
cycle= 4 E= -14.5398424557247  delta_E= -5.75e-12  |g|= 4.65e-07  |ddm|= 2.75e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03710763704284  E_coul = 4.497265181318177
  HOMO = -0.300702935311143  LUMO = 5.25131632533603
  mo_energy =
[-4.72058570e+00 -3.00702935e-01  5.25131633e+00  4.32625026e+01
  3.21415180e+02]
E1 = -19.037107710396736  E_coul = 4.497265254672062
Extra cycle  E= -14.5398424557247  delta_E= -1.07e-14  |g|= 2.52e-08  |ddm|= 1.81e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.95109248e+02 2.94510424e+01 6.50314230e+00 1.67693054e+00
 1.04400123e-01]
E = -14.539842455724674
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  195.109248296        1
[INPUT] 0    0    [1    /1   ]  29.4510424236        1
[INPUT] 0    0    [1    /1   ]  6.50314230298        1
[INPUT] 0    0    [1    /1   ]  1.67693053625        1
[INPUT] 0    0    [1    /1   ]  0.104400123107       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [195.1092482955696, 1.0]], [0, [29.451042423598057, 1.0]], [0, [6.503142302978263, 1.0]], [0, [1.6769305362518223, 1.0]], [0, [0.1044001231068236, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [195.1092483]
bas 1, expnt(s) = [29.45104242]
bas 2, expnt(s) = [6.5031423]
bas 3, expnt(s) = [1.67693054]
bas 4, expnt(s) = [0.10440012]
CPU time:       127.46
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.95109248e+02 1.31893507e+02 2.94510424e+01 3.19404130e+01
 6.50314230e+00 1.02886281e+01 1.67693054e+00 3.72307109e+00
 1.04400123e-01 4.64024362e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.986641642395321
cond(S) = 20.13096702998814
E1 = -19.03863521292774  E_coul = 4.5189026845572196
init E= -14.5197325283705
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301669870517896  LUMO = 5.25358514735796
  mo_energy =
[-4.70861303e+00 -3.01669871e-01  5.25358515e+00  4.32783695e+01
  3.21441167e+02]
E1 = -19.039091995944396  E_coul = 4.499272455128761
cycle= 1 E= -14.5398195408156  delta_E= -0.0201  |g|= 0.017  |ddm|= 0.158
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0146925
diis-c [-2.15869958e-04  1.00000000e+00]
  HOMO = -0.300621968850585  LUMO = 5.25171648054815
  mo_energy =
[-4.71966226e+00 -3.00621969e-01  5.25171648e+00  4.32634029e+01
  3.21416241e+02]
E1 = -19.03721124666427  E_coul = 4.497368897819916
cycle= 2 E= -14.5398423488444  delta_E= -2.28e-05  |g|= 0.00111  |ddm|= 0.00805
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00126935
diis-c [-5.33708051e-07 -7.61241471e-02  1.07612415e+00]
  HOMO = -0.300703646096154  LUMO = 5.25130493740929
  mo_energy =
[-4.72060564e+00 -3.00703646e-01  5.25130494e+00  4.32624578e+01
  3.21415101e+02]
E1 = -19.03710603943007  E_coul = 4.497263583711159
cycle= 3 E= -14.5398424557189  delta_E= -1.07e-07  |g|= 1.15e-05  |ddm|= 0.000552
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.40035e-05
diis-c [-6.74783459e-11  8.42916527e-04 -1.56682752e-02  1.01482536e+00]
  HOMO = -0.300702967272799  LUMO = 5.2513159223589
  mo_energy =
[-4.72058645e+00 -3.00702967e-01  5.25131592e+00  4.32625012e+01
  3.21415177e+02]
E1 = -19.03710763704284  E_coul = 4.497265181318177
cycle= 4 E= -14.5398424557247  delta_E= -5.75e-12  |g|= 4.65e-07  |ddm|= 2.75e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03710763704284  E_coul = 4.497265181318177
  HOMO = -0.300702935311143  LUMO = 5.25131632533603
  mo_energy =
[-4.72058570e+00 -3.00702935e-01  5.25131633e+00  4.32625026e+01
  3.21415180e+02]
E1 = -19.037107710396736  E_coul = 4.497265254672062
Extra cycle  E= -14.5398424557247  delta_E= -1.07e-14  |g|= 2.52e-08  |ddm|= 1.81e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.13096702998814
E1 = -19.037107710396736  E_coul = 4.497265254672062
init E= -14.5398424557247
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300702933594953  LUMO = 5.25131634400008
  mo_energy =
[-4.72058567e+00 -3.00702934e-01  5.25131634e+00  4.32625027e+01
  3.21415180e+02]
E1 = -19.037107714023307  E_coul = 4.4972652582986266
cycle= 1 E= -14.5398424557247  delta_E= -7.11e-15  |g|= 1.36e-09  |ddm|= 1e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.037107714023307  E_coul = 4.4972652582986266
  HOMO = -0.300702933499859  LUMO = 5.25131634489662
  mo_energy =
[-4.72058567e+00 -3.00702933e-01  5.25131634e+00  4.32625027e+01
  3.21415180e+02]
E1 = -19.037107714209377  E_coul = 4.497265258484698
Extra cycle  E= -14.5398424557247  delta_E= 3.55e-15  |g|= 7.67e-11  |ddm|= 5.81e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.95109248e+02 2.94510424e+01 6.50314230e+00 1.67693054e+00
 1.04400123e-01]
grad_E = [-1.96258461e-06  3.68418506e-05  6.38412405e-05  9.50563938e-04
 -1.27953994e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.733471474        1
[INPUT] 0    0    [1    /1   ]  28.951800574         1
[INPUT] 0    0    [1    /1   ]  6.41454227576        1
[INPUT] 0    0    [1    /1   ]  1.66459319921        1
[INPUT] 0    0    [1    /1   ]  0.104429513791       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.73347147396197, 1.0]], [0, [28.95180057404655, 1.0]], [0, [6.414542275764937, 1.0]], [0, [1.6645931992089942, 1.0]], [0, [0.10442951379136103, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.73347147]
bas 1, expnt(s) = [28.95180057]
bas 2, expnt(s) = [6.41454228]
bas 3, expnt(s) = [1.6645932]
bas 4, expnt(s) = [0.10442951]
CPU time:       129.90
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92733471e+02 1.30687149e+02 2.89518006e+01 3.15334660e+01
 6.41454228e+00 1.01833173e+01 1.66459320e+00 3.70250890e+00
 1.04429514e-01 4.64122333e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866729020479506
cond(S) = 20.329608450077657
E1 = -19.039152276937536  E_coul = 4.519335617033236
init E= -14.5198166599043
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301602702332786  LUMO = 5.17701721691181
  mo_energy =
[-4.70846776e+00 -3.01602702e-01  5.17701722e+00  4.25172247e+01
  3.16662769e+02]
E1 = -19.038858188315743  E_coul = 4.499024795853918
cycle= 1 E= -14.5398333924618  delta_E= -0.02  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148065
diis-c [-2.19231164e-04  1.00000000e+00]
  HOMO = -0.300600395806301  LUMO = 5.17499172924448
  mo_energy =
[-4.71981485e+00 -3.00600396e-01  5.17499173e+00  4.25018978e+01
  3.16637186e+02]
E1 = -19.036929347303243  E_coul = 4.497072581768173
cycle= 2 E= -14.5398567655351  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128546
diis-c [-5.69714107e-07 -7.56924259e-02  1.07569243e+00]
  HOMO = -0.300684323296173  LUMO = 5.1745704431518
  mo_energy =
[-4.72078177e+00 -3.00684323e-01  5.17457044e+00  4.25009277e+01
  3.16636013e+02]
E1 = -19.03681976273743  E_coul = 4.496962885435531
cycle= 3 E= -14.5398568773019  delta_E= -1.12e-07  |g|= 1.21e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.54185e-05
diis-c [-7.05502076e-11  8.42620280e-04 -1.68807905e-02  1.01603817e+00]
  HOMO = -0.300683723146357  LUMO = 5.17458102937522
  mo_energy =
[-4.72076333e+00 -3.00683723e-01  5.17458103e+00  4.25009704e+01
  3.16636088e+02]
E1 = -19.036821274765167  E_coul = 4.496964397457075
cycle= 4 E= -14.5398568773081  delta_E= -6.19e-12  |g|= 4.84e-07  |ddm|= 2.52e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036821274765167  E_coul = 4.496964397457075
  HOMO = -0.300683689122619  LUMO = 5.17458144580885
  mo_energy =
[-4.72076255e+00 -3.00683689e-01  5.17458145e+00  4.25009719e+01
  3.16636091e+02]
E1 = -19.03682135245831  E_coul = 4.496964475150218
Extra cycle  E= -14.5398568773081  delta_E= -1.78e-15  |g|= 2.66e-08  |ddm|= 1.94e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92733471e+02 2.89518006e+01 6.41454228e+00 1.66459320e+00
 1.04429514e-01]
E = -14.539856877308093
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.733471474        1
[INPUT] 0    0    [1    /1   ]  28.951800574         1
[INPUT] 0    0    [1    /1   ]  6.41454227576        1
[INPUT] 0    0    [1    /1   ]  1.66459319921        1
[INPUT] 0    0    [1    /1   ]  0.104429513791       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.73347147396197, 1.0]], [0, [28.95180057404655, 1.0]], [0, [6.414542275764937, 1.0]], [0, [1.6645931992089942, 1.0]], [0, [0.10442951379136103, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.73347147]
bas 1, expnt(s) = [28.95180057]
bas 2, expnt(s) = [6.41454228]
bas 3, expnt(s) = [1.6645932]
bas 4, expnt(s) = [0.10442951]
CPU time:       130.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92733471e+02 1.30687149e+02 2.89518006e+01 3.15334660e+01
 6.41454228e+00 1.01833173e+01 1.66459320e+00 3.70250890e+00
 1.04429514e-01 4.64122333e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866729020479506
cond(S) = 20.329608450077657
E1 = -19.039152276937536  E_coul = 4.519335617033236
init E= -14.5198166599043
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301602702332786  LUMO = 5.17701721691181
  mo_energy =
[-4.70846776e+00 -3.01602702e-01  5.17701722e+00  4.25172247e+01
  3.16662769e+02]
E1 = -19.038858188315743  E_coul = 4.499024795853918
cycle= 1 E= -14.5398333924618  delta_E= -0.02  |g|= 0.0172  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0148065
diis-c [-2.19231164e-04  1.00000000e+00]
  HOMO = -0.300600395806301  LUMO = 5.17499172924448
  mo_energy =
[-4.71981485e+00 -3.00600396e-01  5.17499173e+00  4.25018978e+01
  3.16637186e+02]
E1 = -19.036929347303243  E_coul = 4.497072581768173
cycle= 2 E= -14.5398567655351  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00824
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128546
diis-c [-5.69714107e-07 -7.56924259e-02  1.07569243e+00]
  HOMO = -0.300684323296173  LUMO = 5.1745704431518
  mo_energy =
[-4.72078177e+00 -3.00684323e-01  5.17457044e+00  4.25009277e+01
  3.16636013e+02]
E1 = -19.03681976273743  E_coul = 4.496962885435531
cycle= 3 E= -14.5398568773019  delta_E= -1.12e-07  |g|= 1.21e-05  |ddm|= 0.00057
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.54185e-05
diis-c [-7.05502076e-11  8.42620280e-04 -1.68807905e-02  1.01603817e+00]
  HOMO = -0.300683723146357  LUMO = 5.17458102937522
  mo_energy =
[-4.72076333e+00 -3.00683723e-01  5.17458103e+00  4.25009704e+01
  3.16636088e+02]
E1 = -19.036821274765167  E_coul = 4.496964397457075
cycle= 4 E= -14.5398568773081  delta_E= -6.19e-12  |g|= 4.84e-07  |ddm|= 2.52e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036821274765167  E_coul = 4.496964397457075
  HOMO = -0.300683689122619  LUMO = 5.17458144580885
  mo_energy =
[-4.72076255e+00 -3.00683689e-01  5.17458145e+00  4.25009719e+01
  3.16636091e+02]
E1 = -19.03682135245831  E_coul = 4.496964475150218
Extra cycle  E= -14.5398568773081  delta_E= -1.78e-15  |g|= 2.66e-08  |ddm|= 1.94e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.329608450077657
E1 = -19.03682135245831  E_coul = 4.496964475150218
init E= -14.5398568773081
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300683687268727  LUMO = 5.17458146532035
  mo_energy =
[-4.72076251e+00 -3.00683687e-01  5.17458147e+00  4.25009719e+01
  3.16636091e+02]
E1 = -19.03682135635298  E_coul = 4.49696447904488
cycle= 1 E= -14.5398568773081  delta_E= -7.11e-15  |g|= 1.47e-09  |ddm|= 1.09e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.03682135635298  E_coul = 4.49696447904488
  HOMO = -0.30068368716427  LUMO = 5.17458146626984
  mo_energy =
[-4.72076251e+00 -3.00683687e-01  5.17458147e+00  4.25009719e+01
  3.16636091e+02]
E1 = -19.03682135655588  E_coul = 4.496964479247776
Extra cycle  E= -14.5398568773081  delta_E= -3.55e-15  |g|= 8.44e-11  |ddm|= 6.46e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92733471e+02 2.89518006e+01 6.41454228e+00 1.66459320e+00
 1.04429514e-01]
grad_E = [ 2.11336363e-06 -1.61062398e-05 -1.64823147e-04  1.21992580e-03
 -3.17138038e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.312842059        1
[INPUT] 0    0    [1    /1   ]  28.9631945466        1
[INPUT] 0    0    [1    /1   ]  6.41289180869        1
[INPUT] 0    0    [1    /1   ]  1.6622538026         1
[INPUT] 0    0    [1    /1   ]  0.104436877415       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.31284205945525, 1.0]], [0, [28.963194546568765, 1.0]], [0, [6.4128918086917714, 1.0]], [0, [1.6622538025956934, 1.0]], [0, [0.1044368774151691, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.31284206]
bas 1, expnt(s) = [28.96319455]
bas 2, expnt(s) = [6.41289181]
bas 3, expnt(s) = [1.6622538]
bas 4, expnt(s) = [0.10443688]
CPU time:       133.17
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92312842e+02 1.30473177e+02 2.89631945e+01 3.15427730e+01
 6.41289181e+00 1.01813522e+01 1.66225380e+00 3.69860562e+00
 1.04436877e-01 4.64146877e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866745172143427
cond(S) = 20.30935326150675
E1 = -19.03918457225949  E_coul = 4.519365663471596
init E= -14.5198189087879
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301589574973067  LUMO = 5.16986915176913
  mo_energy =
[-4.70846653e+00 -3.01589575e-01  5.16986915e+00  4.25138814e+01
  3.16183206e+02]
E1 = -19.038604721288667  E_coul = 4.498769143645643
cycle= 1 E= -14.539835577643  delta_E= -0.02  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147275
diis-c [-2.16898177e-04  1.00000000e+00]
  HOMO = -0.300596448955885  LUMO = 5.16775957289709
  mo_energy =
[-4.71994774e+00 -3.00596449e-01  5.16775957e+00  4.24982796e+01
  3.16157303e+02]
E1 = -19.036660002783904  E_coul = 4.496801009898172
cycle= 2 E= -14.5398589928857  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00826
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128593
diis-c [-5.66584804e-07 -7.62941687e-02  1.07629417e+00]
  HOMO = -0.300680761646356  LUMO = 5.16733333608377
  mo_energy =
[-4.72092343e+00 -3.00680762e-01  5.16733334e+00  4.24972923e+01
  3.16156107e+02]
E1 = -19.036549293177927  E_coul = 4.496690188326594
cycle= 3 E= -14.5398591048513  delta_E= -1.12e-07  |g|= 1.2e-05  |ddm|= 0.000572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.49436e-05
diis-c [-7.26128803e-11  8.26208784e-04 -1.61636507e-02  1.01533744e+00]
  HOMO = -0.30068011400584  LUMO = 5.16734420144737
  mo_energy =
[-4.72090438e+00 -3.00680114e-01  5.16734420e+00  4.24973357e+01
  3.16156184e+02]
E1 = -19.036550874895763  E_coul = 4.496691770038218
cycle= 4 E= -14.5398591048575  delta_E= -6.21e-12  |g|= 4.95e-07  |ddm|= 2.67e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036550874895763  E_coul = 4.496691770038218
  HOMO = -0.300680079376934  LUMO = 5.16734462544348
  mo_energy =
[-4.72090359e+00 -3.00680079e-01  5.16734463e+00  4.24973372e+01
  3.16156186e+02]
E1 = -19.036550954068886  E_coul = 4.496691849211326
Extra cycle  E= -14.5398591048576  delta_E= -1.42e-14  |g|= 2.72e-08  |ddm|= 1.98e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92312842e+02 2.89631945e+01 6.41289181e+00 1.66225380e+00
 1.04436877e-01]
E = -14.539859104857559
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.312842059        1
[INPUT] 0    0    [1    /1   ]  28.9631945466        1
[INPUT] 0    0    [1    /1   ]  6.41289180869        1
[INPUT] 0    0    [1    /1   ]  1.6622538026         1
[INPUT] 0    0    [1    /1   ]  0.104436877415       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.31284205945525, 1.0]], [0, [28.963194546568765, 1.0]], [0, [6.4128918086917714, 1.0]], [0, [1.6622538025956934, 1.0]], [0, [0.1044368774151691, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.31284206]
bas 1, expnt(s) = [28.96319455]
bas 2, expnt(s) = [6.41289181]
bas 3, expnt(s) = [1.6622538]
bas 4, expnt(s) = [0.10443688]
CPU time:       133.92
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92312842e+02 1.30473177e+02 2.89631945e+01 3.15427730e+01
 6.41289181e+00 1.01813522e+01 1.66225380e+00 3.69860562e+00
 1.04436877e-01 4.64146877e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866745172143427
cond(S) = 20.30935326150675
E1 = -19.03918457225949  E_coul = 4.519365663471596
init E= -14.5198189087879
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301589574973067  LUMO = 5.16986915176913
  mo_energy =
[-4.70846653e+00 -3.01589575e-01  5.16986915e+00  4.25138814e+01
  3.16183206e+02]
E1 = -19.038604721288667  E_coul = 4.498769143645643
cycle= 1 E= -14.539835577643  delta_E= -0.02  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147275
diis-c [-2.16898177e-04  1.00000000e+00]
  HOMO = -0.300596448955885  LUMO = 5.16775957289709
  mo_energy =
[-4.71994774e+00 -3.00596449e-01  5.16775957e+00  4.24982796e+01
  3.16157303e+02]
E1 = -19.036660002783904  E_coul = 4.496801009898172
cycle= 2 E= -14.5398589928857  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00826
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128593
diis-c [-5.66584804e-07 -7.62941687e-02  1.07629417e+00]
  HOMO = -0.300680761646356  LUMO = 5.16733333608377
  mo_energy =
[-4.72092343e+00 -3.00680762e-01  5.16733334e+00  4.24972923e+01
  3.16156107e+02]
E1 = -19.036549293177927  E_coul = 4.496690188326594
cycle= 3 E= -14.5398591048513  delta_E= -1.12e-07  |g|= 1.2e-05  |ddm|= 0.000572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.49436e-05
diis-c [-7.26128803e-11  8.26208784e-04 -1.61636507e-02  1.01533744e+00]
  HOMO = -0.30068011400584  LUMO = 5.16734420144737
  mo_energy =
[-4.72090438e+00 -3.00680114e-01  5.16734420e+00  4.24973357e+01
  3.16156184e+02]
E1 = -19.036550874895763  E_coul = 4.496691770038218
cycle= 4 E= -14.5398591048575  delta_E= -6.21e-12  |g|= 4.95e-07  |ddm|= 2.67e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036550874895763  E_coul = 4.496691770038218
  HOMO = -0.300680079376934  LUMO = 5.16734462544348
  mo_energy =
[-4.72090359e+00 -3.00680079e-01  5.16734463e+00  4.24973372e+01
  3.16156186e+02]
E1 = -19.036550954068886  E_coul = 4.496691849211326
Extra cycle  E= -14.5398591048576  delta_E= -1.42e-14  |g|= 2.72e-08  |ddm|= 1.98e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.30935326150675
E1 = -19.036550954068886  E_coul = 4.496691849211326
init E= -14.5398591048576
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300680077491468  LUMO = 5.1673446453377
  mo_energy =
[-4.72090355e+00 -3.00680077e-01  5.16734465e+00  4.24973373e+01
  3.16156186e+02]
E1 = -19.036550958041147  E_coul = 4.496691853183583
cycle= 1 E= -14.5398591048576  delta_E= -5.33e-15  |g|= 1.49e-09  |ddm|= 1.11e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.036550958041147  E_coul = 4.496691853183583
  HOMO = -0.300680077385243  LUMO = 5.167344646307
  mo_energy =
[-4.72090355e+00 -3.00680077e-01  5.16734465e+00  4.24973373e+01
  3.16156186e+02]
E1 = -19.036550958248206  E_coul = 4.496691853390637
Extra cycle  E= -14.5398591048576  delta_E= -5.33e-15  |g|= 8.58e-11  |ddm|= 6.56e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92312842e+02 2.89631945e+01 6.41289181e+00 1.66225380e+00
 1.04436877e-01]
grad_E = [ 2.53359518e-07  1.45769696e-06 -6.12637502e-05  3.44874645e-04
 -1.42171034e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.12671226         1
[INPUT] 0    0    [1    /1   ]  28.9507206786        1
[INPUT] 0    0    [1    /1   ]  6.41053531987        1
[INPUT] 0    0    [1    /1   ]  1.66121059384        1
[INPUT] 0    0    [1    /1   ]  0.104441202485       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.12671226013924, 1.0]], [0, [28.9507206785877, 1.0]], [0, [6.410535319868113, 1.0]], [0, [1.6612105938420099, 1.0]], [0, [0.10444120248462711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.12671226]
bas 1, expnt(s) = [28.95072068]
bas 2, expnt(s) = [6.41053532]
bas 3, expnt(s) = [1.66121059]
bas 4, expnt(s) = [0.1044412]
CPU time:       136.42
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+02 1.30378457e+02 2.89507207e+01 3.15325838e+01
 6.41053532e+00 1.01785461e+01 1.66121059e+00 3.69686459e+00
 1.04441202e-01 4.64161294e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866756813668216
cond(S) = 20.309834098814395
E1 = -19.039211349198002  E_coul = 4.519392772234943
init E= -14.5198185769631
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301582811531506  LUMO = 5.16594290256011
  mo_energy =
[-4.70845962e+00 -3.01582812e-01  5.16594290e+00  4.24917139e+01
  3.15909512e+02]
E1 = -19.03851755441403  E_coul = 4.498681855595968
cycle= 1 E= -14.5398356988181  delta_E= -0.02  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147083
diis-c [-2.16334047e-04  1.00000000e+00]
  HOMO = -0.300593724990565  LUMO = 5.16379926736306
  mo_energy =
[-4.71999417e+00 -3.00593725e-01  5.16379927e+00  4.24760088e+01
  3.15883488e+02]
E1 = -19.036565942234294  E_coul = 4.496706808017788
cycle= 2 E= -14.5398591342165  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00827
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128624
diis-c [-5.67471264e-07 -7.63986343e-02  1.07639863e+00]
  HOMO = -0.300678207009554  LUMO = 5.16337097594092
  mo_energy =
[-4.72097352e+00 -3.00678207e-01  5.16337098e+00  4.24750145e+01
  3.15882283e+02]
E1 = -19.03645473278321  E_coul = 4.496595486477762
cycle= 3 E= -14.5398592463054  delta_E= -1.12e-07  |g|= 1.21e-05  |ddm|= 0.000573
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.48795e-05
diis-c [-7.35528642e-11  8.16478516e-04 -1.59844818e-02  1.01516800e+00]
  HOMO = -0.300677551810131  LUMO = 5.16338189325415
  mo_energy =
[-4.72095437e+00 -3.00677552e-01  5.16338189e+00  4.24750580e+01
  3.15882360e+02]
E1 = -19.036456327679122  E_coul = 4.496597081367435
cycle= 4 E= -14.5398592463117  delta_E= -6.24e-12  |g|= 5.01e-07  |ddm|= 2.7e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036456327679122  E_coul = 4.496597081367435
  HOMO = -0.300677516820555  LUMO = 5.1633823211268
  mo_energy =
[-4.72095357e+00 -3.00677517e-01  5.16338232e+00  4.24750595e+01
  3.15882362e+02]
E1 = -19.036456407651787  E_coul = 4.49659716134008
Extra cycle  E= -14.5398592463117  delta_E= -1.95e-14  |g|= 2.75e-08  |ddm|= 2e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+02 2.89507207e+01 6.41053532e+00 1.66121059e+00
 1.04441202e-01]
E = -14.539859246311707
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.12671226         1
[INPUT] 0    0    [1    /1   ]  28.9507206786        1
[INPUT] 0    0    [1    /1   ]  6.41053531987        1
[INPUT] 0    0    [1    /1   ]  1.66121059384        1
[INPUT] 0    0    [1    /1   ]  0.104441202485       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.12671226013924, 1.0]], [0, [28.9507206785877, 1.0]], [0, [6.410535319868113, 1.0]], [0, [1.6612105938420099, 1.0]], [0, [0.10444120248462711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.12671226]
bas 1, expnt(s) = [28.95072068]
bas 2, expnt(s) = [6.41053532]
bas 3, expnt(s) = [1.66121059]
bas 4, expnt(s) = [0.1044412]
CPU time:       137.16
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+02 1.30378457e+02 2.89507207e+01 3.15325838e+01
 6.41053532e+00 1.01785461e+01 1.66121059e+00 3.69686459e+00
 1.04441202e-01 4.64161294e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866756813668216
cond(S) = 20.309834098814395
E1 = -19.039211349198002  E_coul = 4.519392772234943
init E= -14.5198185769631
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301582811531506  LUMO = 5.16594290256011
  mo_energy =
[-4.70845962e+00 -3.01582812e-01  5.16594290e+00  4.24917139e+01
  3.15909512e+02]
E1 = -19.03851755441403  E_coul = 4.498681855595968
cycle= 1 E= -14.5398356988181  delta_E= -0.02  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147083
diis-c [-2.16334047e-04  1.00000000e+00]
  HOMO = -0.300593724990565  LUMO = 5.16379926736306
  mo_energy =
[-4.71999417e+00 -3.00593725e-01  5.16379927e+00  4.24760088e+01
  3.15883488e+02]
E1 = -19.036565942234294  E_coul = 4.496706808017788
cycle= 2 E= -14.5398591342165  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00827
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128624
diis-c [-5.67471264e-07 -7.63986343e-02  1.07639863e+00]
  HOMO = -0.300678207009554  LUMO = 5.16337097594092
  mo_energy =
[-4.72097352e+00 -3.00678207e-01  5.16337098e+00  4.24750145e+01
  3.15882283e+02]
E1 = -19.03645473278321  E_coul = 4.496595486477762
cycle= 3 E= -14.5398592463054  delta_E= -1.12e-07  |g|= 1.21e-05  |ddm|= 0.000573
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.48795e-05
diis-c [-7.35528642e-11  8.16478516e-04 -1.59844818e-02  1.01516800e+00]
  HOMO = -0.300677551810131  LUMO = 5.16338189325415
  mo_energy =
[-4.72095437e+00 -3.00677552e-01  5.16338189e+00  4.24750580e+01
  3.15882360e+02]
E1 = -19.036456327679122  E_coul = 4.496597081367435
cycle= 4 E= -14.5398592463117  delta_E= -6.24e-12  |g|= 5.01e-07  |ddm|= 2.7e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036456327679122  E_coul = 4.496597081367435
  HOMO = -0.300677516820555  LUMO = 5.1633823211268
  mo_energy =
[-4.72095357e+00 -3.00677517e-01  5.16338232e+00  4.24750595e+01
  3.15882362e+02]
E1 = -19.036456407651787  E_coul = 4.49659716134008
Extra cycle  E= -14.5398592463117  delta_E= -1.95e-14  |g|= 2.75e-08  |ddm|= 2e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.309834098814395
E1 = -19.036456407651787  E_coul = 4.49659716134008
init E= -14.5398592463117
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300677514915512  LUMO = 5.1633823412176
  mo_energy =
[-4.72095353e+00 -3.00677515e-01  5.16338234e+00  4.24750596e+01
  3.15882362e+02]
E1 = -19.036456411666816  E_coul = 4.496597165355098
cycle= 1 E= -14.5398592463117  delta_E= -1.07e-14  |g|= 1.51e-09  |ddm|= 1.12e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.036456411666816  E_coul = 4.496597165355098
  HOMO = -0.30067751480813  LUMO = 5.16338234219715
  mo_energy =
[-4.72095353e+00 -3.00677515e-01  5.16338234e+00  4.24750596e+01
  3.15882362e+02]
E1 = -19.036456411876216  E_coul = 4.496597165564497
Extra cycle  E= -14.5398592463117  delta_E= -1.78e-15  |g|= 8.67e-11  |ddm|= 6.63e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+02 2.89507207e+01 6.41053532e+00 1.66121059e+00
 1.04441202e-01]
grad_E = [-1.72410937e-08  2.57228070e-07 -1.24319175e-06  4.22846844e-06
 -9.72492829e-06]
 message: Optimization terminated successfully
 success: True
  status: 0
     fun: -14.539859246311707
       x: [ 1.921e+02  2.895e+01  6.411e+00  1.661e+00  1.044e-01]
     nit: 50
     jac: [-1.724e-08  2.572e-07 -1.243e-06  4.228e-06 -9.725e-06]
    nfev: 54
    njev: 50
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]
exp_Be_4s = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]

N = 5

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_4s[:]
exps[0, 0] = np.max(exp_Be_4s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:27:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.12671226         1
[INPUT] 0    0    [1    /1   ]  28.9507206786        1
[INPUT] 0    0    [1    /1   ]  6.41053531987        1
[INPUT] 0    0    [1    /1   ]  1.66121059384        1
[INPUT] 0    0    [1    /1   ]  0.104441202485       1

nuclear repulsion = 0
number of shells = 5
number of NR pGTOs = 5
number of NR cGTOs = 5
basis = {'Be': [[0, [192.12671226013924, 1.0]], [0, [28.9507206785877, 1.0]], [0, [6.410535319868113, 1.0]], [0, [1.6612105938420099, 1.0]], [0, [0.10444120248462711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.12671226]
bas 1, expnt(s) = [28.95072068]
bas 2, expnt(s) = [6.41053532]
bas 3, expnt(s) = [1.66121059]
bas 4, expnt(s) = [0.1044412]
CPU time:       139.65
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92126712e+02 1.30378457e+02 2.89507207e+01 3.15325838e+01
 6.41053532e+00 1.01785461e+01 1.66121059e+00 3.69686459e+00
 1.04441202e-01 4.64161294e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9866756813668216
cond(S) = 20.309834098814395
E1 = -19.039211349198002  E_coul = 4.519392772234943
init E= -14.5198185769631
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301582811531506  LUMO = 5.16594290256011
  mo_energy =
[-4.70845962e+00 -3.01582812e-01  5.16594290e+00  4.24917139e+01
  3.15909512e+02]
E1 = -19.03851755441403  E_coul = 4.498681855595968
cycle= 1 E= -14.5398356988181  delta_E= -0.02  |g|= 0.0171  |ddm|= 0.161
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147083
diis-c [-2.16334047e-04  1.00000000e+00]
  HOMO = -0.300593724990565  LUMO = 5.16379926736306
  mo_energy =
[-4.71999417e+00 -3.00593725e-01  5.16379927e+00  4.24760088e+01
  3.15883488e+02]
E1 = -19.036565942234294  E_coul = 4.496706808017788
cycle= 2 E= -14.5398591342165  delta_E= -2.34e-05  |g|= 0.00112  |ddm|= 0.00827
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128624
diis-c [-5.67471264e-07 -7.63986343e-02  1.07639863e+00]
  HOMO = -0.300678207009554  LUMO = 5.16337097594092
  mo_energy =
[-4.72097352e+00 -3.00678207e-01  5.16337098e+00  4.24750145e+01
  3.15882283e+02]
E1 = -19.03645473278321  E_coul = 4.496595486477762
cycle= 3 E= -14.5398592463054  delta_E= -1.12e-07  |g|= 1.21e-05  |ddm|= 0.000573
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.48795e-05
diis-c [-7.35528642e-11  8.16478516e-04 -1.59844818e-02  1.01516800e+00]
  HOMO = -0.300677551810131  LUMO = 5.16338189325415
  mo_energy =
[-4.72095437e+00 -3.00677552e-01  5.16338189e+00  4.24750580e+01
  3.15882360e+02]
E1 = -19.036456327679122  E_coul = 4.496597081367435
cycle= 4 E= -14.5398592463117  delta_E= -6.24e-12  |g|= 5.01e-07  |ddm|= 2.7e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.036456327679122  E_coul = 4.496597081367435
  HOMO = -0.300677516820555  LUMO = 5.1633823211268
  mo_energy =
[-4.72095357e+00 -3.00677517e-01  5.16338232e+00  4.24750595e+01
  3.15882362e+02]
E1 = -19.036456407651787  E_coul = 4.49659716134008
Extra cycle  E= -14.5398592463117  delta_E= -1.95e-14  |g|= 2.75e-08  |ddm|= 2e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92126712e+02 2.89507207e+01 6.41053532e+00 1.66121059e+00
 1.04441202e-01]
E = -14.539859246311707
E = -14.539859246311707
exp = [1.9212671226013924e+02,2.8950720678587700e+01,6.4105353198681128e+00,1.6612105938420099e+00,1.0444120248462711e-01]
