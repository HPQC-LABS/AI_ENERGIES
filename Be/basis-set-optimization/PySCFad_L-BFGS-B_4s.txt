#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428219255        1
[INPUT] 0    0    [1    /1   ]  19.4428219255        1
[INPUT] 0    0    [1    /1   ]  2.7411959081         1
[INPUT] 0    0    [1    /1   ]  0.10297349419        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42821925479006, 1.0]], [0, [19.442821925479006, 1.0]], [0, [2.741195908101683, 1.0]], [0, [0.10297349419021139, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42821925]
bas 1, expnt(s) = [19.44282193]
bas 2, expnt(s) = [2.74119591]
bas 3, expnt(s) = [0.10297349]
CPU time:         1.52
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428219e+02 1.31548075e+02 1.94428219e+01 2.33929234e+01
 2.74119591e+00 5.38232701e+00 1.02973494e-01 4.59260518e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.974491352674038
cond(S) = 5.092647490199105
E1 = -18.77130390094084  E_coul = 4.5021138289534814
init E= -14.2691900719874
    CPU time for initialize scf      0.11 sec, wall time      0.11 sec
  HOMO = -0.3063452352016  LUMO = 16.8893029000614
  mo_energy =
[ -4.61406766  -0.30634524  16.8893029  271.32301356]
E1 = -18.879787732163393  E_coul = 4.53678635004605
cycle= 1 E= -14.3430013821173  delta_E= -0.0738  |g|= 0.0202  |ddm|= 0.0474
    CPU time for cycle= 1      0.25 sec, wall time      0.25 sec
diis-norm(errvec)=0.0214507
diis-c [-4.60133159e-04  1.00000000e+00]
  HOMO = -0.297921235870871  LUMO = 16.9086662867604
  mo_energy =
[ -4.60519058  -0.29792124  16.90866629 271.31611281]
E1 = -18.878481901270565  E_coul = 4.535471686720254
cycle= 2 E= -14.3430102145503  delta_E= -8.83e-06  |g|= 0.00052  |ddm|= 0.00195
    CPU time for cycle= 2      0.07 sec, wall time      0.07 sec
diis-norm(errvec)=0.000633554
diis-c [-5.00991747e-08 -2.84174342e-02  1.02841743e+00]
  HOMO = -0.297935842307442  LUMO = 16.9076804063838
  mo_energy =
[ -4.60585211  -0.29793584  16.90768041 271.31259718]
E1 = -18.87844690278048  E_coul = 4.535436681910288
cycle= 3 E= -14.3430102208702  delta_E= -6.32e-09  |g|= 3.19e-06  |ddm|= 4.95e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.64049e-06
diis-c [-2.93364238e-12  5.03187861e-04 -1.97273474e-02  1.01922416e+00]
  HOMO = -0.297935754520057  LUMO = 16.9076806845524
  mo_energy =
[ -4.60585102  -0.29793575  16.90768068 271.31259668]
E1 = -18.878446916132336  E_coul = 4.53543669526188
cycle= 4 E= -14.3430102208705  delta_E= -2.63e-13  |g|= 2.84e-08  |ddm|= 3.32e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.878446916132336  E_coul = 4.53543669526188
  HOMO = -0.297935753698155  LUMO = 16.9076806900007
  mo_energy =
[ -4.60585101  -0.29793575  16.90768069 271.3125967 ]
E1 = -18.878446916358683  E_coul = 4.535436695488229
Extra cycle  E= -14.3430102208705  delta_E= 3.55e-15  |g|= 8.23e-10  |ddm|= 3.04e-09
    CPU time for scf_cycle      0.45 sec, wall time      0.46 sec
exp = [1.94428219e+02 1.94428219e+01 2.74119591e+00 1.02973494e-01]
E = -14.343010220870454
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428219255        1
[INPUT] 0    0    [1    /1   ]  19.4428219255        1
[INPUT] 0    0    [1    /1   ]  2.7411959081         1
[INPUT] 0    0    [1    /1   ]  0.10297349419        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42821925479006, 1.0]], [0, [19.442821925479006, 1.0]], [0, [2.741195908101683, 1.0]], [0, [0.10297349419021139, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42821925]
bas 1, expnt(s) = [19.44282193]
bas 2, expnt(s) = [2.74119591]
bas 3, expnt(s) = [0.10297349]
CPU time:         2.08
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428219e+02 1.31548075e+02 1.94428219e+01 2.33929234e+01
 2.74119591e+00 5.38232701e+00 1.02973494e-01 4.59260518e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.974491352674038
cond(S) = 5.092647490199105
E1 = -18.77130390094084  E_coul = 4.5021138289534814
init E= -14.2691900719874
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.3063452352016  LUMO = 16.8893029000614
  mo_energy =
[ -4.61406766  -0.30634524  16.8893029  271.32301356]
E1 = -18.879787732163393  E_coul = 4.53678635004605
cycle= 1 E= -14.3430013821173  delta_E= -0.0738  |g|= 0.0202  |ddm|= 0.0474
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0214507
diis-c [-4.60133159e-04  1.00000000e+00]
  HOMO = -0.297921235870871  LUMO = 16.9086662867604
  mo_energy =
[ -4.60519058  -0.29792124  16.90866629 271.31611281]
E1 = -18.878481901270565  E_coul = 4.535471686720254
cycle= 2 E= -14.3430102145503  delta_E= -8.83e-06  |g|= 0.00052  |ddm|= 0.00195
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000633554
diis-c [-5.00991747e-08 -2.84174342e-02  1.02841743e+00]
  HOMO = -0.297935842307442  LUMO = 16.9076804063838
  mo_energy =
[ -4.60585211  -0.29793584  16.90768041 271.31259718]
E1 = -18.87844690278048  E_coul = 4.535436681910288
cycle= 3 E= -14.3430102208702  delta_E= -6.32e-09  |g|= 3.19e-06  |ddm|= 4.95e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.64049e-06
diis-c [-2.93364238e-12  5.03187861e-04 -1.97273474e-02  1.01922416e+00]
  HOMO = -0.297935754520057  LUMO = 16.9076806845524
  mo_energy =
[ -4.60585102  -0.29793575  16.90768068 271.31259668]
E1 = -18.878446916132336  E_coul = 4.53543669526188
cycle= 4 E= -14.3430102208705  delta_E= -2.63e-13  |g|= 2.84e-08  |ddm|= 3.32e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.878446916132336  E_coul = 4.53543669526188
  HOMO = -0.297935753698155  LUMO = 16.9076806900007
  mo_energy =
[ -4.60585101  -0.29793575  16.90768069 271.3125967 ]
E1 = -18.878446916358683  E_coul = 4.535436695488229
Extra cycle  E= -14.3430102208705  delta_E= 3.55e-15  |g|= 8.23e-10  |ddm|= 3.04e-09
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.092647490199105
E1 = -18.878446916358683  E_coul = 4.535436695488229
init E= -14.3430102208705
    CPU time for initialize scf      0.24 sec, wall time      0.25 sec
  HOMO = -0.297935753680038  LUMO = 16.9076806898073
  mo_energy =
[ -4.60585101  -0.29793575  16.90768069 271.3125967 ]
E1 = -18.878446916352647  E_coul = 4.535436695482192
cycle= 1 E= -14.3430102208705  delta_E= -1.78e-15  |g|= 2.62e-11  |ddm|= 8.29e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.878446916352647  E_coul = 4.535436695482192
  HOMO = -0.297935753679649  LUMO = 16.9076806897925
  mo_energy =
[ -4.60585101  -0.29793575  16.90768069 271.3125967 ]
E1 = -18.878446916352157  E_coul = 4.535436695481701
Extra cycle  E= -14.3430102208705  delta_E=    0  |g|= 8.84e-13  |ddm|= 2.46e-12
    CPU time for scf_cycle      0.84 sec, wall time      0.84 sec
exp = [1.94428219e+02 1.94428219e+01 2.74119591e+00 1.02973494e-01]
grad_E = [ 0.00020567  0.02012976 -0.07270707 -0.05241028]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428013587        1
[INPUT] 0    0    [1    /1   ]  19.4226921627        1
[INPUT] 0    0    [1    /1   ]  2.8139029817         1
[INPUT] 0    0    [1    /1   ]  0.155383770551       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42801358699205, 1.0]], [0, [19.422692162666365, 1.0]], [0, [2.813902981703198, 1.0]], [0, [0.15538377055070152, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42801359]
bas 1, expnt(s) = [19.42269216]
bas 2, expnt(s) = [2.81390298]
bas 3, expnt(s) = [0.15538377]
CPU time:         6.37
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428014e+02 1.31547971e+02 1.94226922e+01 2.33747564e+01
 2.81390298e+00 5.48904592e+00 1.55383771e-01 6.25272410e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.874246306512096
cond(S) = 5.421015122808883
E1 = -18.896355839311266  E_coul = 4.731371795757283
init E= -14.164984043554
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.260636962757847  LUMO = 17.3937514989753
  mo_energy =
[-4.52260315e+00 -2.60636963e-01  1.73937515e+01  2.71679639e+02]
E1 = -19.281160957092094  E_coul = 4.985097383297483
cycle= 1 E= -14.2960635737946  delta_E= -0.131  |g|= 0.0291  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0409988
diis-c [-0.0016809  1.       ]
  HOMO = -0.228343937724075  LUMO = 17.5041975387204
  mo_energy =
[-4.42714917e+00 -2.28343938e-01  1.75041975e+01  2.71825643e+02]
E1 = -19.280646148950304  E_coul = 4.984561847979039
cycle= 2 E= -14.2960843009713  delta_E= -2.07e-05  |g|= 0.00102  |ddm|= 0.00253
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00148043
diis-c [-6.15992461e-08 -3.69127923e-02  1.03691279e+00]
  HOMO = -0.228334827469155  LUMO = 17.5034296954838
  mo_energy =
[-4.42743631e+00 -2.28334827e-01  1.75034297e+01  2.71822579e+02]
E1 = -19.280622458090477  E_coul = 4.984538130825222
cycle= 3 E= -14.2960843272653  delta_E= -2.63e-08  |g|= 1.85e-06  |ddm|= 9.15e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.76709e-06
diis-c [-2.37395965e-12  1.28852157e-04 -3.62704790e-03  1.00349820e+00]
  HOMO = -0.228334906296371  LUMO = 17.5034271409163
  mo_energy =
[-4.42743820e+00 -2.28334906e-01  1.75034271e+01  2.71822571e+02]
E1 = -19.280622359585795  E_coul = 4.9845380323204935
cycle= 4 E= -14.2960843272653  delta_E= -4.62e-14  |g|= 2.93e-08  |ddm|= 1.64e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.280622359585795  E_coul = 4.9845380323204935
  HOMO = -0.228334907979  LUMO = 17.5034270856589
  mo_energy =
[-4.42743824e+00 -2.28334908e-01  1.75034271e+01  2.71822571e+02]
E1 = -19.28062235754393  E_coul = 4.9845380302786335
Extra cycle  E= -14.2960843272653  delta_E= 5.33e-15  |g|= 7.28e-10  |ddm|= 3.17e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94428014e+02 1.94226922e+01 2.81390298e+00 1.55383771e-01]
E = -14.296084327265296
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428013587        1
[INPUT] 0    0    [1    /1   ]  19.4226921627        1
[INPUT] 0    0    [1    /1   ]  2.8139029817         1
[INPUT] 0    0    [1    /1   ]  0.155383770551       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42801358699205, 1.0]], [0, [19.422692162666365, 1.0]], [0, [2.813902981703198, 1.0]], [0, [0.15538377055070152, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42801359]
bas 1, expnt(s) = [19.42269216]
bas 2, expnt(s) = [2.81390298]
bas 3, expnt(s) = [0.15538377]
CPU time:         6.48
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428014e+02 1.31547971e+02 1.94226922e+01 2.33747564e+01
 2.81390298e+00 5.48904592e+00 1.55383771e-01 6.25272410e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.874246306512096
cond(S) = 5.421015122808883
E1 = -18.896355839311266  E_coul = 4.731371795757283
init E= -14.164984043554
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.260636962757847  LUMO = 17.3937514989753
  mo_energy =
[-4.52260315e+00 -2.60636963e-01  1.73937515e+01  2.71679639e+02]
E1 = -19.281160957092094  E_coul = 4.985097383297483
cycle= 1 E= -14.2960635737946  delta_E= -0.131  |g|= 0.0291  |ddm|= 0.16
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0409988
diis-c [-0.0016809  1.       ]
  HOMO = -0.228343937724075  LUMO = 17.5041975387204
  mo_energy =
[-4.42714917e+00 -2.28343938e-01  1.75041975e+01  2.71825643e+02]
E1 = -19.280646148950304  E_coul = 4.984561847979039
cycle= 2 E= -14.2960843009713  delta_E= -2.07e-05  |g|= 0.00102  |ddm|= 0.00253
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00148043
diis-c [-6.15992461e-08 -3.69127923e-02  1.03691279e+00]
  HOMO = -0.228334827469155  LUMO = 17.5034296954838
  mo_energy =
[-4.42743631e+00 -2.28334827e-01  1.75034297e+01  2.71822579e+02]
E1 = -19.280622458090477  E_coul = 4.984538130825222
cycle= 3 E= -14.2960843272653  delta_E= -2.63e-08  |g|= 1.85e-06  |ddm|= 9.15e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.76709e-06
diis-c [-2.37395965e-12  1.28852157e-04 -3.62704790e-03  1.00349820e+00]
  HOMO = -0.228334906296371  LUMO = 17.5034271409163
  mo_energy =
[-4.42743820e+00 -2.28334906e-01  1.75034271e+01  2.71822571e+02]
E1 = -19.280622359585795  E_coul = 4.9845380323204935
cycle= 4 E= -14.2960843272653  delta_E= -4.62e-14  |g|= 2.93e-08  |ddm|= 1.64e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.280622359585795  E_coul = 4.9845380323204935
  HOMO = -0.228334907979  LUMO = 17.5034270856589
  mo_energy =
[-4.42743824e+00 -2.28334908e-01  1.75034271e+01  2.71822571e+02]
E1 = -19.28062235754393  E_coul = 4.9845380302786335
Extra cycle  E= -14.2960843272653  delta_E= 5.33e-15  |g|= 7.28e-10  |ddm|= 3.17e-09
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.421015122808883
E1 = -19.28062235754393  E_coul = 4.9845380302786335
init E= -14.2960843272653
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.228334908016717  LUMO = 17.5034270842685
  mo_energy =
[-4.42743824e+00 -2.28334908e-01  1.75034271e+01  2.71822571e+02]
E1 = -19.28062235749299  E_coul = 4.984538030227689
cycle= 1 E= -14.2960843272653  delta_E= -5.33e-15  |g|= 2.02e-11  |ddm|= 7.51e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.28062235749299  E_coul = 4.984538030227689
  HOMO = -0.228334908017568  LUMO = 17.5034270842321
  mo_energy =
[-4.42743824e+00 -2.28334908e-01  1.75034271e+01  2.71822571e+02]
E1 = -19.280622357491673  E_coul = 4.984538030226369
Extra cycle  E= -14.2960843272653  delta_E= -3.55e-15  |g|= 5.93e-13  |ddm|= 1.9e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94428014e+02 1.94226922e+01 2.81390298e+00 1.55383771e-01]
grad_E = [ 2.35642124e-04  1.66355000e-02 -2.32259225e-02  1.78807795e+00]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428205891        1
[INPUT] 0    0    [1    /1   ]  19.4415139028        1
[INPUT] 0    0    [1    /1   ]  2.74592038017        1
[INPUT] 0    0    [1    /1   ]  0.106379089749       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.4282058905915, 1.0]], [0, [19.4415139027857, 1.0]], [0, [2.7459203801741974, 1.0]], [0, [0.10637908974938594, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42820589]
bas 1, expnt(s) = [19.4415139]
bas 2, expnt(s) = [2.74592038]
bas 3, expnt(s) = [0.10637909]
CPU time:         8.46
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428206e+02 1.31548068e+02 1.94415139e+01 2.33917430e+01
 2.74592038e+00 5.38928287e+00 1.06379090e-01 4.70605747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9740817730946225
cond(S) = 5.112546526881525
E1 = -18.800945081354683  E_coul = 4.5296972791218995
init E= -14.2712478022328
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303454519075119  LUMO = 16.9265482418789
  mo_energy =
[ -4.60332405  -0.30345452  16.92654824 271.35047528]
E1 = -18.91314734756779  E_coul = 4.569883752918314
cycle= 1 E= -14.3432635946495  delta_E= -0.072  |g|= 0.0196  |ddm|= 0.0401
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0215466
diis-c [-4.64255841e-04  1.00000000e+00]
  HOMO = -0.294743851617764  LUMO = 16.9485687069165
  mo_energy =
[ -4.59195013  -0.29474385  16.94856871 271.35045676]
E1 = -18.911890099824568  E_coul = 4.568618167057947
cycle= 2 E= -14.3432719327666  delta_E= -8.34e-06  |g|= 0.000532  |ddm|= 0.00183
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000669214
diis-c [-4.64461498e-08 -3.02966362e-02  1.03029664e+00]
  HOMO = -0.294757309103911  LUMO = 16.9475940799871
  mo_energy =
[ -4.59258875  -0.29475731  16.94759408 271.34695918]
E1 = -18.911855533250506  E_coul = 4.5685835938735115
cycle= 3 E= -14.343271939377  delta_E= -6.61e-09  |g|= 3.04e-06  |ddm|= 4.89e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.1913e-06
diis-c [-2.25141008e-12  5.15684065e-04 -1.86911365e-02  1.01817545e+00]
  HOMO = -0.294757205153652  LUMO = 16.9475954410567
  mo_energy =
[ -4.59258696  -0.29475721  16.94759544 271.34696262]
E1 = -18.911855586018568  E_coul = 4.56858364664134
cycle= 4 E= -14.3432719393772  delta_E= -2.34e-13  |g|= 2.59e-08  |ddm|= 3.36e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.911855586018568  E_coul = 4.56858364664134
  HOMO = -0.29475720430628  LUMO = 16.9475954500658
  mo_energy =
[ -4.59258694  -0.2947572   16.94759545 271.34696265]
E1 = -18.911855586375225  E_coul = 4.568583646997985
Extra cycle  E= -14.3432719393772  delta_E= -1.07e-14  |g|= 7.37e-10  |ddm|= 2.86e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94428206e+02 1.94415139e+01 2.74592038e+00 1.06379090e-01]
E = -14.343271939377239
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428205891        1
[INPUT] 0    0    [1    /1   ]  19.4415139028        1
[INPUT] 0    0    [1    /1   ]  2.74592038017        1
[INPUT] 0    0    [1    /1   ]  0.106379089749       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.4282058905915, 1.0]], [0, [19.4415139027857, 1.0]], [0, [2.7459203801741974, 1.0]], [0, [0.10637908974938594, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42820589]
bas 1, expnt(s) = [19.4415139]
bas 2, expnt(s) = [2.74592038]
bas 3, expnt(s) = [0.10637909]
CPU time:         8.59
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428206e+02 1.31548068e+02 1.94415139e+01 2.33917430e+01
 2.74592038e+00 5.38928287e+00 1.06379090e-01 4.70605747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9740817730946225
cond(S) = 5.112546526881525
E1 = -18.800945081354683  E_coul = 4.5296972791218995
init E= -14.2712478022328
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303454519075119  LUMO = 16.9265482418789
  mo_energy =
[ -4.60332405  -0.30345452  16.92654824 271.35047528]
E1 = -18.91314734756779  E_coul = 4.569883752918314
cycle= 1 E= -14.3432635946495  delta_E= -0.072  |g|= 0.0196  |ddm|= 0.0401
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0215466
diis-c [-4.64255841e-04  1.00000000e+00]
  HOMO = -0.294743851617764  LUMO = 16.9485687069165
  mo_energy =
[ -4.59195013  -0.29474385  16.94856871 271.35045676]
E1 = -18.911890099824568  E_coul = 4.568618167057947
cycle= 2 E= -14.3432719327666  delta_E= -8.34e-06  |g|= 0.000532  |ddm|= 0.00183
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000669214
diis-c [-4.64461498e-08 -3.02966362e-02  1.03029664e+00]
  HOMO = -0.294757309103911  LUMO = 16.9475940799871
  mo_energy =
[ -4.59258875  -0.29475731  16.94759408 271.34695918]
E1 = -18.911855533250506  E_coul = 4.5685835938735115
cycle= 3 E= -14.343271939377  delta_E= -6.61e-09  |g|= 3.04e-06  |ddm|= 4.89e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.1913e-06
diis-c [-2.25141008e-12  5.15684065e-04 -1.86911365e-02  1.01817545e+00]
  HOMO = -0.294757205153652  LUMO = 16.9475954410567
  mo_energy =
[ -4.59258696  -0.29475721  16.94759544 271.34696262]
E1 = -18.911855586018568  E_coul = 4.56858364664134
cycle= 4 E= -14.3432719393772  delta_E= -2.34e-13  |g|= 2.59e-08  |ddm|= 3.36e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.911855586018568  E_coul = 4.56858364664134
  HOMO = -0.29475720430628  LUMO = 16.9475954500658
  mo_energy =
[ -4.59258694  -0.2947572   16.94759545 271.34696265]
E1 = -18.911855586375225  E_coul = 4.568583646997985
Extra cycle  E= -14.3432719393772  delta_E= -1.07e-14  |g|= 7.37e-10  |ddm|= 2.86e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.112546526881525
E1 = -18.911855586375225  E_coul = 4.568583646997985
init E= -14.3432719393772
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294757204287644  LUMO = 16.9475954499942
  mo_energy =
[ -4.59258694  -0.2947572   16.94759545 271.34696265]
E1 = -18.911855586373665  E_coul = 4.568583646996424
cycle= 1 E= -14.3432719393772  delta_E= -3.55e-15  |g|= 2.33e-11  |ddm|= 7.64e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.911855586373665  E_coul = 4.568583646996424
  HOMO = -0.29475720428724  LUMO = 16.9475954499835
  mo_energy =
[ -4.59258694  -0.2947572   16.94759545 271.34696265]
E1 = -18.911855586373292  E_coul = 4.568583646996063
Extra cycle  E= -14.3432719393772  delta_E= 1.42e-14  |g|= 7.22e-13  |ddm|= 2.23e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94428206e+02 1.94415139e+01 2.74592038e+00 1.06379090e-01]
grad_E = [ 0.00020756  0.01990317 -0.06967077  0.11023568]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428193438        1
[INPUT] 0    0    [1    /1   ]  19.4403036314        1
[INPUT] 0    0    [1    /1   ]  2.75024582742        1
[INPUT] 0    0    [1    /1   ]  0.106172311907       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42819343786357, 1.0]], [0, [19.440303631373798, 1.0]], [0, [2.750245827420143, 1.0]], [0, [0.10617231190699007, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42819344]
bas 1, expnt(s) = [19.44030363]
bas 2, expnt(s) = [2.75024583]
bas 3, expnt(s) = [0.10617231]
CPU time:        10.71
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428193e+02 1.31548062e+02 1.94403036e+01 2.33906509e+01
 2.75024583e+00 5.39564863e+00 1.06172312e-01 4.69919514e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.974057242935202
cond(S) = 5.116999079057223
E1 = -18.799964859403815  E_coul = 4.528505161224111
init E= -14.2714596981797
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303664945808483  LUMO = 16.9395209216989
  mo_energy =
[ -4.60388516  -0.30366495  16.93952092 271.35885643]
E1 = -18.913179344925023  E_coul = 4.569576165552583
cycle= 1 E= -14.3436031793724  delta_E= -0.0721  |g|= 0.0192  |ddm|= 0.0391
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0211605
diis-c [-4.47768797e-04  1.00000000e+00]
  HOMO = -0.294925127898901  LUMO = 16.962300248749
  mo_energy =
[ -4.5920923   -0.29492513  16.96230025 271.361075  ]
E1 = -18.91193954585991  E_coul = 4.568328300638785
cycle= 2 E= -14.3436112452211  delta_E= -8.07e-06  |g|= 0.000521  |ddm|= 0.0018
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000655698
diis-c [-4.03839117e-08 -3.03934910e-02  1.03039349e+00]
  HOMO = -0.294938498417829  LUMO = 16.9613425734053
  mo_energy =
[ -4.59272194  -0.2949385   16.96134257 271.3576374 ]
E1 = -18.9119055176767  E_coul = 4.568294266113047
cycle= 3 E= -14.3436112515637  delta_E= -6.34e-09  |g|= 2.96e-06  |ddm|= 4.81e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.01119e-06
diis-c [-2.05928282e-12  5.36969646e-04 -1.92471680e-02  1.01871020e+00]
  HOMO = -0.294938394039787  LUMO = 16.9613440517157
  mo_energy =
[ -4.59272008  -0.29493839  16.96134405 271.35764134]
E1 = -18.91190557449379  E_coul = 4.568294322929914
cycle= 4 E= -14.3436112515639  delta_E= -2.22e-13  |g|= 2.42e-08  |ddm|= 3.33e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.91190557449379  E_coul = 4.568294322929914
  HOMO = -0.29493839329298  LUMO = 16.9613440580972
  mo_energy =
[ -4.59272007  -0.29493839  16.96134406 271.35764135]
E1 = -18.91190557475387  E_coul = 4.568294323189993
Extra cycle  E= -14.3436112515639  delta_E= -1.78e-15  |g|= 6.93e-10  |ddm|= 2.61e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94428193e+02 1.94403036e+01 2.75024583e+00 1.06172312e-01]
E = -14.343611251563878
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428193438        1
[INPUT] 0    0    [1    /1   ]  19.4403036314        1
[INPUT] 0    0    [1    /1   ]  2.75024582742        1
[INPUT] 0    0    [1    /1   ]  0.106172311907       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42819343786357, 1.0]], [0, [19.440303631373798, 1.0]], [0, [2.750245827420143, 1.0]], [0, [0.10617231190699007, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42819344]
bas 1, expnt(s) = [19.44030363]
bas 2, expnt(s) = [2.75024583]
bas 3, expnt(s) = [0.10617231]
CPU time:        10.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428193e+02 1.31548062e+02 1.94403036e+01 2.33906509e+01
 2.75024583e+00 5.39564863e+00 1.06172312e-01 4.69919514e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.974057242935202
cond(S) = 5.116999079057223
E1 = -18.799964859403815  E_coul = 4.528505161224111
init E= -14.2714596981797
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303664945808483  LUMO = 16.9395209216989
  mo_energy =
[ -4.60388516  -0.30366495  16.93952092 271.35885643]
E1 = -18.913179344925023  E_coul = 4.569576165552583
cycle= 1 E= -14.3436031793724  delta_E= -0.0721  |g|= 0.0192  |ddm|= 0.0391
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0211605
diis-c [-4.47768797e-04  1.00000000e+00]
  HOMO = -0.294925127898901  LUMO = 16.962300248749
  mo_energy =
[ -4.5920923   -0.29492513  16.96230025 271.361075  ]
E1 = -18.91193954585991  E_coul = 4.568328300638785
cycle= 2 E= -14.3436112452211  delta_E= -8.07e-06  |g|= 0.000521  |ddm|= 0.0018
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000655698
diis-c [-4.03839117e-08 -3.03934910e-02  1.03039349e+00]
  HOMO = -0.294938498417829  LUMO = 16.9613425734053
  mo_energy =
[ -4.59272194  -0.2949385   16.96134257 271.3576374 ]
E1 = -18.9119055176767  E_coul = 4.568294266113047
cycle= 3 E= -14.3436112515637  delta_E= -6.34e-09  |g|= 2.96e-06  |ddm|= 4.81e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.01119e-06
diis-c [-2.05928282e-12  5.36969646e-04 -1.92471680e-02  1.01871020e+00]
  HOMO = -0.294938394039787  LUMO = 16.9613440517157
  mo_energy =
[ -4.59272008  -0.29493839  16.96134405 271.35764134]
E1 = -18.91190557449379  E_coul = 4.568294322929914
cycle= 4 E= -14.3436112515639  delta_E= -2.22e-13  |g|= 2.42e-08  |ddm|= 3.33e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.91190557449379  E_coul = 4.568294322929914
  HOMO = -0.29493839329298  LUMO = 16.9613440580972
  mo_energy =
[ -4.59272007  -0.29493839  16.96134406 271.35764135]
E1 = -18.91190557475387  E_coul = 4.568294323189993
Extra cycle  E= -14.3436112515639  delta_E= -1.78e-15  |g|= 6.93e-10  |ddm|= 2.61e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.116999079057223
E1 = -18.91190557475387  E_coul = 4.568294323189993
init E= -14.3436112515639
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294938393276529  LUMO = 16.96134405798
  mo_energy =
[ -4.59272007  -0.29493839  16.96134406 271.35764135]
E1 = -18.911905574750588  E_coul = 4.568294323186708
cycle= 1 E= -14.3436112515639  delta_E=    0  |g|= 2.21e-11  |ddm|= 7.07e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.911905574750588  E_coul = 4.568294323186708
  HOMO = -0.294938393276173  LUMO = 16.9613440579688
  mo_energy =
[ -4.59272007  -0.29493839  16.96134406 271.35764135]
E1 = -18.911905574750218  E_coul = 4.568294323186336
Extra cycle  E= -14.3436112515639  delta_E= -3.55e-15  |g|= 7.02e-13  |ddm|= 2.09e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94428193e+02 1.94403036e+01 2.75024583e+00 1.06172312e-01]
grad_E = [ 0.00020923  0.01966069 -0.06612343  0.09951957]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428143627        1
[INPUT] 0    0    [1    /1   ]  19.4354625457        1
[INPUT] 0    0    [1    /1   ]  2.7675476164         1
[INPUT] 0    0    [1    /1   ]  0.105345200537       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42814362695185, 1.0]], [0, [19.435462545726185, 1.0]], [0, [2.767547616403926, 1.0]], [0, [0.1053452005374066, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42814363]
bas 1, expnt(s) = [19.43546255]
bas 2, expnt(s) = [2.76754762]
bas 3, expnt(s) = [0.1053452]
CPU time:        12.91
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428144e+02 1.31548037e+02 1.94354625e+01 2.33862821e+01
 2.76754762e+00 5.42108667e+00 1.05345201e-01 4.67171230e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.973904578564949
cond(S) = 5.134912158279544
E1 = -18.795477775082432  E_coul = 4.523605632856063
init E= -14.2718721422264
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304511129208749  LUMO = 16.9912936157497
  mo_energy =
[ -4.60610035  -0.30451113  16.99129362 271.3923595 ]
E1 = -18.913067251944117  E_coul = 4.568283703141373
cycle= 1 E= -14.3447835488027  delta_E= -0.0729  |g|= 0.0174  |ddm|= 0.0355
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0198562
diis-c [-3.94270526e-04  1.00000000e+00]
  HOMO = -0.29564275069872  LUMO = 17.0171391399226
  mo_energy =
[ -4.59261061  -0.29564275  17.01713914 271.40353013]
E1 = -18.91189711371679  E_coul = 4.567106504379208
cycle= 2 E= -14.3447906093376  delta_E= -7.06e-06  |g|= 0.000475  |ddm|= 0.00172
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000603012
diis-c [-2.18600387e-08 -3.03358757e-02  1.03033588e+00]
  HOMO = -0.29565577652055  LUMO = 17.0162493150012
  mo_energy =
[ -4.59320414  -0.29565578  17.01624932 271.40033281]
E1 = -18.911865265616907  E_coul = 4.567074650933685
cycle= 3 E= -14.3447906146832  delta_E= -5.35e-09  |g|= 2.68e-06  |ddm|= 4.5e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.46487e-06
diis-c [-1.12720616e-12  6.58585079e-04 -2.32200531e-02  1.02256147e+00]
  HOMO = -0.29565567581623  LUMO = 17.0162508563831
  mo_energy =
[ -4.59320228  -0.29565568  17.01625086 271.40033724]
E1 = -18.91186532428801  E_coul = 4.567074709604584
cycle= 4 E= -14.3447906146834  delta_E= -2.03e-13  |g|= 1.47e-08  |ddm|= 3.16e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.91186532428801  E_coul = 4.567074709604584
  HOMO = -0.295655675552263  LUMO = 17.0162508525534
  mo_energy =
[ -4.59320228  -0.29565568  17.01625085 271.40033722]
E1 = -18.911865324167636  E_coul = 4.5670747094842135
Extra cycle  E= -14.3447906146834  delta_E= 3.55e-15  |g|= 4.34e-10  |ddm|= 1.32e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94428144e+02 1.94354625e+01 2.76754762e+00 1.05345201e-01]
E = -14.344790614683422
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.428143627        1
[INPUT] 0    0    [1    /1   ]  19.4354625457        1
[INPUT] 0    0    [1    /1   ]  2.7675476164         1
[INPUT] 0    0    [1    /1   ]  0.105345200537       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42814362695185, 1.0]], [0, [19.435462545726185, 1.0]], [0, [2.767547616403926, 1.0]], [0, [0.1053452005374066, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42814363]
bas 1, expnt(s) = [19.43546255]
bas 2, expnt(s) = [2.76754762]
bas 3, expnt(s) = [0.1053452]
CPU time:        13.06
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94428144e+02 1.31548037e+02 1.94354625e+01 2.33862821e+01
 2.76754762e+00 5.42108667e+00 1.05345201e-01 4.67171230e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.973904578564949
cond(S) = 5.134912158279544
E1 = -18.795477775082432  E_coul = 4.523605632856063
init E= -14.2718721422264
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304511129208749  LUMO = 16.9912936157497
  mo_energy =
[ -4.60610035  -0.30451113  16.99129362 271.3923595 ]
E1 = -18.913067251944117  E_coul = 4.568283703141373
cycle= 1 E= -14.3447835488027  delta_E= -0.0729  |g|= 0.0174  |ddm|= 0.0355
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0198562
diis-c [-3.94270526e-04  1.00000000e+00]
  HOMO = -0.29564275069872  LUMO = 17.0171391399226
  mo_energy =
[ -4.59261061  -0.29564275  17.01713914 271.40353013]
E1 = -18.91189711371679  E_coul = 4.567106504379208
cycle= 2 E= -14.3447906093376  delta_E= -7.06e-06  |g|= 0.000475  |ddm|= 0.00172
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000603012
diis-c [-2.18600387e-08 -3.03358757e-02  1.03033588e+00]
  HOMO = -0.29565577652055  LUMO = 17.0162493150012
  mo_energy =
[ -4.59320414  -0.29565578  17.01624932 271.40033281]
E1 = -18.911865265616907  E_coul = 4.567074650933685
cycle= 3 E= -14.3447906146832  delta_E= -5.35e-09  |g|= 2.68e-06  |ddm|= 4.5e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.46487e-06
diis-c [-1.12720616e-12  6.58585079e-04 -2.32200531e-02  1.02256147e+00]
  HOMO = -0.29565567581623  LUMO = 17.0162508563831
  mo_energy =
[ -4.59320228  -0.29565568  17.01625086 271.40033724]
E1 = -18.91186532428801  E_coul = 4.567074709604584
cycle= 4 E= -14.3447906146834  delta_E= -2.03e-13  |g|= 1.47e-08  |ddm|= 3.16e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.91186532428801  E_coul = 4.567074709604584
  HOMO = -0.295655675552263  LUMO = 17.0162508525534
  mo_energy =
[ -4.59320228  -0.29565568  17.01625085 271.40033722]
E1 = -18.911865324167636  E_coul = 4.5670747094842135
Extra cycle  E= -14.3447906146834  delta_E= 3.55e-15  |g|= 4.34e-10  |ddm|= 1.32e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.134912158279544
E1 = -18.911865324167636  E_coul = 4.5670747094842135
init E= -14.3447906146834
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.295655675546231  LUMO = 17.0162508522995
  mo_energy =
[ -4.59320228  -0.29565568  17.01625085 271.40033722]
E1 = -18.91186532415898  E_coul = 4.567074709475553
cycle= 1 E= -14.3447906146834  delta_E= -7.11e-15  |g|= 1.43e-11  |ddm|= 3.96e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.91186532415898  E_coul = 4.567074709475553
  HOMO = -0.2956556755461  LUMO = 17.0162508522881
  mo_energy =
[ -4.59320228  -0.29565568  17.01625085 271.40033722]
E1 = -18.911865324158562  E_coul = 4.567074709475146
Extra cycle  E= -14.3447906146834  delta_E= 1.42e-14  |g|= 4.7e-13  |ddm|= 1.27e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94428144e+02 1.94354625e+01 2.76754762e+00 1.05345201e-01]
grad_E = [ 0.00021589  0.01869575 -0.05205074  0.05626337]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.427910701        1
[INPUT] 0    0    [1    /1   ]  19.4139797246        1
[INPUT] 0    0    [1    /1   ]  2.83678253987        1
[INPUT] 0    0    [1    /1   ]  0.104397049367       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42791070106935, 1.0]], [0, [19.41397972463972, 1.0]], [0, [2.8367825398694273, 1.0]], [0, [0.10439704936664722, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.4279107]
bas 1, expnt(s) = [19.41397972]
bas 2, expnt(s) = [2.83678254]
bas 3, expnt(s) = [0.10439705]
CPU time:        15.16
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94427911e+02 1.31547919e+02 1.94139797e+01 2.33668921e+01
 2.83678254e+00 5.52248517e+00 1.04397049e-01 4.64014116e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.97252638761987
cond(S) = 5.217964224149597
E1 = -18.78969766005741  E_coul = 4.521520848005845
init E= -14.2681768120516
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305906292259792  LUMO = 17.2101839256126
  mo_energy =
[ -4.60687931  -0.30590629  17.21018393 271.53135   ]
E1 = -18.93112836175917  E_coul = 4.584239907138114
cycle= 1 E= -14.3468884546211  delta_E= -0.0787  |g|= 0.0134  |ddm|= 0.0214
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0195784
diis-c [-3.83312412e-04  1.00000000e+00]
  HOMO = -0.296225976458384  LUMO = 17.2498135795689
  mo_energy =
[ -4.58510025  -0.29622598  17.24981358 271.58112231]
E1 = -18.930253492937812  E_coul = 4.583361038654821
cycle= 2 E= -14.346892454283  delta_E= -4e-06  |g|= 0.000326  |ddm|= 0.00136
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000446913
diis-c [-1.41719121e-08 -2.24975456e-02  1.02249755e+00]
  HOMO = -0.296236930896905  LUMO = 17.2491909464618
  mo_energy =
[ -4.58553867  -0.29623693  17.24919095 271.57886079]
E1 = -18.930230616414523  E_coul = 4.583338159561133
cycle= 3 E= -14.3468924568534  delta_E= -2.57e-09  |g|= 2.84e-06  |ddm|= 3.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.56095e-06
diis-c [-1.76967658e-12  4.39928471e-04 -2.42690897e-02  1.02382916e+00]
  HOMO = -0.296236931248212  LUMO = 17.2491878034781
  mo_energy =
[ -4.5855403   -0.29623693  17.2491878  271.57884926]
E1 = -18.930230502351904  E_coul = 4.5833380454983255
cycle= 4 E= -14.3468924568536  delta_E= -1.88e-13  |g|= 2.27e-08  |ddm|= 2.35e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.930230502351904  E_coul = 4.5833380454983255
  HOMO = -0.296236930308378  LUMO = 17.2491878253623
  mo_energy =
[ -4.58554028  -0.29623693  17.24918783 271.57884933]
E1 = -18.93023050318014  E_coul = 4.583338046326556
Extra cycle  E= -14.3468924568536  delta_E= -7.11e-15  |g|= 5.44e-10  |ddm|= 2.78e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94427911e+02 1.94139797e+01 2.83678254e+00 1.04397049e-01]
E = -14.346892456853585
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:18:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.427910701        1
[INPUT] 0    0    [1    /1   ]  19.4139797246        1
[INPUT] 0    0    [1    /1   ]  2.83678253987        1
[INPUT] 0    0    [1    /1   ]  0.104397049367       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42791070106935, 1.0]], [0, [19.41397972463972, 1.0]], [0, [2.8367825398694273, 1.0]], [0, [0.10439704936664722, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.4279107]
bas 1, expnt(s) = [19.41397972]
bas 2, expnt(s) = [2.83678254]
bas 3, expnt(s) = [0.10439705]
CPU time:        15.34
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94427911e+02 1.31547919e+02 1.94139797e+01 2.33668921e+01
 2.83678254e+00 5.52248517e+00 1.04397049e-01 4.64014116e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.97252638761987
cond(S) = 5.217964224149597
E1 = -18.78969766005741  E_coul = 4.521520848005845
init E= -14.2681768120516
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305906292259792  LUMO = 17.2101839256126
  mo_energy =
[ -4.60687931  -0.30590629  17.21018393 271.53135   ]
E1 = -18.93112836175917  E_coul = 4.584239907138114
cycle= 1 E= -14.3468884546211  delta_E= -0.0787  |g|= 0.0134  |ddm|= 0.0214
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0195784
diis-c [-3.83312412e-04  1.00000000e+00]
  HOMO = -0.296225976458384  LUMO = 17.2498135795689
  mo_energy =
[ -4.58510025  -0.29622598  17.24981358 271.58112231]
E1 = -18.930253492937812  E_coul = 4.583361038654821
cycle= 2 E= -14.346892454283  delta_E= -4e-06  |g|= 0.000326  |ddm|= 0.00136
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000446913
diis-c [-1.41719121e-08 -2.24975456e-02  1.02249755e+00]
  HOMO = -0.296236930896905  LUMO = 17.2491909464618
  mo_energy =
[ -4.58553867  -0.29623693  17.24919095 271.57886079]
E1 = -18.930230616414523  E_coul = 4.583338159561133
cycle= 3 E= -14.3468924568534  delta_E= -2.57e-09  |g|= 2.84e-06  |ddm|= 3.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.56095e-06
diis-c [-1.76967658e-12  4.39928471e-04 -2.42690897e-02  1.02382916e+00]
  HOMO = -0.296236931248212  LUMO = 17.2491878034781
  mo_energy =
[ -4.5855403   -0.29623693  17.2491878  271.57884926]
E1 = -18.930230502351904  E_coul = 4.5833380454983255
cycle= 4 E= -14.3468924568536  delta_E= -1.88e-13  |g|= 2.27e-08  |ddm|= 2.35e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.930230502351904  E_coul = 4.5833380454983255
  HOMO = -0.296236930308378  LUMO = 17.2491878253623
  mo_energy =
[ -4.58554028  -0.29623693  17.24918783 271.57884933]
E1 = -18.93023050318014  E_coul = 4.583338046326556
Extra cycle  E= -14.3468924568536  delta_E= -7.11e-15  |g|= 5.44e-10  |ddm|= 2.78e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.217964224149597
E1 = -18.93023050318014  E_coul = 4.583338046326556
init E= -14.3468924568536
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.296236930287763  LUMO = 17.2491878257008
  mo_energy =
[ -4.58554027  -0.29623693  17.24918783 271.57884933]
E1 = -18.93023050319308  E_coul = 4.583338046339512
cycle= 1 E= -14.3468924568536  delta_E= 1.78e-14  |g|= 1.45e-11  |ddm|= 6.45e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.93023050319308  E_coul = 4.583338046339512
  HOMO = -0.296236930287321  LUMO = 17.2491878257034
  mo_energy =
[ -4.58554027  -0.29623693  17.24918783 271.57884933]
E1 = -18.930230503193208  E_coul = 4.583338046339628
Extra cycle  E= -14.3468924568536  delta_E= -1.42e-14  |g|= 4.41e-13  |ddm|= 1.6e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94427911e+02 1.94139797e+01 2.83678254e+00 1.04397049e-01]
grad_E = [ 0.00024311  0.01492515  0.00195795 -0.00629866]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.427756198        1
[INPUT] 0    0    [1    /1   ]  19.4040948324        1
[INPUT] 0    0    [1    /1   ]  2.83951880547        1
[INPUT] 0    0    [1    /1   ]  0.104491187761       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42775619846114, 1.0]], [0, [19.404094832424022, 1.0]], [0, [2.839518805472666, 1.0]], [0, [0.10449118776077503, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.4277562]
bas 1, expnt(s) = [19.40409483]
bas 2, expnt(s) = [2.83951881]
bas 3, expnt(s) = [0.10449119]
CPU time:        17.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94427756e+02 1.31547840e+02 1.94040948e+01 2.33579683e+01
 2.83951881e+00 5.52647979e+00 1.04491188e-01 4.64327893e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.972454701623553
cond(S) = 5.222643685841235
E1 = -18.790520486989248  E_coul = 4.522510761708212
init E= -14.268009725281
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305848942503  LUMO = 17.2126753610783
  mo_energy =
[ -4.60651453  -0.30584894  17.21267536 271.5079705 ]
E1 = -18.93325182535113  E_coul = 4.586225033948289
cycle= 1 E= -14.3470267914028  delta_E= -0.079  |g|= 0.0134  |ddm|= 0.0208
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0198032
diis-c [-3.92167482e-04  1.00000000e+00]
  HOMO = -0.29612437082878  LUMO = 17.2530052738655
  mo_energy =
[ -4.5842784   -0.29612437  17.25300527 271.55968847]
E1 = -18.932392484257335  E_coul = 4.58536182019648
cycle= 2 E= -14.3470306640609  delta_E= -3.87e-06  |g|= 0.00032  |ddm|= 0.00134
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000441817
diis-c [-1.47755832e-08 -2.19199588e-02  1.02191996e+00]
  HOMO = -0.296135185108718  LUMO = 17.2523957066163
  mo_energy =
[ -4.5847087   -0.29613519  17.25239571 271.55747146]
E1 = -18.932370049938157  E_coul = 4.585339383406902
cycle= 3 E= -14.3470306665313  delta_E= -2.47e-09  |g|= 2.91e-06  |ddm|= 3.26e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.62489e-06
diis-c [-1.76411692e-12  4.21887389e-04 -2.41414960e-02  1.02371961e+00]
  HOMO = -0.296135191674418  LUMO = 17.2523923015077
  mo_energy =
[ -4.58471053  -0.29613519  17.2523923  271.55745901]
E1 = -18.93236992598262  E_coul = 4.585339259451165
cycle= 4 E= -14.3470306665315  delta_E= -2.01e-13  |g|= 2.33e-08  |ddm|= 2.39e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.93236992598262  E_coul = 4.585339259451165
  HOMO = -0.296135190719705  LUMO = 17.2523923226442
  mo_energy =
[ -4.58471051  -0.29613519  17.25239232 271.55745908]
E1 = -18.93236992678536  E_coul = 4.5853392602539085
Extra cycle  E= -14.3470306665315  delta_E= 5.33e-15  |g|= 5.7e-10  |ddm|= 2.84e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94427756e+02 1.94040948e+01 2.83951881e+00 1.04491188e-01]
E = -14.34703066653145
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.427756198        1
[INPUT] 0    0    [1    /1   ]  19.4040948324        1
[INPUT] 0    0    [1    /1   ]  2.83951880547        1
[INPUT] 0    0    [1    /1   ]  0.104491187761       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42775619846114, 1.0]], [0, [19.404094832424022, 1.0]], [0, [2.839518805472666, 1.0]], [0, [0.10449118776077503, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.4277562]
bas 1, expnt(s) = [19.40409483]
bas 2, expnt(s) = [2.83951881]
bas 3, expnt(s) = [0.10449119]
CPU time:        17.51
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94427756e+02 1.31547840e+02 1.94040948e+01 2.33579683e+01
 2.83951881e+00 5.52647979e+00 1.04491188e-01 4.64327893e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.972454701623553
cond(S) = 5.222643685841235
E1 = -18.790520486989248  E_coul = 4.522510761708212
init E= -14.268009725281
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305848942503  LUMO = 17.2126753610783
  mo_energy =
[ -4.60651453  -0.30584894  17.21267536 271.5079705 ]
E1 = -18.93325182535113  E_coul = 4.586225033948289
cycle= 1 E= -14.3470267914028  delta_E= -0.079  |g|= 0.0134  |ddm|= 0.0208
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0198032
diis-c [-3.92167482e-04  1.00000000e+00]
  HOMO = -0.29612437082878  LUMO = 17.2530052738655
  mo_energy =
[ -4.5842784   -0.29612437  17.25300527 271.55968847]
E1 = -18.932392484257335  E_coul = 4.58536182019648
cycle= 2 E= -14.3470306640609  delta_E= -3.87e-06  |g|= 0.00032  |ddm|= 0.00134
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000441817
diis-c [-1.47755832e-08 -2.19199588e-02  1.02191996e+00]
  HOMO = -0.296135185108718  LUMO = 17.2523957066163
  mo_energy =
[ -4.5847087   -0.29613519  17.25239571 271.55747146]
E1 = -18.932370049938157  E_coul = 4.585339383406902
cycle= 3 E= -14.3470306665313  delta_E= -2.47e-09  |g|= 2.91e-06  |ddm|= 3.26e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.62489e-06
diis-c [-1.76411692e-12  4.21887389e-04 -2.41414960e-02  1.02371961e+00]
  HOMO = -0.296135191674418  LUMO = 17.2523923015077
  mo_energy =
[ -4.58471053  -0.29613519  17.2523923  271.55745901]
E1 = -18.93236992598262  E_coul = 4.585339259451165
cycle= 4 E= -14.3470306665315  delta_E= -2.01e-13  |g|= 2.33e-08  |ddm|= 2.39e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.93236992598262  E_coul = 4.585339259451165
  HOMO = -0.296135190719705  LUMO = 17.2523923226442
  mo_energy =
[ -4.58471051  -0.29613519  17.25239232 271.55745908]
E1 = -18.93236992678536  E_coul = 4.5853392602539085
Extra cycle  E= -14.3470306665315  delta_E= 5.33e-15  |g|= 5.7e-10  |ddm|= 2.84e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.222643685841235
E1 = -18.93236992678536  E_coul = 4.5853392602539085
init E= -14.3470306665315
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.296135190698795  LUMO = 17.2523923229518
  mo_energy =
[ -4.58471051  -0.29613519  17.25239232 271.55745908]
E1 = -18.9323699267972  E_coul = 4.585339260265763
cycle= 1 E= -14.3470306665314  delta_E= 1.24e-14  |g|= 1.56e-11  |ddm|= 6.68e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.9323699267972  E_coul = 4.585339260265763
  HOMO = -0.296135190698347  LUMO = 17.2523923229532
  mo_energy =
[ -4.58471051  -0.29613519  17.25239232 271.55745908]
E1 = -18.932369926797286  E_coul = 4.585339260265838
Extra cycle  E= -14.3470306665314  delta_E= -1.07e-14  |g|= 5.06e-13  |ddm|= 1.68e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94427756e+02 1.94040948e+01 2.83951881e+00 1.04491188e-01]
grad_E = [ 0.00024525  0.01472558  0.00446532 -0.00249637]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.427138188        1
[INPUT] 0    0    [1    /1   ]  19.3645552636        1
[INPUT] 0    0    [1    /1   ]  2.85046386789        1
[INPUT] 0    0    [1    /1   ]  0.104867741337       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.4271381880283, 1.0]], [0, [19.36455526356123, 1.0]], [0, [2.8504638678856202, 1.0]], [0, [0.10486774133728625, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42713819]
bas 1, expnt(s) = [19.36455526]
bas 2, expnt(s) = [2.85046387]
bas 3, expnt(s) = [0.10486774]
CPU time:        19.40
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94427138e+02 1.31547527e+02 1.93645553e+01 2.33222620e+01
 2.85046387e+00 5.54244867e+00 1.04867741e-01 4.65582298e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9721519559756353
cond(S) = 5.241467737858618
E1 = -18.793524082839156  E_coul = 4.526432538813331
init E= -14.2670915440258
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305619399460907  LUMO = 17.222583341374
  mo_energy =
[ -4.60502786  -0.3056194   17.22258334 271.41444193]
E1 = -18.94163511426701  E_coul = 4.594146692582587
cycle= 1 E= -14.3474884216844  delta_E= -0.0804  |g|= 0.0135  |ddm|= 0.019
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208777
diis-c [-4.35876761e-04  1.00000000e+00]
  HOMO = -0.295713571000178  LUMO = 17.2657188158541
  mo_energy =
[ -4.58095895  -0.29571357  17.26571882 271.47392982]
E1 = -18.94083788731735  E_coul = 4.5933460642094355
cycle= 2 E= -14.3474918231079  delta_E= -3.4e-06  |g|= 0.000298  |ddm|= 0.00125
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000422837
diis-c [-1.64275136e-08 -1.96804551e-02  1.01968046e+00]
  HOMO = -0.295723825973492  LUMO = 17.2651611341355
  mo_energy =
[ -4.58135693  -0.29572383  17.26516113 271.47188986]
E1 = -18.940817223303792  E_coul = 4.5933253981023965
cycle= 3 E= -14.3474918252014  delta_E= -2.09e-09  |g|= 3.1e-06  |ddm|= 3.03e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.81187e-06
diis-c [-1.63243009e-12  3.72106028e-04 -2.43106740e-02  1.02393857e+00]
  HOMO = -0.295723855024613  LUMO = 17.2651568688473
  mo_energy =
[ -4.58135946  -0.29572386  17.26515687 271.4718744 ]
E1 = -18.940817066419324  E_coul = 4.593325241217714
cycle= 4 E= -14.3474918252016  delta_E= -2.15e-13  |g|= 2.43e-08  |ddm|= 2.55e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.940817066419324  E_coul = 4.593325241217714
  HOMO = -0.295723854077156  LUMO = 17.2651568861618
  mo_energy =
[ -4.58135944  -0.29572385  17.26515689 271.47187446]
E1 = -18.94081706708684  E_coul = 4.593325241885247
Extra cycle  E= -14.3474918252016  delta_E= 1.6e-14  |g|= 6.33e-10  |ddm|= 2.92e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94427138e+02 1.93645553e+01 2.85046387e+00 1.04867741e-01]
E = -14.347491825201594
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.427138188        1
[INPUT] 0    0    [1    /1   ]  19.3645552636        1
[INPUT] 0    0    [1    /1   ]  2.85046386789        1
[INPUT] 0    0    [1    /1   ]  0.104867741337       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.4271381880283, 1.0]], [0, [19.36455526356123, 1.0]], [0, [2.8504638678856202, 1.0]], [0, [0.10486774133728625, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42713819]
bas 1, expnt(s) = [19.36455526]
bas 2, expnt(s) = [2.85046387]
bas 3, expnt(s) = [0.10486774]
CPU time:        19.60
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94427138e+02 1.31547527e+02 1.93645553e+01 2.33222620e+01
 2.85046387e+00 5.54244867e+00 1.04867741e-01 4.65582298e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9721519559756353
cond(S) = 5.241467737858618
E1 = -18.793524082839156  E_coul = 4.526432538813331
init E= -14.2670915440258
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305619399460907  LUMO = 17.222583341374
  mo_energy =
[ -4.60502786  -0.3056194   17.22258334 271.41444193]
E1 = -18.94163511426701  E_coul = 4.594146692582587
cycle= 1 E= -14.3474884216844  delta_E= -0.0804  |g|= 0.0135  |ddm|= 0.019
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208777
diis-c [-4.35876761e-04  1.00000000e+00]
  HOMO = -0.295713571000178  LUMO = 17.2657188158541
  mo_energy =
[ -4.58095895  -0.29571357  17.26571882 271.47392982]
E1 = -18.94083788731735  E_coul = 4.5933460642094355
cycle= 2 E= -14.3474918231079  delta_E= -3.4e-06  |g|= 0.000298  |ddm|= 0.00125
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000422837
diis-c [-1.64275136e-08 -1.96804551e-02  1.01968046e+00]
  HOMO = -0.295723825973492  LUMO = 17.2651611341355
  mo_energy =
[ -4.58135693  -0.29572383  17.26516113 271.47188986]
E1 = -18.940817223303792  E_coul = 4.5933253981023965
cycle= 3 E= -14.3474918252014  delta_E= -2.09e-09  |g|= 3.1e-06  |ddm|= 3.03e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.81187e-06
diis-c [-1.63243009e-12  3.72106028e-04 -2.43106740e-02  1.02393857e+00]
  HOMO = -0.295723855024613  LUMO = 17.2651568688473
  mo_energy =
[ -4.58135946  -0.29572386  17.26515687 271.4718744 ]
E1 = -18.940817066419324  E_coul = 4.593325241217714
cycle= 4 E= -14.3474918252016  delta_E= -2.15e-13  |g|= 2.43e-08  |ddm|= 2.55e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.940817066419324  E_coul = 4.593325241217714
  HOMO = -0.295723854077156  LUMO = 17.2651568861618
  mo_energy =
[ -4.58135944  -0.29572385  17.26515689 271.47187446]
E1 = -18.94081706708684  E_coul = 4.593325241885247
Extra cycle  E= -14.3474918252016  delta_E= 1.6e-14  |g|= 6.33e-10  |ddm|= 2.92e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.241467737858618
E1 = -18.94081706708684  E_coul = 4.593325241885247
init E= -14.3474918252016
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.295723854056483  LUMO = 17.2651568863451
  mo_energy =
[ -4.58135944  -0.29572385  17.26515689 271.47187446]
E1 = -18.94081706709424  E_coul = 4.593325241892643
cycle= 1 E= -14.3474918252016  delta_E= -3.55e-15  |g|= 1.83e-11  |ddm|= 7.11e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.94081706709424  E_coul = 4.593325241892643
  HOMO = -0.295723854056041  LUMO = 17.2651568863423
  mo_energy =
[ -4.58135944  -0.29572385  17.26515689 271.47187446]
E1 = -18.94081706709417  E_coul = 4.593325241892565
Extra cycle  E= -14.3474918252016  delta_E= -7.11e-15  |g|= 5.6e-13  |ddm|= 1.88e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94427138e+02 1.93645553e+01 2.85046387e+00 1.04867741e-01]
grad_E = [0.00025387 0.0139269  0.01443865 0.01266416]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.423409422        1
[INPUT] 0    0    [1    /1   ]  19.1313108012        1
[INPUT] 0    0    [1    /1   ]  2.86929767252        1
[INPUT] 0    0    [1    /1   ]  0.105773207941       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42340942175957, 1.0]], [0, [19.131310801220337, 1.0]], [0, [2.86929767251501, 1.0]], [0, [0.10577320794143322, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42340942]
bas 1, expnt(s) = [19.1313108]
bas 2, expnt(s) = [2.86929767]
bas 3, expnt(s) = [0.10577321]
CPU time:        21.56
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94423409e+02 1.31545635e+02 1.91313108e+01 2.31112571e+01
 2.86929767e+00 5.56989142e+00 1.05773208e-01 4.68594062e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.971518630026794
cond(S) = 5.291623818303087
E1 = -18.8012053909526  E_coul = 4.535605087140879
init E= -14.2656003038117
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305016847137297  LUMO = 17.1140645527945
  mo_energy =
[ -4.60228365  -0.30501685  17.11406455 270.71445521]
E1 = -18.96267075288482  E_coul = 4.612751735738108
cycle= 1 E= -14.3499190171467  delta_E= -0.0843  |g|= 0.0156  |ddm|= 0.0203
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0254985
diis-c [-6.50173737e-04  1.00000000e+00]
  HOMO = -0.294742935111604  LUMO = 17.1637174059197
  mo_energy =
[ -4.57384191  -0.29474294  17.16371741 270.79250948]
E1 = -18.962038497742245  E_coul = 4.6121170239581355
cycle= 2 E= -14.3499214737841  delta_E= -2.46e-06  |g|= 0.000252  |ddm|= 0.00104
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000387305
diis-c [-1.40384158e-08 -1.46734807e-02  1.01467348e+00]
  HOMO = -0.294751795686081  LUMO = 17.1632985900746
  mo_energy =
[ -4.57415509  -0.2947518   17.16329859 270.79094011]
E1 = -18.96202257657129  E_coul = 4.6121011015198325
cycle= 3 E= -14.3499214750515  delta_E= -1.27e-09  |g|= 2.94e-06  |ddm|= 2.45e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.46446e-06
diis-c [-9.58437946e-13  3.06726080e-04 -2.56048588e-02  1.02529813e+00]
  HOMO = -0.294751865045319  LUMO = 17.1632936289424
  mo_energy =
[ -4.57415843  -0.29475187  17.16329363 270.79092224]
E1 = -18.962022388474708  E_coul = 4.612100913423068
cycle= 4 E= -14.3499214750516  delta_E= -1.85e-13  |g|= 2.16e-08  |ddm|= 2.69e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.962022388474708  E_coul = 4.612100913423068
  HOMO = -0.294751864370841  LUMO = 17.1632936332738
  mo_energy =
[ -4.57415842  -0.29475186  17.16329363 270.79092224]
E1 = -18.962022388664078  E_coul = 4.61210091361244
Extra cycle  E= -14.3499214750516  delta_E= 3.55e-15  |g|= 6.45e-10  |ddm|= 2.42e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94423409e+02 1.91313108e+01 2.86929767e+00 1.05773208e-01]
E = -14.349921475051637
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.423409422        1
[INPUT] 0    0    [1    /1   ]  19.1313108012        1
[INPUT] 0    0    [1    /1   ]  2.86929767252        1
[INPUT] 0    0    [1    /1   ]  0.105773207941       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.42340942175957, 1.0]], [0, [19.131310801220337, 1.0]], [0, [2.86929767251501, 1.0]], [0, [0.10577320794143322, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.42340942]
bas 1, expnt(s) = [19.1313108]
bas 2, expnt(s) = [2.86929767]
bas 3, expnt(s) = [0.10577321]
CPU time:        21.77
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94423409e+02 1.31545635e+02 1.91313108e+01 2.31112571e+01
 2.86929767e+00 5.56989142e+00 1.05773208e-01 4.68594062e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.971518630026794
cond(S) = 5.291623818303087
E1 = -18.8012053909526  E_coul = 4.535605087140879
init E= -14.2656003038117
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305016847137297  LUMO = 17.1140645527945
  mo_energy =
[ -4.60228365  -0.30501685  17.11406455 270.71445521]
E1 = -18.96267075288482  E_coul = 4.612751735738108
cycle= 1 E= -14.3499190171467  delta_E= -0.0843  |g|= 0.0156  |ddm|= 0.0203
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0254985
diis-c [-6.50173737e-04  1.00000000e+00]
  HOMO = -0.294742935111604  LUMO = 17.1637174059197
  mo_energy =
[ -4.57384191  -0.29474294  17.16371741 270.79250948]
E1 = -18.962038497742245  E_coul = 4.6121170239581355
cycle= 2 E= -14.3499214737841  delta_E= -2.46e-06  |g|= 0.000252  |ddm|= 0.00104
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000387305
diis-c [-1.40384158e-08 -1.46734807e-02  1.01467348e+00]
  HOMO = -0.294751795686081  LUMO = 17.1632985900746
  mo_energy =
[ -4.57415509  -0.2947518   17.16329859 270.79094011]
E1 = -18.96202257657129  E_coul = 4.6121011015198325
cycle= 3 E= -14.3499214750515  delta_E= -1.27e-09  |g|= 2.94e-06  |ddm|= 2.45e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.46446e-06
diis-c [-9.58437946e-13  3.06726080e-04 -2.56048588e-02  1.02529813e+00]
  HOMO = -0.294751865045319  LUMO = 17.1632936289424
  mo_energy =
[ -4.57415843  -0.29475187  17.16329363 270.79092224]
E1 = -18.962022388474708  E_coul = 4.612100913423068
cycle= 4 E= -14.3499214750516  delta_E= -1.85e-13  |g|= 2.16e-08  |ddm|= 2.69e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.962022388474708  E_coul = 4.612100913423068
  HOMO = -0.294751864370841  LUMO = 17.1632936332738
  mo_energy =
[ -4.57415842  -0.29475186  17.16329363 270.79092224]
E1 = -18.962022388664078  E_coul = 4.61210091361244
Extra cycle  E= -14.3499214750516  delta_E= 3.55e-15  |g|= 6.45e-10  |ddm|= 2.42e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.291623818303087
E1 = -18.962022388664078  E_coul = 4.61210091361244
init E= -14.3499214750516
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294751864356106  LUMO = 17.1632936331343
  mo_energy =
[ -4.57415842  -0.29475186  17.16329363 270.79092224]
E1 = -18.962022388659427  E_coul = 4.61210091360778
cycle= 1 E= -14.3499214750516  delta_E= -1.07e-14  |g|= 2.08e-11  |ddm|= 6.57e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.962022388659427  E_coul = 4.61210091360778
  HOMO = -0.294751864355791  LUMO = 17.163293633123
  mo_energy =
[ -4.57415842  -0.29475186  17.16329363 270.79092224]
E1 = -18.962022388659022  E_coul = 4.612100913607375
Extra cycle  E= -14.3499214750516  delta_E=    0  |g|= 7.19e-13  |ddm|= 1.95e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94423409e+02 1.91313108e+01 2.86929767e+00 1.05773208e-01]
grad_E = [0.00028878 0.01150737 0.03977093 0.04927916]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.41165822         1
[INPUT] 0    0    [1    /1   ]  18.4044469984        1
[INPUT] 0    0    [1    /1   ]  2.87263427159        1
[INPUT] 0    0    [1    /1   ]  0.107102413948       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.411658219973, 1.0]], [0, [18.40444699837007, 1.0]], [0, [2.8726342715894075, 1.0]], [0, [0.10710241394832397, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.41165822]
bas 1, expnt(s) = [18.404447]
bas 2, expnt(s) = [2.87263427]
bas 3, expnt(s) = [0.10710241]
CPU time:        23.63
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94411658e+02 1.31539671e+02 1.84044470e+01 2.24495223e+01
 2.87263427e+00 5.57474847e+00 1.07102414e-01 4.73003625e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9709843801111244
cond(S) = 5.382951129536553
E1 = -18.8115937179578  E_coul = 4.548051687583304
init E= -14.2635420303745
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303946395261501  LUMO = 16.5784340835902
  mo_energy =
[ -4.60023851  -0.3039464   16.57843408 268.35406881]
E1 = -18.993811946954725  E_coul = 4.6376678961673425
cycle= 1 E= -14.3561440507874  delta_E= -0.0926  |g|= 0.0244  |ddm|= 0.034
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0381356
diis-c [-0.00145433  1.        ]
  HOMO = -0.293381596324462  LUMO = 16.6361203029858
  mo_energy =
[ -4.56585749  -0.2933816   16.6361203  268.45701898]
E1 = -18.99346502509532  E_coul = 4.637318931982921
cycle= 2 E= -14.3561460931124  delta_E= -2.04e-06  |g|= 0.000274  |ddm|= 0.000762
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000415578
diis-c [-5.70558712e-09 -1.08319479e-02  1.01083195e+00]
  HOMO = -0.293388281059879  LUMO = 16.6359352200514
  mo_energy =
[ -4.56602719  -0.29338828  16.63593522 268.45624775]
E1 = -18.99345750560354  E_coul = 4.637311411866862
cycle= 3 E= -14.3561460937367  delta_E= -6.24e-10  |g|= 1.65e-06  |ddm|= 1.77e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
E1 = -18.99345750560354  E_coul = 4.637311411866862
  HOMO = -0.293388357481258  LUMO = 16.635933369893
  mo_energy =
[ -4.56602898  -0.29338836  16.63593337 268.45624147]
E1 = -18.99345742852255  E_coul = 4.6373113347857835
Extra cycle  E= -14.3561460937368  delta_E= -8.7e-14  |g|= 3.98e-08  |ddm|= 2.21e-07
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
exp = [1.94411658e+02 1.84044470e+01 2.87263427e+00 1.07102414e-01]
E = -14.356146093736767
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.41165822         1
[INPUT] 0    0    [1    /1   ]  18.4044469984        1
[INPUT] 0    0    [1    /1   ]  2.87263427159        1
[INPUT] 0    0    [1    /1   ]  0.107102413948       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.411658219973, 1.0]], [0, [18.40444699837007, 1.0]], [0, [2.8726342715894075, 1.0]], [0, [0.10710241394832397, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.41165822]
bas 1, expnt(s) = [18.404447]
bas 2, expnt(s) = [2.87263427]
bas 3, expnt(s) = [0.10710241]
CPU time:        23.86
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94411658e+02 1.31539671e+02 1.84044470e+01 2.24495223e+01
 2.87263427e+00 5.57474847e+00 1.07102414e-01 4.73003625e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9709843801111244
cond(S) = 5.382951129536553
E1 = -18.8115937179578  E_coul = 4.548051687583304
init E= -14.2635420303745
    CPU time for initialize scf      0.02 sec, wall time      0.05 sec
  HOMO = -0.303946395261501  LUMO = 16.5784340835902
  mo_energy =
[ -4.60023851  -0.3039464   16.57843408 268.35406881]
E1 = -18.993811946954725  E_coul = 4.6376678961673425
cycle= 1 E= -14.3561440507874  delta_E= -0.0926  |g|= 0.0244  |ddm|= 0.034
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0381356
diis-c [-0.00145433  1.        ]
  HOMO = -0.293381596324462  LUMO = 16.6361203029858
  mo_energy =
[ -4.56585749  -0.2933816   16.6361203  268.45701898]
E1 = -18.99346502509532  E_coul = 4.637318931982921
cycle= 2 E= -14.3561460931124  delta_E= -2.04e-06  |g|= 0.000274  |ddm|= 0.000762
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000415578
diis-c [-5.70558712e-09 -1.08319479e-02  1.01083195e+00]
  HOMO = -0.293388281059879  LUMO = 16.6359352200514
  mo_energy =
[ -4.56602719  -0.29338828  16.63593522 268.45624775]
E1 = -18.99345750560354  E_coul = 4.637311411866862
cycle= 3 E= -14.3561460937367  delta_E= -6.24e-10  |g|= 1.65e-06  |ddm|= 1.77e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
E1 = -18.99345750560354  E_coul = 4.637311411866862
  HOMO = -0.293388357481258  LUMO = 16.635933369893
  mo_energy =
[ -4.56602898  -0.29338836  16.63593337 268.45624147]
E1 = -18.99345742852255  E_coul = 4.6373113347857835
Extra cycle  E= -14.3561460937368  delta_E= -8.7e-14  |g|= 3.98e-08  |ddm|= 2.21e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.382951129536553
E1 = -18.99345742852255  E_coul = 4.6373113347857835
init E= -14.3561460937368
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.293388359221889  LUMO = 16.6359333350861
  mo_energy =
[ -4.56602902  -0.29338836  16.63593334 268.45624135]
E1 = -18.993457427059482  E_coul = 4.637311333322732
cycle= 1 E= -14.3561460937368  delta_E= 1.6e-14  |g|= 1.03e-09  |ddm|= 5.22e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.993457427059482  E_coul = 4.637311333322732
  HOMO = -0.293388359261345  LUMO = 16.6359333345557
  mo_energy =
[ -4.56602902  -0.29338836  16.63593333 268.45624135]
E1 = -18.993457427036578  E_coul = 4.637311333299818
Extra cycle  E= -14.3561460937368  delta_E= -8.88e-15  |g|= 2.94e-11  |ddm|= 1.28e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94411658e+02 1.84044470e+01 2.87263427e+00 1.07102414e-01]
grad_E = [0.00038248 0.00631823 0.07957251 0.10452085]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.391339073        1
[INPUT] 0    0    [1    /1   ]  17.1644451669        1
[INPUT] 0    0    [1    /1   ]  2.81545030287        1
[INPUT] 0    0    [1    /1   ]  0.107752734285       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3913390731881, 1.0]], [0, [17.164445166886907, 1.0]], [0, [2.81545030287256, 1.0]], [0, [0.10775273428453455, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.39133907]
bas 1, expnt(s) = [17.16444517]
bas 2, expnt(s) = [2.8154503]
bas 3, expnt(s) = [0.10775273]
CPU time:        25.72
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94391339e+02 1.31529360e+02 1.71644452e+01 2.13052852e+01
 2.81545030e+00 5.49130952e+00 1.07752734e-01 4.75156034e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.972092135285373
cond(S) = 5.479753642182425
E1 = -18.8177298334175  E_coul = 4.5526849965003215
init E= -14.2650448369172
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302963366818925  LUMO = 15.4571573413483
  mo_energy =
[ -4.60325571  -0.30296337  15.45715734 264.12844107]
E1 = -19.009380318779442  E_coul = 4.644362061212112
cycle= 1 E= -14.3650182575673  delta_E= -0.1  |g|= 0.0366  |ddm|= 0.0466
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0555696
diis-c [-0.00308798  1.        ]
  HOMO = -0.292955073448686  LUMO = 15.5148674474354
  mo_energy =
[ -4.56737471  -0.29295507  15.51486745 264.23722985]
E1 = -19.009280256907243  E_coul = 4.644258572018315
cycle= 2 E= -14.3650216848889  delta_E= -3.43e-06  |g|= 0.000421  |ddm|= 0.000755
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000572057
diis-c [-2.48760424e-08 -9.99435783e-03  1.00999436e+00]
  HOMO = -0.292960380696159  LUMO = 15.5148765903777
  mo_energy =
[ -4.56742169  -0.29296038  15.51487659 264.23714221]
E1 = -19.009280621401164  E_coul = 4.64425893527812
cycle= 3 E= -14.365021686123  delta_E= -1.23e-09  |g|= 4.54e-06  |ddm|= 2.17e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.89143e-06
diis-c [-4.19180164e-13  3.98083489e-04 -3.84138922e-02  1.03801581e+00]
  HOMO = -0.292960452373947  LUMO = 15.5148791374209
  mo_energy =
[ -4.5674209   -0.29296045  15.51487914 264.23715343]
E1 = -19.009280726207425  E_coul = 4.644259040083794
cycle= 4 E= -14.3650216861236  delta_E= -5.88e-13  |g|= 1.68e-08  |ddm|= 4.93e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.009280726207425  E_coul = 4.644259040083794
  HOMO = -0.292960451607201  LUMO = 15.514879165559
  mo_energy =
[ -4.56742087  -0.29296045  15.51487917 264.23715354]
E1 = -19.00928072748437  E_coul = 4.644259041360736
Extra cycle  E= -14.3650216861236  delta_E= -1.78e-15  |g|= 4.29e-10  |ddm|= 2.25e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94391339e+02 1.71644452e+01 2.81545030e+00 1.07752734e-01]
E = -14.365021686123633
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.391339073        1
[INPUT] 0    0    [1    /1   ]  17.1644451669        1
[INPUT] 0    0    [1    /1   ]  2.81545030287        1
[INPUT] 0    0    [1    /1   ]  0.107752734285       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3913390731881, 1.0]], [0, [17.164445166886907, 1.0]], [0, [2.81545030287256, 1.0]], [0, [0.10775273428453455, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.39133907]
bas 1, expnt(s) = [17.16444517]
bas 2, expnt(s) = [2.8154503]
bas 3, expnt(s) = [0.10775273]
CPU time:        25.95
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94391339e+02 1.31529360e+02 1.71644452e+01 2.13052852e+01
 2.81545030e+00 5.49130952e+00 1.07752734e-01 4.75156034e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.972092135285373
cond(S) = 5.479753642182425
E1 = -18.8177298334175  E_coul = 4.5526849965003215
init E= -14.2650448369172
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302963366818925  LUMO = 15.4571573413483
  mo_energy =
[ -4.60325571  -0.30296337  15.45715734 264.12844107]
E1 = -19.009380318779442  E_coul = 4.644362061212112
cycle= 1 E= -14.3650182575673  delta_E= -0.1  |g|= 0.0366  |ddm|= 0.0466
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0555696
diis-c [-0.00308798  1.        ]
  HOMO = -0.292955073448686  LUMO = 15.5148674474354
  mo_energy =
[ -4.56737471  -0.29295507  15.51486745 264.23722985]
E1 = -19.009280256907243  E_coul = 4.644258572018315
cycle= 2 E= -14.3650216848889  delta_E= -3.43e-06  |g|= 0.000421  |ddm|= 0.000755
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000572057
diis-c [-2.48760424e-08 -9.99435783e-03  1.00999436e+00]
  HOMO = -0.292960380696159  LUMO = 15.5148765903777
  mo_energy =
[ -4.56742169  -0.29296038  15.51487659 264.23714221]
E1 = -19.009280621401164  E_coul = 4.64425893527812
cycle= 3 E= -14.365021686123  delta_E= -1.23e-09  |g|= 4.54e-06  |ddm|= 2.17e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.89143e-06
diis-c [-4.19180164e-13  3.98083489e-04 -3.84138922e-02  1.03801581e+00]
  HOMO = -0.292960452373947  LUMO = 15.5148791374209
  mo_energy =
[ -4.5674209   -0.29296045  15.51487914 264.23715343]
E1 = -19.009280726207425  E_coul = 4.644259040083794
cycle= 4 E= -14.3650216861236  delta_E= -5.88e-13  |g|= 1.68e-08  |ddm|= 4.93e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.009280726207425  E_coul = 4.644259040083794
  HOMO = -0.292960451607201  LUMO = 15.514879165559
  mo_energy =
[ -4.56742087  -0.29296045  15.51487917 264.23715354]
E1 = -19.00928072748437  E_coul = 4.644259041360736
Extra cycle  E= -14.3650216861236  delta_E= -1.78e-15  |g|= 4.29e-10  |ddm|= 2.25e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.479753642182425
E1 = -19.00928072748437  E_coul = 4.644259041360736
init E= -14.3650216861236
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.292960451588561  LUMO = 15.5148791663009
  mo_energy =
[ -4.56742087  -0.29296045  15.51487917 264.23715354]
E1 = -19.0092807275178  E_coul = 4.644259041394171
cycle= 1 E= -14.3650216861236  delta_E= 3.55e-15  |g|= 1.16e-11  |ddm|= 5.51e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.0092807275178  E_coul = 4.644259041394171
  HOMO = -0.292960451588112  LUMO = 15.5148791663211
  mo_energy =
[ -4.56742087  -0.29296045  15.51487917 264.23715354]
E1 = -19.009280727518718  E_coul = 4.644259041395078
Extra cycle  E= -14.3650216861236  delta_E= -1.07e-14  |g|= 3.69e-13  |ddm|= 1.38e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94391339e+02 1.71644452e+01 2.81545030e+00 1.07752734e-01]
grad_E = [ 0.00053433 -0.0008417   0.1080708   0.13695444]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.369863798        1
[INPUT] 0    0    [1    /1   ]  15.9428671164        1
[INPUT] 0    0    [1    /1   ]  2.68744802311        1
[INPUT] 0    0    [1    /1   ]  0.106602784553       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3698637981451, 1.0]], [0, [15.942867116444264, 1.0]], [0, [2.6874480231052873, 1.0]], [0, [0.10660278455341611, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.3698638]
bas 1, expnt(s) = [15.94286712]
bas 2, expnt(s) = [2.68744802]
bas 3, expnt(s) = [0.10660278]
CPU time:        27.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94369864e+02 1.31518462e+02 1.59428671e+01 2.01576474e+01
 2.68744802e+00 5.30298110e+00 1.06602785e-01 4.71347747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9755105922233396
cond(S) = 5.492950563258449
E1 = -18.82162675055533  E_coul = 4.5403323151323685
init E= -14.281294435423
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302976103615633  LUMO = 14.1289648496198
  mo_energy =
[ -4.61388484  -0.3029761   14.12896485 259.74756999]
E1 = -18.986386778919748  E_coul = 4.612231255107068
cycle= 1 E= -14.3741555238127  delta_E= -0.0929  |g|= 0.0422  |ddm|= 0.0404
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0654033
diis-c [-0.00427759  1.        ]
  HOMO = -0.294672702422619  LUMO = 14.172938806579
  mo_energy =
[ -4.58629174  -0.2946727   14.17293881 259.82233885]
E1 = -18.98621095895643  E_coul = 4.6120507372057515
cycle= 2 E= -14.3741602217507  delta_E= -4.7e-06  |g|= 0.000489  |ddm|= 0.000963
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00067895
diis-c [-3.39925918e-08 -1.00917562e-02  1.01009176e+00]
  HOMO = -0.294679946571092  LUMO = 14.1729160989568
  mo_energy =
[ -4.58637571  -0.29467995  14.1729161  259.82211532]
E1 = -18.986209793465104  E_coul = 4.612049569864274
cycle= 3 E= -14.3741602236008  delta_E= -1.85e-09  |g|= 5.67e-06  |ddm|= 2.91e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.15934e-06
diis-c [-7.38000211e-13  4.17095121e-04 -4.00309731e-02  1.03961388e+00]
  HOMO = -0.294680059939155  LUMO = 14.1729185256443
  mo_energy =
[ -4.58637525  -0.29468006  14.17291853 259.82212712]
E1 = -18.98620989455948  E_coul = 4.612049670957653
cycle= 4 E= -14.3741602236018  delta_E= -9.97e-13  |g|= 2.34e-08  |ddm|= 6.99e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.98620989455948  E_coul = 4.612049670957653
  HOMO = -0.294680058880518  LUMO = 14.1729185648819
  mo_energy =
[ -4.58637522  -0.29468006  14.17291856 259.82212728]
E1 = -18.986209896509155  E_coul = 4.612049672907329
Extra cycle  E= -14.3741602236018  delta_E=    0  |g|= 6.37e-10  |ddm|= 3.31e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94369864e+02 1.59428671e+01 2.68744802e+00 1.06602785e-01]
E = -14.374160223601827
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.369863798        1
[INPUT] 0    0    [1    /1   ]  15.9428671164        1
[INPUT] 0    0    [1    /1   ]  2.68744802311        1
[INPUT] 0    0    [1    /1   ]  0.106602784553       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3698637981451, 1.0]], [0, [15.942867116444264, 1.0]], [0, [2.6874480231052873, 1.0]], [0, [0.10660278455341611, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.3698638]
bas 1, expnt(s) = [15.94286712]
bas 2, expnt(s) = [2.68744802]
bas 3, expnt(s) = [0.10660278]
CPU time:        28.08
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94369864e+02 1.31518462e+02 1.59428671e+01 2.01576474e+01
 2.68744802e+00 5.30298110e+00 1.06602785e-01 4.71347747e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9755105922233396
cond(S) = 5.492950563258449
E1 = -18.82162675055533  E_coul = 4.5403323151323685
init E= -14.281294435423
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302976103615633  LUMO = 14.1289648496198
  mo_energy =
[ -4.61388484  -0.3029761   14.12896485 259.74756999]
E1 = -18.986386778919748  E_coul = 4.612231255107068
cycle= 1 E= -14.3741555238127  delta_E= -0.0929  |g|= 0.0422  |ddm|= 0.0404
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0654033
diis-c [-0.00427759  1.        ]
  HOMO = -0.294672702422619  LUMO = 14.172938806579
  mo_energy =
[ -4.58629174  -0.2946727   14.17293881 259.82233885]
E1 = -18.98621095895643  E_coul = 4.6120507372057515
cycle= 2 E= -14.3741602217507  delta_E= -4.7e-06  |g|= 0.000489  |ddm|= 0.000963
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00067895
diis-c [-3.39925918e-08 -1.00917562e-02  1.01009176e+00]
  HOMO = -0.294679946571092  LUMO = 14.1729160989568
  mo_energy =
[ -4.58637571  -0.29467995  14.1729161  259.82211532]
E1 = -18.986209793465104  E_coul = 4.612049569864274
cycle= 3 E= -14.3741602236008  delta_E= -1.85e-09  |g|= 5.67e-06  |ddm|= 2.91e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.15934e-06
diis-c [-7.38000211e-13  4.17095121e-04 -4.00309731e-02  1.03961388e+00]
  HOMO = -0.294680059939155  LUMO = 14.1729185256443
  mo_energy =
[ -4.58637525  -0.29468006  14.17291853 259.82212712]
E1 = -18.98620989455948  E_coul = 4.612049670957653
cycle= 4 E= -14.3741602236018  delta_E= -9.97e-13  |g|= 2.34e-08  |ddm|= 6.99e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.98620989455948  E_coul = 4.612049670957653
  HOMO = -0.294680058880518  LUMO = 14.1729185648819
  mo_energy =
[ -4.58637522  -0.29468006  14.17291856 259.82212728]
E1 = -18.986209896509155  E_coul = 4.612049672907329
Extra cycle  E= -14.3741602236018  delta_E=    0  |g|= 6.37e-10  |ddm|= 3.31e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.492950563258449
E1 = -18.986209896509155  E_coul = 4.612049672907329
init E= -14.3741602236018
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.294680058853432  LUMO = 14.1729185659727
  mo_energy =
[ -4.58637522  -0.29468006  14.17291857 259.82212728]
E1 = -18.98620989656289  E_coul = 4.612049672961061
cycle= 1 E= -14.3741602236018  delta_E= -3.55e-15  |g|= 1.84e-11  |ddm|= 8.56e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.98620989656289  E_coul = 4.612049672961061
  HOMO = -0.29468005885275  LUMO = 14.1729185660039
  mo_energy =
[ -4.58637522  -0.29468006  14.17291857 259.82212728]
E1 = -18.986209896564393  E_coul = 4.612049672962573
Extra cycle  E= -14.3741602236018  delta_E= 1.07e-14  |g|= 6.14e-13  |ddm|= 2.27e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94369864e+02 1.59428671e+01 2.68744802e+00 1.06602785e-01]
grad_E = [ 0.00067318 -0.00572399  0.09309228  0.10088378]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.356146187        1
[INPUT] 0    0    [1    /1   ]  15.3712665707        1
[INPUT] 0    0    [1    /1   ]  2.54120385868        1
[INPUT] 0    0    [1    /1   ]  0.104527513797       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35614618650519, 1.0]], [0, [15.37126657069129, 1.0]], [0, [2.5412038586762673, 1.0]], [0, [0.10452751379698601, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35614619]
bas 1, expnt(s) = [15.37126657]
bas 2, expnt(s) = [2.54120386]
bas 3, expnt(s) = [0.10452751]
CPU time:        29.98
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94356146e+02 1.31511501e+02 1.53712666e+01 1.96131462e+01
 2.54120386e+00 5.08504328e+00 1.04527514e-01 4.64448955e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978774841821571
cond(S) = 5.359328893571354
E1 = -18.82784012011338  E_coul = 4.517964244173449
init E= -14.3098758759399
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303720910285124  LUMO = 13.2217281832735
  mo_energy =
[ -4.62745833  -0.30372091  13.22172818 257.43440309]
E1 = -18.93627667241176  E_coul = 4.555794862989097
cycle= 1 E= -14.3804818094227  delta_E= -0.0706  |g|= 0.0353  |ddm|= 0.0345
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0573497
diis-c [-0.00328899  1.        ]
  HOMO = -0.297265292400157  LUMO = 13.2447240837567
  mo_energy =
[ -4.61508059  -0.29726529  13.24472408 257.44699199]
E1 = -18.935593194181138  E_coul = 4.555106470324874
cycle= 2 E= -14.3804867238563  delta_E= -4.91e-06  |g|= 0.000407  |ddm|= 0.00143
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000621366
diis-c [-1.89156707e-08 -1.06788056e-02  1.01067881e+00]
  HOMO = -0.297277936323459  LUMO = 13.2443941586715
  mo_energy =
[ -4.61541587  -0.29727794  13.24439416 257.44554693]
E1 = -18.935576727857722  E_coul = 4.555090001966219
cycle= 3 E= -14.3804867258915  delta_E= -2.04e-09  |g|= 3.73e-06  |ddm|= 3.83e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.91307e-06
diis-c [-6.73131589e-13  3.07761374e-04 -2.89064352e-02  1.02859867e+00]
  HOMO = -0.297278131386558  LUMO = 13.2443901000966
  mo_energy =
[ -4.61542036  -0.29727813  13.2443901  257.44553215]
E1 = -18.93557651063342  E_coul = 4.555089784741402
cycle= 4 E= -14.380486725892  delta_E= -5.17e-13  |g|= 2.63e-08  |ddm|= 6.6e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.93557651063342  E_coul = 4.555089784741402
  HOMO = -0.297278131261716  LUMO = 13.2443901300977
  mo_energy =
[ -4.61542034  -0.29727813  13.24439013 257.44553227]
E1 = -18.93557651206781  E_coul = 4.555089786175791
Extra cycle  E= -14.380486725892  delta_E=    0  |g|= 1.01e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94356146e+02 1.53712666e+01 2.54120386e+00 1.04527514e-01]
E = -14.38048672589202
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.356146187        1
[INPUT] 0    0    [1    /1   ]  15.3712665707        1
[INPUT] 0    0    [1    /1   ]  2.54120385868        1
[INPUT] 0    0    [1    /1   ]  0.104527513797       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35614618650519, 1.0]], [0, [15.37126657069129, 1.0]], [0, [2.5412038586762673, 1.0]], [0, [0.10452751379698601, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35614619]
bas 1, expnt(s) = [15.37126657]
bas 2, expnt(s) = [2.54120386]
bas 3, expnt(s) = [0.10452751]
CPU time:        30.23
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94356146e+02 1.31511501e+02 1.53712666e+01 1.96131462e+01
 2.54120386e+00 5.08504328e+00 1.04527514e-01 4.64448955e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978774841821571
cond(S) = 5.359328893571354
E1 = -18.82784012011338  E_coul = 4.517964244173449
init E= -14.3098758759399
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.303720910285124  LUMO = 13.2217281832735
  mo_energy =
[ -4.62745833  -0.30372091  13.22172818 257.43440309]
E1 = -18.93627667241176  E_coul = 4.555794862989097
cycle= 1 E= -14.3804818094227  delta_E= -0.0706  |g|= 0.0353  |ddm|= 0.0345
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0573497
diis-c [-0.00328899  1.        ]
  HOMO = -0.297265292400157  LUMO = 13.2447240837567
  mo_energy =
[ -4.61508059  -0.29726529  13.24472408 257.44699199]
E1 = -18.935593194181138  E_coul = 4.555106470324874
cycle= 2 E= -14.3804867238563  delta_E= -4.91e-06  |g|= 0.000407  |ddm|= 0.00143
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000621366
diis-c [-1.89156707e-08 -1.06788056e-02  1.01067881e+00]
  HOMO = -0.297277936323459  LUMO = 13.2443941586715
  mo_energy =
[ -4.61541587  -0.29727794  13.24439416 257.44554693]
E1 = -18.935576727857722  E_coul = 4.555090001966219
cycle= 3 E= -14.3804867258915  delta_E= -2.04e-09  |g|= 3.73e-06  |ddm|= 3.83e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.91307e-06
diis-c [-6.73131589e-13  3.07761374e-04 -2.89064352e-02  1.02859867e+00]
  HOMO = -0.297278131386558  LUMO = 13.2443901000966
  mo_energy =
[ -4.61542036  -0.29727813  13.2443901  257.44553215]
E1 = -18.93557651063342  E_coul = 4.555089784741402
cycle= 4 E= -14.380486725892  delta_E= -5.17e-13  |g|= 2.63e-08  |ddm|= 6.6e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.93557651063342  E_coul = 4.555089784741402
  HOMO = -0.297278131261716  LUMO = 13.2443901300977
  mo_energy =
[ -4.61542034  -0.29727813  13.24439013 257.44553227]
E1 = -18.93557651206781  E_coul = 4.555089786175791
Extra cycle  E= -14.380486725892  delta_E=    0  |g|= 1.01e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.359328893571354
E1 = -18.93557651206781  E_coul = 4.555089786175791
init E= -14.380486725892
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.29727813125994  LUMO = 13.24439013117
  mo_energy =
[ -4.61542034  -0.29727813  13.24439013 257.44553228]
E1 = -18.935576512118327  E_coul = 4.555089786226308
cycle= 1 E= -14.380486725892  delta_E=    0  |g|= 3.95e-11  |ddm|= 1.05e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.935576512118327  E_coul = 4.555089786226308
  HOMO = -0.297278131259971  LUMO = 13.2443901312092
  mo_energy =
[ -4.61542034  -0.29727813  13.24439013 257.44553228]
E1 = -18.93557651212017  E_coul = 4.5550897862281445
Extra cycle  E= -14.380486725892  delta_E= -7.11e-15  |g|= 1.55e-12  |ddm|= 4.17e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94356146e+02 1.53712666e+01 2.54120386e+00 1.04527514e-01]
grad_E = [ 0.00070792 -0.00269388  0.02371309  0.02721459]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.356112048        1
[INPUT] 0    0    [1    /1   ]  15.4649974955        1
[INPUT] 0    0    [1    /1   ]  2.51725613866        1
[INPUT] 0    0    [1    /1   ]  0.103865366877       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35611204765937, 1.0]], [0, [15.464997495506283, 1.0]], [0, [2.5172561386591705, 1.0]], [0, [0.10386536687689239, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35611205]
bas 1, expnt(s) = [15.4649975]
bas 2, expnt(s) = [2.51725614]
bas 3, expnt(s) = [0.10386537]
CPU time:        32.13
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94356112e+02 1.31511483e+02 1.54649975e+01 1.97027758e+01
 2.51725614e+00 5.04906057e+00 1.03865367e-01 4.62240606e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791559249631794
cond(S) = 5.299517947952122
E1 = -18.827321448944495  E_coul = 4.510894678950937
init E= -14.3164267699936
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304135005208233  LUMO = 13.2028190637319
  mo_energy =
[ -4.63077758  -0.30413501  13.20281906 257.66273256]
E1 = -18.92104449873184  E_coul = 4.540173208043401
cycle= 1 E= -14.3808712906884  delta_E= -0.0644  |g|= 0.0311  |ddm|= 0.0393
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0510786
diis-c [-0.00260902  1.        ]
  HOMO = -0.297972892819623  LUMO = 13.2207285726334
  mo_energy =
[ -4.6223787   -0.29797289  13.22072857 257.65913647]
E1 = -18.920180110163887  E_coul = 4.539303611959572
cycle= 2 E= -14.3808764982043  delta_E= -5.21e-06  |g|= 0.00038  |ddm|= 0.00161
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000583693
diis-c [-2.25782444e-08 -1.11655482e-02  1.01116555e+00]
  HOMO = -0.297987139023749  LUMO = 13.2202812526649
  mo_energy =
[ -4.62280416  -0.29798714  13.22028125 257.65723765]
E1 = -18.9201582406986  E_coul = 4.539281740050391
cycle= 3 E= -14.3808765006482  delta_E= -2.44e-09  |g|= 3.85e-06  |ddm|= 4.22e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.76315e-06
diis-c [-4.16610799e-14  2.75733918e-04 -2.57519580e-02  1.02547622e+00]
  HOMO = -0.297987345907046  LUMO = 13.2202749736016
  mo_energy =
[ -4.62281019  -0.29798735  13.22027497 257.65721359]
E1 = -18.92015792316633  E_coul = 4.539281422517597
cycle= 4 E= -14.3808765006487  delta_E= -5.22e-13  |g|= 6.48e-09  |ddm|= 6.48e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92015792316633  E_coul = 4.539281422517597
  HOMO = -0.297987346060005  LUMO = 13.2202749758865
  mo_energy =
[ -4.62281019  -0.29798735  13.22027498 257.65721361]
E1 = -18.92015792325859  E_coul = 4.539281422609866
Extra cycle  E= -14.3808765006487  delta_E= 8.88e-15  |g|= 2.53e-10  |ddm|= 8.28e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94356112e+02 1.54649975e+01 2.51725614e+00 1.03865367e-01]
E = -14.380876500648723
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.356112048        1
[INPUT] 0    0    [1    /1   ]  15.4649974955        1
[INPUT] 0    0    [1    /1   ]  2.51725613866        1
[INPUT] 0    0    [1    /1   ]  0.103865366877       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35611204765937, 1.0]], [0, [15.464997495506283, 1.0]], [0, [2.5172561386591705, 1.0]], [0, [0.10386536687689239, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35611205]
bas 1, expnt(s) = [15.4649975]
bas 2, expnt(s) = [2.51725614]
bas 3, expnt(s) = [0.10386537]
CPU time:        32.41
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94356112e+02 1.31511483e+02 1.54649975e+01 1.97027758e+01
 2.51725614e+00 5.04906057e+00 1.03865367e-01 4.62240606e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791559249631794
cond(S) = 5.299517947952122
E1 = -18.827321448944495  E_coul = 4.510894678950937
init E= -14.3164267699936
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304135005208233  LUMO = 13.2028190637319
  mo_energy =
[ -4.63077758  -0.30413501  13.20281906 257.66273256]
E1 = -18.92104449873184  E_coul = 4.540173208043401
cycle= 1 E= -14.3808712906884  delta_E= -0.0644  |g|= 0.0311  |ddm|= 0.0393
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0510786
diis-c [-0.00260902  1.        ]
  HOMO = -0.297972892819623  LUMO = 13.2207285726334
  mo_energy =
[ -4.6223787   -0.29797289  13.22072857 257.65913647]
E1 = -18.920180110163887  E_coul = 4.539303611959572
cycle= 2 E= -14.3808764982043  delta_E= -5.21e-06  |g|= 0.00038  |ddm|= 0.00161
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000583693
diis-c [-2.25782444e-08 -1.11655482e-02  1.01116555e+00]
  HOMO = -0.297987139023749  LUMO = 13.2202812526649
  mo_energy =
[ -4.62280416  -0.29798714  13.22028125 257.65723765]
E1 = -18.9201582406986  E_coul = 4.539281740050391
cycle= 3 E= -14.3808765006482  delta_E= -2.44e-09  |g|= 3.85e-06  |ddm|= 4.22e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.76315e-06
diis-c [-4.16610799e-14  2.75733918e-04 -2.57519580e-02  1.02547622e+00]
  HOMO = -0.297987345907046  LUMO = 13.2202749736016
  mo_energy =
[ -4.62281019  -0.29798735  13.22027497 257.65721359]
E1 = -18.92015792316633  E_coul = 4.539281422517597
cycle= 4 E= -14.3808765006487  delta_E= -5.22e-13  |g|= 6.48e-09  |ddm|= 6.48e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92015792316633  E_coul = 4.539281422517597
  HOMO = -0.297987346060005  LUMO = 13.2202749758865
  mo_energy =
[ -4.62281019  -0.29798735  13.22027498 257.65721361]
E1 = -18.92015792325859  E_coul = 4.539281422609866
Extra cycle  E= -14.3808765006487  delta_E= 8.88e-15  |g|= 2.53e-10  |ddm|= 8.28e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.299517947952122
E1 = -18.92015792325859  E_coul = 4.539281422609866
init E= -14.3808765006487
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.297987346064043  LUMO = 13.2202749760237
  mo_energy =
[ -4.62281019  -0.29798735  13.22027498 257.65721361]
E1 = -18.920157923264323  E_coul = 4.539281422615605
cycle= 1 E= -14.3808765006487  delta_E= 5.33e-15  |g|= 9.98e-12  |ddm|= 3.06e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.920157923264323  E_coul = 4.539281422615605
  HOMO = -0.297987346064169  LUMO = 13.2202749760302
  mo_energy =
[ -4.62281019  -0.29798735  13.22027498 257.65721361]
E1 = -18.920157923264618  E_coul = 4.539281422615892
Extra cycle  E= -14.3808765006487  delta_E= -7.11e-15  |g|= 4.29e-13  |ddm|= 1.16e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94356112e+02 1.54649975e+01 2.51725614e+00 1.03865367e-01]
grad_E = [ 0.00068185  0.00019162 -0.00183703  0.00068578]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.355665418        1
[INPUT] 0    0    [1    /1   ]  15.4587498814        1
[INPUT] 0    0    [1    /1   ]  2.51896554021        1
[INPUT] 0    0    [1    /1   ]  0.103857268251       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35566541772414, 1.0]], [0, [15.458749881418262, 1.0]], [0, [2.5189655402144093, 1.0]], [0, [0.1038572682507205, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35566542]
bas 1, expnt(s) = [15.45874988]
bas 2, expnt(s) = [2.51896554]
bas 3, expnt(s) = [0.10385727]
CPU time:        34.33
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94355665e+02 1.31511257e+02 1.54587499e+01 1.96968058e+01
 2.51896554e+00 5.05163186e+00 1.03857268e-01 4.62213574e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791310230812567
cond(S) = 5.3033498998713124
E1 = -18.826982361317185  E_coul = 4.510971635849639
init E= -14.3160107254675
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304151416394044  LUMO = 13.2041372398267
  mo_energy =
[ -4.63072356  -0.30415142  13.20413724 257.6470491 ]
E1 = -18.921651772940777  E_coul = 4.5407780075884245
cycle= 1 E= -14.3808737653524  delta_E= -0.0649  |g|= 0.0314  |ddm|= 0.039
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0514992
diis-c [-0.00265217  1.        ]
  HOMO = -0.297972239492132  LUMO = 13.2223792329932
  mo_energy =
[ -4.62207818  -0.29797224  13.22237923 257.64452581]
E1 = -18.92079926648105  E_coul = 4.539920309477337
cycle= 2 E= -14.3808789570037  delta_E= -5.19e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00058566
diis-c [-2.22585062e-08 -1.11193506e-02  1.01111935e+00]
  HOMO = -0.297986406268979  LUMO = 13.2219401891158
  mo_energy =
[ -4.62249769  -0.29798641  13.22194019 257.64265948]
E1 = -18.92077776725823  E_coul = 4.53989880783661
cycle= 3 E= -14.3808789594216  delta_E= -2.42e-09  |g|= 3.83e-06  |ddm|= 4.2e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.74923e-06
diis-c [-6.46854915e-14  2.76775831e-04 -2.58570642e-02  1.02558029e+00]
  HOMO = -0.297986613123294  LUMO = 13.2219340695266
  mo_energy =
[ -4.62250362  -0.29798661  13.22193407 257.6426361 ]
E1 = -18.920777456704254  E_coul = 4.539898497282113
cycle= 4 E= -14.3808789594221  delta_E= -5.22e-13  |g|= 8.42e-09  |ddm|= 6.51e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.920777456704254  E_coul = 4.539898497282113
  HOMO = -0.297986613285058  LUMO = 13.2219340736295
  mo_energy =
[ -4.62250362  -0.29798661  13.22193407 257.64263611]
E1 = -18.92077745687941  E_coul = 4.539898497457274
Extra cycle  E= -14.3808789594221  delta_E= 3.55e-15  |g|= 3.31e-10  |ddm|= 1.03e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94355665e+02 1.54587499e+01 2.51896554e+00 1.03857268e-01]
E = -14.380878959422137
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.355665418        1
[INPUT] 0    0    [1    /1   ]  15.4587498814        1
[INPUT] 0    0    [1    /1   ]  2.51896554021        1
[INPUT] 0    0    [1    /1   ]  0.103857268251       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35566541772414, 1.0]], [0, [15.458749881418262, 1.0]], [0, [2.5189655402144093, 1.0]], [0, [0.1038572682507205, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35566542]
bas 1, expnt(s) = [15.45874988]
bas 2, expnt(s) = [2.51896554]
bas 3, expnt(s) = [0.10385727]
CPU time:        34.62
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94355665e+02 1.31511257e+02 1.54587499e+01 1.96968058e+01
 2.51896554e+00 5.05163186e+00 1.03857268e-01 4.62213574e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791310230812567
cond(S) = 5.3033498998713124
E1 = -18.826982361317185  E_coul = 4.510971635849639
init E= -14.3160107254675
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304151416394044  LUMO = 13.2041372398267
  mo_energy =
[ -4.63072356  -0.30415142  13.20413724 257.6470491 ]
E1 = -18.921651772940777  E_coul = 4.5407780075884245
cycle= 1 E= -14.3808737653524  delta_E= -0.0649  |g|= 0.0314  |ddm|= 0.039
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0514992
diis-c [-0.00265217  1.        ]
  HOMO = -0.297972239492132  LUMO = 13.2223792329932
  mo_energy =
[ -4.62207818  -0.29797224  13.22237923 257.64452581]
E1 = -18.92079926648105  E_coul = 4.539920309477337
cycle= 2 E= -14.3808789570037  delta_E= -5.19e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00058566
diis-c [-2.22585062e-08 -1.11193506e-02  1.01111935e+00]
  HOMO = -0.297986406268979  LUMO = 13.2219401891158
  mo_energy =
[ -4.62249769  -0.29798641  13.22194019 257.64265948]
E1 = -18.92077776725823  E_coul = 4.53989880783661
cycle= 3 E= -14.3808789594216  delta_E= -2.42e-09  |g|= 3.83e-06  |ddm|= 4.2e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.74923e-06
diis-c [-6.46854915e-14  2.76775831e-04 -2.58570642e-02  1.02558029e+00]
  HOMO = -0.297986613123294  LUMO = 13.2219340695266
  mo_energy =
[ -4.62250362  -0.29798661  13.22193407 257.6426361 ]
E1 = -18.920777456704254  E_coul = 4.539898497282113
cycle= 4 E= -14.3808789594221  delta_E= -5.22e-13  |g|= 8.42e-09  |ddm|= 6.51e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.920777456704254  E_coul = 4.539898497282113
  HOMO = -0.297986613285058  LUMO = 13.2219340736295
  mo_energy =
[ -4.62250362  -0.29798661  13.22193407 257.64263611]
E1 = -18.92077745687941  E_coul = 4.539898497457274
Extra cycle  E= -14.3808789594221  delta_E= 3.55e-15  |g|= 3.31e-10  |ddm|= 1.03e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.3033498998713124
E1 = -18.92077745687941  E_coul = 4.539898497457274
init E= -14.3808789594221
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.297986613289486  LUMO = 13.2219340738371
  mo_energy =
[ -4.62250362  -0.29798661  13.22193407 257.64263612]
E1 = -18.92077745688835  E_coul = 4.539898497466213
cycle= 1 E= -14.3808789594221  delta_E= 1.78e-15  |g|= 1.31e-11  |ddm|= 3.9e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.92077745688835  E_coul = 4.539898497466213
  HOMO = -0.297986613289628  LUMO = 13.2219340738463
  mo_energy =
[ -4.62250362  -0.29798661  13.22193407 257.64263612]
E1 = -18.920777456888754  E_coul = 4.53989849746662
Extra cycle  E= -14.3808789594221  delta_E= 1.78e-15  |g|= 5.11e-13  |ddm|= 1.5e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94355665e+02 1.54587499e+01 2.51896554e+00 1.03857268e-01]
grad_E = [ 6.83620287e-04 -9.24667626e-06 -1.40028411e-05 -6.36679663e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.354783107        1
[INPUT] 0    0    [1    /1   ]  15.4570215716        1
[INPUT] 0    0    [1    /1   ]  2.5189935403         1
[INPUT] 0    0    [1    /1   ]  0.104024953733       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35478310685986, 1.0]], [0, [15.457021571596691, 1.0]], [0, [2.5189935403033985, 1.0]], [0, [0.10402495373335809, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35478311]
bas 1, expnt(s) = [15.45702157]
bas 2, expnt(s) = [2.51899354]
bas 3, expnt(s) = [0.10402495]
CPU time:        36.55
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94354783e+02 1.31510809e+02 1.54570216e+01 1.96951541e+01
 2.51899354e+00 5.05167398e+00 1.04024954e-01 4.62773171e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791334380912593
cond(S) = 5.304656629990562
E1 = -18.828366834905182  E_coul = 4.512296618195648
init E= -14.3160702167095
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304012308316042  LUMO = 13.2041131324725
  mo_energy =
[ -4.63020122  -0.30401231  13.20411313 257.64130946]
E1 = -18.923231444457496  E_coul = 4.542357720190738
cycle= 1 E= -14.3808737242668  delta_E= -0.0648  |g|= 0.0314  |ddm|= 0.0384
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0515734
diis-c [-0.00265981  1.        ]
  HOMO = -0.297823979356224  LUMO = 13.2224542538913
  mo_energy =
[ -4.62143654  -0.29782398  13.22245425 257.63907969]
E1 = -18.922382403364118  E_coul = 4.54150354078728
cycle= 2 E= -14.3808788625768  delta_E= -5.14e-06  |g|= 0.000381  |ddm|= 0.00159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000586492
diis-c [-2.18686338e-08 -1.11270503e-02  1.01112705e+00]
  HOMO = -0.297838036554956  LUMO = 13.2220159637743
  mo_energy =
[ -4.62185438  -0.29783804  13.22201596 257.6372144 ]
E1 = -18.922360948953692  E_coul = 4.5414820839982175
cycle= 3 E= -14.3808788649555  delta_E= -2.38e-09  |g|= 3.79e-06  |ddm|= 4.16e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.71437e-06
diis-c [-4.79332777e-14  2.76480137e-04 -2.58428451e-02  1.02556636e+00]
  HOMO = -0.297838241474905  LUMO = 13.2220098189345
  mo_energy =
[ -4.62186031  -0.29783824  13.22200982 257.63719087]
E1 = -18.9223606374271  E_coul = 4.541481772471128
cycle= 4 E= -14.380878864956  delta_E= -4.99e-13  |g|= 7.15e-09  |ddm|= 6.43e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.9223606374271  E_coul = 4.541481772471128
  HOMO = -0.297838241627356  LUMO = 13.2220098219664
  mo_energy =
[ -4.6218603   -0.29783824  13.22200982 257.63719089]
E1 = -18.922360637553847  E_coul = 4.541481772597883
Extra cycle  E= -14.380878864956  delta_E= 8.88e-15  |g|= 2.8e-10  |ddm|= 8.94e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94354783e+02 1.54570216e+01 2.51899354e+00 1.04024954e-01]
E = -14.380878864955964
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.354783107        1
[INPUT] 0    0    [1    /1   ]  15.4570215716        1
[INPUT] 0    0    [1    /1   ]  2.5189935403         1
[INPUT] 0    0    [1    /1   ]  0.104024953733       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35478310685986, 1.0]], [0, [15.457021571596691, 1.0]], [0, [2.5189935403033985, 1.0]], [0, [0.10402495373335809, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35478311]
bas 1, expnt(s) = [15.45702157]
bas 2, expnt(s) = [2.51899354]
bas 3, expnt(s) = [0.10402495]
CPU time:        36.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94354783e+02 1.31510809e+02 1.54570216e+01 1.96951541e+01
 2.51899354e+00 5.05167398e+00 1.04024954e-01 4.62773171e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791334380912593
cond(S) = 5.304656629990562
E1 = -18.828366834905182  E_coul = 4.512296618195648
init E= -14.3160702167095
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304012308316042  LUMO = 13.2041131324725
  mo_energy =
[ -4.63020122  -0.30401231  13.20411313 257.64130946]
E1 = -18.923231444457496  E_coul = 4.542357720190738
cycle= 1 E= -14.3808737242668  delta_E= -0.0648  |g|= 0.0314  |ddm|= 0.0384
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0515734
diis-c [-0.00265981  1.        ]
  HOMO = -0.297823979356224  LUMO = 13.2224542538913
  mo_energy =
[ -4.62143654  -0.29782398  13.22245425 257.63907969]
E1 = -18.922382403364118  E_coul = 4.54150354078728
cycle= 2 E= -14.3808788625768  delta_E= -5.14e-06  |g|= 0.000381  |ddm|= 0.00159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000586492
diis-c [-2.18686338e-08 -1.11270503e-02  1.01112705e+00]
  HOMO = -0.297838036554956  LUMO = 13.2220159637743
  mo_energy =
[ -4.62185438  -0.29783804  13.22201596 257.6372144 ]
E1 = -18.922360948953692  E_coul = 4.5414820839982175
cycle= 3 E= -14.3808788649555  delta_E= -2.38e-09  |g|= 3.79e-06  |ddm|= 4.16e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.71437e-06
diis-c [-4.79332777e-14  2.76480137e-04 -2.58428451e-02  1.02556636e+00]
  HOMO = -0.297838241474905  LUMO = 13.2220098189345
  mo_energy =
[ -4.62186031  -0.29783824  13.22200982 257.63719087]
E1 = -18.9223606374271  E_coul = 4.541481772471128
cycle= 4 E= -14.380878864956  delta_E= -4.99e-13  |g|= 7.15e-09  |ddm|= 6.43e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.9223606374271  E_coul = 4.541481772471128
  HOMO = -0.297838241627356  LUMO = 13.2220098219664
  mo_energy =
[ -4.6218603   -0.29783824  13.22200982 257.63719089]
E1 = -18.922360637553847  E_coul = 4.541481772597883
Extra cycle  E= -14.380878864956  delta_E= 8.88e-15  |g|= 2.8e-10  |ddm|= 8.94e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.304656629990562
E1 = -18.922360637553847  E_coul = 4.541481772597883
init E= -14.380878864956
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.297838241631452  LUMO = 13.2220098221311
  mo_energy =
[ -4.6218603   -0.29783824  13.22200982 257.63719089]
E1 = -18.922360637560864  E_coul = 4.541481772604897
cycle= 1 E= -14.380878864956  delta_E= -3.55e-15  |g|= 1.11e-11  |ddm|= 3.35e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.922360637560864  E_coul = 4.541481772604897
  HOMO = -0.297838241631581  LUMO = 13.2220098221387
  mo_energy =
[ -4.6218603   -0.29783824  13.22200982 257.63719089]
E1 = -18.922360637561184  E_coul = 4.54148177260522
Extra cycle  E= -14.380878864956  delta_E= 3.55e-15  |g|= 4.26e-13  |ddm|= 1.28e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94354783e+02 1.54570216e+01 2.51899354e+00 1.04024954e-01]
grad_E = [ 6.83949283e-04 -3.10743730e-05  1.02869242e-04  7.95229134e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.355284533        1
[INPUT] 0    0    [1    /1   ]  15.4580037881        1
[INPUT] 0    0    [1    /1   ]  2.51897762756        1
[INPUT] 0    0    [1    /1   ]  0.103929656327       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3552845333158, 1.0]], [0, [15.458003788073517, 1.0]], [0, [2.5189776275611258, 1.0]], [0, [0.10392965632665735, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35528453]
bas 1, expnt(s) = [15.45800379]
bas 2, expnt(s) = [2.51897763]
bas 3, expnt(s) = [0.10392966]
CPU time:        38.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94355285e+02 1.31511063e+02 1.54580038e+01 1.96960928e+01
 2.51897763e+00 5.05165004e+00 1.03929656e-01 4.62455174e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791324586720287
cond(S) = 5.303913868973865
E1 = -18.827581236221096  E_coul = 4.5115442987667125
init E= -14.3160369374544
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304091365278697  LUMO = 13.2041270615077
  mo_energy =
[ -4.63049782  -0.30409137  13.20412706 257.64457159]
E1 = -18.92233408104531  E_coul = 4.541460163425066
cycle= 1 E= -14.3808739176202  delta_E= -0.0648  |g|= 0.0314  |ddm|= 0.0388
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0515312
diis-c [-0.00265546  1.        ]
  HOMO = -0.297908304113916  LUMO = 13.2224116736555
  mo_energy =
[ -4.62180111  -0.2979083   13.22241167 257.64217484]
E1 = -18.921483069464085  E_coul = 4.540603983336533
cycle= 2 E= -14.3808790861276  delta_E= -5.17e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000586015
diis-c [-2.20877919e-08 -1.11226418e-02  1.01112264e+00]
  HOMO = -0.297922423632082  LUMO = 13.2219729547611
  mo_energy =
[ -4.62221989  -0.29792242  13.22197295 257.64030896]
E1 = -18.921461589542357  E_coul = 4.540582501013968
cycle= 3 E= -14.3808790885284  delta_E= -2.4e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73379e-06
diis-c [-5.70750304e-14  2.76635709e-04 -2.58497972e-02  1.02557316e+00]
  HOMO = -0.297922629652669  LUMO = 13.2219668242536
  mo_energy =
[ -4.62222582  -0.29792263  13.22196682 257.64028551]
E1 = -18.92146127856717  E_coul = 4.540582190038282
cycle= 4 E= -14.3808790885289  delta_E= -4.97e-13  |g|= 7.88e-09  |ddm|= 6.47e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92146127856717  E_coul = 4.540582190038282
  HOMO = -0.297922629810653  LUMO = 13.2219668278876
  mo_energy =
[ -4.62222582  -0.29792263  13.22196683 257.64028553]
E1 = -18.921461278721083  E_coul = 4.540582190192202
Extra cycle  E= -14.3808790885289  delta_E= 5.33e-15  |g|= 3.09e-10  |ddm|= 9.72e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94355285e+02 1.54580038e+01 2.51897763e+00 1.03929656e-01]
E = -14.38087908852888
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.355284533        1
[INPUT] 0    0    [1    /1   ]  15.4580037881        1
[INPUT] 0    0    [1    /1   ]  2.51897762756        1
[INPUT] 0    0    [1    /1   ]  0.103929656327       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3552845333158, 1.0]], [0, [15.458003788073517, 1.0]], [0, [2.5189776275611258, 1.0]], [0, [0.10392965632665735, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35528453]
bas 1, expnt(s) = [15.45800379]
bas 2, expnt(s) = [2.51897763]
bas 3, expnt(s) = [0.10392966]
CPU time:        39.16
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94355285e+02 1.31511063e+02 1.54580038e+01 1.96960928e+01
 2.51897763e+00 5.05165004e+00 1.03929656e-01 4.62455174e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791324586720287
cond(S) = 5.303913868973865
E1 = -18.827581236221096  E_coul = 4.5115442987667125
init E= -14.3160369374544
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304091365278697  LUMO = 13.2041270615077
  mo_energy =
[ -4.63049782  -0.30409137  13.20412706 257.64457159]
E1 = -18.92233408104531  E_coul = 4.541460163425066
cycle= 1 E= -14.3808739176202  delta_E= -0.0648  |g|= 0.0314  |ddm|= 0.0388
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0515312
diis-c [-0.00265546  1.        ]
  HOMO = -0.297908304113916  LUMO = 13.2224116736555
  mo_energy =
[ -4.62180111  -0.2979083   13.22241167 257.64217484]
E1 = -18.921483069464085  E_coul = 4.540603983336533
cycle= 2 E= -14.3808790861276  delta_E= -5.17e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000586015
diis-c [-2.20877919e-08 -1.11226418e-02  1.01112264e+00]
  HOMO = -0.297922423632082  LUMO = 13.2219729547611
  mo_energy =
[ -4.62221989  -0.29792242  13.22197295 257.64030896]
E1 = -18.921461589542357  E_coul = 4.540582501013968
cycle= 3 E= -14.3808790885284  delta_E= -2.4e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73379e-06
diis-c [-5.70750304e-14  2.76635709e-04 -2.58497972e-02  1.02557316e+00]
  HOMO = -0.297922629652669  LUMO = 13.2219668242536
  mo_energy =
[ -4.62222582  -0.29792263  13.22196682 257.64028551]
E1 = -18.92146127856717  E_coul = 4.540582190038282
cycle= 4 E= -14.3808790885289  delta_E= -4.97e-13  |g|= 7.88e-09  |ddm|= 6.47e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92146127856717  E_coul = 4.540582190038282
  HOMO = -0.297922629810653  LUMO = 13.2219668278876
  mo_energy =
[ -4.62222582  -0.29792263  13.22196683 257.64028553]
E1 = -18.921461278721083  E_coul = 4.540582190192202
Extra cycle  E= -14.3808790885289  delta_E= 5.33e-15  |g|= 3.09e-10  |ddm|= 9.72e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.303913868973865
E1 = -18.921461278721083  E_coul = 4.540582190192202
init E= -14.3808790885289
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.297922629814944  LUMO = 13.2219668280764
  mo_energy =
[ -4.62222582  -0.29792263  13.22196683 257.64028553]
E1 = -18.92146127872919  E_coul = 4.540582190200305
cycle= 1 E= -14.3808790885289  delta_E= -5.33e-15  |g|= 1.22e-11  |ddm|= 3.66e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.92146127872919  E_coul = 4.540582190200305
  HOMO = -0.29792262981508  LUMO = 13.221966828085
  mo_energy =
[ -4.62222582  -0.29792263  13.22196683 257.64028553]
E1 = -18.921461278729563  E_coul = 4.540582190200676
Extra cycle  E= -14.3808790885289  delta_E=    0  |g|= 4.88e-13  |ddm|= 1.41e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94355285e+02 1.54580038e+01 2.51897763e+00 1.03929656e-01]
grad_E = [ 6.83762300e-04 -1.86681519e-05  3.64342229e-05  3.39925916e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.354849033        1
[INPUT] 0    0    [1    /1   ]  15.4571958965        1
[INPUT] 0    0    [1    /1   ]  2.5190344335         1
[INPUT] 0    0    [1    /1   ]  0.103926648808       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3548490329947, 1.0]], [0, [15.45719589651354, 1.0]], [0, [2.519034433499208, 1.0]], [0, [0.10392664880837904, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35484903]
bas 1, expnt(s) = [15.4571959]
bas 2, expnt(s) = [2.51903443]
bas 3, expnt(s) = [0.10392665]
CPU time:        41.14
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94354849e+02 1.31510842e+02 1.54571959e+01 1.96953207e+01
 2.51903443e+00 5.05173548e+00 1.03926649e-01 4.62445137e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791316468539737
cond(S) = 5.304142982699546
E1 = -18.82753866041004  E_coul = 4.511527699331076
init E= -14.316010961079
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304094130433252  LUMO = 13.2037320944305
  mo_energy =
[ -4.63050342  -0.30409413  13.20373209 257.64158852]
E1 = -18.922340254341677  E_coul = 4.5414660551613135
cycle= 1 E= -14.3808741991804  delta_E= -0.0649  |g|= 0.0314  |ddm|= 0.0388
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0515602
diis-c [-0.00265845  1.        ]
  HOMO = -0.297910596014323  LUMO = 13.2220319871168
  mo_energy =
[ -4.62179601  -0.2979106   13.22203199 257.6392419 ]
E1 = -18.92148987244603  E_coul = 4.540610504294009
cycle= 2 E= -14.380879368152  delta_E= -5.17e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000586165
diis-c [-2.20770658e-08 -1.11195909e-02  1.01111959e+00]
  HOMO = -0.297924713289375  LUMO = 13.2215937521471
  mo_energy =
[ -4.62221448  -0.29792471  13.22159375 257.6373779 ]
E1 = -18.921468413192404  E_coul = 4.5405890426402085
cycle= 3 E= -14.3808793705522  delta_E= -2.4e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73391e-06
diis-c [-5.89653834e-14  2.76718257e-04 -2.58577700e-02  1.02558105e+00]
  HOMO = -0.297924919361185  LUMO = 13.2215876315942
  mo_energy =
[ -4.6222204   -0.29792492  13.22158763 257.6373545 ]
E1 = -18.921468102635803  E_coul = 4.540588732083109
cycle= 4 E= -14.3808793705527  delta_E= -4.99e-13  |g|= 8.02e-09  |ddm|= 6.48e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.921468102635803  E_coul = 4.540588732083109
  HOMO = -0.297924919519808  LUMO = 13.221587635364
  mo_energy =
[ -4.6222204   -0.29792492  13.22158764 257.63735452]
E1 = -18.921468102795927  E_coul = 4.540588732243236
Extra cycle  E= -14.3808793705527  delta_E= 3.55e-15  |g|= 3.15e-10  |ddm|= 9.88e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94354849e+02 1.54571959e+01 2.51903443e+00 1.03926649e-01]
E = -14.380879370552691
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.354849033        1
[INPUT] 0    0    [1    /1   ]  15.4571958965        1
[INPUT] 0    0    [1    /1   ]  2.5190344335         1
[INPUT] 0    0    [1    /1   ]  0.103926648808       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.3548490329947, 1.0]], [0, [15.45719589651354, 1.0]], [0, [2.519034433499208, 1.0]], [0, [0.10392664880837904, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35484903]
bas 1, expnt(s) = [15.4571959]
bas 2, expnt(s) = [2.51903443]
bas 3, expnt(s) = [0.10392665]
CPU time:        41.50
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94354849e+02 1.31510842e+02 1.54571959e+01 1.96953207e+01
 2.51903443e+00 5.05173548e+00 1.03926649e-01 4.62445137e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791316468539737
cond(S) = 5.304142982699546
E1 = -18.82753866041004  E_coul = 4.511527699331076
init E= -14.316010961079
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304094130433252  LUMO = 13.2037320944305
  mo_energy =
[ -4.63050342  -0.30409413  13.20373209 257.64158852]
E1 = -18.922340254341677  E_coul = 4.5414660551613135
cycle= 1 E= -14.3808741991804  delta_E= -0.0649  |g|= 0.0314  |ddm|= 0.0388
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0515602
diis-c [-0.00265845  1.        ]
  HOMO = -0.297910596014323  LUMO = 13.2220319871168
  mo_energy =
[ -4.62179601  -0.2979106   13.22203199 257.6392419 ]
E1 = -18.92148987244603  E_coul = 4.540610504294009
cycle= 2 E= -14.380879368152  delta_E= -5.17e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000586165
diis-c [-2.20770658e-08 -1.11195909e-02  1.01111959e+00]
  HOMO = -0.297924713289375  LUMO = 13.2215937521471
  mo_energy =
[ -4.62221448  -0.29792471  13.22159375 257.6373779 ]
E1 = -18.921468413192404  E_coul = 4.5405890426402085
cycle= 3 E= -14.3808793705522  delta_E= -2.4e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73391e-06
diis-c [-5.89653834e-14  2.76718257e-04 -2.58577700e-02  1.02558105e+00]
  HOMO = -0.297924919361185  LUMO = 13.2215876315942
  mo_energy =
[ -4.6222204   -0.29792492  13.22158763 257.6373545 ]
E1 = -18.921468102635803  E_coul = 4.540588732083109
cycle= 4 E= -14.3808793705527  delta_E= -4.99e-13  |g|= 8.02e-09  |ddm|= 6.48e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.921468102635803  E_coul = 4.540588732083109
  HOMO = -0.297924919519808  LUMO = 13.221587635364
  mo_energy =
[ -4.6222204   -0.29792492  13.22158764 257.63735452]
E1 = -18.921468102795927  E_coul = 4.540588732243236
Extra cycle  E= -14.3808793705527  delta_E= 3.55e-15  |g|= 3.15e-10  |ddm|= 9.88e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.304142982699546
E1 = -18.921468102795927  E_coul = 4.540588732243236
init E= -14.3808793705527
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.297924919524127  LUMO = 13.2215876355582
  mo_energy =
[ -4.6222204   -0.29792492  13.22158764 257.63735452]
E1 = -18.921468102804255  E_coul = 4.540588732251569
cycle= 1 E= -14.3808793705527  delta_E= 5.33e-15  |g|= 1.24e-11  |ddm|= 3.73e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.921468102804255  E_coul = 4.540588732251569
  HOMO = -0.297924919524266  LUMO = 13.2215876355669
  mo_energy =
[ -4.6222204   -0.29792492  13.22158764 257.63735452]
E1 = -18.92146810280466  E_coul = 4.540588732251959
Extra cycle  E= -14.3808793705527  delta_E= -1.6e-14  |g|= 5.08e-13  |ddm|= 1.43e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94354849e+02 1.54571959e+01 2.51903443e+00 1.03926649e-01]
grad_E = [ 6.83922337e-04 -3.26623689e-05  1.40896086e-04  3.23852535e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.353107032        1
[INPUT] 0    0    [1    /1   ]  15.4539643303        1
[INPUT] 0    0    [1    /1   ]  2.51926165725        1
[INPUT] 0    0    [1    /1   ]  0.103914618735       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35310703171035, 1.0]], [0, [15.453964330273628, 1.0]], [0, [2.5192616572515374, 1.0]], [0, [0.1039146187352658, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35310703]
bas 1, expnt(s) = [15.45396433]
bas 2, expnt(s) = [2.51926166]
bas 3, expnt(s) = [0.10391462]
CPU time:        44.54
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94353107e+02 1.31509958e+02 1.54539643e+01 1.96922324e+01
 2.51926166e+00 5.05207724e+00 1.03914619e-01 4.62404988e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.979128383245926
cond(S) = 5.305059905942426
E1 = -18.827367880277926  E_coul = 4.51146124800342
init E= -14.3159066322745
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304105191931549  LUMO = 13.2021522141098
  mo_energy =
[ -4.63052578  -0.30410519  13.20215221 257.62965629]
E1 = -18.922364731607445  E_coul = 4.541489582820729
cycle= 1 E= -14.3808751487867  delta_E= -0.065  |g|= 0.0315  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0516761
diis-c [-0.00267042  1.        ]
  HOMO = -0.297919760194771  LUMO = 13.2205132249005
  mo_energy =
[ -4.62177556  -0.29791976  13.22051322 257.62751008]
E1 = -18.92151686873832  E_coul = 4.540636549038877
cycle= 2 E= -14.3808803196994  delta_E= -5.17e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00058677
diis-c [-2.20362219e-08 -1.11074624e-02  1.01110746e+00]
  HOMO = -0.29793386850783  LUMO = 13.2200769252484
  mo_energy =
[ -4.62219276  -0.29793387  13.22007693 257.62565367]
E1 = -18.92149549219183  E_coul = 4.540615170094778
cycle= 3 E= -14.3808803220971  delta_E= -2.4e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73481e-06
diis-c [-6.69694029e-14  2.77063295e-04 -2.58910195e-02  1.02561396e+00]
  HOMO = -0.297934074783645  LUMO = 13.2200708445802
  mo_energy =
[ -4.62219866  -0.29793407  13.22007084 257.62563044]
E1 = -18.92149518331384  E_coul = 4.540614861216285
cycle= 4 E= -14.3808803220976  delta_E= -5.04e-13  |g|= 8.6e-09  |ddm|= 6.49e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92149518331384  E_coul = 4.540614861216285
  HOMO = -0.297934074944539  LUMO = 13.2200708489019
  mo_energy =
[ -4.62219866  -0.29793407  13.22007085 257.62563046]
E1 = -18.921495183499257  E_coul = 4.540614861401695
Extra cycle  E= -14.3808803220976  delta_E= -5.33e-15  |g|= 3.38e-10  |ddm|= 1.05e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.94353107e+02 1.54539643e+01 2.51926166e+00 1.03914619e-01]
E = -14.380880322097562
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.353107032        1
[INPUT] 0    0    [1    /1   ]  15.4539643303        1
[INPUT] 0    0    [1    /1   ]  2.51926165725        1
[INPUT] 0    0    [1    /1   ]  0.103914618735       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.35310703171035, 1.0]], [0, [15.453964330273628, 1.0]], [0, [2.5192616572515374, 1.0]], [0, [0.1039146187352658, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.35310703]
bas 1, expnt(s) = [15.45396433]
bas 2, expnt(s) = [2.51926166]
bas 3, expnt(s) = [0.10391462]
CPU time:        44.94
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94353107e+02 1.31509958e+02 1.54539643e+01 1.96922324e+01
 2.51926166e+00 5.05207724e+00 1.03914619e-01 4.62404988e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.979128383245926
cond(S) = 5.305059905942426
E1 = -18.827367880277926  E_coul = 4.51146124800342
init E= -14.3159066322745
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304105191931549  LUMO = 13.2021522141098
  mo_energy =
[ -4.63052578  -0.30410519  13.20215221 257.62965629]
E1 = -18.922364731607445  E_coul = 4.541489582820729
cycle= 1 E= -14.3808751487867  delta_E= -0.065  |g|= 0.0315  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0516761
diis-c [-0.00267042  1.        ]
  HOMO = -0.297919760194771  LUMO = 13.2205132249005
  mo_energy =
[ -4.62177556  -0.29791976  13.22051322 257.62751008]
E1 = -18.92151686873832  E_coul = 4.540636549038877
cycle= 2 E= -14.3808803196994  delta_E= -5.17e-06  |g|= 0.000382  |ddm|= 0.0016
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00058677
diis-c [-2.20362219e-08 -1.11074624e-02  1.01110746e+00]
  HOMO = -0.29793386850783  LUMO = 13.2200769252484
  mo_energy =
[ -4.62219276  -0.29793387  13.22007693 257.62565367]
E1 = -18.92149549219183  E_coul = 4.540615170094778
cycle= 3 E= -14.3808803220971  delta_E= -2.4e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=3.73481e-06
diis-c [-6.69694029e-14  2.77063295e-04 -2.58910195e-02  1.02561396e+00]
  HOMO = -0.297934074783645  LUMO = 13.2200708445802
  mo_energy =
[ -4.62219866  -0.29793407  13.22007084 257.62563044]
E1 = -18.92149518331384  E_coul = 4.540614861216285
cycle= 4 E= -14.3808803220976  delta_E= -5.04e-13  |g|= 8.6e-09  |ddm|= 6.49e-07
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
E1 = -18.92149518331384  E_coul = 4.540614861216285
  HOMO = -0.297934074944539  LUMO = 13.2200708489019
  mo_energy =
[ -4.62219866  -0.29793407  13.22007085 257.62563046]
E1 = -18.921495183499257  E_coul = 4.540614861401695
Extra cycle  E= -14.3808803220976  delta_E= -5.33e-15  |g|= 3.38e-10  |ddm|= 1.05e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.305059905942426
E1 = -18.921495183499257  E_coul = 4.540614861401695
init E= -14.3808803220976
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.297934074948964  LUMO = 13.2200708491172
  mo_energy =
[ -4.62219866  -0.29793407  13.22007085 257.62563046]
E1 = -18.92149518350855  E_coul = 4.540614861410995
cycle= 1 E= -14.3808803220976  delta_E= 5.33e-15  |g|= 1.34e-11  |ddm|= 3.98e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.92149518350855  E_coul = 4.540614861410995
  HOMO = -0.297934074949108  LUMO = 13.2200708491268
  mo_energy =
[ -4.62219866  -0.29793407  13.22007085 257.62563046]
E1 = -18.921495183508984  E_coul = 4.540614861411419
Extra cycle  E= -14.3808803220976  delta_E= -7.11e-15  |g|= 5.4e-13  |ddm|= 1.53e-12
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94353107e+02 1.54539643e+01 2.51926166e+00 1.03914619e-01]
grad_E = [ 6.84562599e-04 -8.86551721e-05  5.58684640e-04  2.59551081e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.339707994        1
[INPUT] 0    0    [1    /1   ]  15.4444353771        1
[INPUT] 0    0    [1    /1   ]  2.51989140153        1
[INPUT] 0    0    [1    /1   ]  0.103880030136       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.33970799420482, 1.0]], [0, [15.444435377079115, 1.0]], [0, [2.519891401529765, 1.0]], [0, [0.10388003013645124, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.33970799]
bas 1, expnt(s) = [15.44443538]
bas 2, expnt(s) = [2.5198914]
bas 3, expnt(s) = [0.10388003]
CPU time:        47.52
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94339708e+02 1.31503158e+02 1.54444354e+01 1.96831250e+01
 2.51989140e+00 5.05302437e+00 1.03880030e-01 4.62289548e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791192527734682
cond(S) = 5.3077787498402795
E1 = -18.826881401868803  E_coul = 4.511269160870317
init E= -14.3156122409985
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304136922347844  LUMO = 13.1973671397128
  mo_energy =
[ -4.63059272  -0.30413692  13.19736714 257.58436387]
E1 = -18.92243561266156  E_coul = 4.541553567087569
cycle= 1 E= -14.380882045574  delta_E= -0.0653  |g|= 0.0317  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0520077
diis-c [-0.0027048  1.       ]
  HOMO = -0.297946221593313  LUMO = 13.2159021866772
  mo_energy =
[ -4.62172056  -0.29794622  13.21590219 257.58279025]
E1 = -18.92159497458725  E_coul = 4.540707751747339
cycle= 2 E= -14.3808872228399  delta_E= -5.18e-06  |g|= 0.000384  |ddm|= 0.00159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000588542
diis-c [-2.19375886e-08 -1.10735425e-02  1.01107354e+00]
  HOMO = -0.297960304709017  LUMO = 13.2154714441863
  mo_energy =
[ -4.62213412  -0.2979603   13.21547144 257.5809556 ]
E1 = -18.921573835608257  E_coul = 4.540686610377192
cycle= 3 E= -14.3808872252311  delta_E= -2.39e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.74148e-06
diis-c [-9.39598636e-14  2.78201949e-04 -2.59992534e-02  1.02572105e+00]
  HOMO = -0.297960511570859  LUMO = 13.2154654788952
  mo_energy =
[ -4.62213995  -0.29796051  13.21546548 257.58093287]
E1 = -18.921573531593662  E_coul = 4.540686306362092
cycle= 4 E= -14.3808872252316  delta_E= -5.06e-13  |g|= 1.03e-08  |ddm|= 6.54e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.921573531593662  E_coul = 4.540686306362092
  HOMO = -0.297960511735674  LUMO = 13.2154654848808
  mo_energy =
[ -4.62213995  -0.29796051  13.21546548 257.58093289]
E1 = -18.921573531855813  E_coul = 4.540686306624238
Extra cycle  E= -14.3808872252316  delta_E= -5.33e-15  |g|= 4.05e-10  |ddm|= 1.22e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [1.94339708e+02 1.54444354e+01 2.51989140e+00 1.03880030e-01]
E = -14.380887225231575
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.339707994        1
[INPUT] 0    0    [1    /1   ]  15.4444353771        1
[INPUT] 0    0    [1    /1   ]  2.51989140153        1
[INPUT] 0    0    [1    /1   ]  0.103880030136       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.33970799420482, 1.0]], [0, [15.444435377079115, 1.0]], [0, [2.519891401529765, 1.0]], [0, [0.10388003013645124, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.33970799]
bas 1, expnt(s) = [15.44443538]
bas 2, expnt(s) = [2.5198914]
bas 3, expnt(s) = [0.10388003]
CPU time:        47.91
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94339708e+02 1.31503158e+02 1.54444354e+01 1.96831250e+01
 2.51989140e+00 5.05302437e+00 1.03880030e-01 4.62289548e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9791192527734682
cond(S) = 5.3077787498402795
E1 = -18.826881401868803  E_coul = 4.511269160870317
init E= -14.3156122409985
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304136922347844  LUMO = 13.1973671397128
  mo_energy =
[ -4.63059272  -0.30413692  13.19736714 257.58436387]
E1 = -18.92243561266156  E_coul = 4.541553567087569
cycle= 1 E= -14.380882045574  delta_E= -0.0653  |g|= 0.0317  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0520077
diis-c [-0.0027048  1.       ]
  HOMO = -0.297946221593313  LUMO = 13.2159021866772
  mo_energy =
[ -4.62172056  -0.29794622  13.21590219 257.58279025]
E1 = -18.92159497458725  E_coul = 4.540707751747339
cycle= 2 E= -14.3808872228399  delta_E= -5.18e-06  |g|= 0.000384  |ddm|= 0.00159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000588542
diis-c [-2.19375886e-08 -1.10735425e-02  1.01107354e+00]
  HOMO = -0.297960304709017  LUMO = 13.2154714441863
  mo_energy =
[ -4.62213412  -0.2979603   13.21547144 257.5809556 ]
E1 = -18.921573835608257  E_coul = 4.540686610377192
cycle= 3 E= -14.3808872252311  delta_E= -2.39e-09  |g|= 3.81e-06  |ddm|= 4.18e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.74148e-06
diis-c [-9.39598636e-14  2.78201949e-04 -2.59992534e-02  1.02572105e+00]
  HOMO = -0.297960511570859  LUMO = 13.2154654788952
  mo_energy =
[ -4.62213995  -0.29796051  13.21546548 257.58093287]
E1 = -18.921573531593662  E_coul = 4.540686306362092
cycle= 4 E= -14.3808872252316  delta_E= -5.06e-13  |g|= 1.03e-08  |ddm|= 6.54e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.921573531593662  E_coul = 4.540686306362092
  HOMO = -0.297960511735674  LUMO = 13.2154654848808
  mo_energy =
[ -4.62213995  -0.29796051  13.21546548 257.58093289]
E1 = -18.921573531855813  E_coul = 4.540686306624238
Extra cycle  E= -14.3808872252316  delta_E= -5.33e-15  |g|= 4.05e-10  |ddm|= 1.22e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.3077787498402795
E1 = -18.921573531855813  E_coul = 4.540686306624238
init E= -14.3808872252316
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.297960511740337  LUMO = 13.2154654851592
  mo_energy =
[ -4.62213995  -0.29796051  13.21546549 257.5809329 ]
E1 = -18.92157353186801  E_coul = 4.540686306636429
cycle= 1 E= -14.3808872252316  delta_E= -5.33e-15  |g|= 1.6e-11  |ddm|= 4.69e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.92157353186801  E_coul = 4.540686306636429
  HOMO = -0.297960511740491  LUMO = 13.2154654851711
  mo_energy =
[ -4.62213995  -0.29796051  13.21546549 257.5809329 ]
E1 = -18.921573531868532  E_coul = 4.540686306636953
Extra cycle  E= -14.3808872252316  delta_E= 1.78e-15  |g|= 6.47e-13  |ddm|= 1.82e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94339708e+02 1.54444354e+01 2.51989140e+00 1.03880030e-01]
grad_E = [ 0.00068643 -0.00024957  0.00175434  0.00074731]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.277394393        1
[INPUT] 0    0    [1    /1   ]  15.4209983561        1
[INPUT] 0    0    [1    /1   ]  2.52150414971        1
[INPUT] 0    0    [1    /1   ]  0.103795173452       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.27739439275632, 1.0]], [0, [15.420998356143297, 1.0]], [0, [2.5215041497110757, 1.0]], [0, [0.10379517345233799, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.27739439]
bas 1, expnt(s) = [15.42099836]
bas 2, expnt(s) = [2.52150415]
bas 3, expnt(s) = [0.10379517]
CPU time:        50.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94277394e+02 1.31471533e+02 1.54209984e+01 1.96607188e+01
 2.52150415e+00 5.05544965e+00 1.03795173e-01 4.62006295e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9790949894698144
cond(S) = 5.314842414125064
E1 = -18.825686192580388  E_coul = 4.51080004828423
init E= -14.3148861442962
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304215512224213  LUMO = 13.1858252030408
  mo_energy =
[ -4.63076016  -0.30421551  13.1858252  257.43765138]
E1 = -18.922641389627216  E_coul = 4.541732296969708
cycle= 1 E= -14.3809090926575  delta_E= -0.066  |g|= 0.0323  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0528197
diis-c [-0.00278992  1.        ]
  HOMO = -0.298010985623673  LUMO = 13.2047986166882
  mo_energy =
[ -4.62157996  -0.29801099  13.20479862 257.43752412]
E1 = -18.921818868685673  E_coul = 4.54090458000694
cycle= 2 E= -14.3809142886787  delta_E= -5.2e-06  |g|= 0.000388  |ddm|= 0.00159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000593085
diis-c [-2.18047062e-08 -1.09945038e-02  1.01099450e+00]
  HOMO = -0.298025004663877  LUMO = 13.2043817373946
  mo_energy =
[ -4.6219844   -0.298025    13.20438174 257.43574394]
E1 = -18.921798326368233  E_coul = 4.540884035310025
cycle= 3 E= -14.3809142910582  delta_E= -2.38e-09  |g|= 3.82e-06  |ddm|= 4.19e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.78338e-06
diis-c [-1.85668485e-13  2.81925369e-04 -2.63482589e-02  1.02606633e+00]
  HOMO = -0.29802521288423  LUMO = 13.2043760643446
  mo_energy =
[ -4.62199007  -0.29802521  13.20437606 257.43572246]
E1 = -18.92179803478084  E_coul = 4.540883743722113
cycle= 4 E= -14.3809142910587  delta_E= -5.19e-13  |g|= 1.44e-08  |ddm|= 6.66e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92179803478084  E_coul = 4.540883743722113
  HOMO = -0.29802521304137  LUMO = 13.2043760749107
  mo_energy =
[ -4.62199006  -0.29802521  13.20437607 257.43572251]
E1 = -18.921798035257662  E_coul = 4.5408837441989345
Extra cycle  E= -14.3809142910587  delta_E= -1.78e-15  |g|= 5.7e-10  |ddm|= 1.63e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94277394e+02 1.54209984e+01 2.52150415e+00 1.03795173e-01]
E = -14.380914291058728
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.277394393        1
[INPUT] 0    0    [1    /1   ]  15.4209983561        1
[INPUT] 0    0    [1    /1   ]  2.52150414971        1
[INPUT] 0    0    [1    /1   ]  0.103795173452       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.27739439275632, 1.0]], [0, [15.420998356143297, 1.0]], [0, [2.5215041497110757, 1.0]], [0, [0.10379517345233799, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.27739439]
bas 1, expnt(s) = [15.42099836]
bas 2, expnt(s) = [2.52150415]
bas 3, expnt(s) = [0.10379517]
CPU time:        50.48
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94277394e+02 1.31471533e+02 1.54209984e+01 1.96607188e+01
 2.52150415e+00 5.05544965e+00 1.03795173e-01 4.62006295e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9790949894698144
cond(S) = 5.314842414125064
E1 = -18.825686192580388  E_coul = 4.51080004828423
init E= -14.3148861442962
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304215512224213  LUMO = 13.1858252030408
  mo_energy =
[ -4.63076016  -0.30421551  13.1858252  257.43765138]
E1 = -18.922641389627216  E_coul = 4.541732296969708
cycle= 1 E= -14.3809090926575  delta_E= -0.066  |g|= 0.0323  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0528197
diis-c [-0.00278992  1.        ]
  HOMO = -0.298010985623673  LUMO = 13.2047986166882
  mo_energy =
[ -4.62157996  -0.29801099  13.20479862 257.43752412]
E1 = -18.921818868685673  E_coul = 4.54090458000694
cycle= 2 E= -14.3809142886787  delta_E= -5.2e-06  |g|= 0.000388  |ddm|= 0.00159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000593085
diis-c [-2.18047062e-08 -1.09945038e-02  1.01099450e+00]
  HOMO = -0.298025004663877  LUMO = 13.2043817373946
  mo_energy =
[ -4.6219844   -0.298025    13.20438174 257.43574394]
E1 = -18.921798326368233  E_coul = 4.540884035310025
cycle= 3 E= -14.3809142910582  delta_E= -2.38e-09  |g|= 3.82e-06  |ddm|= 4.19e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.78338e-06
diis-c [-1.85668485e-13  2.81925369e-04 -2.63482589e-02  1.02606633e+00]
  HOMO = -0.29802521288423  LUMO = 13.2043760643446
  mo_energy =
[ -4.62199007  -0.29802521  13.20437606 257.43572246]
E1 = -18.92179803478084  E_coul = 4.540883743722113
cycle= 4 E= -14.3809142910587  delta_E= -5.19e-13  |g|= 1.44e-08  |ddm|= 6.66e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92179803478084  E_coul = 4.540883743722113
  HOMO = -0.29802521304137  LUMO = 13.2043760749107
  mo_energy =
[ -4.62199006  -0.29802521  13.20437607 257.43572251]
E1 = -18.921798035257662  E_coul = 4.5408837441989345
Extra cycle  E= -14.3809142910587  delta_E= -1.78e-15  |g|= 5.7e-10  |ddm|= 1.63e-09
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.314842414125064
E1 = -18.921798035257662  E_coul = 4.5408837441989345
init E= -14.3809142910587
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.298025213046162  LUMO = 13.204376075356
  mo_energy =
[ -4.62199006  -0.29802521  13.20437608 257.43572251]
E1 = -18.92179803527762  E_coul = 4.540883744218888
cycle= 1 E= -14.3809142910587  delta_E= -5.33e-15  |g|= 2.25e-11  |ddm|= 6.4e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.92179803527762  E_coul = 4.540883744218888
  HOMO = -0.298025213046332  LUMO = 13.2043760753742
  mo_energy =
[ -4.62199006  -0.29802521  13.20437608 257.43572251]
E1 = -18.92179803527842  E_coul = 4.5408837442196965
Extra cycle  E= -14.3809142910587  delta_E= 8.88e-15  |g|= 8.99e-13  |ddm|= 2.51e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94277394e+02 1.54209984e+01 2.52150415e+00 1.03795173e-01]
grad_E = [ 0.00069102 -0.00064593  0.00473047 -0.00380856]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.119141177        1
[INPUT] 0    0    [1    /1   ]  15.3877604052        1
[INPUT] 0    0    [1    /1   ]  2.52385030226        1
[INPUT] 0    0    [1    /1   ]  0.103676622763       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.11914117713226, 1.0]], [0, [15.38776040521949, 1.0]], [0, [2.523850302263355, 1.0]], [0, [0.103676622762866, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.11914118]
bas 1, expnt(s) = [15.38776041]
bas 2, expnt(s) = [2.5238503]
bas 3, expnt(s) = [0.10367662]
CPU time:        52.67
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94119141e+02 1.31391205e+02 1.53877604e+01 1.96289282e+01
 2.52385030e+00 5.05897715e+00 1.03676623e-01 4.61610475e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9790576721449487
cond(S) = 5.325619377294068
E1 = -18.824015571950717  E_coul = 4.510146293496088
init E= -14.3138692784546
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304326663680761  LUMO = 13.1696918201197
  mo_energy =
[ -4.63100401  -0.30432666  13.16969182 257.14526545]
E1 = -18.92298880419989  E_coul = 4.542017481739825
cycle= 1 E= -14.3809713224601  delta_E= -0.0671  |g|= 0.0331  |ddm|= 0.0386
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0539483
diis-c [-0.00291042  1.        ]
  HOMO = -0.298101317405073  LUMO = 13.1892968945083
  mo_energy =
[ -4.62137817  -0.29810132  13.18929689 257.14723266]
E1 = -18.922192327525735  E_coul = 4.5412157740301335
cycle= 2 E= -14.3809765534956  delta_E= -5.23e-06  |g|= 0.000395  |ddm|= 0.00158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000599932
diis-c [-2.19084948e-08 -1.08941725e-02  1.01089417e+00]
  HOMO = -0.298115243655734  LUMO = 13.1888998085634
  mo_energy =
[ -4.62176951  -0.29811524  13.18889981 257.14553062]
E1 = -18.9221726458014  E_coul = 4.5411960899314066
cycle= 3 E= -14.38097655587  delta_E= -2.37e-09  |g|= 3.88e-06  |ddm|= 4.2e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.9059e-06
diis-c [-3.71891921e-13  2.89381399e-04 -2.70414649e-02  1.02675208e+00]
  HOMO = -0.298115453618402  LUMO = 13.1888945631426
  mo_energy =
[ -4.62177493  -0.29811545  13.18889456 257.14551097]
E1 = -18.922172372640695  E_coul = 4.541195816770152
cycle= 4 E= -14.3809765558705  delta_E= -5.51e-13  |g|= 2.02e-08  |ddm|= 6.85e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.922172372640695  E_coul = 4.541195816770152
  HOMO = -0.2981154537217  LUMO = 13.1888945811376
  mo_energy =
[ -4.62177492  -0.29811545  13.18889458 257.14551105]
E1 = -18.92217237347393  E_coul = 4.541195817603381
Extra cycle  E= -14.3809765558706  delta_E= -7.11e-15  |g|= 7.92e-10  |ddm|= 2.17e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.94119141e+02 1.53877604e+01 2.52385030e+00 1.03676623e-01]
E = -14.38097655587055
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  194.119141177        1
[INPUT] 0    0    [1    /1   ]  15.3877604052        1
[INPUT] 0    0    [1    /1   ]  2.52385030226        1
[INPUT] 0    0    [1    /1   ]  0.103676622763       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [194.11914117713226, 1.0]], [0, [15.38776040521949, 1.0]], [0, [2.523850302263355, 1.0]], [0, [0.103676622762866, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [194.11914118]
bas 1, expnt(s) = [15.38776041]
bas 2, expnt(s) = [2.5238503]
bas 3, expnt(s) = [0.10367662]
CPU time:        53.11
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94119141e+02 1.31391205e+02 1.53877604e+01 1.96289282e+01
 2.52385030e+00 5.05897715e+00 1.03676623e-01 4.61610475e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9790576721449487
cond(S) = 5.325619377294068
E1 = -18.824015571950717  E_coul = 4.510146293496088
init E= -14.3138692784546
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304326663680761  LUMO = 13.1696918201197
  mo_energy =
[ -4.63100401  -0.30432666  13.16969182 257.14526545]
E1 = -18.92298880419989  E_coul = 4.542017481739825
cycle= 1 E= -14.3809713224601  delta_E= -0.0671  |g|= 0.0331  |ddm|= 0.0386
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0539483
diis-c [-0.00291042  1.        ]
  HOMO = -0.298101317405073  LUMO = 13.1892968945083
  mo_energy =
[ -4.62137817  -0.29810132  13.18929689 257.14723266]
E1 = -18.922192327525735  E_coul = 4.5412157740301335
cycle= 2 E= -14.3809765534956  delta_E= -5.23e-06  |g|= 0.000395  |ddm|= 0.00158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000599932
diis-c [-2.19084948e-08 -1.08941725e-02  1.01089417e+00]
  HOMO = -0.298115243655734  LUMO = 13.1888998085634
  mo_energy =
[ -4.62176951  -0.29811524  13.18889981 257.14553062]
E1 = -18.9221726458014  E_coul = 4.5411960899314066
cycle= 3 E= -14.38097655587  delta_E= -2.37e-09  |g|= 3.88e-06  |ddm|= 4.2e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.9059e-06
diis-c [-3.71891921e-13  2.89381399e-04 -2.70414649e-02  1.02675208e+00]
  HOMO = -0.298115453618402  LUMO = 13.1888945631426
  mo_energy =
[ -4.62177493  -0.29811545  13.18889456 257.14551097]
E1 = -18.922172372640695  E_coul = 4.541195816770152
cycle= 4 E= -14.3809765558705  delta_E= -5.51e-13  |g|= 2.02e-08  |ddm|= 6.85e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.922172372640695  E_coul = 4.541195816770152
  HOMO = -0.2981154537217  LUMO = 13.1888945811376
  mo_energy =
[ -4.62177492  -0.29811545  13.18889458 257.14551105]
E1 = -18.92217237347393  E_coul = 4.541195817603381
Extra cycle  E= -14.3809765558706  delta_E= -7.11e-15  |g|= 7.92e-10  |ddm|= 2.17e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.325619377294068
E1 = -18.92217237347393  E_coul = 4.541195817603381
init E= -14.3809765558706
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.298115453725509  LUMO = 13.1888945818399
  mo_energy =
[ -4.62177492  -0.29811545  13.18889458 257.14551106]
E1 = -18.922172373506058  E_coul = 4.54119581763551
cycle= 1 E= -14.3809765558705  delta_E= 1.78e-15  |g|= 3.13e-11  |ddm|= 8.62e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.922172373506058  E_coul = 4.54119581763551
  HOMO = -0.298115453725675  LUMO = 13.1888945818672
  mo_energy =
[ -4.62177492  -0.29811545  13.18889458 257.14551106]
E1 = -18.922172373507294  E_coul = 4.541195817636755
Extra cycle  E= -14.3809765558705  delta_E= 8.88e-15  |g|= 1.21e-12  |ddm|= 3.42e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94119141e+02 1.53877604e+01 2.52385030e+00 1.03676623e-01]
grad_E = [ 0.00069753 -0.00120256  0.00895999 -0.01021562]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  193.656500453        1
[INPUT] 0    0    [1    /1   ]  15.3288798556        1
[INPUT] 0    0    [1    /1   ]  2.52789971004        1
[INPUT] 0    0    [1    /1   ]  0.103475122734       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [193.65650045276894, 1.0]], [0, [15.328879855554824, 1.0]], [0, [2.5278997100355944, 1.0]], [0, [0.10347512273408764, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [193.65650045]
bas 1, expnt(s) = [15.32887986]
bas 2, expnt(s) = [2.52789971]
bas 3, expnt(s) = [0.10347512]
CPU time:        55.38
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.93656500e+02 1.31156278e+02 1.53288799e+01 1.95725693e+01
 2.52789971e+00 5.06506362e+00 1.03475123e-01 4.60937442e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9789878880632616
cond(S) = 5.3463247153149265
E1 = -18.82118283170292  E_coul = 4.50903028726042
init E= -14.3121525444425
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30451805359992  LUMO = 13.140872167535
  mo_energy =
[ -4.63145122  -0.30451805  13.14087217 256.40665162]
E1 = -18.923697671202817  E_coul = 4.5425541672984435
cycle= 1 E= -14.3811435039044  delta_E= -0.069  |g|= 0.0344  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0558477
diis-c [-0.00311897  1.        ]
  HOMO = -0.298255037511234  LUMO = 13.1615813857671
  mo_energy =
[ -4.62104224  -0.29825504  13.16158139 256.41230914]
E1 = -18.922946927352246  E_coul = 4.541798105292269
cycle= 2 E= -14.38114882206  delta_E= -5.32e-06  |g|= 0.000408  |ddm|= 0.00157
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000613017
diis-c [-2.29720027e-08 -1.07501640e-02  1.01075016e+00]
  HOMO = -0.298268802902376  LUMO = 13.161218782535
  mo_energy =
[ -4.62141062  -0.2982688   13.16121878 256.41074403]
E1 = -18.922928766398595  E_coul = 4.5417799419382465
cycle= 3 E= -14.3811488244603  delta_E= -2.4e-09  |g|= 4.09e-06  |ddm|= 4.22e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.28657e-06
diis-c [-8.12126309e-13  3.07587963e-04 -2.87348131e-02  1.02842723e+00]
  HOMO = -0.298269015509832  LUMO = 13.1612143093191
  mo_energy =
[ -4.62141557  -0.29826902  13.16121431 256.41072771]
E1 = -18.92292852712913  E_coul = 4.54177970266815
cycle= 4 E= -14.381148824461  delta_E= -6.31e-13  |g|= 2.9e-08  |ddm|= 7.25e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92292852712913  E_coul = 4.54177970266815
  HOMO = -0.298269015411615  LUMO = 13.1612143416234
  mo_energy =
[ -4.62141555  -0.29826902  13.16121434 256.41072785]
E1 = -18.92292852867044  E_coul = 4.541779704209453
Extra cycle  E= -14.381148824461  delta_E= -7.11e-15  |g|= 1.12e-09  |ddm|= 2.97e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.93656500e+02 1.53288799e+01 2.52789971e+00 1.03475123e-01]
E = -14.381148824460986
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  193.656500453        1
[INPUT] 0    0    [1    /1   ]  15.3288798556        1
[INPUT] 0    0    [1    /1   ]  2.52789971004        1
[INPUT] 0    0    [1    /1   ]  0.103475122734       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [193.65650045276894, 1.0]], [0, [15.328879855554824, 1.0]], [0, [2.5278997100355944, 1.0]], [0, [0.10347512273408764, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [193.65650045]
bas 1, expnt(s) = [15.32887986]
bas 2, expnt(s) = [2.52789971]
bas 3, expnt(s) = [0.10347512]
CPU time:        55.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.93656500e+02 1.31156278e+02 1.53288799e+01 1.95725693e+01
 2.52789971e+00 5.06506362e+00 1.03475123e-01 4.60937442e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9789878880632616
cond(S) = 5.3463247153149265
E1 = -18.82118283170292  E_coul = 4.50903028726042
init E= -14.3121525444425
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30451805359992  LUMO = 13.140872167535
  mo_energy =
[ -4.63145122  -0.30451805  13.14087217 256.40665162]
E1 = -18.923697671202817  E_coul = 4.5425541672984435
cycle= 1 E= -14.3811435039044  delta_E= -0.069  |g|= 0.0344  |ddm|= 0.0387
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0558477
diis-c [-0.00311897  1.        ]
  HOMO = -0.298255037511234  LUMO = 13.1615813857671
  mo_energy =
[ -4.62104224  -0.29825504  13.16158139 256.41230914]
E1 = -18.922946927352246  E_coul = 4.541798105292269
cycle= 2 E= -14.38114882206  delta_E= -5.32e-06  |g|= 0.000408  |ddm|= 0.00157
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000613017
diis-c [-2.29720027e-08 -1.07501640e-02  1.01075016e+00]
  HOMO = -0.298268802902376  LUMO = 13.161218782535
  mo_energy =
[ -4.62141062  -0.2982688   13.16121878 256.41074403]
E1 = -18.922928766398595  E_coul = 4.5417799419382465
cycle= 3 E= -14.3811488244603  delta_E= -2.4e-09  |g|= 4.09e-06  |ddm|= 4.22e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.28657e-06
diis-c [-8.12126309e-13  3.07587963e-04 -2.87348131e-02  1.02842723e+00]
  HOMO = -0.298269015509832  LUMO = 13.1612143093191
  mo_energy =
[ -4.62141557  -0.29826902  13.16121431 256.41072771]
E1 = -18.92292852712913  E_coul = 4.54177970266815
cycle= 4 E= -14.381148824461  delta_E= -6.31e-13  |g|= 2.9e-08  |ddm|= 7.25e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.92292852712913  E_coul = 4.54177970266815
  HOMO = -0.298269015411615  LUMO = 13.1612143416234
  mo_energy =
[ -4.62141555  -0.29826902  13.16121434 256.41072785]
E1 = -18.92292852867044  E_coul = 4.541779704209453
Extra cycle  E= -14.381148824461  delta_E= -7.11e-15  |g|= 1.12e-09  |ddm|= 2.97e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.3463247153149265
E1 = -18.92292852867044  E_coul = 4.541779704209453
init E= -14.381148824461
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.298269015410715  LUMO = 13.1612143427881
  mo_energy =
[ -4.62141554  -0.29826902  13.16121434 256.41072786]
E1 = -18.922928528725187  E_coul = 4.54177970426421
cycle= 1 E= -14.381148824461  delta_E= 8.88e-15  |g|= 4.38e-11  |ddm|= 1.17e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.922928528725187  E_coul = 4.54177970426421
  HOMO = -0.298269015410781  LUMO = 13.1612143428311
  mo_energy =
[ -4.62141554  -0.29826902  13.16121434 256.41072786]
E1 = -18.922928528727205  E_coul = 4.5417797042662205
Extra cycle  E= -14.381148824461  delta_E= -7.11e-15  |g|= 1.74e-12  |ddm|= 4.67e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.93656500e+02 1.53288799e+01 2.52789971e+00 1.03475123e-01]
grad_E = [ 0.00070896 -0.00215555  0.01626497 -0.02119319]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.425050967        1
[INPUT] 0    0    [1    /1   ]  15.2281189637        1
[INPUT] 0    0    [1    /1   ]  2.53412800809        1
[INPUT] 0    0    [1    /1   ]  0.10315725334        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [192.4250509670292, 1.0]], [0, [15.228118963735621, 1.0]], [0, [2.534128008093048, 1.0]], [0, [0.1031572533398469, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.42505097]
bas 1, expnt(s) = [15.22811896]
bas 2, expnt(s) = [2.53412801]
bas 3, expnt(s) = [0.10315725]
CPU time:        58.28
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92425051e+02 1.30530269e+02 1.52281190e+01 1.94759979e+01
 2.53412801e+00 5.07442030e+00 1.03157253e-01 4.59875054e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9788661980602926
cond(S) = 5.385130670241414
E1 = -18.816754735282775  E_coul = 4.507241011392599
init E= -14.3095137238902
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304824316254345  LUMO = 13.0895314973241
  mo_energy =
[ -4.63225159  -0.30482432  13.0895315  254.60964216]
E1 = -18.9250470323516  E_coul = 4.543459749489029
cycle= 1 E= -14.3815872828626  delta_E= -0.0721  |g|= 0.0366  |ddm|= 0.0391
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0587872
diis-c [-0.00345594  1.        ]
  HOMO = -0.298498982342066  LUMO = 13.1120239947901
  mo_energy =
[ -4.6205675   -0.29849898  13.11202399 254.6213357 ]
E1 = -18.924371378449504  E_coul = 4.542778558822404
cycle= 2 E= -14.3815928196271  delta_E= -5.54e-06  |g|= 0.000435  |ddm|= 0.00156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000637646
diis-c [-2.73077158e-08 -1.05870573e-02  1.01058706e+00]
  HOMO = -0.298512495876588  LUMO = 13.1117174212864
  mo_energy =
[ -4.62089824  -0.2985125   13.11171742 254.61999495]
E1 = -18.924355743881087  E_coul = 4.542762921709812
cycle= 3 E= -14.3815928221713  delta_E= -2.54e-09  |g|= 4.71e-06  |ddm|= 4.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.27586e-06
diis-c [-1.61280728e-12  3.44866711e-04 -3.22123090e-02  1.03186744e+00]
  HOMO = -0.2985127120021  LUMO = 13.1117142708075
  mo_energy =
[ -4.62090237  -0.29851271  13.11171427 254.61998437]
E1 = -18.924355564281353  E_coul = 4.542762742109235
cycle= 4 E= -14.3815928221721  delta_E= -8.42e-13  |g|= 3.9e-08  |ddm|= 8.08e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.924355564281353  E_coul = 4.542762742109235
  HOMO = -0.29851271140526  LUMO = 13.1117143246948
  mo_energy =
[ -4.62090233  -0.29851271  13.11171432 254.61998459]
E1 = -18.924355566942413  E_coul = 4.542762744770298
Extra cycle  E= -14.3815928221721  delta_E=    0  |g|= 1.44e-09  |ddm|= 4.01e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.92425051e+02 1.52281190e+01 2.53412801e+00 1.03157253e-01]
E = -14.381592822172117
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  192.425050967        1
[INPUT] 0    0    [1    /1   ]  15.2281189637        1
[INPUT] 0    0    [1    /1   ]  2.53412800809        1
[INPUT] 0    0    [1    /1   ]  0.10315725334        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [192.4250509670292, 1.0]], [0, [15.228118963735621, 1.0]], [0, [2.534128008093048, 1.0]], [0, [0.1031572533398469, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [192.42505097]
bas 1, expnt(s) = [15.22811896]
bas 2, expnt(s) = [2.53412801]
bas 3, expnt(s) = [0.10315725]
CPU time:        58.76
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.92425051e+02 1.30530269e+02 1.52281190e+01 1.94759979e+01
 2.53412801e+00 5.07442030e+00 1.03157253e-01 4.59875054e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9788661980602926
cond(S) = 5.385130670241414
E1 = -18.816754735282775  E_coul = 4.507241011392599
init E= -14.3095137238902
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.304824316254345  LUMO = 13.0895314973241
  mo_energy =
[ -4.63225159  -0.30482432  13.0895315  254.60964216]
E1 = -18.9250470323516  E_coul = 4.543459749489029
cycle= 1 E= -14.3815872828626  delta_E= -0.0721  |g|= 0.0366  |ddm|= 0.0391
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0587872
diis-c [-0.00345594  1.        ]
  HOMO = -0.298498982342066  LUMO = 13.1120239947901
  mo_energy =
[ -4.6205675   -0.29849898  13.11202399 254.6213357 ]
E1 = -18.924371378449504  E_coul = 4.542778558822404
cycle= 2 E= -14.3815928196271  delta_E= -5.54e-06  |g|= 0.000435  |ddm|= 0.00156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000637646
diis-c [-2.73077158e-08 -1.05870573e-02  1.01058706e+00]
  HOMO = -0.298512495876588  LUMO = 13.1117174212864
  mo_energy =
[ -4.62089824  -0.2985125   13.11171742 254.61999495]
E1 = -18.924355743881087  E_coul = 4.542762921709812
cycle= 3 E= -14.3815928221713  delta_E= -2.54e-09  |g|= 4.71e-06  |ddm|= 4.32e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.27586e-06
diis-c [-1.61280728e-12  3.44866711e-04 -3.22123090e-02  1.03186744e+00]
  HOMO = -0.2985127120021  LUMO = 13.1117142708075
  mo_energy =
[ -4.62090237  -0.29851271  13.11171427 254.61998437]
E1 = -18.924355564281353  E_coul = 4.542762742109235
cycle= 4 E= -14.3815928221721  delta_E= -8.42e-13  |g|= 3.9e-08  |ddm|= 8.08e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.924355564281353  E_coul = 4.542762742109235
  HOMO = -0.29851271140526  LUMO = 13.1117143246948
  mo_energy =
[ -4.62090233  -0.29851271  13.11171432 254.61998459]
E1 = -18.924355566942413  E_coul = 4.542762744770298
Extra cycle  E= -14.3815928221721  delta_E=    0  |g|= 1.44e-09  |ddm|= 4.01e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.385130670241414
E1 = -18.924355566942413  E_coul = 4.542762744770298
init E= -14.3815928221721
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.298512711391573  LUMO = 13.1117143264964
  mo_energy =
[ -4.62090233  -0.29851271  13.11171433 254.6199846 ]
E1 = -18.92435556703002  E_coul = 4.542762744857905
cycle= 1 E= -14.3815928221721  delta_E= 1.78e-15  |g|= 5.5e-11  |ddm|= 1.47e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.92435556703002  E_coul = 4.542762744857905
  HOMO = -0.298512711391319  LUMO = 13.1117143265588
  mo_energy =
[ -4.62090233  -0.29851271  13.11171433 254.6199846 ]
E1 = -18.924355567033032  E_coul = 4.5427627448609105
Extra cycle  E= -14.3815928221721  delta_E= -7.11e-15  |g|= 2.17e-12  |ddm|= 5.69e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.92425051e+02 1.52281190e+01 2.53412801e+00 1.03157253e-01]
grad_E = [ 0.00072824 -0.00367539  0.02795426 -0.03869067]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  189.080328947        1
[INPUT] 0    0    [1    /1   ]  15.039798826         1
[INPUT] 0    0    [1    /1   ]  2.54346832041        1
[INPUT] 0    0    [1    /1   ]  0.102635779438       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [189.08032894685337, 1.0]], [0, [15.039798825984176, 1.0]], [0, [2.5434683204078894, 1.0]], [0, [0.10263577943806387, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [189.08032895]
bas 1, expnt(s) = [15.03979883]
bas 2, expnt(s) = [2.54346832]
bas 3, expnt(s) = [0.10263578]
CPU time:        61.09
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.89080329e+02 1.28824892e+02 1.50397988e+01 1.92950783e+01
 2.54346832e+00 5.08844136e+00 1.02635779e-01 4.58130402e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978642098264916
cond(S) = 5.465656151320425
E1 = -18.809667361132338  E_coul = 4.504201031875468
init E= -14.3054663292569
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305335371824215  LUMO = 12.9867673047231
  mo_energy =
[ -4.63383308  -0.30533537  12.9867673  249.98883251]
E1 = -18.92775748789682  E_coul = 4.544985503267469
cycle= 1 E= -14.3827719846294  delta_E= -0.0773  |g|= 0.0401  |ddm|= 0.041
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0634303
diis-c [-0.00402341  1.        ]
  HOMO = -0.298904364692657  LUMO = 13.0122349158954
  mo_energy =
[ -4.61999189  -0.29890436  13.01223492 250.01079026]
E1 = -18.92721174116271  E_coul = 4.544433611238466
cycle= 2 E= -14.3827781299242  delta_E= -6.15e-06  |g|= 0.000491  |ddm|= 0.00158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000689315
diis-c [-4.29640310e-08 -1.04729231e-02  1.01047292e+00]
  HOMO = -0.298917487458594  LUMO = 13.012023694422
  mo_energy =
[ -4.62025766  -0.29891749  13.01202369 250.00983567]
E1 = -18.9272005701452  E_coul = 4.544422437112438
cycle= 3 E= -14.3827781330328  delta_E= -3.11e-09  |g|= 6.35e-06  |ddm|= 4.61e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.62351e-06
diis-c [-2.47029339e-12  4.02579060e-04 -3.74733420e-02  1.03707076e+00]
  HOMO = -0.298917707783497  LUMO = 13.0120229606111
  mo_energy =
[ -4.62026024  -0.29891771  13.01202296 250.00983563]
E1 = -18.927200504367022  E_coul = 4.544422371332779
cycle= 4 E= -14.3827781330342  delta_E= -1.48e-12  |g|= 4.52e-08  |ddm|= 9.94e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.927200504367022  E_coul = 4.544422371332779
  HOMO = -0.298917706424869  LUMO = 13.0120230335501
  mo_energy =
[ -4.62026017  -0.29891771  13.01202303 250.00983593]
E1 = -18.927200508129996  E_coul = 4.544422375095758
Extra cycle  E= -14.3827781330342  delta_E= 5.33e-15  |g|= 1.5e-09  |ddm|= 5.38e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [1.89080329e+02 1.50397988e+01 2.54346832e+00 1.02635779e-01]
E = -14.382778133034238
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  189.080328947        1
[INPUT] 0    0    [1    /1   ]  15.039798826         1
[INPUT] 0    0    [1    /1   ]  2.54346832041        1
[INPUT] 0    0    [1    /1   ]  0.102635779438       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [189.08032894685337, 1.0]], [0, [15.039798825984176, 1.0]], [0, [2.5434683204078894, 1.0]], [0, [0.10263577943806387, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [189.08032895]
bas 1, expnt(s) = [15.03979883]
bas 2, expnt(s) = [2.54346832]
bas 3, expnt(s) = [0.10263578]
CPU time:        61.57
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.89080329e+02 1.28824892e+02 1.50397988e+01 1.92950783e+01
 2.54346832e+00 5.08844136e+00 1.02635779e-01 4.58130402e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978642098264916
cond(S) = 5.465656151320425
E1 = -18.809667361132338  E_coul = 4.504201031875468
init E= -14.3054663292569
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.305335371824215  LUMO = 12.9867673047231
  mo_energy =
[ -4.63383308  -0.30533537  12.9867673  249.98883251]
E1 = -18.92775748789682  E_coul = 4.544985503267469
cycle= 1 E= -14.3827719846294  delta_E= -0.0773  |g|= 0.0401  |ddm|= 0.041
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0634303
diis-c [-0.00402341  1.        ]
  HOMO = -0.298904364692657  LUMO = 13.0122349158954
  mo_energy =
[ -4.61999189  -0.29890436  13.01223492 250.01079026]
E1 = -18.92721174116271  E_coul = 4.544433611238466
cycle= 2 E= -14.3827781299242  delta_E= -6.15e-06  |g|= 0.000491  |ddm|= 0.00158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000689315
diis-c [-4.29640310e-08 -1.04729231e-02  1.01047292e+00]
  HOMO = -0.298917487458594  LUMO = 13.012023694422
  mo_energy =
[ -4.62025766  -0.29891749  13.01202369 250.00983567]
E1 = -18.9272005701452  E_coul = 4.544422437112438
cycle= 3 E= -14.3827781330328  delta_E= -3.11e-09  |g|= 6.35e-06  |ddm|= 4.61e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.62351e-06
diis-c [-2.47029339e-12  4.02579060e-04 -3.74733420e-02  1.03707076e+00]
  HOMO = -0.298917707783497  LUMO = 13.0120229606111
  mo_energy =
[ -4.62026024  -0.29891771  13.01202296 250.00983563]
E1 = -18.927200504367022  E_coul = 4.544422371332779
cycle= 4 E= -14.3827781330342  delta_E= -1.48e-12  |g|= 4.52e-08  |ddm|= 9.94e-07
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.927200504367022  E_coul = 4.544422371332779
  HOMO = -0.298917706424869  LUMO = 13.0120230335501
  mo_energy =
[ -4.62026017  -0.29891771  13.01202303 250.00983593]
E1 = -18.927200508129996  E_coul = 4.544422375095758
Extra cycle  E= -14.3827781330342  delta_E= 5.33e-15  |g|= 1.5e-09  |ddm|= 5.38e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.465656151320425
E1 = -18.927200508129996  E_coul = 4.544422375095758
init E= -14.3827781330342
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.298917706390266  LUMO = 13.0120230358236
  mo_energy =
[ -4.62026017  -0.29891771  13.01202304 250.00983594]
E1 = -18.92720050824565  E_coul = 4.54442237521141
cycle= 1 E= -14.3827781330342  delta_E= -1.78e-15  |g|= 5.38e-11  |ddm|= 1.65e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.92720050824565  E_coul = 4.54442237521141
  HOMO = -0.298917706389441  LUMO = 13.0120230358971
  mo_energy =
[ -4.62026017  -0.29891771  13.01202304 250.00983594]
E1 = -18.927200508249353  E_coul = 4.544422375215115
Extra cycle  E= -14.3827781330342  delta_E= 1.78e-15  |g|= 2.01e-12  |ddm|= 5.63e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.89080329e+02 1.50397988e+01 2.54346832e+00 1.02635779e-01]
grad_E = [ 0.00076393 -0.00621     0.04734989 -0.06780356]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  179.986663984        1
[INPUT] 0    0    [1    /1   ]  14.6620924403        1
[INPUT] 0    0    [1    /1   ]  2.55635263975        1
[INPUT] 0    0    [1    /1   ]  0.101762697865       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [179.9866639844993, 1.0]], [0, [14.662092440261276, 1.0]], [0, [2.5563526397518785, 1.0]], [0, [0.10176269786528014, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [179.98666398]
bas 1, expnt(s) = [14.66209244]
bas 2, expnt(s) = [2.55635264]
bas 3, expnt(s) = [0.1017627]
CPU time:        63.94
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.79986664e+02 1.24149584e+02 1.46620924e+01 1.89304958e+01
 2.55635264e+00 5.10776134e+00 1.01762698e-01 4.55204434e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9782006681953956
cond(S) = 5.651452094113729
E1 = -18.79852878329476  E_coul = 4.498769868053555
init E= -14.2997589152412
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306212352046932  LUMO = 12.7636913884009
  mo_energy =
[ -4.63723232  -0.30621235  12.76369139 237.86541524]
E1 = -18.93347009922044  E_coul = 4.547489444871301
cycle= 1 E= -14.3859806543491  delta_E= -0.0862  |g|= 0.0459  |ddm|= 0.0469
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0705776
diis-c [-0.00498119  1.        ]
  HOMO = -0.299597867155889  LUMO = 12.7941795181655
  mo_energy =
[ -4.61965165  -0.29959787  12.79417952 237.90516005]
E1 = -18.93315942994579  E_coul = 4.547170770238578
cycle= 2 E= -14.3859886597072  delta_E= -8.01e-06  |g|= 0.00062  |ddm|= 0.00169
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000807943
diis-c [-9.89962455e-08 -1.06563436e-02  1.01065634e+00]
  HOMO = -0.299610434285578  LUMO = 12.7941354604439
  mo_energy =
[ -4.61980021  -0.29961043  12.79413546 237.90489231]
E1 = -18.933156655073788  E_coul = 4.547167990124004
cycle= 3 E= -14.3859886649498  delta_E= -5.24e-09  |g|= 1.02e-05  |ddm|= 5.54e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.27239e-05
diis-c [-2.45545031e-12  4.63360801e-04 -4.20128283e-02  1.04154947e+00]
  HOMO = -0.299610658668465  LUMO = 12.794139301941
  mo_energy =
[ -4.61979966  -0.29961066  12.7941393  237.90491244]
E1 = -18.933156821079887  E_coul = 4.547168156126497
cycle= 4 E= -14.3859886649534  delta_E= -3.61e-12  |g|= 4.25e-08  |ddm|= 1.43e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.933156821079887  E_coul = 4.547168156126497
  HOMO = -0.299610656890196  LUMO = 12.7941393721155
  mo_energy =
[ -4.6197996   -0.29961066  12.79413937 237.90491272]
E1 = -18.933156824934045  E_coul = 4.547168159980648
Extra cycle  E= -14.3859886649534  delta_E= -5.33e-15  |g|= 1.26e-09  |ddm|= 6.24e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.79986664e+02 1.46620924e+01 2.55635264e+00 1.01762698e-01]
E = -14.385988664953397
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  179.986663984        1
[INPUT] 0    0    [1    /1   ]  14.6620924403        1
[INPUT] 0    0    [1    /1   ]  2.55635263975        1
[INPUT] 0    0    [1    /1   ]  0.101762697865       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [179.9866639844993, 1.0]], [0, [14.662092440261276, 1.0]], [0, [2.5563526397518785, 1.0]], [0, [0.10176269786528014, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [179.98666398]
bas 1, expnt(s) = [14.66209244]
bas 2, expnt(s) = [2.55635264]
bas 3, expnt(s) = [0.1017627]
CPU time:        64.45
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.79986664e+02 1.24149584e+02 1.46620924e+01 1.89304958e+01
 2.55635264e+00 5.10776134e+00 1.01762698e-01 4.55204434e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9782006681953956
cond(S) = 5.651452094113729
E1 = -18.79852878329476  E_coul = 4.498769868053555
init E= -14.2997589152412
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306212352046932  LUMO = 12.7636913884009
  mo_energy =
[ -4.63723232  -0.30621235  12.76369139 237.86541524]
E1 = -18.93347009922044  E_coul = 4.547489444871301
cycle= 1 E= -14.3859806543491  delta_E= -0.0862  |g|= 0.0459  |ddm|= 0.0469
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0705776
diis-c [-0.00498119  1.        ]
  HOMO = -0.299597867155889  LUMO = 12.7941795181655
  mo_energy =
[ -4.61965165  -0.29959787  12.79417952 237.90516005]
E1 = -18.93315942994579  E_coul = 4.547170770238578
cycle= 2 E= -14.3859886597072  delta_E= -8.01e-06  |g|= 0.00062  |ddm|= 0.00169
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000807943
diis-c [-9.89962455e-08 -1.06563436e-02  1.01065634e+00]
  HOMO = -0.299610434285578  LUMO = 12.7941354604439
  mo_energy =
[ -4.61980021  -0.29961043  12.79413546 237.90489231]
E1 = -18.933156655073788  E_coul = 4.547167990124004
cycle= 3 E= -14.3859886649498  delta_E= -5.24e-09  |g|= 1.02e-05  |ddm|= 5.54e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.27239e-05
diis-c [-2.45545031e-12  4.63360801e-04 -4.20128283e-02  1.04154947e+00]
  HOMO = -0.299610658668465  LUMO = 12.794139301941
  mo_energy =
[ -4.61979966  -0.29961066  12.7941393  237.90491244]
E1 = -18.933156821079887  E_coul = 4.547168156126497
cycle= 4 E= -14.3859886649534  delta_E= -3.61e-12  |g|= 4.25e-08  |ddm|= 1.43e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.933156821079887  E_coul = 4.547168156126497
  HOMO = -0.299610656890196  LUMO = 12.7941393721155
  mo_energy =
[ -4.6197996   -0.29961066  12.79413937 237.90491272]
E1 = -18.933156824934045  E_coul = 4.547168159980648
Extra cycle  E= -14.3859886649534  delta_E= -5.33e-15  |g|= 1.26e-09  |ddm|= 6.24e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 5.651452094113729
E1 = -18.933156824934045  E_coul = 4.547168159980648
init E= -14.3859886649534
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299610656842136  LUMO = 12.7941393741934
  mo_energy =
[ -4.6197996   -0.29961066  12.79413937 237.90491273]
E1 = -18.933156825046858  E_coul = 4.5471681600934595
cycle= 1 E= -14.3859886649534  delta_E= -1.78e-15  |g|= 3.95e-11  |ddm|= 1.72e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.933156825046858  E_coul = 4.5471681600934595
  HOMO = -0.299610656840884  LUMO = 12.7941393742566
  mo_energy =
[ -4.6197996   -0.29961066  12.79413937 237.90491273]
E1 = -18.933156825050236  E_coul = 4.547168160096849
Extra cycle  E= -14.3859886649534  delta_E= 1.07e-14  |g|= 1.33e-12  |ddm|= 4.91e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.79986664e+02 1.46620924e+01 2.55635264e+00 1.01762698e-01]
grad_E = [ 0.00083687 -0.01054218  0.08000958 -0.11758325]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  153.465778943        1
[INPUT] 0    0    [1    /1   ]  13.7872537553        1
[INPUT] 0    0    [1    /1   ]  2.57344796284        1
[INPUT] 0    0    [1    /1   ]  0.10013601868        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [153.46577894270442, 1.0]], [0, [13.787253755265803, 1.0]], [0, [2.5734479628422924, 1.0]], [0, [0.10013601867970387, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [153.46577894]
bas 1, expnt(s) = [13.78725376]
bas 2, expnt(s) = [2.57344796]
bas 3, expnt(s) = [0.10013602]
CPU time:        66.82
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.53465779e+02 1.10159939e+02 1.37872538e+01 1.80768748e+01
 2.57344796e+00 5.13335817e+00 1.00136019e-01 4.49736115e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9771040294251323
cond(S) = 6.209890788716428
E1 = -18.781441065499756  E_coul = 4.4874135764538154
init E= -14.2940274890459
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.307926354331706  LUMO = 12.2153005645924
  mo_energy =
[ -4.64589435  -0.30792635  12.21530056 203.5659421 ]
E1 = -18.94735618867123  E_coul = 4.551747950466143
cycle= 1 E= -14.3956082382051  delta_E= -0.102  |g|= 0.0559  |ddm|= 0.0658
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0807563
diis-c [-0.00652159  1.        ]
  HOMO = -0.300928760668634  LUMO = 12.2550451008046
  mo_energy =
[ -4.62100873  -0.30092876  12.2550451  203.63937392]
E1 = -18.947536946846252  E_coul = 4.5519136089239955
cycle= 2 E= -14.3956233379223  delta_E= -1.51e-05  |g|= 0.000963  |ddm|= 0.00226
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112437
diis-c [-3.26536057e-07 -1.21366145e-02  1.01213661e+00]
  HOMO = -0.300940791635442  LUMO = 12.2553262250309
  mo_energy =
[ -4.62091308  -0.30094079  12.25532623 203.64045782]
E1 = -18.947553168472623  E_coul = 4.5519298154014995
cycle= 3 E= -14.3956233530711  delta_E= -1.51e-08  |g|= 1.96e-05  |ddm|= 8.72e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.42571e-05
diis-c [-1.36024270e-12  5.54055645e-04 -4.47613511e-02  1.04420730e+00]
  HOMO = -0.30094102292091  LUMO = 12.2553394655365
  mo_energy =
[ -4.62090543  -0.30094102  12.25533947 203.64051965]
E1 = -18.94755388377829  E_coul = 4.551930530694466
cycle= 4 E= -14.3956233530838  delta_E= -1.27e-11  |g|= 2.87e-08  |ddm|= 2.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.94755388377829  E_coul = 4.551930530694466
  HOMO = -0.300941021631871  LUMO = 12.2553395091112
  mo_energy =
[ -4.62090539  -0.30094102  12.25533951 203.64051983]
E1 = -18.947553886454948  E_coul = 4.551930533371108
Extra cycle  E= -14.3956233530838  delta_E= -1.6e-14  |g|= 8.41e-10  |ddm|= 4.87e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.53465779e+02 1.37872538e+01 2.57344796e+00 1.00136019e-01]
E = -14.39562335308384
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  153.465778943        1
[INPUT] 0    0    [1    /1   ]  13.7872537553        1
[INPUT] 0    0    [1    /1   ]  2.57344796284        1
[INPUT] 0    0    [1    /1   ]  0.10013601868        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [153.46577894270442, 1.0]], [0, [13.787253755265803, 1.0]], [0, [2.5734479628422924, 1.0]], [0, [0.10013601867970387, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [153.46577894]
bas 1, expnt(s) = [13.78725376]
bas 2, expnt(s) = [2.57344796]
bas 3, expnt(s) = [0.10013602]
CPU time:        67.34
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.53465779e+02 1.10159939e+02 1.37872538e+01 1.80768748e+01
 2.57344796e+00 5.13335817e+00 1.00136019e-01 4.49736115e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9771040294251323
cond(S) = 6.209890788716428
E1 = -18.781441065499756  E_coul = 4.4874135764538154
init E= -14.2940274890459
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.307926354331706  LUMO = 12.2153005645924
  mo_energy =
[ -4.64589435  -0.30792635  12.21530056 203.5659421 ]
E1 = -18.94735618867123  E_coul = 4.551747950466143
cycle= 1 E= -14.3956082382051  delta_E= -0.102  |g|= 0.0559  |ddm|= 0.0658
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0807563
diis-c [-0.00652159  1.        ]
  HOMO = -0.300928760668634  LUMO = 12.2550451008046
  mo_energy =
[ -4.62100873  -0.30092876  12.2550451  203.63937392]
E1 = -18.947536946846252  E_coul = 4.5519136089239955
cycle= 2 E= -14.3956233379223  delta_E= -1.51e-05  |g|= 0.000963  |ddm|= 0.00226
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112437
diis-c [-3.26536057e-07 -1.21366145e-02  1.01213661e+00]
  HOMO = -0.300940791635442  LUMO = 12.2553262250309
  mo_energy =
[ -4.62091308  -0.30094079  12.25532623 203.64045782]
E1 = -18.947553168472623  E_coul = 4.5519298154014995
cycle= 3 E= -14.3956233530711  delta_E= -1.51e-08  |g|= 1.96e-05  |ddm|= 8.72e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.42571e-05
diis-c [-1.36024270e-12  5.54055645e-04 -4.47613511e-02  1.04420730e+00]
  HOMO = -0.30094102292091  LUMO = 12.2553394655365
  mo_energy =
[ -4.62090543  -0.30094102  12.25533947 203.64051965]
E1 = -18.94755388377829  E_coul = 4.551930530694466
cycle= 4 E= -14.3956233530838  delta_E= -1.27e-11  |g|= 2.87e-08  |ddm|= 2.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.94755388377829  E_coul = 4.551930530694466
  HOMO = -0.300941021631871  LUMO = 12.2553395091112
  mo_energy =
[ -4.62090539  -0.30094102  12.25533951 203.64051983]
E1 = -18.947553886454948  E_coul = 4.551930533371108
Extra cycle  E= -14.3956233530838  delta_E= -1.6e-14  |g|= 8.41e-10  |ddm|= 4.87e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 6.209890788716428
E1 = -18.947553886454948  E_coul = 4.551930533371108
init E= -14.3956233530838
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300941021593981  LUMO = 12.2553395104129
  mo_energy =
[ -4.62090539  -0.30094102  12.25533951 203.64051983]
E1 = -18.947553886533836  E_coul = 4.551930533450011
cycle= 1 E= -14.3956233530838  delta_E= 1.6e-14  |g|= 2.52e-11  |ddm|= 1.37e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.947553886533836  E_coul = 4.551930533450011
  HOMO = -0.300941021592928  LUMO = 12.2553395104522
  mo_energy =
[ -4.62090539  -0.30094102  12.25533951 203.64051983]
E1 = -18.94755388653622  E_coul = 4.551930533452387
Extra cycle  E= -14.3956233530838  delta_E= -8.88e-15  |g|= 7.66e-13  |ddm|= 3.9e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.53465779e+02 1.37872538e+01 2.57344796e+00 1.00136019e-01]
grad_E = [ 0.0010145  -0.0184364   0.13956516 -0.21374873]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  43.1414854998        1
[INPUT] 0    0    [1    /1   ]  10.5868994383        1
[INPUT] 0    0    [1    /1   ]  2.60590763663        1
[INPUT] 0    0    [1    /1   ]  0.0955381149294      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [43.14148549977271, 1.0]], [0, [10.586899438264672, 1.0]], [0, [2.6059076366264917, 1.0]], [0, [0.09553811492936679, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [43.1414855]
bas 1, expnt(s) = [10.58689944]
bas 2, expnt(s) = [2.60590764]
bas 3, expnt(s) = [0.09553811]
CPU time:        69.72
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 43.1414855  42.52911502 10.58689944 14.82830858  2.60590764  5.18184345
  0.09553811  0.43415772]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.972343712215499
cond(S) = 16.01318886296517
E1 = -18.725719909920166  E_coul = 4.448766022897609
init E= -14.2769538870226
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.311838656502518  LUMO = 10.3671653694843
  mo_energy =
[-4.64694907 -0.31183866 10.36716537 71.88922404]
E1 = -18.891384241021168  E_coul = 4.524414080967925
cycle= 1 E= -14.3669701600532  delta_E= -0.09  |g|= 0.0494  |ddm|= 0.122
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0436899
diis-c [-0.00190881  1.        ]
  HOMO = -0.303940895066194  LUMO = 10.4110149566566
  mo_energy =
[-4.61735328 -0.3039409  10.41101496 71.97099295]
E1 = -18.891689087989032  E_coul = 4.524685354968873
cycle= 2 E= -14.3670037330202  delta_E= -3.36e-05  |g|= 0.00171  |ddm|= 0.00474
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00145243
diis-c [-5.10011737e-07 -2.98149510e-02  1.02981495e+00]
  HOMO = -0.303964512189574  LUMO = 10.4114120836607
  mo_energy =
[-4.61719068 -0.30396451 10.41141208 71.97222469]
E1 = -18.891722231235324  E_coul = 4.524718439402536
cycle= 3 E= -14.3670037918328  delta_E= -5.88e-08  |g|= 2.27e-05  |ddm|= 0.00021
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.94512e-05
diis-c [-3.70495007e-12  1.18556894e-03 -4.37937167e-02  1.04260815e+00]
  HOMO = -0.303964669490358  LUMO = 10.4114274050105
  mo_energy =
[-4.61717746 -0.30396467 10.41142741 71.97228032]
E1 = -18.89172336229574  E_coul = 4.524719570444865
cycle= 4 E= -14.3670037918509  delta_E= -1.81e-11  |g|= 4.42e-08  |ddm|= 3.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.89172336229574  E_coul = 4.524719570444865
  HOMO = -0.303964670155832  LUMO = 10.4114274315042
  mo_energy =
[-4.61717744 -0.30396467 10.41142743 71.97228042]
E1 = -18.891723364382482  E_coul = 4.524719572531599
Extra cycle  E= -14.3670037918509  delta_E= -1.07e-14  |g|= 1.97e-09  |ddm|= 6.24e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [43.1414855  10.58689944  2.60590764  0.09553811]
E = -14.367003791850884
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  43.1414854998        1
[INPUT] 0    0    [1    /1   ]  10.5868994383        1
[INPUT] 0    0    [1    /1   ]  2.60590763663        1
[INPUT] 0    0    [1    /1   ]  0.0955381149294      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [43.14148549977271, 1.0]], [0, [10.586899438264672, 1.0]], [0, [2.6059076366264917, 1.0]], [0, [0.09553811492936679, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [43.1414855]
bas 1, expnt(s) = [10.58689944]
bas 2, expnt(s) = [2.60590764]
bas 3, expnt(s) = [0.09553811]
CPU time:        70.27
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 43.1414855  42.52911502 10.58689944 14.82830858  2.60590764  5.18184345
  0.09553811  0.43415772]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.972343712215499
cond(S) = 16.01318886296517
E1 = -18.725719909920166  E_coul = 4.448766022897609
init E= -14.2769538870226
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.311838656502518  LUMO = 10.3671653694843
  mo_energy =
[-4.64694907 -0.31183866 10.36716537 71.88922404]
E1 = -18.891384241021168  E_coul = 4.524414080967925
cycle= 1 E= -14.3669701600532  delta_E= -0.09  |g|= 0.0494  |ddm|= 0.122
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0436899
diis-c [-0.00190881  1.        ]
  HOMO = -0.303940895066194  LUMO = 10.4110149566566
  mo_energy =
[-4.61735328 -0.3039409  10.41101496 71.97099295]
E1 = -18.891689087989032  E_coul = 4.524685354968873
cycle= 2 E= -14.3670037330202  delta_E= -3.36e-05  |g|= 0.00171  |ddm|= 0.00474
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00145243
diis-c [-5.10011737e-07 -2.98149510e-02  1.02981495e+00]
  HOMO = -0.303964512189574  LUMO = 10.4114120836607
  mo_energy =
[-4.61719068 -0.30396451 10.41141208 71.97222469]
E1 = -18.891722231235324  E_coul = 4.524718439402536
cycle= 3 E= -14.3670037918328  delta_E= -5.88e-08  |g|= 2.27e-05  |ddm|= 0.00021
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.94512e-05
diis-c [-3.70495007e-12  1.18556894e-03 -4.37937167e-02  1.04260815e+00]
  HOMO = -0.303964669490358  LUMO = 10.4114274050105
  mo_energy =
[-4.61717746 -0.30396467 10.41142741 71.97228032]
E1 = -18.89172336229574  E_coul = 4.524719570444865
cycle= 4 E= -14.3670037918509  delta_E= -1.81e-11  |g|= 4.42e-08  |ddm|= 3.6e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.89172336229574  E_coul = 4.524719570444865
  HOMO = -0.303964670155832  LUMO = 10.4114274315042
  mo_energy =
[-4.61717744 -0.30396467 10.41142743 71.97228042]
E1 = -18.891723364382482  E_coul = 4.524719572531599
Extra cycle  E= -14.3670037918509  delta_E= -1.07e-14  |g|= 1.97e-09  |ddm|= 6.24e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 16.01318886296517
E1 = -18.891723364382482  E_coul = 4.524719572531599
init E= -14.3670037918509
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.303964670167769  LUMO = 10.4114274327205
  mo_energy =
[-4.61717744 -0.30396467 10.41142743 71.97228043]
E1 = -18.89172336447502  E_coul = 4.524719572624152
cycle= 1 E= -14.3670037918509  delta_E= 1.6e-14  |g|= 9.16e-11  |ddm|= 2.82e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.89172336447502  E_coul = 4.524719572624152
  HOMO = -0.303964670168373  LUMO = 10.4114274327755
  mo_energy =
[-4.61717744 -0.30396467 10.41142743 71.97228043]
E1 = -18.891723364479205  E_coul = 4.5247195726283325
Extra cycle  E= -14.3670037918509  delta_E= -5.33e-15  |g|= 4.25e-12  |ddm|= 1.32e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [43.1414855  10.58689944  2.60590764  0.09553811]
grad_E = [-0.00419869  0.00159659  0.18121832 -0.47026761]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  103.203556104        1
[INPUT] 0    0    [1    /1   ]  12.3292165739        1
[INPUT] 0    0    [1    /1   ]  2.58823614146        1
[INPUT] 0    0    [1    /1   ]  0.0980412772979      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [103.20355610366073, 1.0]], [0, [12.32921657392447, 1.0]], [0, [2.5882361414574406, 1.0]], [0, [0.09804127729791147, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [103.2035561]
bas 1, expnt(s) = [12.32921657]
bas 2, expnt(s) = [2.58823614]
bas 3, expnt(s) = [0.09804128]
CPU time:        72.66
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.03203556e+02 8.18061626e+01 1.23292166e+01 1.66232768e+01
 2.58823614e+00 5.15546624e+00 9.80412773e-02 4.42661493e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9750863518071053
cond(S) = 7.8491466729202015
E1 = -18.776698697847298  E_coul = 4.470731624454007
init E= -14.3059670733933
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.310309518267681  LUMO = 11.3023808560767
  mo_energy =
[ -4.66192833  -0.31030952  11.30238086 141.18490533]
E1 = -18.971502106482067  E_coul = 4.555406351864668
cycle= 1 E= -14.4160957546174  delta_E= -0.11  |g|= 0.0637  |ddm|= 0.0997
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.079654
diis-c [-0.00634477  1.        ]
  HOMO = -0.302724299102102  LUMO = 11.3527045855255
  mo_energy =
[ -4.627636    -0.3027243   11.35270459 141.29641033]
E1 = -18.97234206262791  E_coul = 4.556214021855474
cycle= 2 E= -14.4161280407724  delta_E= -3.23e-05  |g|= 0.00156  |ddm|= 0.0036
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00161889
diis-c [-7.90905079e-07 -1.72772093e-02  1.01727721e+00]
  HOMO = -0.302737692001398  LUMO = 11.3533697808246
  mo_energy =
[ -4.62721237  -0.30273769  11.35336978 141.29900346]
E1 = -18.972387959434784  E_coul = 4.556259872549753
cycle= 3 E= -14.416128086885  delta_E= -4.61e-08  |g|= 3.16e-05  |ddm|= 0.000156
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85117e-05
diis-c [-8.25419158e-13  7.59670588e-04 -4.59697639e-02  1.04521009e+00]
  HOMO = -0.302737942278557  LUMO = 11.3533930422495
  mo_energy =
[ -4.62719543  -0.30273794  11.35339304 141.29910639]
E1 = -18.97238944043505  E_coul = 4.556261353516457
cycle= 4 E= -14.4161280869186  delta_E= -3.36e-11  |g|= 1.3e-08  |ddm|= 4.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97238944043505  E_coul = 4.556261353516457
  HOMO = -0.302737942311627  LUMO = 11.3533930554875
  mo_energy =
[ -4.62719542  -0.30273794  11.35339306 141.29910644]
E1 = -18.972389441339008  E_coul = 4.556261354420399
Extra cycle  E= -14.4161280869186  delta_E= -1.42e-14  |g|= 5.55e-10  |ddm|= 1.56e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.03203556e+02 1.23292166e+01 2.58823614e+00 9.80412773e-02]
E = -14.416128086918608
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:19:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  103.203556104        1
[INPUT] 0    0    [1    /1   ]  12.3292165739        1
[INPUT] 0    0    [1    /1   ]  2.58823614146        1
[INPUT] 0    0    [1    /1   ]  0.0980412772979      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [103.20355610366073, 1.0]], [0, [12.32921657392447, 1.0]], [0, [2.5882361414574406, 1.0]], [0, [0.09804127729791147, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [103.2035561]
bas 1, expnt(s) = [12.32921657]
bas 2, expnt(s) = [2.58823614]
bas 3, expnt(s) = [0.09804128]
CPU time:        73.22
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.03203556e+02 8.18061626e+01 1.23292166e+01 1.66232768e+01
 2.58823614e+00 5.15546624e+00 9.80412773e-02 4.42661493e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9750863518071053
cond(S) = 7.8491466729202015
E1 = -18.776698697847298  E_coul = 4.470731624454007
init E= -14.3059670733933
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.310309518267681  LUMO = 11.3023808560767
  mo_energy =
[ -4.66192833  -0.31030952  11.30238086 141.18490533]
E1 = -18.971502106482067  E_coul = 4.555406351864668
cycle= 1 E= -14.4160957546174  delta_E= -0.11  |g|= 0.0637  |ddm|= 0.0997
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.079654
diis-c [-0.00634477  1.        ]
  HOMO = -0.302724299102102  LUMO = 11.3527045855255
  mo_energy =
[ -4.627636    -0.3027243   11.35270459 141.29641033]
E1 = -18.97234206262791  E_coul = 4.556214021855474
cycle= 2 E= -14.4161280407724  delta_E= -3.23e-05  |g|= 0.00156  |ddm|= 0.0036
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00161889
diis-c [-7.90905079e-07 -1.72772093e-02  1.01727721e+00]
  HOMO = -0.302737692001398  LUMO = 11.3533697808246
  mo_energy =
[ -4.62721237  -0.30273769  11.35336978 141.29900346]
E1 = -18.972387959434784  E_coul = 4.556259872549753
cycle= 3 E= -14.416128086885  delta_E= -4.61e-08  |g|= 3.16e-05  |ddm|= 0.000156
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85117e-05
diis-c [-8.25419158e-13  7.59670588e-04 -4.59697639e-02  1.04521009e+00]
  HOMO = -0.302737942278557  LUMO = 11.3533930422495
  mo_energy =
[ -4.62719543  -0.30273794  11.35339304 141.29910639]
E1 = -18.97238944043505  E_coul = 4.556261353516457
cycle= 4 E= -14.4161280869186  delta_E= -3.36e-11  |g|= 1.3e-08  |ddm|= 4.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97238944043505  E_coul = 4.556261353516457
  HOMO = -0.302737942311627  LUMO = 11.3533930554875
  mo_energy =
[ -4.62719542  -0.30273794  11.35339306 141.29910644]
E1 = -18.972389441339008  E_coul = 4.556261354420399
Extra cycle  E= -14.4161280869186  delta_E= -1.42e-14  |g|= 5.55e-10  |ddm|= 1.56e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 7.8491466729202015
E1 = -18.972389441339008  E_coul = 4.556261354420399
init E= -14.4161280869186
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.302737942309581  LUMO = 11.3533930560146
  mo_energy =
[ -4.62719542  -0.30273794  11.35339306 141.29910645]
E1 = -18.97238944137382  E_coul = 4.556261354455213
cycle= 1 E= -14.4161280869186  delta_E=    0  |g|= 2.41e-11  |ddm|= 6.7e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.97238944137382  E_coul = 4.556261354455213
  HOMO = -0.302737942309573  LUMO = 11.3533930560358
  mo_energy =
[ -4.62719542  -0.30273794  11.35339306 141.29910645]
E1 = -18.972389441375206  E_coul = 4.5562613544566
Extra cycle  E= -14.4161280869186  delta_E= 1.78e-15  |g|= 1.06e-12  |ddm|= 2.95e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.03203556e+02 1.23292166e+01 2.58823614e+00 9.80412773e-02]
grad_E = [ 0.00109521 -0.02335033  0.203314   -0.3441696 ]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  9.32991901246        1
[INPUT] 0    0    [1    /1   ]  2.60419964373        1
[INPUT] 0    0    [1    /1   ]  0.124166578466       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [1e-09, 1.0]], [0, [9.32991901245557, 1.0]], [0, [2.604199643728829, 1.0]], [0, [0.12416657846599229, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1.e-09]
bas 1, expnt(s) = [9.32991901]
bas 2, expnt(s) = [2.60419964]
bas 3, expnt(s) = [0.12416658]
CPU time:        75.68
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.00000000e-09 4.49277867e-07 9.32991901e+00 1.34872507e+01
 2.60419964e+00 5.17929598e+00 1.24166578e-01 5.28467835e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.94033099036191
cond(S) = 7.9395666287993345
E1 = -17.989356406721075  E_coul = 4.5430459666384495
init E= -13.4463104400826
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.278548538433962  LUMO = -3.00955515516791e-06
  mo_energy =
[-4.23858356e+00 -2.78548538e-01 -3.00955516e-06  9.71333514e+00]
E1 = -18.309364583567156  E_coul = 4.733404990290493
cycle= 1 E= -13.5759595932767  delta_E= -0.13  |g|= 0.00227  |ddm|= 0.112
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00215149
diis-c [-4.6289073e-06  1.0000000e+00]
  HOMO = -0.257349340956817  LUMO = 1.50116207093491e-09
  mo_energy =
[-4.16392806e+00 -2.57349341e-01  1.50116207e-09  9.80223548e+00]
E1 = -18.309474837731035  E_coul = 4.733515041042025
cycle= 2 E= -13.575959796689  delta_E= -2.03e-07  |g|= 0.000132  |ddm|= 0.000385
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000125025
diis-c [-1.12708959e-11 -6.16724605e-02  1.06167246e+00]
  HOMO = -0.257350620435079  LUMO = 1.50116206844617e-09
  mo_energy =
[-4.16386836e+00 -2.57350620e-01  1.50116207e-09  9.80229989e+00]
E1 = -18.309482139650957  E_coul = 4.733522342280774
cycle= 3 E= -13.5759597973702  delta_E= -6.81e-10  |g|= 2.04e-07  |ddm|= 2.33e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
E1 = -18.309482139650957  E_coul = 4.733522342280774
  HOMO = -0.257350606821986  LUMO = 1.5011620685457e-09
  mo_energy =
[-4.16386812e+00 -2.57350607e-01  1.50116207e-09  9.80230005e+00]
E1 = -18.309482160455165  E_coul = 4.733522363084978
Extra cycle  E= -13.5759597973702  delta_E= -5.33e-15  |g|= 8.32e-09  |ddm|= 6.36e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.00000000e-09 9.32991901e+00 2.60419964e+00 1.24166578e-01]
E = -13.575959797370187
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  9.32991901246        1
[INPUT] 0    0    [1    /1   ]  2.60419964373        1
[INPUT] 0    0    [1    /1   ]  0.124166578466       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [1e-09, 1.0]], [0, [9.32991901245557, 1.0]], [0, [2.604199643728829, 1.0]], [0, [0.12416657846599229, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1.e-09]
bas 1, expnt(s) = [9.32991901]
bas 2, expnt(s) = [2.60419964]
bas 3, expnt(s) = [0.12416658]
CPU time:        76.26
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.00000000e-09 4.49277867e-07 9.32991901e+00 1.34872507e+01
 2.60419964e+00 5.17929598e+00 1.24166578e-01 5.28467835e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.94033099036191
cond(S) = 7.9395666287993345
E1 = -17.989356406721075  E_coul = 4.5430459666384495
init E= -13.4463104400826
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.278548538433962  LUMO = -3.00955515516791e-06
  mo_energy =
[-4.23858356e+00 -2.78548538e-01 -3.00955516e-06  9.71333514e+00]
E1 = -18.309364583567156  E_coul = 4.733404990290493
cycle= 1 E= -13.5759595932767  delta_E= -0.13  |g|= 0.00227  |ddm|= 0.112
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00215149
diis-c [-4.6289073e-06  1.0000000e+00]
  HOMO = -0.257349340956817  LUMO = 1.50116207093491e-09
  mo_energy =
[-4.16392806e+00 -2.57349341e-01  1.50116207e-09  9.80223548e+00]
E1 = -18.309474837731035  E_coul = 4.733515041042025
cycle= 2 E= -13.575959796689  delta_E= -2.03e-07  |g|= 0.000132  |ddm|= 0.000385
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000125025
diis-c [-1.12708959e-11 -6.16724605e-02  1.06167246e+00]
  HOMO = -0.257350620435079  LUMO = 1.50116206844617e-09
  mo_energy =
[-4.16386836e+00 -2.57350620e-01  1.50116207e-09  9.80229989e+00]
E1 = -18.309482139650957  E_coul = 4.733522342280774
cycle= 3 E= -13.5759597973702  delta_E= -6.81e-10  |g|= 2.04e-07  |ddm|= 2.33e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
E1 = -18.309482139650957  E_coul = 4.733522342280774
  HOMO = -0.257350606821986  LUMO = 1.5011620685457e-09
  mo_energy =
[-4.16386812e+00 -2.57350607e-01  1.50116207e-09  9.80230005e+00]
E1 = -18.309482160455165  E_coul = 4.733522363084978
Extra cycle  E= -13.5759597973702  delta_E= -5.33e-15  |g|= 8.32e-09  |ddm|= 6.36e-08
    CPU time for scf_cycle      0.06 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 7.9395666287993345
E1 = -18.309482160455165  E_coul = 4.733522363084978
init E= -13.5759597973702
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.257350606268543  LUMO = 1.5011620685962e-09
  mo_energy =
[-4.16386811e+00 -2.57350606e-01  1.50116207e-09  9.80230006e+00]
E1 = -18.30948216129672  E_coul = 4.733522363926533
cycle= 1 E= -13.5759597973702  delta_E= -1.78e-15  |g|= 3.39e-10  |ddm|= 2.6e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.30948216129672  E_coul = 4.733522363926533
  HOMO = -0.257350606245953  LUMO = 1.50116206867738e-09
  mo_energy =
[-4.16386811e+00 -2.57350606e-01  1.50116207e-09  9.80230006e+00]
E1 = -18.30948216133064  E_coul = 4.733522363960451
Extra cycle  E= -13.5759597973702  delta_E=    0  |g|= 1.38e-11  |ddm|= 1.06e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.00000000e-09 9.32991901e+00 2.60419964e+00 1.24166578e-01]
grad_E = [-8.73480382e-04 -1.50063676e-01  4.79622702e-01  9.43525037e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  101.961259992        1
[INPUT] 0    0    [1    /1   ]  12.2931130147        1
[INPUT] 0    0    [1    /1   ]  2.58842829953        1
[INPUT] 0    0    [1    /1   ]  0.0983557563845      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [101.96125999188666, 1.0]], [0, [12.293113014712228, 1.0]], [0, [2.5884282995336827, 1.0]], [0, [0.0983557563845405, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [101.96125999]
bas 1, expnt(s) = [12.29311301]
bas 2, expnt(s) = [2.5884283]
bas 3, expnt(s) = [0.09835576]
CPU time:        78.68
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.01961260e+02 8.10664993e+01 1.22931130e+01 1.65867550e+01
 2.58842830e+00 5.15575330e+00 9.83557564e-02 4.43725984e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.975291313928436
cond(S) = 7.91141773223855
E1 = -18.780555331215467  E_coul = 4.473554102785706
init E= -14.3070012284298
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.310059616321355  LUMO = 11.2828111574781
  mo_energy =
[ -4.66105816  -0.31005962  11.28281116 139.68674355]
E1 = -18.975507984542215  E_coul = 4.55883321744903
cycle= 1 E= -14.4166747670932  delta_E= -0.11  |g|= 0.0637  |ddm|= 0.0999
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0793239
diis-c [-0.00629228  1.        ]
  HOMO = -0.302480586139168  LUMO = 11.3333542072237
  mo_energy =
[ -4.6264558   -0.30248059  11.33335421 139.79912673]
E1 = -18.976366566045986  E_coul = 4.559659472262569
cycle= 2 E= -14.4167070937834  delta_E= -3.23e-05  |g|= 0.00157  |ddm|= 0.00359
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00162264
diis-c [-7.87024952e-07 -1.74275649e-02  1.01742756e+00]
  HOMO = -0.302493708451537  LUMO = 11.3340260962008
  mo_energy =
[ -4.62602294  -0.30249371  11.3340261  139.8017377 ]
E1 = -18.976413110863593  E_coul = 4.559705970761188
cycle= 3 E= -14.4167071401024  delta_E= -4.63e-08  |g|= 3.16e-05  |ddm|= 0.000156
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.84685e-05
diis-c [-7.15787931e-13  7.66961420e-04 -4.60399040e-02  1.04527294e+00]
  HOMO = -0.302493954865768  LUMO = 11.3340493799023
  mo_energy =
[ -4.62600589  -0.30249395  11.33404938 139.80184049]
E1 = -18.976414597576447  E_coul = 4.5597074574405125
cycle= 4 E= -14.4167071401359  delta_E= -3.35e-11  |g|= 1.21e-08  |ddm|= 4.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.976414597576447  E_coul = 4.5597074574405125
  HOMO = -0.302493954994011  LUMO = 11.3340493903803
  mo_energy =
[ -4.62600589  -0.30249395  11.33404939 139.80184053]
E1 = -18.976414598283824  E_coul = 4.559707458147885
Extra cycle  E= -14.4167071401359  delta_E= -5.33e-15  |g|= 5.27e-10  |ddm|= 1.49e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [1.01961260e+02 1.22931130e+01 2.58842830e+00 9.83557564e-02]
E = -14.416707140135939
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  101.961259992        1
[INPUT] 0    0    [1    /1   ]  12.2931130147        1
[INPUT] 0    0    [1    /1   ]  2.58842829953        1
[INPUT] 0    0    [1    /1   ]  0.0983557563845      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [101.96125999188666, 1.0]], [0, [12.293113014712228, 1.0]], [0, [2.5884282995336827, 1.0]], [0, [0.0983557563845405, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [101.96125999]
bas 1, expnt(s) = [12.29311301]
bas 2, expnt(s) = [2.5884283]
bas 3, expnt(s) = [0.09835576]
CPU time:        79.27
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.01961260e+02 8.10664993e+01 1.22931130e+01 1.65867550e+01
 2.58842830e+00 5.15575330e+00 9.83557564e-02 4.43725984e-01]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.975291313928436
cond(S) = 7.91141773223855
E1 = -18.780555331215467  E_coul = 4.473554102785706
init E= -14.3070012284298
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.310059616321355  LUMO = 11.2828111574781
  mo_energy =
[ -4.66105816  -0.31005962  11.28281116 139.68674355]
E1 = -18.975507984542215  E_coul = 4.55883321744903
cycle= 1 E= -14.4166747670932  delta_E= -0.11  |g|= 0.0637  |ddm|= 0.0999
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0793239
diis-c [-0.00629228  1.        ]
  HOMO = -0.302480586139168  LUMO = 11.3333542072237
  mo_energy =
[ -4.6264558   -0.30248059  11.33335421 139.79912673]
E1 = -18.976366566045986  E_coul = 4.559659472262569
cycle= 2 E= -14.4167070937834  delta_E= -3.23e-05  |g|= 0.00157  |ddm|= 0.00359
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00162264
diis-c [-7.87024952e-07 -1.74275649e-02  1.01742756e+00]
  HOMO = -0.302493708451537  LUMO = 11.3340260962008
  mo_energy =
[ -4.62602294  -0.30249371  11.3340261  139.8017377 ]
E1 = -18.976413110863593  E_coul = 4.559705970761188
cycle= 3 E= -14.4167071401024  delta_E= -4.63e-08  |g|= 3.16e-05  |ddm|= 0.000156
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.84685e-05
diis-c [-7.15787931e-13  7.66961420e-04 -4.60399040e-02  1.04527294e+00]
  HOMO = -0.302493954865768  LUMO = 11.3340493799023
  mo_energy =
[ -4.62600589  -0.30249395  11.33404938 139.80184049]
E1 = -18.976414597576447  E_coul = 4.5597074574405125
cycle= 4 E= -14.4167071401359  delta_E= -3.35e-11  |g|= 1.21e-08  |ddm|= 4.35e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.976414597576447  E_coul = 4.5597074574405125
  HOMO = -0.302493954994011  LUMO = 11.3340493903803
  mo_energy =
[ -4.62600589  -0.30249395  11.33404939 139.80184053]
E1 = -18.976414598283824  E_coul = 4.559707458147885
Extra cycle  E= -14.4167071401359  delta_E= -5.33e-15  |g|= 5.27e-10  |ddm|= 1.49e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 7.91141773223855
E1 = -18.976414598283824  E_coul = 4.559707458147885
init E= -14.4167071401359
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.302493954994939  LUMO = 11.334049390821
  mo_energy =
[ -4.62600589  -0.30249395  11.33404939 139.80184054]
E1 = -18.976414598312584  E_coul = 4.559707458176639
cycle= 1 E= -14.4167071401359  delta_E= -5.33e-15  |g|= 2.32e-11  |ddm|= 6.58e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.976414598312584  E_coul = 4.559707458176639
  HOMO = -0.30249395499502  LUMO = 11.3340493908394
  mo_energy =
[ -4.62600589  -0.30249395  11.33404939 139.80184054]
E1 = -18.976414598313777  E_coul = 4.559707458177837
Extra cycle  E= -14.4167071401359  delta_E= 3.55e-15  |g|= 1.01e-12  |ddm|= 2.94e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.01961260e+02 1.22931130e+01 2.58842830e+00 9.83557564e-02]
grad_E = [ 0.00108447 -0.02326414  0.2041429  -0.32796383]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  50.9806299964        1
[INPUT] 0    0    [1    /1   ]  10.8115160136        1
[INPUT] 0    0    [1    /1   ]  2.59631397163        1
[INPUT] 0    0    [1    /1   ]  0.111261167425       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [50.98062999644334, 1.0]], [0, [10.8115160135839, 1.0]], [0, [2.5963139716312558, 1.0]], [0, [0.1112611674252664, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [50.98063]
bas 1, expnt(s) = [10.81151601]
bas 2, expnt(s) = [2.59631397]
bas 3, expnt(s) = [0.11126117]
CPU time:        81.74
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 50.98063    48.2024289  10.81151601 15.06364149  2.59631397  5.16752911
  0.11126117  0.48671276]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9738426363435315
cond(S) = 13.572686383202752
E1 = -18.881359552543504  E_coul = 4.5705603394775025
init E= -14.310799213066
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.299008480466665  LUMO = 10.5579445165297
  mo_energy =
[-4.6132261  -0.29900848 10.55794452 80.59306566]
E1 = -19.071240542025166  E_coul = 4.675806264900163
cycle= 1 E= -14.395434277125  delta_E= -0.0846  |g|= 0.0506  |ddm|= 0.117
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0490389
diis-c [-0.00240482  1.        ]
  HOMO = -0.290228936518672  LUMO = 10.6119723624473
  mo_energy =
[-4.56959634 -0.29022894 10.61197236 80.70486743]
E1 = -19.072249683477295  E_coul = 4.676792037800768
cycle= 2 E= -14.3954576456765  delta_E= -2.34e-05  |g|= 0.00157  |ddm|= 0.00318
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.001337
diis-c [-2.85727310e-07 -2.56322484e-02  1.02563225e+00]
  HOMO = -0.290231323082819  LUMO = 10.6125764569538
  mo_energy =
[-4.56908888 -0.29023132 10.61257646 80.70671183]
E1 = -19.072299906075017  E_coul = 4.676842225466199
cycle= 3 E= -14.3954576806088  delta_E= -3.49e-08  |g|= 2.1e-05  |ddm|= 0.000141
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.46329e-05
diis-c [-4.40406770e-12  1.19803572e-03 -4.92280082e-02  1.04802997e+00]
  HOMO = -0.290231400081393  LUMO = 10.6125915264228
  mo_energy =
[-4.56907571 -0.2902314  10.61259153 80.70676781]
E1 = -19.072300985002144  E_coul = 4.676843304379032
cycle= 4 E= -14.3954576806231  delta_E= -1.43e-11  |g|= 5e-08  |ddm|= 3.06e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.072300985002144  E_coul = 4.676843304379032
  HOMO = -0.290231402738711  LUMO = 10.6125914691409
  mo_energy =
[-4.56907579 -0.2902314  10.61259147 80.70676762]
E1 = -19.072300980192136  E_coul = 4.6768432995690254
Extra cycle  E= -14.3954576806231  delta_E= 1.78e-15  |g|= 1.71e-09  |ddm|= 1.1e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [50.98063    10.81151601  2.59631397  0.11126117]
E = -14.39545768062311
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  50.9806299964        1
[INPUT] 0    0    [1    /1   ]  10.8115160136        1
[INPUT] 0    0    [1    /1   ]  2.59631397163        1
[INPUT] 0    0    [1    /1   ]  0.111261167425       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [50.98062999644334, 1.0]], [0, [10.8115160135839, 1.0]], [0, [2.5963139716312558, 1.0]], [0, [0.1112611674252664, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [50.98063]
bas 1, expnt(s) = [10.81151601]
bas 2, expnt(s) = [2.59631397]
bas 3, expnt(s) = [0.11126117]
CPU time:        82.35
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 50.98063    48.2024289  10.81151601 15.06364149  2.59631397  5.16752911
  0.11126117  0.48671276]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9738426363435315
cond(S) = 13.572686383202752
E1 = -18.881359552543504  E_coul = 4.5705603394775025
init E= -14.310799213066
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.299008480466665  LUMO = 10.5579445165297
  mo_energy =
[-4.6132261  -0.29900848 10.55794452 80.59306566]
E1 = -19.071240542025166  E_coul = 4.675806264900163
cycle= 1 E= -14.395434277125  delta_E= -0.0846  |g|= 0.0506  |ddm|= 0.117
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0490389
diis-c [-0.00240482  1.        ]
  HOMO = -0.290228936518672  LUMO = 10.6119723624473
  mo_energy =
[-4.56959634 -0.29022894 10.61197236 80.70486743]
E1 = -19.072249683477295  E_coul = 4.676792037800768
cycle= 2 E= -14.3954576456765  delta_E= -2.34e-05  |g|= 0.00157  |ddm|= 0.00318
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.001337
diis-c [-2.85727310e-07 -2.56322484e-02  1.02563225e+00]
  HOMO = -0.290231323082819  LUMO = 10.6125764569538
  mo_energy =
[-4.56908888 -0.29023132 10.61257646 80.70671183]
E1 = -19.072299906075017  E_coul = 4.676842225466199
cycle= 3 E= -14.3954576806088  delta_E= -3.49e-08  |g|= 2.1e-05  |ddm|= 0.000141
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.46329e-05
diis-c [-4.40406770e-12  1.19803572e-03 -4.92280082e-02  1.04802997e+00]
  HOMO = -0.290231400081393  LUMO = 10.6125915264228
  mo_energy =
[-4.56907571 -0.2902314  10.61259153 80.70676781]
E1 = -19.072300985002144  E_coul = 4.676843304379032
cycle= 4 E= -14.3954576806231  delta_E= -1.43e-11  |g|= 5e-08  |ddm|= 3.06e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.072300985002144  E_coul = 4.676843304379032
  HOMO = -0.290231402738711  LUMO = 10.6125914691409
  mo_energy =
[-4.56907579 -0.2902314  10.61259147 80.70676762]
E1 = -19.072300980192136  E_coul = 4.6768432995690254
Extra cycle  E= -14.3954576806231  delta_E= 1.78e-15  |g|= 1.71e-09  |ddm|= 1.1e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 13.572686383202752
E1 = -19.072300980192136  E_coul = 4.6768432995690254
init E= -14.3954576806231
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.290231402827044  LUMO = 10.6125914673013
  mo_energy =
[-4.56907579 -0.2902314  10.61259147 80.70676761]
E1 = -19.072300980036825  E_coul = 4.67684329941371
cycle= 1 E= -14.3954576806231  delta_E= -5.33e-15  |g|= 5.8e-11  |ddm|= 3.7e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.072300980036825  E_coul = 4.67684329941371
  HOMO = -0.290231402829978  LUMO = 10.6125914672424
  mo_energy =
[-4.56907579 -0.2902314  10.61259147 80.70676761]
E1 = -19.072300980031816  E_coul = 4.676843299408696
Extra cycle  E= -14.3954576806231  delta_E= -5.33e-15  |g|= 1.98e-12  |ddm|= 1.24e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [50.98063    10.81151601  2.59631397  0.11126117]
grad_E = [-0.0023679  -0.0035293   0.19021456  0.29152582]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  83.3797270392        1
[INPUT] 0    0    [1    /1   ]  11.7530972577        1
[INPUT] 0    0    [1    /1   ]  2.59130248677        1
[INPUT] 0    0    [1    /1   ]  0.103059549189       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [83.37972703922391, 1.0]], [0, [11.753097257717993, 1.0]], [0, [2.59130248676809, 1.0]], [0, [0.10305954918863766, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [83.37972704]
bas 1, expnt(s) = [11.75309726]
bas 2, expnt(s) = [2.59130249]
bas 3, expnt(s) = [0.10305955]
CPU time:        84.86
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 83.37972704 69.71245482 11.75309726 16.03722682  2.59130249  5.16004641
  0.10305955  0.45954834]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9768642726924
cond(S) = 9.070167622603948
E1 = -18.833534261494812  E_coul = 4.513117422358941
init E= -14.3204168391359
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306276600885504  LUMO = 10.9989175673736
  mo_energy =
[ -4.6480784   -0.3062766   10.99891757 117.58092783]
E1 = -19.03048096648428  E_coul = 4.607855334315368
cycle= 1 E= -14.4226256321689  delta_E= -0.102  |g|= 0.0619  |ddm|= 0.106
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0721155
diis-c [-0.00520065  1.        ]
  HOMO = -0.298563160069547  LUMO = 11.052505041529
  mo_energy =
[ -4.60883749  -0.29856316  11.05250504 117.70318405]
E1 = -19.03157010017534  E_coul = 4.608912342933048
cycle= 2 E= -14.4226577572423  delta_E= -3.21e-05  |g|= 0.00166  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00163805
diis-c [-6.81643519e-07 -2.00120042e-02  1.02001200e+00]
  HOMO = -0.298572073206841  LUMO = 11.0532465427931
  mo_energy =
[ -4.60829009  -0.29857207  11.05324654 117.70591094]
E1 = -19.03162465256983  E_coul = 4.608966847459594
cycle= 3 E= -14.4226578051102  delta_E= -4.79e-08  |g|= 3.02e-05  |ddm|= 0.000158
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64276e-05
diis-c [-4.30010903e-13  8.89824715e-04 -4.69549175e-02  1.04606509e+00]
  HOMO = -0.298572259099307  LUMO = 11.0532690392816
  mo_energy =
[ -4.60827243  -0.29857226  11.05326904 117.70600621]
E1 = -19.03162614942482  E_coul = 4.608968344284089
cycle= 4 E= -14.4226578051407  delta_E= -3.05e-11  |g|= 2.62e-08  |ddm|= 4.22e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03162614942482  E_coul = 4.608968344284089
  HOMO = -0.29857226061602  LUMO = 11.0532690126146
  mo_energy =
[ -4.60827247  -0.29857226  11.05326901 117.70600611]
E1 = -19.03162614732368  E_coul = 4.608968342182946
Extra cycle  E= -14.4226578051407  delta_E= -5.33e-15  |g|= 8.63e-10  |ddm|= 5.89e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [83.37972704 11.75309726  2.59130249  0.10305955]
E = -14.422657805140735
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  83.3797270392        1
[INPUT] 0    0    [1    /1   ]  11.7530972577        1
[INPUT] 0    0    [1    /1   ]  2.59130248677        1
[INPUT] 0    0    [1    /1   ]  0.103059549189       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [83.37972703922391, 1.0]], [0, [11.753097257717993, 1.0]], [0, [2.59130248676809, 1.0]], [0, [0.10305954918863766, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [83.37972704]
bas 1, expnt(s) = [11.75309726]
bas 2, expnt(s) = [2.59130249]
bas 3, expnt(s) = [0.10305955]
CPU time:        85.47
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 83.37972704 69.71245482 11.75309726 16.03722682  2.59130249  5.16004641
  0.10305955  0.45954834]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9768642726924
cond(S) = 9.070167622603948
E1 = -18.833534261494812  E_coul = 4.513117422358941
init E= -14.3204168391359
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.306276600885504  LUMO = 10.9989175673736
  mo_energy =
[ -4.6480784   -0.3062766   10.99891757 117.58092783]
E1 = -19.03048096648428  E_coul = 4.607855334315368
cycle= 1 E= -14.4226256321689  delta_E= -0.102  |g|= 0.0619  |ddm|= 0.106
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0721155
diis-c [-0.00520065  1.        ]
  HOMO = -0.298563160069547  LUMO = 11.052505041529
  mo_energy =
[ -4.60883749  -0.29856316  11.05250504 117.70318405]
E1 = -19.03157010017534  E_coul = 4.608912342933048
cycle= 2 E= -14.4226577572423  delta_E= -3.21e-05  |g|= 0.00166  |ddm|= 0.00352
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00163805
diis-c [-6.81643519e-07 -2.00120042e-02  1.02001200e+00]
  HOMO = -0.298572073206841  LUMO = 11.0532465427931
  mo_energy =
[ -4.60829009  -0.29857207  11.05324654 117.70591094]
E1 = -19.03162465256983  E_coul = 4.608966847459594
cycle= 3 E= -14.4226578051102  delta_E= -4.79e-08  |g|= 3.02e-05  |ddm|= 0.000158
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.64276e-05
diis-c [-4.30010903e-13  8.89824715e-04 -4.69549175e-02  1.04606509e+00]
  HOMO = -0.298572259099307  LUMO = 11.0532690392816
  mo_energy =
[ -4.60827243  -0.29857226  11.05326904 117.70600621]
E1 = -19.03162614942482  E_coul = 4.608968344284089
cycle= 4 E= -14.4226578051407  delta_E= -3.05e-11  |g|= 2.62e-08  |ddm|= 4.22e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03162614942482  E_coul = 4.608968344284089
  HOMO = -0.29857226061602  LUMO = 11.0532690126146
  mo_energy =
[ -4.60827247  -0.29857226  11.05326901 117.70600611]
E1 = -19.03162614732368  E_coul = 4.608968342182946
Extra cycle  E= -14.4226578051407  delta_E= -5.33e-15  |g|= 8.63e-10  |ddm|= 5.89e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.070167622603948
E1 = -19.03162614732368  E_coul = 4.608968342182946
init E= -14.4226578051407
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.298572260661971  LUMO = 11.0532690118677
  mo_energy =
[ -4.60827247  -0.29857226  11.05326901 117.70600611]
E1 = -19.031626147263783  E_coul = 4.608968342123052
cycle= 1 E= -14.4226578051407  delta_E= 5.33e-15  |g|= 2.99e-11  |ddm|= 1.94e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.031626147263783  E_coul = 4.608968342123052
  HOMO = -0.298572260663469  LUMO = 11.0532690118484
  mo_energy =
[ -4.60827247  -0.29857226  11.05326901 117.70600611]
E1 = -19.031626147262177  E_coul = 4.6089683421214405
Extra cycle  E= -14.4226578051407  delta_E= -7.11e-15  |g|= 1.12e-12  |ddm|= 6.61e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [83.37972704 11.75309726  2.59130249  0.10305955]
grad_E = [ 0.00071585 -0.02008347  0.21152176 -0.09369873]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  61.7123951555        1
[INPUT] 0    0    [1    /1   ]  11.5053237152        1
[INPUT] 0    0    [1    /1   ]  2.55781312916        1
[INPUT] 0    0    [1    /1   ]  0.0843216104777      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [61.71239515554305, 1.0]], [0, [11.50532371523276, 1.0]], [0, [2.5578131291567603, 1.0]], [0, [0.08432161047767969, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [61.71239516]
bas 1, expnt(s) = [11.50532372]
bas 2, expnt(s) = [2.55781313]
bas 3, expnt(s) = [0.08432161]
CPU time:        88.07
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 61.71239516 55.62811272 11.50532372 15.78298545  2.55781313  5.1099498
  0.08432161  0.39533858]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.951553801866094
cond(S) = 10.960240682736528
E1 = -18.635374487967354  E_coul = 4.329448225745883
init E= -14.3059262622215
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.321235193294723  LUMO = 10.6794988158345
  mo_energy =
[-4.7201101  -0.32123519 10.67949882 93.52443883]
E1 = -18.819534435149308  E_coul = 4.406553815015242
cycle= 1 E= -14.4129806201341  delta_E= -0.107  |g|= 0.0474  |ddm|= 0.162
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0462445
diis-c [-0.00213855  1.        ]
  HOMO = -0.311372690040907  LUMO = 10.7251330862885
  mo_energy =
[-4.69186152 -0.31137269 10.72513309 93.60533189]
E1 = -18.81964758847844  E_coul = 4.406623707915153
cycle= 2 E= -14.4130238805633  delta_E= -4.33e-05  |g|= 0.00161  |ddm|= 0.0057
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00159955
diis-c [-7.47833054e-07 -2.99755867e-02  1.02997559e+00]
  HOMO = -0.311403043689755  LUMO = 10.7255249023883
  mo_energy =
[-4.69179606 -0.31140304 10.7255249  93.60686018]
E1 = -18.819675782436484  E_coul = 4.406651831178982
cycle= 3 E= -14.4130239512575  delta_E= -7.07e-08  |g|= 2.1e-05  |ddm|= 0.00023
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.97429e-05
diis-c [-1.86084590e-11  9.12538042e-04 -3.55194954e-02  1.03460696e+00]
  HOMO = -0.311403161601397  LUMO = 10.7255416262827
  mo_energy =
[-4.69178244 -0.31140316 10.72554163 93.60692639]
E1 = -18.819676894264035  E_coul = 4.406652942990675
cycle= 4 E= -14.4130239512734  delta_E= -1.59e-11  |g|= 9.98e-08  |ddm|= 3.1e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.819676894264035  E_coul = 4.406652942990675
  HOMO = -0.311403160990072  LUMO = 10.7255417304316
  mo_energy =
[-4.69178234 -0.31140316 10.72554173 93.60692677]
E1 = -18.819676901885753  E_coul = 4.4066529506124
Extra cycle  E= -14.4130239512734  delta_E= 7.11e-15  |g|= 4.1e-09  |ddm|= 1.25e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [61.71239516 11.50532372  2.55781313  0.08432161]
E = -14.413023951273352
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  61.7123951555        1
[INPUT] 0    0    [1    /1   ]  11.5053237152        1
[INPUT] 0    0    [1    /1   ]  2.55781312916        1
[INPUT] 0    0    [1    /1   ]  0.0843216104777      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [61.71239515554305, 1.0]], [0, [11.50532371523276, 1.0]], [0, [2.5578131291567603, 1.0]], [0, [0.08432161047767969, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [61.71239516]
bas 1, expnt(s) = [11.50532372]
bas 2, expnt(s) = [2.55781313]
bas 3, expnt(s) = [0.08432161]
CPU time:        88.71
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 61.71239516 55.62811272 11.50532372 15.78298545  2.55781313  5.1099498
  0.08432161  0.39533858]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.951553801866094
cond(S) = 10.960240682736528
E1 = -18.635374487967354  E_coul = 4.329448225745883
init E= -14.3059262622215
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.321235193294723  LUMO = 10.6794988158345
  mo_energy =
[-4.7201101  -0.32123519 10.67949882 93.52443883]
E1 = -18.819534435149308  E_coul = 4.406553815015242
cycle= 1 E= -14.4129806201341  delta_E= -0.107  |g|= 0.0474  |ddm|= 0.162
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0462445
diis-c [-0.00213855  1.        ]
  HOMO = -0.311372690040907  LUMO = 10.7251330862885
  mo_energy =
[-4.69186152 -0.31137269 10.72513309 93.60533189]
E1 = -18.81964758847844  E_coul = 4.406623707915153
cycle= 2 E= -14.4130238805633  delta_E= -4.33e-05  |g|= 0.00161  |ddm|= 0.0057
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00159955
diis-c [-7.47833054e-07 -2.99755867e-02  1.02997559e+00]
  HOMO = -0.311403043689755  LUMO = 10.7255249023883
  mo_energy =
[-4.69179606 -0.31140304 10.7255249  93.60686018]
E1 = -18.819675782436484  E_coul = 4.406651831178982
cycle= 3 E= -14.4130239512575  delta_E= -7.07e-08  |g|= 2.1e-05  |ddm|= 0.00023
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.97429e-05
diis-c [-1.86084590e-11  9.12538042e-04 -3.55194954e-02  1.03460696e+00]
  HOMO = -0.311403161601397  LUMO = 10.7255416262827
  mo_energy =
[-4.69178244 -0.31140316 10.72554163 93.60692639]
E1 = -18.819676894264035  E_coul = 4.406652942990675
cycle= 4 E= -14.4130239512734  delta_E= -1.59e-11  |g|= 9.98e-08  |ddm|= 3.1e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.819676894264035  E_coul = 4.406652942990675
  HOMO = -0.311403160990072  LUMO = 10.7255417304316
  mo_energy =
[-4.69178234 -0.31140316 10.72554173 93.60692677]
E1 = -18.819676901885753  E_coul = 4.4066529506124
Extra cycle  E= -14.4130239512734  delta_E= 7.11e-15  |g|= 4.1e-09  |ddm|= 1.25e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 10.960240682736528
E1 = -18.819676901885753  E_coul = 4.4066529506124
init E= -14.4130239512734
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.311403160958634  LUMO = 10.7255417344249
  mo_energy =
[-4.69178234 -0.31140316 10.72554173 93.60692679]
E1 = -18.819676902169867  E_coul = 4.406652950896522
cycle= 1 E= -14.4130239512733  delta_E= 7.11e-15  |g|= 1.73e-10  |ddm|= 5e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.819676902169867  E_coul = 4.406652950896522
  HOMO = -0.311403160957996  LUMO = 10.7255417345801
  mo_energy =
[-4.69178234 -0.31140316 10.72554173 93.60692679]
E1 = -18.81967690218087  E_coul = 4.406652950907512
Extra cycle  E= -14.4130239512734  delta_E= -1.24e-14  |g|= 7.43e-12  |ddm|= 2.12e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [61.71239516 11.50532372  2.55781313  0.08432161]
grad_E = [-0.00120248 -0.00280249  0.16799418 -1.15085595]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  76.1078539066        1
[INPUT] 0    0    [1    /1   ]  11.669940837         1
[INPUT] 0    0    [1    /1   ]  2.58006296909        1
[INPUT] 0    0    [1    /1   ]  0.0967708232022      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [76.10785390657904, 1.0]], [0, [11.669940836971254, 1.0]], [0, [2.580062969085399, 1.0]], [0, [0.09677082320221438, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [76.10785391]
bas 1, expnt(s) = [11.66994084]
bas 2, expnt(s) = [2.58006297]
bas 3, expnt(s) = [0.09677082]
CPU time:        91.25
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 76.10785391 65.10092077 11.66994084 15.95205047  2.58006297  5.1432514
  0.09677082  0.43835236]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9741949677404067
cond(S) = 9.534293201271286
E1 = -18.78868643364077  E_coul = 4.46020277808308
init E= -14.3284836555577
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.311425171730208  LUMO = 10.8908352811478
  mo_energy =
[ -4.67086659  -0.31142517  10.89083528 109.42085199]
E1 = -18.969625315343105  E_coul = 4.544060770695405
cycle= 1 E= -14.4255645446477  delta_E= -0.0971  |g|= 0.0566  |ddm|= 0.107
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0623495
diis-c [-0.00388746  1.        ]
  HOMO = -0.303838560071034  LUMO = 10.9400246312341
  mo_energy =
[ -4.6369298   -0.30383856  10.94002463 109.52866087]
E1 = -18.970409603303608  E_coul = 4.544810856165127
cycle= 2 E= -14.4255987471385  delta_E= -3.42e-05  |g|= 0.00165  |ddm|= 0.00406
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00160559
diis-c [-7.51353388e-07 -2.21587047e-02  1.02215870e+00]
  HOMO = -0.303855238791725  LUMO = 10.9406642517502
  mo_energy =
[ -4.63653044  -0.30385524  10.94066425 109.53103355]
E1 = -18.970456109548426  E_coul = 4.544857307335843
cycle= 3 E= -14.4255988022126  delta_E= -5.51e-08  |g|= 2.94e-05  |ddm|= 0.000179
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65677e-05
diis-c [-1.81885740e-12  9.05977989e-04 -4.46785943e-02  1.04377262e+00]
  HOMO = -0.3038554849356  LUMO = 10.9406850665447
  mo_energy =
[ -4.63651459  -0.30385548  10.94068507 109.53112062]
E1 = -18.97045748664524  E_coul = 4.5448586844028975
cycle= 4 E= -14.4255988022423  delta_E= -2.98e-11  |g|= 2.27e-08  |ddm|= 4.26e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97045748664524  E_coul = 4.5448586844028975
  HOMO = -0.303855485271456  LUMO = 10.9406850829815
  mo_energy =
[ -4.63651457  -0.30385549  10.94068508 109.53112069]
E1 = -18.97045748777981  E_coul = 4.544858685537472
Extra cycle  E= -14.4255988022423  delta_E= 5.33e-15  |g|= 1.01e-09  |ddm|= 3.02e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [76.10785391 11.66994084  2.58006297  0.09677082]
E = -14.42559880224234
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  76.1078539066        1
[INPUT] 0    0    [1    /1   ]  11.669940837         1
[INPUT] 0    0    [1    /1   ]  2.58006296909        1
[INPUT] 0    0    [1    /1   ]  0.0967708232022      1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [76.10785390657904, 1.0]], [0, [11.669940836971254, 1.0]], [0, [2.580062969085399, 1.0]], [0, [0.09677082320221438, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [76.10785391]
bas 1, expnt(s) = [11.66994084]
bas 2, expnt(s) = [2.58006297]
bas 3, expnt(s) = [0.09677082]
CPU time:        91.87
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 76.10785391 65.10092077 11.66994084 15.95205047  2.58006297  5.1432514
  0.09677082  0.43835236]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9741949677404067
cond(S) = 9.534293201271286
E1 = -18.78868643364077  E_coul = 4.46020277808308
init E= -14.3284836555577
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.311425171730208  LUMO = 10.8908352811478
  mo_energy =
[ -4.67086659  -0.31142517  10.89083528 109.42085199]
E1 = -18.969625315343105  E_coul = 4.544060770695405
cycle= 1 E= -14.4255645446477  delta_E= -0.0971  |g|= 0.0566  |ddm|= 0.107
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0623495
diis-c [-0.00388746  1.        ]
  HOMO = -0.303838560071034  LUMO = 10.9400246312341
  mo_energy =
[ -4.6369298   -0.30383856  10.94002463 109.52866087]
E1 = -18.970409603303608  E_coul = 4.544810856165127
cycle= 2 E= -14.4255987471385  delta_E= -3.42e-05  |g|= 0.00165  |ddm|= 0.00406
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00160559
diis-c [-7.51353388e-07 -2.21587047e-02  1.02215870e+00]
  HOMO = -0.303855238791725  LUMO = 10.9406642517502
  mo_energy =
[ -4.63653044  -0.30385524  10.94066425 109.53103355]
E1 = -18.970456109548426  E_coul = 4.544857307335843
cycle= 3 E= -14.4255988022126  delta_E= -5.51e-08  |g|= 2.94e-05  |ddm|= 0.000179
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.65677e-05
diis-c [-1.81885740e-12  9.05977989e-04 -4.46785943e-02  1.04377262e+00]
  HOMO = -0.3038554849356  LUMO = 10.9406850665447
  mo_energy =
[ -4.63651459  -0.30385548  10.94068507 109.53112062]
E1 = -18.97045748664524  E_coul = 4.5448586844028975
cycle= 4 E= -14.4255988022423  delta_E= -2.98e-11  |g|= 2.27e-08  |ddm|= 4.26e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97045748664524  E_coul = 4.5448586844028975
  HOMO = -0.303855485271456  LUMO = 10.9406850829815
  mo_energy =
[ -4.63651457  -0.30385549  10.94068508 109.53112069]
E1 = -18.97045748777981  E_coul = 4.544858685537472
Extra cycle  E= -14.4255988022423  delta_E= 5.33e-15  |g|= 1.01e-09  |ddm|= 3.02e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.534293201271286
E1 = -18.97045748777981  E_coul = 4.544858685537472
init E= -14.4255988022423
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.303855485277452  LUMO = 10.9406850837052
  mo_energy =
[ -4.63651457  -0.30385549  10.94068508 109.5311207 ]
E1 = -18.97045748782846  E_coul = 4.544858685586128
cycle= 1 E= -14.4255988022423  delta_E= 5.33e-15  |g|= 4.54e-11  |ddm|= 1.35e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.97045748782846  E_coul = 4.544858685586128
  HOMO = -0.303855485277754  LUMO = 10.9406850837368
  mo_energy =
[ -4.63651457  -0.30385549  10.94068508 109.5311207 ]
E1 = -18.97045748783061  E_coul = 4.544858685588261
Extra cycle  E= -14.4255988022423  delta_E= -1.6e-14  |g|= 2.08e-12  |ddm|= 6.1e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [76.10785391 11.66994084  2.58006297  0.09677082]
grad_E = [ 2.67283435e-04 -1.47151038e-02  1.98617636e-01 -4.14497891e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  80.6491884615        1
[INPUT] 0    0    [1    /1   ]  12.2519386368        1
[INPUT] 0    0    [1    /1   ]  2.52160304409        1
[INPUT] 0    0    [1    /1   ]  0.101434040702       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [80.64918846149469, 1.0]], [0, [12.251938636786075, 1.0]], [0, [2.5216030440933483, 1.0]], [0, [0.1014340407024574, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [80.64918846]
bas 1, expnt(s) = [12.25193864]
bas 2, expnt(s) = [2.52160304]
bas 3, expnt(s) = [0.10143404]
CPU time:        94.15
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 80.64918846 67.99312867 12.25193864 16.54507095  2.52160304  5.05559836
  0.10143404  0.45410138]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978567391217638
cond(S) = 8.838911724755325
E1 = -18.87498977194573  E_coul = 4.500273575093056
init E= -14.3747161968527
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.307074291326719  LUMO = 11.1332052848907
  mo_energy =
[ -4.66351203  -0.30707429  11.13320528 115.99042668]
E1 = -19.007831392475488  E_coul = 4.566101363957645
cycle= 1 E= -14.4417300285178  delta_E= -0.067  |g|= 0.0377  |ddm|= 0.0701
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0430538
diis-c [-0.00185363  1.        ]
  HOMO = -0.300570672489479  LUMO = 11.1718620007261
  mo_energy =
[ -4.63725069  -0.30057067  11.171862   116.07169826]
E1 = -19.008121714018685  E_coul = 4.5663771106831845
cycle= 2 E= -14.4417446033355  delta_E= -1.46e-05  |g|= 0.00104  |ddm|= 0.00264
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00104628
diis-c [-3.29075161e-07 -2.07467949e-02  1.02074679e+00]
  HOMO = -0.300584255344009  LUMO = 11.1721993704506
  mo_energy =
[ -4.63709665  -0.30058426  11.17219937 116.07293538]
E1 = -19.008143224947553  E_coul = 4.566398599719213
cycle= 3 E= -14.4417446252283  delta_E= -2.19e-08  |g|= 1.87e-05  |ddm|= 0.000112
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.40091e-05
diis-c [-8.60828072e-13  8.52285801e-04 -4.43384501e-02  1.04348616e+00]
  HOMO = -0.300584462968077  LUMO = 11.1722118909863
  mo_energy =
[ -4.6370882   -0.30058446  11.17221189 116.07298791]
E1 = -19.008143954169586  E_coul = 4.5663993289290525
cycle= 4 E= -14.4417446252405  delta_E= -1.22e-11  |g|= 1.59e-08  |ddm|= 2.7e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.008143954169586  E_coul = 4.5663993289290525
  HOMO = -0.300584462914306  LUMO = 11.1722119079472
  mo_energy =
[ -4.63708819  -0.30058446  11.17221191 116.07298798]
E1 = -19.00814395528016  E_coul = 4.566399330039625
Extra cycle  E= -14.4417446252405  delta_E= -1.78e-15  |g|= 6.56e-10  |ddm|= 1.88e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [80.64918846 12.25193864  2.52160304  0.10143404]
E = -14.441744625240537
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  80.6491884615        1
[INPUT] 0    0    [1    /1   ]  12.2519386368        1
[INPUT] 0    0    [1    /1   ]  2.52160304409        1
[INPUT] 0    0    [1    /1   ]  0.101434040702       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [80.64918846149469, 1.0]], [0, [12.251938636786075, 1.0]], [0, [2.5216030440933483, 1.0]], [0, [0.1014340407024574, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [80.64918846]
bas 1, expnt(s) = [12.25193864]
bas 2, expnt(s) = [2.52160304]
bas 3, expnt(s) = [0.10143404]
CPU time:        94.77
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 80.64918846 67.99312867 12.25193864 16.54507095  2.52160304  5.05559836
  0.10143404  0.45410138]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.978567391217638
cond(S) = 8.838911724755325
E1 = -18.87498977194573  E_coul = 4.500273575093056
init E= -14.3747161968527
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.307074291326719  LUMO = 11.1332052848907
  mo_energy =
[ -4.66351203  -0.30707429  11.13320528 115.99042668]
E1 = -19.007831392475488  E_coul = 4.566101363957645
cycle= 1 E= -14.4417300285178  delta_E= -0.067  |g|= 0.0377  |ddm|= 0.0701
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0430538
diis-c [-0.00185363  1.        ]
  HOMO = -0.300570672489479  LUMO = 11.1718620007261
  mo_energy =
[ -4.63725069  -0.30057067  11.171862   116.07169826]
E1 = -19.008121714018685  E_coul = 4.5663771106831845
cycle= 2 E= -14.4417446033355  delta_E= -1.46e-05  |g|= 0.00104  |ddm|= 0.00264
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00104628
diis-c [-3.29075161e-07 -2.07467949e-02  1.02074679e+00]
  HOMO = -0.300584255344009  LUMO = 11.1721993704506
  mo_energy =
[ -4.63709665  -0.30058426  11.17219937 116.07293538]
E1 = -19.008143224947553  E_coul = 4.566398599719213
cycle= 3 E= -14.4417446252283  delta_E= -2.19e-08  |g|= 1.87e-05  |ddm|= 0.000112
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.40091e-05
diis-c [-8.60828072e-13  8.52285801e-04 -4.43384501e-02  1.04348616e+00]
  HOMO = -0.300584462968077  LUMO = 11.1722118909863
  mo_energy =
[ -4.6370882   -0.30058446  11.17221189 116.07298791]
E1 = -19.008143954169586  E_coul = 4.5663993289290525
cycle= 4 E= -14.4417446252405  delta_E= -1.22e-11  |g|= 1.59e-08  |ddm|= 2.7e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.008143954169586  E_coul = 4.5663993289290525
  HOMO = -0.300584462914306  LUMO = 11.1722119079472
  mo_energy =
[ -4.63708819  -0.30058446  11.17221191 116.07298798]
E1 = -19.00814395528016  E_coul = 4.566399330039625
Extra cycle  E= -14.4417446252405  delta_E= -1.78e-15  |g|= 6.56e-10  |ddm|= 1.88e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 8.838911724755325
E1 = -19.00814395528016  E_coul = 4.566399330039625
init E= -14.4417446252405
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300584462910815  LUMO = 11.1722119085883
  mo_energy =
[ -4.63708818  -0.30058446  11.17221191 116.07298798]
E1 = -19.008143955320634  E_coul = 4.56639933008009
cycle= 1 E= -14.4417446252405  delta_E= -7.11e-15  |g|= 2.79e-11  |ddm|= 7.79e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.008143955320634  E_coul = 4.56639933008009
  HOMO = -0.300584462910791  LUMO = 11.1722119086129
  mo_energy =
[ -4.63708818  -0.30058446  11.17221191 116.07298798]
E1 = -19.008143955322158  E_coul = 4.566399330081617
Extra cycle  E= -14.4417446252405  delta_E= 1.78e-15  |g|= 1.2e-12  |ddm|= 3.39e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [80.64918846 12.25193864  2.52160304  0.10143404]
grad_E = [ 2.28944306e-05 -4.69974490e-03  1.35487150e-01 -1.55563539e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  90.2647699063        1
[INPUT] 0    0    [1    /1   ]  13.0707352401        1
[INPUT] 0    0    [1    /1   ]  2.44073964469        1
[INPUT] 0    0    [1    /1   ]  0.102676517841       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [90.26476990631458, 1.0]], [0, [13.070735240070716, 1.0]], [0, [2.4407396446935348, 1.0]], [0, [0.10267651784068242, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [90.26476991]
bas 1, expnt(s) = [13.07073524]
bas 2, expnt(s) = [2.44073964]
bas 3, expnt(s) = [0.10267652]
CPU time:        97.00
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 90.26476991 73.98671307 13.07073524 17.36760917  2.44073964  4.93351117
  0.10267652  0.45826678]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9805333755985837
cond(S) = 7.835693365706702
E1 = -18.909500506445397  E_coul = 4.50656193850089
init E= -14.4029385679445
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30543594385431  LUMO = 11.4210376131018
  mo_energy =
[ -4.66536299  -0.30543594  11.42103761 128.82215101]
E1 = -18.991302985568318  E_coul = 4.543105435017774
cycle= 1 E= -14.4481975505505  delta_E= -0.0453  |g|= 0.0159  |ddm|= 0.0471
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0192958
diis-c [-3.72326288e-04  1.00000000e+00]
  HOMO = -0.299981772822342  LUMO = 11.4433620845156
  mo_energy =
[ -4.65256662  -0.29998177  11.44336208 128.85692887]
E1 = -18.99081318040422  E_coul = 4.5426108098487274
cycle= 2 E= -14.4482023705555  delta_E= -4.82e-06  |g|= 0.000428  |ddm|= 0.00198
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000473278
diis-c [-8.59471190e-08 -1.96355997e-02  1.01963560e+00]
  HOMO = -0.299997685402437  LUMO = 11.4432357612181
  mo_energy =
[ -4.65280296  -0.29999769  11.44323576 128.85651501]
E1 = -18.990804155830855  E_coul = 4.542601779373062
cycle= 3 E= -14.4482023764578  delta_E= -5.9e-09  |g|= 8.29e-06  |ddm|= 6.95e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1327e-05
diis-c [-2.57790630e-12  7.30567673e-04 -4.03738372e-02  1.03964327e+00]
  HOMO = -0.299997878658232  LUMO = 11.4432387099725
  mo_energy =
[ -4.65280242  -0.29999788  11.44323871 128.85652925]
E1 = -18.990804271077025  E_coul = 4.542601894616604
cycle= 4 E= -14.4482023764604  delta_E= -2.63e-12  |g|= 4.37e-08  |ddm|= 1.32e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.990804271077025  E_coul = 4.542601894616604
  HOMO = -0.29999787762875  LUMO = 11.4432387697673
  mo_energy =
[ -4.65280236  -0.29999788  11.44323877 128.85652948]
E1 = -18.99080427459152  E_coul = 4.542601898131104
Extra cycle  E= -14.4482023764604  delta_E= 1.78e-15  |g|= 1.55e-09  |ddm|= 5.15e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [90.26476991 13.07073524  2.44073964  0.10267652]
E = -14.448202376460419
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  90.2647699063        1
[INPUT] 0    0    [1    /1   ]  13.0707352401        1
[INPUT] 0    0    [1    /1   ]  2.44073964469        1
[INPUT] 0    0    [1    /1   ]  0.102676517841       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [90.26476990631458, 1.0]], [0, [13.070735240070716, 1.0]], [0, [2.4407396446935348, 1.0]], [0, [0.10267651784068242, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [90.26476991]
bas 1, expnt(s) = [13.07073524]
bas 2, expnt(s) = [2.44073964]
bas 3, expnt(s) = [0.10267652]
CPU time:        97.61
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 90.26476991 73.98671307 13.07073524 17.36760917  2.44073964  4.93351117
  0.10267652  0.45826678]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9805333755985837
cond(S) = 7.835693365706702
E1 = -18.909500506445397  E_coul = 4.50656193850089
init E= -14.4029385679445
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30543594385431  LUMO = 11.4210376131018
  mo_energy =
[ -4.66536299  -0.30543594  11.42103761 128.82215101]
E1 = -18.991302985568318  E_coul = 4.543105435017774
cycle= 1 E= -14.4481975505505  delta_E= -0.0453  |g|= 0.0159  |ddm|= 0.0471
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0192958
diis-c [-3.72326288e-04  1.00000000e+00]
  HOMO = -0.299981772822342  LUMO = 11.4433620845156
  mo_energy =
[ -4.65256662  -0.29998177  11.44336208 128.85692887]
E1 = -18.99081318040422  E_coul = 4.5426108098487274
cycle= 2 E= -14.4482023705555  delta_E= -4.82e-06  |g|= 0.000428  |ddm|= 0.00198
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000473278
diis-c [-8.59471190e-08 -1.96355997e-02  1.01963560e+00]
  HOMO = -0.299997685402437  LUMO = 11.4432357612181
  mo_energy =
[ -4.65280296  -0.29999769  11.44323576 128.85651501]
E1 = -18.990804155830855  E_coul = 4.542601779373062
cycle= 3 E= -14.4482023764578  delta_E= -5.9e-09  |g|= 8.29e-06  |ddm|= 6.95e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.1327e-05
diis-c [-2.57790630e-12  7.30567673e-04 -4.03738372e-02  1.03964327e+00]
  HOMO = -0.299997878658232  LUMO = 11.4432387099725
  mo_energy =
[ -4.65280242  -0.29999788  11.44323871 128.85652925]
E1 = -18.990804271077025  E_coul = 4.542601894616604
cycle= 4 E= -14.4482023764604  delta_E= -2.63e-12  |g|= 4.37e-08  |ddm|= 1.32e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.990804271077025  E_coul = 4.542601894616604
  HOMO = -0.29999787762875  LUMO = 11.4432387697673
  mo_energy =
[ -4.65280236  -0.29999788  11.44323877 128.85652948]
E1 = -18.99080427459152  E_coul = 4.542601898131104
Extra cycle  E= -14.4482023764604  delta_E= 1.78e-15  |g|= 1.55e-09  |ddm|= 5.15e-09
    CPU time for scf_cycle      0.06 sec, wall time      0.06 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 7.835693365706702
E1 = -18.99080427459152  E_coul = 4.542601898131104
init E= -14.4482023764604
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299997877600943  LUMO = 11.4432387717278
  mo_energy =
[ -4.65280236  -0.29999788  11.44323877 128.85652948]
E1 = -18.990804274704097  E_coul = 4.542601898243671
cycle= 1 E= -14.4482023764604  delta_E= -7.11e-15  |g|= 5.83e-11  |ddm|= 1.72e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.990804274704097  E_coul = 4.542601898243671
  HOMO = -0.29999787760033  LUMO = 11.4432387717943
  mo_energy =
[ -4.65280236  -0.29999788  11.44323877 128.85652948]
E1 = -18.990804274707827  E_coul = 4.542601898247403
Extra cycle  E= -14.4482023764604  delta_E= 1.78e-15  |g|= 2.3e-12  |ddm|= 6.43e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [90.26476991 13.07073524  2.44073964  0.10267652]
grad_E = [-6.02956221e-05  7.33338251e-03  3.87098911e-02 -7.31800068e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  80.1827636858        1
[INPUT] 0    0    [1    /1   ]  12.4816440134        1
[INPUT] 0    0    [1    /1   ]  2.40334467269        1
[INPUT] 0    0    [1    /1   ]  0.107862881032       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [80.18276368583909, 1.0]], [0, [12.481644013358633, 1.0]], [0, [2.403344672689162, 1.0]], [0, [0.1078628810318949, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [80.18276369]
bas 1, expnt(s) = [12.48164401]
bas 2, expnt(s) = [2.40334467]
bas 3, expnt(s) = [0.10786288]
CPU time:        99.91
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 80.18276369 67.69799245 12.48164401 16.7771763   2.40334467  4.87671155
  0.10786288  0.47552027]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9804582447936014
cond(S) = 8.4913956322179
E1 = -18.956772959405537  E_coul = 4.544654357269102
init E= -14.4121186021364
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301079743666898  LUMO = 10.9650963993403
  mo_energy =
[ -4.65251388  -0.30107974  10.9650964  115.84295992]
E1 = -19.039232522840635  E_coul = 4.587425373580581
cycle= 1 E= -14.4518071492601  delta_E= -0.0397  |g|= 0.0137  |ddm|= 0.0304
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0173592
diis-c [-3.01342533e-04  1.00000000e+00]
  HOMO = -0.295507040936572  LUMO = 10.9886369422399
  mo_energy =
[ -4.63668507  -0.29550704  10.98863694 115.88234356]
E1 = -19.03887076169656  E_coul = 4.587061087540845
cycle= 2 E= -14.4518096741557  delta_E= -2.52e-06  |g|= 0.000343  |ddm|= 0.00138
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000376754
diis-c [-4.16552211e-08 -1.85832715e-02  1.01858327e+00]
  HOMO = -0.295518892153345  LUMO = 10.9885441361027
  mo_energy =
[ -4.63685879  -0.29551889  10.98854414 115.88200847]
E1 = -19.03886391600293  E_coul = 4.587054238750954
cycle= 3 E= -14.451809677252  delta_E= -3.1e-09  |g|= 6.65e-06  |ddm|= 5.09e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.80407e-06
diis-c [-7.60300742e-13  8.28724279e-04 -4.56773136e-02  1.04484859e+00]
  HOMO = -0.295519064067797  LUMO = 10.9885461167898
  mo_energy =
[ -4.63685866  -0.29551906  10.98854612 115.88201825]
E1 = -19.03886398343904  E_coul = 4.587054306185326
cycle= 4 E= -14.4518096772537  delta_E= -1.74e-12  |g|= 2.56e-08  |ddm|= 1.13e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03886398343904  E_coul = 4.587054306185326
  HOMO = -0.295519063212442  LUMO = 10.9885461524873
  mo_energy =
[ -4.63685862  -0.29551906  10.98854615 115.88201838]
E1 = -19.038863985696704  E_coul = 4.587054308442995
Extra cycle  E= -14.4518096772537  delta_E= 3.55e-15  |g|= 8.67e-10  |ddm|= 3.46e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [80.18276369 12.48164401  2.40334467  0.10786288]
E = -14.45180967725371
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  80.1827636858        1
[INPUT] 0    0    [1    /1   ]  12.4816440134        1
[INPUT] 0    0    [1    /1   ]  2.40334467269        1
[INPUT] 0    0    [1    /1   ]  0.107862881032       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [80.18276368583909, 1.0]], [0, [12.481644013358633, 1.0]], [0, [2.403344672689162, 1.0]], [0, [0.1078628810318949, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [80.18276369]
bas 1, expnt(s) = [12.48164401]
bas 2, expnt(s) = [2.40334467]
bas 3, expnt(s) = [0.10786288]
CPU time:       100.54
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 80.18276369 67.69799245 12.48164401 16.7771763   2.40334467  4.87671155
  0.10786288  0.47552027]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9804582447936014
cond(S) = 8.4913956322179
E1 = -18.956772959405537  E_coul = 4.544654357269102
init E= -14.4121186021364
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.301079743666898  LUMO = 10.9650963993403
  mo_energy =
[ -4.65251388  -0.30107974  10.9650964  115.84295992]
E1 = -19.039232522840635  E_coul = 4.587425373580581
cycle= 1 E= -14.4518071492601  delta_E= -0.0397  |g|= 0.0137  |ddm|= 0.0304
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0173592
diis-c [-3.01342533e-04  1.00000000e+00]
  HOMO = -0.295507040936572  LUMO = 10.9886369422399
  mo_energy =
[ -4.63668507  -0.29550704  10.98863694 115.88234356]
E1 = -19.03887076169656  E_coul = 4.587061087540845
cycle= 2 E= -14.4518096741557  delta_E= -2.52e-06  |g|= 0.000343  |ddm|= 0.00138
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000376754
diis-c [-4.16552211e-08 -1.85832715e-02  1.01858327e+00]
  HOMO = -0.295518892153345  LUMO = 10.9885441361027
  mo_energy =
[ -4.63685879  -0.29551889  10.98854414 115.88200847]
E1 = -19.03886391600293  E_coul = 4.587054238750954
cycle= 3 E= -14.451809677252  delta_E= -3.1e-09  |g|= 6.65e-06  |ddm|= 5.09e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.80407e-06
diis-c [-7.60300742e-13  8.28724279e-04 -4.56773136e-02  1.04484859e+00]
  HOMO = -0.295519064067797  LUMO = 10.9885461167898
  mo_energy =
[ -4.63685866  -0.29551906  10.98854612 115.88201825]
E1 = -19.03886398343904  E_coul = 4.587054306185326
cycle= 4 E= -14.4518096772537  delta_E= -1.74e-12  |g|= 2.56e-08  |ddm|= 1.13e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.03886398343904  E_coul = 4.587054306185326
  HOMO = -0.295519063212442  LUMO = 10.9885461524873
  mo_energy =
[ -4.63685862  -0.29551906  10.98854615 115.88201838]
E1 = -19.038863985696704  E_coul = 4.587054308442995
Extra cycle  E= -14.4518096772537  delta_E= 3.55e-15  |g|= 8.67e-10  |ddm|= 3.46e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 8.4913956322179
E1 = -19.038863985696704  E_coul = 4.587054308442995
init E= -14.4518096772537
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.295519063187941  LUMO = 10.9885461536322
  mo_energy =
[ -4.63685862  -0.29551906  10.98854615 115.88201838]
E1 = -19.038863985767662  E_coul = 4.58705430851395
cycle= 1 E= -14.4518096772537  delta_E= -3.55e-15  |g|= 3.1e-11  |ddm|= 1.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.038863985767662  E_coul = 4.58705430851395
  HOMO = -0.295519063187315  LUMO = 10.9885461536699
  mo_energy =
[ -4.63685862  -0.29551906  10.98854615 115.88201838]
E1 = -19.038863985769957  E_coul = 4.587054308516241
Extra cycle  E= -14.4518096772537  delta_E= -3.55e-15  |g|= 1.2e-12  |ddm|= 3.53e-12
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [80.18276369 12.48164401  2.40334467  0.10786288]
grad_E = [-0.00038582  0.00797224  0.04124083  0.17002204]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  74.0000430956        1
[INPUT] 0    0    [1    /1   ]  11.721490015         1
[INPUT] 0    0    [1    /1   ]  2.34204741116        1
[INPUT] 0    0    [1    /1   ]  0.108253795183       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [74.00004309560182, 1.0]], [0, [11.721490015016544, 1.0]], [0, [2.3420474111621954, 1.0]], [0, [0.10825379518330161, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [74.0000431]
bas 1, expnt(s) = [11.72149002]
bas 2, expnt(s) = [2.34204741]
bas 3, expnt(s) = [0.1082538]
CPU time:       102.82
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 74.0000431  63.74395469 11.72149002 16.00486962  2.34204741  4.78312561
  0.1082538   0.47681221]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9811494776148675
cond(S) = 8.925579986109403
E1 = -18.96690840579995  E_coul = 4.54636220915248
init E= -14.4205461966475
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.300500613498922  LUMO = 10.283786663253
  mo_energy =
[ -4.65481032  -0.30050061  10.28378666 106.55791912]
E1 = -19.0432974589869  E_coul = 4.58631128527215
cycle= 1 E= -14.4569861737147  delta_E= -0.0364  |g|= 0.0163  |ddm|= 0.034
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0202118
diis-c [-4.08515082e-04  1.00000000e+00]
  HOMO = -0.295343591179696  LUMO = 10.3053361935975
  mo_energy =
[ -4.63999542  -0.29534359  10.30533619 106.59377986]
E1 = -19.04300220712053  E_coul = 4.586012798524772
cycle= 2 E= -14.4569894085958  delta_E= -3.23e-06  |g|= 0.000435  |ddm|= 0.00152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000463433
diis-c [-6.28321602e-08 -1.96661973e-02  1.01966620e+00]
  HOMO = -0.295356213848708  LUMO = 10.3052933324376
  mo_energy =
[ -4.64013503  -0.29535621  10.30529333 106.59362414]
E1 = -19.042998006251025  E_coul = 4.586008593004531
cycle= 3 E= -14.4569894132465  delta_E= -4.65e-09  |g|= 8.77e-06  |ddm|= 6.17e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.13646e-05
diis-c [-5.97609655e-13  9.16277189e-04 -4.82767873e-02  1.04736051e+00]
  HOMO = -0.295356419499857  LUMO = 10.3052965736809
  mo_energy =
[ -4.64013395  -0.29535642  10.30529657 106.59363948]
E1 = -19.042998142447104  E_coul = 4.586008729197501
cycle= 4 E= -14.4569894132496  delta_E= -3.11e-12  |g|= 2.14e-08  |ddm|= 1.54e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.042998142447104  E_coul = 4.586008729197501
  HOMO = -0.295356418775657  LUMO = 10.3052966024986
  mo_energy =
[ -4.64013392  -0.29535642  10.3052966  106.59363958]
E1 = -19.042998144436584  E_coul = 4.5860087311869835
Extra cycle  E= -14.4569894132496  delta_E=    0  |g|= 7.58e-10  |ddm|= 3.09e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [74.0000431  11.72149002  2.34204741  0.1082538 ]
E = -14.456989413249602
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  74.0000430956        1
[INPUT] 0    0    [1    /1   ]  11.721490015         1
[INPUT] 0    0    [1    /1   ]  2.34204741116        1
[INPUT] 0    0    [1    /1   ]  0.108253795183       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [74.00004309560182, 1.0]], [0, [11.721490015016544, 1.0]], [0, [2.3420474111621954, 1.0]], [0, [0.10825379518330161, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [74.0000431]
bas 1, expnt(s) = [11.72149002]
bas 2, expnt(s) = [2.34204741]
bas 3, expnt(s) = [0.1082538]
CPU time:       103.47
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 74.0000431  63.74395469 11.72149002 16.00486962  2.34204741  4.78312561
  0.1082538   0.47681221]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9811494776148675
cond(S) = 8.925579986109403
E1 = -18.96690840579995  E_coul = 4.54636220915248
init E= -14.4205461966475
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.300500613498922  LUMO = 10.283786663253
  mo_energy =
[ -4.65481032  -0.30050061  10.28378666 106.55791912]
E1 = -19.0432974589869  E_coul = 4.58631128527215
cycle= 1 E= -14.4569861737147  delta_E= -0.0364  |g|= 0.0163  |ddm|= 0.034
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0202118
diis-c [-4.08515082e-04  1.00000000e+00]
  HOMO = -0.295343591179696  LUMO = 10.3053361935975
  mo_energy =
[ -4.63999542  -0.29534359  10.30533619 106.59377986]
E1 = -19.04300220712053  E_coul = 4.586012798524772
cycle= 2 E= -14.4569894085958  delta_E= -3.23e-06  |g|= 0.000435  |ddm|= 0.00152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000463433
diis-c [-6.28321602e-08 -1.96661973e-02  1.01966620e+00]
  HOMO = -0.295356213848708  LUMO = 10.3052933324376
  mo_energy =
[ -4.64013503  -0.29535621  10.30529333 106.59362414]
E1 = -19.042998006251025  E_coul = 4.586008593004531
cycle= 3 E= -14.4569894132465  delta_E= -4.65e-09  |g|= 8.77e-06  |ddm|= 6.17e-05
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.13646e-05
diis-c [-5.97609655e-13  9.16277189e-04 -4.82767873e-02  1.04736051e+00]
  HOMO = -0.295356419499857  LUMO = 10.3052965736809
  mo_energy =
[ -4.64013395  -0.29535642  10.30529657 106.59363948]
E1 = -19.042998142447104  E_coul = 4.586008729197501
cycle= 4 E= -14.4569894132496  delta_E= -3.11e-12  |g|= 2.14e-08  |ddm|= 1.54e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -19.042998142447104  E_coul = 4.586008729197501
  HOMO = -0.295356418775657  LUMO = 10.3052966024986
  mo_energy =
[ -4.64013392  -0.29535642  10.3052966  106.59363958]
E1 = -19.042998144436584  E_coul = 4.5860087311869835
Extra cycle  E= -14.4569894132496  delta_E=    0  |g|= 7.58e-10  |ddm|= 3.09e-09
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 8.925579986109403
E1 = -19.042998144436584  E_coul = 4.5860087311869835
init E= -14.4569894132496
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.295356418753482  LUMO = 10.3052966034519
  mo_energy =
[ -4.64013392  -0.29535642  10.3052966  106.59363959]
E1 = -19.042998144500988  E_coul = 4.586008731251398
cycle= 1 E= -14.4569894132496  delta_E= 1.07e-14  |g|= 2.8e-11  |ddm|= 9.77e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -19.042998144500988  E_coul = 4.586008731251398
  HOMO = -0.295356418752894  LUMO = 10.3052966034842
  mo_energy =
[ -4.64013392  -0.29535642  10.3052966  106.59363959]
E1 = -19.042998144503137  E_coul = 4.586008731253538
Extra cycle  E= -14.4569894132496  delta_E= -7.11e-15  |g|= 1.11e-12  |ddm|= 3.31e-12
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [74.0000431  11.72149002  2.34204741  0.1082538 ]
grad_E = [-0.00044253  0.00527133  0.04833352  0.18864393]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.8817812449        1
[INPUT] 0    0    [1    /1   ]  9.61744757935        1
[INPUT] 0    0    [1    /1   ]  2.07607309061        1
[INPUT] 0    0    [1    /1   ]  0.103052438528       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.88178124485138, 1.0]], [0, [9.617447579349484, 1.0]], [0, [2.0760730906073195, 1.0]], [0, [0.10305243852843775, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.88178124]
bas 1, expnt(s) = [9.61744758]
bas 2, expnt(s) = [2.07607309]
bas 3, expnt(s) = [0.10305244]
CPU time:       105.84
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.88178124 58.42369545  9.61744758 13.79780158  2.07607309  4.36965354
  0.10305244  0.45952456]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845480761621754
cond(S) = 9.242533909106593
E1 = -18.94121001814355  E_coul = 4.505308815546821
init E= -14.4359012025967
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30333134976356  LUMO = 8.10474951284394
  mo_energy =
[-4.6770169  -0.30333135  8.10474951 90.2682087 ]
E1 = -18.976334515774575  E_coul = 4.510041260923017
cycle= 1 E= -14.4662932548516  delta_E= -0.0304  |g|= 0.0257  |ddm|= 0.0854
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0303317
diis-c [-9.2001339e-04  1.0000000e+00]
  HOMO = -0.300427771551552  LUMO = 8.11137123379385
  mo_energy =
[-4.67770442 -0.30042777  8.11137123 90.26423287]
E1 = -18.975651565754504  E_coul = 4.50934535158595
cycle= 2 E= -14.4663062141686  delta_E= -1.3e-05  |g|= 0.000883  |ddm|= 0.00377
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000908835
diis-c [-3.55093383e-07 -2.31518312e-02  1.02315183e+00]
  HOMO = -0.3004597354544  LUMO = 8.11127577323285
  mo_energy =
[-4.67802877 -0.30045974  8.11127577 90.26403066]
E1 = -18.97563638025888  E_coul = 4.509330136383333
cycle= 3 E= -14.4663062438755  delta_E= -2.97e-08  |g|= 2.4e-05  |ddm|= 0.000185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.97561e-05
diis-c [-6.56471653e-12  1.09485932e-03 -5.31463937e-02  1.05205153e+00]
  HOMO = -0.300460438520898  LUMO = 8.11128163485788
  mo_energy =
[-4.67802763 -0.30046044  8.11128163 90.2640665 ]
E1 = -18.97563652790131  E_coul = 4.509330283996896
cycle= 4 E= -14.4663062439044  delta_E= -2.89e-11  |g|= 7.31e-08  |ddm|= 5.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97563652790131  E_coul = 4.509330283996896
  HOMO = -0.30046043727192  LUMO = 8.11128171018187
  mo_energy =
[-4.67802754 -0.30046044  8.11128171 90.26406682]
E1 = -18.975636534477093  E_coul = 4.509330290572675
Extra cycle  E= -14.4663062439044  delta_E= -3.55e-15  |g|= 3.33e-09  |ddm|= 1.02e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [65.88178124  9.61744758  2.07607309  0.10305244]
E = -14.46630624390442
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.8817812449        1
[INPUT] 0    0    [1    /1   ]  9.61744757935        1
[INPUT] 0    0    [1    /1   ]  2.07607309061        1
[INPUT] 0    0    [1    /1   ]  0.103052438528       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.88178124485138, 1.0]], [0, [9.617447579349484, 1.0]], [0, [2.0760730906073195, 1.0]], [0, [0.10305243852843775, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.88178124]
bas 1, expnt(s) = [9.61744758]
bas 2, expnt(s) = [2.07607309]
bas 3, expnt(s) = [0.10305244]
CPU time:       106.50
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.88178124 58.42369545  9.61744758 13.79780158  2.07607309  4.36965354
  0.10305244  0.45952456]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9845480761621754
cond(S) = 9.242533909106593
E1 = -18.94121001814355  E_coul = 4.505308815546821
init E= -14.4359012025967
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.30333134976356  LUMO = 8.10474951284394
  mo_energy =
[-4.6770169  -0.30333135  8.10474951 90.2682087 ]
E1 = -18.976334515774575  E_coul = 4.510041260923017
cycle= 1 E= -14.4662932548516  delta_E= -0.0304  |g|= 0.0257  |ddm|= 0.0854
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0303317
diis-c [-9.2001339e-04  1.0000000e+00]
  HOMO = -0.300427771551552  LUMO = 8.11137123379385
  mo_energy =
[-4.67770442 -0.30042777  8.11137123 90.26423287]
E1 = -18.975651565754504  E_coul = 4.50934535158595
cycle= 2 E= -14.4663062141686  delta_E= -1.3e-05  |g|= 0.000883  |ddm|= 0.00377
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000908835
diis-c [-3.55093383e-07 -2.31518312e-02  1.02315183e+00]
  HOMO = -0.3004597354544  LUMO = 8.11127577323285
  mo_energy =
[-4.67802877 -0.30045974  8.11127577 90.26403066]
E1 = -18.97563638025888  E_coul = 4.509330136383333
cycle= 3 E= -14.4663062438755  delta_E= -2.97e-08  |g|= 2.4e-05  |ddm|= 0.000185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.97561e-05
diis-c [-6.56471653e-12  1.09485932e-03 -5.31463937e-02  1.05205153e+00]
  HOMO = -0.300460438520898  LUMO = 8.11128163485788
  mo_energy =
[-4.67802763 -0.30046044  8.11128163 90.2640665 ]
E1 = -18.97563652790131  E_coul = 4.509330283996896
cycle= 4 E= -14.4663062439044  delta_E= -2.89e-11  |g|= 7.31e-08  |ddm|= 5.57e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97563652790131  E_coul = 4.509330283996896
  HOMO = -0.30046043727192  LUMO = 8.11128171018187
  mo_energy =
[-4.67802754 -0.30046044  8.11128171 90.26406682]
E1 = -18.975636534477093  E_coul = 4.509330290572675
Extra cycle  E= -14.4663062439044  delta_E= -3.55e-15  |g|= 3.33e-09  |ddm|= 1.02e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.242533909106593
E1 = -18.975636534477093  E_coul = 4.509330290572675
init E= -14.4663062439044
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.300460437231928  LUMO = 8.11128171310018
  mo_energy =
[-4.67802754 -0.30046044  8.11128171 90.26406683]
E1 = -18.975636534721886  E_coul = 4.509330290817459
cycle= 1 E= -14.4663062439044  delta_E= -7.11e-15  |g|= 1.58e-10  |ddm|= 4.39e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.975636534721886  E_coul = 4.509330290817459
  HOMO = -0.300460437231447  LUMO = 8.11128171321681
  mo_energy =
[-4.67802754 -0.30046044  8.11128171 90.26406683]
E1 = -18.975636534731255  E_coul = 4.509330290826838
Extra cycle  E= -14.4663062439044  delta_E= 1.07e-14  |g|= 7.73e-12  |ddm|= 2.18e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [65.88178124  9.61744758  2.07607309  0.10305244]
grad_E = [ 0.00038374 -0.0091596   0.04192733 -0.0406702 ]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.0549224672        1
[INPUT] 0    0    [1    /1   ]  9.92922088536        1
[INPUT] 0    0    [1    /1   ]  2.05595434141        1
[INPUT] 0    0    [1    /1   ]  0.103764531088       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.05492246719417, 1.0]], [0, [9.929220885364971, 1.0]], [0, [2.055954341405281, 1.0]], [0, [0.10376453108843749, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.05492247]
bas 1, expnt(s) = [9.92922089]
bas 2, expnt(s) = [2.05595434]
bas 3, expnt(s) = [0.10376453]
CPU time:       108.94
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.05492247 57.87288689  9.92922089 14.13192758  2.05595434  4.33785592
  0.10376453  0.461904  ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984765709272161
cond(S) = 9.10915315574212
E1 = -18.95137998585982  E_coul = 4.509137880100223
init E= -14.4422421057596
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302706932830284  LUMO = 8.24692506392122
  mo_energy =
[-4.67647205 -0.30270693  8.24692506 90.3459366 ]
E1 = -18.971968461791196  E_coul = 4.504280944316268
cycle= 1 E= -14.4676875174749  delta_E= -0.0254  |g|= 0.0149  |ddm|= 0.0885
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.015885
diis-c [-2.52334018e-04  1.00000000e+00]
  HOMO = -0.299966547772472  LUMO = 8.24888065477175
  mo_energy =
[-4.68174105 -0.29996655  8.24888065 90.3280184 ]
E1 = -18.97086219154193  E_coul = 4.503165678850776
cycle= 2 E= -14.4676965126912  delta_E= -9e-06  |g|= 0.000574  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000610156
diis-c [-2.04763572e-07 -2.64589640e-02  1.02645896e+00]
  HOMO = -0.299999429926919  LUMO = 8.24857036140069
  mo_energy =
[-4.68228076 -0.29999943  8.24857036 90.32700131]
E1 = -18.970828773087057  E_coul = 4.503132242131372
cycle= 3 E= -14.4676965309557  delta_E= -1.83e-08  |g|= 1.5e-05  |ddm|= 0.00016
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.99898e-05
diis-c [-1.14618219e-11  9.90154984e-04 -4.59706284e-02  1.04498047e+00]
  HOMO = -0.299999942556122  LUMO = 8.24857236659064
  mo_energy =
[-4.6822824  -0.29999994  8.24857237 90.32701742]
E1 = -18.970828673249095  E_coul = 4.5031321422816
cycle= 4 E= -14.4676965309675  delta_E= -1.18e-11  |g|= 1.25e-07  |ddm|= 3.63e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.970828673249095  E_coul = 4.5031321422816
  HOMO = -0.29999994001519  LUMO = 8.24857249632061
  mo_energy =
[-4.68228225 -0.29999994  8.2485725  90.32701795]
E1 = -18.970828683871716  E_coul = 4.503132152904219
Extra cycle  E= -14.4676965309675  delta_E= -3.55e-15  |g|= 5.39e-09  |ddm|= 1.63e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [65.05492247  9.92922089  2.05595434  0.10376453]
E = -14.467696530967498
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.0549224672        1
[INPUT] 0    0    [1    /1   ]  9.92922088536        1
[INPUT] 0    0    [1    /1   ]  2.05595434141        1
[INPUT] 0    0    [1    /1   ]  0.103764531088       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.05492246719417, 1.0]], [0, [9.929220885364971, 1.0]], [0, [2.055954341405281, 1.0]], [0, [0.10376453108843749, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.05492247]
bas 1, expnt(s) = [9.92922089]
bas 2, expnt(s) = [2.05595434]
bas 3, expnt(s) = [0.10376453]
CPU time:       109.61
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.05492247 57.87288689  9.92922089 14.13192758  2.05595434  4.33785592
  0.10376453  0.461904  ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984765709272161
cond(S) = 9.10915315574212
E1 = -18.95137998585982  E_coul = 4.509137880100223
init E= -14.4422421057596
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.302706932830284  LUMO = 8.24692506392122
  mo_energy =
[-4.67647205 -0.30270693  8.24692506 90.3459366 ]
E1 = -18.971968461791196  E_coul = 4.504280944316268
cycle= 1 E= -14.4676875174749  delta_E= -0.0254  |g|= 0.0149  |ddm|= 0.0885
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.015885
diis-c [-2.52334018e-04  1.00000000e+00]
  HOMO = -0.299966547772472  LUMO = 8.24888065477175
  mo_energy =
[-4.68174105 -0.29996655  8.24888065 90.3280184 ]
E1 = -18.97086219154193  E_coul = 4.503165678850776
cycle= 2 E= -14.4676965126912  delta_E= -9e-06  |g|= 0.000574  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000610156
diis-c [-2.04763572e-07 -2.64589640e-02  1.02645896e+00]
  HOMO = -0.299999429926919  LUMO = 8.24857036140069
  mo_energy =
[-4.68228076 -0.29999943  8.24857036 90.32700131]
E1 = -18.970828773087057  E_coul = 4.503132242131372
cycle= 3 E= -14.4676965309557  delta_E= -1.83e-08  |g|= 1.5e-05  |ddm|= 0.00016
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.99898e-05
diis-c [-1.14618219e-11  9.90154984e-04 -4.59706284e-02  1.04498047e+00]
  HOMO = -0.299999942556122  LUMO = 8.24857236659064
  mo_energy =
[-4.6822824  -0.29999994  8.24857237 90.32701742]
E1 = -18.970828673249095  E_coul = 4.5031321422816
cycle= 4 E= -14.4676965309675  delta_E= -1.18e-11  |g|= 1.25e-07  |ddm|= 3.63e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.970828673249095  E_coul = 4.5031321422816
  HOMO = -0.29999994001519  LUMO = 8.24857249632061
  mo_energy =
[-4.68228225 -0.29999994  8.2485725  90.32701795]
E1 = -18.970828683871716  E_coul = 4.503132152904219
Extra cycle  E= -14.4676965309675  delta_E= -3.55e-15  |g|= 5.39e-09  |ddm|= 1.63e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.10915315574212
E1 = -18.970828683871716  E_coul = 4.503132152904219
init E= -14.4676965309675
    CPU time for initialize scf      0.04 sec, wall time      0.05 sec
  HOMO = -0.299999939945219  LUMO = 8.24857250115523
  mo_energy =
[-4.68228225 -0.29999994  8.2485725  90.32701797]
E1 = -18.970828684252396  E_coul = 4.503132153284908
cycle= 1 E= -14.4676965309675  delta_E= 1.07e-14  |g|= 2.44e-10  |ddm|= 6.72e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.970828684252396  E_coul = 4.503132153284908
  HOMO = -0.299999939944307  LUMO = 8.2485725013418
  mo_energy =
[-4.68228225 -0.29999994  8.2485725  90.32701797]
E1 = -18.970828684266394  E_coul = 4.5031321532989015
Extra cycle  E= -14.4676965309675  delta_E= -5.33e-15  |g|= 1.16e-11  |ddm|= 3.24e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [65.05492247  9.92922089  2.05595434  0.10376453]
grad_E = [-0.00022699  0.00287771 -0.00691736 -0.00415467]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  66.5872551923        1
[INPUT] 0    0    [1    /1   ]  9.90125475451        1
[INPUT] 0    0    [1    /1   ]  2.05505085175        1
[INPUT] 0    0    [1    /1   ]  0.10396344633        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [66.58725519228271, 1.0]], [0, [9.90125475450713, 1.0]], [0, [2.055050851753173, 1.0]], [0, [0.10396344632977751, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [66.58725519]
bas 1, expnt(s) = [9.90125475]
bas 2, expnt(s) = [2.05505085]
bas 3, expnt(s) = [0.10396345]
CPU time:       112.20
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 66.58725519 58.89227876  9.90125475 14.10206462  2.05505085  4.33642614
  0.10396345  0.46256794]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984785141072586
cond(S) = 8.986647680651517
E1 = -18.95271053524705  E_coul = 4.510514341776943
init E= -14.4421961934701
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302566133399771  LUMO = 8.22153269205752
  mo_energy =
[-4.67601982 -0.30256613  8.22153269 91.85160284]
E1 = -18.975033429476436  E_coul = 4.507151452299743
cycle= 1 E= -14.4678819771767  delta_E= -0.0257  |g|= 0.0165  |ddm|= 0.0858
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0186362
diis-c [-3.47306818e-04  1.00000000e+00]
  HOMO = -0.299804596135839  LUMO = 8.22415017498276
  mo_energy =
[-4.68056502 -0.2998046   8.22415017 91.83510014]
E1 = -18.97400077962763  E_coul = 4.506109708071358
cycle= 2 E= -14.4678910715563  delta_E= -9.09e-06  |g|= 0.000604  |ddm|= 0.00355
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000637064
diis-c [-2.19942532e-07 -2.36918807e-02  1.02369188e+00]
  HOMO = -0.29983680767512  LUMO = 8.22387532227886
  mo_energy =
[-4.68106623 -0.29983681  8.22387532 91.83419951]
E1 = -18.973970478521736  E_coul = 4.506079388088287
cycle= 3 E= -14.4678910904334  delta_E= -1.89e-08  |g|= 1.71e-05  |ddm|= 0.00016
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.21227e-05
diis-c [-1.01371138e-11  1.00397779e-03 -4.96181266e-02  1.04861415e+00]
  HOMO = -0.299837412557734  LUMO = 8.22387717553073
  mo_energy =
[-4.68106865 -0.29983741  8.22387718 91.83421612]
E1 = -18.97397033642486  E_coul = 4.506079245976031
cycle= 4 E= -14.4678910904488  delta_E= -1.54e-11  |g|= 1.12e-07  |ddm|= 4.18e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97397033642486  E_coul = 4.506079245976031
  HOMO = -0.299837409940847  LUMO = 8.22387729716281
  mo_energy =
[-4.68106851 -0.29983741  8.2238773  91.83421662]
E1 = -18.97397034654901  E_coul = 4.506079256100173
Extra cycle  E= -14.4678910904488  delta_E= -1.07e-14  |g|= 4.79e-09  |ddm|= 1.53e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
exp = [66.58725519  9.90125475  2.05505085  0.10396345]
E = -14.467891090448838
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  66.5872551923        1
[INPUT] 0    0    [1    /1   ]  9.90125475451        1
[INPUT] 0    0    [1    /1   ]  2.05505085175        1
[INPUT] 0    0    [1    /1   ]  0.10396344633        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [66.58725519228271, 1.0]], [0, [9.90125475450713, 1.0]], [0, [2.055050851753173, 1.0]], [0, [0.10396344632977751, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [66.58725519]
bas 1, expnt(s) = [9.90125475]
bas 2, expnt(s) = [2.05505085]
bas 3, expnt(s) = [0.10396345]
CPU time:       112.90
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 66.58725519 58.89227876  9.90125475 14.10206462  2.05505085  4.33642614
  0.10396345  0.46256794]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984785141072586
cond(S) = 8.986647680651517
E1 = -18.95271053524705  E_coul = 4.510514341776943
init E= -14.4421961934701
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302566133399771  LUMO = 8.22153269205752
  mo_energy =
[-4.67601982 -0.30256613  8.22153269 91.85160284]
E1 = -18.975033429476436  E_coul = 4.507151452299743
cycle= 1 E= -14.4678819771767  delta_E= -0.0257  |g|= 0.0165  |ddm|= 0.0858
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0186362
diis-c [-3.47306818e-04  1.00000000e+00]
  HOMO = -0.299804596135839  LUMO = 8.22415017498276
  mo_energy =
[-4.68056502 -0.2998046   8.22415017 91.83510014]
E1 = -18.97400077962763  E_coul = 4.506109708071358
cycle= 2 E= -14.4678910715563  delta_E= -9.09e-06  |g|= 0.000604  |ddm|= 0.00355
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.000637064
diis-c [-2.19942532e-07 -2.36918807e-02  1.02369188e+00]
  HOMO = -0.29983680767512  LUMO = 8.22387532227886
  mo_energy =
[-4.68106623 -0.29983681  8.22387532 91.83419951]
E1 = -18.973970478521736  E_coul = 4.506079388088287
cycle= 3 E= -14.4678910904334  delta_E= -1.89e-08  |g|= 1.71e-05  |ddm|= 0.00016
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.21227e-05
diis-c [-1.01371138e-11  1.00397779e-03 -4.96181266e-02  1.04861415e+00]
  HOMO = -0.299837412557734  LUMO = 8.22387717553073
  mo_energy =
[-4.68106865 -0.29983741  8.22387718 91.83421612]
E1 = -18.97397033642486  E_coul = 4.506079245976031
cycle= 4 E= -14.4678910904488  delta_E= -1.54e-11  |g|= 1.12e-07  |ddm|= 4.18e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.02 sec
E1 = -18.97397033642486  E_coul = 4.506079245976031
  HOMO = -0.299837409940847  LUMO = 8.22387729716281
  mo_energy =
[-4.68106851 -0.29983741  8.2238773  91.83421662]
E1 = -18.97397034654901  E_coul = 4.506079256100173
Extra cycle  E= -14.4678910904488  delta_E= -1.07e-14  |g|= 4.79e-09  |ddm|= 1.53e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 8.986647680651517
E1 = -18.97397034654901  E_coul = 4.506079256100173
init E= -14.4678910904488
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299837409863829  LUMO = 8.22387730166862
  mo_energy =
[-4.68106851 -0.29983741  8.2238773  91.83421664]
E1 = -18.973970346911237  E_coul = 4.506079256462403
cycle= 1 E= -14.4678910904488  delta_E= 3.55e-15  |g|= 2.14e-10  |ddm|= 6.02e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.973970346911237  E_coul = 4.506079256462403
  HOMO = -0.299837409862433  LUMO = 8.22387730184112
  mo_energy =
[-4.68106851 -0.29983741  8.2238773  91.83421664]
E1 = -18.97397034692451  E_coul = 4.506079256475675
Extra cycle  E= -14.4678910904488  delta_E=    0  |g|= 1.01e-11  |ddm|= 2.79e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [66.58725519  9.90125475  2.05505085  0.10396345]
grad_E = [ 2.09698980e-05  1.34365735e-04 -5.81035311e-04  4.56671387e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.9163864692        1
[INPUT] 0    0    [1    /1   ]  9.83928003547        1
[INPUT] 0    0    [1    /1   ]  2.04992250837        1
[INPUT] 0    0    [1    /1   ]  0.103850799704       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.91638646921899, 1.0]], [0, [9.839280035467008, 1.0]], [0, [2.049922508371618, 1.0]], [0, [0.10385079970401037, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.91638647]
bas 1, expnt(s) = [9.83928004]
bas 2, expnt(s) = [2.04992251]
bas 3, expnt(s) = [0.1038508]
CPU time:       115.43
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.91638647 58.44670977  9.83928004 14.03581112  2.04992251  4.3283075
  0.1038508   0.46219198]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848147676974413
cond(S) = 9.044500129073745
E1 = -18.951981873146035  E_coul = 4.5097621409491
init E= -14.4422197321969
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302625109099544  LUMO = 8.169430171868
  mo_energy =
[-4.67633791 -0.30262511  8.16943017 90.93295668]
E1 = -18.97383341612502  E_coul = 4.505943429799771
cycle= 1 E= -14.4678899863253  delta_E= -0.0257  |g|= 0.0167  |ddm|= 0.0872
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0188076
diis-c [-3.53726616e-04  1.00000000e+00]
  HOMO = -0.299898563985595  LUMO = 8.17192333138744
  mo_energy =
[-4.68107921 -0.29989856  8.17192333 90.9162382 ]
E1 = -18.972794365310943  E_coul = 4.50489499197075
cycle= 2 E= -14.4678993733402  delta_E= -9.39e-06  |g|= 0.000618  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000651391
diis-c [-2.29858256e-07 -2.40171169e-02  1.02401712e+00]
  HOMO = -0.299931360117771  LUMO = 8.17165017549493
  mo_energy =
[-4.68158344 -0.29993136  8.17165018 90.91534978]
E1 = -18.972763758199413  E_coul = 4.504864365048441
cycle= 3 E= -14.467899393151  delta_E= -1.98e-08  |g|= 1.75e-05  |ddm|= 0.000164
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.26392e-05
diis-c [-1.04090362e-11  1.01271822e-03 -4.96621872e-02  1.04864947e+00]
  HOMO = -0.299931975802719  LUMO = 8.1716521783296
  mo_energy =
[-4.68158575 -0.29993198  8.17165218 90.91536723]
E1 = -18.97276362016641  E_coul = 4.504864226999266
cycle= 4 E= -14.4678993931671  delta_E= -1.62e-11  |g|= 1.14e-07  |ddm|= 4.3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97276362016641  E_coul = 4.504864226999266
  HOMO = -0.299931973148532  LUMO = 8.17165230103044
  mo_energy =
[-4.68158561 -0.29993197  8.1716523  90.91536773]
E1 = -18.972763630476074  E_coul = 4.504864237308931
Extra cycle  E= -14.4678993931671  delta_E= 1.78e-15  |g|= 4.88e-09  |ddm|= 1.56e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [65.91638647  9.83928004  2.04992251  0.1038508 ]
E = -14.467899393167142
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.9163864692        1
[INPUT] 0    0    [1    /1   ]  9.83928003547        1
[INPUT] 0    0    [1    /1   ]  2.04992250837        1
[INPUT] 0    0    [1    /1   ]  0.103850799704       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.91638646921899, 1.0]], [0, [9.839280035467008, 1.0]], [0, [2.049922508371618, 1.0]], [0, [0.10385079970401037, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.91638647]
bas 1, expnt(s) = [9.83928004]
bas 2, expnt(s) = [2.04992251]
bas 3, expnt(s) = [0.1038508]
CPU time:       116.11
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.91638647 58.44670977  9.83928004 14.03581112  2.04992251  4.3283075
  0.1038508   0.46219198]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848147676974413
cond(S) = 9.044500129073745
E1 = -18.951981873146035  E_coul = 4.5097621409491
init E= -14.4422197321969
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302625109099544  LUMO = 8.169430171868
  mo_energy =
[-4.67633791 -0.30262511  8.16943017 90.93295668]
E1 = -18.97383341612502  E_coul = 4.505943429799771
cycle= 1 E= -14.4678899863253  delta_E= -0.0257  |g|= 0.0167  |ddm|= 0.0872
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0188076
diis-c [-3.53726616e-04  1.00000000e+00]
  HOMO = -0.299898563985595  LUMO = 8.17192333138744
  mo_energy =
[-4.68107921 -0.29989856  8.17192333 90.9162382 ]
E1 = -18.972794365310943  E_coul = 4.50489499197075
cycle= 2 E= -14.4678993733402  delta_E= -9.39e-06  |g|= 0.000618  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000651391
diis-c [-2.29858256e-07 -2.40171169e-02  1.02401712e+00]
  HOMO = -0.299931360117771  LUMO = 8.17165017549493
  mo_energy =
[-4.68158344 -0.29993136  8.17165018 90.91534978]
E1 = -18.972763758199413  E_coul = 4.504864365048441
cycle= 3 E= -14.467899393151  delta_E= -1.98e-08  |g|= 1.75e-05  |ddm|= 0.000164
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.26392e-05
diis-c [-1.04090362e-11  1.01271822e-03 -4.96621872e-02  1.04864947e+00]
  HOMO = -0.299931975802719  LUMO = 8.1716521783296
  mo_energy =
[-4.68158575 -0.29993198  8.17165218 90.91536723]
E1 = -18.97276362016641  E_coul = 4.504864226999266
cycle= 4 E= -14.4678993931671  delta_E= -1.62e-11  |g|= 1.14e-07  |ddm|= 4.3e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97276362016641  E_coul = 4.504864226999266
  HOMO = -0.299931973148532  LUMO = 8.17165230103044
  mo_energy =
[-4.68158561 -0.29993197  8.1716523  90.91536773]
E1 = -18.972763630476074  E_coul = 4.504864237308931
Extra cycle  E= -14.4678993931671  delta_E= 1.78e-15  |g|= 4.88e-09  |ddm|= 1.56e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.044500129073745
E1 = -18.972763630476074  E_coul = 4.504864237308931
init E= -14.4678993931671
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299931973069744  LUMO = 8.17165230559066
  mo_energy =
[-4.6815856  -0.29993197  8.17165231 90.91536775]
E1 = -18.972763630846217  E_coul = 4.504864237679062
cycle= 1 E= -14.4678993931672  delta_E= -1.24e-14  |g|= 2.19e-10  |ddm|= 6.15e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.972763630846217  E_coul = 4.504864237679062
  HOMO = -0.299931973068301  LUMO = 8.17165230576578
  mo_energy =
[-4.6815856  -0.29993197  8.17165231 90.91536775]
E1 = -18.97276363085981  E_coul = 4.504864237692661
Extra cycle  E= -14.4678993931671  delta_E= 7.11e-15  |g|= 1.03e-11  |ddm|= 2.86e-11
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [65.91638647  9.83928004  2.04992251  0.1038508 ]
grad_E = [ 1.64703036e-06 -1.14377321e-04  5.10450437e-04 -6.55227522e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.9911829793        1
[INPUT] 0    0    [1    /1   ]  9.84870954886        1
[INPUT] 0    0    [1    /1   ]  2.0503096236         1
[INPUT] 0    0    [1    /1   ]  0.10386445879        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.99118297930104, 1.0]], [0, [9.848709548860636, 1.0]], [0, [2.050309623596652, 1.0]], [0, [0.10386445878997025, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.99118298]
bas 1, expnt(s) = [9.84870955]
bas 2, expnt(s) = [2.05030962]
bas 3, expnt(s) = [0.10386446]
CPU time:       118.52
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.99118298 58.49644311  9.84870955 14.04589836  2.05030962  4.32892052
  0.10386446  0.46223757]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848122785637616
cond(S) = 9.036279368239372
E1 = -18.952080879757784  E_coul = 4.509839895632935
init E= -14.4422409841248
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302616969147628  LUMO = 8.17624708429633
  mo_energy =
[-4.67630789 -0.30261697  8.17624708 91.04279866]
E1 = -18.973874629875667  E_coul = 4.5059842185905
cycle= 1 E= -14.4678904112852  delta_E= -0.0256  |g|= 0.0166  |ddm|= 0.0871
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0186853
diis-c [-3.49138693e-04  1.00000000e+00]
  HOMO = -0.299888006811363  LUMO = 8.17871331760838
  mo_energy =
[-4.68106956 -0.29988801  8.17871332 91.02597844]
E1 = -18.97283271545276  E_coul = 4.504932965374079
cycle= 2 E= -14.4678997500787  delta_E= -9.34e-06  |g|= 0.000615  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000647958
diis-c [-2.27869616e-07 -2.40203375e-02  1.02402034e+00]
  HOMO = -0.299920755249234  LUMO = 8.17843819630276
  mo_energy =
[-4.68157528 -0.29992076  8.1784382  91.02508204]
E1 = -18.97280199605403  E_coul = 4.504902226328891
cycle= 3 E= -14.4678997697251  delta_E= -1.96e-08  |g|= 1.73e-05  |ddm|= 0.000164
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.25082e-05
diis-c [-1.04328040e-11  1.01076286e-03 -4.95782554e-02  1.04856749e+00]
  HOMO = -0.299921367951162  LUMO = 8.17844015881906
  mo_energy =
[-4.68157762 -0.29992137  8.17844016 91.02509928]
E1 = -18.972801856348358  E_coul = 4.50490208660725
cycle= 4 E= -14.4678997697411  delta_E= -1.6e-11  |g|= 1.14e-07  |ddm|= 4.27e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.972801856348358  E_coul = 4.50490208660725
  HOMO = -0.299921365295672  LUMO = 8.17844028186104
  mo_energy =
[-4.68157748 -0.29992137  8.17844028 91.02509978]
E1 = -18.972801866668387  E_coul = 4.504902096927272
Extra cycle  E= -14.4678997697411  delta_E= -7.11e-15  |g|= 4.89e-09  |ddm|= 1.56e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [65.99118298  9.84870955  2.05030962  0.10386446]
E = -14.467899769741116
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.9911829793        1
[INPUT] 0    0    [1    /1   ]  9.84870954886        1
[INPUT] 0    0    [1    /1   ]  2.0503096236         1
[INPUT] 0    0    [1    /1   ]  0.10386445879        1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.99118297930104, 1.0]], [0, [9.848709548860636, 1.0]], [0, [2.050309623596652, 1.0]], [0, [0.10386445878997025, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.99118298]
bas 1, expnt(s) = [9.84870955]
bas 2, expnt(s) = [2.05030962]
bas 3, expnt(s) = [0.10386446]
CPU time:       119.20
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.99118298 58.49644311  9.84870955 14.04589836  2.05030962  4.32892052
  0.10386446  0.46223757]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.9848122785637616
cond(S) = 9.036279368239372
E1 = -18.952080879757784  E_coul = 4.509839895632935
init E= -14.4422409841248
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302616969147628  LUMO = 8.17624708429633
  mo_energy =
[-4.67630789 -0.30261697  8.17624708 91.04279866]
E1 = -18.973874629875667  E_coul = 4.5059842185905
cycle= 1 E= -14.4678904112852  delta_E= -0.0256  |g|= 0.0166  |ddm|= 0.0871
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0186853
diis-c [-3.49138693e-04  1.00000000e+00]
  HOMO = -0.299888006811363  LUMO = 8.17871331760838
  mo_energy =
[-4.68106956 -0.29988801  8.17871332 91.02597844]
E1 = -18.97283271545276  E_coul = 4.504932965374079
cycle= 2 E= -14.4678997500787  delta_E= -9.34e-06  |g|= 0.000615  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000647958
diis-c [-2.27869616e-07 -2.40203375e-02  1.02402034e+00]
  HOMO = -0.299920755249234  LUMO = 8.17843819630276
  mo_energy =
[-4.68157528 -0.29992076  8.1784382  91.02508204]
E1 = -18.97280199605403  E_coul = 4.504902226328891
cycle= 3 E= -14.4678997697251  delta_E= -1.96e-08  |g|= 1.73e-05  |ddm|= 0.000164
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.25082e-05
diis-c [-1.04328040e-11  1.01076286e-03 -4.95782554e-02  1.04856749e+00]
  HOMO = -0.299921367951162  LUMO = 8.17844015881906
  mo_energy =
[-4.68157762 -0.29992137  8.17844016 91.02509928]
E1 = -18.972801856348358  E_coul = 4.50490208660725
cycle= 4 E= -14.4678997697411  delta_E= -1.6e-11  |g|= 1.14e-07  |ddm|= 4.27e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.972801856348358  E_coul = 4.50490208660725
  HOMO = -0.299921365295672  LUMO = 8.17844028186104
  mo_energy =
[-4.68157748 -0.29992137  8.17844028 91.02509978]
E1 = -18.972801866668387  E_coul = 4.504902096927272
Extra cycle  E= -14.4678997697411  delta_E= -7.11e-15  |g|= 4.89e-09  |ddm|= 1.56e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.036279368239372
E1 = -18.972801866668387  E_coul = 4.504902096927272
init E= -14.4678997697411
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299921365217078  LUMO = 8.17844028643207
  mo_energy =
[-4.68157747 -0.29992137  8.17844029 91.0250998 ]
E1 = -18.972801867038683  E_coul = 4.5049020972975695
cycle= 1 E= -14.4678997697411  delta_E= 3.55e-15  |g|= 2.19e-10  |ddm|= 6.16e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.972801867038683  E_coul = 4.5049020972975695
  HOMO = -0.29992136521565  LUMO = 8.17844028660753
  mo_energy =
[-4.68157747 -0.29992137  8.17844029 91.0250998 ]
E1 = -18.972801867052272  E_coul = 4.504902097311165
Extra cycle  E= -14.4678997697411  delta_E= 5.33e-15  |g|= 1.03e-11  |ddm|= 2.86e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [65.99118298  9.84870955  2.05030962  0.10386446]
grad_E = [-1.08589092e-07  2.83352308e-06 -1.38853899e-05  2.88918744e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.9910875672        1
[INPUT] 0    0    [1    /1   ]  9.84863704159        1
[INPUT] 0    0    [1    /1   ]  2.05031881622        1
[INPUT] 0    0    [1    /1   ]  0.103864292065       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.99108756722832, 1.0]], [0, [9.84863704158983, 1.0]], [0, [2.0503188162180708, 1.0]], [0, [0.1038642920648396, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.99108757]
bas 1, expnt(s) = [9.84863704]
bas 2, expnt(s) = [2.05031882]
bas 3, expnt(s) = [0.10386429]
CPU time:       121.66
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.99108757 58.49637968  9.84863704 14.04582081  2.05031882  4.32893507
  0.10386429  0.46223702]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984812228403838
cond(S) = 9.036351038663973
E1 = -18.952079319044106  E_coul = 4.509839258561219
init E= -14.4422400604829
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302617129983145  LUMO = 8.17622918516143
  mo_energy =
[-4.67630804 -0.30261713  8.17622919 91.04249688]
E1 = -18.973877074515713  E_coul = 4.505986663671654
cycle= 1 E= -14.4678904108441  delta_E= -0.0257  |g|= 0.0166  |ddm|= 0.0871
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0186887
diis-c [-3.49266068e-04  1.00000000e+00]
  HOMO = -0.299888110442417  LUMO = 8.17869686859163
  mo_energy =
[-4.68106824 -0.29988811  8.17869687 91.02568123]
E1 = -18.97283528310701  E_coul = 4.5049355328713725
cycle= 2 E= -14.4678997502356  delta_E= -9.34e-06  |g|= 0.000615  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000648023
diis-c [-2.27900966e-07 -2.40192683e-02  1.02401927e+00]
  HOMO = -0.299920858321451  LUMO = 8.17842180861799
  mo_energy =
[-4.68157389 -0.29992086  8.17842181 91.02478506]
E1 = -18.97280456879852  E_coul = 4.50490479891429
cycle= 3 E= -14.4678997698842  delta_E= -1.96e-08  |g|= 1.73e-05  |ddm|= 0.000164
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.25107e-05
diis-c [-1.04310293e-11  1.01079400e-03 -4.95805519e-02  1.04856976e+00]
  HOMO = -0.299921471073863  LUMO = 8.17842377205989
  mo_energy =
[-4.68157623 -0.29992147  8.17842377 91.0248023 ]
E1 = -18.97280442914761  E_coul = 4.504904659247406
cycle= 4 E= -14.4678997699002  delta_E= -1.6e-11  |g|= 1.14e-07  |ddm|= 4.27e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97280442914761  E_coul = 4.504904659247406
  HOMO = -0.299921468418568  LUMO = 8.17842389508646
  mo_energy =
[-4.68157609 -0.29992147  8.1784239  91.02480281]
E1 = -18.97280443946657  E_coul = 4.504904669566364
Extra cycle  E= -14.4678997699002  delta_E=    0  |g|= 4.89e-09  |ddm|= 1.56e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [65.99108757  9.84863704  2.05031882  0.10386429]
E = -14.467899769900207
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.9910875672        1
[INPUT] 0    0    [1    /1   ]  9.84863704159        1
[INPUT] 0    0    [1    /1   ]  2.05031881622        1
[INPUT] 0    0    [1    /1   ]  0.103864292065       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.99108756722832, 1.0]], [0, [9.84863704158983, 1.0]], [0, [2.0503188162180708, 1.0]], [0, [0.1038642920648396, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.99108757]
bas 1, expnt(s) = [9.84863704]
bas 2, expnt(s) = [2.05031882]
bas 3, expnt(s) = [0.10386429]
CPU time:       122.37
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.99108757 58.49637968  9.84863704 14.04582081  2.05031882  4.32893507
  0.10386429  0.46223702]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984812228403838
cond(S) = 9.036351038663973
E1 = -18.952079319044106  E_coul = 4.509839258561219
init E= -14.4422400604829
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302617129983145  LUMO = 8.17622918516143
  mo_energy =
[-4.67630804 -0.30261713  8.17622919 91.04249688]
E1 = -18.973877074515713  E_coul = 4.505986663671654
cycle= 1 E= -14.4678904108441  delta_E= -0.0257  |g|= 0.0166  |ddm|= 0.0871
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0186887
diis-c [-3.49266068e-04  1.00000000e+00]
  HOMO = -0.299888110442417  LUMO = 8.17869686859163
  mo_energy =
[-4.68106824 -0.29988811  8.17869687 91.02568123]
E1 = -18.97283528310701  E_coul = 4.5049355328713725
cycle= 2 E= -14.4678997502356  delta_E= -9.34e-06  |g|= 0.000615  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000648023
diis-c [-2.27900966e-07 -2.40192683e-02  1.02401927e+00]
  HOMO = -0.299920858321451  LUMO = 8.17842180861799
  mo_energy =
[-4.68157389 -0.29992086  8.17842181 91.02478506]
E1 = -18.97280456879852  E_coul = 4.50490479891429
cycle= 3 E= -14.4678997698842  delta_E= -1.96e-08  |g|= 1.73e-05  |ddm|= 0.000164
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.25107e-05
diis-c [-1.04310293e-11  1.01079400e-03 -4.95805519e-02  1.04856976e+00]
  HOMO = -0.299921471073863  LUMO = 8.17842377205989
  mo_energy =
[-4.68157623 -0.29992147  8.17842377 91.0248023 ]
E1 = -18.97280442914761  E_coul = 4.504904659247406
cycle= 4 E= -14.4678997699002  delta_E= -1.6e-11  |g|= 1.14e-07  |ddm|= 4.27e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97280442914761  E_coul = 4.504904659247406
  HOMO = -0.299921468418568  LUMO = 8.17842389508646
  mo_energy =
[-4.68157609 -0.29992147  8.1784239  91.02480281]
E1 = -18.97280443946657  E_coul = 4.504904669566364
Extra cycle  E= -14.4678997699002  delta_E=    0  |g|= 4.89e-09  |ddm|= 1.56e-08
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.036351038663973
E1 = -18.97280443946657  E_coul = 4.504904669566364
init E= -14.4678997699002
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.299921468339976  LUMO = 8.17842389965692
  mo_energy =
[-4.68157608 -0.29992147  8.1784239  91.02480282]
E1 = -18.972804439836818  E_coul = 4.5049046699366135
cycle= 1 E= -14.4678997699002  delta_E= 3.55e-15  |g|= 2.19e-10  |ddm|= 6.16e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -18.972804439836818  E_coul = 4.5049046699366135
  HOMO = -0.299921468338548  LUMO = 8.17842389983237
  mo_energy =
[-4.68157608 -0.29992147  8.1784239  91.02480283]
E1 = -18.97280443985042  E_coul = 4.504904669950218
Extra cycle  E= -14.4678997699002  delta_E=    0  |g|= 1.04e-11  |ddm|= 2.86e-11
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [65.99108757  9.84863704  2.05031882  0.10386429]
grad_E = [ 2.82877613e-09 -2.48026183e-08  2.75821349e-07 -5.69039382e-06]
  message: CONVERGENCE: REL_REDUCTION_OF_F_<=_FACTR*EPSMCH
  success: True
   status: 0
      fun: -14.467899769900207
        x: [ 6.599e+01  9.849e+00  2.050e+00  1.039e-01]
      nit: 34
      jac: [ 2.829e-09 -2.480e-08  2.758e-07 -5.690e-06]
     nfev: 45
     njev: 45
 hess_inv: <4x4 LbfgsInvHessProduct with dtype=float64>
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Be_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np

from scipy import optimize

VERBOSITY = 9

def atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))

    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponent}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponent, exp_array=None):
    if exp_array is None:
        exp_array = np.zeros((exponent.size, 2))
        
    mol = gto.Mole()
    mol.atom = 'Be 0 0 0'  # in Angstrom

    basis_string = '\n'.join([f'''
    Be  S
        {exp_array[i, 0] if exp_array[i, 1] == 1 else exponent[i]}              1.0'''
        for i in range(exponent.shape[0])])
    mol.basis = {'Be': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponent}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(n, exp_array=None):
    # x0 = [0.5 * (n-i) for i in range(n)]
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(n))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(exp_array),
        method="L-BFGS-B",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
exp_Be_2s = [3.8693654806627906e+00,1.0012498644798325e-01]
exp_Be_3s = [1.9442821925479006e+01,2.7411959081016830e+00,1.0297349419021139e-01]

N = 4

exps = np.zeros((N, 2))
exps[1:, 0] = exp_Be_3s[:]
exps[0, 0] = np.max(exp_Be_3s) * 10.0

minimize_energy(N, exps)
#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Tue Mar  7 18:20:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Be     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Be
[INPUT] 0    0    [1    /1   ]  65.9910875672        1
[INPUT] 0    0    [1    /1   ]  9.84863704159        1
[INPUT] 0    0    [1    /1   ]  2.05031881622        1
[INPUT] 0    0    [1    /1   ]  0.103864292065       1

nuclear repulsion = 0
number of shells = 4
number of NR pGTOs = 4
number of NR cGTOs = 4
basis = {'Be': [[0, [65.99108756722832, 1.0]], [0, [9.84863704158983, 1.0]], [0, [2.0503188162180708, 1.0]], [0, [0.1038642920648396, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [65.99108757]
bas 1, expnt(s) = [9.84863704]
bas 2, expnt(s) = [2.05031882]
bas 3, expnt(s) = [0.10386429]
CPU time:       125.05
arg.atm = [[ 4 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]]
arg.env = [ 0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
  0.          0.          0.          0.          0.          0.
 65.99108757 58.49637968  9.84863704 14.04582081  2.05031882  4.32893507
  0.10386429  0.46223702]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 3.984812228403838
cond(S) = 9.036351038663973
E1 = -18.952079319044106  E_coul = 4.509839258561219
init E= -14.4422400604829
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.302617129983145  LUMO = 8.17622918516143
  mo_energy =
[-4.67630804 -0.30261713  8.17622919 91.04249688]
E1 = -18.973877074515713  E_coul = 4.505986663671654
cycle= 1 E= -14.4678904108441  delta_E= -0.0257  |g|= 0.0166  |ddm|= 0.0871
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0186887
diis-c [-3.49266068e-04  1.00000000e+00]
  HOMO = -0.299888110442417  LUMO = 8.17869686859163
  mo_energy =
[-4.68106824 -0.29988811  8.17869687 91.02568123]
E1 = -18.97283528310701  E_coul = 4.5049355328713725
cycle= 2 E= -14.4678997502356  delta_E= -9.34e-06  |g|= 0.000615  |ddm|= 0.00361
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000648023
diis-c [-2.27900966e-07 -2.40192683e-02  1.02401927e+00]
  HOMO = -0.299920858321451  LUMO = 8.17842180861799
  mo_energy =
[-4.68157389 -0.29992086  8.17842181 91.02478506]
E1 = -18.97280456879852  E_coul = 4.50490479891429
cycle= 3 E= -14.4678997698842  delta_E= -1.96e-08  |g|= 1.73e-05  |ddm|= 0.000164
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.25107e-05
diis-c [-1.04310293e-11  1.01079400e-03 -4.95805519e-02  1.04856976e+00]
  HOMO = -0.299921471073863  LUMO = 8.17842377205989
  mo_energy =
[-4.68157623 -0.29992147  8.17842377 91.0248023 ]
E1 = -18.97280442914761  E_coul = 4.504904659247406
cycle= 4 E= -14.4678997699002  delta_E= -1.6e-11  |g|= 1.14e-07  |ddm|= 4.27e-06
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
E1 = -18.97280442914761  E_coul = 4.504904659247406
  HOMO = -0.299921468418568  LUMO = 8.17842389508646
  mo_energy =
[-4.68157609 -0.29992147  8.1784239  91.02480281]
E1 = -18.97280443946657  E_coul = 4.504904669566364
Extra cycle  E= -14.4678997699002  delta_E=    0  |g|= 4.89e-09  |ddm|= 1.56e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [65.99108757  9.84863704  2.05031882  0.10386429]
E = -14.467899769900207
E = -14.467899769900207
exp = [6.5991087567228320e+01,9.8486370415898303e+00,2.0503188162180708e+00,1.0386429206483960e-01]
