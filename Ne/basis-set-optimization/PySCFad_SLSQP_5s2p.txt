#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  453.983950531        1
[INPUT] 0    0    [1    /1   ]  68.3742158008        1
[INPUT] 0    0    [1    /1   ]  14.8245283227        1
[INPUT] 0    0    [1    /1   ]  0.953860696336       1
[INPUT] 1    0    [1    /1   ]  5.31572988795        1
[INPUT] 1    0    [1    /1   ]  0.896518209808       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [1e-09, 1.0]], [0, [453.9839505308337, 1.0]], [0, [68.37421580081491, 1.0]], [0, [14.824528322712155, 1.0]], [0, [0.9538606963361832, 1.0]], [1, [5.315729887950344, 1.0]], [1, [0.8965182098083508, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1.e-09]
bas 1, expnt(s) = [453.98395053]
bas 2, expnt(s) = [68.3742158]
bas 3, expnt(s) = [14.82452832]
bas 4, expnt(s) = [0.9538607]
bas 5, expnt(s) = [5.31572989]
bas 6, expnt(s) = [0.89651821]
CPU time:         1.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.00000000e-09 4.49277867e-07 4.53983951e+02 2.48482266e+02
 6.83742158e+01 6.00736878e+01 1.48245283e+01 1.90875720e+01
 9.53860696e-01 2.43853358e+00 5.31572989e+00 2.35471323e+01
 8.96518210e-01 2.54497363e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825828120003957
cond(S) = 9.786158637554397
E1 = -180.7752754442117  E_coul = 54.33419735986062
init E= -126.441078084351
    CPU time for initialize scf      0.13 sec, wall time      0.13 sec
  HOMO = -0.651189402150984  LUMO = -8.78767435216356e-06
  mo_energy =
[-3.24538933e+01 -1.83669778e+00 -6.51189402e-01 -6.51189402e-01
 -6.51189402e-01 -8.78767435e-06  5.33124126e+00  5.33124126e+00
  5.33124126e+00  5.36740184e+01  6.25784026e+02]
E1 = -181.1742759034899  E_coul = 54.35847500428206
cycle= 1 E= -126.815800899208  delta_E= -0.375  |g|= 0.0853  |ddm|= 0.284
    CPU time for cycle= 1      0.28 sec, wall time      0.28 sec
diis-norm(errvec)=0.0875577
diis-c [-0.00766634  1.        ]
  HOMO = -0.607252832503066  LUMO = 1.50029427376428e-09
  mo_energy =
[-3.26074640e+01 -1.79953002e+00 -6.07252833e-01 -6.07252833e-01
 -6.07252833e-01  1.50029427e-09  5.36083438e+00  5.36083438e+00
  5.36083438e+00  5.35580467e+01  6.25573517e+02]
E1 = -181.25118489642918  E_coul = 54.43523305069709
cycle= 2 E= -126.815951845732  delta_E= -0.000151  |g|= 0.0084  |ddm|= 0.0121
    CPU time for cycle= 2      0.08 sec, wall time      0.08 sec
diis-norm(errvec)=0.0102401
diis-c [-5.31888726e-05  7.61124493e-02  9.23887551e-01]
  HOMO = -0.602906533280228  LUMO = 1.5002950842451e-09
  mo_energy =
[-3.25901259e+01 -1.79443808e+00 -6.02906533e-01 -6.02906533e-01
 -6.02906533e-01  1.50029508e-09  5.36782872e+00  5.36782872e+00
  5.36782872e+00  5.35744393e+01  6.25594323e+02]
E1 = -181.2393695835504  E_coul = 54.42341369333729
cycle= 3 E= -126.815955890213  delta_E= -4.04e-06  |g|= 0.00068  |ddm|= 0.00187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000814637
diis-c [-8.61854093e-09 -1.89990528e-03  6.27699950e-02  9.39129910e-01]
  HOMO = -0.603229619235501  LUMO = 1.50029502528526e-09
  mo_energy =
[-3.25913349e+01 -1.79481474e+00 -6.03229619e-01 -6.03229619e-01
 -6.03229619e-01  1.50029503e-09  5.36731631e+00  5.36731631e+00
  5.36731631e+00  5.35733084e+01  6.25593127e+02]
E1 = -181.24023393762636  E_coul = 54.4242780221525
cycle= 4 E= -126.815955915474  delta_E= -2.53e-08  |g|= 1.22e-06  |ddm|= 0.000137
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.65148e-06
diis-c [-3.70179957e-14  2.66277041e-05 -1.09269374e-03 -1.61805116e-02
  1.01724658e+00]
  HOMO = -0.60322972621805  LUMO = 1.50029502546902e-09
  mo_energy =
[-3.25913348e+01 -1.79481482e+00 -6.03229726e-01 -6.03229726e-01
 -6.03229726e-01  1.50029503e-09  5.36731617e+00  5.36731617e+00
  5.36731617e+00  5.35733087e+01  6.25593129e+02]
E1 = -181.24023422881098  E_coul = 54.424278313337155
cycle= 5 E= -126.815955915474  delta_E= 4.26e-14  |g|= 6.59e-09  |ddm|= 5.97e-08
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.24023422881098  E_coul = 54.424278313337155
  HOMO = -0.603229724118116  LUMO = 1.50029502502921e-09
  mo_energy =
[-3.25913348e+01 -1.79481482e+00 -6.03229724e-01 -6.03229724e-01
 -6.03229724e-01  1.50029503e-09  5.36731617e+00  5.36731617e+00
  5.36731617e+00  5.35733087e+01  6.25593129e+02]
E1 = -181.24023422475327  E_coul = 54.42427830927951
Extra cycle  E= -126.815955915474  delta_E= 7.11e-14  |g|= 4.36e-10  |ddm|= 6.63e-10
    CPU time for scf_cycle      0.53 sec, wall time      0.54 sec
exp = [1.00000000e-09 4.53983951e+02 6.83742158e+01 1.48245283e+01
 9.53860696e-01 5.31572989e+00 8.96518210e-01]
E = -126.81595591547375
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  453.983950531        1
[INPUT] 0    0    [1    /1   ]  68.3742158008        1
[INPUT] 0    0    [1    /1   ]  14.8245283227        1
[INPUT] 0    0    [1    /1   ]  0.953860696336       1
[INPUT] 1    0    [1    /1   ]  5.31572988795        1
[INPUT] 1    0    [1    /1   ]  0.896518209808       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [1e-09, 1.0]], [0, [453.9839505308337, 1.0]], [0, [68.37421580081491, 1.0]], [0, [14.824528322712155, 1.0]], [0, [0.9538606963361832, 1.0]], [1, [5.315729887950344, 1.0]], [1, [0.8965182098083508, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1.e-09]
bas 1, expnt(s) = [453.98395053]
bas 2, expnt(s) = [68.3742158]
bas 3, expnt(s) = [14.82452832]
bas 4, expnt(s) = [0.9538607]
bas 5, expnt(s) = [5.31572989]
bas 6, expnt(s) = [0.89651821]
CPU time:         1.95
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.00000000e-09 4.49277867e-07 4.53983951e+02 2.48482266e+02
 6.83742158e+01 6.00736878e+01 1.48245283e+01 1.90875720e+01
 9.53860696e-01 2.43853358e+00 5.31572989e+00 2.35471323e+01
 8.96518210e-01 2.54497363e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825828120003957
cond(S) = 9.786158637554397
E1 = -180.7752754442117  E_coul = 54.33419735986062
init E= -126.441078084351
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651189402150984  LUMO = -8.78767435216356e-06
  mo_energy =
[-3.24538933e+01 -1.83669778e+00 -6.51189402e-01 -6.51189402e-01
 -6.51189402e-01 -8.78767435e-06  5.33124126e+00  5.33124126e+00
  5.33124126e+00  5.36740184e+01  6.25784026e+02]
E1 = -181.1742759034899  E_coul = 54.35847500428206
cycle= 1 E= -126.815800899208  delta_E= -0.375  |g|= 0.0853  |ddm|= 0.284
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0875577
diis-c [-0.00766634  1.        ]
  HOMO = -0.607252832503066  LUMO = 1.50029427376428e-09
  mo_energy =
[-3.26074640e+01 -1.79953002e+00 -6.07252833e-01 -6.07252833e-01
 -6.07252833e-01  1.50029427e-09  5.36083438e+00  5.36083438e+00
  5.36083438e+00  5.35580467e+01  6.25573517e+02]
E1 = -181.25118489642918  E_coul = 54.43523305069709
cycle= 2 E= -126.815951845732  delta_E= -0.000151  |g|= 0.0084  |ddm|= 0.0121
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0102401
diis-c [-5.31888726e-05  7.61124493e-02  9.23887551e-01]
  HOMO = -0.602906533280228  LUMO = 1.5002950842451e-09
  mo_energy =
[-3.25901259e+01 -1.79443808e+00 -6.02906533e-01 -6.02906533e-01
 -6.02906533e-01  1.50029508e-09  5.36782872e+00  5.36782872e+00
  5.36782872e+00  5.35744393e+01  6.25594323e+02]
E1 = -181.2393695835504  E_coul = 54.42341369333729
cycle= 3 E= -126.815955890213  delta_E= -4.04e-06  |g|= 0.00068  |ddm|= 0.00187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000814637
diis-c [-8.61854093e-09 -1.89990528e-03  6.27699950e-02  9.39129910e-01]
  HOMO = -0.603229619235501  LUMO = 1.50029502528526e-09
  mo_energy =
[-3.25913349e+01 -1.79481474e+00 -6.03229619e-01 -6.03229619e-01
 -6.03229619e-01  1.50029503e-09  5.36731631e+00  5.36731631e+00
  5.36731631e+00  5.35733084e+01  6.25593127e+02]
E1 = -181.24023393762636  E_coul = 54.4242780221525
cycle= 4 E= -126.815955915474  delta_E= -2.53e-08  |g|= 1.22e-06  |ddm|= 0.000137
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.65148e-06
diis-c [-3.70179957e-14  2.66277041e-05 -1.09269374e-03 -1.61805116e-02
  1.01724658e+00]
  HOMO = -0.60322972621805  LUMO = 1.50029502546902e-09
  mo_energy =
[-3.25913348e+01 -1.79481482e+00 -6.03229726e-01 -6.03229726e-01
 -6.03229726e-01  1.50029503e-09  5.36731617e+00  5.36731617e+00
  5.36731617e+00  5.35733087e+01  6.25593129e+02]
E1 = -181.24023422881098  E_coul = 54.424278313337155
cycle= 5 E= -126.815955915474  delta_E= 4.26e-14  |g|= 6.59e-09  |ddm|= 5.97e-08
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.24023422881098  E_coul = 54.424278313337155
  HOMO = -0.603229724118116  LUMO = 1.50029502502921e-09
  mo_energy =
[-3.25913348e+01 -1.79481482e+00 -6.03229724e-01 -6.03229724e-01
 -6.03229724e-01  1.50029503e-09  5.36731617e+00  5.36731617e+00
  5.36731617e+00  5.35733087e+01  6.25593129e+02]
E1 = -181.24023422475327  E_coul = 54.42427830927951
Extra cycle  E= -126.815955915474  delta_E= 7.11e-14  |g|= 4.36e-10  |ddm|= 6.63e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.786158637554397
E1 = -181.24023422475327  E_coul = 54.42427830927951
init E= -126.815955915474
    CPU time for initialize scf      0.26 sec, wall time      0.27 sec
  HOMO = -0.603229724364264  LUMO = 1.50029502502922e-09
  mo_energy =
[-3.25913348e+01 -1.79481482e+00 -6.03229724e-01 -6.03229724e-01
 -6.03229724e-01  1.50029503e-09  5.36731617e+00  5.36731617e+00
  5.36731617e+00  5.35733087e+01  6.25593129e+02]
E1 = -181.24023422545073  E_coul = 54.42427830997698
cycle= 1 E= -126.815955915474  delta_E=    0  |g|= 7.77e-11  |ddm|= 1.11e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.24023422545073  E_coul = 54.42427830997698
  HOMO = -0.603229724320872  LUMO = 1.50029502492079e-09
  mo_energy =
[-3.25913348e+01 -1.79481482e+00 -6.03229724e-01 -6.03229724e-01
 -6.03229724e-01  1.50029502e-09  5.36731617e+00  5.36731617e+00
  5.36731617e+00  5.35733087e+01  6.25593129e+02]
E1 = -181.24023422533432  E_coul = 54.424278309860576
Extra cycle  E= -126.815955915474  delta_E=    0  |g|= 1.28e-11  |ddm|= 1.84e-11
    CPU time for scf_cycle      1.00 sec, wall time      1.01 sec
exp = [1.00000000e-09 4.53983951e+02 6.83742158e+01 1.48245283e+01
 9.53860696e-01 5.31572989e+00 8.96518210e-01]
grad_E = [-1.34091915e-04  2.89159333e-09 -8.48589190e-08  5.55056984e-07
 -6.10274252e-07 -1.03106792e-07  1.83105881e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.000134092914732      1
[INPUT] 0    0    [1    /1   ]  453.983950528        1
[INPUT] 0    0    [1    /1   ]  68.3742158857        1
[INPUT] 0    0    [1    /1   ]  14.8245277677        1
[INPUT] 0    0    [1    /1   ]  0.95386130661        1
[INPUT] 1    0    [1    /1   ]  5.31572999106        1
[INPUT] 1    0    [1    /1   ]  0.89651637875        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.00013409291473151028, 1.0]], [0, [453.9839505279421, 1.0]], [0, [68.37421588567383, 1.0]], [0, [14.824527767655171, 1.0]], [0, [0.9538613066104357, 1.0]], [1, [5.315729991057136, 1.0]], [1, [0.8965163787495405, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.00013409]
bas 1, expnt(s) = [453.98395053]
bas 2, expnt(s) = [68.37421589]
bas 3, expnt(s) = [14.82452777]
bas 4, expnt(s) = [0.95386131]
bas 5, expnt(s) = [5.31572999]
bas 6, expnt(s) = [0.89651638]
CPU time:         6.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.34092915e-04 3.14825134e-03 4.53983951e+02 2.48482266e+02
 6.83742159e+01 6.00736878e+01 1.48245278e+01 1.90875714e+01
 9.53861307e-01 2.43853475e+00 5.31572999e+00 2.35471328e+01
 8.96516379e-01 2.54496713e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825831075193237
cond(S) = 9.786175494488242
E1 = -180.7752574002264  E_coul = 54.334174077154245
init E= -126.441083323072
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651191710459864  LUMO = -0.00300058729793828
  mo_energy =
[-3.24538968e+01 -1.83670119e+00 -6.51191710e-01 -6.51191710e-01
 -6.51191710e-01 -3.00058730e-03  5.33123186e+00  5.33123186e+00
  5.33123186e+00  5.36740312e+01  6.25784032e+02]
E1 = -181.17421118572648  E_coul = 54.35840588805252
cycle= 1 E= -126.815805297674  delta_E= -0.375  |g|= 0.0853  |ddm|= 0.284
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0875617
diis-c [-0.00766705  1.        ]
  HOMO = -0.607258880046184  LUMO = 0.000215410266104146
  mo_energy =
[-3.26074762e+01 -1.79953642e+00 -6.07258880e-01 -6.07258880e-01
 -6.07258880e-01  2.15410266e-04  5.36082004e+00  5.36082004e+00
  5.36082004e+00  5.35580514e+01  6.25573513e+02]
E1 = -181.25112754691006  E_coul = 54.435171276107965
cycle= 2 E= -126.815956270802  delta_E= -0.000151  |g|= 0.0084  |ddm|= 0.0121
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0102412
diis-c [-5.31950428e-05  7.61204157e-02  9.23879584e-01]
  HOMO = -0.602912189973396  LUMO = 0.000215450224277268
  mo_energy =
[-3.25901367e+01 -1.79444404e+00 -6.02912190e-01 -6.02912190e-01
 -6.02912190e-01  2.15450224e-04  5.36781499e+00  5.36781499e+00
  5.36781499e+00  5.35744455e+01  6.25594321e+02]
E1 = -181.23931071948692  E_coul = 54.423350403270426
cycle= 3 E= -126.815960316216  delta_E= -4.05e-06  |g|= 0.00068  |ddm|= 0.00187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000814689
diis-c [-8.61975910e-09 -1.89994493e-03  6.27669022e-02  9.39133043e-01]
  HOMO = -0.603235305450821  LUMO = 0.000215447213335019
  mo_energy =
[-3.25913457e+01 -1.79482071e+00 -6.03235305e-01 -6.03235305e-01
 -6.03235305e-01  2.15447213e-04  5.36730255e+00  5.36730255e+00
  5.36730255e+00  5.35733146e+01  6.25593125e+02]
E1 = -181.24017515423571  E_coul = 54.42421481275472
cycle= 4 E= -126.815960341481  delta_E= -2.53e-08  |g|= 1.22e-06  |ddm|= 0.000137
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.65154e-06
diis-c [-3.70348155e-14  2.66326352e-05 -1.09284104e-03 -1.61819305e-02
  1.01724814e+00]
  HOMO = -0.603235411896144  LUMO = 0.000215447213258142
  mo_energy =
[-3.25913456e+01 -1.79482079e+00 -6.03235412e-01 -6.03235412e-01
 -6.03235412e-01  2.15447213e-04  5.36730241e+00  5.36730241e+00
  5.36730241e+00  5.35733148e+01  6.25593127e+02]
E1 = -181.24017544427008  E_coul = 54.424215102789084
cycle= 5 E= -126.815960341481  delta_E=    0  |g|= 6.59e-09  |ddm|= 5.95e-08
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.24017544427008  E_coul = 54.424215102789084
  HOMO = -0.603235409797391  LUMO = 0.000215447213281445
  mo_energy =
[-3.25913456e+01 -1.79482079e+00 -6.03235410e-01 -6.03235410e-01
 -6.03235410e-01  2.15447213e-04  5.36730242e+00  5.36730242e+00
  5.36730242e+00  5.35733148e+01  6.25593127e+02]
E1 = -181.24017544021507  E_coul = 54.424215098734166
Extra cycle  E= -126.815960341481  delta_E= 9.95e-14  |g|= 4.35e-10  |ddm|= 6.63e-10
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.34092915e-04 4.53983951e+02 6.83742159e+01 1.48245278e+01
 9.53861307e-01 5.31572999e+00 8.96516379e-01]
E = -126.8159603414809
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.000134092914732      1
[INPUT] 0    0    [1    /1   ]  453.983950528        1
[INPUT] 0    0    [1    /1   ]  68.3742158857        1
[INPUT] 0    0    [1    /1   ]  14.8245277677        1
[INPUT] 0    0    [1    /1   ]  0.95386130661        1
[INPUT] 1    0    [1    /1   ]  5.31572999106        1
[INPUT] 1    0    [1    /1   ]  0.89651637875        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.00013409291473151028, 1.0]], [0, [453.9839505279421, 1.0]], [0, [68.37421588567383, 1.0]], [0, [14.824527767655171, 1.0]], [0, [0.9538613066104357, 1.0]], [1, [5.315729991057136, 1.0]], [1, [0.8965163787495405, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.00013409]
bas 1, expnt(s) = [453.98395053]
bas 2, expnt(s) = [68.37421589]
bas 3, expnt(s) = [14.82452777]
bas 4, expnt(s) = [0.95386131]
bas 5, expnt(s) = [5.31572999]
bas 6, expnt(s) = [0.89651638]
CPU time:         7.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.34092915e-04 3.14825134e-03 4.53983951e+02 2.48482266e+02
 6.83742159e+01 6.00736878e+01 1.48245278e+01 1.90875714e+01
 9.53861307e-01 2.43853475e+00 5.31572999e+00 2.35471328e+01
 8.96516379e-01 2.54496713e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825831075193237
cond(S) = 9.786175494488242
E1 = -180.7752574002264  E_coul = 54.334174077154245
init E= -126.441083323072
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651191710459864  LUMO = -0.00300058729793828
  mo_energy =
[-3.24538968e+01 -1.83670119e+00 -6.51191710e-01 -6.51191710e-01
 -6.51191710e-01 -3.00058730e-03  5.33123186e+00  5.33123186e+00
  5.33123186e+00  5.36740312e+01  6.25784032e+02]
E1 = -181.17421118572648  E_coul = 54.35840588805252
cycle= 1 E= -126.815805297674  delta_E= -0.375  |g|= 0.0853  |ddm|= 0.284
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0875617
diis-c [-0.00766705  1.        ]
  HOMO = -0.607258880046184  LUMO = 0.000215410266104146
  mo_energy =
[-3.26074762e+01 -1.79953642e+00 -6.07258880e-01 -6.07258880e-01
 -6.07258880e-01  2.15410266e-04  5.36082004e+00  5.36082004e+00
  5.36082004e+00  5.35580514e+01  6.25573513e+02]
E1 = -181.25112754691006  E_coul = 54.435171276107965
cycle= 2 E= -126.815956270802  delta_E= -0.000151  |g|= 0.0084  |ddm|= 0.0121
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0102412
diis-c [-5.31950428e-05  7.61204157e-02  9.23879584e-01]
  HOMO = -0.602912189973396  LUMO = 0.000215450224277268
  mo_energy =
[-3.25901367e+01 -1.79444404e+00 -6.02912190e-01 -6.02912190e-01
 -6.02912190e-01  2.15450224e-04  5.36781499e+00  5.36781499e+00
  5.36781499e+00  5.35744455e+01  6.25594321e+02]
E1 = -181.23931071948692  E_coul = 54.423350403270426
cycle= 3 E= -126.815960316216  delta_E= -4.05e-06  |g|= 0.00068  |ddm|= 0.00187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000814689
diis-c [-8.61975910e-09 -1.89994493e-03  6.27669022e-02  9.39133043e-01]
  HOMO = -0.603235305450821  LUMO = 0.000215447213335019
  mo_energy =
[-3.25913457e+01 -1.79482071e+00 -6.03235305e-01 -6.03235305e-01
 -6.03235305e-01  2.15447213e-04  5.36730255e+00  5.36730255e+00
  5.36730255e+00  5.35733146e+01  6.25593125e+02]
E1 = -181.24017515423571  E_coul = 54.42421481275472
cycle= 4 E= -126.815960341481  delta_E= -2.53e-08  |g|= 1.22e-06  |ddm|= 0.000137
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.65154e-06
diis-c [-3.70348155e-14  2.66326352e-05 -1.09284104e-03 -1.61819305e-02
  1.01724814e+00]
  HOMO = -0.603235411896144  LUMO = 0.000215447213258142
  mo_energy =
[-3.25913456e+01 -1.79482079e+00 -6.03235412e-01 -6.03235412e-01
 -6.03235412e-01  2.15447213e-04  5.36730241e+00  5.36730241e+00
  5.36730241e+00  5.35733148e+01  6.25593127e+02]
E1 = -181.24017544427008  E_coul = 54.424215102789084
cycle= 5 E= -126.815960341481  delta_E=    0  |g|= 6.59e-09  |ddm|= 5.95e-08
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.24017544427008  E_coul = 54.424215102789084
  HOMO = -0.603235409797391  LUMO = 0.000215447213281445
  mo_energy =
[-3.25913456e+01 -1.79482079e+00 -6.03235410e-01 -6.03235410e-01
 -6.03235410e-01  2.15447213e-04  5.36730242e+00  5.36730242e+00
  5.36730242e+00  5.35733148e+01  6.25593127e+02]
E1 = -181.24017544021507  E_coul = 54.424215098734166
Extra cycle  E= -126.815960341481  delta_E= 9.95e-14  |g|= 4.35e-10  |ddm|= 6.63e-10
    CPU time for scf_cycle      0.07 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 9.786175494488242
E1 = -181.24017544021507  E_coul = 54.424215098734166
init E= -126.815960341481
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.603235410043374  LUMO = 0.000215447213279247
  mo_energy =
[-3.25913456e+01 -1.79482079e+00 -6.03235410e-01 -6.03235410e-01
 -6.03235410e-01  2.15447213e-04  5.36730241e+00  5.36730241e+00
  5.36730241e+00  5.35733148e+01  6.25593127e+02]
E1 = -181.2401754409122  E_coul = 54.424215099431244
cycle= 1 E= -126.815960341481  delta_E= -4.26e-14  |g|= 7.76e-11  |ddm|= 1.11e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.2401754409122  E_coul = 54.424215099431244
  HOMO = -0.603235410000007  LUMO = 0.000215447213279737
  mo_energy =
[-3.25913456e+01 -1.79482079e+00 -6.03235410e-01 -6.03235410e-01
 -6.03235410e-01  2.15447213e-04  5.36730241e+00  5.36730241e+00
  5.36730241e+00  5.35733148e+01  6.25593127e+02]
E1 = -181.2401754407958  E_coul = 54.424215099314836
Extra cycle  E= -126.815960341481  delta_E= -2.84e-14  |g|= 1.28e-11  |ddm|= 1.84e-11
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.34092915e-04 4.53983951e+02 6.83742159e+01 1.48245278e+01
 9.53861307e-01 5.31572999e+00 8.96516379e-01]
grad_E = [-4.96254634e-02  2.48737658e-09 -6.67190479e-08  3.33627164e-07
 -2.08315829e-05  2.69051219e-06 -2.52687731e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.248495447201       1
[INPUT] 0    0    [1    /1   ]  453.98395051         1
[INPUT] 0    0    [1    /1   ]  68.3742163674        1
[INPUT] 0    0    [1    /1   ]  14.8245251308        1
[INPUT] 0    0    [1    /1   ]  0.953966529667       1
[INPUT] 1    0    [1    /1   ]  5.31571671845        1
[INPUT] 1    0    [1    /1   ]  0.896639526778       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.24849544720108224, 1.0]], [0, [453.9839505104584, 1.0]], [0, [68.37421636737751, 1.0]], [0, [14.82452513075117, 1.0]], [0, [0.9539665296666023, 1.0]], [1, [5.315716718453529, 1.0]], [1, [0.896639526778353, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.24849545]
bas 1, expnt(s) = [453.98395051]
bas 2, expnt(s) = [68.37421637]
bas 3, expnt(s) = [14.82452513]
bas 4, expnt(s) = [0.95396653]
bas 5, expnt(s) = [5.31571672]
bas 6, expnt(s) = [0.89663953]
CPU time:         9.22
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.48495447e-01 8.89209004e-01 4.53983951e+02 2.48482266e+02
 6.83742164e+01 6.00736881e+01 1.48245251e+01 1.90875689e+01
 9.53966530e-01 2.43873649e+00 5.31571672e+00 2.35470594e+01
 8.96639527e-01 2.54540412e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.845331048056629
cond(S) = 11.720325398656884
E1 = -180.46716018352495  E_coul = 53.99661000932169
init E= -126.470550174203
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.679693726739283  LUMO = 0.747913143769863
  mo_energy =
[-32.52582807  -1.87909101  -0.67969373  -0.67969373  -0.67969373
   0.74791314   5.28930782   5.28930782   5.28930782  54.34877918
 626.19956057]
E1 = -180.65654395181755  E_coul = 53.77826577041494
cycle= 1 E= -126.878278181403  delta_E= -0.408  |g|= 0.104  |ddm|= 0.288
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.118745
diis-c [-0.01410045  1.        ]
  HOMO = -0.657456656475689  LUMO = 0.810058535307096
  mo_energy =
[-32.72941119  -1.84848657  -0.65745666  -0.65745666  -0.65745666
   0.81005854   5.29150722   5.29150722   5.29150722  54.19277901
 625.90189383]
E1 = -180.80229759547305  E_coul = 53.923601789268375
cycle= 2 E= -126.878695806205  delta_E= -0.000418  |g|= 0.0171  |ddm|= 0.0267
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0217719
diis-c [-1.50100516e-04  1.32229201e-01  8.67770799e-01]
  HOMO = -0.649147747782186  LUMO = 0.81213982381709
  mo_energy =
[-32.69953383  -1.84019425  -0.64914775  -0.64914775  -0.64914775
   0.81213982   5.30440226   5.30440226   5.30440226  54.22119445
 625.93649382]
E1 = -180.77529147272236  E_coul = 53.89657705555269
cycle= 3 E= -126.87871441717  delta_E= -1.86e-05  |g|= 0.000938  |ddm|= 0.0051
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00118395
diis-c [-4.10470175e-08 -4.07547731e-03  3.30266334e-02  9.71048844e-01]
  HOMO = -0.649587661560106  LUMO = 0.812039338582845
  mo_energy =
[-32.7010159   -1.84060238  -0.64958766  -0.64958766  -0.64958766
   0.81203934   5.30373516   5.30373516   5.30373516  54.21984988
 625.93502735]
E1 = -180.77660023875418  E_coul = 53.897885767888496
cycle= 4 E= -126.878714470866  delta_E= -5.37e-08  |g|= 1.91e-05  |ddm|= 0.00021
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.11667e-05
diis-c [-2.03589748e-10  1.66137987e-04 -1.75696097e-03 -5.66878447e-02
  1.05827867e+00]
  HOMO = -0.649593684809374  LUMO = 0.812038971480799
  mo_energy =
[-32.70102512  -1.84060361  -0.64959368  -0.64959368  -0.64959368
   0.81203897   5.30372734   5.30372734   5.30372734  54.21984165
 625.93501441]
E1 = -180.77659714573997  E_coul = 53.89788267480989
cycle= 5 E= -126.87871447093  delta_E= -6.44e-11  |g|= 2.86e-06  |ddm|= 1.8e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.77659714573997  E_coul = 53.89788267480989
  HOMO = -0.649594796061378  LUMO = 0.812038849693242
  mo_energy =
[-32.70102744  -1.84060407  -0.6495948   -0.6495948   -0.6495948
   0.81203885   5.30372583   5.30372583   5.30372583  54.2198395
 625.93501125]
E1 = -180.77659765752588  E_coul = 53.89788318659457
Extra cycle  E= -126.878714470931  delta_E= -1.24e-12  |g|= 4.99e-07  |ddm|= 2.35e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.48495447e-01 4.53983951e+02 6.83742164e+01 1.48245251e+01
 9.53966530e-01 5.31571672e+00 8.96639527e-01]
E = -126.87871447093131
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.248495447201       1
[INPUT] 0    0    [1    /1   ]  453.98395051         1
[INPUT] 0    0    [1    /1   ]  68.3742163674        1
[INPUT] 0    0    [1    /1   ]  14.8245251308        1
[INPUT] 0    0    [1    /1   ]  0.953966529667       1
[INPUT] 1    0    [1    /1   ]  5.31571671845        1
[INPUT] 1    0    [1    /1   ]  0.896639526778       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.24849544720108224, 1.0]], [0, [453.9839505104584, 1.0]], [0, [68.37421636737751, 1.0]], [0, [14.82452513075117, 1.0]], [0, [0.9539665296666023, 1.0]], [1, [5.315716718453529, 1.0]], [1, [0.896639526778353, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.24849545]
bas 1, expnt(s) = [453.98395051]
bas 2, expnt(s) = [68.37421637]
bas 3, expnt(s) = [14.82452513]
bas 4, expnt(s) = [0.95396653]
bas 5, expnt(s) = [5.31571672]
bas 6, expnt(s) = [0.89663953]
CPU time:         9.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.48495447e-01 8.89209004e-01 4.53983951e+02 2.48482266e+02
 6.83742164e+01 6.00736881e+01 1.48245251e+01 1.90875689e+01
 9.53966530e-01 2.43873649e+00 5.31571672e+00 2.35470594e+01
 8.96639527e-01 2.54540412e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.845331048056629
cond(S) = 11.720325398656884
E1 = -180.46716018352495  E_coul = 53.99661000932169
init E= -126.470550174203
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.679693726739283  LUMO = 0.747913143769863
  mo_energy =
[-32.52582807  -1.87909101  -0.67969373  -0.67969373  -0.67969373
   0.74791314   5.28930782   5.28930782   5.28930782  54.34877918
 626.19956057]
E1 = -180.65654395181755  E_coul = 53.77826577041494
cycle= 1 E= -126.878278181403  delta_E= -0.408  |g|= 0.104  |ddm|= 0.288
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.118745
diis-c [-0.01410045  1.        ]
  HOMO = -0.657456656475689  LUMO = 0.810058535307096
  mo_energy =
[-32.72941119  -1.84848657  -0.65745666  -0.65745666  -0.65745666
   0.81005854   5.29150722   5.29150722   5.29150722  54.19277901
 625.90189383]
E1 = -180.80229759547305  E_coul = 53.923601789268375
cycle= 2 E= -126.878695806205  delta_E= -0.000418  |g|= 0.0171  |ddm|= 0.0267
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0217719
diis-c [-1.50100516e-04  1.32229201e-01  8.67770799e-01]
  HOMO = -0.649147747782186  LUMO = 0.81213982381709
  mo_energy =
[-32.69953383  -1.84019425  -0.64914775  -0.64914775  -0.64914775
   0.81213982   5.30440226   5.30440226   5.30440226  54.22119445
 625.93649382]
E1 = -180.77529147272236  E_coul = 53.89657705555269
cycle= 3 E= -126.87871441717  delta_E= -1.86e-05  |g|= 0.000938  |ddm|= 0.0051
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00118395
diis-c [-4.10470175e-08 -4.07547731e-03  3.30266334e-02  9.71048844e-01]
  HOMO = -0.649587661560106  LUMO = 0.812039338582845
  mo_energy =
[-32.7010159   -1.84060238  -0.64958766  -0.64958766  -0.64958766
   0.81203934   5.30373516   5.30373516   5.30373516  54.21984988
 625.93502735]
E1 = -180.77660023875418  E_coul = 53.897885767888496
cycle= 4 E= -126.878714470866  delta_E= -5.37e-08  |g|= 1.91e-05  |ddm|= 0.00021
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.11667e-05
diis-c [-2.03589748e-10  1.66137987e-04 -1.75696097e-03 -5.66878447e-02
  1.05827867e+00]
  HOMO = -0.649593684809374  LUMO = 0.812038971480799
  mo_energy =
[-32.70102512  -1.84060361  -0.64959368  -0.64959368  -0.64959368
   0.81203897   5.30372734   5.30372734   5.30372734  54.21984165
 625.93501441]
E1 = -180.77659714573997  E_coul = 53.89788267480989
cycle= 5 E= -126.87871447093  delta_E= -6.44e-11  |g|= 2.86e-06  |ddm|= 1.8e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.77659714573997  E_coul = 53.89788267480989
  HOMO = -0.649594796061378  LUMO = 0.812038849693242
  mo_energy =
[-32.70102744  -1.84060407  -0.6495948   -0.6495948   -0.6495948
   0.81203885   5.30372583   5.30372583   5.30372583  54.2198395
 625.93501125]
E1 = -180.77659765752588  E_coul = 53.89788318659457
Extra cycle  E= -126.878714470931  delta_E= -1.24e-12  |g|= 4.99e-07  |ddm|= 2.35e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 11.720325398656884
E1 = -180.77659765752588  E_coul = 53.89788318659457
init E= -126.878714470931
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.649594820356897  LUMO = 0.812038873080556
  mo_energy =
[-32.70102721  -1.84060397  -0.64959482  -0.64959482  -0.64959482
   0.81203887   5.30372583   5.30372583   5.30372583  54.21983973
 625.93501142]
E1 = -180.7765971488117  E_coul = 53.89788267788026
cycle= 1 E= -126.878714470931  delta_E= -1.28e-13  |g|= 1.09e-07  |ddm|= 5.16e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.7765971488117  E_coul = 53.89788267788026
  HOMO = -0.649594865233962  LUMO = 0.812038867636946
  mo_energy =
[-32.70102731  -1.84060399  -0.64959487  -0.64959487  -0.64959487
   0.81203887   5.30372577   5.30372577   5.30372577  54.21983964
 625.93501129]
E1 = -180.77659718052436  E_coul = 53.89788270959298
Extra cycle  E= -126.878714470931  delta_E= 5.68e-14  |g|= 1.87e-08  |ddm|= 8.53e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.48495447e-01 4.53983951e+02 6.83742164e+01 1.48245251e+01
 9.53966530e-01 5.31571672e+00 8.96639527e-01]
grad_E = [ 5.65436439e-04 -1.08003158e-05  5.44091945e-04 -8.30856538e-03
 -4.67715461e-01  3.71860285e-03 -7.89671638e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  4.7227241403         1
[INPUT] 0    0    [1    /1   ]  453.983960991        1
[INPUT] 0    0    [1    /1   ]  68.3736825818        1
[INPUT] 0    0    [1    /1   ]  14.8327443596        1
[INPUT] 0    0    [1    /1   ]  1.42049388403        1
[INPUT] 1    0    [1    /1   ]  5.31178086186        1
[INPUT] 1    0    [1    /1   ]  0.977350583235       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [4.722724140303898, 1.0]], [0, [453.98396099112057, 1.0]], [0, [68.37368258181169, 1.0]], [0, [14.832744359576676, 1.0]], [0, [1.420493884031025, 1.0]], [1, [5.311780861861402, 1.0]], [1, [0.9773505832352711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [4.72272414]
bas 1, expnt(s) = [453.98396099]
bas 2, expnt(s) = [68.37368258]
bas 3, expnt(s) = [14.83274436]
bas 4, expnt(s) = [1.42049388]
bas 5, expnt(s) = [5.31178086]
bas 6, expnt(s) = [0.97735058]
CPU time:        11.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           4.72272414
   8.09393026 453.98396099 248.48227038  68.37368258  60.07333641
  14.83274436  19.09550543   1.42049388   3.28733944   5.31178086
  23.52526801   0.97735058   2.83496279]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.701482168077115
cond(S) = 49.385798058735844
E1 = -179.8984128667251  E_coul = 54.23440842435992
init E= -125.664004442365
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651824953961421  LUMO = 5.60180956585259
  mo_energy =
[-32.52149606  -1.65341742  -0.65182495  -0.65182495  -0.65182495
   5.60180957   5.60180957   5.60180957  10.17405899  74.52486738
 641.67684802]
E1 = -183.43043422156683  E_coul = 56.951055447286144
cycle= 1 E= -126.479378774281  delta_E= -0.815  |g|= 0.28  |ddm|= 1.21
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.319872
diis-c [-0.10231798  1.        ]
  HOMO = -0.391563794866316  LUMO = 5.92898695751788
  mo_energy =
[-3.21461278e+01 -1.44598500e+00 -3.91563795e-01 -3.91563795e-01
 -3.91563795e-01  5.92898696e+00  5.92898696e+00  5.92898696e+00
  1.04799697e+01  7.49057193e+01  6.41996195e+02]
E1 = -183.07542912553765  E_coul = 56.59118328170068
cycle= 2 E= -126.484245843837  delta_E= -0.00487  |g|= 0.0496  |ddm|= 0.0807
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0476386
diis-c [-0.0009386   0.10279654  0.89720346]
  HOMO = -0.41134486454757  LUMO = 5.89773820352949
  mo_energy =
[-3.22199781e+01 -1.47409406e+00 -4.11344865e-01 -4.11344865e-01
 -4.11344865e-01  5.89773820e+00  5.89773820e+00  5.89773820e+00
  1.04383199e+01  7.48367800e+01  6.41919705e+02]
E1 = -183.1312910083941  E_coul = 56.646934291356395
cycle= 3 E= -126.484356717038  delta_E= -0.000111  |g|= 0.0041  |ddm|= 0.0173
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00454136
diis-c [-2.79993842e-06 -1.63710179e-02 -2.78723930e-02  1.04424341e+00]
  HOMO = -0.410408807752977  LUMO = 5.89935245244081
  mo_energy =
[-3.22155007e+01 -1.47369516e+00 -4.10408808e-01 -4.10408808e-01
 -4.10408808e-01  5.89935245e+00  5.89935245e+00  5.89935245e+00
  1.04391298e+01  7.48408948e+01  6.41926973e+02]
E1 = -183.12811246584724  E_coul = 56.6437547009615
cycle= 4 E= -126.484357764886  delta_E= -1.05e-06  |g|= 5.04e-05  |ddm|= 0.00169
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.73751e-05
diis-c [-6.67515746e-10  4.36107121e-04  1.23311017e-03 -3.25589781e-02
  1.03088976e+00]
  HOMO = -0.410394767825641  LUMO = 5.8993688335585
  mo_energy =
[-3.22154541e+01 -1.47368037e+00 -4.10394768e-01 -4.10394768e-01
 -4.10394768e-01  5.89936883e+00  5.89936883e+00  5.89936883e+00
  1.04391474e+01  7.48409301e+01  6.41927001e+02]
E1 = -183.1280770289278  E_coul = 56.643719263975825
cycle= 5 E= -126.484357764952  delta_E= -6.62e-11  |g|= 5.33e-07  |ddm|= 6.84e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -183.1280770289278  E_coul = 56.643719263975825
  HOMO = -0.410394823054508  LUMO = 5.8993688228208
  mo_energy =
[-3.22154543e+01 -1.47368046e+00 -4.10394823e-01 -4.10394823e-01
 -4.10394823e-01  5.89936882e+00  5.89936882e+00  5.89936882e+00
  1.04391473e+01  7.48409297e+01  6.41927000e+02]
E1 = -183.12807728626177  E_coul = 56.643719521309755
Extra cycle  E= -126.484357764952  delta_E= -4.26e-14  |g|= 3.77e-08  |ddm|= 1.41e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [  4.72272414 453.98396099  68.37368258  14.83274436   1.42049388
   5.31178086   0.97735058]
E = -126.48435776495202
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1.05456090995        1
[INPUT] 0    0    [1    /1   ]  453.983952399        1
[INPUT] 0    0    [1    /1   ]  68.374120202         1
[INPUT] 0    0    [1    /1   ]  14.8260058857        1
[INPUT] 0    0    [1    /1   ]  1.03801489053        1
[INPUT] 1    0    [1    /1   ]  5.31500764472        1
[INPUT] 1    0    [1    /1   ]  0.911180221842       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [1.0545609099457462, 1.0]], [0, [453.98395239862737, 1.0]], [0, [68.37412020195133, 1.0]], [0, [14.826005885746293, 1.0]], [0, [1.0380148905290008, 1.0]], [1, [5.315007644715274, 1.0]], [1, [0.9111802218420287, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1.05456091]
bas 1, expnt(s) = [453.9839524]
bas 2, expnt(s) = [68.3741202]
bas 3, expnt(s) = [14.82600589]
bas 4, expnt(s) = [1.03801489]
bas 5, expnt(s) = [5.31500764]
bas 6, expnt(s) = [0.91118022]
CPU time:        11.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           1.05456091
   2.62917065 453.9839524  248.48226685  68.3741202   60.07362478
  14.82600589  19.08899879   1.03801489   2.59817089   5.31500764
  23.54313318   0.91118022   2.59710643]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.822483357015834
cond(S) = 63950.55767735489
E1 = -180.55985781627643  E_coul = 54.08831290703276
init E= -126.471544909244
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.670293320916675  LUMO = 2.69838844802926
  mo_energy =
[-32.53805698  -1.84171478  -0.67029332  -0.67029332  -0.67029332
   2.69838845   5.35113296   5.35113296   5.35113296  57.89527875
 628.60871316]
E1 = -181.43034357426535  E_coul = 54.56476113655804
cycle= 1 E= -126.865582437707  delta_E= -0.394  |g|= 0.0826  |ddm|=  245
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0456976
diis-c [-0.00208827  1.        ]
  HOMO = -0.589770980273058  LUMO = 2.78585046074279
  mo_energy =
[-3.26071333e+01 -1.77417188e+00 -5.89770980e-01 -5.89770980e-01
 -5.89770980e-01  2.78585046e+00  5.43316555e+00  5.43316555e+00
  5.43316555e+00  5.78596573e+01  6.28434237e+02]
E1 = -181.47260137347246  E_coul = 54.60654678836938
cycle= 2 E= -126.866054585103  delta_E= -0.000472  |g|= 0.0109  |ddm|= 35.5
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00998798
diis-c [-9.91898216e-05 -1.72192765e-02  1.01721928e+00]
  HOMO = -0.586288022443235  LUMO = 2.78669140017698
  mo_energy =
[-3.25975699e+01 -1.77296645e+00 -5.86288022e-01 -5.86288022e-01
 -5.86288022e-01  2.78669140e+00  5.43829309e+00  5.43829309e+00
  5.43829309e+00  5.78686239e+01  6.28449086e+02]
E1 = -181.46775089601985  E_coul = 54.6016835868477
cycle= 3 E= -126.866067309172  delta_E= -1.27e-05  |g|= 0.00171  |ddm|= 4.26
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00094545
diis-c [-8.55549045e-07  4.07163333e-03  2.44753286e-03  9.93480834e-01]
  HOMO = -0.586553692673992  LUMO = 2.78623563715174
  mo_energy =
[-3.25990128e+01 -1.77358719e+00 -5.86553693e-01 -5.86553693e-01
 -5.86553693e-01  2.78623564e+00  5.43782020e+00  5.43782020e+00
  5.43782020e+00  5.78672296e+01  6.28447819e+02]
E1 = -181.46965516500623  E_coul = 54.6035875404708
cycle= 4 E= -126.866067624535  delta_E= -3.15e-07  |g|= 0.000366  |ddm|= 0.852
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000405111
diis-c [-5.05483897e-10  7.81701716e-04 -4.16942140e-02  3.24741372e-02
  1.00843838e+00]
  HOMO = -0.586409162382006  LUMO = 2.78628003726343
  mo_energy =
[-3.25985999e+01 -1.77352045e+00 -5.86409162e-01 -5.86409162e-01
 -5.86409162e-01  2.78628004e+00  5.43803362e+00  5.43803362e+00
  5.43803362e+00  5.78676060e+01  6.28448387e+02]
E1 = -181.46941484809136  E_coul = 54.60334721036219
cycle= 5 E= -126.866067637729  delta_E= -1.32e-08  |g|= 4.77e-06  |ddm|= 0.14
    CPU time for cycle= 5      0.02 sec, wall time      0.03 sec
diis-norm(errvec)=5.09493e-06
diis-c [-8.05201111e-16 -1.51613919e-06  1.83576206e-04 -9.35390395e-05
  8.00109310e-03  9.91910386e-01]
  HOMO = -0.586410924318417  LUMO = 2.78627956406179
  mo_energy =
[-3.25986049e+01 -1.77352117e+00 -5.86410924e-01 -5.86410924e-01
 -5.86410924e-01  2.78627956e+00  5.43803100e+00  5.43803100e+00
  5.43803100e+00  5.78676014e+01  6.28448380e+02]
E1 = -181.46941758507376  E_coul = 54.603349947342416
cycle= 6 E= -126.866067637731  delta_E= -2.16e-12  |g|= 5.27e-09  |ddm|= 0.00192
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.46941758507376  E_coul = 54.603349947342416
  HOMO = -0.586410923121679  LUMO = 2.78627956463198
  mo_energy =
[-3.25986049e+01 -1.77352117e+00 -5.86410923e-01 -5.86410923e-01
 -5.86410923e-01  2.78627956e+00  5.43803100e+00  5.43803100e+00
  5.43803100e+00  5.78676014e+01  6.28448380e+02]
E1 = -181.4694175848606  E_coul = 54.60334994713069
Extra cycle  E= -126.86606763773  delta_E= 1.42e-12  |g|= 5.72e-10  |ddm|= 1.31e-06
    CPU time for scf_cycle      0.12 sec, wall time      0.13 sec
exp = [  1.05456091 453.9839524   68.3741202   14.82600589   1.03801489
   5.31500764   0.91118022]
E = -126.86606763772991
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.554744972347       1
[INPUT] 0    0    [1    /1   ]  453.983951228        1
[INPUT] 0    0    [1    /1   ]  68.3741798311        1
[INPUT] 0    0    [1    /1   ]  14.825087716         1
[INPUT] 0    0    [1    /1   ]  0.985899135383       1
[INPUT] 1    0    [1    /1   ]  5.31544731912        1
[INPUT] 1    0    [1    /1   ]  0.902163992426       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.5547449723468401, 1.0]], [0, [453.98395122783296, 1.0]], [0, [68.37417983111902, 1.0]], [0, [14.825087715969211, 1.0]], [0, [0.9858991353829476, 1.0]], [1, [5.315447319123486, 1.0]], [1, [0.9021639924258169, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.55474497]
bas 1, expnt(s) = [453.98395123]
bas 2, expnt(s) = [68.37417983]
bas 3, expnt(s) = [14.82508772]
bas 4, expnt(s) = [0.98589914]
bas 5, expnt(s) = [5.31544732]
bas 6, expnt(s) = [0.90216399]
CPU time:        12.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.55474497
   1.62399637 453.98395123 248.48226637  68.37417983  60.07366407
  14.82508772  19.08811215   0.98589914   2.49970862   5.31544732
  23.54556766   0.90216399   2.56502294]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.836957116187955
cond(S) = 45.88387368118272
E1 = -180.45906004368973  E_coul = 53.98968381509311
init E= -126.469376228597
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.679779711556403  LUMO = 1.56677600583739
  mo_energy =
[-32.54002381  -1.86682412  -0.67977971  -0.67977971  -0.67977971
   1.56677601   5.3075769    5.3075769    5.3075769   55.64135417
 627.05592811]
E1 = -180.9302126539616  E_coul = 54.053604388154305
cycle= 1 E= -126.876608265807  delta_E= -0.407  |g|= 0.0861  |ddm|= 0.324
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0805043
diis-c [-0.00648095  1.        ]
  HOMO = -0.63323869838173  LUMO = 1.63842242653432
  mo_energy =
[-32.69150313  -1.82046142  -0.6332387   -0.6332387   -0.6332387
   1.63842243   5.34260528   5.34260528   5.34260528  55.53282893
 626.80123411]
E1 = -181.04243614278343  E_coul = 54.1655112408195
cycle= 2 E= -126.876924901964  delta_E= -0.000317  |g|= 0.0139  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0176964
diis-c [-1.51455118e-04  1.37811043e-01  8.62188957e-01]
  HOMO = -0.626520374068874  LUMO = 1.64110854249373
  mo_energy =
[-3.26691743e+01 -1.81469076e+00 -6.26520374e-01 -6.26520374e-01
 -6.26520374e-01  1.64110854e+00  5.35285370e+00  5.35285370e+00
  5.35285370e+00  5.55539789e+01  6.26828432e+02]
E1 = -181.02377617093111  E_coul = 54.146838352361094
cycle= 3 E= -126.87693781857  delta_E= -1.29e-05  |g|= 0.00142  |ddm|= 0.00326
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000880583
diis-c [-7.41628675e-07 -1.62613010e-03  4.05632612e-03  9.97569804e-01]
  HOMO = -0.626595223709271  LUMO = 1.64092388006807
  mo_energy =
[-3.26700639e+01 -1.81508662e+00 -6.26595224e-01 -6.26595224e-01
 -6.26595224e-01  1.64092388e+00  5.35266658e+00  5.35266658e+00
  5.35266658e+00  5.55531610e+01  6.26827924e+02]
E1 = -181.0252951533862  E_coul = 54.148357039463924
cycle= 4 E= -126.876938113922  delta_E= -2.95e-07  |g|= 0.000274  |ddm|= 0.00228
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000284037
diis-c [-1.08985600e-09  9.16796960e-04 -1.54035657e-02 -1.84830129e-01
  1.19931690e+00]
  HOMO = -0.626487096912883  LUMO = 1.64093981773549
  mo_energy =
[-3.26698157e+01 -1.81504876e+00 -6.26487097e-01 -6.26487097e-01
 -6.26487097e-01  1.64093982e+00  5.35281815e+00  5.35281815e+00
  5.35281815e+00  5.55533866e+01  6.26828270e+02]
E1 = -181.0252161318488  E_coul = 54.14827800822206
cycle= 5 E= -126.876938123627  delta_E= -9.7e-09  |g|= 1.52e-06  |ddm|= 0.000404
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.66845e-06
diis-c [-3.99031208e-15 -4.00032997e-06  1.03280903e-04  9.08103938e-04
 -1.46924946e-03  1.00046186e+00]
  HOMO = -0.62648774340373  LUMO = 1.64093969979633
  mo_energy =
[-3.26698174e+01 -1.81504907e+00 -6.26487743e-01 -6.26487743e-01
 -6.26487743e-01  1.64093970e+00  5.35281721e+00  5.35281721e+00
  5.35281721e+00  5.55533850e+01  6.26828268e+02]
E1 = -181.02521690037105  E_coul = 54.14827877674418
cycle= 6 E= -126.876938123627  delta_E= -1.42e-13  |g|= 4.99e-09  |ddm|= 1.96e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.02521690037105  E_coul = 54.14827877674418
  HOMO = -0.626487740856957  LUMO = 1.64093970057409
  mo_energy =
[-3.26698174e+01 -1.81504906e+00 -6.26487741e-01 -6.26487741e-01
 -6.26487741e-01  1.64093970e+00  5.35281721e+00  5.35281721e+00
  5.35281721e+00  5.55533850e+01  6.26828268e+02]
E1 = -181.02521689548897  E_coul = 54.148278771862174
Extra cycle  E= -126.876938123627  delta_E= 8.53e-14  |g|= 8.52e-10  |ddm|= 3.59e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [  0.55474497 453.98395123  68.37417983  14.82508772   0.98589914
   5.31544732   0.90216399]
E = -126.87693812362679
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.385601676476       1
[INPUT] 0    0    [1    /1   ]  453.983950832        1
[INPUT] 0    0    [1    /1   ]  68.3742000103        1
[INPUT] 0    0    [1    /1   ]  14.8247769971        1
[INPUT] 0    0    [1    /1   ]  0.968262581746       1
[INPUT] 1    0    [1    /1   ]  5.31559610985        1
[INPUT] 1    0    [1    /1   ]  0.899112799687       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.3856016764759819, 1.0]], [0, [453.983950831623, 1.0]], [0, [68.3742000102954, 1.0]], [0, [14.824776997061345, 1.0]], [0, [0.9682625817457245, 1.0]], [1, [5.3155961098540745, 1.0]], [1, [0.8991127996865216, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.38560168]
bas 1, expnt(s) = [453.98395083]
bas 2, expnt(s) = [68.37420001]
bas 3, expnt(s) = [14.824777]
bas 4, expnt(s) = [0.96826258]
bas 5, expnt(s) = [5.31559611]
bas 6, expnt(s) = [0.8991128]
CPU time:        12.18
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.85601676e-01 1.23628673e+00 4.53983951e+02 2.48482266e+02
 6.83742000e+01 6.00736774e+01 1.48247770e+01 1.90878121e+01
 9.68262582e-01 2.46609547e+00 5.31559611e+00 2.35463915e+01
 8.99112800e-01 2.55418363e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842115034784557
cond(S) = 19.00896924246803
E1 = -180.44413805904398  E_coul = 53.974890149820325
init E= -126.469247909224
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.681342375079612  LUMO = 1.13556695613458
  mo_energy =
[-32.5359131   -1.87554865  -0.68134238  -0.68134238  -0.68134238
   1.13556696   5.29516392   5.29516392   5.29516392  54.91139567
 626.56827106]
E1 = -180.75569536691978  E_coul = 53.87581217547052
cycle= 1 E= -126.879883191449  delta_E= -0.411  |g|= 0.0956  |ddm|= 0.286
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102903
diis-c [-0.010589  1.      ]
  HOMO = -0.648726159615869  LUMO = 1.20203695981662
  mo_energy =
[-32.71826511  -1.83780979  -0.64872616  -0.64872616  -0.64872616
   1.20203696   5.31128923   5.31128923   5.31128923  54.77513087
 626.28594118]
E1 = -180.8901208617916  E_coul = 54.00988470523358
cycle= 2 E= -126.880236156558  delta_E= -0.000353  |g|= 0.0159  |ddm|= 0.0382
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203929
diis-c [-1.53579566e-04  1.36844376e-01  8.63155624e-01]
  HOMO = -0.640906884987625  LUMO = 1.20465883308691
  mo_energy =
[-32.6911656   -1.83047583  -0.64090688  -0.64090688  -0.64090688
   1.20465883   5.32331843   5.32331843   5.32331843  54.80086434
 626.31788994]
E1 = -180.86618082851385  E_coul = 53.98592877098465
cycle= 3 E= -126.880252057529  delta_E= -1.59e-05  |g|= 0.000914  |ddm|= 0.00415
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000881934
diis-c [-2.09237659e-07 -2.64779568e-03  2.53563305e-02  9.77291465e-01]
  HOMO = -0.641162219082578  LUMO = 1.20452447952605
  mo_energy =
[-32.69236451  -1.83086098  -0.64116222  -0.64116222  -0.64116222
   1.20452448   5.32289054   5.32289054   5.32289054  54.79977616
 626.31686288]
E1 = -180.86761492312414  E_coul = 53.98736277250005
cycle= 4 E= -126.880252150624  delta_E= -9.31e-08  |g|= 0.00012  |ddm|= 0.000858
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000127545
diis-c [-1.26365669e-09  8.71831006e-04 -9.48952944e-03 -2.01944838e-01
  1.21056254e+00]
  HOMO = -0.641114607341354  LUMO = 1.20452977404563
  mo_energy =
[-32.69226618  -1.83084539  -0.64111461  -0.64111461  -0.64111461
   1.20452977   5.32295561   5.32295561   5.32295561  54.79986579
 626.31700117]
E1 = -180.86759813853027  E_coul = 53.987345985771356
cycle= 5 E= -126.880252152759  delta_E= -2.13e-09  |g|= 1.52e-06  |ddm|= 0.000141
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.55543e-06
diis-c [-6.41966484e-15 -5.13374379e-06  8.24965387e-05  1.31506757e-03
 -2.15544719e-02  1.02016204e+00]
  HOMO = -0.641114092297758  LUMO = 1.20452980431529
  mo_energy =
[-32.69226538  -1.83084533  -0.64111409  -0.64111409  -0.64111409
   1.2045298    5.32295629   5.32295629   5.32295629  54.79986649
 626.31700221]
E1 = -180.86759837313699  E_coul = 53.98734622037771
cycle= 6 E= -126.880252152759  delta_E= -3.69e-13  |g|= 3.74e-09  |ddm|= 2e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -180.86759837313699  E_coul = 53.98734622037771
  HOMO = -0.641114090220945  LUMO = 1.20452980484078
  mo_energy =
[-32.69226537  -1.83084532  -0.64111409  -0.64111409  -0.64111409
   1.2045298    5.32295629   5.32295629   5.32295629  54.79986649
 626.31700222]
E1 = -180.86759836841875  E_coul = 53.98734621565945
Extra cycle  E= -126.880252152759  delta_E= -2.84e-14  |g|= 6.76e-10  |ddm|= 1.53e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [3.85601676e-01 4.53983951e+02 6.83742000e+01 1.48247770e+01
 9.68262582e-01 5.31559611e+00 8.99112800e-01]
E = -126.88025215275931
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.385601676476       1
[INPUT] 0    0    [1    /1   ]  453.983950832        1
[INPUT] 0    0    [1    /1   ]  68.3742000103        1
[INPUT] 0    0    [1    /1   ]  14.8247769971        1
[INPUT] 0    0    [1    /1   ]  0.968262581746       1
[INPUT] 1    0    [1    /1   ]  5.31559610985        1
[INPUT] 1    0    [1    /1   ]  0.899112799687       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.3856016764759819, 1.0]], [0, [453.983950831623, 1.0]], [0, [68.3742000102954, 1.0]], [0, [14.824776997061345, 1.0]], [0, [0.9682625817457245, 1.0]], [1, [5.3155961098540745, 1.0]], [1, [0.8991127996865216, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.38560168]
bas 1, expnt(s) = [453.98395083]
bas 2, expnt(s) = [68.37420001]
bas 3, expnt(s) = [14.824777]
bas 4, expnt(s) = [0.96826258]
bas 5, expnt(s) = [5.31559611]
bas 6, expnt(s) = [0.8991128]
CPU time:        12.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.85601676e-01 1.23628673e+00 4.53983951e+02 2.48482266e+02
 6.83742000e+01 6.00736774e+01 1.48247770e+01 1.90878121e+01
 9.68262582e-01 2.46609547e+00 5.31559611e+00 2.35463915e+01
 8.99112800e-01 2.55418363e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842115034784557
cond(S) = 19.00896924246803
E1 = -180.44413805904398  E_coul = 53.974890149820325
init E= -126.469247909224
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.681342375079612  LUMO = 1.13556695613458
  mo_energy =
[-32.5359131   -1.87554865  -0.68134238  -0.68134238  -0.68134238
   1.13556696   5.29516392   5.29516392   5.29516392  54.91139567
 626.56827106]
E1 = -180.75569536691978  E_coul = 53.87581217547052
cycle= 1 E= -126.879883191449  delta_E= -0.411  |g|= 0.0956  |ddm|= 0.286
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102903
diis-c [-0.010589  1.      ]
  HOMO = -0.648726159615869  LUMO = 1.20203695981662
  mo_energy =
[-32.71826511  -1.83780979  -0.64872616  -0.64872616  -0.64872616
   1.20203696   5.31128923   5.31128923   5.31128923  54.77513087
 626.28594118]
E1 = -180.8901208617916  E_coul = 54.00988470523358
cycle= 2 E= -126.880236156558  delta_E= -0.000353  |g|= 0.0159  |ddm|= 0.0382
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203929
diis-c [-1.53579566e-04  1.36844376e-01  8.63155624e-01]
  HOMO = -0.640906884987625  LUMO = 1.20465883308691
  mo_energy =
[-32.6911656   -1.83047583  -0.64090688  -0.64090688  -0.64090688
   1.20465883   5.32331843   5.32331843   5.32331843  54.80086434
 626.31788994]
E1 = -180.86618082851385  E_coul = 53.98592877098465
cycle= 3 E= -126.880252057529  delta_E= -1.59e-05  |g|= 0.000914  |ddm|= 0.00415
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000881934
diis-c [-2.09237659e-07 -2.64779568e-03  2.53563305e-02  9.77291465e-01]
  HOMO = -0.641162219082578  LUMO = 1.20452447952605
  mo_energy =
[-32.69236451  -1.83086098  -0.64116222  -0.64116222  -0.64116222
   1.20452448   5.32289054   5.32289054   5.32289054  54.79977616
 626.31686288]
E1 = -180.86761492312414  E_coul = 53.98736277250005
cycle= 4 E= -126.880252150624  delta_E= -9.31e-08  |g|= 0.00012  |ddm|= 0.000858
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000127545
diis-c [-1.26365669e-09  8.71831006e-04 -9.48952944e-03 -2.01944838e-01
  1.21056254e+00]
  HOMO = -0.641114607341354  LUMO = 1.20452977404563
  mo_energy =
[-32.69226618  -1.83084539  -0.64111461  -0.64111461  -0.64111461
   1.20452977   5.32295561   5.32295561   5.32295561  54.79986579
 626.31700117]
E1 = -180.86759813853027  E_coul = 53.987345985771356
cycle= 5 E= -126.880252152759  delta_E= -2.13e-09  |g|= 1.52e-06  |ddm|= 0.000141
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.55543e-06
diis-c [-6.41966484e-15 -5.13374379e-06  8.24965387e-05  1.31506757e-03
 -2.15544719e-02  1.02016204e+00]
  HOMO = -0.641114092297758  LUMO = 1.20452980431529
  mo_energy =
[-32.69226538  -1.83084533  -0.64111409  -0.64111409  -0.64111409
   1.2045298    5.32295629   5.32295629   5.32295629  54.79986649
 626.31700221]
E1 = -180.86759837313699  E_coul = 53.98734622037771
cycle= 6 E= -126.880252152759  delta_E= -3.69e-13  |g|= 3.74e-09  |ddm|= 2e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -180.86759837313699  E_coul = 53.98734622037771
  HOMO = -0.641114090220945  LUMO = 1.20452980484078
  mo_energy =
[-32.69226537  -1.83084532  -0.64111409  -0.64111409  -0.64111409
   1.2045298    5.32295629   5.32295629   5.32295629  54.79986649
 626.31700222]
E1 = -180.86759836841875  E_coul = 53.98734621565945
Extra cycle  E= -126.880252152759  delta_E= -2.84e-14  |g|= 6.76e-10  |ddm|= 1.53e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 19.00896924246803
E1 = -180.86759836841875  E_coul = 53.98734621565945
init E= -126.880252152759
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.641114090496049  LUMO = 1.20452980471342
  mo_energy =
[-32.69226537  -1.83084532  -0.64111409  -0.64111409  -0.64111409
   1.2045298    5.32295629   5.32295629   5.32295629  54.79986649
 626.31700222]
E1 = -180.86759836969742  E_coul = 53.987346216938136
cycle= 1 E= -126.880252152759  delta_E= 2.84e-14  |g|= 1.61e-10  |ddm|= 6.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.86759836969742  E_coul = 53.987346216938136
  HOMO = -0.641114090404485  LUMO = 1.20452980473975
  mo_energy =
[-32.69226537  -1.83084532  -0.64111409  -0.64111409  -0.64111409
   1.2045298    5.32295629   5.32295629   5.32295629  54.79986649
 626.31700222]
E1 = -180.8675983694676  E_coul = 53.9873462167083
Extra cycle  E= -126.880252152759  delta_E= -1.42e-14  |g|= 3.05e-11  |ddm|= 5.32e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [3.85601676e-01 4.53983951e+02 6.83742000e+01 1.48247770e+01
 9.68262582e-01 5.31559611e+00 8.99112800e-01]
grad_E = [ 5.87436351e-02 -1.99019696e-05  9.82606632e-04 -1.45391980e-02
 -4.41122064e-01 -4.50754813e-04 -4.11380135e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.360845229134       1
[INPUT] 0    0    [1    /1   ]  453.983959296        1
[INPUT] 0    0    [1    /1   ]  68.373790419         1
[INPUT] 0    0    [1    /1   ]  14.8306477752        1
[INPUT] 0    0    [1    /1   ]  0.994392140114       1
[INPUT] 1    0    [1    /1   ]  5.31857438412        1
[INPUT] 1    0    [1    /1   ]  0.87669999189        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.36084522913377076, 1.0]], [0, [453.9839592961252, 1.0]], [0, [68.37379041904133, 1.0]], [0, [14.830647775194596, 1.0]], [0, [0.9943921401144141, 1.0]], [1, [5.3185743841246795, 1.0]], [1, [0.87669999188989, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.36084523]
bas 1, expnt(s) = [453.9839593]
bas 2, expnt(s) = [68.37379042]
bas 3, expnt(s) = [14.83064778]
bas 4, expnt(s) = [0.99439214]
bas 5, expnt(s) = [5.31857438]
bas 6, expnt(s) = [0.87669999]
CPU time:        15.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.60845229e-01 1.17626656e+00 4.53983959e+02 2.48482270e+02
 6.83737904e+01 6.00734075e+01 1.48306478e+01 1.90934811e+01
 9.94392140e-01 2.51584156e+00 5.31857438e+00 2.35628837e+01
 8.76699992e-01 2.47484581e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.853064773056438
cond(S) = 16.41478065116726
E1 = -180.5030303023271  E_coul = 54.010418003825535
init E= -126.492612298502
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.679960466060907  LUMO = 1.09174038052192
  mo_energy =
[-32.52069941  -1.88220919  -0.67996047  -0.67996047  -0.67996047
   1.09174038   5.2201548    5.2201548    5.2201548   54.95267226
 626.61373819]
E1 = -180.44889629867058  E_coul = 53.56073601972571
cycle= 1 E= -126.888160278945  delta_E= -0.396  |g|= 0.126  |ddm|= 0.304
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.142657
diis-c [-0.02035115  1.        ]
  HOMO = -0.672964613265845  LUMO = 1.14444468643715
  mo_energy =
[-32.77378239  -1.87155283  -0.67296461  -0.67296461  -0.67296461
   1.14444469   5.19928114   5.19928114   5.19928114  54.74729597
 626.26000006]
E1 = -180.66218464117443  E_coul = 53.77320369972112
cycle= 2 E= -126.888980941453  delta_E= -0.000821  |g|= 0.0255  |ddm|= 0.0544
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0327013
diis-c [-1.69840764e-04  1.74319372e-01  8.25680628e-01]
  HOMO = -0.661149733847709  LUMO = 1.14839097352207
  mo_energy =
[-32.73269743  -1.86029637  -0.66114973  -0.66114973  -0.66114973
   1.14839097   5.21756588   5.21756588   5.21756588  54.78614286
 626.30759375]
E1 = -180.62459446780952  E_coul = 53.73557203959347
cycle= 3 E= -126.889022428216  delta_E= -4.15e-05  |g|= 0.000949  |ddm|= 0.00636
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000770951
diis-c [-5.41133193e-07 -3.34308402e-03 -1.43963426e-02  1.01773943e+00]
  HOMO = -0.661086930125251  LUMO = 1.14833745872047
  mo_energy =
[-32.73297646  -1.86046636  -0.66108693  -0.66108693  -0.66108693
   1.14833746   5.21760655   5.21760655   5.21760655  54.78591825
 626.30770535]
E1 = -180.62541028300916  E_coul = 53.73638770290979
cycle= 4 E= -126.889022580099  delta_E= -1.52e-07  |g|= 0.000179  |ddm|= 0.00107
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000192996
diis-c [-1.31487680e-09  8.73110688e-04 -1.32309652e-03 -2.22094995e-01
  1.22254498e+00]
  HOMO = -0.661016358681134  LUMO = 1.14834456964217
  mo_energy =
[-32.73283439  -1.86044449  -0.66101636  -0.66101636  -0.66101636
   1.14834457   5.21770233   5.21770233   5.21770233  54.78604706
 626.30790492]
E1 = -180.62538764820687  E_coul = 53.736365063300696
cycle= 5 E= -126.889022584906  delta_E= -4.81e-09  |g|= 2.83e-07  |ddm|= 0.000197
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.32916e-07
diis-c [-6.12587564e-15 -5.71394605e-06  2.69564355e-05  1.80185243e-03
 -1.08589416e-02  1.00903585e+00]
  HOMO = -0.661016421025504  LUMO = 1.14834455483912
  mo_energy =
[-32.73283473  -1.8604446   -0.66101642  -0.66101642  -0.66101642
   1.14834455   5.21770224   5.21770224   5.21770224  54.78604669
 626.30790422]
E1 = -180.62538798997224  E_coul = 53.73636540506583
cycle= 6 E= -126.889022584906  delta_E= -2.27e-13  |g|= 2.46e-09  |ddm|= 1.64e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -180.62538798997224  E_coul = 53.73636540506583
  HOMO = -0.661016419660208  LUMO = 1.14834455512028
  mo_energy =
[-32.73283473  -1.8604446   -0.66101642  -0.66101642  -0.66101642
   1.14834456   5.21770224   5.21770224   5.21770224  54.7860467
 626.30790423]
E1 = -180.62538798636456  E_coul = 53.73636540145829
Extra cycle  E= -126.889022584906  delta_E= 1.42e-13  |g|= 4.73e-10  |ddm|= 6.98e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [3.60845229e-01 4.53983959e+02 6.83737904e+01 1.48306478e+01
 9.94392140e-01 5.31857438e+00 8.76699992e-01]
E = -126.88902258490626
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.360845229134       1
[INPUT] 0    0    [1    /1   ]  453.983959296        1
[INPUT] 0    0    [1    /1   ]  68.373790419         1
[INPUT] 0    0    [1    /1   ]  14.8306477752        1
[INPUT] 0    0    [1    /1   ]  0.994392140114       1
[INPUT] 1    0    [1    /1   ]  5.31857438412        1
[INPUT] 1    0    [1    /1   ]  0.87669999189        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.36084522913377076, 1.0]], [0, [453.9839592961252, 1.0]], [0, [68.37379041904133, 1.0]], [0, [14.830647775194596, 1.0]], [0, [0.9943921401144141, 1.0]], [1, [5.3185743841246795, 1.0]], [1, [0.87669999188989, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.36084523]
bas 1, expnt(s) = [453.9839593]
bas 2, expnt(s) = [68.37379042]
bas 3, expnt(s) = [14.83064778]
bas 4, expnt(s) = [0.99439214]
bas 5, expnt(s) = [5.31857438]
bas 6, expnt(s) = [0.87669999]
CPU time:        15.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.60845229e-01 1.17626656e+00 4.53983959e+02 2.48482270e+02
 6.83737904e+01 6.00734075e+01 1.48306478e+01 1.90934811e+01
 9.94392140e-01 2.51584156e+00 5.31857438e+00 2.35628837e+01
 8.76699992e-01 2.47484581e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.853064773056438
cond(S) = 16.41478065116726
E1 = -180.5030303023271  E_coul = 54.010418003825535
init E= -126.492612298502
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.679960466060907  LUMO = 1.09174038052192
  mo_energy =
[-32.52069941  -1.88220919  -0.67996047  -0.67996047  -0.67996047
   1.09174038   5.2201548    5.2201548    5.2201548   54.95267226
 626.61373819]
E1 = -180.44889629867058  E_coul = 53.56073601972571
cycle= 1 E= -126.888160278945  delta_E= -0.396  |g|= 0.126  |ddm|= 0.304
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.142657
diis-c [-0.02035115  1.        ]
  HOMO = -0.672964613265845  LUMO = 1.14444468643715
  mo_energy =
[-32.77378239  -1.87155283  -0.67296461  -0.67296461  -0.67296461
   1.14444469   5.19928114   5.19928114   5.19928114  54.74729597
 626.26000006]
E1 = -180.66218464117443  E_coul = 53.77320369972112
cycle= 2 E= -126.888980941453  delta_E= -0.000821  |g|= 0.0255  |ddm|= 0.0544
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0327013
diis-c [-1.69840764e-04  1.74319372e-01  8.25680628e-01]
  HOMO = -0.661149733847709  LUMO = 1.14839097352207
  mo_energy =
[-32.73269743  -1.86029637  -0.66114973  -0.66114973  -0.66114973
   1.14839097   5.21756588   5.21756588   5.21756588  54.78614286
 626.30759375]
E1 = -180.62459446780952  E_coul = 53.73557203959347
cycle= 3 E= -126.889022428216  delta_E= -4.15e-05  |g|= 0.000949  |ddm|= 0.00636
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000770951
diis-c [-5.41133193e-07 -3.34308402e-03 -1.43963426e-02  1.01773943e+00]
  HOMO = -0.661086930125251  LUMO = 1.14833745872047
  mo_energy =
[-32.73297646  -1.86046636  -0.66108693  -0.66108693  -0.66108693
   1.14833746   5.21760655   5.21760655   5.21760655  54.78591825
 626.30770535]
E1 = -180.62541028300916  E_coul = 53.73638770290979
cycle= 4 E= -126.889022580099  delta_E= -1.52e-07  |g|= 0.000179  |ddm|= 0.00107
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000192996
diis-c [-1.31487680e-09  8.73110688e-04 -1.32309652e-03 -2.22094995e-01
  1.22254498e+00]
  HOMO = -0.661016358681134  LUMO = 1.14834456964217
  mo_energy =
[-32.73283439  -1.86044449  -0.66101636  -0.66101636  -0.66101636
   1.14834457   5.21770233   5.21770233   5.21770233  54.78604706
 626.30790492]
E1 = -180.62538764820687  E_coul = 53.736365063300696
cycle= 5 E= -126.889022584906  delta_E= -4.81e-09  |g|= 2.83e-07  |ddm|= 0.000197
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.32916e-07
diis-c [-6.12587564e-15 -5.71394605e-06  2.69564355e-05  1.80185243e-03
 -1.08589416e-02  1.00903585e+00]
  HOMO = -0.661016421025504  LUMO = 1.14834455483912
  mo_energy =
[-32.73283473  -1.8604446   -0.66101642  -0.66101642  -0.66101642
   1.14834455   5.21770224   5.21770224   5.21770224  54.78604669
 626.30790422]
E1 = -180.62538798997224  E_coul = 53.73636540506583
cycle= 6 E= -126.889022584906  delta_E= -2.27e-13  |g|= 2.46e-09  |ddm|= 1.64e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -180.62538798997224  E_coul = 53.73636540506583
  HOMO = -0.661016419660208  LUMO = 1.14834455512028
  mo_energy =
[-32.73283473  -1.8604446   -0.66101642  -0.66101642  -0.66101642
   1.14834456   5.21770224   5.21770224   5.21770224  54.7860467
 626.30790423]
E1 = -180.62538798636456  E_coul = 53.73636540145829
Extra cycle  E= -126.889022584906  delta_E= 1.42e-13  |g|= 4.73e-10  |ddm|= 6.98e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 16.41478065116726
E1 = -180.62538798636456  E_coul = 53.73636540145829
init E= -126.889022584906
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.661016419880091  LUMO = 1.14834455502878
  mo_energy =
[-32.73283473  -1.8604446   -0.66101642  -0.66101642  -0.66101642
   1.14834456   5.21770224   5.21770224   5.21770224  54.7860467
 626.30790422]
E1 = -180.6253879872934  E_coul = 53.73636540238716
cycle= 1 E= -126.889022584906  delta_E=    0  |g|= 1.14e-10  |ddm|= 3.21e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.6253879872934  E_coul = 53.73636540238716
  HOMO = -0.661016419815498  LUMO = 1.14834455504878
  mo_energy =
[-32.73283473  -1.8604446   -0.66101642  -0.66101642  -0.66101642
   1.14834456   5.21770224   5.21770224   5.21770224  54.7860467
 626.30790422]
E1 = -180.62538798710833  E_coul = 53.73636540220192
Extra cycle  E= -126.889022584906  delta_E= -1.42e-13  |g|= 2.34e-11  |ddm|= 2.99e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [3.60845229e-01 4.53983959e+02 6.83737904e+01 1.48306478e+01
 9.94392140e-01 5.31857438e+00 8.76699992e-01]
grad_E = [ 5.88612695e-02 -1.77221051e-05  8.86972551e-04 -1.38389407e-02
 -4.19016241e-01  3.14910946e-02 -3.17939513e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1.00000002723e-09      1
[INPUT] 0    0    [1    /1   ]  453.98409546         1
[INPUT] 0    0    [1    /1   ]  68.367180818         1
[INPUT] 0    0    [1    /1   ]  14.9263987351        1
[INPUT] 0    0    [1    /1   ]  1.32501034292        1
[INPUT] 1    0    [1    /1   ]  5.32245478554        1
[INPUT] 1    0    [1    /1   ]  0.892283633889       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [1.0000000272292198e-09, 1.0]], [0, [453.9840954595781, 1.0]], [0, [68.36718081801853, 1.0]], [0, [14.92639873512827, 1.0]], [0, [1.3250103429229392, 1.0]], [1, [5.322454785537092, 1.0]], [1, [0.8922836338894223, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1.00000003e-09]
bas 1, expnt(s) = [453.98409546]
bas 2, expnt(s) = [68.36718082]
bas 3, expnt(s) = [14.92639874]
bas 4, expnt(s) = [1.32501034]
bas 5, expnt(s) = [5.32245479]
bas 6, expnt(s) = [0.89228363]
CPU time:        17.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.00000003e-09 4.49277876e-07 4.53984095e+02 2.48482326e+02
 6.83671808e+01 6.00690520e+01 1.49263987e+01 1.91858614e+01
 1.32501034e+00 3.12017876e+00 5.32245479e+00 2.35843748e+01
 8.92283634e-01 2.52995649e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.738966142190757
cond(S) = 10.48824557080135
E1 = -180.78296003617325  E_coul = 54.827269362086405
init E= -125.955690674087
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.622994685659552  LUMO = -1.31709600629987e-05
  mo_energy =
[-3.23341274e+01 -1.67345510e+00 -6.22994686e-01 -6.22994686e-01
 -6.22994686e-01 -1.31709601e-05  5.37797713e+00  5.37797713e+00
  5.37797713e+00  5.56023964e+01  6.27268660e+02]
E1 = -182.36443246582934  E_coul = 55.788548958041304
cycle= 1 E= -126.575883507788  delta_E= -0.62  |g|= 0.152  |ddm|= 0.357
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.150386
diis-c [-0.02261593  1.        ]
  HOMO = -0.49564130530709  LUMO = 1.50038290459035e-09
  mo_energy =
[-3.22988440e+01 -1.60808741e+00 -4.95641305e-01 -4.95641305e-01
 -4.95641305e-01  1.50038290e-09  5.51187411e+00  5.51187411e+00
  5.51187411e+00  5.56304986e+01  6.27338592e+02]
E1 = -182.27930253701584  E_coul = 55.703070589798244
cycle= 2 E= -126.576231947218  delta_E= -0.000348  |g|= 0.0108  |ddm|= 0.0162
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0116199
diis-c [-1.33165140e-04  9.00654441e-03  9.90993456e-01]
  HOMO = -0.500951203447372  LUMO = 1.50038096364502e-09
  mo_energy =
[-3.23175224e+01 -1.61582241e+00 -5.00951203e-01 -5.00951203e-01
 -5.00951203e-01  1.50038096e-09  5.50326429e+00  5.50326429e+00
  5.50326429e+00  5.56117732e+01  6.27321697e+02]
E1 = -182.29261458324038  E_coul = 55.71637818307899
cycle= 3 E= -126.576236400161  delta_E= -4.45e-06  |g|= 0.00133  |ddm|= 0.00207
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00161962
diis-c [-2.97828307e-08 -3.35370470e-03  1.13667188e-01  8.89686516e-01]
  HOMO = -0.500314323352778  LUMO = 1.50038117985984e-09
  mo_energy =
[-3.23149299e+01 -1.61493368e+00 -5.00314323e-01 -5.00314323e-01
 -5.00314323e-01  1.50038118e-09  5.50432156e+00  5.50432156e+00
  5.50432156e+00  5.56141695e+01  6.27324699e+02]
E1 = -182.29084032312738  E_coul = 55.71460381934377
cycle= 4 E= -126.576236503784  delta_E= -1.04e-07  |g|= 3.24e-06  |ddm|= 0.000278
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.67638e-06
diis-c [-9.79918803e-13  5.10599995e-05 -1.87316809e-03 -1.29819414e-02
  1.01480405e+00]
  HOMO = -0.500315154763472  LUMO = 1.50038117943392e-09
  mo_energy =
[-3.23149348e+01 -1.61493486e+00 -5.00315155e-01 -5.00315155e-01
 -5.00315155e-01  1.50038118e-09  5.50432004e+00  5.50432004e+00
  5.50432004e+00  5.56141647e+01  6.27324688e+02]
E1 = -182.2908429261973  E_coul = 55.714606422413425
cycle= 5 E= -126.576236503784  delta_E= -2.84e-13  |g|= 3.24e-08  |ddm|= 4.19e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.2908429261973  E_coul = 55.714606422413425
  HOMO = -0.500315138074209  LUMO = 1.50038117951634e-09
  mo_energy =
[-3.23149348e+01 -1.61493484e+00 -5.00315138e-01 -5.00315138e-01
 -5.00315138e-01  1.50038118e-09  5.50432007e+00  5.50432007e+00
  5.50432007e+00  5.56141648e+01  6.27324688e+02]
E1 = -182.2908428830414  E_coul = 55.71460637925742
Extra cycle  E= -126.576236503784  delta_E= -8.53e-14  |g|= 4.62e-09  |ddm|= 6.71e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.00000003e-09 4.53984095e+02 6.83671808e+01 1.49263987e+01
 1.32501034e+00 5.32245479e+00 8.92283634e-01]
E = -126.57623650378397
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.298306234333       1
[INPUT] 0    0    [1    /1   ]  453.983982895        1
[INPUT] 0    0    [1    /1   ]  68.3726448925        1
[INPUT] 0    0    [1    /1   ]  14.8472426151        1
[INPUT] 0    0    [1    /1   ]  1.05169241307        1
[INPUT] 1    0    [1    /1   ]  5.31924690626        1
[INPUT] 1    0    [1    /1   ]  0.879400832112       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.2983062343330287, 1.0]], [0, [453.98398289495594, 1.0]], [0, [68.3726448924505, 1.0]], [0, [14.847242615083232, 1.0]], [0, [1.0516924130691334, 1.0]], [1, [5.319246906261139, 1.0]], [1, [0.879400832111682, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.29830623]
bas 1, expnt(s) = [453.98398289]
bas 2, expnt(s) = [68.37264489]
bas 3, expnt(s) = [14.84724262]
bas 4, expnt(s) = [1.05169241]
bas 5, expnt(s) = [5.31924691]
bas 6, expnt(s) = [0.87940083]
CPU time:        17.96
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.98306234e-01 1.01979240e+00 4.53983983e+02 2.48482279e+02
 6.83726449e+01 6.00726526e+01 1.48472426e+01 1.91095024e+01
 1.05169241e+00 2.62380515e+00 5.31924691e+00 2.35666081e+01
 8.79400832e-01 2.48437976e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.856164320128592
cond(S) = 12.778801734452527
E1 = -180.71720382650935  E_coul = 54.14490798604597
init E= -126.572295840463
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.668351044059496  LUMO = 0.955993300579899
  mo_energy =
[-32.49607124  -1.88706148  -0.66835104  -0.66835104  -0.66835104
   0.9559933    5.24716345   5.24716345   5.24716345  55.01954587
 626.69298947]
E1 = -180.55033666105356  E_coul = 53.63730408961904
cycle= 1 E= -126.913032571435  delta_E= -0.341  |g|= 0.128  |ddm|= 0.297
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.149674
diis-c [-0.02240244  1.        ]
  HOMO = -0.668037366209282  LUMO = 1.00597906629911
  mo_energy =
[-32.75344245  -1.88083712  -0.66803737  -0.66803737  -0.66803737
   1.00597907   5.21835235   5.21835235   5.21835235  54.80557104
 626.34423324]
E1 = -180.76801402119807  E_coul = 53.854157073923275
cycle= 2 E= -126.913856947275  delta_E= -0.000824  |g|= 0.0259  |ddm|= 0.044
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0331317
diis-c [-1.36325322e-04  1.72041873e-01  8.27958127e-01]
  HOMO = -0.656046587237922  LUMO = 1.00977182084909
  mo_energy =
[-32.71131388  -1.86908809  -0.65604659  -0.65604659  -0.65604659
   1.00977182   5.23695869   5.23695869   5.23695869  54.84537795
 626.39277997]
E1 = -180.72851616039793  E_coul = 53.81461612978549
cycle= 3 E= -126.913900030612  delta_E= -4.31e-05  |g|= 0.000589  |ddm|= 0.00676
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000547897
diis-c [-1.80933969e-07 -3.15948123e-03 -4.34505331e-03  1.00750453e+00]
  HOMO = -0.656118136846318  LUMO = 1.00971487499363
  mo_energy =
[-32.71181029  -1.86928281  -0.65611814  -0.65611814  -0.65611814
   1.00971487   5.23682171   5.23682171   5.23682171  54.84494412
 626.39255489]
E1 = -180.72930806837235  E_coul = 53.81540798940301
cycle= 4 E= -126.913900078969  delta_E= -4.84e-08  |g|= 9.35e-05  |ddm|= 0.000502
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000105204
diis-c [-9.84125579e-10  7.00513375e-04 -1.40338838e-03 -2.15457016e-01
  1.21615989e+00]
  HOMO = -0.65608037151296  LUMO = 1.00971850803928
  mo_energy =
[-32.71173787  -1.86927137  -0.65608037  -0.65608037  -0.65608037
   1.00971851   5.23687217   5.23687217   5.23687217  54.84501003
 626.39265793]
E1 = -180.72930162710676  E_coul = 53.81540154677613
cycle= 5 E= -126.913900080331  delta_E= -1.36e-09  |g|= 9.68e-07  |ddm|= 8.74e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.14945e-06
diis-c [-4.85150265e-15 -6.86143547e-06  3.65639044e-05  2.74468385e-03
 -2.63988315e-02  1.02362445e+00]
  HOMO = -0.65608007084235  LUMO = 1.00971852110582
  mo_energy =
[-32.71173753  -1.86927137  -0.65608007  -0.65608007  -0.65608007
   1.00971852   5.23687256   5.23687256   5.23687256  54.84501027
 626.39265817]
E1 = -180.72930193888106  E_coul = 53.81540185855027
cycle= 6 E= -126.913900080331  delta_E= -1.56e-13  |g|= 1.33e-09  |ddm|= 9.9e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -180.72930193888106  E_coul = 53.81540185855027
  HOMO = -0.656080071169771  LUMO = 1.0097185209793
  mo_energy =
[-32.71173753  -1.86927137  -0.65608007  -0.65608007  -0.65608007
   1.00971852   5.23687256   5.23687256   5.23687256  54.84501027
 626.39265817]
E1 = -180.7293019384579  E_coul = 53.81540185812702
Extra cycle  E= -126.913900080331  delta_E= -8.53e-14  |g|= 2.14e-10  |ddm|= 1.03e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.98306234e-01 4.53983983e+02 6.83726449e+01 1.48472426e+01
 1.05169241e+00 5.31924691e+00 8.79400832e-01]
E = -126.91390008033088
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.298306234333       1
[INPUT] 0    0    [1    /1   ]  453.983982895        1
[INPUT] 0    0    [1    /1   ]  68.3726448925        1
[INPUT] 0    0    [1    /1   ]  14.8472426151        1
[INPUT] 0    0    [1    /1   ]  1.05169241307        1
[INPUT] 1    0    [1    /1   ]  5.31924690626        1
[INPUT] 1    0    [1    /1   ]  0.879400832112       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.2983062343330287, 1.0]], [0, [453.98398289495594, 1.0]], [0, [68.3726448924505, 1.0]], [0, [14.847242615083232, 1.0]], [0, [1.0516924130691334, 1.0]], [1, [5.319246906261139, 1.0]], [1, [0.879400832111682, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.29830623]
bas 1, expnt(s) = [453.98398289]
bas 2, expnt(s) = [68.37264489]
bas 3, expnt(s) = [14.84724262]
bas 4, expnt(s) = [1.05169241]
bas 5, expnt(s) = [5.31924691]
bas 6, expnt(s) = [0.87940083]
CPU time:        18.16
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.98306234e-01 1.01979240e+00 4.53983983e+02 2.48482279e+02
 6.83726449e+01 6.00726526e+01 1.48472426e+01 1.91095024e+01
 1.05169241e+00 2.62380515e+00 5.31924691e+00 2.35666081e+01
 8.79400832e-01 2.48437976e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.856164320128592
cond(S) = 12.778801734452527
E1 = -180.71720382650935  E_coul = 54.14490798604597
init E= -126.572295840463
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.668351044059496  LUMO = 0.955993300579899
  mo_energy =
[-32.49607124  -1.88706148  -0.66835104  -0.66835104  -0.66835104
   0.9559933    5.24716345   5.24716345   5.24716345  55.01954587
 626.69298947]
E1 = -180.55033666105356  E_coul = 53.63730408961904
cycle= 1 E= -126.913032571435  delta_E= -0.341  |g|= 0.128  |ddm|= 0.297
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.149674
diis-c [-0.02240244  1.        ]
  HOMO = -0.668037366209282  LUMO = 1.00597906629911
  mo_energy =
[-32.75344245  -1.88083712  -0.66803737  -0.66803737  -0.66803737
   1.00597907   5.21835235   5.21835235   5.21835235  54.80557104
 626.34423324]
E1 = -180.76801402119807  E_coul = 53.854157073923275
cycle= 2 E= -126.913856947275  delta_E= -0.000824  |g|= 0.0259  |ddm|= 0.044
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0331317
diis-c [-1.36325322e-04  1.72041873e-01  8.27958127e-01]
  HOMO = -0.656046587237922  LUMO = 1.00977182084909
  mo_energy =
[-32.71131388  -1.86908809  -0.65604659  -0.65604659  -0.65604659
   1.00977182   5.23695869   5.23695869   5.23695869  54.84537795
 626.39277997]
E1 = -180.72851616039793  E_coul = 53.81461612978549
cycle= 3 E= -126.913900030612  delta_E= -4.31e-05  |g|= 0.000589  |ddm|= 0.00676
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000547897
diis-c [-1.80933969e-07 -3.15948123e-03 -4.34505331e-03  1.00750453e+00]
  HOMO = -0.656118136846318  LUMO = 1.00971487499363
  mo_energy =
[-32.71181029  -1.86928281  -0.65611814  -0.65611814  -0.65611814
   1.00971487   5.23682171   5.23682171   5.23682171  54.84494412
 626.39255489]
E1 = -180.72930806837235  E_coul = 53.81540798940301
cycle= 4 E= -126.913900078969  delta_E= -4.84e-08  |g|= 9.35e-05  |ddm|= 0.000502
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000105204
diis-c [-9.84125579e-10  7.00513375e-04 -1.40338838e-03 -2.15457016e-01
  1.21615989e+00]
  HOMO = -0.65608037151296  LUMO = 1.00971850803928
  mo_energy =
[-32.71173787  -1.86927137  -0.65608037  -0.65608037  -0.65608037
   1.00971851   5.23687217   5.23687217   5.23687217  54.84501003
 626.39265793]
E1 = -180.72930162710676  E_coul = 53.81540154677613
cycle= 5 E= -126.913900080331  delta_E= -1.36e-09  |g|= 9.68e-07  |ddm|= 8.74e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.14945e-06
diis-c [-4.85150265e-15 -6.86143547e-06  3.65639044e-05  2.74468385e-03
 -2.63988315e-02  1.02362445e+00]
  HOMO = -0.65608007084235  LUMO = 1.00971852110582
  mo_energy =
[-32.71173753  -1.86927137  -0.65608007  -0.65608007  -0.65608007
   1.00971852   5.23687256   5.23687256   5.23687256  54.84501027
 626.39265817]
E1 = -180.72930193888106  E_coul = 53.81540185855027
cycle= 6 E= -126.913900080331  delta_E= -1.56e-13  |g|= 1.33e-09  |ddm|= 9.9e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -180.72930193888106  E_coul = 53.81540185855027
  HOMO = -0.656080071169771  LUMO = 1.0097185209793
  mo_energy =
[-32.71173753  -1.86927137  -0.65608007  -0.65608007  -0.65608007
   1.00971852   5.23687256   5.23687256   5.23687256  54.84501027
 626.39265817]
E1 = -180.7293019384579  E_coul = 53.81540185812702
Extra cycle  E= -126.913900080331  delta_E= -8.53e-14  |g|= 2.14e-10  |ddm|= 1.03e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 12.778801734452527
E1 = -180.7293019384579  E_coul = 53.81540185812702
init E= -126.913900080331
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.656080071222785  LUMO = 1.00971852097984
  mo_energy =
[-32.71173753  -1.86927137  -0.65608007  -0.65608007  -0.65608007
   1.00971852   5.23687256   5.23687256   5.23687256  54.84501027
 626.39265817]
E1 = -180.72930193837914  E_coul = 53.81540185804829
cycle= 1 E= -126.913900080331  delta_E= 2.84e-14  |g|= 4.09e-11  |ddm|= 1.92e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -180.72930193837914  E_coul = 53.81540185804829
  HOMO = -0.656080071232671  LUMO = 1.00971852097985
  mo_energy =
[-32.71173753  -1.86927137  -0.65608007  -0.65608007  -0.65608007
   1.00971852   5.23687256   5.23687256   5.23687256  54.84501027
 626.39265817]
E1 = -180.7293019383644  E_coul = 53.81540185803364
Extra cycle  E= -126.913900080331  delta_E= 9.95e-14  |g|= 7.86e-12  |ddm|= 3.64e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [2.98306234e-01 4.53983983e+02 6.83726449e+01 1.48472426e+01
 1.05169241e+00 5.31924691e+00 8.79400832e-01]
grad_E = [ 2.55273468e-03 -1.04334724e-05  5.59203591e-04 -1.10231429e-02
 -3.21774400e-01  2.77083952e-02 -2.67813691e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.398057140408       1
[INPUT] 0    0    [1    /1   ]  453.984085569        1
[INPUT] 0    0    [1    /1   ]  68.3675636898        1
[INPUT] 0    0    [1    /1   ]  14.9273931481        1
[INPUT] 0    0    [1    /1   ]  1.29579594194        1
[INPUT] 1    0    [1    /1   ]  5.31847489171        1
[INPUT] 1    0    [1    /1   ]  0.902046616058       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.3980571404083375, 1.0]], [0, [453.9840855688628, 1.0]], [0, [68.3675636897831, 1.0]], [0, [14.927393148102757, 1.0]], [0, [1.2957959419427636, 1.0]], [1, [5.318474891714097, 1.0]], [1, [0.9020466160578366, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.39805714]
bas 1, expnt(s) = [453.98408557]
bas 2, expnt(s) = [68.36756369]
bas 3, expnt(s) = [14.92739315]
bas 4, expnt(s) = [1.29579594]
bas 5, expnt(s) = [5.31847489]
bas 6, expnt(s) = [0.90204662]
CPU time:        20.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.98057140e-01 1.26611772e+00 4.53984086e+02 2.48482322e+02
 6.83675637e+01 6.00693043e+01 1.49273931e+01 1.91868201e+01
 1.29579594e+00 3.06843894e+00 5.31847489e+00 2.35623327e+01
 9.02046616e-01 2.56460580e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851074193623354
cond(S) = 14.940259186752348
E1 = -181.07009572283812  E_coul = 54.35195071920625
init E= -126.718145003632
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649431749598946  LUMO = 1.4591350314003
  mo_energy =
[-32.47343339  -1.88956554  -0.64943175  -0.64943175  -0.64943175
   1.45913503   5.35404519   5.35404519   5.35404519  56.6448002
 627.92231421]
E1 = -181.05805779544568  E_coul = 54.090334417567284
cycle= 1 E= -126.967723377878  delta_E= -0.25  |g|= 0.103  |ddm|= 0.268
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.118699
diis-c [-0.01408947  1.        ]
  HOMO = -0.634471039527125  LUMO = 1.51115765182666
  mo_energy =
[-32.6691368   -1.86644338  -0.63447104  -0.63447104  -0.63447104
   1.51115765   5.34868905   5.34868905   5.34868905  56.47950425
 627.64576248]
E1 = -181.22371878114973  E_coul = 54.255533698601745
cycle= 2 E= -126.968185082548  delta_E= -0.000462  |g|= 0.02  |ddm|= 0.031
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0252219
diis-c [-1.06475482e-04  1.62918334e-01  8.37081666e-01]
  HOMO = -0.625262508623917  LUMO = 1.5155716097494
  mo_energy =
[-3.26365854e+01 -1.85743199e+00 -6.25262509e-01 -6.25262509e-01
 -6.25262509e-01  1.51557161e+00  5.36298144e+00  5.36298144e+00
  5.36298144e+00  5.65101446e+01  6.27683868e+02]
E1 = -181.19197085506465  E_coul = 54.22375990234992
cycle= 3 E= -126.968210952715  delta_E= -2.59e-05  |g|= 0.00069  |ddm|= 0.00545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00075575
diis-c [-5.53433133e-08 -3.25029856e-03  1.38116359e-02  9.89438663e-01]
  HOMO = -0.625509836507391  LUMO = 1.51541923206848
  mo_energy =
[-3.26375105e+01 -1.85774920e+00 -6.25509837e-01 -6.25509837e-01
 -6.25509837e-01  1.51541923e+00  5.36259406e+00  5.36259406e+00
  5.36259406e+00  5.65092859e+01  6.27683120e+02]
E1 = -181.19307630682792  E_coul = 54.22486531732782
cycle= 4 E= -126.9682109895  delta_E= -3.68e-08  |g|= 5.29e-05  |ddm|= 0.000326
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.98501e-05
diis-c [-2.55152050e-10  5.43770953e-04 -5.32801601e-03 -2.04780436e-01
  1.20956468e+00]
  HOMO = -0.625489075961623  LUMO = 1.51542180440122
  mo_energy =
[-3.26374672e+01 -1.85774349e+00 -6.25489076e-01 -6.25489076e-01
 -6.25489076e-01  1.51542180e+00  5.36262236e+00  5.36262236e+00
  5.36262236e+00  5.65093253e+01  6.27683183e+02]
E1 = -181.19306760040746  E_coul = 54.22485661053635
cycle= 5 E= -126.968210989871  delta_E= -3.71e-10  |g|= 4.54e-07  |ddm|= 3.87e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.19306760040746  E_coul = 54.22485661053635
  HOMO = -0.625488927861536  LUMO = 1.51542183275089
  mo_energy =
[-3.26374670e+01 -1.85774344e+00 -6.25488928e-01 -6.25488928e-01
 -6.25488928e-01  1.51542183e+00  5.36262256e+00  5.36262256e+00
  5.36262256e+00  5.65093254e+01  6.27683183e+02]
E1 = -181.19306754758597  E_coul = 54.22485655771486
Extra cycle  E= -126.968210989871  delta_E=    0  |g|= 6.53e-08  |ddm|= 2.31e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [3.98057140e-01 4.53984086e+02 6.83675637e+01 1.49273931e+01
 1.29579594e+00 5.31847489e+00 9.02046616e-01]
E = -126.96821098987111
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.398057140408       1
[INPUT] 0    0    [1    /1   ]  453.984085569        1
[INPUT] 0    0    [1    /1   ]  68.3675636898        1
[INPUT] 0    0    [1    /1   ]  14.9273931481        1
[INPUT] 0    0    [1    /1   ]  1.29579594194        1
[INPUT] 1    0    [1    /1   ]  5.31847489171        1
[INPUT] 1    0    [1    /1   ]  0.902046616058       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.3980571404083375, 1.0]], [0, [453.9840855688628, 1.0]], [0, [68.3675636897831, 1.0]], [0, [14.927393148102757, 1.0]], [0, [1.2957959419427636, 1.0]], [1, [5.318474891714097, 1.0]], [1, [0.9020466160578366, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.39805714]
bas 1, expnt(s) = [453.98408557]
bas 2, expnt(s) = [68.36756369]
bas 3, expnt(s) = [14.92739315]
bas 4, expnt(s) = [1.29579594]
bas 5, expnt(s) = [5.31847489]
bas 6, expnt(s) = [0.90204662]
CPU time:        20.98
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 3.98057140e-01 1.26611772e+00 4.53984086e+02 2.48482322e+02
 6.83675637e+01 6.00693043e+01 1.49273931e+01 1.91868201e+01
 1.29579594e+00 3.06843894e+00 5.31847489e+00 2.35623327e+01
 9.02046616e-01 2.56460580e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851074193623354
cond(S) = 14.940259186752348
E1 = -181.07009572283812  E_coul = 54.35195071920625
init E= -126.718145003632
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649431749598946  LUMO = 1.4591350314003
  mo_energy =
[-32.47343339  -1.88956554  -0.64943175  -0.64943175  -0.64943175
   1.45913503   5.35404519   5.35404519   5.35404519  56.6448002
 627.92231421]
E1 = -181.05805779544568  E_coul = 54.090334417567284
cycle= 1 E= -126.967723377878  delta_E= -0.25  |g|= 0.103  |ddm|= 0.268
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.118699
diis-c [-0.01408947  1.        ]
  HOMO = -0.634471039527125  LUMO = 1.51115765182666
  mo_energy =
[-32.6691368   -1.86644338  -0.63447104  -0.63447104  -0.63447104
   1.51115765   5.34868905   5.34868905   5.34868905  56.47950425
 627.64576248]
E1 = -181.22371878114973  E_coul = 54.255533698601745
cycle= 2 E= -126.968185082548  delta_E= -0.000462  |g|= 0.02  |ddm|= 0.031
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0252219
diis-c [-1.06475482e-04  1.62918334e-01  8.37081666e-01]
  HOMO = -0.625262508623917  LUMO = 1.5155716097494
  mo_energy =
[-3.26365854e+01 -1.85743199e+00 -6.25262509e-01 -6.25262509e-01
 -6.25262509e-01  1.51557161e+00  5.36298144e+00  5.36298144e+00
  5.36298144e+00  5.65101446e+01  6.27683868e+02]
E1 = -181.19197085506465  E_coul = 54.22375990234992
cycle= 3 E= -126.968210952715  delta_E= -2.59e-05  |g|= 0.00069  |ddm|= 0.00545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00075575
diis-c [-5.53433133e-08 -3.25029856e-03  1.38116359e-02  9.89438663e-01]
  HOMO = -0.625509836507391  LUMO = 1.51541923206848
  mo_energy =
[-3.26375105e+01 -1.85774920e+00 -6.25509837e-01 -6.25509837e-01
 -6.25509837e-01  1.51541923e+00  5.36259406e+00  5.36259406e+00
  5.36259406e+00  5.65092859e+01  6.27683120e+02]
E1 = -181.19307630682792  E_coul = 54.22486531732782
cycle= 4 E= -126.9682109895  delta_E= -3.68e-08  |g|= 5.29e-05  |ddm|= 0.000326
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.98501e-05
diis-c [-2.55152050e-10  5.43770953e-04 -5.32801601e-03 -2.04780436e-01
  1.20956468e+00]
  HOMO = -0.625489075961623  LUMO = 1.51542180440122
  mo_energy =
[-3.26374672e+01 -1.85774349e+00 -6.25489076e-01 -6.25489076e-01
 -6.25489076e-01  1.51542180e+00  5.36262236e+00  5.36262236e+00
  5.36262236e+00  5.65093253e+01  6.27683183e+02]
E1 = -181.19306760040746  E_coul = 54.22485661053635
cycle= 5 E= -126.968210989871  delta_E= -3.71e-10  |g|= 4.54e-07  |ddm|= 3.87e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.19306760040746  E_coul = 54.22485661053635
  HOMO = -0.625488927861536  LUMO = 1.51542183275089
  mo_energy =
[-3.26374670e+01 -1.85774344e+00 -6.25488928e-01 -6.25488928e-01
 -6.25488928e-01  1.51542183e+00  5.36262256e+00  5.36262256e+00
  5.36262256e+00  5.65093254e+01  6.27683183e+02]
E1 = -181.19306754758597  E_coul = 54.22485655771486
Extra cycle  E= -126.968210989871  delta_E=    0  |g|= 6.53e-08  |ddm|= 2.31e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 14.940259186752348
E1 = -181.19306754758597  E_coul = 54.22485655771486
init E= -126.968210989871
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.625488924390558  LUMO = 1.51542182590967
  mo_energy =
[-3.26374670e+01 -1.85774345e+00 -6.25488924e-01 -6.25488924e-01
 -6.25488924e-01  1.51542183e+00  5.36262256e+00  5.36262256e+00
  5.36262256e+00  5.65093254e+01  6.27683183e+02]
E1 = -181.19306760957778  E_coul = 54.22485661970669
cycle= 1 E= -126.968210989871  delta_E= 1.42e-14  |g|= 1.36e-08  |ddm|= 5.07e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.19306760957778  E_coul = 54.22485661970669
  HOMO = -0.625488919014192  LUMO = 1.51542182695656
  mo_energy =
[-3.26374670e+01 -1.85774345e+00 -6.25488919e-01 -6.25488919e-01
 -6.25488919e-01  1.51542183e+00  5.36262256e+00  5.36262256e+00
  5.36262256e+00  5.65093254e+01  6.27683183e+02]
E1 = -181.19306760421773  E_coul = 54.22485661434661
Extra cycle  E= -126.968210989871  delta_E= -2.84e-14  |g|= 2.36e-09  |ddm|= 7.8e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [3.98057140e-01 4.53984086e+02 6.83675637e+01 1.49273931e+01
 1.29579594e+00 5.31847489e+00 9.02046616e-01]
grad_E = [-2.32391053e-02  1.17234010e-06  1.68308815e-04 -1.36136932e-02
 -1.21317353e-01 -4.70370493e-03  5.21195218e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.52468506989        1
[INPUT] 0    0    [1    /1   ]  453.984153631        1
[INPUT] 0    0    [1    /1   ]  68.3638663208        1
[INPUT] 0    0    [1    /1   ]  15.0014425965        1
[INPUT] 0    0    [1    /1   ]  1.47725610176        1
[INPUT] 1    0    [1    /1   ]  5.31683037607        1
[INPUT] 1    0    [1    /1   ]  0.898509243341       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.5246850698899055, 1.0]], [0, [453.9841536313929, 1.0]], [0, [68.36386632081141, 1.0]], [0, [15.001442596494241, 1.0]], [0, [1.4772561017620867, 1.0]], [1, [5.316830376072017, 1.0]], [1, [0.8985092433408897, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.52468507]
bas 1, expnt(s) = [453.98415363]
bas 2, expnt(s) = [68.36386632]
bas 3, expnt(s) = [15.0014426]
bas 4, expnt(s) = [1.4772561]
bas 5, expnt(s) = [5.31683038]
bas 6, expnt(s) = [0.89850924]
CPU time:        23.64
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.52468507
   1.55753944 453.98415363 248.48234946  68.36386632  60.06686784
  15.0014426   19.25816009   1.4772561    3.38537567   5.31683038
  23.55322598   0.89850924   2.5520406 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851979108656428
cond(S) = 18.92756821190734
E1 = -181.1102443059903  E_coul = 54.360687886692425
init E= -126.749556419298
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649061417043676  LUMO = 2.05326749960971
  mo_energy =
[-32.4786733   -1.88994389  -0.64906142  -0.64906142  -0.64906142
   2.0532675    5.34089632   5.34089632   5.34089632  58.09271333
 629.03800172]
E1 = -181.10344786578185  E_coul = 54.11793512765258
cycle= 1 E= -126.985512738129  delta_E= -0.236  |g|= 0.105  |ddm|= 0.264
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.115411
diis-c [-0.01331967  1.        ]
  HOMO = -0.631716490480186  LUMO = 2.0977678097462
  mo_energy =
[-32.67100628  -1.86796462  -0.63171649  -0.63171649  -0.63171649
   2.09776781   5.33844953   5.33844953   5.33844953  57.92853286
 628.7606368 ]
E1 = -181.27652305902046  E_coul = 54.290486880148265
cycle= 2 E= -126.986036178872  delta_E= -0.000523  |g|= 0.0212  |ddm|= 0.038
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0269591
diis-c [-1.42499410e-04  1.73945646e-01  8.26054354e-01]
  HOMO = -0.622135579820739  LUMO = 2.10359841017295
  mo_energy =
[-3.26374496e+01 -1.85894993e+00 -6.22135580e-01 -6.22135580e-01
 -6.22135580e-01  2.10359841e+00  5.35332706e+00  5.35332706e+00
  5.35332706e+00  5.79600293e+01  6.28800490e+02]
E1 = -181.24437889902774  E_coul = 54.258313574988236
cycle= 3 E= -126.98606532404  delta_E= -2.91e-05  |g|= 0.00109  |ddm|= 0.00513
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000920167
diis-c [-5.58651093e-07 -8.92945725e-03 -2.88013160e-02  1.03773077e+00]
  HOMO = -0.622172338752911  LUMO = 2.10339935525195
  mo_energy =
[-3.26379365e+01 -1.85925857e+00 -6.22172339e-01 -6.22172339e-01
 -6.22172339e-01  2.10339936e+00  5.35322973e+00  5.35322973e+00
  5.35322973e+00  5.79595638e+01  6.28800448e+02]
E1 = -181.2454283545188  E_coul = 54.259362881838754
cycle= 4 E= -126.98606547268  delta_E= -1.49e-07  |g|= 0.00016  |ddm|= 0.00078
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000180664
diis-c [-1.94585663e-10  5.80390013e-04 -4.44619637e-03 -1.63170191e-01
  1.16703600e+00]
  HOMO = -0.622112358528007  LUMO = 2.10340895110622
  mo_energy =
[-3.26377975e+01 -1.85924137e+00 -6.22112359e-01 -6.22112359e-01
 -6.22112359e-01  2.10340895e+00  5.35331373e+00  5.35331373e+00
  5.35331373e+00  5.79596890e+01  6.28800642e+02]
E1 = -181.24537553222683  E_coul = 54.2593100565785
cycle= 5 E= -126.986065475648  delta_E= -2.97e-09  |g|= 8.62e-07  |ddm|= 0.000104
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.09957e-07
diis-c [-3.74318071e-15 -8.75133156e-06  1.08130662e-04  3.23173958e-03
 -1.97062411e-02  1.01637512e+00]
  HOMO = -0.622112629216929  LUMO = 2.10340892148719
  mo_energy =
[-3.26377982e+01 -1.85924144e+00 -6.22112629e-01 -6.22112629e-01
 -6.22112629e-01  2.10340892e+00  5.35331333e+00  5.35331333e+00
  5.35331333e+00  5.79596883e+01  6.28800641e+02]
E1 = -181.2453758400054  E_coul = 54.25931036435717
cycle= 6 E= -126.986065475648  delta_E= 8.53e-14  |g|= 6.85e-09  |ddm|= 5.02e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.2453758400054  E_coul = 54.25931036435717
  HOMO = -0.622112632399263  LUMO = 2.10340892008463
  mo_energy =
[-3.26377982e+01 -1.85924144e+00 -6.22112632e-01 -6.22112632e-01
 -6.22112632e-01  2.10340892e+00  5.35331333e+00  5.35331333e+00
  5.35331333e+00  5.79596883e+01  6.28800641e+02]
E1 = -181.2453758470527  E_coul = 54.259310371404375
Extra cycle  E= -126.986065475648  delta_E= -8.53e-14  |g|= 1.23e-09  |ddm|= 2.54e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.52468507 453.98415363  68.36386632  15.0014426    1.4772561
   5.31683038   0.89850924]
E = -126.98606547564833
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.52468506989        1
[INPUT] 0    0    [1    /1   ]  453.984153631        1
[INPUT] 0    0    [1    /1   ]  68.3638663208        1
[INPUT] 0    0    [1    /1   ]  15.0014425965        1
[INPUT] 0    0    [1    /1   ]  1.47725610176        1
[INPUT] 1    0    [1    /1   ]  5.31683037607        1
[INPUT] 1    0    [1    /1   ]  0.898509243341       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.5246850698899055, 1.0]], [0, [453.9841536313929, 1.0]], [0, [68.36386632081141, 1.0]], [0, [15.001442596494241, 1.0]], [0, [1.4772561017620867, 1.0]], [1, [5.316830376072017, 1.0]], [1, [0.8985092433408897, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.52468507]
bas 1, expnt(s) = [453.98415363]
bas 2, expnt(s) = [68.36386632]
bas 3, expnt(s) = [15.0014426]
bas 4, expnt(s) = [1.4772561]
bas 5, expnt(s) = [5.31683038]
bas 6, expnt(s) = [0.89850924]
CPU time:        23.87
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.52468507
   1.55753944 453.98415363 248.48234946  68.36386632  60.06686784
  15.0014426   19.25816009   1.4772561    3.38537567   5.31683038
  23.55322598   0.89850924   2.5520406 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851979108656428
cond(S) = 18.92756821190734
E1 = -181.1102443059903  E_coul = 54.360687886692425
init E= -126.749556419298
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649061417043676  LUMO = 2.05326749960971
  mo_energy =
[-32.4786733   -1.88994389  -0.64906142  -0.64906142  -0.64906142
   2.0532675    5.34089632   5.34089632   5.34089632  58.09271333
 629.03800172]
E1 = -181.10344786578185  E_coul = 54.11793512765258
cycle= 1 E= -126.985512738129  delta_E= -0.236  |g|= 0.105  |ddm|= 0.264
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.115411
diis-c [-0.01331967  1.        ]
  HOMO = -0.631716490480186  LUMO = 2.0977678097462
  mo_energy =
[-32.67100628  -1.86796462  -0.63171649  -0.63171649  -0.63171649
   2.09776781   5.33844953   5.33844953   5.33844953  57.92853286
 628.7606368 ]
E1 = -181.27652305902046  E_coul = 54.290486880148265
cycle= 2 E= -126.986036178872  delta_E= -0.000523  |g|= 0.0212  |ddm|= 0.038
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0269591
diis-c [-1.42499410e-04  1.73945646e-01  8.26054354e-01]
  HOMO = -0.622135579820739  LUMO = 2.10359841017295
  mo_energy =
[-3.26374496e+01 -1.85894993e+00 -6.22135580e-01 -6.22135580e-01
 -6.22135580e-01  2.10359841e+00  5.35332706e+00  5.35332706e+00
  5.35332706e+00  5.79600293e+01  6.28800490e+02]
E1 = -181.24437889902774  E_coul = 54.258313574988236
cycle= 3 E= -126.98606532404  delta_E= -2.91e-05  |g|= 0.00109  |ddm|= 0.00513
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000920167
diis-c [-5.58651093e-07 -8.92945725e-03 -2.88013160e-02  1.03773077e+00]
  HOMO = -0.622172338752911  LUMO = 2.10339935525195
  mo_energy =
[-3.26379365e+01 -1.85925857e+00 -6.22172339e-01 -6.22172339e-01
 -6.22172339e-01  2.10339936e+00  5.35322973e+00  5.35322973e+00
  5.35322973e+00  5.79595638e+01  6.28800448e+02]
E1 = -181.2454283545188  E_coul = 54.259362881838754
cycle= 4 E= -126.98606547268  delta_E= -1.49e-07  |g|= 0.00016  |ddm|= 0.00078
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000180664
diis-c [-1.94585663e-10  5.80390013e-04 -4.44619637e-03 -1.63170191e-01
  1.16703600e+00]
  HOMO = -0.622112358528007  LUMO = 2.10340895110622
  mo_energy =
[-3.26377975e+01 -1.85924137e+00 -6.22112359e-01 -6.22112359e-01
 -6.22112359e-01  2.10340895e+00  5.35331373e+00  5.35331373e+00
  5.35331373e+00  5.79596890e+01  6.28800642e+02]
E1 = -181.24537553222683  E_coul = 54.2593100565785
cycle= 5 E= -126.986065475648  delta_E= -2.97e-09  |g|= 8.62e-07  |ddm|= 0.000104
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.09957e-07
diis-c [-3.74318071e-15 -8.75133156e-06  1.08130662e-04  3.23173958e-03
 -1.97062411e-02  1.01637512e+00]
  HOMO = -0.622112629216929  LUMO = 2.10340892148719
  mo_energy =
[-3.26377982e+01 -1.85924144e+00 -6.22112629e-01 -6.22112629e-01
 -6.22112629e-01  2.10340892e+00  5.35331333e+00  5.35331333e+00
  5.35331333e+00  5.79596883e+01  6.28800641e+02]
E1 = -181.2453758400054  E_coul = 54.25931036435717
cycle= 6 E= -126.986065475648  delta_E= 8.53e-14  |g|= 6.85e-09  |ddm|= 5.02e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.2453758400054  E_coul = 54.25931036435717
  HOMO = -0.622112632399263  LUMO = 2.10340892008463
  mo_energy =
[-3.26377982e+01 -1.85924144e+00 -6.22112632e-01 -6.22112632e-01
 -6.22112632e-01  2.10340892e+00  5.35331333e+00  5.35331333e+00
  5.35331333e+00  5.79596883e+01  6.28800641e+02]
E1 = -181.2453758470527  E_coul = 54.259310371404375
Extra cycle  E= -126.986065475648  delta_E= -8.53e-14  |g|= 1.23e-09  |ddm|= 2.54e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 18.92756821190734
E1 = -181.2453758470527  E_coul = 54.259310371404375
init E= -126.986065475648
    CPU time for initialize scf      0.04 sec, wall time      0.05 sec
  HOMO = -0.622112632009384  LUMO = 2.10340892047751
  mo_energy =
[-3.26377982e+01 -1.85924144e+00 -6.22112632e-01 -6.22112632e-01
 -6.22112632e-01  2.10340892e+00  5.35331333e+00  5.35331333e+00
  5.35331333e+00  5.79596883e+01  6.28800641e+02]
E1 = -181.2453758449044  E_coul = 54.2593103692561
cycle= 1 E= -126.986065475648  delta_E= 2.84e-14  |g|= 2.9e-10  |ddm|= 7.83e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.2453758449044  E_coul = 54.2593103692561
  HOMO = -0.622112632163706  LUMO = 2.10340892040111
  mo_energy =
[-3.26377982e+01 -1.85924144e+00 -6.22112632e-01 -6.22112632e-01
 -6.22112632e-01  2.10340892e+00  5.35331333e+00  5.35331333e+00
  5.35331333e+00  5.79596883e+01  6.28800641e+02]
E1 = -181.24537584532357  E_coul = 54.25931036967533
Extra cycle  E= -126.986065475648  delta_E= 7.11e-14  |g|= 5.94e-11  |ddm|= 8.33e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.52468507 453.98415363  68.36386632  15.0014426    1.4772561
   5.31683038   0.89850924]
grad_E = [ 6.93878163e-02  9.65827584e-06 -5.08830274e-05 -1.74247535e-02
 -9.60114974e-02 -1.17829830e-03  2.57000258e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.548494760261       1
[INPUT] 0    0    [1    /1   ]  453.984245291        1
[INPUT] 0    0    [1    /1   ]  68.3581790702        1
[INPUT] 0    0    [1    /1   ]  15.1434491155        1
[INPUT] 0    0    [1    /1   ]  1.79533103474        1
[INPUT] 1    0    [1    /1   ]  5.31088024213        1
[INPUT] 1    0    [1    /1   ]  0.886349599504       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.5484947602606722, 1.0]], [0, [453.98424529110787, 1.0]], [0, [68.35817907022896, 1.0]], [0, [15.143449115526028, 1.0]], [0, [1.7953310347384128, 1.0]], [1, [5.310880242126259, 1.0]], [1, [0.8863495995039715, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.54849476]
bas 1, expnt(s) = [453.98424529]
bas 2, expnt(s) = [68.35817907]
bas 3, expnt(s) = [15.14344912]
bas 4, expnt(s) = [1.79533103]
bas 5, expnt(s) = [5.31088024]
bas 6, expnt(s) = [0.8863496]
CPU time:        26.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.54849476
   1.610254   453.98424529 248.48238708  68.35817907  60.06312004
  15.14344912  19.39472501   1.79533103   3.91853227   5.31088024
  23.52028219   0.8863496    2.5089425 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.857369256231895
cond(S) = 17.757693212761872
E1 = -181.19034857119124  E_coul = 54.414025666671755
init E= -126.776322904519
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646908264047707  LUMO = 2.50901131264118
  mo_energy =
[-32.46824648  -1.88984531  -0.64690826  -0.64690826  -0.64690826
   2.50901131   5.29942706   5.29942706   5.29942706  59.91093279
 630.55556013]
E1 = -180.9171146766465  E_coul = 53.913944451512265
cycle= 1 E= -127.003170225134  delta_E= -0.227  |g|= 0.138  |ddm|= 0.296
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.158518
diis-c [-0.02512785  1.        ]
  HOMO = -0.649534280294428  LUMO = 2.52906026878845
  mo_energy =
[-32.70883183  -1.88777986  -0.64953428  -0.64953428  -0.64953428
   2.52906027   5.26828403   5.26828403   5.26828403  59.69531511
 630.23150488]
E1 = -181.15397994780645  E_coul = 54.1498881581301
cycle= 2 E= -127.004091789676  delta_E= -0.000922  |g|= 0.0297  |ddm|= 0.0443
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0373474
diis-c [-2.02176155e-04  1.79482161e-01  8.20517839e-01]
  HOMO = -0.636710488701029  LUMO = 2.53894229092972
  mo_energy =
[-32.66287705  -1.87531632  -0.63671049  -0.63671049  -0.63671049
   2.53894229   5.28838234   5.28838234   5.28838234  59.73840119
 630.28554498]
E1 = -181.1075519712926  E_coul = 54.10340300960941
cycle= 3 E= -127.004148961683  delta_E= -5.72e-05  |g|= 0.00108  |ddm|= 0.00746
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000992826
diis-c [-4.32915493e-07 -8.20216483e-03 -1.82651851e-02  1.02646735e+00]
  HOMO = -0.636877554137173  LUMO = 2.53863309737731
  mo_energy =
[-32.66367461  -1.87571247  -0.63687755  -0.63687755  -0.63687755
   2.5386331    5.28810376   5.28810376   5.28810376  59.7376342
 630.2851151 ]
E1 = -181.10882682120314  E_coul = 54.10467774453261
cycle= 4 E= -127.004149076671  delta_E= -1.15e-07  |g|= 0.000133  |ddm|= 0.000604
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00015269
diis-c [-7.73328637e-11  5.88865770e-04 -3.26918221e-03 -1.64654362e-01
  1.16733468e+00]
  HOMO = -0.636831588797093  LUMO = 2.53864000524841
  mo_energy =
[-32.66356413  -1.87570192  -0.63683159  -0.63683159  -0.63683159
   2.53864001   5.28816874   5.28816874   5.28816874  59.73773402
 630.28527476]
E1 = -181.10877708272466  E_coul = 54.10462800411435
cycle= 5 E= -127.00414907861  delta_E= -1.94e-09  |g|= 3.43e-07  |ddm|= 7.41e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75645e-07
diis-c [-5.53191019e-15 -1.33883187e-05  9.30422904e-05  4.30926416e-03
 -3.06516004e-02  1.02626268e+00]
  HOMO = -0.636831554919006  LUMO = 2.53864006807714
  mo_energy =
[-32.66356402  -1.87570187  -0.63683155  -0.63683155  -0.63683155
   2.53864007   5.28816879   5.28816879   5.28816879  59.73773406
 630.28527464]
E1 = -181.10877697342377  E_coul = 54.10462789481343
cycle= 6 E= -127.00414907861  delta_E= -2.84e-14  |g|= 1.16e-08  |ddm|= 7.68e-08
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.10877697342377  E_coul = 54.10462789481343
  HOMO = -0.636831560419821  LUMO = 2.53864006497478
  mo_energy =
[-32.66356404  -1.87570187  -0.63683156  -0.63683156  -0.63683156
   2.53864006   5.28816879   5.28816879   5.28816879  59.73773405
 630.28527462]
E1 = -181.10877698694213  E_coul = 54.10462790833163
Extra cycle  E= -127.004149078611  delta_E= -1.71e-13  |g|= 2.27e-09  |ddm|= 3.84e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.54849476 453.98424529  68.35817907  15.14344912   1.79533103
   5.31088024   0.8863496 ]
E = -127.00414907861051
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:31:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.548494760261       1
[INPUT] 0    0    [1    /1   ]  453.984245291        1
[INPUT] 0    0    [1    /1   ]  68.3581790702        1
[INPUT] 0    0    [1    /1   ]  15.1434491155        1
[INPUT] 0    0    [1    /1   ]  1.79533103474        1
[INPUT] 1    0    [1    /1   ]  5.31088024213        1
[INPUT] 1    0    [1    /1   ]  0.886349599504       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.5484947602606722, 1.0]], [0, [453.98424529110787, 1.0]], [0, [68.35817907022896, 1.0]], [0, [15.143449115526028, 1.0]], [0, [1.7953310347384128, 1.0]], [1, [5.310880242126259, 1.0]], [1, [0.8863495995039715, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.54849476]
bas 1, expnt(s) = [453.98424529]
bas 2, expnt(s) = [68.35817907]
bas 3, expnt(s) = [15.14344912]
bas 4, expnt(s) = [1.79533103]
bas 5, expnt(s) = [5.31088024]
bas 6, expnt(s) = [0.8863496]
CPU time:        26.69
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.54849476
   1.610254   453.98424529 248.48238708  68.35817907  60.06312004
  15.14344912  19.39472501   1.79533103   3.91853227   5.31088024
  23.52028219   0.8863496    2.5089425 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.857369256231895
cond(S) = 17.757693212761872
E1 = -181.19034857119124  E_coul = 54.414025666671755
init E= -126.776322904519
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646908264047707  LUMO = 2.50901131264118
  mo_energy =
[-32.46824648  -1.88984531  -0.64690826  -0.64690826  -0.64690826
   2.50901131   5.29942706   5.29942706   5.29942706  59.91093279
 630.55556013]
E1 = -180.9171146766465  E_coul = 53.913944451512265
cycle= 1 E= -127.003170225134  delta_E= -0.227  |g|= 0.138  |ddm|= 0.296
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.158518
diis-c [-0.02512785  1.        ]
  HOMO = -0.649534280294428  LUMO = 2.52906026878845
  mo_energy =
[-32.70883183  -1.88777986  -0.64953428  -0.64953428  -0.64953428
   2.52906027   5.26828403   5.26828403   5.26828403  59.69531511
 630.23150488]
E1 = -181.15397994780645  E_coul = 54.1498881581301
cycle= 2 E= -127.004091789676  delta_E= -0.000922  |g|= 0.0297  |ddm|= 0.0443
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0373474
diis-c [-2.02176155e-04  1.79482161e-01  8.20517839e-01]
  HOMO = -0.636710488701029  LUMO = 2.53894229092972
  mo_energy =
[-32.66287705  -1.87531632  -0.63671049  -0.63671049  -0.63671049
   2.53894229   5.28838234   5.28838234   5.28838234  59.73840119
 630.28554498]
E1 = -181.1075519712926  E_coul = 54.10340300960941
cycle= 3 E= -127.004148961683  delta_E= -5.72e-05  |g|= 0.00108  |ddm|= 0.00746
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000992826
diis-c [-4.32915493e-07 -8.20216483e-03 -1.82651851e-02  1.02646735e+00]
  HOMO = -0.636877554137173  LUMO = 2.53863309737731
  mo_energy =
[-32.66367461  -1.87571247  -0.63687755  -0.63687755  -0.63687755
   2.5386331    5.28810376   5.28810376   5.28810376  59.7376342
 630.2851151 ]
E1 = -181.10882682120314  E_coul = 54.10467774453261
cycle= 4 E= -127.004149076671  delta_E= -1.15e-07  |g|= 0.000133  |ddm|= 0.000604
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00015269
diis-c [-7.73328637e-11  5.88865770e-04 -3.26918221e-03 -1.64654362e-01
  1.16733468e+00]
  HOMO = -0.636831588797093  LUMO = 2.53864000524841
  mo_energy =
[-32.66356413  -1.87570192  -0.63683159  -0.63683159  -0.63683159
   2.53864001   5.28816874   5.28816874   5.28816874  59.73773402
 630.28527476]
E1 = -181.10877708272466  E_coul = 54.10462800411435
cycle= 5 E= -127.00414907861  delta_E= -1.94e-09  |g|= 3.43e-07  |ddm|= 7.41e-05
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.75645e-07
diis-c [-5.53191019e-15 -1.33883187e-05  9.30422904e-05  4.30926416e-03
 -3.06516004e-02  1.02626268e+00]
  HOMO = -0.636831554919006  LUMO = 2.53864006807714
  mo_energy =
[-32.66356402  -1.87570187  -0.63683155  -0.63683155  -0.63683155
   2.53864007   5.28816879   5.28816879   5.28816879  59.73773406
 630.28527464]
E1 = -181.10877697342377  E_coul = 54.10462789481343
cycle= 6 E= -127.00414907861  delta_E= -2.84e-14  |g|= 1.16e-08  |ddm|= 7.68e-08
    CPU time for cycle= 6      0.01 sec, wall time      0.02 sec
E1 = -181.10877697342377  E_coul = 54.10462789481343
  HOMO = -0.636831560419821  LUMO = 2.53864006497478
  mo_energy =
[-32.66356404  -1.87570187  -0.63683156  -0.63683156  -0.63683156
   2.53864006   5.28816879   5.28816879   5.28816879  59.73773405
 630.28527462]
E1 = -181.10877698694213  E_coul = 54.10462790833163
Extra cycle  E= -127.004149078611  delta_E= -1.71e-13  |g|= 2.27e-09  |ddm|= 3.84e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 17.757693212761872
E1 = -181.10877698694213  E_coul = 54.10462790833163
init E= -127.004149078611
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.63683155964404  LUMO = 2.53864006587706
  mo_energy =
[-32.66356404  -1.87570187  -0.63683156  -0.63683156  -0.63683156
   2.53864007   5.28816879   5.28816879   5.28816879  59.73773405
 630.28527463]
E1 = -181.10877698291154  E_coul = 54.104627904301154
cycle= 1 E= -127.00414907861  delta_E= 1.28e-13  |g|= 5.38e-10  |ddm|= 1.2e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.10877698291154  E_coul = 54.104627904301154
  HOMO = -0.636831559926945  LUMO = 2.53864006569737
  mo_energy =
[-32.66356404  -1.87570187  -0.63683156  -0.63683156  -0.63683156
   2.53864007   5.28816879   5.28816879   5.28816879  59.73773405
 630.28527463]
E1 = -181.10877698377598  E_coul = 54.104627905165536
Extra cycle  E= -127.00414907861  delta_E= -7.11e-14  |g|= 1.2e-10  |ddm|= 1.44e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [  0.54849476 453.98424529  68.35817907  15.14344912   1.79533103
   5.31088024   0.8863496 ]
grad_E = [-5.51878579e-02  4.14397152e-05 -1.20589697e-03 -1.39108946e-02
 -1.67487228e-02  1.41860516e-02 -1.06889744e-01]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.668810118361       1
[INPUT] 0    0    [1    /1   ]  453.984281526        1
[INPUT] 0    0    [1    /1   ]  68.3543729335        1
[INPUT] 0    0    [1    /1   ]  15.2868930172        1
[INPUT] 0    0    [1    /1   ]  2.07988042265        1
[INPUT] 1    0    [1    /1   ]  5.30262652439        1
[INPUT] 1    0    [1    /1   ]  0.890519114259       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.6688101183608114, 1.0]], [0, [453.9842815264495, 1.0]], [0, [68.35437293349773, 1.0]], [0, [15.286893017184992, 1.0]], [0, [2.079880422650011, 1.0]], [1, [5.3026265243889945, 1.0]], [1, [0.8905191142586282, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.66881012]
bas 1, expnt(s) = [453.98428153]
bas 2, expnt(s) = [68.35437293]
bas 3, expnt(s) = [15.28689302]
bas 4, expnt(s) = [2.07988042]
bas 5, expnt(s) = [5.30262652]
bas 6, expnt(s) = [0.89051911]
CPU time:        29.87
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.66881012
   1.86849591 453.98428153 248.48240196  68.35437293  60.06061182
  15.28689302  19.53234758   2.07988042   4.37566232   5.30262652
  23.47459955   0.89051911   2.5237042 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.852934254862706
cond(S) = 20.653608589019893
E1 = -181.19575501770836  E_coul = 54.4041323377627
init E= -126.791622679946
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646559098409486  LUMO = 3.32116033468186
  mo_energy =
[-32.48254967  -1.88469368  -0.6465591   -0.6465591   -0.6465591
   3.32116033   5.30781876   5.30781876   5.30781876  61.96068905
 632.25714823]
E1 = -181.1054414110185  E_coul = 54.09466998667541
cycle= 1 E= -127.010771424343  delta_E= -0.219  |g|= 0.122  |ddm|= 0.274
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.132087
diis-c [-0.01744687  1.        ]
  HOMO = -0.633715359776961  LUMO = 3.34076114261611
  mo_energy =
[-32.68614843  -1.87120101  -0.63371536  -0.63371536  -0.63371536
   3.34076114   5.29846484   5.29846484   5.29846484  61.78035044
 631.96685542]
E1 = -181.30017322645975  E_coul = 54.28869137249124
cycle= 2 E= -127.011481853969  delta_E= -0.00071  |g|= 0.0245  |ddm|= 0.0436
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0311906
diis-c [-2.40845720e-04  1.70991865e-01  8.29008135e-01]
  HOMO = -0.623073221416915  LUMO = 3.35041470753149
  mo_energy =
[-3.26476647e+01 -1.86113066e+00 -6.23073221e-01 -6.23073221e-01
 -6.23073221e-01  3.35041471e+00  5.31520152e+00  5.31520152e+00
  5.31520152e+00  6.18164071e+01  6.32013105e+02]
E1 = -181.26307105936283  E_coul = 54.25155007293856
cycle= 3 E= -127.011520986424  delta_E= -3.91e-05  |g|= 0.00158  |ddm|= 0.00582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00135436
diis-c [-8.35841971e-07 -1.30883103e-02 -3.78440499e-02  1.05093236e+00]
  HOMO = -0.623202734684679  LUMO = 3.34994234284356
  mo_energy =
[-3.26484216e+01 -1.86163107e+00 -6.23202735e-01 -6.23202735e-01
 -6.23202735e-01  3.34994234e+00  5.31497249e+00  5.31497249e+00
  5.31497249e+00  6.18156715e+01  6.32012919e+02]
E1 = -181.26440177966802  E_coul = 54.25288055350723
cycle= 4 E= -127.011521226161  delta_E= -2.4e-07  |g|= 0.000162  |ddm|= 0.00093
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000184797
diis-c [-1.04876860e-10  5.55038615e-04 -3.99712534e-03 -1.16553689e-01
  1.11999578e+00]
  HOMO = -0.623151361353692  LUMO = 3.34995156920272
  mo_energy =
[-3.26482845e+01 -1.86161968e+00 -6.23151361e-01 -6.23151361e-01
 -6.23151361e-01  3.34995157e+00  5.31504720e+00  5.31504720e+00
  5.31504720e+00  6.18157947e+01  6.32013117e+02]
E1 = -181.26432487085052  E_coul = 54.252803642076515
cycle= 5 E= -127.011521228774  delta_E= -2.61e-09  |g|= 5.81e-07  |ddm|= 8.66e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.212e-07
diis-c [-2.89825995e-15 -1.31777134e-05  1.29897987e-04  3.35208002e-03
 -3.11252835e-02  1.02765648e+00]
  HOMO = -0.623151436359148  LUMO = 3.34995161716267
  mo_energy =
[-3.26482848e+01 -1.86161965e+00 -6.23151436e-01 -6.23151436e-01
 -6.23151436e-01  3.34995162e+00  5.31504708e+00  5.31504708e+00
  5.31504708e+00  6.18157944e+01  6.32013116e+02]
E1 = -181.2643249714909  E_coul = 54.25280374271691
cycle= 6 E= -127.011521228774  delta_E=    0  |g|= 8.14e-09  |ddm|= 2.52e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.2643249714909  E_coul = 54.25280374271691
  HOMO = -0.623151440152083  LUMO = 3.34995161444422
  mo_energy =
[-3.26482848e+01 -1.86161965e+00 -6.23151440e-01 -6.23151440e-01
 -6.23151440e-01  3.34995161e+00  5.31504707e+00  5.31504707e+00
  5.31504707e+00  6.18157944e+01  6.32013116e+02]
E1 = -181.26432498145212  E_coul = 54.25280375267826
Extra cycle  E= -127.011521228774  delta_E= 1.42e-13  |g|= 1.62e-09  |ddm|= 2.61e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.66881012 453.98428153  68.35437293  15.28689302   2.07988042
   5.30262652   0.89051911]
E = -127.01152122877386
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.668810118361       1
[INPUT] 0    0    [1    /1   ]  453.984281526        1
[INPUT] 0    0    [1    /1   ]  68.3543729335        1
[INPUT] 0    0    [1    /1   ]  15.2868930172        1
[INPUT] 0    0    [1    /1   ]  2.07988042265        1
[INPUT] 1    0    [1    /1   ]  5.30262652439        1
[INPUT] 1    0    [1    /1   ]  0.890519114259       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.6688101183608114, 1.0]], [0, [453.9842815264495, 1.0]], [0, [68.35437293349773, 1.0]], [0, [15.286893017184992, 1.0]], [0, [2.079880422650011, 1.0]], [1, [5.3026265243889945, 1.0]], [1, [0.8905191142586282, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.66881012]
bas 1, expnt(s) = [453.98428153]
bas 2, expnt(s) = [68.35437293]
bas 3, expnt(s) = [15.28689302]
bas 4, expnt(s) = [2.07988042]
bas 5, expnt(s) = [5.30262652]
bas 6, expnt(s) = [0.89051911]
CPU time:        30.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.66881012
   1.86849591 453.98428153 248.48240196  68.35437293  60.06061182
  15.28689302  19.53234758   2.07988042   4.37566232   5.30262652
  23.47459955   0.89051911   2.5237042 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.852934254862706
cond(S) = 20.653608589019893
E1 = -181.19575501770836  E_coul = 54.4041323377627
init E= -126.791622679946
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646559098409486  LUMO = 3.32116033468186
  mo_energy =
[-32.48254967  -1.88469368  -0.6465591   -0.6465591   -0.6465591
   3.32116033   5.30781876   5.30781876   5.30781876  61.96068905
 632.25714823]
E1 = -181.1054414110185  E_coul = 54.09466998667541
cycle= 1 E= -127.010771424343  delta_E= -0.219  |g|= 0.122  |ddm|= 0.274
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.132087
diis-c [-0.01744687  1.        ]
  HOMO = -0.633715359776961  LUMO = 3.34076114261611
  mo_energy =
[-32.68614843  -1.87120101  -0.63371536  -0.63371536  -0.63371536
   3.34076114   5.29846484   5.29846484   5.29846484  61.78035044
 631.96685542]
E1 = -181.30017322645975  E_coul = 54.28869137249124
cycle= 2 E= -127.011481853969  delta_E= -0.00071  |g|= 0.0245  |ddm|= 0.0436
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0311906
diis-c [-2.40845720e-04  1.70991865e-01  8.29008135e-01]
  HOMO = -0.623073221416915  LUMO = 3.35041470753149
  mo_energy =
[-3.26476647e+01 -1.86113066e+00 -6.23073221e-01 -6.23073221e-01
 -6.23073221e-01  3.35041471e+00  5.31520152e+00  5.31520152e+00
  5.31520152e+00  6.18164071e+01  6.32013105e+02]
E1 = -181.26307105936283  E_coul = 54.25155007293856
cycle= 3 E= -127.011520986424  delta_E= -3.91e-05  |g|= 0.00158  |ddm|= 0.00582
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00135436
diis-c [-8.35841971e-07 -1.30883103e-02 -3.78440499e-02  1.05093236e+00]
  HOMO = -0.623202734684679  LUMO = 3.34994234284356
  mo_energy =
[-3.26484216e+01 -1.86163107e+00 -6.23202735e-01 -6.23202735e-01
 -6.23202735e-01  3.34994234e+00  5.31497249e+00  5.31497249e+00
  5.31497249e+00  6.18156715e+01  6.32012919e+02]
E1 = -181.26440177966802  E_coul = 54.25288055350723
cycle= 4 E= -127.011521226161  delta_E= -2.4e-07  |g|= 0.000162  |ddm|= 0.00093
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000184797
diis-c [-1.04876860e-10  5.55038615e-04 -3.99712534e-03 -1.16553689e-01
  1.11999578e+00]
  HOMO = -0.623151361353692  LUMO = 3.34995156920272
  mo_energy =
[-3.26482845e+01 -1.86161968e+00 -6.23151361e-01 -6.23151361e-01
 -6.23151361e-01  3.34995157e+00  5.31504720e+00  5.31504720e+00
  5.31504720e+00  6.18157947e+01  6.32013117e+02]
E1 = -181.26432487085052  E_coul = 54.252803642076515
cycle= 5 E= -127.011521228774  delta_E= -2.61e-09  |g|= 5.81e-07  |ddm|= 8.66e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.212e-07
diis-c [-2.89825995e-15 -1.31777134e-05  1.29897987e-04  3.35208002e-03
 -3.11252835e-02  1.02765648e+00]
  HOMO = -0.623151436359148  LUMO = 3.34995161716267
  mo_energy =
[-3.26482848e+01 -1.86161965e+00 -6.23151436e-01 -6.23151436e-01
 -6.23151436e-01  3.34995162e+00  5.31504708e+00  5.31504708e+00
  5.31504708e+00  6.18157944e+01  6.32013116e+02]
E1 = -181.2643249714909  E_coul = 54.25280374271691
cycle= 6 E= -127.011521228774  delta_E=    0  |g|= 8.14e-09  |ddm|= 2.52e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.2643249714909  E_coul = 54.25280374271691
  HOMO = -0.623151440152083  LUMO = 3.34995161444422
  mo_energy =
[-3.26482848e+01 -1.86161965e+00 -6.23151440e-01 -6.23151440e-01
 -6.23151440e-01  3.34995161e+00  5.31504707e+00  5.31504707e+00
  5.31504707e+00  6.18157944e+01  6.32013116e+02]
E1 = -181.26432498145212  E_coul = 54.25280375267826
Extra cycle  E= -127.011521228774  delta_E= 1.42e-13  |g|= 1.62e-09  |ddm|= 2.61e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.653608589019893
E1 = -181.26432498145212  E_coul = 54.25280375267826
init E= -127.011521228774
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.623151439565623  LUMO = 3.34995161523244
  mo_energy =
[-3.26482848e+01 -1.86161965e+00 -6.23151440e-01 -6.23151440e-01
 -6.23151440e-01  3.34995162e+00  5.31504707e+00  5.31504707e+00
  5.31504707e+00  6.18157944e+01  6.32013116e+02]
E1 = -181.26432497873438  E_coul = 54.252803749960414
cycle= 1 E= -127.011521228774  delta_E= -1.14e-13  |g|= 3.58e-10  |ddm|= 8.14e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.26432497873438  E_coul = 54.252803749960414
  HOMO = -0.623151439751174  LUMO = 3.34995161508181
  mo_energy =
[-3.26482848e+01 -1.86161965e+00 -6.23151440e-01 -6.23151440e-01
 -6.23151440e-01  3.34995162e+00  5.31504707e+00  5.31504707e+00
  5.31504707e+00  6.18157944e+01  6.32013116e+02]
E1 = -181.26432497933  E_coul = 54.25280375055598
Extra cycle  E= -127.011521228774  delta_E= -5.68e-14  |g|= 8.1e-11  |ddm|= 9.48e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.66881012 453.98428153  68.35437293  15.28689302   2.07988042
   5.30262652   0.89051911]
grad_E = [ 7.97967603e-02  6.40751348e-05 -1.90274719e-03 -1.59322161e-02
 -2.55308849e-02  5.17736439e-03 -3.54770506e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.678720751045       1
[INPUT] 0    0    [1    /1   ]  453.984234395        1
[INPUT] 0    0    [1    /1   ]  68.3543989169        1
[INPUT] 0    0    [1    /1   ]  15.3757782959        1
[INPUT] 0    0    [1    /1   ]  2.23316361016        1
[INPUT] 1    0    [1    /1   ]  5.29666670837        1
[INPUT] 1    0    [1    /1   ]  0.89426047817        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.6787207510451032, 1.0]], [0, [453.9842343946969, 1.0]], [0, [68.35439891691013, 1.0]], [0, [15.375778295936927, 1.0]], [0, [2.233163610163548, 1.0]], [1, [5.296666708367284, 1.0]], [1, [0.8942604781697464, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.67872075]
bas 1, expnt(s) = [453.98423439]
bas 2, expnt(s) = [68.35439892]
bas 3, expnt(s) = [15.3757783]
bas 4, expnt(s) = [2.23316361]
bas 5, expnt(s) = [5.29666671]
bas 6, expnt(s) = [0.89426048]
CPU time:        32.98
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.67872075
   1.88922363 453.98423439 248.48238261  68.35439892  60.06062894
  15.3757783   19.6174636    2.23316361   4.6153584    5.29666671
  23.44162423   0.89426048   2.53696479]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851272924334403
cond(S) = 20.537399032895504
E1 = -181.21038037166747  E_coul = 54.41270964750296
init E= -126.797670724165
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645603842609402  LUMO = 3.57505481329314
  mo_energy =
[-32.48491321  -1.88277933  -0.64560384  -0.64560384  -0.64560384
   3.57505481   5.31864982   5.31864982   5.31864982  62.88032714
 633.07849863]
E1 = -181.1524613609852  E_coul = 54.137868093169075
cycle= 1 E= -127.014593267816  delta_E= -0.217  |g|= 0.119  |ddm|= 0.273
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.130633
diis-c [-0.01706507  1.        ]
  HOMO = -0.630776557043744  LUMO = 3.59382455057528
  mo_energy =
[-3.26804120e+01 -1.86602228e+00 -6.30776557e-01 -6.30776557e-01
 -6.30776557e-01  3.59382455e+00  5.31237042e+00  5.31237042e+00
  5.31237042e+00  6.27065057e+01  6.32797442e+02]
E1 = -181.33752906459267  E_coul = 54.32229935637397
cycle= 2 E= -127.015229708219  delta_E= -0.000636  |g|= 0.0233  |ddm|= 0.0394
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0295436
diis-c [-2.29532729e-04  1.63511953e-01  8.36488047e-01]
  HOMO = -0.620626595846996  LUMO = 3.60372278309205
  mo_energy =
[-3.26433618e+01 -1.85633059e+00 -6.20626596e-01 -6.20626596e-01
 -6.20626596e-01  3.60372278e+00  5.32835438e+00  5.32835438e+00
  5.32835438e+00  6.27412439e+01  6.32842006e+02]
E1 = -181.30183073245612  E_coul = 54.286565890275334
cycle= 3 E= -127.015264842181  delta_E= -3.51e-05  |g|= 0.00146  |ddm|= 0.00564
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128363
diis-c [-6.48799416e-07 -1.09645857e-02 -1.98749936e-02  1.03083958e+00]
  HOMO = -0.620866738603203  LUMO = 3.60318113459449
  mo_energy =
[-3.26444182e+01 -1.85687043e+00 -6.20866739e-01 -6.20866739e-01
 -6.20866739e-01  3.60318113e+00  5.32796451e+00  5.32796451e+00
  5.32796451e+00  6.27402331e+01  6.32841393e+02]
E1 = -181.30332563855904  E_coul = 54.28806061725603
cycle= 4 E= -127.015265021303  delta_E= -1.79e-07  |g|= 0.000142  |ddm|= 0.000767
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000161397
diis-c [-9.55530286e-11  5.45933872e-04 -4.94124280e-03 -1.23658388e-01
  1.12805370e+00]
  HOMO = -0.620823806212578  LUMO = 3.60318818119939
  mo_energy =
[-3.26443014e+01 -1.85686254e+00 -6.20823806e-01 -6.20823806e-01
 -6.20823806e-01  3.60318818e+00  5.32802741e+00  5.32802741e+00
  5.32802741e+00  6.27403383e+01  6.32841565e+02]
E1 = -181.30325898717484  E_coul = 54.287993963911596
cycle= 5 E= -127.015265023263  delta_E= -1.96e-09  |g|= 4.95e-07  |ddm|= 7.3e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.16922e-07
diis-c [-4.63646269e-15 -1.39651347e-05  1.61080568e-04  3.73452764e-03
 -3.33201789e-02  1.02943854e+00]
  HOMO = -0.620823831853429  LUMO = 3.60318824440444
  mo_energy =
[-3.26443015e+01 -1.85686249e+00 -6.20823832e-01 -6.20823832e-01
 -6.20823832e-01  3.60318824e+00  5.32802735e+00  5.32802735e+00
  5.32802735e+00  6.27403382e+01  6.32841564e+02]
E1 = -181.30325900341163  E_coul = 54.287993980148336
cycle= 6 E= -127.015265023263  delta_E= -2.84e-14  |g|= 8.79e-09  |ddm|= 1.79e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.30325900341163  E_coul = 54.287993980148336
  HOMO = -0.620823835835485  LUMO = 3.60318824153256
  mo_energy =
[-3.26443015e+01 -1.85686250e+00 -6.20823836e-01 -6.20823836e-01
 -6.20823836e-01  3.60318824e+00  5.32802735e+00  5.32802735e+00
  5.32802735e+00  6.27403382e+01  6.32841564e+02]
E1 = -181.3032590138737  E_coul = 54.28799399061061
Extra cycle  E= -127.015265023263  delta_E= 1.71e-13  |g|= 1.74e-09  |ddm|= 2.84e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.67872075 453.98423439  68.35439892  15.3757783    2.23316361
   5.29666671   0.89426048]
E = -127.01526502326311
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.678720751045       1
[INPUT] 0    0    [1    /1   ]  453.984234395        1
[INPUT] 0    0    [1    /1   ]  68.3543989169        1
[INPUT] 0    0    [1    /1   ]  15.3757782959        1
[INPUT] 0    0    [1    /1   ]  2.23316361016        1
[INPUT] 1    0    [1    /1   ]  5.29666670837        1
[INPUT] 1    0    [1    /1   ]  0.89426047817        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.6787207510451032, 1.0]], [0, [453.9842343946969, 1.0]], [0, [68.35439891691013, 1.0]], [0, [15.375778295936927, 1.0]], [0, [2.233163610163548, 1.0]], [1, [5.296666708367284, 1.0]], [1, [0.8942604781697464, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.67872075]
bas 1, expnt(s) = [453.98423439]
bas 2, expnt(s) = [68.35439892]
bas 3, expnt(s) = [15.3757783]
bas 4, expnt(s) = [2.23316361]
bas 5, expnt(s) = [5.29666671]
bas 6, expnt(s) = [0.89426048]
CPU time:        33.27
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.67872075
   1.88922363 453.98423439 248.48238261  68.35439892  60.06062894
  15.3757783   19.6174636    2.23316361   4.6153584    5.29666671
  23.44162423   0.89426048   2.53696479]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851272924334403
cond(S) = 20.537399032895504
E1 = -181.21038037166747  E_coul = 54.41270964750296
init E= -126.797670724165
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645603842609402  LUMO = 3.57505481329314
  mo_energy =
[-32.48491321  -1.88277933  -0.64560384  -0.64560384  -0.64560384
   3.57505481   5.31864982   5.31864982   5.31864982  62.88032714
 633.07849863]
E1 = -181.1524613609852  E_coul = 54.137868093169075
cycle= 1 E= -127.014593267816  delta_E= -0.217  |g|= 0.119  |ddm|= 0.273
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.130633
diis-c [-0.01706507  1.        ]
  HOMO = -0.630776557043744  LUMO = 3.59382455057528
  mo_energy =
[-3.26804120e+01 -1.86602228e+00 -6.30776557e-01 -6.30776557e-01
 -6.30776557e-01  3.59382455e+00  5.31237042e+00  5.31237042e+00
  5.31237042e+00  6.27065057e+01  6.32797442e+02]
E1 = -181.33752906459267  E_coul = 54.32229935637397
cycle= 2 E= -127.015229708219  delta_E= -0.000636  |g|= 0.0233  |ddm|= 0.0394
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0295436
diis-c [-2.29532729e-04  1.63511953e-01  8.36488047e-01]
  HOMO = -0.620626595846996  LUMO = 3.60372278309205
  mo_energy =
[-3.26433618e+01 -1.85633059e+00 -6.20626596e-01 -6.20626596e-01
 -6.20626596e-01  3.60372278e+00  5.32835438e+00  5.32835438e+00
  5.32835438e+00  6.27412439e+01  6.32842006e+02]
E1 = -181.30183073245612  E_coul = 54.286565890275334
cycle= 3 E= -127.015264842181  delta_E= -3.51e-05  |g|= 0.00146  |ddm|= 0.00564
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00128363
diis-c [-6.48799416e-07 -1.09645857e-02 -1.98749936e-02  1.03083958e+00]
  HOMO = -0.620866738603203  LUMO = 3.60318113459449
  mo_energy =
[-3.26444182e+01 -1.85687043e+00 -6.20866739e-01 -6.20866739e-01
 -6.20866739e-01  3.60318113e+00  5.32796451e+00  5.32796451e+00
  5.32796451e+00  6.27402331e+01  6.32841393e+02]
E1 = -181.30332563855904  E_coul = 54.28806061725603
cycle= 4 E= -127.015265021303  delta_E= -1.79e-07  |g|= 0.000142  |ddm|= 0.000767
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000161397
diis-c [-9.55530286e-11  5.45933872e-04 -4.94124280e-03 -1.23658388e-01
  1.12805370e+00]
  HOMO = -0.620823806212578  LUMO = 3.60318818119939
  mo_energy =
[-3.26443014e+01 -1.85686254e+00 -6.20823806e-01 -6.20823806e-01
 -6.20823806e-01  3.60318818e+00  5.32802741e+00  5.32802741e+00
  5.32802741e+00  6.27403383e+01  6.32841565e+02]
E1 = -181.30325898717484  E_coul = 54.287993963911596
cycle= 5 E= -127.015265023263  delta_E= -1.96e-09  |g|= 4.95e-07  |ddm|= 7.3e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.16922e-07
diis-c [-4.63646269e-15 -1.39651347e-05  1.61080568e-04  3.73452764e-03
 -3.33201789e-02  1.02943854e+00]
  HOMO = -0.620823831853429  LUMO = 3.60318824440444
  mo_energy =
[-3.26443015e+01 -1.85686249e+00 -6.20823832e-01 -6.20823832e-01
 -6.20823832e-01  3.60318824e+00  5.32802735e+00  5.32802735e+00
  5.32802735e+00  6.27403382e+01  6.32841564e+02]
E1 = -181.30325900341163  E_coul = 54.287993980148336
cycle= 6 E= -127.015265023263  delta_E= -2.84e-14  |g|= 8.79e-09  |ddm|= 1.79e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.30325900341163  E_coul = 54.287993980148336
  HOMO = -0.620823835835485  LUMO = 3.60318824153256
  mo_energy =
[-3.26443015e+01 -1.85686250e+00 -6.20823836e-01 -6.20823836e-01
 -6.20823836e-01  3.60318824e+00  5.32802735e+00  5.32802735e+00
  5.32802735e+00  6.27403382e+01  6.32841564e+02]
E1 = -181.3032590138737  E_coul = 54.28799399061061
Extra cycle  E= -127.015265023263  delta_E= 1.71e-13  |g|= 1.74e-09  |ddm|= 2.84e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.537399032895504
E1 = -181.3032590138737  E_coul = 54.28799399061061
init E= -127.015265023263
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.620823835219125  LUMO = 3.60318824241964
  mo_energy =
[-3.26443015e+01 -1.85686249e+00 -6.20823835e-01 -6.20823835e-01
 -6.20823835e-01  3.60318824e+00  5.32802735e+00  5.32802735e+00
  5.32802735e+00  6.27403382e+01  6.32841564e+02]
E1 = -181.30325901104567  E_coul = 54.28799398778247
cycle= 1 E= -127.015265023263  delta_E= -8.53e-14  |g|= 3.74e-10  |ddm|= 8.42e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.30325901104567  E_coul = 54.28799398778247
  HOMO = -0.620823835411806  LUMO = 3.60318824225414
  mo_energy =
[-3.26443015e+01 -1.85686249e+00 -6.20823835e-01 -6.20823835e-01
 -6.20823835e-01  3.60318824e+00  5.32802735e+00  5.32802735e+00
  5.32802735e+00  6.27403382e+01  6.32841564e+02]
E1 = -181.30325901166563  E_coul = 54.287993988402455
Extra cycle  E= -127.015265023263  delta_E= 2.84e-14  |g|= 8.48e-11  |ddm|= 9.92e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.67872075 453.98423439  68.35439892  15.3757783    2.23316361
   5.29666671   0.89426048]
grad_E = [ 4.89735202e-02  8.32434371e-05 -2.57997063e-03 -1.36202052e-02
 -1.44853407e-02 -1.40766365e-03  1.63928522e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.701407557078       1
[INPUT] 0    0    [1    /1   ]  453.984040186        1
[INPUT] 0    0    [1    /1   ]  68.3579093702        1
[INPUT] 0    0    [1    /1   ]  15.548204844         1
[INPUT] 0    0    [1    /1   ]  2.51759965279        1
[INPUT] 1    0    [1    /1   ]  5.28735678626        1
[INPUT] 1    0    [1    /1   ]  0.893796610188       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7014075570782807, 1.0]], [0, [453.98404018627417, 1.0]], [0, [68.35790937019698, 1.0]], [0, [15.548204843975604, 1.0]], [0, [2.517599652786963, 1.0]], [1, [5.287356786259216, 1.0]], [1, [0.8937966101883071, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.70140756]
bas 1, expnt(s) = [453.98404019]
bas 2, expnt(s) = [68.35790937]
bas 3, expnt(s) = [15.54820484]
bas 4, expnt(s) = [2.51759965]
bas 5, expnt(s) = [5.28735679]
bas 6, expnt(s) = [0.89379661]
CPU time:        36.09
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.70140756
   1.93639011 453.98404019 248.48230289  68.35790937  60.06294231
  15.54820484  19.78222852   2.51759965   5.04957732   5.28735679
  23.39013153   0.89379661   2.53531994]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.850685654255656
cond(S) = 20.930006259855652
E1 = -181.2125808756724  E_coul = 54.41436445196047
init E= -126.798216423712
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645652186590334  LUMO = 4.07598648833014
  mo_energy =
[-32.48924348  -1.87941966  -0.64565219  -0.64565219  -0.64565219
   4.07598649   5.31122893   5.31122893   5.31122893  64.62175863
 634.66565585]
E1 = -181.13661070653114  E_coul = 54.11839565159479
cycle= 1 E= -127.018215054936  delta_E= -0.22  |g|= 0.123  |ddm|= 0.281
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.137763
diis-c [-0.01897877  1.        ]
  HOMO = -0.63260438529693  LUMO = 4.08614358201967
  mo_energy =
[-3.26886599e+01 -1.86385343e+00 -6.32604385e-01 -6.32604385e-01
 -6.32604385e-01  4.08614358e+00  5.30228593e+00  5.30228593e+00
  5.30228593e+00  6.44427132e+01  6.34380749e+02]
E1 = -181.32500881302516  E_coul = 54.30613900930334
cycle= 2 E= -127.018869803722  delta_E= -0.000655  |g|= 0.0238  |ddm|= 0.0375
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0300406
diis-c [-2.34128230e-04  1.58830705e-01  8.41169295e-01]
  HOMO = -0.622312533614517  LUMO = 4.0974840907519
  mo_energy =
[-3.26505196e+01 -1.85384792e+00 -6.22312534e-01 -6.22312534e-01
 -6.22312534e-01  4.09748409e+00  5.31855017e+00  5.31855017e+00
  5.31855017e+00  6.44785254e+01  6.34426560e+02]
E1 = -181.2882673416591  E_coul = 54.26936118594029
cycle= 3 E= -127.018906155719  delta_E= -3.64e-05  |g|= 0.00141  |ddm|= 0.00585
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131197
diis-c [-4.86327122e-07 -9.05286795e-03 -5.16465842e-03  1.01421753e+00]
  HOMO = -0.62264658732445  LUMO = 4.09684888141707
  mo_energy =
[-3.26518222e+01 -1.85442173e+00 -6.22646587e-01 -6.22646587e-01
 -6.22646587e-01  4.09684888e+00  5.31802569e+00  5.31802569e+00
  5.31802569e+00  6.44772886e+01  6.34425598e+02]
E1 = -181.28987517181392  E_coul = 54.27096887478001
cycle= 4 E= -127.018906297034  delta_E= -1.41e-07  |g|= 0.000117  |ddm|= 0.000626
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000131722
diis-c [-9.07208177e-11  5.20873087e-04 -5.10918419e-03 -1.27850410e-01
  1.13243872e+00]
  HOMO = -0.622614825171592  LUMO = 4.09685219805986
  mo_energy =
[-3.26517324e+01 -1.85441864e+00 -6.22614825e-01 -6.22614825e-01
 -6.22614825e-01  4.09685220e+00  5.31807286e+00  5.31807286e+00
  5.31807286e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.2898220293288  E_coul = 54.2709157310177
cycle= 5 E= -127.018906298311  delta_E= -1.28e-09  |g|= 4.39e-07  |ddm|= 5.69e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.60032e-07
diis-c [-8.85243710e-15 -1.40971161e-05  1.68368533e-04  4.01332212e-03
 -3.52829188e-02  1.03111533e+00]
  HOMO = -0.622614798238848  LUMO = 4.09685228741082
  mo_energy =
[-3.26517323e+01 -1.85441856e+00 -6.22614798e-01 -6.22614798e-01
 -6.22614798e-01  4.09685229e+00  5.31807289e+00  5.31807289e+00
  5.31807289e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.28982194524656  E_coul = 54.27091564693545
cycle= 6 E= -127.018906298311  delta_E= -1.42e-14  |g|= 9.05e-09  |ddm|= 1.12e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.28982194524656  E_coul = 54.27091564693545
  HOMO = -0.622614802059195  LUMO = 4.09685228455068
  mo_energy =
[-3.26517324e+01 -1.85441857e+00 -6.22614802e-01 -6.22614802e-01
 -6.22614802e-01  4.09685228e+00  5.31807288e+00  5.31807288e+00
  5.31807288e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.28982195550265  E_coul = 54.27091565719155
Extra cycle  E= -127.018906298311  delta_E= 1.42e-14  |g|= 1.77e-09  |ddm|= 2.95e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.70140756 453.98404019  68.35790937  15.54820484   2.51759965
   5.28735679   0.89379661]
E = -127.0189062983111
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.701407557078       1
[INPUT] 0    0    [1    /1   ]  453.984040186        1
[INPUT] 0    0    [1    /1   ]  68.3579093702        1
[INPUT] 0    0    [1    /1   ]  15.548204844         1
[INPUT] 0    0    [1    /1   ]  2.51759965279        1
[INPUT] 1    0    [1    /1   ]  5.28735678626        1
[INPUT] 1    0    [1    /1   ]  0.893796610188       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7014075570782807, 1.0]], [0, [453.98404018627417, 1.0]], [0, [68.35790937019698, 1.0]], [0, [15.548204843975604, 1.0]], [0, [2.517599652786963, 1.0]], [1, [5.287356786259216, 1.0]], [1, [0.8937966101883071, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.70140756]
bas 1, expnt(s) = [453.98404019]
bas 2, expnt(s) = [68.35790937]
bas 3, expnt(s) = [15.54820484]
bas 4, expnt(s) = [2.51759965]
bas 5, expnt(s) = [5.28735679]
bas 6, expnt(s) = [0.89379661]
CPU time:        36.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.70140756
   1.93639011 453.98404019 248.48230289  68.35790937  60.06294231
  15.54820484  19.78222852   2.51759965   5.04957732   5.28735679
  23.39013153   0.89379661   2.53531994]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.850685654255656
cond(S) = 20.930006259855652
E1 = -181.2125808756724  E_coul = 54.41436445196047
init E= -126.798216423712
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645652186590334  LUMO = 4.07598648833014
  mo_energy =
[-32.48924348  -1.87941966  -0.64565219  -0.64565219  -0.64565219
   4.07598649   5.31122893   5.31122893   5.31122893  64.62175863
 634.66565585]
E1 = -181.13661070653114  E_coul = 54.11839565159479
cycle= 1 E= -127.018215054936  delta_E= -0.22  |g|= 0.123  |ddm|= 0.281
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.137763
diis-c [-0.01897877  1.        ]
  HOMO = -0.63260438529693  LUMO = 4.08614358201967
  mo_energy =
[-3.26886599e+01 -1.86385343e+00 -6.32604385e-01 -6.32604385e-01
 -6.32604385e-01  4.08614358e+00  5.30228593e+00  5.30228593e+00
  5.30228593e+00  6.44427132e+01  6.34380749e+02]
E1 = -181.32500881302516  E_coul = 54.30613900930334
cycle= 2 E= -127.018869803722  delta_E= -0.000655  |g|= 0.0238  |ddm|= 0.0375
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0300406
diis-c [-2.34128230e-04  1.58830705e-01  8.41169295e-01]
  HOMO = -0.622312533614517  LUMO = 4.0974840907519
  mo_energy =
[-3.26505196e+01 -1.85384792e+00 -6.22312534e-01 -6.22312534e-01
 -6.22312534e-01  4.09748409e+00  5.31855017e+00  5.31855017e+00
  5.31855017e+00  6.44785254e+01  6.34426560e+02]
E1 = -181.2882673416591  E_coul = 54.26936118594029
cycle= 3 E= -127.018906155719  delta_E= -3.64e-05  |g|= 0.00141  |ddm|= 0.00585
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00131197
diis-c [-4.86327122e-07 -9.05286795e-03 -5.16465842e-03  1.01421753e+00]
  HOMO = -0.62264658732445  LUMO = 4.09684888141707
  mo_energy =
[-3.26518222e+01 -1.85442173e+00 -6.22646587e-01 -6.22646587e-01
 -6.22646587e-01  4.09684888e+00  5.31802569e+00  5.31802569e+00
  5.31802569e+00  6.44772886e+01  6.34425598e+02]
E1 = -181.28987517181392  E_coul = 54.27096887478001
cycle= 4 E= -127.018906297034  delta_E= -1.41e-07  |g|= 0.000117  |ddm|= 0.000626
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000131722
diis-c [-9.07208177e-11  5.20873087e-04 -5.10918419e-03 -1.27850410e-01
  1.13243872e+00]
  HOMO = -0.622614825171592  LUMO = 4.09685219805986
  mo_energy =
[-3.26517324e+01 -1.85441864e+00 -6.22614825e-01 -6.22614825e-01
 -6.22614825e-01  4.09685220e+00  5.31807286e+00  5.31807286e+00
  5.31807286e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.2898220293288  E_coul = 54.2709157310177
cycle= 5 E= -127.018906298311  delta_E= -1.28e-09  |g|= 4.39e-07  |ddm|= 5.69e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.60032e-07
diis-c [-8.85243710e-15 -1.40971161e-05  1.68368533e-04  4.01332212e-03
 -3.52829188e-02  1.03111533e+00]
  HOMO = -0.622614798238848  LUMO = 4.09685228741082
  mo_energy =
[-3.26517323e+01 -1.85441856e+00 -6.22614798e-01 -6.22614798e-01
 -6.22614798e-01  4.09685229e+00  5.31807289e+00  5.31807289e+00
  5.31807289e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.28982194524656  E_coul = 54.27091564693545
cycle= 6 E= -127.018906298311  delta_E= -1.42e-14  |g|= 9.05e-09  |ddm|= 1.12e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.28982194524656  E_coul = 54.27091564693545
  HOMO = -0.622614802059195  LUMO = 4.09685228455068
  mo_energy =
[-3.26517324e+01 -1.85441857e+00 -6.22614802e-01 -6.22614802e-01
 -6.22614802e-01  4.09685228e+00  5.31807288e+00  5.31807288e+00
  5.31807288e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.28982195550265  E_coul = 54.27091565719155
Extra cycle  E= -127.018906298311  delta_E= 1.42e-14  |g|= 1.77e-09  |ddm|= 2.95e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 20.930006259855652
E1 = -181.28982195550265  E_coul = 54.27091565719155
init E= -127.018906298311
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.622614801453975  LUMO = 4.09685228552696
  mo_energy =
[-3.26517324e+01 -1.85441857e+00 -6.22614801e-01 -6.22614801e-01
 -6.22614801e-01  4.09685229e+00  5.31807288e+00  5.31807288e+00
  5.31807288e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.28982195278735  E_coul = 54.27091565447618
cycle= 1 E= -127.018906298311  delta_E= -8.53e-14  |g|= 3.62e-10  |ddm|= 8.05e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.28982195278735  E_coul = 54.27091565447618
  HOMO = -0.622614801637702  LUMO = 4.09685228535215
  mo_energy =
[-3.26517324e+01 -1.85441857e+00 -6.22614802e-01 -6.22614802e-01
 -6.22614802e-01  4.09685229e+00  5.31807288e+00  5.31807288e+00
  5.31807288e+00  6.44773696e+01  6.34425736e+02]
E1 = -181.28982195338708  E_coul = 54.270915655075946
Extra cycle  E= -127.018906298311  delta_E= 5.68e-14  |g|= 8.28e-11  |ddm|= 9.63e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.70140756 453.98404019  68.35790937  15.54820484   2.51759965
   5.28735679   0.89379661]
grad_E = [ 0.00804244  0.00011826 -0.00379085 -0.00980227 -0.00269861 -0.0031251
  0.01950781]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.736298928933       1
[INPUT] 0    0    [1    /1   ]  453.983745012        1
[INPUT] 0    0    [1    /1   ]  68.3649427826        1
[INPUT] 0    0    [1    /1   ]  15.7104094617        1
[INPUT] 0    0    [1    /1   ]  2.77893581266        1
[INPUT] 1    0    [1    /1   ]  5.28115944258        1
[INPUT] 1    0    [1    /1   ]  0.892199450923       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7362989289327834, 1.0]], [0, [453.9837450116379, 1.0]], [0, [68.36494278255041, 1.0]], [0, [15.710409461728126, 1.0]], [0, [2.778935812656487, 1.0]], [1, [5.281159442578351, 1.0]], [1, [0.8921994509227109, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.73629893]
bas 1, expnt(s) = [453.98374501]
bas 2, expnt(s) = [68.36494278]
bas 3, expnt(s) = [15.71040946]
bas 4, expnt(s) = [2.77893581]
bas 5, expnt(s) = [5.28115944]
bas 6, expnt(s) = [0.89219945]
CPU time:        39.08
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.73629893
   2.00819393 453.98374501 248.48218172  68.36494278  60.0675772
  15.71040946  19.93680919   2.77893581   5.43780852   5.28115944
  23.35586691   0.89219945   2.52965813]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.849797970960308
cond(S) = 21.935847524787516
E1 = -181.210460949501  E_coul = 54.41290750722014
init E= -126.797553442281
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645729320529491  LUMO = 4.60939281389681
  mo_energy =
[-32.49408063  -1.87577756  -0.64572932  -0.64572932  -0.64572932
   4.60939281   5.30126021   5.30126021   5.30126021  66.28402393
 636.20269592]
E1 = -181.14372920388246  E_coul = 54.124150160680635
cycle= 1 E= -127.019579043202  delta_E= -0.222  |g|= 0.125  |ddm|= 0.282
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139215
diis-c [-0.01938087  1.        ]
  HOMO = -0.631665570845126  LUMO = 4.61282910046489
  mo_energy =
[-3.26926776e+01 -1.86045694e+00 -6.31665571e-01 -6.31665571e-01
 -6.31665571e-01  4.61282910e+00  5.29343646e+00  5.29343646e+00
  5.29343646e+00  6.61052040e+01  6.35917960e+02]
E1 = -181.32954981392794  E_coul = 54.309311570740384
cycle= 2 E= -127.020238243188  delta_E= -0.000659  |g|= 0.0235  |ddm|= 0.0372
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0297578
diis-c [-2.49266584e-04  1.54237239e-01  8.45762761e-01]
  HOMO = -0.621520810540784  LUMO = 4.62503594931576
  mo_energy =
[-3.26546674e+01 -1.85054187e+00 -6.21520811e-01 -6.21520811e-01
 -6.21520811e-01  4.62503595e+00  5.30952410e+00  5.30952410e+00
  5.30952410e+00  6.61409391e+01  6.35963809e+02]
E1 = -181.29338227979642  E_coul = 54.27310862119902
cycle= 3 E= -127.020273658597  delta_E= -3.54e-05  |g|= 0.0015  |ddm|= 0.00573
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00141307
diis-c [-5.14197726e-07 -9.26026505e-03 -2.49617130e-03  1.01175644e+00]
  HOMO = -0.621894934682402  LUMO = 4.62429432225465
  mo_energy =
[-3.26560900e+01 -1.85116273e+00 -6.21894935e-01 -6.21894935e-01
 -6.21894935e-01  4.62429432e+00  5.30894100e+00  5.30894100e+00
  5.30894100e+00  6.61395908e+01  6.35962730e+02]
E1 = -181.29505438545283  E_coul = 54.27478057702411
cycle= 4 E= -127.020273808429  delta_E= -1.5e-07  |g|= 0.000111  |ddm|= 0.000625
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000124787
diis-c [-9.54108342e-11  4.92101913e-04 -5.08208519e-03 -1.18356020e-01
  1.12294600e+00]
  HOMO = -0.621867400318424  LUMO = 4.62429567662878
  mo_energy =
[-3.26560083e+01 -1.85116196e+00 -6.21867400e-01 -6.21867400e-01
 -6.21867400e-01  4.62429568e+00  5.30898253e+00  5.30898253e+00
  5.30898253e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.29500341099273  E_coul = 54.27472960145096
cycle= 5 E= -127.020273809542  delta_E= -1.11e-09  |g|= 4.61e-07  |ddm|= 5.22e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.83104e-07
diis-c [-8.58290200e-15 -1.36468716e-05  1.71679665e-04  3.84351413e-03
 -3.61682384e-02  1.03216669e+00]
  HOMO = -0.621867357346036  LUMO = 4.62429579270564
  mo_energy =
[-3.26560082e+01 -1.85116186e+00 -6.21867357e-01 -6.21867357e-01
 -6.21867357e-01  4.62429579e+00  5.30898258e+00  5.30898258e+00
  5.30898258e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.2950032852285  E_coul = 54.274729475686534
cycle= 6 E= -127.020273809542  delta_E= -1.71e-13  |g|= 7.97e-09  |ddm|= 1.16e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.2950032852285  E_coul = 54.274729475686534
  HOMO = -0.621867360609601  LUMO = 4.62429579003136
  mo_energy =
[-3.26560082e+01 -1.85116187e+00 -6.21867361e-01 -6.21867361e-01
 -6.21867361e-01  4.62429579e+00  5.30898257e+00  5.30898257e+00
  5.30898257e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.29500329428245  E_coul = 54.27472948474061
Extra cycle  E= -127.020273809542  delta_E= 1.14e-13  |g|= 1.56e-09  |ddm|= 2.55e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.73629893 453.98374501  68.36494278  15.71040946   2.77893581
   5.28115944   0.89219945]
E = -127.02027380954183
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.736298928933       1
[INPUT] 0    0    [1    /1   ]  453.983745012        1
[INPUT] 0    0    [1    /1   ]  68.3649427826        1
[INPUT] 0    0    [1    /1   ]  15.7104094617        1
[INPUT] 0    0    [1    /1   ]  2.77893581266        1
[INPUT] 1    0    [1    /1   ]  5.28115944258        1
[INPUT] 1    0    [1    /1   ]  0.892199450923       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7362989289327834, 1.0]], [0, [453.9837450116379, 1.0]], [0, [68.36494278255041, 1.0]], [0, [15.710409461728126, 1.0]], [0, [2.778935812656487, 1.0]], [1, [5.281159442578351, 1.0]], [1, [0.8921994509227109, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.73629893]
bas 1, expnt(s) = [453.98374501]
bas 2, expnt(s) = [68.36494278]
bas 3, expnt(s) = [15.71040946]
bas 4, expnt(s) = [2.77893581]
bas 5, expnt(s) = [5.28115944]
bas 6, expnt(s) = [0.89219945]
CPU time:        39.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.73629893
   2.00819393 453.98374501 248.48218172  68.36494278  60.0675772
  15.71040946  19.93680919   2.77893581   5.43780852   5.28115944
  23.35586691   0.89219945   2.52965813]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.849797970960308
cond(S) = 21.935847524787516
E1 = -181.210460949501  E_coul = 54.41290750722014
init E= -126.797553442281
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645729320529491  LUMO = 4.60939281389681
  mo_energy =
[-32.49408063  -1.87577756  -0.64572932  -0.64572932  -0.64572932
   4.60939281   5.30126021   5.30126021   5.30126021  66.28402393
 636.20269592]
E1 = -181.14372920388246  E_coul = 54.124150160680635
cycle= 1 E= -127.019579043202  delta_E= -0.222  |g|= 0.125  |ddm|= 0.282
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139215
diis-c [-0.01938087  1.        ]
  HOMO = -0.631665570845126  LUMO = 4.61282910046489
  mo_energy =
[-3.26926776e+01 -1.86045694e+00 -6.31665571e-01 -6.31665571e-01
 -6.31665571e-01  4.61282910e+00  5.29343646e+00  5.29343646e+00
  5.29343646e+00  6.61052040e+01  6.35917960e+02]
E1 = -181.32954981392794  E_coul = 54.309311570740384
cycle= 2 E= -127.020238243188  delta_E= -0.000659  |g|= 0.0235  |ddm|= 0.0372
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0297578
diis-c [-2.49266584e-04  1.54237239e-01  8.45762761e-01]
  HOMO = -0.621520810540784  LUMO = 4.62503594931576
  mo_energy =
[-3.26546674e+01 -1.85054187e+00 -6.21520811e-01 -6.21520811e-01
 -6.21520811e-01  4.62503595e+00  5.30952410e+00  5.30952410e+00
  5.30952410e+00  6.61409391e+01  6.35963809e+02]
E1 = -181.29338227979642  E_coul = 54.27310862119902
cycle= 3 E= -127.020273658597  delta_E= -3.54e-05  |g|= 0.0015  |ddm|= 0.00573
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00141307
diis-c [-5.14197726e-07 -9.26026505e-03 -2.49617130e-03  1.01175644e+00]
  HOMO = -0.621894934682402  LUMO = 4.62429432225465
  mo_energy =
[-3.26560900e+01 -1.85116273e+00 -6.21894935e-01 -6.21894935e-01
 -6.21894935e-01  4.62429432e+00  5.30894100e+00  5.30894100e+00
  5.30894100e+00  6.61395908e+01  6.35962730e+02]
E1 = -181.29505438545283  E_coul = 54.27478057702411
cycle= 4 E= -127.020273808429  delta_E= -1.5e-07  |g|= 0.000111  |ddm|= 0.000625
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000124787
diis-c [-9.54108342e-11  4.92101913e-04 -5.08208519e-03 -1.18356020e-01
  1.12294600e+00]
  HOMO = -0.621867400318424  LUMO = 4.62429567662878
  mo_energy =
[-3.26560083e+01 -1.85116196e+00 -6.21867400e-01 -6.21867400e-01
 -6.21867400e-01  4.62429568e+00  5.30898253e+00  5.30898253e+00
  5.30898253e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.29500341099273  E_coul = 54.27472960145096
cycle= 5 E= -127.020273809542  delta_E= -1.11e-09  |g|= 4.61e-07  |ddm|= 5.22e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.83104e-07
diis-c [-8.58290200e-15 -1.36468716e-05  1.71679665e-04  3.84351413e-03
 -3.61682384e-02  1.03216669e+00]
  HOMO = -0.621867357346036  LUMO = 4.62429579270564
  mo_energy =
[-3.26560082e+01 -1.85116186e+00 -6.21867357e-01 -6.21867357e-01
 -6.21867357e-01  4.62429579e+00  5.30898258e+00  5.30898258e+00
  5.30898258e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.2950032852285  E_coul = 54.274729475686534
cycle= 6 E= -127.020273809542  delta_E= -1.71e-13  |g|= 7.97e-09  |ddm|= 1.16e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.2950032852285  E_coul = 54.274729475686534
  HOMO = -0.621867360609601  LUMO = 4.62429579003136
  mo_energy =
[-3.26560082e+01 -1.85116187e+00 -6.21867361e-01 -6.21867361e-01
 -6.21867361e-01  4.62429579e+00  5.30898257e+00  5.30898257e+00
  5.30898257e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.29500329428245  E_coul = 54.27472948474061
Extra cycle  E= -127.020273809542  delta_E= 1.14e-13  |g|= 1.56e-09  |ddm|= 2.55e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.935847524787516
E1 = -181.29500329428245  E_coul = 54.27472948474061
init E= -127.020273809542
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.621867360070716  LUMO = 4.62429579096121
  mo_energy =
[-3.26560082e+01 -1.85116187e+00 -6.21867360e-01 -6.21867360e-01
 -6.21867360e-01  4.62429579e+00  5.30898257e+00  5.30898257e+00
  5.30898257e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.2950032919727  E_coul = 54.27472948243082
cycle= 1 E= -127.020273809542  delta_E= -5.68e-14  |g|= 3.07e-10  |ddm|= 6.67e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.2950032919727  E_coul = 54.27472948243082
  HOMO = -0.621867360225104  LUMO = 4.62429579079792
  mo_energy =
[-3.26560082e+01 -1.85116187e+00 -6.21867360e-01 -6.21867360e-01
 -6.21867360e-01  4.62429579e+00  5.30898257e+00  5.30898257e+00
  5.30898257e+00  6.61396645e+01  6.35962858e+02]
E1 = -181.29500329248657  E_coul = 54.27472948294463
Extra cycle  E= -127.020273809542  delta_E= -5.68e-14  |g|= 7.06e-11  |ddm|= 8.15e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.73629893 453.98374501  68.36494278  15.71040946   2.77893581
   5.28115944   0.89219945]
grad_E = [ 0.02257153  0.00014735 -0.00475848 -0.00763122 -0.00090785 -0.00279928
  0.0085372 ]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.743904311951       1
[INPUT] 0    0    [1    /1   ]  453.983307842        1
[INPUT] 0    0    [1    /1   ]  68.3772968085        1
[INPUT] 0    0    [1    /1   ]  15.8377788417        1
[INPUT] 0    0    [1    /1   ]  2.96363053628        1
[INPUT] 1    0    [1    /1   ]  5.27908353705        1
[INPUT] 1    0    [1    /1   ]  0.891087708167       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7439043119510635, 1.0]], [0, [453.9833078424105, 1.0]], [0, [68.37729680852378, 1.0]], [0, [15.837778841659034, 1.0]], [0, [2.963630536279998, 1.0]], [1, [5.279083537051353, 1.0]], [1, [0.8910877081669628, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.74390431]
bas 1, expnt(s) = [453.98330784]
bas 2, expnt(s) = [68.37729681]
bas 3, expnt(s) = [15.83777884]
bas 4, expnt(s) = [2.96363054]
bas 5, expnt(s) = [5.27908354]
bas 6, expnt(s) = [0.89108771]
CPU time:        42.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.74390431
   2.02373122 453.98330784 248.48200226  68.37729681  60.07571799
  15.83777884  20.05791238   2.96363054   5.70667408   5.27908354
  23.34439164   0.89108771   2.52571858]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.849848917235374
cond(S) = 22.414737240178187
E1 = -181.20284165980888  E_coul = 54.40967339312985
init E= -126.793168266679
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646268647989009  LUMO = 4.9259093100152
  mo_energy =
[-32.4964633   -1.87382953  -0.64626865  -0.64626865  -0.64626865
   4.92590931   5.29547672   5.29547672   5.29547672  67.42501856
 637.31464281]
E1 = -181.10956460764675  E_coul = 54.0894140576435
cycle= 1 E= -127.020150550003  delta_E= -0.227  |g|= 0.129  |ddm|= 0.291
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.14575
diis-c [-0.02124309  1.        ]
  HOMO = -0.634536851735187  LUMO = 4.92255854336004
  mo_energy =
[-3.27018198e+01 -1.86038072e+00 -6.34536852e-01 -6.34536852e-01
 -6.34536852e-01  4.92255854e+00  5.28405951e+00  5.28405951e+00
  5.28405951e+00  6.72390576e+01  6.37022819e+02]
E1 = -181.30146907501958  E_coul = 54.28062284025406
cycle= 2 E= -127.020846234766  delta_E= -0.000696  |g|= 0.0243  |ddm|= 0.0366
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306827
diis-c [-2.49650628e-04  1.53637952e-01  8.46362048e-01]
  HOMO = -0.624107613487017  LUMO = 4.93592089165377
  mo_energy =
[-3.26624529e+01 -1.85005561e+00 -6.24107613e-01 -6.24107613e-01
 -6.24107613e-01  4.93592089e+00  5.30063152e+00  5.30063152e+00
  5.30063152e+00  6.72761183e+01  6.37070169e+02]
E1 = -181.26405602674464  E_coul = 54.2431721610512
cycle= 3 E= -127.020883865693  delta_E= -3.76e-05  |g|= 0.00145  |ddm|= 0.00595
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00141358
diis-c [-4.04220473e-07 -8.01606818e-03  3.97590122e-03  1.00404017e+00]
  HOMO = -0.624513273076871  LUMO = 4.9351490227839
  mo_energy =
[-3.26639535e+01 -1.85067146e+00 -6.24513273e-01 -6.24513273e-01
 -6.24513273e-01  4.93514902e+00  5.30000348e+00  5.30000348e+00
  5.30000348e+00  6.72746999e+01  6.37068955e+02]
E1 = -181.26574040965994  E_coul = 54.244856414417235
cycle= 4 E= -127.020883995243  delta_E= -1.3e-07  |g|= 9.61e-05  |ddm|= 0.000545
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00010662
diis-c [-9.19720560e-11  4.71979930e-04 -4.88573591e-03 -1.22037740e-01
  1.12645150e+00]
  HOMO = -0.624491581946052  LUMO = 4.93514809304618
  mo_energy =
[-3.26638875e+01 -1.85067280e+00 -6.24491582e-01 -6.24491582e-01
 -6.24491582e-01  4.93514809e+00  5.30003653e+00  5.30003653e+00
  5.30003653e+00  6.72747594e+01  6.37069062e+02]
E1 = -181.2656989516309  E_coul = 54.24481495558055
cycle= 5 E= -127.02088399605  delta_E= -8.08e-10  |g|= 4.45e-07  |ddm|= 4.37e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.2656989516309  E_coul = 54.24481495558055
  HOMO = -0.62449150722927  LUMO = 4.93514823115252
  mo_energy =
[-3.26638873e+01 -1.85067269e+00 -6.24491507e-01 -6.24491507e-01
 -6.24491507e-01  4.93514823e+00  5.30003663e+00  5.30003663e+00
  5.30003663e+00  6.72747596e+01  6.37069062e+02]
E1 = -181.26569874246343  E_coul = 54.24481474641298
Extra cycle  E= -127.02088399605  delta_E= -1.14e-13  |g|= 3.38e-08  |ddm|= 8.52e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.74390431 453.98330784  68.37729681  15.83777884   2.96363054
   5.27908354   0.89108771]
E = -127.02088399605046
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.743904311951       1
[INPUT] 0    0    [1    /1   ]  453.983307842        1
[INPUT] 0    0    [1    /1   ]  68.3772968085        1
[INPUT] 0    0    [1    /1   ]  15.8377788417        1
[INPUT] 0    0    [1    /1   ]  2.96363053628        1
[INPUT] 1    0    [1    /1   ]  5.27908353705        1
[INPUT] 1    0    [1    /1   ]  0.891087708167       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7439043119510635, 1.0]], [0, [453.9833078424105, 1.0]], [0, [68.37729680852378, 1.0]], [0, [15.837778841659034, 1.0]], [0, [2.963630536279998, 1.0]], [1, [5.279083537051353, 1.0]], [1, [0.8910877081669628, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.74390431]
bas 1, expnt(s) = [453.98330784]
bas 2, expnt(s) = [68.37729681]
bas 3, expnt(s) = [15.83777884]
bas 4, expnt(s) = [2.96363054]
bas 5, expnt(s) = [5.27908354]
bas 6, expnt(s) = [0.89108771]
CPU time:        42.48
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.74390431
   2.02373122 453.98330784 248.48200226  68.37729681  60.07571799
  15.83777884  20.05791238   2.96363054   5.70667408   5.27908354
  23.34439164   0.89108771   2.52571858]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.849848917235374
cond(S) = 22.414737240178187
E1 = -181.20284165980888  E_coul = 54.40967339312985
init E= -126.793168266679
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646268647989009  LUMO = 4.9259093100152
  mo_energy =
[-32.4964633   -1.87382953  -0.64626865  -0.64626865  -0.64626865
   4.92590931   5.29547672   5.29547672   5.29547672  67.42501856
 637.31464281]
E1 = -181.10956460764675  E_coul = 54.0894140576435
cycle= 1 E= -127.020150550003  delta_E= -0.227  |g|= 0.129  |ddm|= 0.291
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.14575
diis-c [-0.02124309  1.        ]
  HOMO = -0.634536851735187  LUMO = 4.92255854336004
  mo_energy =
[-3.27018198e+01 -1.86038072e+00 -6.34536852e-01 -6.34536852e-01
 -6.34536852e-01  4.92255854e+00  5.28405951e+00  5.28405951e+00
  5.28405951e+00  6.72390576e+01  6.37022819e+02]
E1 = -181.30146907501958  E_coul = 54.28062284025406
cycle= 2 E= -127.020846234766  delta_E= -0.000696  |g|= 0.0243  |ddm|= 0.0366
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0306827
diis-c [-2.49650628e-04  1.53637952e-01  8.46362048e-01]
  HOMO = -0.624107613487017  LUMO = 4.93592089165377
  mo_energy =
[-3.26624529e+01 -1.85005561e+00 -6.24107613e-01 -6.24107613e-01
 -6.24107613e-01  4.93592089e+00  5.30063152e+00  5.30063152e+00
  5.30063152e+00  6.72761183e+01  6.37070169e+02]
E1 = -181.26405602674464  E_coul = 54.2431721610512
cycle= 3 E= -127.020883865693  delta_E= -3.76e-05  |g|= 0.00145  |ddm|= 0.00595
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00141358
diis-c [-4.04220473e-07 -8.01606818e-03  3.97590122e-03  1.00404017e+00]
  HOMO = -0.624513273076871  LUMO = 4.9351490227839
  mo_energy =
[-3.26639535e+01 -1.85067146e+00 -6.24513273e-01 -6.24513273e-01
 -6.24513273e-01  4.93514902e+00  5.30000348e+00  5.30000348e+00
  5.30000348e+00  6.72746999e+01  6.37068955e+02]
E1 = -181.26574040965994  E_coul = 54.244856414417235
cycle= 4 E= -127.020883995243  delta_E= -1.3e-07  |g|= 9.61e-05  |ddm|= 0.000545
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00010662
diis-c [-9.19720560e-11  4.71979930e-04 -4.88573591e-03 -1.22037740e-01
  1.12645150e+00]
  HOMO = -0.624491581946052  LUMO = 4.93514809304618
  mo_energy =
[-3.26638875e+01 -1.85067280e+00 -6.24491582e-01 -6.24491582e-01
 -6.24491582e-01  4.93514809e+00  5.30003653e+00  5.30003653e+00
  5.30003653e+00  6.72747594e+01  6.37069062e+02]
E1 = -181.2656989516309  E_coul = 54.24481495558055
cycle= 5 E= -127.02088399605  delta_E= -8.08e-10  |g|= 4.45e-07  |ddm|= 4.37e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.2656989516309  E_coul = 54.24481495558055
  HOMO = -0.62449150722927  LUMO = 4.93514823115252
  mo_energy =
[-3.26638873e+01 -1.85067269e+00 -6.24491507e-01 -6.24491507e-01
 -6.24491507e-01  4.93514823e+00  5.30003663e+00  5.30003663e+00
  5.30003663e+00  6.72747596e+01  6.37069062e+02]
E1 = -181.26569874246343  E_coul = 54.24481474641298
Extra cycle  E= -127.02088399605  delta_E= -1.14e-13  |g|= 3.38e-08  |ddm|= 8.52e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.414737240178187
E1 = -181.26569874246343  E_coul = 54.24481474641298
init E= -127.02088399605
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.62449152111455  LUMO = 4.93514821732094
  mo_energy =
[-3.26638874e+01 -1.85067270e+00 -6.24491521e-01 -6.24491521e-01
 -6.24491521e-01  4.93514822e+00  5.30003661e+00  5.30003661e+00
  5.30003661e+00  6.72747595e+01  6.37069062e+02]
E1 = -181.26569879072818  E_coul = 54.2448147946778
cycle= 1 E= -127.02088399605  delta_E= 8.53e-14  |g|= 7.09e-09  |ddm|= 8.82e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.26569879072818  E_coul = 54.2448147946778
  HOMO = -0.624491518118023  LUMO = 4.93514822205707
  mo_energy =
[-3.26638873e+01 -1.85067270e+00 -6.24491518e-01 -6.24491518e-01
 -6.24491518e-01  4.93514822e+00  5.30003662e+00  5.30003662e+00
  5.30003662e+00  6.72747595e+01  6.37069062e+02]
E1 = -181.26569877911467  E_coul = 54.24481478306424
Extra cycle  E= -127.02088399605  delta_E= -5.68e-14  |g|= 1.49e-09  |ddm|= 2.61e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.74390431 453.98330784  68.37729681  15.83777884   2.96363054
   5.27908354   0.89108771]
grad_E = [-0.00732258  0.00017054 -0.00555235 -0.00495302  0.00275069 -0.0017044
 -0.00652217]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.758322011859       1
[INPUT] 0    0    [1    /1   ]  453.982886841        1
[INPUT] 0    0    [1    /1   ]  68.3897625923        1
[INPUT] 0    0    [1    /1   ]  15.9240276962        1
[INPUT] 0    0    [1    /1   ]  3.0874988846         1
[INPUT] 1    0    [1    /1   ]  5.27993597564        1
[INPUT] 1    0    [1    /1   ]  0.891605384718       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7583220118590968, 1.0]], [0, [453.9828868405033, 1.0]], [0, [68.38976259227717, 1.0]], [0, [15.924027696193388, 1.0]], [0, [3.0874988846006226, 1.0]], [1, [5.279935975644297, 1.0]], [1, [0.8916053847182572, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.75832201]
bas 1, expnt(s) = [453.98288684]
bas 2, expnt(s) = [68.38976259]
bas 3, expnt(s) = [15.9240277]
bas 4, expnt(s) = [3.08749888]
bas 5, expnt(s) = [5.27993598]
bas 6, expnt(s) = [0.89160538]
CPU time:        45.21
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.75832201
   2.05307716 453.98288684 248.48182944  68.38976259  60.08393206
  15.9240277   20.13977978   3.08749888   5.88464314   5.27993598
  23.34910364   0.89160538   2.52755285]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.848893563868796
cond(S) = 22.977534917447784
E1 = -181.20323117288646  E_coul = 54.41052231825882
init E= -126.792708854628
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64609606626968  LUMO = 5.18070978381898
  mo_energy =
[-32.49841103  -1.8720358   -0.64609607  -0.64609607  -0.64609607
   5.18070978   5.29793609   5.29793609   5.29793609  68.23049301
 638.10658254]
E1 = -181.13067128143862  E_coul = 54.11032768611555
cycle= 1 E= -127.020343595323  delta_E= -0.228  |g|= 0.128  |ddm|= 0.289
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.144249
diis-c [-0.0208079  1.       ]
  HOMO = -0.632664644264479  LUMO = 5.17601613722599
  mo_energy =
[-3.27000783e+01 -1.85736109e+00 -6.32664644e-01 -6.32664644e-01
 -6.32664644e-01  5.17601614e+00  5.28875649e+00  5.28875649e+00
  5.28875649e+00  6.80478653e+01  6.37818447e+02]
E1 = -181.31742469404003  E_coul = 54.29641015173687
cycle= 2 E= -127.021014542303  delta_E= -0.000671  |g|= 0.0237  |ddm|= 0.0358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0298939
diis-c [-2.51721476e-04  1.50175769e-01  8.49824231e-01]
  HOMO = -0.622498976989118  LUMO = 5.18947818750101
  mo_energy =
[-3.26615265e+01 -1.84728059e+00 -6.22498977e-01 -6.22498977e-01
 -6.22498977e-01  5.18947819e+00  5.30493841e+00  5.30493841e+00
  5.30493841e+00  6.80841879e+01  6.37864941e+02]
E1 = -181.28108455724563  E_coul = 54.260034466851224
cycle= 3 E= -127.021050090394  delta_E= -3.55e-05  |g|= 0.00149  |ddm|= 0.00577
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00146063
diis-c [-4.07774141e-07 -8.02473508e-03  6.50741729e-03  1.00151732e+00]
  HOMO = -0.622925187366665  LUMO = 5.1886557652534
  mo_energy =
[-3.26630951e+01 -1.84791777e+00 -6.22925187e-01 -6.22925187e-01
 -6.22925187e-01  5.18865577e+00  5.30427885e+00  5.30427885e+00
  5.30427885e+00  6.80827063e+01  6.37863652e+02]
E1 = -181.28280687090182  E_coul = 54.26175664746671
cycle= 4 E= -127.021050223435  delta_E= -1.33e-07  |g|= 9.37e-05  |ddm|= 0.000542
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000103438
diis-c [-9.40063483e-11  4.58152864e-04 -5.05549050e-03 -1.17989372e-01
  1.12258671e+00]
  HOMO = -0.622905065936529  LUMO = 5.18865406331062
  mo_energy =
[-3.26630324e+01 -1.84791986e+00 -6.22905066e-01 -6.22905066e-01
 -6.22905066e-01  5.18865406e+00  5.30430978e+00  5.30430978e+00
  5.30430978e+00  6.80827629e+01  6.37863756e+02]
E1 = -181.2827667275847  E_coul = 54.261716503399796
cycle= 5 E= -127.021050224185  delta_E= -7.5e-10  |g|= 4.57e-07  |ddm|= 4.18e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.2827667275847  E_coul = 54.261716503399796
  HOMO = -0.622904983685402  LUMO = 5.18865421657138
  mo_energy =
[-3.26630322e+01 -1.84791974e+00 -6.22904984e-01 -6.22904984e-01
 -6.22904984e-01  5.18865422e+00  5.30430989e+00  5.30430989e+00
  5.30430989e+00  6.80827631e+01  6.37863756e+02]
E1 = -181.2827664954986  E_coul = 54.26171627131382
Extra cycle  E= -127.021050224185  delta_E= 9.95e-14  |g|= 3.62e-08  |ddm|= 8.95e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.75832201 453.98288684  68.38976259  15.9240277    3.08749888
   5.27993598   0.89160538]
E = -127.02105022418479
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.758322011859       1
[INPUT] 0    0    [1    /1   ]  453.982886841        1
[INPUT] 0    0    [1    /1   ]  68.3897625923        1
[INPUT] 0    0    [1    /1   ]  15.9240276962        1
[INPUT] 0    0    [1    /1   ]  3.0874988846         1
[INPUT] 1    0    [1    /1   ]  5.27993597564        1
[INPUT] 1    0    [1    /1   ]  0.891605384718       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7583220118590968, 1.0]], [0, [453.9828868405033, 1.0]], [0, [68.38976259227717, 1.0]], [0, [15.924027696193388, 1.0]], [0, [3.0874988846006226, 1.0]], [1, [5.279935975644297, 1.0]], [1, [0.8916053847182572, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.75832201]
bas 1, expnt(s) = [453.98288684]
bas 2, expnt(s) = [68.38976259]
bas 3, expnt(s) = [15.9240277]
bas 4, expnt(s) = [3.08749888]
bas 5, expnt(s) = [5.27993598]
bas 6, expnt(s) = [0.89160538]
CPU time:        45.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.75832201
   2.05307716 453.98288684 248.48182944  68.38976259  60.08393206
  15.9240277   20.13977978   3.08749888   5.88464314   5.27993598
  23.34910364   0.89160538   2.52755285]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.848893563868796
cond(S) = 22.977534917447784
E1 = -181.20323117288646  E_coul = 54.41052231825882
init E= -126.792708854628
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64609606626968  LUMO = 5.18070978381898
  mo_energy =
[-32.49841103  -1.8720358   -0.64609607  -0.64609607  -0.64609607
   5.18070978   5.29793609   5.29793609   5.29793609  68.23049301
 638.10658254]
E1 = -181.13067128143862  E_coul = 54.11032768611555
cycle= 1 E= -127.020343595323  delta_E= -0.228  |g|= 0.128  |ddm|= 0.289
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.144249
diis-c [-0.0208079  1.       ]
  HOMO = -0.632664644264479  LUMO = 5.17601613722599
  mo_energy =
[-3.27000783e+01 -1.85736109e+00 -6.32664644e-01 -6.32664644e-01
 -6.32664644e-01  5.17601614e+00  5.28875649e+00  5.28875649e+00
  5.28875649e+00  6.80478653e+01  6.37818447e+02]
E1 = -181.31742469404003  E_coul = 54.29641015173687
cycle= 2 E= -127.021014542303  delta_E= -0.000671  |g|= 0.0237  |ddm|= 0.0358
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0298939
diis-c [-2.51721476e-04  1.50175769e-01  8.49824231e-01]
  HOMO = -0.622498976989118  LUMO = 5.18947818750101
  mo_energy =
[-3.26615265e+01 -1.84728059e+00 -6.22498977e-01 -6.22498977e-01
 -6.22498977e-01  5.18947819e+00  5.30493841e+00  5.30493841e+00
  5.30493841e+00  6.80841879e+01  6.37864941e+02]
E1 = -181.28108455724563  E_coul = 54.260034466851224
cycle= 3 E= -127.021050090394  delta_E= -3.55e-05  |g|= 0.00149  |ddm|= 0.00577
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00146063
diis-c [-4.07774141e-07 -8.02473508e-03  6.50741729e-03  1.00151732e+00]
  HOMO = -0.622925187366665  LUMO = 5.1886557652534
  mo_energy =
[-3.26630951e+01 -1.84791777e+00 -6.22925187e-01 -6.22925187e-01
 -6.22925187e-01  5.18865577e+00  5.30427885e+00  5.30427885e+00
  5.30427885e+00  6.80827063e+01  6.37863652e+02]
E1 = -181.28280687090182  E_coul = 54.26175664746671
cycle= 4 E= -127.021050223435  delta_E= -1.33e-07  |g|= 9.37e-05  |ddm|= 0.000542
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000103438
diis-c [-9.40063483e-11  4.58152864e-04 -5.05549050e-03 -1.17989372e-01
  1.12258671e+00]
  HOMO = -0.622905065936529  LUMO = 5.18865406331062
  mo_energy =
[-3.26630324e+01 -1.84791986e+00 -6.22905066e-01 -6.22905066e-01
 -6.22905066e-01  5.18865406e+00  5.30430978e+00  5.30430978e+00
  5.30430978e+00  6.80827629e+01  6.37863756e+02]
E1 = -181.2827667275847  E_coul = 54.261716503399796
cycle= 5 E= -127.021050224185  delta_E= -7.5e-10  |g|= 4.57e-07  |ddm|= 4.18e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.2827667275847  E_coul = 54.261716503399796
  HOMO = -0.622904983685402  LUMO = 5.18865421657138
  mo_energy =
[-3.26630322e+01 -1.84791974e+00 -6.22904984e-01 -6.22904984e-01
 -6.22904984e-01  5.18865422e+00  5.30430989e+00  5.30430989e+00
  5.30430989e+00  6.80827631e+01  6.37863756e+02]
E1 = -181.2827664954986  E_coul = 54.26171627131382
Extra cycle  E= -127.021050224185  delta_E= 9.95e-14  |g|= 3.62e-08  |ddm|= 8.95e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.977534917447784
E1 = -181.2827664954986  E_coul = 54.26171627131382
init E= -127.021050224185
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.622904998964517  LUMO = 5.18865420035321
  mo_energy =
[-3.26630322e+01 -1.84791975e+00 -6.22904999e-01 -6.22904999e-01
 -6.22904999e-01  5.18865420e+00  5.30430986e+00  5.30430986e+00
  5.30430986e+00  6.80827630e+01  6.37863756e+02]
E1 = -181.28276654907546  E_coul = 54.261716324890685
cycle= 1 E= -127.021050224185  delta_E= 1.42e-14  |g|= 7.76e-09  |ddm|= 9.42e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.28276654907546  E_coul = 54.261716324890685
  HOMO = -0.622904995627848  LUMO = 5.1886542057213
  mo_energy =
[-3.26630322e+01 -1.84791975e+00 -6.22904996e-01 -6.22904996e-01
 -6.22904996e-01  5.18865421e+00  5.30430987e+00  5.30430987e+00
  5.30430987e+00  6.80827630e+01  6.37863756e+02]
E1 = -181.28276653637306  E_coul = 54.26171631218826
Extra cycle  E= -127.021050224185  delta_E= -1.42e-14  |g|= 1.62e-09  |ddm|= 2.77e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.75832201 453.98288684  68.38976259  15.9240277    3.08749888
   5.27993598   0.89160538]
grad_E = [ 0.00331175  0.00018404 -0.00600819 -0.00386288  0.00240293 -0.00231789
 -0.00124409]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.761781477574       1
[INPUT] 0    0    [1    /1   ]  453.982392462        1
[INPUT] 0    0    [1    /1   ]  68.4052628612        1
[INPUT] 0    0    [1    /1   ]  15.9741490234        1
[INPUT] 0    0    [1    /1   ]  3.14695092991        1
[INPUT] 1    0    [1    /1   ]  5.28389324468        1
[INPUT] 1    0    [1    /1   ]  0.89238503831        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7617814775740456, 1.0]], [0, [453.9823924617601, 1.0]], [0, [68.40526286124566, 1.0]], [0, [15.974149023360624, 1.0]], [0, [3.1469509299081757, 1.0]], [1, [5.283893244683957, 1.0]], [1, [0.8923850383101254, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.76178148]
bas 1, expnt(s) = [453.98239246]
bas 2, expnt(s) = [68.40526286]
bas 3, expnt(s) = [15.97414902]
bas 4, expnt(s) = [3.14695093]
bas 5, expnt(s) = [5.28389324]
bas 6, expnt(s) = [0.89238504]
CPU time:        48.25
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.76178148
   2.06009776 453.98239246 248.48162649  68.40526286  60.09414511
  15.97414902  20.18730399   3.14695093   5.96942503   5.28389324
  23.37098065   0.89238504   2.53031589]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.848383133750293
cond(S) = 23.191811177723253
E1 = -181.20224844434813  E_coul = 54.410748344828015
init E= -126.79150009952
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646127643732146  LUMO = 5.2901940457957
  mo_energy =
[-32.49903611  -1.87127323  -0.64612764  -0.64612764  -0.64612764
   5.29019405   5.30323847   5.30323847   5.30323847  68.63205712
 638.53865256]
E1 = -181.13705673096487  E_coul = 54.11658576602958
cycle= 1 E= -127.020470964935  delta_E= -0.229  |g|= 0.128  |ddm|= 0.29
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.144349
diis-c [-0.02083664  1.        ]
  HOMO = -0.632230009984664  LUMO = 5.28485494840043
  mo_energy =
[-3.26996987e+01 -1.85597308e+00 -6.32230010e-01 -6.32230010e-01
 -6.32230010e-01  5.28485495e+00  5.29456796e+00  5.29456796e+00
  5.29456796e+00  6.84502040e+01  6.38251662e+02]
E1 = -181.32221478400095  E_coul = 54.3010828940205
cycle= 2 E= -127.02113188998  delta_E= -0.000661  |g|= 0.0235  |ddm|= 0.0351
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0296285
diis-c [-2.49761109e-04  1.48695803e-01  8.51304197e-01]
  HOMO = -0.622148349409373  LUMO = 5.29843537066712
  mo_energy =
[-3.26613744e+01 -1.84595071e+00 -6.22148349e-01 -6.22148349e-01
 -6.22148349e-01  5.29843537e+00  5.31063527e+00  5.31063527e+00
  5.31063527e+00  6.84863316e+01  6.38297893e+02]
E1 = -181.28619778680695  E_coul = 54.265031041977906
cycle= 3 E= -127.021166744829  delta_E= -3.49e-05  |g|= 0.00148  |ddm|= 0.00572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00147108
diis-c [-3.77524647e-07 -7.68303247e-03  9.25378952e-03  9.98429243e-01]
  HOMO = -0.62258665262492  LUMO = 5.29759831755376
  mo_energy =
[-3.26629806e+01 -1.84658984e+00 -6.22586653e-01 -6.22586653e-01
 -6.22586653e-01  5.29759832e+00  5.30995694e+00  5.30995694e+00
  5.30995694e+00  6.84848156e+01  6.38296548e+02]
E1 = -181.28793581436298  E_coul = 54.26676894013502
cycle= 4 E= -127.021166874228  delta_E= -1.29e-07  |g|= 8.94e-05  |ddm|= 0.000523
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.8382e-05
diis-c [-9.35933107e-11  4.50778462e-04 -5.15731770e-03 -1.18380792e-01
  1.12308733e+00]
  HOMO = -0.622568011144035  LUMO = 5.29759612330374
  mo_energy =
[-3.26629221e+01 -1.84659234e+00 -6.22568011e-01 -6.22568011e-01
 -6.22568011e-01  5.29759612e+00  5.30998573e+00  5.30998573e+00
  5.30998573e+00  6.84848685e+01  6.38296646e+02]
E1 = -181.28789820077154  E_coul = 54.266731325867795
cycle= 5 E= -127.021166874904  delta_E= -6.76e-10  |g|= 4.56e-07  |ddm|= 3.96e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.28789820077154  E_coul = 54.266731325867795
  HOMO = -0.622567922265914  LUMO = 5.29759628317141
  mo_energy =
[-3.26629218e+01 -1.84659222e+00 -6.22567922e-01 -6.22567922e-01
 -6.22567922e-01  5.29759628e+00  5.30998585e+00  5.30998585e+00
  5.30998585e+00  6.84848687e+01  6.38296646e+02]
E1 = -181.28789795087795  E_coul = 54.26673107597421
Extra cycle  E= -127.021166874904  delta_E=    0  |g|= 3.71e-08  |ddm|= 8.59e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.76178148 453.98239246  68.40526286  15.97414902   3.14695093
   5.28389324   0.89238504]
E = -127.02116687490374
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.761781477574       1
[INPUT] 0    0    [1    /1   ]  453.982392462        1
[INPUT] 0    0    [1    /1   ]  68.4052628612        1
[INPUT] 0    0    [1    /1   ]  15.9741490234        1
[INPUT] 0    0    [1    /1   ]  3.14695092991        1
[INPUT] 1    0    [1    /1   ]  5.28389324468        1
[INPUT] 1    0    [1    /1   ]  0.89238503831        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7617814775740456, 1.0]], [0, [453.9823924617601, 1.0]], [0, [68.40526286124566, 1.0]], [0, [15.974149023360624, 1.0]], [0, [3.1469509299081757, 1.0]], [1, [5.283893244683957, 1.0]], [1, [0.8923850383101254, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.76178148]
bas 1, expnt(s) = [453.98239246]
bas 2, expnt(s) = [68.40526286]
bas 3, expnt(s) = [15.97414902]
bas 4, expnt(s) = [3.14695093]
bas 5, expnt(s) = [5.28389324]
bas 6, expnt(s) = [0.89238504]
CPU time:        48.58
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.76178148
   2.06009776 453.98239246 248.48162649  68.40526286  60.09414511
  15.97414902  20.18730399   3.14695093   5.96942503   5.28389324
  23.37098065   0.89238504   2.53031589]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.848383133750293
cond(S) = 23.191811177723253
E1 = -181.20224844434813  E_coul = 54.410748344828015
init E= -126.79150009952
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646127643732146  LUMO = 5.2901940457957
  mo_energy =
[-32.49903611  -1.87127323  -0.64612764  -0.64612764  -0.64612764
   5.29019405   5.30323847   5.30323847   5.30323847  68.63205712
 638.53865256]
E1 = -181.13705673096487  E_coul = 54.11658576602958
cycle= 1 E= -127.020470964935  delta_E= -0.229  |g|= 0.128  |ddm|= 0.29
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.144349
diis-c [-0.02083664  1.        ]
  HOMO = -0.632230009984664  LUMO = 5.28485494840043
  mo_energy =
[-3.26996987e+01 -1.85597308e+00 -6.32230010e-01 -6.32230010e-01
 -6.32230010e-01  5.28485495e+00  5.29456796e+00  5.29456796e+00
  5.29456796e+00  6.84502040e+01  6.38251662e+02]
E1 = -181.32221478400095  E_coul = 54.3010828940205
cycle= 2 E= -127.02113188998  delta_E= -0.000661  |g|= 0.0235  |ddm|= 0.0351
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0296285
diis-c [-2.49761109e-04  1.48695803e-01  8.51304197e-01]
  HOMO = -0.622148349409373  LUMO = 5.29843537066712
  mo_energy =
[-3.26613744e+01 -1.84595071e+00 -6.22148349e-01 -6.22148349e-01
 -6.22148349e-01  5.29843537e+00  5.31063527e+00  5.31063527e+00
  5.31063527e+00  6.84863316e+01  6.38297893e+02]
E1 = -181.28619778680695  E_coul = 54.265031041977906
cycle= 3 E= -127.021166744829  delta_E= -3.49e-05  |g|= 0.00148  |ddm|= 0.00572
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00147108
diis-c [-3.77524647e-07 -7.68303247e-03  9.25378952e-03  9.98429243e-01]
  HOMO = -0.62258665262492  LUMO = 5.29759831755376
  mo_energy =
[-3.26629806e+01 -1.84658984e+00 -6.22586653e-01 -6.22586653e-01
 -6.22586653e-01  5.29759832e+00  5.30995694e+00  5.30995694e+00
  5.30995694e+00  6.84848156e+01  6.38296548e+02]
E1 = -181.28793581436298  E_coul = 54.26676894013502
cycle= 4 E= -127.021166874228  delta_E= -1.29e-07  |g|= 8.94e-05  |ddm|= 0.000523
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.8382e-05
diis-c [-9.35933107e-11  4.50778462e-04 -5.15731770e-03 -1.18380792e-01
  1.12308733e+00]
  HOMO = -0.622568011144035  LUMO = 5.29759612330374
  mo_energy =
[-3.26629221e+01 -1.84659234e+00 -6.22568011e-01 -6.22568011e-01
 -6.22568011e-01  5.29759612e+00  5.30998573e+00  5.30998573e+00
  5.30998573e+00  6.84848685e+01  6.38296646e+02]
E1 = -181.28789820077154  E_coul = 54.266731325867795
cycle= 5 E= -127.021166874904  delta_E= -6.76e-10  |g|= 4.56e-07  |ddm|= 3.96e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.28789820077154  E_coul = 54.266731325867795
  HOMO = -0.622567922265914  LUMO = 5.29759628317141
  mo_energy =
[-3.26629218e+01 -1.84659222e+00 -6.22567922e-01 -6.22567922e-01
 -6.22567922e-01  5.29759628e+00  5.30998585e+00  5.30998585e+00
  5.30998585e+00  6.84848687e+01  6.38296646e+02]
E1 = -181.28789795087795  E_coul = 54.26673107597421
Extra cycle  E= -127.021166874904  delta_E=    0  |g|= 3.71e-08  |ddm|= 8.59e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.191811177723253
E1 = -181.28789795087795  E_coul = 54.26673107597421
init E= -127.021166874904
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.622567938567384  LUMO = 5.29759626463665
  mo_energy =
[-3.26629218e+01 -1.84659224e+00 -6.22567939e-01 -6.22567939e-01
 -6.22567939e-01  5.29759626e+00  5.30998583e+00  5.30998583e+00
  5.30998583e+00  6.84848687e+01  6.38296646e+02]
E1 = -181.28789800885642  E_coul = 54.26673113395264
cycle= 1 E= -127.021166874904  delta_E= -2.84e-14  |g|= 8.17e-09  |ddm|= 9.55e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.28789800885642  E_coul = 54.26673113395264
  HOMO = -0.622567934936836  LUMO = 5.29759627040908
  mo_energy =
[-3.26629218e+01 -1.84659223e+00 -6.22567935e-01 -6.22567935e-01
 -6.22567935e-01  5.29759627e+00  5.30998583e+00  5.30998583e+00
  5.30998583e+00  6.84848687e+01  6.38296646e+02]
E1 = -181.28789799524452  E_coul = 54.26673112034083
Extra cycle  E= -127.021166874904  delta_E= 8.53e-14  |g|= 1.73e-09  |ddm|= 2.81e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.76178148 453.98239246  68.40526286  15.97414902   3.14695093
   5.28389324   0.89238504]
grad_E = [-0.00127065  0.00019137 -0.00628377 -0.00287025  0.00272639 -0.0023498
  0.00177385]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.766923980278       1
[INPUT] 0    0    [1    /1   ]  453.980936358        1
[INPUT] 0    0    [1    /1   ]  68.451860436         1
[INPUT] 0    0    [1    /1   ]  16.0675984862        1
[INPUT] 0    0    [1    /1   ]  3.23802314249        1
[INPUT] 1    0    [1    /1   ]  5.29785638691        1
[INPUT] 1    0    [1    /1   ]  0.894446373595       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.766923980277807, 1.0]], [0, [453.98093635784625, 1.0]], [0, [68.45186043595118, 1.0]], [0, [16.067598486181495, 1.0]], [0, [3.2380231424931214, 1.0]], [1, [5.29785638691155, 1.0]], [1, [0.8944463735947277, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.76692398]
bas 1, expnt(s) = [453.98093636]
bas 2, expnt(s) = [68.45186044]
bas 3, expnt(s) = [16.06759849]
bas 4, expnt(s) = [3.23802314]
bas 5, expnt(s) = [5.29785639]
bas 6, expnt(s) = [0.89444637]
CPU time:        51.32
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.76692398
   2.0705192  453.98093636 248.48102876  68.45186044  60.12484453
  16.06759849  20.27581183   3.23802314   6.09852749   5.29785639
  23.44820591   0.89444637   2.53762402]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.847249113407548
cond(S) = 23.528029689631968
E1 = -181.2014070089698  E_coul = 54.41225575292131
init E= -126.789151256048
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646190780353822  LUMO = 5.31958517279737
  mo_energy =
[-32.49945239  -1.87006617  -0.64619078  -0.64619078  -0.64619078
   5.31958517   5.31958517   5.31958517   5.46001735  69.30522506
 639.33335831]
E1 = -181.1540264241439  E_coul = 54.13326340991679
cycle= 1 E= -127.020763014227  delta_E= -0.232  |g|= 0.127  |ddm|= 0.292
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.144118
diis-c [-0.02076998  1.        ]
  HOMO = -0.631117992156083  LUMO = 5.31218700231719
  mo_energy =
[-3.26975462e+01 -1.85325492e+00 -6.31117992e-01 -6.31117992e-01
 -6.31117992e-01  5.31218700e+00  5.31218700e+00  5.31218700e+00
  5.45435709e+00  6.91255069e+01  6.39049432e+02]
E1 = -181.33567101168978  E_coul = 54.31426902472395
cycle= 2 E= -127.021401986966  delta_E= -0.000639  |g|= 0.023  |ddm|= 0.034
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0290591
diis-c [-2.46110004e-04  1.45840294e-01  8.54159706e-01]
  HOMO = -0.621218294451432  LUMO = 5.32801206100237
  mo_energy =
[-3.26597603e+01 -1.84337772e+00 -6.21218294e-01 -6.21218294e-01
 -6.21218294e-01  5.32801206e+00  5.32801206e+00  5.32801206e+00
  5.46803888e+00  6.91611628e+01  6.39095051e+02]
E1 = -181.30037031944448  E_coul = 54.27893494790837
cycle= 3 E= -127.021435371536  delta_E= -3.34e-05  |g|= 0.00148  |ddm|= 0.00561
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00149271
diis-c [-3.28500767e-07 -7.10863189e-03  1.41356133e-02  9.92973019e-01]
  HOMO = -0.621676636678976  LUMO = 5.32730131138991
  mo_energy =
[-3.26614324e+01 -1.84402016e+00 -6.21676637e-01 -6.21676637e-01
 -6.21676637e-01  5.32730131e+00  5.32730131e+00  5.32730131e+00
  5.46717830e+00  6.91595861e+01  6.39093606e+02]
E1 = -181.3021382047463  E_coul = 54.280702708590255
cycle= 4 E= -127.021435496156  delta_E= -1.25e-07  |g|= 8.25e-05  |ddm|= 0.000495
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.02519e-05
diis-c [-9.30602885e-11  4.37965602e-04 -5.39296254e-03 -1.19084231e-01
  1.12403923e+00]
  HOMO = -0.621660233367873  LUMO = 5.32732688076501
  mo_energy =
[-3.26613801e+01 -1.84402318e+00 -6.21660233e-01 -6.21660233e-01
 -6.21660233e-01  5.32732688e+00  5.32732688e+00  5.32732688e+00
  5.46717546e+00  6.91596335e+01  6.39093695e+02]
E1 = -181.3021045997264  E_coul = 54.280669103005444
cycle= 5 E= -127.021435496721  delta_E= -5.65e-10  |g|= 4.54e-07  |ddm|= 3.59e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.3021045997264  E_coul = 54.280669103005444
  HOMO = -0.621660133398191  LUMO = 5.32732701825357
  mo_energy =
[-3.26613797e+01 -1.84402305e+00 -6.21660133e-01 -6.21660133e-01
 -6.21660133e-01  5.32732702e+00  5.32732702e+00  5.32732702e+00
  5.46717563e+00  6.91596338e+01  6.39093695e+02]
E1 = -181.30210431983718  E_coul = 54.2806688231161
Extra cycle  E= -127.021435496721  delta_E= -1.28e-13  |g|= 3.91e-08  |ddm|= 8.04e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.76692398 453.98093636  68.45186044  16.06759849   3.23802314
   5.29785639   0.89444637]
E = -127.02143549672108
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.766923980278       1
[INPUT] 0    0    [1    /1   ]  453.980936358        1
[INPUT] 0    0    [1    /1   ]  68.451860436         1
[INPUT] 0    0    [1    /1   ]  16.0675984862        1
[INPUT] 0    0    [1    /1   ]  3.23802314249        1
[INPUT] 1    0    [1    /1   ]  5.29785638691        1
[INPUT] 1    0    [1    /1   ]  0.894446373595       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.766923980277807, 1.0]], [0, [453.98093635784625, 1.0]], [0, [68.45186043595118, 1.0]], [0, [16.067598486181495, 1.0]], [0, [3.2380231424931214, 1.0]], [1, [5.29785638691155, 1.0]], [1, [0.8944463735947277, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.76692398]
bas 1, expnt(s) = [453.98093636]
bas 2, expnt(s) = [68.45186044]
bas 3, expnt(s) = [16.06759849]
bas 4, expnt(s) = [3.23802314]
bas 5, expnt(s) = [5.29785639]
bas 6, expnt(s) = [0.89444637]
CPU time:        51.67
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.76692398
   2.0705192  453.98093636 248.48102876  68.45186044  60.12484453
  16.06759849  20.27581183   3.23802314   6.09852749   5.29785639
  23.44820591   0.89444637   2.53762402]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.847249113407548
cond(S) = 23.528029689631968
E1 = -181.2014070089698  E_coul = 54.41225575292131
init E= -126.789151256048
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646190780353822  LUMO = 5.31958517279737
  mo_energy =
[-32.49945239  -1.87006617  -0.64619078  -0.64619078  -0.64619078
   5.31958517   5.31958517   5.31958517   5.46001735  69.30522506
 639.33335831]
E1 = -181.1540264241439  E_coul = 54.13326340991679
cycle= 1 E= -127.020763014227  delta_E= -0.232  |g|= 0.127  |ddm|= 0.292
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.144118
diis-c [-0.02076998  1.        ]
  HOMO = -0.631117992156083  LUMO = 5.31218700231719
  mo_energy =
[-3.26975462e+01 -1.85325492e+00 -6.31117992e-01 -6.31117992e-01
 -6.31117992e-01  5.31218700e+00  5.31218700e+00  5.31218700e+00
  5.45435709e+00  6.91255069e+01  6.39049432e+02]
E1 = -181.33567101168978  E_coul = 54.31426902472395
cycle= 2 E= -127.021401986966  delta_E= -0.000639  |g|= 0.023  |ddm|= 0.034
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0290591
diis-c [-2.46110004e-04  1.45840294e-01  8.54159706e-01]
  HOMO = -0.621218294451432  LUMO = 5.32801206100237
  mo_energy =
[-3.26597603e+01 -1.84337772e+00 -6.21218294e-01 -6.21218294e-01
 -6.21218294e-01  5.32801206e+00  5.32801206e+00  5.32801206e+00
  5.46803888e+00  6.91611628e+01  6.39095051e+02]
E1 = -181.30037031944448  E_coul = 54.27893494790837
cycle= 3 E= -127.021435371536  delta_E= -3.34e-05  |g|= 0.00148  |ddm|= 0.00561
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00149271
diis-c [-3.28500767e-07 -7.10863189e-03  1.41356133e-02  9.92973019e-01]
  HOMO = -0.621676636678976  LUMO = 5.32730131138991
  mo_energy =
[-3.26614324e+01 -1.84402016e+00 -6.21676637e-01 -6.21676637e-01
 -6.21676637e-01  5.32730131e+00  5.32730131e+00  5.32730131e+00
  5.46717830e+00  6.91595861e+01  6.39093606e+02]
E1 = -181.3021382047463  E_coul = 54.280702708590255
cycle= 4 E= -127.021435496156  delta_E= -1.25e-07  |g|= 8.25e-05  |ddm|= 0.000495
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.02519e-05
diis-c [-9.30602885e-11  4.37965602e-04 -5.39296254e-03 -1.19084231e-01
  1.12403923e+00]
  HOMO = -0.621660233367873  LUMO = 5.32732688076501
  mo_energy =
[-3.26613801e+01 -1.84402318e+00 -6.21660233e-01 -6.21660233e-01
 -6.21660233e-01  5.32732688e+00  5.32732688e+00  5.32732688e+00
  5.46717546e+00  6.91596335e+01  6.39093695e+02]
E1 = -181.3021045997264  E_coul = 54.280669103005444
cycle= 5 E= -127.021435496721  delta_E= -5.65e-10  |g|= 4.54e-07  |ddm|= 3.59e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.3021045997264  E_coul = 54.280669103005444
  HOMO = -0.621660133398191  LUMO = 5.32732701825357
  mo_energy =
[-3.26613797e+01 -1.84402305e+00 -6.21660133e-01 -6.21660133e-01
 -6.21660133e-01  5.32732702e+00  5.32732702e+00  5.32732702e+00
  5.46717563e+00  6.91596338e+01  6.39093695e+02]
E1 = -181.30210431983718  E_coul = 54.2806688231161
Extra cycle  E= -127.021435496721  delta_E= -1.28e-13  |g|= 3.91e-08  |ddm|= 8.04e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.528029689631968
E1 = -181.30210431983718  E_coul = 54.2806688231161
init E= -127.021435496721
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.621660151429006  LUMO = 5.32732698873219
  mo_energy =
[-3.26613798e+01 -1.84402307e+00 -6.21660151e-01 -6.21660151e-01
 -6.21660151e-01  5.32732699e+00  5.32732699e+00  5.32732699e+00
  5.46717561e+00  6.91596337e+01  6.39093695e+02]
E1 = -181.30210438502743  E_coul = 54.280668888306366
cycle= 1 E= -127.021435496721  delta_E= 1.42e-14  |g|= 8.89e-09  |ddm|= 1.01e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.30210438502743  E_coul = 54.280668888306366
  HOMO = -0.621660147319589  LUMO = 5.32732699524122
  mo_energy =
[-3.26613798e+01 -1.84402306e+00 -6.21660147e-01 -6.21660147e-01
 -6.21660147e-01  5.32732700e+00  5.32732700e+00  5.32732700e+00
  5.46717561e+00  6.91596337e+01  6.39093695e+02]
E1 = -181.30210436993323  E_coul = 54.2806688732122
Extra cycle  E= -127.021435496721  delta_E= 2.84e-14  |g|= 1.92e-09  |ddm|= 2.9e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.76692398 453.98093636  68.45186044  16.06759849   3.23802314
   5.29785639   0.89444637]
grad_E = [-0.00844272  0.00020282 -0.00677254 -0.00085283  0.00280731 -0.00153104
  0.00598425]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.771933262199       1
[INPUT] 0    0    [1    /1   ]  453.978257113        1
[INPUT] 0    0    [1    /1   ]  68.538733917         1
[INPUT] 0    0    [1    /1   ]  16.1811289063        1
[INPUT] 0    0    [1    /1   ]  3.31837901782        1
[INPUT] 1    0    [1    /1   ]  5.32401986736        1
[INPUT] 1    0    [1    /1   ]  0.897729439356       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7719332621992984, 1.0]], [0, [453.97825711293234, 1.0]], [0, [68.53873391697269, 1.0]], [0, [16.18112890630188, 1.0]], [0, [3.3183790178204045, 1.0]], [1, [5.324019867363454, 1.0]], [1, [0.8977294393555294, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.77193326]
bas 1, expnt(s) = [453.97825711]
bas 2, expnt(s) = [68.53873392]
bas 3, expnt(s) = [16.18112891]
bas 4, expnt(s) = [3.31837902]
bas 5, expnt(s) = [5.32401987]
bas 6, expnt(s) = [0.89772944]
CPU time:        54.43
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.77193326
   2.08065388 453.97825711 248.47992892  68.53873392  60.18206459
  16.18112891  20.38316582   3.31837902   6.21168631   5.32401987
  23.59304396   0.89772944   2.5492723 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.845613751353692
cond(S) = 23.835433002390513
E1 = -181.20214553024516  E_coul = 54.41580529112575
init E= -126.786340239119
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646245023483265  LUMO = 5.34828046308602
  mo_energy =
[-32.49889096  -1.86890438  -0.64624502  -0.64624502  -0.64624502
   5.34828046   5.34828046   5.34828046   5.61635255  70.01298186
 640.29361386]
E1 = -181.18247752643782  E_coul = 54.16128083980134
cycle= 1 E= -127.021196686636  delta_E= -0.235  |g|= 0.126  |ddm|= 0.293
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.143177
diis-c [-0.02049974  1.        ]
  HOMO = -0.629262536239178  LUMO = 5.34296451181894
  mo_energy =
[-3.26927633e+01 -1.84979246e+00 -6.29262536e-01 -6.29262536e-01
 -6.29262536e-01  5.34296451e+00  5.34296451e+00  5.34296451e+00
  5.61157170e+00  6.98369500e+01  6.40014870e+02]
E1 = -181.3590228390561  E_coul = 54.33721807364391
cycle= 2 E= -127.021804765412  delta_E= -0.000608  |g|= 0.0224  |ddm|= 0.0327
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0282564
diis-c [-2.42250957e-04  1.42143733e-01  8.57856267e-01]
  HOMO = -0.619623033947402  LUMO = 5.35844861456377
  mo_energy =
[-3.26558041e+01 -1.84015004e+00 -6.19623034e-01 -6.19623034e-01
 -6.19623034e-01  5.35844861e+00  5.35844861e+00  5.35844861e+00
  5.62519382e+00  6.98718679e+01  6.40059570e+02]
E1 = -181.3247596940436  E_coul = 54.302923567052254
cycle= 3 E= -127.021836126991  delta_E= -3.14e-05  |g|= 0.00148  |ddm|= 0.00545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0015244
diis-c [-2.84962739e-07 -6.56116571e-03  1.95454952e-02  9.87015670e-01]
  HOMO = -0.620102447792453  LUMO = 5.35770167594404
  mo_energy =
[-3.26575508e+01 -1.84079807e+00 -6.20102448e-01 -6.20102448e-01
 -6.20102448e-01  5.35770168e+00  5.35770168e+00  5.35770168e+00
  5.62430759e+00  6.98702219e+01  6.40058017e+02]
E1 = -181.3265659833917  E_coul = 54.30472973414758
cycle= 4 E= -127.021836249244  delta_E= -1.22e-07  |g|= 7.61e-05  |ddm|= 0.000472
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.2893e-05
diis-c [-9.29848914e-11  4.24081124e-04 -5.74818911e-03 -1.19514406e-01
  1.12483851e+00]
  HOMO = -0.620087931600592  LUMO = 5.35772454957965
  mo_energy =
[-3.26575039e+01 -1.84080140e+00 -6.20087932e-01 -6.20087932e-01
 -6.20087932e-01  5.35772455e+00  5.35772455e+00  5.35772455e+00
  5.62430433e+00  6.98702645e+01  6.40058099e+02]
E1 = -181.32653590560358  E_coul = 54.30469965588651
cycle= 5 E= -127.021836249717  delta_E= -4.73e-10  |g|= 4.55e-07  |ddm|= 3.27e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.32653590560358  E_coul = 54.30469965588651
  HOMO = -0.620087820127332  LUMO = 5.35772470506351
  mo_energy =
[-3.26575036e+01 -1.84080126e+00 -6.20087820e-01 -6.20087820e-01
 -6.20087820e-01  5.35772471e+00  5.35772471e+00  5.35772471e+00
  5.62430451e+00  6.98702648e+01  6.40058099e+02]
E1 = -181.3265355942336  E_coul = 54.30469934451658
Extra cycle  E= -127.021836249717  delta_E= 4.26e-14  |g|= 4.2e-08  |ddm|= 7.63e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.77193326 453.97825711  68.53873392  16.18112891   3.31837902
   5.32401987   0.89772944]
E = -127.02183624971703
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.771933262199       1
[INPUT] 0    0    [1    /1   ]  453.978257113        1
[INPUT] 0    0    [1    /1   ]  68.538733917         1
[INPUT] 0    0    [1    /1   ]  16.1811289063        1
[INPUT] 0    0    [1    /1   ]  3.31837901782        1
[INPUT] 1    0    [1    /1   ]  5.32401986736        1
[INPUT] 1    0    [1    /1   ]  0.897729439356       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7719332621992984, 1.0]], [0, [453.97825711293234, 1.0]], [0, [68.53873391697269, 1.0]], [0, [16.18112890630188, 1.0]], [0, [3.3183790178204045, 1.0]], [1, [5.324019867363454, 1.0]], [1, [0.8977294393555294, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.77193326]
bas 1, expnt(s) = [453.97825711]
bas 2, expnt(s) = [68.53873392]
bas 3, expnt(s) = [16.18112891]
bas 4, expnt(s) = [3.31837902]
bas 5, expnt(s) = [5.32401987]
bas 6, expnt(s) = [0.89772944]
CPU time:        54.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.77193326
   2.08065388 453.97825711 248.47992892  68.53873392  60.18206459
  16.18112891  20.38316582   3.31837902   6.21168631   5.32401987
  23.59304396   0.89772944   2.5492723 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.845613751353692
cond(S) = 23.835433002390513
E1 = -181.20214553024516  E_coul = 54.41580529112575
init E= -126.786340239119
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646245023483265  LUMO = 5.34828046308602
  mo_energy =
[-32.49889096  -1.86890438  -0.64624502  -0.64624502  -0.64624502
   5.34828046   5.34828046   5.34828046   5.61635255  70.01298186
 640.29361386]
E1 = -181.18247752643782  E_coul = 54.16128083980134
cycle= 1 E= -127.021196686636  delta_E= -0.235  |g|= 0.126  |ddm|= 0.293
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.143177
diis-c [-0.02049974  1.        ]
  HOMO = -0.629262536239178  LUMO = 5.34296451181894
  mo_energy =
[-3.26927633e+01 -1.84979246e+00 -6.29262536e-01 -6.29262536e-01
 -6.29262536e-01  5.34296451e+00  5.34296451e+00  5.34296451e+00
  5.61157170e+00  6.98369500e+01  6.40014870e+02]
E1 = -181.3590228390561  E_coul = 54.33721807364391
cycle= 2 E= -127.021804765412  delta_E= -0.000608  |g|= 0.0224  |ddm|= 0.0327
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0282564
diis-c [-2.42250957e-04  1.42143733e-01  8.57856267e-01]
  HOMO = -0.619623033947402  LUMO = 5.35844861456377
  mo_energy =
[-3.26558041e+01 -1.84015004e+00 -6.19623034e-01 -6.19623034e-01
 -6.19623034e-01  5.35844861e+00  5.35844861e+00  5.35844861e+00
  5.62519382e+00  6.98718679e+01  6.40059570e+02]
E1 = -181.3247596940436  E_coul = 54.302923567052254
cycle= 3 E= -127.021836126991  delta_E= -3.14e-05  |g|= 0.00148  |ddm|= 0.00545
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0015244
diis-c [-2.84962739e-07 -6.56116571e-03  1.95454952e-02  9.87015670e-01]
  HOMO = -0.620102447792453  LUMO = 5.35770167594404
  mo_energy =
[-3.26575508e+01 -1.84079807e+00 -6.20102448e-01 -6.20102448e-01
 -6.20102448e-01  5.35770168e+00  5.35770168e+00  5.35770168e+00
  5.62430759e+00  6.98702219e+01  6.40058017e+02]
E1 = -181.3265659833917  E_coul = 54.30472973414758
cycle= 4 E= -127.021836249244  delta_E= -1.22e-07  |g|= 7.61e-05  |ddm|= 0.000472
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.2893e-05
diis-c [-9.29848914e-11  4.24081124e-04 -5.74818911e-03 -1.19514406e-01
  1.12483851e+00]
  HOMO = -0.620087931600592  LUMO = 5.35772454957965
  mo_energy =
[-3.26575039e+01 -1.84080140e+00 -6.20087932e-01 -6.20087932e-01
 -6.20087932e-01  5.35772455e+00  5.35772455e+00  5.35772455e+00
  5.62430433e+00  6.98702645e+01  6.40058099e+02]
E1 = -181.32653590560358  E_coul = 54.30469965588651
cycle= 5 E= -127.021836249717  delta_E= -4.73e-10  |g|= 4.55e-07  |ddm|= 3.27e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.32653590560358  E_coul = 54.30469965588651
  HOMO = -0.620087820127332  LUMO = 5.35772470506351
  mo_energy =
[-3.26575036e+01 -1.84080126e+00 -6.20087820e-01 -6.20087820e-01
 -6.20087820e-01  5.35772471e+00  5.35772471e+00  5.35772471e+00
  5.62430451e+00  6.98702648e+01  6.40058099e+02]
E1 = -181.3265355942336  E_coul = 54.30469934451658
Extra cycle  E= -127.021836249717  delta_E= 4.26e-14  |g|= 4.2e-08  |ddm|= 7.63e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.835433002390513
E1 = -181.3265355942336  E_coul = 54.30469934451658
init E= -127.021836249717
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.620087839987849  LUMO = 5.35772467246053
  mo_energy =
[-3.26575036e+01 -1.84080128e+00 -6.20087840e-01 -6.20087840e-01
 -6.20087840e-01  5.35772467e+00  5.35772467e+00  5.35772467e+00
  5.62430449e+00  6.98702647e+01  6.40058099e+02]
E1 = -181.32653566669646  E_coul = 54.304699416979396
cycle= 1 E= -127.021836249717  delta_E= -4.26e-14  |g|= 9.67e-09  |ddm|= 1.12e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.32653566669646  E_coul = 54.304699416979396
  HOMO = -0.620087835400329  LUMO = 5.35772467975897
  mo_energy =
[-3.26575036e+01 -1.84080128e+00 -6.20087835e-01 -6.20087835e-01
 -6.20087835e-01  5.35772468e+00  5.35772468e+00  5.35772468e+00
  5.62430449e+00  6.98702647e+01  6.40058099e+02]
E1 = -181.32653565012262  E_coul = 54.30469940040545
Extra cycle  E= -127.021836249717  delta_E= -1.14e-13  |g|= 2.12e-09  |ddm|= 3.02e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.77193326 453.97825711  68.53873392  16.18112891   3.31837902
   5.32401987   0.89772944]
grad_E = [-0.01349148  0.00021283 -0.00731743  0.00179729  0.00210984  0.00074246
  0.00860691]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.774569240139       1
[INPUT] 0    0    [1    /1   ]  453.974064508        1
[INPUT] 0    0    [1    /1   ]  68.6761976905        1
[INPUT] 0    0    [1    /1   ]  16.2919865082        1
[INPUT] 0    0    [1    /1   ]  3.34855253363        1
[INPUT] 1    0    [1    /1   ]  5.36220457772        1
[INPUT] 1    0    [1    /1   ]  0.902028264407       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7745692401388701, 1.0]], [0, [453.9740645080347, 1.0]], [0, [68.67619769054633, 1.0]], [0, [16.29198650819325, 1.0]], [0, [3.348552533627652, 1.0]], [1, [5.362204577716813, 1.0]], [1, [0.902028264407124, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.77456924]
bas 1, expnt(s) = [453.97406451]
bas 2, expnt(s) = [68.67619769]
bas 3, expnt(s) = [16.29198651]
bas 4, expnt(s) = [3.34855253]
bas 5, expnt(s) = [5.36220458]
bas 6, expnt(s) = [0.90202826]
CPU time:        57.57
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.77456924
   2.08598033 453.97406451 248.47820783  68.67619769  60.27256942
  16.29198651  20.48781083   3.34855253   6.25399978   5.36220458
  23.80474954   0.90202826   2.56454058]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.843685238004195
cond(S) = 23.936082149935846
E1 = -181.20510446249335  E_coul = 54.42153270057425
init E= -126.783571761919
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646271823910309  LUMO = 5.38858751398475
  mo_energy =
[-32.49686299  -1.86825939  -0.64627182  -0.64627182  -0.64627182
   5.38858751   5.38858751   5.38858751   5.6858705   70.53175456
 641.23395368]
E1 = -181.21999393020573  E_coul = 54.19823047064635
cycle= 1 E= -127.021763459559  delta_E= -0.238  |g|= 0.125  |ddm|= 0.293
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.141554
diis-c [-0.02003759  1.        ]
  HOMO = -0.626867820492482  LUMO = 5.38591542012957
  mo_energy =
[-3.26852186e+01 -1.84630711e+00 -6.26867820e-01 -6.26867820e-01
 -6.26867820e-01  5.38591542e+00  5.38591542e+00  5.38591542e+00
  5.68367955e+00  7.03606781e+01  6.40962340e+02]
E1 = -181.39065114765413  E_coul = 54.36831476191832
cycle= 2 E= -127.022336385736  delta_E= -0.000573  |g|= 0.0217  |ddm|= 0.0314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.027352
diis-c [-2.38993443e-04  1.38199539e-01  8.61800461e-01]
  HOMO = -0.617524305735912  LUMO = 5.40101952089089
  mo_energy =
[-3.26492552e+01 -1.83695927e+00 -6.17524306e-01 -6.17524306e-01
 -6.17524306e-01  5.40101952e+00  5.40101952e+00  5.40101952e+00
  5.69700986e+00  7.03946950e+01  6.41005952e+02]
E1 = -181.3575635618669  E_coul = 54.33519801526671
cycle= 3 E= -127.0223655466  delta_E= -2.92e-05  |g|= 0.00149  |ddm|= 0.00527
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00156082
diis-c [-2.57749127e-07 -6.15492756e-03  2.45739785e-02  9.81580949e-01]
  HOMO = -0.618022202534935  LUMO = 5.40023811555414
  mo_energy =
[-3.26510735e+01 -1.83761505e+00 -6.18022203e-01 -6.18022203e-01
 -6.18022203e-01  5.40023812e+00  5.40023812e+00  5.40023812e+00
  5.69610324e+00  7.03929816e+01  6.41004302e+02]
E1 = -181.3594141261641  E_coul = 54.337048456504974
cycle= 4 E= -127.022365669659  delta_E= -1.23e-07  |g|= 7.23e-05  |ddm|= 0.000461
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.86235e-05
diis-c [-9.36304845e-11  4.13074955e-04 -6.22058362e-03 -1.19930903e-01
  1.12573841e+00]
  HOMO = -0.618008605027245  LUMO = 5.4002597368686
  mo_energy =
[-3.26510294e+01 -1.83761837e+00 -6.18008605e-01 -6.18008605e-01
 -6.18008605e-01  5.40025974e+00  5.40025974e+00  5.40025974e+00
  5.69609999e+00  7.03930219e+01  6.41004379e+02]
E1 = -181.35938599380225  E_coul = 54.33702032372047
cycle= 5 E= -127.022365670082  delta_E= -4.23e-10  |g|= 4.58e-07  |ddm|= 3.08e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.35938599380225  E_coul = 54.33702032372047
  HOMO = -0.618008483998144  LUMO = 5.40025990757734
  mo_energy =
[-3.26510290e+01 -1.83761823e+00 -6.18008484e-01 -6.18008484e-01
 -6.18008484e-01  5.40025991e+00  5.40025991e+00  5.40025991e+00
  5.69610018e+00  7.03930222e+01  6.41004379e+02]
E1 = -181.35938565603115  E_coul = 54.33701998594945
Extra cycle  E= -127.022365670082  delta_E= 7.11e-14  |g|= 4.49e-08  |ddm|= 7.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.77456924 453.97406451  68.67619769  16.29198651   3.34855253
   5.36220458   0.90202826]
E = -127.0223656700817
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.774569240139       1
[INPUT] 0    0    [1    /1   ]  453.974064508        1
[INPUT] 0    0    [1    /1   ]  68.6761976905        1
[INPUT] 0    0    [1    /1   ]  16.2919865082        1
[INPUT] 0    0    [1    /1   ]  3.34855253363        1
[INPUT] 1    0    [1    /1   ]  5.36220457772        1
[INPUT] 1    0    [1    /1   ]  0.902028264407       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7745692401388701, 1.0]], [0, [453.9740645080347, 1.0]], [0, [68.67619769054633, 1.0]], [0, [16.29198650819325, 1.0]], [0, [3.348552533627652, 1.0]], [1, [5.362204577716813, 1.0]], [1, [0.902028264407124, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.77456924]
bas 1, expnt(s) = [453.97406451]
bas 2, expnt(s) = [68.67619769]
bas 3, expnt(s) = [16.29198651]
bas 4, expnt(s) = [3.34855253]
bas 5, expnt(s) = [5.36220458]
bas 6, expnt(s) = [0.90202826]
CPU time:        57.96
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.77456924
   2.08598033 453.97406451 248.47820783  68.67619769  60.27256942
  16.29198651  20.48781083   3.34855253   6.25399978   5.36220458
  23.80474954   0.90202826   2.56454058]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.843685238004195
cond(S) = 23.936082149935846
E1 = -181.20510446249335  E_coul = 54.42153270057425
init E= -126.783571761919
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646271823910309  LUMO = 5.38858751398475
  mo_energy =
[-32.49686299  -1.86825939  -0.64627182  -0.64627182  -0.64627182
   5.38858751   5.38858751   5.38858751   5.6858705   70.53175456
 641.23395368]
E1 = -181.21999393020573  E_coul = 54.19823047064635
cycle= 1 E= -127.021763459559  delta_E= -0.238  |g|= 0.125  |ddm|= 0.293
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.141554
diis-c [-0.02003759  1.        ]
  HOMO = -0.626867820492482  LUMO = 5.38591542012957
  mo_energy =
[-3.26852186e+01 -1.84630711e+00 -6.26867820e-01 -6.26867820e-01
 -6.26867820e-01  5.38591542e+00  5.38591542e+00  5.38591542e+00
  5.68367955e+00  7.03606781e+01  6.40962340e+02]
E1 = -181.39065114765413  E_coul = 54.36831476191832
cycle= 2 E= -127.022336385736  delta_E= -0.000573  |g|= 0.0217  |ddm|= 0.0314
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.027352
diis-c [-2.38993443e-04  1.38199539e-01  8.61800461e-01]
  HOMO = -0.617524305735912  LUMO = 5.40101952089089
  mo_energy =
[-3.26492552e+01 -1.83695927e+00 -6.17524306e-01 -6.17524306e-01
 -6.17524306e-01  5.40101952e+00  5.40101952e+00  5.40101952e+00
  5.69700986e+00  7.03946950e+01  6.41005952e+02]
E1 = -181.3575635618669  E_coul = 54.33519801526671
cycle= 3 E= -127.0223655466  delta_E= -2.92e-05  |g|= 0.00149  |ddm|= 0.00527
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00156082
diis-c [-2.57749127e-07 -6.15492756e-03  2.45739785e-02  9.81580949e-01]
  HOMO = -0.618022202534935  LUMO = 5.40023811555414
  mo_energy =
[-3.26510735e+01 -1.83761505e+00 -6.18022203e-01 -6.18022203e-01
 -6.18022203e-01  5.40023812e+00  5.40023812e+00  5.40023812e+00
  5.69610324e+00  7.03929816e+01  6.41004302e+02]
E1 = -181.3594141261641  E_coul = 54.337048456504974
cycle= 4 E= -127.022365669659  delta_E= -1.23e-07  |g|= 7.23e-05  |ddm|= 0.000461
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.86235e-05
diis-c [-9.36304845e-11  4.13074955e-04 -6.22058362e-03 -1.19930903e-01
  1.12573841e+00]
  HOMO = -0.618008605027245  LUMO = 5.4002597368686
  mo_energy =
[-3.26510294e+01 -1.83761837e+00 -6.18008605e-01 -6.18008605e-01
 -6.18008605e-01  5.40025974e+00  5.40025974e+00  5.40025974e+00
  5.69609999e+00  7.03930219e+01  6.41004379e+02]
E1 = -181.35938599380225  E_coul = 54.33702032372047
cycle= 5 E= -127.022365670082  delta_E= -4.23e-10  |g|= 4.58e-07  |ddm|= 3.08e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.35938599380225  E_coul = 54.33702032372047
  HOMO = -0.618008483998144  LUMO = 5.40025990757734
  mo_energy =
[-3.26510290e+01 -1.83761823e+00 -6.18008484e-01 -6.18008484e-01
 -6.18008484e-01  5.40025991e+00  5.40025991e+00  5.40025991e+00
  5.69610018e+00  7.03930222e+01  6.41004379e+02]
E1 = -181.35938565603115  E_coul = 54.33701998594945
Extra cycle  E= -127.022365670082  delta_E= 7.11e-14  |g|= 4.49e-08  |ddm|= 7.46e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.936082149935846
E1 = -181.35938565603115  E_coul = 54.33701998594945
init E= -127.022365670082
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.618008505411782  LUMO = 5.40025987227024
  mo_energy =
[-3.26510291e+01 -1.83761825e+00 -6.18008505e-01 -6.18008505e-01
 -6.18008505e-01  5.40025987e+00  5.40025987e+00  5.40025987e+00
  5.69610015e+00  7.03930222e+01  6.41004379e+02]
E1 = -181.35938573437062  E_coul = 54.337020064288836
cycle= 1 E= -127.022365670082  delta_E= -8.53e-14  |g|= 1.03e-08  |ddm|= 1.22e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.35938573437062  E_coul = 54.337020064288836
  HOMO = -0.618008500442182  LUMO = 5.40025988022599
  mo_energy =
[-3.26510291e+01 -1.83761824e+00 -6.18008500e-01 -6.18008500e-01
 -6.18008500e-01  5.40025988e+00  5.40025988e+00  5.40025988e+00
  5.69610016e+00  7.03930222e+01  6.41004379e+02]
E1 = -181.35938571660685  E_coul = 54.337020046525055
Extra cycle  E= -127.022365670082  delta_E= -1.42e-14  |g|= 2.28e-09  |ddm|= 3.14e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.77456924 453.97406451  68.67619769  16.29198651   3.34855253
   5.36220458   0.90202826]
grad_E = [-0.01529645  0.00021628 -0.00778674  0.00486316  0.00045872  0.00463401
  0.00809385]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.772598349136       1
[INPUT] 0    0    [1    /1   ]  453.969188332        1
[INPUT] 0    0    [1    /1   ]  68.8380724011        1
[INPUT] 0    0    [1    /1   ]  16.3494437548        1
[INPUT] 0    0    [1    /1   ]  3.28749652753        1
[INPUT] 1    0    [1    /1   ]  5.39929005745        1
[INPUT] 1    0    [1    /1   ]  0.905808086887       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7725983491356715, 1.0]], [0, [453.96918833162385, 1.0]], [0, [68.83807240112847, 1.0]], [0, [16.349443754801104, 1.0]], [0, [3.2874965275300174, 1.0]], [1, [5.39929005745168, 1.0]], [1, [0.9058080868869555, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.77259835]
bas 1, expnt(s) = [453.96918833]
bas 2, expnt(s) = [68.8380724]
bas 3, expnt(s) = [16.34944375]
bas 4, expnt(s) = [3.28749653]
bas 5, expnt(s) = [5.39929006]
bas 6, expnt(s) = [0.90580809]
CPU time:        60.77
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.77259835
   2.08199823 453.96918833 248.47620613  68.8380724   60.37908812
  16.34944375  20.54197803   3.28749653   6.16827889   5.39929006
  24.01072183   0.90580809   2.57798054]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842228122745821
cond(S) = 23.666501269818326
E1 = -181.21005745959087  E_coul = 54.42778678044029
init E= -126.782270679151
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646222265912355  LUMO = 5.42656085843117
  mo_energy =
[-32.49372421  -1.86869565  -0.64622227  -0.64622227  -0.64622227
   5.42656086   5.42656086   5.42656086   5.58872688  70.53338397
 641.74733213]
E1 = -181.25452570003625  E_coul = 54.23215662690161
cycle= 1 E= -127.022369073135  delta_E= -0.24  |g|= 0.123  |ddm|= 0.292
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139553
diis-c [-0.01947505  1.        ]
  HOMO = -0.624723503443142  LUMO = 5.42623983118256
  mo_energy =
[-3.26768964e+01 -1.84438396e+00 -6.24723503e-01 -6.24723503e-01
 -6.24723503e-01  5.42623983e+00  5.42623983e+00  5.42623983e+00
  5.59046077e+00  7.03671152e+01  6.41483040e+02]
E1 = -181.42055011077457  E_coul = 54.39763563200953
cycle= 2 E= -127.022914478765  delta_E= -0.000545  |g|= 0.0211  |ddm|= 0.0308
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0266651
diis-c [-2.38320601e-04  1.35515421e-01  8.64484579e-01]
  HOMO = -0.615605254241133  LUMO = 5.44105945346186
  mo_energy =
[-3.26417624e+01 -1.83529613e+00 -6.15605254e-01 -6.15605254e-01
 -6.15605254e-01  5.44105945e+00  5.44105945e+00  5.44105945e+00
  5.60328840e+00  7.04003678e+01  6.41525774e+02]
E1 = -181.38834669908047  E_coul = 54.36540466258547
cycle= 3 E= -127.022942036495  delta_E= -2.76e-05  |g|= 0.00152  |ddm|= 0.00513
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00158839
diis-c [-2.64485411e-07 -6.08614664e-03  2.71653222e-02  9.78920824e-01]
  HOMO = -0.616112741764621  LUMO = 5.44025709234281
  mo_energy =
[-3.26436253e+01 -1.83596171e+00 -6.16112742e-01 -6.16112742e-01
 -6.16112742e-01  5.44025709e+00  5.44025709e+00  5.44025709e+00
  5.60237632e+00  7.03986113e+01  6.41524073e+02]
E1 = -181.39023932124132  E_coul = 54.3672971571653
cycle= 4 E= -127.022942164076  delta_E= -1.28e-07  |g|= 7.42e-05  |ddm|= 0.000471
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.10317e-05
diis-c [-9.53683640e-11  4.11058277e-04 -6.71095431e-03 -1.20427812e-01
  1.12672771e+00]
  HOMO = -0.616098250465083  LUMO = 5.44028016757431
  mo_energy =
[-3.26435788e+01 -1.83596459e+00 -6.16098250e-01 -6.16098250e-01
 -6.16098250e-01  5.44028017e+00  5.44028017e+00  5.44028017e+00
  5.60237367e+00  7.03986539e+01  6.41524154e+02]
E1 = -181.3902099002824  E_coul = 54.36726773575883
cycle= 5 E= -127.022942164524  delta_E= -4.48e-10  |g|= 4.6e-07  |ddm|= 3.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.3902099002824  E_coul = 54.36726773575883
  HOMO = -0.616098126631902  LUMO = 5.4402803427358
  mo_energy =
[-3.26435784e+01 -1.83596444e+00 -6.16098127e-01 -6.16098127e-01
 -6.16098127e-01  5.44028034e+00  5.44028034e+00  5.44028034e+00
  5.60237386e+00  7.03986542e+01  6.41524154e+02]
E1 = -181.39020955394858  E_coul = 54.36726738942506
Extra cycle  E= -127.022942164524  delta_E= 4.26e-14  |g|= 4.6e-08  |ddm|= 7.65e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.77259835 453.96918833  68.8380724   16.34944375   3.28749653
   5.39929006   0.90580809]
E = -127.02294216452353
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.772598349136       1
[INPUT] 0    0    [1    /1   ]  453.969188332        1
[INPUT] 0    0    [1    /1   ]  68.8380724011        1
[INPUT] 0    0    [1    /1   ]  16.3494437548        1
[INPUT] 0    0    [1    /1   ]  3.28749652753        1
[INPUT] 1    0    [1    /1   ]  5.39929005745        1
[INPUT] 1    0    [1    /1   ]  0.905808086887       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7725983491356715, 1.0]], [0, [453.96918833162385, 1.0]], [0, [68.83807240112847, 1.0]], [0, [16.349443754801104, 1.0]], [0, [3.2874965275300174, 1.0]], [1, [5.39929005745168, 1.0]], [1, [0.9058080868869555, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.77259835]
bas 1, expnt(s) = [453.96918833]
bas 2, expnt(s) = [68.8380724]
bas 3, expnt(s) = [16.34944375]
bas 4, expnt(s) = [3.28749653]
bas 5, expnt(s) = [5.39929006]
bas 6, expnt(s) = [0.90580809]
CPU time:        61.20
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.77259835
   2.08199823 453.96918833 248.47620613  68.8380724   60.37908812
  16.34944375  20.54197803   3.28749653   6.16827889   5.39929006
  24.01072183   0.90580809   2.57798054]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842228122745821
cond(S) = 23.666501269818326
E1 = -181.21005745959087  E_coul = 54.42778678044029
init E= -126.782270679151
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646222265912355  LUMO = 5.42656085843117
  mo_energy =
[-32.49372421  -1.86869565  -0.64622227  -0.64622227  -0.64622227
   5.42656086   5.42656086   5.42656086   5.58872688  70.53338397
 641.74733213]
E1 = -181.25452570003625  E_coul = 54.23215662690161
cycle= 1 E= -127.022369073135  delta_E= -0.24  |g|= 0.123  |ddm|= 0.292
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139553
diis-c [-0.01947505  1.        ]
  HOMO = -0.624723503443142  LUMO = 5.42623983118256
  mo_energy =
[-3.26768964e+01 -1.84438396e+00 -6.24723503e-01 -6.24723503e-01
 -6.24723503e-01  5.42623983e+00  5.42623983e+00  5.42623983e+00
  5.59046077e+00  7.03671152e+01  6.41483040e+02]
E1 = -181.42055011077457  E_coul = 54.39763563200953
cycle= 2 E= -127.022914478765  delta_E= -0.000545  |g|= 0.0211  |ddm|= 0.0308
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0266651
diis-c [-2.38320601e-04  1.35515421e-01  8.64484579e-01]
  HOMO = -0.615605254241133  LUMO = 5.44105945346186
  mo_energy =
[-3.26417624e+01 -1.83529613e+00 -6.15605254e-01 -6.15605254e-01
 -6.15605254e-01  5.44105945e+00  5.44105945e+00  5.44105945e+00
  5.60328840e+00  7.04003678e+01  6.41525774e+02]
E1 = -181.38834669908047  E_coul = 54.36540466258547
cycle= 3 E= -127.022942036495  delta_E= -2.76e-05  |g|= 0.00152  |ddm|= 0.00513
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00158839
diis-c [-2.64485411e-07 -6.08614664e-03  2.71653222e-02  9.78920824e-01]
  HOMO = -0.616112741764621  LUMO = 5.44025709234281
  mo_energy =
[-3.26436253e+01 -1.83596171e+00 -6.16112742e-01 -6.16112742e-01
 -6.16112742e-01  5.44025709e+00  5.44025709e+00  5.44025709e+00
  5.60237632e+00  7.03986113e+01  6.41524073e+02]
E1 = -181.39023932124132  E_coul = 54.3672971571653
cycle= 4 E= -127.022942164076  delta_E= -1.28e-07  |g|= 7.42e-05  |ddm|= 0.000471
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.10317e-05
diis-c [-9.53683640e-11  4.11058277e-04 -6.71095431e-03 -1.20427812e-01
  1.12672771e+00]
  HOMO = -0.616098250465083  LUMO = 5.44028016757431
  mo_energy =
[-3.26435788e+01 -1.83596459e+00 -6.16098250e-01 -6.16098250e-01
 -6.16098250e-01  5.44028017e+00  5.44028017e+00  5.44028017e+00
  5.60237367e+00  7.03986539e+01  6.41524154e+02]
E1 = -181.3902099002824  E_coul = 54.36726773575883
cycle= 5 E= -127.022942164524  delta_E= -4.48e-10  |g|= 4.6e-07  |ddm|= 3.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.3902099002824  E_coul = 54.36726773575883
  HOMO = -0.616098126631902  LUMO = 5.4402803427358
  mo_energy =
[-3.26435784e+01 -1.83596444e+00 -6.16098127e-01 -6.16098127e-01
 -6.16098127e-01  5.44028034e+00  5.44028034e+00  5.44028034e+00
  5.60237386e+00  7.03986542e+01  6.41524154e+02]
E1 = -181.39020955394858  E_coul = 54.36726738942506
Extra cycle  E= -127.022942164524  delta_E= 4.26e-14  |g|= 4.6e-08  |ddm|= 7.65e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.666501269818326
E1 = -181.39020955394858  E_coul = 54.36726738942506
init E= -127.022942164524
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.616098148599056  LUMO = 5.44028030634868
  mo_energy =
[-3.26435785e+01 -1.83596446e+00 -6.16098149e-01 -6.16098149e-01
 -6.16098149e-01  5.44028031e+00  5.44028031e+00  5.44028031e+00
  5.60237383e+00  7.03986541e+01  6.41524154e+02]
E1 = -181.39020963400895  E_coul = 54.36726746948538
cycle= 1 E= -127.022942164524  delta_E= -5.68e-14  |g|= 1.06e-08  |ddm|= 1.25e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.39020963400895  E_coul = 54.36726746948538
  HOMO = -0.616098143523773  LUMO = 5.44028031451961
  mo_energy =
[-3.26435785e+01 -1.83596446e+00 -6.16098144e-01 -6.16098144e-01
 -6.16098144e-01  5.44028031e+00  5.44028031e+00  5.44028031e+00
  5.60237384e+00  7.03986541e+01  6.41524154e+02]
E1 = -181.39020961587283  E_coul = 54.36726745134916
Extra cycle  E= -127.022942164524  delta_E= -8.53e-14  |g|= 2.33e-09  |ddm|= 3.22e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.13 sec
exp = [  0.77259835 453.96918833  68.8380724   16.34944375   3.28749653
   5.39929006   0.90580809]
grad_E = [-0.01166184  0.00020763 -0.00794983  0.00744363 -0.00194591  0.00883202
  0.00455035]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.765672999461       1
[INPUT] 0    0    [1    /1   ]  453.96417949         1
[INPUT] 0    0    [1    /1   ]  69.0071011768        1
[INPUT] 0    0    [1    /1   ]  16.3324368276        1
[INPUT] 0    0    [1    /1   ]  3.13156518554        1
[INPUT] 1    0    [1    /1   ]  5.4237313328         1
[INPUT] 1    0    [1    /1   ]  0.907872533493       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7656729994610713, 1.0]], [0, [453.96417948965376, 1.0]], [0, [69.00710117681324, 1.0]], [0, [16.332436827587866, 1.0]], [0, [3.131565185544923, 1.0]], [1, [5.423731332796901, 1.0]], [1, [0.9078725334934497, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.765673]
bas 1, expnt(s) = [453.96417949]
bas 2, expnt(s) = [69.00710118]
bas 3, expnt(s) = [16.33243683]
bas 4, expnt(s) = [3.13156519]
bas 5, expnt(s) = [5.42373133]
bas 6, expnt(s) = [0.90787253]
CPU time:        64.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.765673
   2.06798566 453.96417949 248.47414997  69.00710118  60.49024762
  16.33243683  20.5259499    3.13156519   5.94752281   5.42373133
  24.146662     0.90787253   2.58532704]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.841755538872512
cond(S) = 23.0658943830728
E1 = -181.2163056794904  E_coul = 54.43300263546499
init E= -126.783303044025
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646075298630671  LUMO = 5.31624010018862
  mo_energy =
[-32.49016272  -1.87035517  -0.6460753   -0.6460753   -0.6460753
   5.3162401    5.450317     5.450317     5.450317    69.93234041
 641.69201004]
E1 = -181.27830730937285  E_coul = 54.2553063829835
cycle= 1 E= -127.023000926389  delta_E= -0.24  |g|= 0.122  |ddm|= 0.288
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.137227
diis-c [-0.01883134  1.        ]
  HOMO = -0.623299315851027  LUMO = 5.3225921523873
  mo_energy =
[-3.26694615e+01 -1.84482276e+00 -6.23299316e-01 -6.23299316e-01
 -6.23299316e-01  5.32259215e+00  5.45159839e+00  5.45159839e+00
  5.45159839e+00  6.97698782e+01  6.41434115e+02]
E1 = -181.44193366270696  E_coul = 54.418401409659644
cycle= 2 E= -127.023532253047  delta_E= -0.000531  |g|= 0.0208  |ddm|= 0.0312
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0263459
diis-c [-2.41663979e-04  1.34953568e-01  8.65046432e-01]
  HOMO = -0.614283140780507  LUMO = 5.33475808854439
  mo_energy =
[-3.26348300e+01 -1.83591278e+00 -6.14283141e-01 -6.14283141e-01
 -6.14283141e-01  5.33475809e+00  5.46628803e+00  5.46628803e+00
  5.46628803e+00  6.98026498e+01  6.41476355e+02]
E1 = -181.41014349156606  E_coul = 54.386584386509774
cycle= 3 E= -127.023559105056  delta_E= -2.69e-05  |g|= 0.00155  |ddm|= 0.00505
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00159847
diis-c [-3.18858294e-07 -6.46993658e-03  2.59728263e-02  9.80497110e-01]
  HOMO = -0.614787336593791  LUMO = 5.33385874245089
  mo_energy =
[-3.26366969e+01 -1.83659042e+00 -6.14787337e-01 -6.14787337e-01
 -6.14787337e-01  5.33385874e+00  5.46548611e+00  5.46548611e+00
  5.46548611e+00  6.98008877e+01  6.41474674e+02]
E1 = -181.41207211906  E_coul = 54.38851287720453
cycle= 4 E= -127.023559241855  delta_E= -1.37e-07  |g|= 8.37e-05  |ddm|= 0.000508
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.24709e-05
diis-c [-9.83942009e-11  4.19730269e-04 -7.13923593e-03 -1.20541083e-01
  1.12726059e+00]
  HOMO = -0.614769485858785  LUMO = 5.33385745539568
  mo_energy =
[-3.26366409e+01 -1.83659227e+00 -6.14769486e-01 -6.14769486e-01
 -6.14769486e-01  5.33385746e+00  5.46551433e+00  5.46551433e+00
  5.46551433e+00  6.98009390e+01  6.41474768e+02]
E1 = -181.41203700402545  E_coul = 54.38847776158645
cycle= 5 E= -127.023559242439  delta_E= -5.84e-10  |g|= 4.64e-07  |ddm|= 3.66e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41203700402545  E_coul = 54.38847776158645
  HOMO = -0.614769369648202  LUMO = 5.33385763938812
  mo_energy =
[-3.26366405e+01 -1.83659213e+00 -6.14769370e-01 -6.14769370e-01
 -6.14769370e-01  5.33385764e+00  5.46551449e+00  5.46551449e+00
  5.46551449e+00  6.98009393e+01  6.41474768e+02]
E1 = -181.41203667588903  E_coul = 54.388477433449914
Extra cycle  E= -127.023559242439  delta_E= -1.14e-13  |g|= 4.44e-08  |ddm|= 8.39e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.765673   453.96417949  69.00710118  16.33243683   3.13156519
   5.42373133   0.90787253]
E = -127.02355924243912
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.765672999461       1
[INPUT] 0    0    [1    /1   ]  453.96417949         1
[INPUT] 0    0    [1    /1   ]  69.0071011768        1
[INPUT] 0    0    [1    /1   ]  16.3324368276        1
[INPUT] 0    0    [1    /1   ]  3.13156518554        1
[INPUT] 1    0    [1    /1   ]  5.4237313328         1
[INPUT] 1    0    [1    /1   ]  0.907872533493       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7656729994610713, 1.0]], [0, [453.96417948965376, 1.0]], [0, [69.00710117681324, 1.0]], [0, [16.332436827587866, 1.0]], [0, [3.131565185544923, 1.0]], [1, [5.423731332796901, 1.0]], [1, [0.9078725334934497, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.765673]
bas 1, expnt(s) = [453.96417949]
bas 2, expnt(s) = [69.00710118]
bas 3, expnt(s) = [16.33243683]
bas 4, expnt(s) = [3.13156519]
bas 5, expnt(s) = [5.42373133]
bas 6, expnt(s) = [0.90787253]
CPU time:        64.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.765673
   2.06798566 453.96417949 248.47414997  69.00710118  60.49024762
  16.33243683  20.5259499    3.13156519   5.94752281   5.42373133
  24.146662     0.90787253   2.58532704]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.841755538872512
cond(S) = 23.0658943830728
E1 = -181.2163056794904  E_coul = 54.43300263546499
init E= -126.783303044025
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.646075298630671  LUMO = 5.31624010018862
  mo_energy =
[-32.49016272  -1.87035517  -0.6460753   -0.6460753   -0.6460753
   5.3162401    5.450317     5.450317     5.450317    69.93234041
 641.69201004]
E1 = -181.27830730937285  E_coul = 54.2553063829835
cycle= 1 E= -127.023000926389  delta_E= -0.24  |g|= 0.122  |ddm|= 0.288
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.137227
diis-c [-0.01883134  1.        ]
  HOMO = -0.623299315851027  LUMO = 5.3225921523873
  mo_energy =
[-3.26694615e+01 -1.84482276e+00 -6.23299316e-01 -6.23299316e-01
 -6.23299316e-01  5.32259215e+00  5.45159839e+00  5.45159839e+00
  5.45159839e+00  6.97698782e+01  6.41434115e+02]
E1 = -181.44193366270696  E_coul = 54.418401409659644
cycle= 2 E= -127.023532253047  delta_E= -0.000531  |g|= 0.0208  |ddm|= 0.0312
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0263459
diis-c [-2.41663979e-04  1.34953568e-01  8.65046432e-01]
  HOMO = -0.614283140780507  LUMO = 5.33475808854439
  mo_energy =
[-3.26348300e+01 -1.83591278e+00 -6.14283141e-01 -6.14283141e-01
 -6.14283141e-01  5.33475809e+00  5.46628803e+00  5.46628803e+00
  5.46628803e+00  6.98026498e+01  6.41476355e+02]
E1 = -181.41014349156606  E_coul = 54.386584386509774
cycle= 3 E= -127.023559105056  delta_E= -2.69e-05  |g|= 0.00155  |ddm|= 0.00505
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00159847
diis-c [-3.18858294e-07 -6.46993658e-03  2.59728263e-02  9.80497110e-01]
  HOMO = -0.614787336593791  LUMO = 5.33385874245089
  mo_energy =
[-3.26366969e+01 -1.83659042e+00 -6.14787337e-01 -6.14787337e-01
 -6.14787337e-01  5.33385874e+00  5.46548611e+00  5.46548611e+00
  5.46548611e+00  6.98008877e+01  6.41474674e+02]
E1 = -181.41207211906  E_coul = 54.38851287720453
cycle= 4 E= -127.023559241855  delta_E= -1.37e-07  |g|= 8.37e-05  |ddm|= 0.000508
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.24709e-05
diis-c [-9.83942009e-11  4.19730269e-04 -7.13923593e-03 -1.20541083e-01
  1.12726059e+00]
  HOMO = -0.614769485858785  LUMO = 5.33385745539568
  mo_energy =
[-3.26366409e+01 -1.83659227e+00 -6.14769486e-01 -6.14769486e-01
 -6.14769486e-01  5.33385746e+00  5.46551433e+00  5.46551433e+00
  5.46551433e+00  6.98009390e+01  6.41474768e+02]
E1 = -181.41203700402545  E_coul = 54.38847776158645
cycle= 5 E= -127.023559242439  delta_E= -5.84e-10  |g|= 4.64e-07  |ddm|= 3.66e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41203700402545  E_coul = 54.38847776158645
  HOMO = -0.614769369648202  LUMO = 5.33385763938812
  mo_energy =
[-3.26366405e+01 -1.83659213e+00 -6.14769370e-01 -6.14769370e-01
 -6.14769370e-01  5.33385764e+00  5.46551449e+00  5.46551449e+00
  5.46551449e+00  6.98009393e+01  6.41474768e+02]
E1 = -181.41203667588903  E_coul = 54.388477433449914
Extra cycle  E= -127.023559242439  delta_E= -1.14e-13  |g|= 4.44e-08  |ddm|= 8.39e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.0658943830728
E1 = -181.41203667588903  E_coul = 54.388477433449914
init E= -127.023559242439
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.614769390675967  LUMO = 5.33385761265444
  mo_energy =
[-3.26366406e+01 -1.83659215e+00 -6.14769391e-01 -6.14769391e-01
 -6.14769391e-01  5.33385761e+00  5.46551445e+00  5.46551445e+00
  5.46551445e+00  6.98009392e+01  6.41474768e+02]
E1 = -181.41203675132485  E_coul = 54.388477508885835
cycle= 1 E= -127.023559242439  delta_E= 1.14e-13  |g|= 1.01e-08  |ddm|= 1.16e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.41203675132485  E_coul = 54.388477508885835
  HOMO = -0.614769385918191  LUMO = 5.3338576198432
  mo_energy =
[-3.26366406e+01 -1.83659214e+00 -6.14769386e-01 -6.14769386e-01
 -6.14769386e-01  5.33385762e+00  5.46551446e+00  5.46551446e+00
  5.46551446e+00  6.98009392e+01  6.41474768e+02]
E1 = -181.41203673405545  E_coul = 54.38847749161638
Extra cycle  E= -127.023559242439  delta_E= -5.68e-14  |g|= 2.21e-09  |ddm|= 3.24e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.765673   453.96417949  69.00710118  16.33243683   3.13156519
   5.42373133   0.90787253]
grad_E = [-0.00050131  0.00018469 -0.00770114  0.00900208 -0.00512649  0.01209485
 -0.00073425]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.75805796969        1
[INPUT] 0    0    [1    /1   ]  453.96037427         1
[INPUT] 0    0    [1    /1   ]  69.1385689255        1
[INPUT] 0    0    [1    /1   ]  16.2702471846        1
[INPUT] 0    0    [1    /1   ]  2.97165540281        1
[INPUT] 1    0    [1    /1   ]  5.42217539691        1
[INPUT] 1    0    [1    /1   ]  0.907042990581       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.758057969690313, 1.0]], [0, [453.96037427010504, 1.0]], [0, [69.13856892552526, 1.0]], [0, [16.270247184575158, 1.0]], [0, [2.9716554028091138, 1.0]], [1, [5.422175396910399, 1.0]], [1, [0.9070429905811948, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.75805797]
bas 1, expnt(s) = [453.96037427]
bas 2, expnt(s) = [69.13856893]
bas 3, expnt(s) = [16.27024718]
bas 4, expnt(s) = [2.9716554]
bas 5, expnt(s) = [5.4221754]
bas 6, expnt(s) = [0.90704299]
CPU time:        67.22
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.75805797
   2.05254098 453.96037427 248.4725879   69.13856893  60.57665856
  16.27024718  20.46730387   2.9716554    5.71825949   5.4221754
  24.13800345   0.90704299   2.58237454]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842506311168803
cond(S) = 22.529134637819276
E1 = -181.22026159683475  E_coul = 54.434184358809944
init E= -126.786077238025
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645941205107984  LUMO = 5.03253177301936
  mo_energy =
[-32.48830146  -1.87225179  -0.64594121  -0.64594121  -0.64594121
   5.03253177   5.44657108   5.44657108   5.44657108  69.16360966
 641.34276526]
E1 = -181.27953642268403  E_coul = 54.255981247070515
cycle= 1 E= -127.023555175614  delta_E= -0.237  |g|= 0.122  |ddm|= 0.284
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.135635
diis-c [-0.01839681  1.        ]
  HOMO = -0.623296212307588  LUMO = 5.04169048577042
  mo_energy =
[-3.26669705e+01 -1.84726587e+00 -6.23296212e-01 -6.23296212e-01
 -6.23296212e-01  5.04169049e+00  5.44795179e+00  5.44795179e+00
  5.44795179e+00  6.90020081e+01  6.41087222e+02]
E1 = -181.44412172685975  E_coul = 54.42002857729397
cycle= 2 E= -127.024093149566  delta_E= -0.000538  |g|= 0.0209  |ddm|= 0.0324
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0265464
diis-c [-2.47941739e-04  1.36922248e-01  8.63077752e-01]
  HOMO = -0.614211638790678  LUMO = 5.05337932684236
  mo_energy =
[-3.26322821e+01 -1.83836807e+00 -6.14211639e-01 -6.14211639e-01
 -6.14211639e-01  5.05337933e+00  5.46272521e+00  5.46272521e+00
  5.46272521e+00  6.90348150e+01  6.41129581e+02]
E1 = -181.41211789756875  E_coul = 54.38799741393031
cycle= 3 E= -127.024120483638  delta_E= -2.73e-05  |g|= 0.00158  |ddm|= 0.00507
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00158581
diis-c [-4.03125749e-07 -7.17725096e-03  2.10296937e-02  9.86147557e-01]
  HOMO = -0.614698226856642  LUMO = 5.05250380763424
  mo_energy =
[-3.26341027e+01 -1.83905336e+00 -6.14698227e-01 -6.14698227e-01
 -6.14698227e-01  5.05250381e+00  5.46194956e+00  5.46194956e+00
  5.46194956e+00  6.90330941e+01  6.41127992e+02]
E1 = -181.41405441645995  E_coul = 54.38993378471644
cycle= 4 E= -127.024120631744  delta_E= -1.48e-07  |g|= 9.67e-05  |ddm|= 0.000561
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000107874
diis-c [-1.00979708e-10  4.32818480e-04 -7.23439629e-03 -1.19460578e-01
  1.12626216e+00]
  HOMO = -0.614675888715661  LUMO = 5.05250414718131
  mo_energy =
[-3.26340341e+01 -1.83905386e+00 -6.14675889e-01 -6.14675889e-01
 -6.14675889e-01  5.05250415e+00  5.46198450e+00  5.46198450e+00
  5.46198450e+00  6.90331569e+01  6.41128104e+02]
E1 = -181.41401153437437  E_coul = 54.389890901833006
cycle= 5 E= -127.024120632541  delta_E= -7.98e-10  |g|= 4.67e-07  |ddm|= 4.32e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41401153437437  E_coul = 54.389890901833006
  HOMO = -0.614675788290754  LUMO = 5.05250431637554
  mo_energy =
[-3.26340338e+01 -1.83905373e+00 -6.14675788e-01 -6.14675788e-01
 -6.14675788e-01  5.05250432e+00  5.46198463e+00  5.46198463e+00
  5.46198463e+00  6.90331571e+01  6.41128104e+02]
E1 = -181.41401124549583  E_coul = 54.38989061295459
Extra cycle  E= -127.024120632541  delta_E= 1.14e-13  |g|= 4.18e-08  |ddm|= 9.55e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.75805797 453.96037427  69.13856893  16.27024718   2.9716554
   5.4221754    0.90704299]
E = -127.02412063254124
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.75805796969        1
[INPUT] 0    0    [1    /1   ]  453.96037427         1
[INPUT] 0    0    [1    /1   ]  69.1385689255        1
[INPUT] 0    0    [1    /1   ]  16.2702471846        1
[INPUT] 0    0    [1    /1   ]  2.97165540281        1
[INPUT] 1    0    [1    /1   ]  5.42217539691        1
[INPUT] 1    0    [1    /1   ]  0.907042990581       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.758057969690313, 1.0]], [0, [453.96037427010504, 1.0]], [0, [69.13856892552526, 1.0]], [0, [16.270247184575158, 1.0]], [0, [2.9716554028091138, 1.0]], [1, [5.422175396910399, 1.0]], [1, [0.9070429905811948, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.75805797]
bas 1, expnt(s) = [453.96037427]
bas 2, expnt(s) = [69.13856893]
bas 3, expnt(s) = [16.27024718]
bas 4, expnt(s) = [2.9716554]
bas 5, expnt(s) = [5.4221754]
bas 6, expnt(s) = [0.90704299]
CPU time:        67.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.75805797
   2.05254098 453.96037427 248.4725879   69.13856893  60.57665856
  16.27024718  20.46730387   2.9716554    5.71825949   5.4221754
  24.13800345   0.90704299   2.58237454]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842506311168803
cond(S) = 22.529134637819276
E1 = -181.22026159683475  E_coul = 54.434184358809944
init E= -126.786077238025
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645941205107984  LUMO = 5.03253177301936
  mo_energy =
[-32.48830146  -1.87225179  -0.64594121  -0.64594121  -0.64594121
   5.03253177   5.44657108   5.44657108   5.44657108  69.16360966
 641.34276526]
E1 = -181.27953642268403  E_coul = 54.255981247070515
cycle= 1 E= -127.023555175614  delta_E= -0.237  |g|= 0.122  |ddm|= 0.284
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.135635
diis-c [-0.01839681  1.        ]
  HOMO = -0.623296212307588  LUMO = 5.04169048577042
  mo_energy =
[-3.26669705e+01 -1.84726587e+00 -6.23296212e-01 -6.23296212e-01
 -6.23296212e-01  5.04169049e+00  5.44795179e+00  5.44795179e+00
  5.44795179e+00  6.90020081e+01  6.41087222e+02]
E1 = -181.44412172685975  E_coul = 54.42002857729397
cycle= 2 E= -127.024093149566  delta_E= -0.000538  |g|= 0.0209  |ddm|= 0.0324
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0265464
diis-c [-2.47941739e-04  1.36922248e-01  8.63077752e-01]
  HOMO = -0.614211638790678  LUMO = 5.05337932684236
  mo_energy =
[-3.26322821e+01 -1.83836807e+00 -6.14211639e-01 -6.14211639e-01
 -6.14211639e-01  5.05337933e+00  5.46272521e+00  5.46272521e+00
  5.46272521e+00  6.90348150e+01  6.41129581e+02]
E1 = -181.41211789756875  E_coul = 54.38799741393031
cycle= 3 E= -127.024120483638  delta_E= -2.73e-05  |g|= 0.00158  |ddm|= 0.00507
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00158581
diis-c [-4.03125749e-07 -7.17725096e-03  2.10296937e-02  9.86147557e-01]
  HOMO = -0.614698226856642  LUMO = 5.05250380763424
  mo_energy =
[-3.26341027e+01 -1.83905336e+00 -6.14698227e-01 -6.14698227e-01
 -6.14698227e-01  5.05250381e+00  5.46194956e+00  5.46194956e+00
  5.46194956e+00  6.90330941e+01  6.41127992e+02]
E1 = -181.41405441645995  E_coul = 54.38993378471644
cycle= 4 E= -127.024120631744  delta_E= -1.48e-07  |g|= 9.67e-05  |ddm|= 0.000561
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000107874
diis-c [-1.00979708e-10  4.32818480e-04 -7.23439629e-03 -1.19460578e-01
  1.12626216e+00]
  HOMO = -0.614675888715661  LUMO = 5.05250414718131
  mo_energy =
[-3.26340341e+01 -1.83905386e+00 -6.14675889e-01 -6.14675889e-01
 -6.14675889e-01  5.05250415e+00  5.46198450e+00  5.46198450e+00
  5.46198450e+00  6.90331569e+01  6.41128104e+02]
E1 = -181.41401153437437  E_coul = 54.389890901833006
cycle= 5 E= -127.024120632541  delta_E= -7.98e-10  |g|= 4.67e-07  |ddm|= 4.32e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41401153437437  E_coul = 54.389890901833006
  HOMO = -0.614675788290754  LUMO = 5.05250431637554
  mo_energy =
[-3.26340338e+01 -1.83905373e+00 -6.14675788e-01 -6.14675788e-01
 -6.14675788e-01  5.05250432e+00  5.46198463e+00  5.46198463e+00
  5.46198463e+00  6.90331571e+01  6.41128104e+02]
E1 = -181.41401124549583  E_coul = 54.38989061295459
Extra cycle  E= -127.024120632541  delta_E= 1.14e-13  |g|= 4.18e-08  |ddm|= 9.55e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.529134637819276
E1 = -181.41401124549583  E_coul = 54.38989061295459
init E= -127.024120632541
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.614675807165155  LUMO = 5.05250429547502
  mo_energy =
[-3.26340338e+01 -1.83905374e+00 -6.14675807e-01 -6.14675807e-01
 -6.14675807e-01  5.05250430e+00  5.46198460e+00  5.46198460e+00
  5.46198460e+00  6.90331571e+01  6.41128104e+02]
E1 = -181.41401131105505  E_coul = 54.389890678513744
cycle= 1 E= -127.024120632541  delta_E= -5.68e-14  |g|= 9.2e-09  |ddm|= 1.06e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.41401131105505  E_coul = 54.389890678513744
  HOMO = -0.614675803075567  LUMO = 5.05250430174179
  mo_energy =
[-3.26340338e+01 -1.83905374e+00 -6.14675803e-01 -6.14675803e-01
 -6.14675803e-01  5.05250430e+00  5.46198461e+00  5.46198461e+00
  5.46198461e+00  6.90331571e+01  6.41128104e+02]
E1 = -181.41401129572304  E_coul = 54.38989066318172
Extra cycle  E= -127.024120632541  delta_E= -2.84e-14  |g|= 1.96e-09  |ddm|= 3.21e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.75805797 453.96037427  69.13856893  16.27024718   2.9716554
   5.4221754    0.90704299]
grad_E = [ 0.01392184  0.00015609 -0.00716678  0.00890643 -0.00800688  0.01279843
 -0.00570861]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.754187798003       1
[INPUT] 0    0    [1    /1   ]  453.955513194        1
[INPUT] 0    0    [1    /1   ]  69.3083081363        1
[INPUT] 0    0    [1    /1   ]  16.2321546426        1
[INPUT] 0    0    [1    /1   ]  2.86781618696        1
[INPUT] 1    0    [1    /1   ]  5.39889883894        1
[INPUT] 1    0    [1    /1   ]  0.903804176006       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7541877980025743, 1.0]], [0, [453.95551319413386, 1.0]], [0, [69.30830813632838, 1.0]], [0, [16.232154642615264, 1.0]], [0, [2.867816186964033, 1.0]], [1, [5.398898838935302, 1.0]], [1, [0.9038041760064299, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.7541878]
bas 1, expnt(s) = [453.95551319]
bas 2, expnt(s) = [69.30830814]
bas 3, expnt(s) = [16.23215464]
bas 4, expnt(s) = [2.86781619]
bas 5, expnt(s) = [5.39889884]
bas 6, expnt(s) = [0.90380418]
CPU time:        70.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.7541878
   2.04467671 453.95551319 248.47059238  69.30830814  60.68816378
  16.23215464  20.4313542    2.86781619   5.56773438   5.39889884
  24.00854715   0.90380418   2.57085346]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.84402928041912
cond(S) = 22.232398581442457
E1 = -181.22080622905904  E_coul = 54.431432615958926
init E= -126.7893736131
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645893881210442  LUMO = 4.85395152278532
  mo_energy =
[-32.48894242  -1.87351681  -0.64589388  -0.64589388  -0.64589388
   4.85395152   5.41978346   5.41978346   5.41978346  68.72519296
 641.39414203]
E1 = -181.2609142648977  E_coul = 54.236511739737814
cycle= 1 E= -127.02440252516  delta_E= -0.235  |g|= 0.123  |ddm|= 0.281
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.135423
diis-c [-0.01833939  1.        ]
  HOMO = -0.6245659692704  LUMO = 4.86313308922808
  mo_energy =
[-3.26700548e+01 -1.85054591e+00 -6.24565969e-01 -6.24565969e-01
 -6.24565969e-01  4.86313309e+00  5.41986933e+00  5.41986933e+00
  5.41986933e+00  6.85613918e+01  6.41137126e+02]
E1 = -181.4293188232093  E_coul = 54.404352806189635
cycle= 2 E= -127.02496601702  delta_E= -0.000563  |g|= 0.0214  |ddm|= 0.0341
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0271836
diis-c [-2.56003685e-04  1.40466347e-01  8.59533653e-01]
  HOMO = -0.615276677965004  LUMO = 4.8746938453986
  mo_energy =
[-3.26347860e+01 -1.84150164e+00 -6.15276678e-01 -6.15276678e-01
 -6.15276678e-01  4.87469385e+00  5.43490552e+00  5.43490552e+00
  5.43490552e+00  6.85947410e+01  6.41180182e+02]
E1 = -181.39658352618932  E_coul = 54.37158868931626
cycle= 3 E= -127.024994836873  delta_E= -2.88e-05  |g|= 0.00161  |ddm|= 0.00517
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00156559
diis-c [-4.93459227e-07 -8.02354296e-03  1.40355792e-02  9.93987964e-01]
  HOMO = -0.615737675694898  LUMO = 4.87383892571101
  mo_energy =
[-3.26365283e+01 -1.84218971e+00 -6.15737676e-01 -6.15737676e-01
 -6.15737676e-01  4.87383893e+00  5.43417166e+00  5.43417166e+00
  5.43417166e+00  6.85930915e+01  6.41178726e+02]
E1 = -181.39849768902303  E_coul = 54.373502692141805
cycle= 4 E= -127.024994996881  delta_E= -1.6e-07  |g|= 0.000108  |ddm|= 0.000614
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000121596
diis-c [-1.01849316e-10  4.43320572e-04 -6.95171308e-03 -1.16955713e-01
  1.12346411e+00]
  HOMO = -0.615711428844308  LUMO = 4.87384053377383
  mo_energy =
[-3.26364485e+01 -1.84218907e+00 -6.15711429e-01 -6.15711429e-01
 -6.15711429e-01  4.87384053e+00  5.43421233e+00  5.43421233e+00
  5.43421233e+00  6.85931645e+01  6.41178853e+02]
E1 = -181.39844759687372  E_coul = 54.37345259897399
cycle= 5 E= -127.0249949979  delta_E= -1.02e-09  |g|= 4.73e-07  |ddm|= 4.93e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.09783e-07
diis-c [-7.10226999e-15 -1.24779322e-05  2.32895590e-04  3.87398481e-03
 -3.68566442e-02  1.03276224e+00]
  HOMO = -0.615711356706238  LUMO = 4.87384068050186
  mo_energy =
[-3.26364483e+01 -1.84218895e+00 -6.15711357e-01 -6.15711357e-01
 -6.15711357e-01  4.87384068e+00  5.43421242e+00  5.43421242e+00
  5.43421242e+00  6.85931646e+01  6.41178853e+02]
E1 = -181.39844738772055  E_coul = 54.373452389820756
cycle= 6 E= -127.0249949979  delta_E= -5.68e-14  |g|= 7.94e-09  |ddm|= 1.13e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.39844738772055  E_coul = 54.373452389820756
  HOMO = -0.615711360172289  LUMO = 4.87384067740902
  mo_energy =
[-3.26364483e+01 -1.84218896e+00 -6.15711360e-01 -6.15711360e-01
 -6.15711360e-01  4.87384068e+00  5.43421241e+00  5.43421241e+00
  5.43421241e+00  6.85931646e+01  6.41178853e+02]
E1 = -181.3984473976535  E_coul = 54.37345239975381
Extra cycle  E= -127.0249949979  delta_E= 8.53e-14  |g|= 1.6e-09  |ddm|= 2.34e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.7541878  453.95551319  69.30830814  16.23215464   2.86781619
   5.39889884   0.90380418]
E = -127.02499499789971
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.754187798003       1
[INPUT] 0    0    [1    /1   ]  453.955513194        1
[INPUT] 0    0    [1    /1   ]  69.3083081363        1
[INPUT] 0    0    [1    /1   ]  16.2321546426        1
[INPUT] 0    0    [1    /1   ]  2.86781618696        1
[INPUT] 1    0    [1    /1   ]  5.39889883894        1
[INPUT] 1    0    [1    /1   ]  0.903804176006       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7541877980025743, 1.0]], [0, [453.95551319413386, 1.0]], [0, [69.30830813632838, 1.0]], [0, [16.232154642615264, 1.0]], [0, [2.867816186964033, 1.0]], [1, [5.398898838935302, 1.0]], [1, [0.9038041760064299, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.7541878]
bas 1, expnt(s) = [453.95551319]
bas 2, expnt(s) = [69.30830814]
bas 3, expnt(s) = [16.23215464]
bas 4, expnt(s) = [2.86781619]
bas 5, expnt(s) = [5.39889884]
bas 6, expnt(s) = [0.90380418]
CPU time:        70.74
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.7541878
   2.04467671 453.95551319 248.47059238  69.30830814  60.68816378
  16.23215464  20.4313542    2.86781619   5.56773438   5.39889884
  24.00854715   0.90380418   2.57085346]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.84402928041912
cond(S) = 22.232398581442457
E1 = -181.22080622905904  E_coul = 54.431432615958926
init E= -126.7893736131
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645893881210442  LUMO = 4.85395152278532
  mo_energy =
[-32.48894242  -1.87351681  -0.64589388  -0.64589388  -0.64589388
   4.85395152   5.41978346   5.41978346   5.41978346  68.72519296
 641.39414203]
E1 = -181.2609142648977  E_coul = 54.236511739737814
cycle= 1 E= -127.02440252516  delta_E= -0.235  |g|= 0.123  |ddm|= 0.281
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.135423
diis-c [-0.01833939  1.        ]
  HOMO = -0.6245659692704  LUMO = 4.86313308922808
  mo_energy =
[-3.26700548e+01 -1.85054591e+00 -6.24565969e-01 -6.24565969e-01
 -6.24565969e-01  4.86313309e+00  5.41986933e+00  5.41986933e+00
  5.41986933e+00  6.85613918e+01  6.41137126e+02]
E1 = -181.4293188232093  E_coul = 54.404352806189635
cycle= 2 E= -127.02496601702  delta_E= -0.000563  |g|= 0.0214  |ddm|= 0.0341
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0271836
diis-c [-2.56003685e-04  1.40466347e-01  8.59533653e-01]
  HOMO = -0.615276677965004  LUMO = 4.8746938453986
  mo_energy =
[-3.26347860e+01 -1.84150164e+00 -6.15276678e-01 -6.15276678e-01
 -6.15276678e-01  4.87469385e+00  5.43490552e+00  5.43490552e+00
  5.43490552e+00  6.85947410e+01  6.41180182e+02]
E1 = -181.39658352618932  E_coul = 54.37158868931626
cycle= 3 E= -127.024994836873  delta_E= -2.88e-05  |g|= 0.00161  |ddm|= 0.00517
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00156559
diis-c [-4.93459227e-07 -8.02354296e-03  1.40355792e-02  9.93987964e-01]
  HOMO = -0.615737675694898  LUMO = 4.87383892571101
  mo_energy =
[-3.26365283e+01 -1.84218971e+00 -6.15737676e-01 -6.15737676e-01
 -6.15737676e-01  4.87383893e+00  5.43417166e+00  5.43417166e+00
  5.43417166e+00  6.85930915e+01  6.41178726e+02]
E1 = -181.39849768902303  E_coul = 54.373502692141805
cycle= 4 E= -127.024994996881  delta_E= -1.6e-07  |g|= 0.000108  |ddm|= 0.000614
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000121596
diis-c [-1.01849316e-10  4.43320572e-04 -6.95171308e-03 -1.16955713e-01
  1.12346411e+00]
  HOMO = -0.615711428844308  LUMO = 4.87384053377383
  mo_energy =
[-3.26364485e+01 -1.84218907e+00 -6.15711429e-01 -6.15711429e-01
 -6.15711429e-01  4.87384053e+00  5.43421233e+00  5.43421233e+00
  5.43421233e+00  6.85931645e+01  6.41178853e+02]
E1 = -181.39844759687372  E_coul = 54.37345259897399
cycle= 5 E= -127.0249949979  delta_E= -1.02e-09  |g|= 4.73e-07  |ddm|= 4.93e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.09783e-07
diis-c [-7.10226999e-15 -1.24779322e-05  2.32895590e-04  3.87398481e-03
 -3.68566442e-02  1.03276224e+00]
  HOMO = -0.615711356706238  LUMO = 4.87384068050186
  mo_energy =
[-3.26364483e+01 -1.84218895e+00 -6.15711357e-01 -6.15711357e-01
 -6.15711357e-01  4.87384068e+00  5.43421242e+00  5.43421242e+00
  5.43421242e+00  6.85931646e+01  6.41178853e+02]
E1 = -181.39844738772055  E_coul = 54.373452389820756
cycle= 6 E= -127.0249949979  delta_E= -5.68e-14  |g|= 7.94e-09  |ddm|= 1.13e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.39844738772055  E_coul = 54.373452389820756
  HOMO = -0.615711360172289  LUMO = 4.87384067740902
  mo_energy =
[-3.26364483e+01 -1.84218896e+00 -6.15711360e-01 -6.15711360e-01
 -6.15711360e-01  4.87384068e+00  5.43421241e+00  5.43421241e+00
  5.43421241e+00  6.85931646e+01  6.41178853e+02]
E1 = -181.3984473976535  E_coul = 54.37345239975381
Extra cycle  E= -127.0249949979  delta_E= 8.53e-14  |g|= 1.6e-09  |ddm|= 2.34e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.232398581442457
E1 = -181.3984473976535  E_coul = 54.37345239975381
init E= -127.0249949979
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.615711359575048  LUMO = 4.87384067842108
  mo_energy =
[-3.26364483e+01 -1.84218895e+00 -6.15711360e-01 -6.15711360e-01
 -6.15711360e-01  4.87384068e+00  5.43421241e+00  5.43421241e+00
  5.43421241e+00  6.85931646e+01  6.41178853e+02]
E1 = -181.39844739521388  E_coul = 54.37345239731419
cycle= 1 E= -127.0249949979  delta_E= 2.84e-14  |g|= 3.19e-10  |ddm|= 6.47e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.39844739521388  E_coul = 54.37345239731419
  HOMO = -0.615711359736133  LUMO = 4.87384067823775
  mo_energy =
[-3.26364483e+01 -1.84218895e+00 -6.15711360e-01 -6.15711360e-01
 -6.15711360e-01  4.87384068e+00  5.43421241e+00  5.43421241e+00
  5.43421241e+00  6.85931646e+01  6.41178853e+02]
E1 = -181.3984473957538  E_coul = 54.37345239785399
Extra cycle  E= -127.0249949979  delta_E= -1.42e-13  |g|= 7.33e-11  |ddm|= 8.36e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.7541878  453.95551319  69.30830814  16.23215464   2.86781619
   5.39889884   0.90380418]
grad_E = [ 0.02765727  0.00012323 -0.00655928  0.00806582 -0.01033454  0.0113657
 -0.01128722]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.758510639961       1
[INPUT] 0    0    [1    /1   ]  453.938249334        1
[INPUT] 0    0    [1    /1   ]  69.9088933769        1
[INPUT] 0    0    [1    /1   ]  16.2955055297        1
[INPUT] 0    0    [1    /1   ]  2.81018300184        1
[INPUT] 1    0    [1    /1   ]  5.31583977914        1
[INPUT] 1    0    [1    /1   ]  0.893331853773       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7585106399607681, 1.0]], [0, [453.9382493340962, 1.0]], [0, [69.90889337692128, 1.0]], [0, [16.295505529660197, 1.0]], [0, [2.8101830018359046, 1.0]], [1, [5.315839779140841, 1.0]], [1, [0.8933318537725347, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.75851064]
bas 1, expnt(s) = [453.93824933]
bas 2, expnt(s) = [69.90889338]
bas 3, expnt(s) = [16.29550553]
bas 4, expnt(s) = [2.810183]
bas 5, expnt(s) = [5.31583978]
bas 6, expnt(s) = [0.89333185]
CPU time:        73.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.75851064
   2.05346016 453.93824933 248.46350538  69.90889338  61.08215418
  16.29550553  20.49112972   2.810183     5.48360263   5.31583978
  23.54774076   0.89333185   2.53367215]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.847977802936246
cond(S) = 22.12451208547248
E1 = -181.21433684636935  E_coul = 54.41887033503261
init E= -126.795466511337
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645940812935532  LUMO = 4.78567129187456
  mo_energy =
[-32.4958431   -1.87406553  -0.64594081  -0.64594081  -0.64594081
   4.78567129   5.32801549   5.32801549   5.32801549  69.04942813
 643.33756835]
E1 = -181.19133343509583  E_coul = 54.16427211015502
cycle= 1 E= -127.027061324941  delta_E= -0.232  |g|= 0.127  |ddm|= 0.281
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.138344
diis-c [-0.01913903  1.        ]
  HOMO = -0.629178279176279  LUMO = 4.78888785644046
  mo_energy =
[-3.26867267e+01 -1.85753875e+00 -6.29178279e-01 -6.29178279e-01
 -6.29178279e-01  4.78888786e+00  5.32320723e+00  5.32320723e+00
  5.32320723e+00  6.88758656e+01  6.43072356e+02]
E1 = -181.37200040369203  E_coul = 54.34428963591615
cycle= 2 E= -127.027710767776  delta_E= -0.000649  |g|= 0.0229  |ddm|= 0.0379
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0291451
diis-c [-2.74945378e-04  1.48582264e-01  8.51417736e-01]
  HOMO = -0.619270979213046  LUMO = 4.80099338294011
  mo_energy =
[-3.26493791e+01 -1.84791922e+00 -6.19270979e-01 -6.19270979e-01
 -6.19270979e-01  4.80099338e+00  5.33903876e+00  5.33903876e+00
  5.33903876e+00  6.89112311e+01  6.43117838e+02]
E1 = -181.33690072262524  E_coul = 54.30915630995876
cycle= 3 E= -127.027744412666  delta_E= -3.36e-05  |g|= 0.00168  |ddm|= 0.00552
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00155198
diis-c [-6.52194921e-07 -9.80249207e-03 -7.72565135e-04  1.01057506e+00]
  HOMO = -0.619680629101845  LUMO = 4.80015141194888
  mo_energy =
[-3.26509447e+01 -1.84861052e+00 -6.19680629e-01 -6.19680629e-01
 -6.19680629e-01  4.80015141e+00  5.33839397e+00  5.33839397e+00
  5.33839397e+00  6.89097430e+01  6.43116669e+02]
E1 = -181.3387267749904  E_coul = 54.31098217694652
cycle= 4 E= -127.027744598044  delta_E= -1.85e-07  |g|= 0.000123  |ddm|= 0.000705
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000138167
diis-c [-9.89816684e-11  4.52587720e-04 -5.82361786e-03 -1.09253408e-01
  1.11462444e+00]
  HOMO = -0.619650232727399  LUMO = 4.80015400008242
  mo_energy =
[-3.26508520e+01 -1.84860893e+00 -6.19650233e-01 -6.19650233e-01
 -6.19650233e-01  4.80015400e+00  5.33844041e+00  5.33844041e+00
  5.33844041e+00  6.89098276e+01  6.43116813e+02]
E1 = -181.33866674222168  E_coul = 54.310922142855325
cycle= 5 E= -127.027744599366  delta_E= -1.32e-09  |g|= 4.86e-07  |ddm|= 5.67e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.01793e-07
diis-c [-5.79504722e-15 -1.25319124e-05  1.96396865e-04  3.58769983e-03
 -3.60276839e-02  1.03225612e+00]
  HOMO = -0.619650185189222  LUMO = 4.8001541372488
  mo_energy =
[-3.26508519e+01 -1.84860883e+00 -6.19650185e-01 -6.19650185e-01
 -6.19650185e-01  4.80015414e+00  5.33844047e+00  5.33844047e+00
  5.33844047e+00  6.89098277e+01  6.43116813e+02]
E1 = -181.3386665905093  E_coul = 54.310921991142976
cycle= 6 E= -127.027744599366  delta_E= 2.84e-14  |g|= 7.42e-09  |ddm|= 1.42e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.3386665905093  E_coul = 54.310921991142976
  HOMO = -0.619650188469968  LUMO = 4.80015413424089
  mo_energy =
[-3.26508519e+01 -1.84860883e+00 -6.19650188e-01 -6.19650188e-01
 -6.19650188e-01  4.80015413e+00  5.33844046e+00  5.33844046e+00
  5.33844046e+00  6.89098277e+01  6.43116813e+02]
E1 = -181.3386666000619  E_coul = 54.31092200069554
Extra cycle  E= -127.027744599366  delta_E= -5.68e-14  |g|= 1.52e-09  |ddm|= 2.2e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [  0.75851064 453.93824933  69.90889338  16.29550553   2.810183
   5.31583978   0.89333185]
E = -127.02774459936637
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.758510639961       1
[INPUT] 0    0    [1    /1   ]  453.938249334        1
[INPUT] 0    0    [1    /1   ]  69.9088933769        1
[INPUT] 0    0    [1    /1   ]  16.2955055297        1
[INPUT] 0    0    [1    /1   ]  2.81018300184        1
[INPUT] 1    0    [1    /1   ]  5.31583977914        1
[INPUT] 1    0    [1    /1   ]  0.893331853773       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7585106399607681, 1.0]], [0, [453.9382493340962, 1.0]], [0, [69.90889337692128, 1.0]], [0, [16.295505529660197, 1.0]], [0, [2.8101830018359046, 1.0]], [1, [5.315839779140841, 1.0]], [1, [0.8933318537725347, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.75851064]
bas 1, expnt(s) = [453.93824933]
bas 2, expnt(s) = [69.90889338]
bas 3, expnt(s) = [16.29550553]
bas 4, expnt(s) = [2.810183]
bas 5, expnt(s) = [5.31583978]
bas 6, expnt(s) = [0.89333185]
CPU time:        74.06
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.75851064
   2.05346016 453.93824933 248.46350538  69.90889338  61.08215418
  16.29550553  20.49112972   2.810183     5.48360263   5.31583978
  23.54774076   0.89333185   2.53367215]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.847977802936246
cond(S) = 22.12451208547248
E1 = -181.21433684636935  E_coul = 54.41887033503261
init E= -126.795466511337
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645940812935532  LUMO = 4.78567129187456
  mo_energy =
[-32.4958431   -1.87406553  -0.64594081  -0.64594081  -0.64594081
   4.78567129   5.32801549   5.32801549   5.32801549  69.04942813
 643.33756835]
E1 = -181.19133343509583  E_coul = 54.16427211015502
cycle= 1 E= -127.027061324941  delta_E= -0.232  |g|= 0.127  |ddm|= 0.281
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.138344
diis-c [-0.01913903  1.        ]
  HOMO = -0.629178279176279  LUMO = 4.78888785644046
  mo_energy =
[-3.26867267e+01 -1.85753875e+00 -6.29178279e-01 -6.29178279e-01
 -6.29178279e-01  4.78888786e+00  5.32320723e+00  5.32320723e+00
  5.32320723e+00  6.88758656e+01  6.43072356e+02]
E1 = -181.37200040369203  E_coul = 54.34428963591615
cycle= 2 E= -127.027710767776  delta_E= -0.000649  |g|= 0.0229  |ddm|= 0.0379
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0291451
diis-c [-2.74945378e-04  1.48582264e-01  8.51417736e-01]
  HOMO = -0.619270979213046  LUMO = 4.80099338294011
  mo_energy =
[-3.26493791e+01 -1.84791922e+00 -6.19270979e-01 -6.19270979e-01
 -6.19270979e-01  4.80099338e+00  5.33903876e+00  5.33903876e+00
  5.33903876e+00  6.89112311e+01  6.43117838e+02]
E1 = -181.33690072262524  E_coul = 54.30915630995876
cycle= 3 E= -127.027744412666  delta_E= -3.36e-05  |g|= 0.00168  |ddm|= 0.00552
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00155198
diis-c [-6.52194921e-07 -9.80249207e-03 -7.72565135e-04  1.01057506e+00]
  HOMO = -0.619680629101845  LUMO = 4.80015141194888
  mo_energy =
[-3.26509447e+01 -1.84861052e+00 -6.19680629e-01 -6.19680629e-01
 -6.19680629e-01  4.80015141e+00  5.33839397e+00  5.33839397e+00
  5.33839397e+00  6.89097430e+01  6.43116669e+02]
E1 = -181.3387267749904  E_coul = 54.31098217694652
cycle= 4 E= -127.027744598044  delta_E= -1.85e-07  |g|= 0.000123  |ddm|= 0.000705
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000138167
diis-c [-9.89816684e-11  4.52587720e-04 -5.82361786e-03 -1.09253408e-01
  1.11462444e+00]
  HOMO = -0.619650232727399  LUMO = 4.80015400008242
  mo_energy =
[-3.26508520e+01 -1.84860893e+00 -6.19650233e-01 -6.19650233e-01
 -6.19650233e-01  4.80015400e+00  5.33844041e+00  5.33844041e+00
  5.33844041e+00  6.89098276e+01  6.43116813e+02]
E1 = -181.33866674222168  E_coul = 54.310922142855325
cycle= 5 E= -127.027744599366  delta_E= -1.32e-09  |g|= 4.86e-07  |ddm|= 5.67e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.01793e-07
diis-c [-5.79504722e-15 -1.25319124e-05  1.96396865e-04  3.58769983e-03
 -3.60276839e-02  1.03225612e+00]
  HOMO = -0.619650185189222  LUMO = 4.8001541372488
  mo_energy =
[-3.26508519e+01 -1.84860883e+00 -6.19650185e-01 -6.19650185e-01
 -6.19650185e-01  4.80015414e+00  5.33844047e+00  5.33844047e+00
  5.33844047e+00  6.89098277e+01  6.43116813e+02]
E1 = -181.3386665905093  E_coul = 54.310921991142976
cycle= 6 E= -127.027744599366  delta_E= 2.84e-14  |g|= 7.42e-09  |ddm|= 1.42e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.3386665905093  E_coul = 54.310921991142976
  HOMO = -0.619650188469968  LUMO = 4.80015413424089
  mo_energy =
[-3.26508519e+01 -1.84860883e+00 -6.19650188e-01 -6.19650188e-01
 -6.19650188e-01  4.80015413e+00  5.33844046e+00  5.33844046e+00
  5.33844046e+00  6.89098277e+01  6.43116813e+02]
E1 = -181.3386666000619  E_coul = 54.31092200069554
Extra cycle  E= -127.027744599366  delta_E= -5.68e-14  |g|= 1.52e-09  |ddm|= 2.2e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.12451208547248
E1 = -181.3386666000619  E_coul = 54.31092200069554
init E= -127.027744599366
    CPU time for initialize scf      0.04 sec, wall time      0.05 sec
  HOMO = -0.619650187893232  LUMO = 4.80015413520039
  mo_energy =
[-3.26508519e+01 -1.84860883e+00 -6.19650188e-01 -6.19650188e-01
 -6.19650188e-01  4.80015414e+00  5.33844046e+00  5.33844046e+00
  5.33844046e+00  6.89098277e+01  6.43116813e+02]
E1 = -181.3386665976966  E_coul = 54.31092199833024
cycle= 1 E= -127.027744599366  delta_E=    0  |g|= 3.08e-10  |ddm|= 6.23e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.3386665976966  E_coul = 54.31092199833024
  HOMO = -0.619650188049343  LUMO = 4.80015413502335
  mo_energy =
[-3.26508519e+01 -1.84860883e+00 -6.19650188e-01 -6.19650188e-01
 -6.19650188e-01  4.80015414e+00  5.33844046e+00  5.33844046e+00
  5.33844046e+00  6.89098277e+01  6.43116813e+02]
E1 = -181.33866659822675  E_coul = 54.31092199886042
Extra cycle  E= -127.027744599366  delta_E= 4.26e-14  |g|= 7.16e-11  |ddm|= 8.2e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.75851064 453.93824933  69.90889338  16.29550553   2.810183
   5.31583978   0.89333185]
grad_E = [ 4.90957507e-02  4.17529418e-05 -5.41525537e-03  6.81581843e-03
 -1.37506532e-02  4.56713839e-03 -2.29013431e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.783705391932       1
[INPUT] 0    0    [1    /1   ]  453.902453952        1
[INPUT] 0    0    [1    /1   ]  71.1504291023        1
[INPUT] 0    0    [1    /1   ]  16.6590639295        1
[INPUT] 0    0    [1    /1   ]  3.00610244388        1
[INPUT] 1    0    [1    /1   ]  5.17892089385        1
[INPUT] 1    0    [1    /1   ]  0.877357988039       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7837053919318374, 1.0]], [0, [453.9024539518976, 1.0]], [0, [71.1504291022685, 1.0]], [0, [16.65906392954341, 1.0]], [0, [3.006102443875288, 1.0]], [1, [5.178920893848927, 1.0]], [1, [0.8773579880387683, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.78370539]
bas 1, expnt(s) = [453.90245395]
bas 2, expnt(s) = [71.1504291]
bas 3, expnt(s) = [16.65906393]
bas 4, expnt(s) = [3.00610244]
bas 5, expnt(s) = [5.17892089]
bas 6, expnt(s) = [0.87735799]
CPU time:        76.89
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.78370539
   2.10440658 453.90245395 248.44881076  71.1504291   61.89394533
  16.65906393  20.83305548   3.00610244   5.76790179   5.17892089
  22.79205526   0.87735799   2.47716785]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.852695591577596
cond(S) = 22.675633676758032
E1 = -181.19719576827177  E_coul = 54.39640572210161
init E= -126.80079004617
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645865447633605  LUMO = 5.18243691319148
  mo_energy =
[-3.25123570e+01 -1.87110864e+00 -6.45865448e-01 -6.45865448e-01
 -6.45865448e-01  5.18243691e+00  5.18243691e+00  5.18243691e+00
  5.21523952e+00  7.17127933e+01  6.49246394e+02]
E1 = -181.08262612637427  E_coul = 54.05150448744415
cycle= 1 E= -127.03112163893  delta_E= -0.23  |g|= 0.134  |ddm|= 0.286
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.146001
diis-c [-0.02131616  1.        ]
  HOMO = -0.635981338998118  LUMO = 5.17025743424549
  mo_energy =
[-3.27182818e+01 -1.86406767e+00 -6.35981339e-01 -6.35981339e-01
 -6.35981339e-01  5.17025743e+00  5.17025743e+00  5.17025743e+00
  5.20276788e+00  7.15229557e+01  6.48968389e+02]
E1 = -181.2800042776618  E_coul = 54.24810695336798
cycle= 2 E= -127.031897324294  delta_E= -0.000776  |g|= 0.0249  |ddm|= 0.0412
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0316815
diis-c [-2.92962578e-04  1.55312330e-01  8.44687670e-01]
  HOMO = -0.625271751944699  LUMO = 5.18706632252148
  mo_energy =
[-3.26778453e+01 -1.85353482e+00 -6.25271752e-01 -6.25271752e-01
 -6.25271752e-01  5.18706632e+00  5.18706632e+00  5.18706632e+00
  5.21673396e+00  7.15614428e+01  6.49017443e+02]
E1 = -181.2415340965147  E_coul = 54.20959616082136
cycle= 3 E= -127.031937935693  delta_E= -4.06e-05  |g|= 0.00176  |ddm|= 0.00604
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00158788
diis-c [-7.15193500e-07 -1.12840247e-02 -1.19924129e-02  1.02327644e+00]
  HOMO = -0.625660891957583  LUMO = 5.1864727203074
  mo_energy =
[-3.26792864e+01 -1.85424020e+00 -6.25660892e-01 -6.25660892e-01
 -6.25660892e-01  5.18647272e+00  5.18647272e+00  5.18647272e+00
  5.21583908e+00  7.15600692e+01  6.49016484e+02]
E1 = -181.24325034674462  E_coul = 54.21131221215881
cycle= 4 E= -127.031938134586  delta_E= -1.99e-07  |g|= 0.000118  |ddm|= 0.000732
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000132387
diis-c [-8.76815613e-11  4.40499281e-04 -4.32156754e-03 -9.85449637e-02
  1.10242603e+00]
  HOMO = -0.625634022436885  LUMO = 5.1865134622916
  mo_energy =
[-3.26792004e+01 -1.85424062e+00 -6.25634022e-01 -6.25634022e-01
 -6.25634022e-01  5.18651346e+00  5.18651346e+00  5.18651346e+00
  5.21583952e+00  7.15601480e+01  6.49016619e+02]
E1 = -181.24319079317203  E_coul = 54.211252657382516
cycle= 5 E= -127.03193813579  delta_E= -1.2e-09  |g|= 4.83e-07  |ddm|= 5.34e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.95775e-07
diis-c [-4.95519695e-15 -1.22691254e-05  1.49999944e-04  3.27921195e-03
 -3.60704247e-02  1.03265348e+00]
  HOMO = -0.625633980537725  LUMO = 5.1865135079024
  mo_energy =
[-3.26792003e+01 -1.85424051e+00 -6.25633981e-01 -6.25633981e-01
 -6.25633981e-01  5.18651351e+00  5.18651351e+00  5.18651351e+00
  5.21583967e+00  7.15601480e+01  6.49016618e+02]
E1 = -181.24319066501855  E_coul = 54.21125252922901
cycle= 6 E= -127.03193813579  delta_E= -2.84e-14  |g|= 6.07e-09  |ddm|= 1.47e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.24319066501855  E_coul = 54.21125252922901
  HOMO = -0.625633983187292  LUMO = 5.18651350386678
  mo_energy =
[-3.26792003e+01 -1.85424051e+00 -6.25633983e-01 -6.25633983e-01
 -6.25633983e-01  5.18651350e+00  5.18651350e+00  5.18651350e+00
  5.21583967e+00  7.15601480e+01  6.49016618e+02]
E1 = -181.24319067308363  E_coul = 54.21125253729408
Extra cycle  E= -127.03193813579  delta_E=    0  |g|= 1.26e-09  |ddm|= 1.81e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.78370539 453.90245395  71.1504291   16.65906393   3.00610244
   5.17892089   0.87735799]
E = -127.03193813578955
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.783705391932       1
[INPUT] 0    0    [1    /1   ]  453.902453952        1
[INPUT] 0    0    [1    /1   ]  71.1504291023        1
[INPUT] 0    0    [1    /1   ]  16.6590639295        1
[INPUT] 0    0    [1    /1   ]  3.00610244388        1
[INPUT] 1    0    [1    /1   ]  5.17892089385        1
[INPUT] 1    0    [1    /1   ]  0.877357988039       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.7837053919318374, 1.0]], [0, [453.9024539518976, 1.0]], [0, [71.1504291022685, 1.0]], [0, [16.65906392954341, 1.0]], [0, [3.006102443875288, 1.0]], [1, [5.178920893848927, 1.0]], [1, [0.8773579880387683, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.78370539]
bas 1, expnt(s) = [453.90245395]
bas 2, expnt(s) = [71.1504291]
bas 3, expnt(s) = [16.65906393]
bas 4, expnt(s) = [3.00610244]
bas 5, expnt(s) = [5.17892089]
bas 6, expnt(s) = [0.87735799]
CPU time:        77.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.78370539
   2.10440658 453.90245395 248.44881076  71.1504291   61.89394533
  16.65906393  20.83305548   3.00610244   5.76790179   5.17892089
  22.79205526   0.87735799   2.47716785]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.852695591577596
cond(S) = 22.675633676758032
E1 = -181.19719576827177  E_coul = 54.39640572210161
init E= -126.80079004617
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645865447633605  LUMO = 5.18243691319148
  mo_energy =
[-3.25123570e+01 -1.87110864e+00 -6.45865448e-01 -6.45865448e-01
 -6.45865448e-01  5.18243691e+00  5.18243691e+00  5.18243691e+00
  5.21523952e+00  7.17127933e+01  6.49246394e+02]
E1 = -181.08262612637427  E_coul = 54.05150448744415
cycle= 1 E= -127.03112163893  delta_E= -0.23  |g|= 0.134  |ddm|= 0.286
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.146001
diis-c [-0.02131616  1.        ]
  HOMO = -0.635981338998118  LUMO = 5.17025743424549
  mo_energy =
[-3.27182818e+01 -1.86406767e+00 -6.35981339e-01 -6.35981339e-01
 -6.35981339e-01  5.17025743e+00  5.17025743e+00  5.17025743e+00
  5.20276788e+00  7.15229557e+01  6.48968389e+02]
E1 = -181.2800042776618  E_coul = 54.24810695336798
cycle= 2 E= -127.031897324294  delta_E= -0.000776  |g|= 0.0249  |ddm|= 0.0412
    CPU time for cycle= 2      0.02 sec, wall time      0.03 sec
diis-norm(errvec)=0.0316815
diis-c [-2.92962578e-04  1.55312330e-01  8.44687670e-01]
  HOMO = -0.625271751944699  LUMO = 5.18706632252148
  mo_energy =
[-3.26778453e+01 -1.85353482e+00 -6.25271752e-01 -6.25271752e-01
 -6.25271752e-01  5.18706632e+00  5.18706632e+00  5.18706632e+00
  5.21673396e+00  7.15614428e+01  6.49017443e+02]
E1 = -181.2415340965147  E_coul = 54.20959616082136
cycle= 3 E= -127.031937935693  delta_E= -4.06e-05  |g|= 0.00176  |ddm|= 0.00604
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00158788
diis-c [-7.15193500e-07 -1.12840247e-02 -1.19924129e-02  1.02327644e+00]
  HOMO = -0.625660891957583  LUMO = 5.1864727203074
  mo_energy =
[-3.26792864e+01 -1.85424020e+00 -6.25660892e-01 -6.25660892e-01
 -6.25660892e-01  5.18647272e+00  5.18647272e+00  5.18647272e+00
  5.21583908e+00  7.15600692e+01  6.49016484e+02]
E1 = -181.24325034674462  E_coul = 54.21131221215881
cycle= 4 E= -127.031938134586  delta_E= -1.99e-07  |g|= 0.000118  |ddm|= 0.000732
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000132387
diis-c [-8.76815613e-11  4.40499281e-04 -4.32156754e-03 -9.85449637e-02
  1.10242603e+00]
  HOMO = -0.625634022436885  LUMO = 5.1865134622916
  mo_energy =
[-3.26792004e+01 -1.85424062e+00 -6.25634022e-01 -6.25634022e-01
 -6.25634022e-01  5.18651346e+00  5.18651346e+00  5.18651346e+00
  5.21583952e+00  7.15601480e+01  6.49016619e+02]
E1 = -181.24319079317203  E_coul = 54.211252657382516
cycle= 5 E= -127.03193813579  delta_E= -1.2e-09  |g|= 4.83e-07  |ddm|= 5.34e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.95775e-07
diis-c [-4.95519695e-15 -1.22691254e-05  1.49999944e-04  3.27921195e-03
 -3.60704247e-02  1.03265348e+00]
  HOMO = -0.625633980537725  LUMO = 5.1865135079024
  mo_energy =
[-3.26792003e+01 -1.85424051e+00 -6.25633981e-01 -6.25633981e-01
 -6.25633981e-01  5.18651351e+00  5.18651351e+00  5.18651351e+00
  5.21583967e+00  7.15601480e+01  6.49016618e+02]
E1 = -181.24319066501855  E_coul = 54.21125252922901
cycle= 6 E= -127.03193813579  delta_E= -2.84e-14  |g|= 6.07e-09  |ddm|= 1.47e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.24319066501855  E_coul = 54.21125252922901
  HOMO = -0.625633983187292  LUMO = 5.18651350386678
  mo_energy =
[-3.26792003e+01 -1.85424051e+00 -6.25633983e-01 -6.25633983e-01
 -6.25633983e-01  5.18651350e+00  5.18651350e+00  5.18651350e+00
  5.21583967e+00  7.15601480e+01  6.49016618e+02]
E1 = -181.24319067308363  E_coul = 54.21125253729408
Extra cycle  E= -127.03193813579  delta_E=    0  |g|= 1.26e-09  |ddm|= 1.81e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.13 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.675633676758032
E1 = -181.24319067308363  E_coul = 54.21125253729408
init E= -127.03193813579
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.625633982695394  LUMO = 5.1865135046396
  mo_energy =
[-3.26792003e+01 -1.85424051e+00 -6.25633983e-01 -6.25633983e-01
 -6.25633983e-01  5.18651350e+00  5.18651350e+00  5.18651350e+00
  5.21583967e+00  7.15601480e+01  6.49016618e+02]
E1 = -181.24319067111244  E_coul = 54.211252535322785
cycle= 1 E= -127.03193813579  delta_E= -1.14e-13  |g|= 2.54e-10  |ddm|= 4.99e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.24319067111244  E_coul = 54.211252535322785
  HOMO = -0.6256339828245  LUMO = 5.18651350443793
  mo_energy =
[-3.26792003e+01 -1.85424051e+00 -6.25633983e-01 -6.25633983e-01
 -6.25633983e-01  5.18651350e+00  5.18651350e+00  5.18651350e+00
  5.21583967e+00  7.15601480e+01  6.49016618e+02]
E1 = -181.24319067156281  E_coul = 54.2112525357733
Extra cycle  E= -127.03193813579  delta_E= 1.42e-13  |g|= 6.03e-11  |ddm|= 6.96e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.78370539 453.90245395  71.1504291   16.65906393   3.00610244
   5.17892089   0.87735799]
grad_E = [ 6.00625849e-02 -7.74191086e-05 -4.45588948e-03  7.65489128e-03
 -1.50481825e-02 -9.47181290e-03 -2.81452648e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.806714332439       1
[INPUT] 0    0    [1    /1   ]  453.868642828        1
[INPUT] 0    0    [1    /1   ]  72.3237424352        1
[INPUT] 0    0    [1    /1   ]  17.1243785506        1
[INPUT] 0    0    [1    /1   ]  3.32082205161        1
[INPUT] 1    0    [1    /1   ]  5.10539792551        1
[INPUT] 1    0    [1    /1   ]  0.869992536596       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.8067143324391811, 1.0]], [0, [453.86864282817703, 1.0]], [0, [72.3237424352189, 1.0]], [0, [17.124378550628084, 1.0]], [0, [3.3208220516055866, 1.0]], [1, [5.105397925506227, 1.0]], [1, [0.8699925365958319, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.80671433]
bas 1, expnt(s) = [453.86864283]
bas 2, expnt(s) = [72.32374244]
bas 3, expnt(s) = [17.12437855]
bas 4, expnt(s) = [3.32082205]
bas 5, expnt(s) = [5.10539793]
bas 6, expnt(s) = [0.86999254]
CPU time:        80.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.80671433
   2.15057629 453.86864283 248.43493044  72.32374244  62.65787939
  17.12437855  21.2679749    3.32082205   6.21511584   5.10539793
  22.38831401   0.86999254   2.4512003 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.853935450062616
cond(S) = 23.53931994187518
E1 = -181.1854711795212  E_coul = 54.38348469522842
init E= -126.801986484293
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645685665205014  LUMO = 5.10917799132055
  mo_energy =
[-3.25253148e+01 -1.86679446e+00 -6.45685665e-01 -6.45685665e-01
 -6.45685665e-01  5.10917799e+00  5.10917799e+00  5.10917799e+00
  5.84841181e+00  7.50913513e+01  6.55689377e+02]
E1 = -181.03342447376315  E_coul = 53.99923394350201
cycle= 1 E= -127.034190530261  delta_E= -0.232  |g|= 0.137  |ddm|= 0.292
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.150753
diis-c [-0.0227265  1.       ]
  HOMO = -0.638794034403913  LUMO = 5.09385608460076
  mo_energy =
[-3.27379619e+01 -1.86364539e+00 -6.38794034e-01 -6.38794034e-01
 -6.38794034e-01  5.09385608e+00  5.09385608e+00  5.09385608e+00
  5.82349564e+00  7.48930077e+01  6.55406204e+02]
E1 = -181.2359652383812  E_coul = 54.200960988216764
cycle= 2 E= -127.035004250164  delta_E= -0.000814  |g|= 0.0255  |ddm|= 0.0405
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0323006
diis-c [-2.82344664e-04  1.55501404e-01  8.44498596e-01]
  HOMO = -0.62787276891327  LUMO = 5.11085422091506
  mo_energy =
[-3.26964081e+01 -1.85271442e+00 -6.27872769e-01 -6.27872769e-01
 -6.27872769e-01  5.11085422e+00  5.11085422e+00  5.11085422e+00
  5.83909779e+00  7.49327882e+01  6.55456495e+02]
E1 = -181.1964855382182  E_coul = 54.16143875215693
cycle= 3 E= -127.035046786061  delta_E= -4.25e-05  |g|= 0.0017  |ddm|= 0.00621
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00156192
diis-c [-5.99892179e-07 -1.07739623e-02 -9.93201110e-03  1.02070597e+00]
  HOMO = -0.628283198589089  LUMO = 5.11024164731974
  mo_energy =
[-3.26978625e+01 -1.85341372e+00 -6.28283199e-01 -6.28283199e-01
 -6.28283199e-01  5.11024165e+00  5.11024165e+00  5.11024165e+00
  5.83815065e+00  7.49314040e+01  6.55455496e+02]
E1 = -181.1981406105489  E_coul = 54.16309365399828
cycle= 4 E= -127.035046956551  delta_E= -1.7e-07  |g|= 0.000101  |ddm|= 0.000641
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000111666
diis-c [-7.50030211e-11  4.14817479e-04 -3.68715524e-03 -9.51911626e-02
  1.09846350e+00]
  HOMO = -0.628263347396489  LUMO = 5.11027200681607
  mo_energy =
[-3.26977948e+01 -1.85341680e+00 -6.28263347e-01 -6.28263347e-01
 -6.28263347e-01  5.11027201e+00  5.11027201e+00  5.11027201e+00
  5.83814801e+00  7.49314665e+01  6.55455606e+02]
E1 = -181.1980914482108  E_coul = 54.1630444908228
cycle= 5 E= -127.035046957388  delta_E= -8.37e-10  |g|= 4.56e-07  |ddm|= 4.34e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.1980914482108  E_coul = 54.1630444908228
  HOMO = -0.62826328703102  LUMO = 5.11027208272813
  mo_energy =
[-3.26977947e+01 -1.85341669e+00 -6.28263287e-01 -6.28263287e-01
 -6.28263287e-01  5.11027208e+00  5.11027208e+00  5.11027208e+00
  5.83814818e+00  7.49314666e+01  6.55455606e+02]
E1 = -181.19809127716314  E_coul = 54.163044319775125
Extra cycle  E= -127.035046957388  delta_E= -2.84e-14  |g|= 3.81e-08  |ddm|= 1.16e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.80671433 453.86864283  72.32374244  17.12437855   3.32082205
   5.10539793   0.86999254]
E = -127.03504695738802
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.806714332439       1
[INPUT] 0    0    [1    /1   ]  453.868642828        1
[INPUT] 0    0    [1    /1   ]  72.3237424352        1
[INPUT] 0    0    [1    /1   ]  17.1243785506        1
[INPUT] 0    0    [1    /1   ]  3.32082205161        1
[INPUT] 1    0    [1    /1   ]  5.10539792551        1
[INPUT] 1    0    [1    /1   ]  0.869992536596       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.8067143324391811, 1.0]], [0, [453.86864282817703, 1.0]], [0, [72.3237424352189, 1.0]], [0, [17.124378550628084, 1.0]], [0, [3.3208220516055866, 1.0]], [1, [5.105397925506227, 1.0]], [1, [0.8699925365958319, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.80671433]
bas 1, expnt(s) = [453.86864283]
bas 2, expnt(s) = [72.32374244]
bas 3, expnt(s) = [17.12437855]
bas 4, expnt(s) = [3.32082205]
bas 5, expnt(s) = [5.10539793]
bas 6, expnt(s) = [0.86999254]
CPU time:        80.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.80671433
   2.15057629 453.86864283 248.43493044  72.32374244  62.65787939
  17.12437855  21.2679749    3.32082205   6.21511584   5.10539793
  22.38831401   0.86999254   2.4512003 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.853935450062616
cond(S) = 23.53931994187518
E1 = -181.1854711795212  E_coul = 54.38348469522842
init E= -126.801986484293
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645685665205014  LUMO = 5.10917799132055
  mo_energy =
[-3.25253148e+01 -1.86679446e+00 -6.45685665e-01 -6.45685665e-01
 -6.45685665e-01  5.10917799e+00  5.10917799e+00  5.10917799e+00
  5.84841181e+00  7.50913513e+01  6.55689377e+02]
E1 = -181.03342447376315  E_coul = 53.99923394350201
cycle= 1 E= -127.034190530261  delta_E= -0.232  |g|= 0.137  |ddm|= 0.292
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.150753
diis-c [-0.0227265  1.       ]
  HOMO = -0.638794034403913  LUMO = 5.09385608460076
  mo_energy =
[-3.27379619e+01 -1.86364539e+00 -6.38794034e-01 -6.38794034e-01
 -6.38794034e-01  5.09385608e+00  5.09385608e+00  5.09385608e+00
  5.82349564e+00  7.48930077e+01  6.55406204e+02]
E1 = -181.2359652383812  E_coul = 54.200960988216764
cycle= 2 E= -127.035004250164  delta_E= -0.000814  |g|= 0.0255  |ddm|= 0.0405
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0323006
diis-c [-2.82344664e-04  1.55501404e-01  8.44498596e-01]
  HOMO = -0.62787276891327  LUMO = 5.11085422091506
  mo_energy =
[-3.26964081e+01 -1.85271442e+00 -6.27872769e-01 -6.27872769e-01
 -6.27872769e-01  5.11085422e+00  5.11085422e+00  5.11085422e+00
  5.83909779e+00  7.49327882e+01  6.55456495e+02]
E1 = -181.1964855382182  E_coul = 54.16143875215693
cycle= 3 E= -127.035046786061  delta_E= -4.25e-05  |g|= 0.0017  |ddm|= 0.00621
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00156192
diis-c [-5.99892179e-07 -1.07739623e-02 -9.93201110e-03  1.02070597e+00]
  HOMO = -0.628283198589089  LUMO = 5.11024164731974
  mo_energy =
[-3.26978625e+01 -1.85341372e+00 -6.28283199e-01 -6.28283199e-01
 -6.28283199e-01  5.11024165e+00  5.11024165e+00  5.11024165e+00
  5.83815065e+00  7.49314040e+01  6.55455496e+02]
E1 = -181.1981406105489  E_coul = 54.16309365399828
cycle= 4 E= -127.035046956551  delta_E= -1.7e-07  |g|= 0.000101  |ddm|= 0.000641
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000111666
diis-c [-7.50030211e-11  4.14817479e-04 -3.68715524e-03 -9.51911626e-02
  1.09846350e+00]
  HOMO = -0.628263347396489  LUMO = 5.11027200681607
  mo_energy =
[-3.26977948e+01 -1.85341680e+00 -6.28263347e-01 -6.28263347e-01
 -6.28263347e-01  5.11027201e+00  5.11027201e+00  5.11027201e+00
  5.83814801e+00  7.49314665e+01  6.55455606e+02]
E1 = -181.1980914482108  E_coul = 54.1630444908228
cycle= 5 E= -127.035046957388  delta_E= -8.37e-10  |g|= 4.56e-07  |ddm|= 4.34e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.1980914482108  E_coul = 54.1630444908228
  HOMO = -0.62826328703102  LUMO = 5.11027208272813
  mo_energy =
[-3.26977947e+01 -1.85341669e+00 -6.28263287e-01 -6.28263287e-01
 -6.28263287e-01  5.11027208e+00  5.11027208e+00  5.11027208e+00
  5.83814818e+00  7.49314666e+01  6.55455606e+02]
E1 = -181.19809127716314  E_coul = 54.163044319775125
Extra cycle  E= -127.035046957388  delta_E= -2.84e-14  |g|= 3.81e-08  |ddm|= 1.16e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.53931994187518
E1 = -181.19809127716314  E_coul = 54.163044319775125
init E= -127.035046957388
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.628263298530552  LUMO = 5.11027206406189
  mo_energy =
[-3.26977947e+01 -1.85341670e+00 -6.28263299e-01 -6.28263299e-01
 -6.28263299e-01  5.11027206e+00  5.11027206e+00  5.11027206e+00
  5.83814817e+00  7.49314665e+01  6.55455605e+02]
E1 = -181.19809131685662  E_coul = 54.16304435946854
cycle= 1 E= -127.035046957388  delta_E= -5.68e-14  |g|= 7.06e-09  |ddm|= 1.19e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.19809131685662  E_coul = 54.16304435946854
  HOMO = -0.628263296106843  LUMO = 5.11027206777653
  mo_energy =
[-3.26977947e+01 -1.85341669e+00 -6.28263296e-01 -6.28263296e-01
 -6.28263296e-01  5.11027207e+00  5.11027207e+00  5.11027207e+00
  5.83814817e+00  7.49314665e+01  6.55455605e+02]
E1 = -181.19809130738665  E_coul = 54.163044349998785
Extra cycle  E= -127.035046957388  delta_E= 2.13e-13  |g|= 1.25e-09  |ddm|= 2.69e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.80671433 453.86864283  72.32374244  17.12437855   3.32082205
   5.10539793   0.86999254]
grad_E = [ 0.04956216 -0.00016111 -0.00426433  0.01029218 -0.0149415  -0.01935054
 -0.01794349]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.842330895131       1
[INPUT] 0    0    [1    /1   ]  453.825028909        1
[INPUT] 0    0    [1    /1   ]  73.8438317216        1
[INPUT] 0    0    [1    /1   ]  17.8637514881        1
[INPUT] 0    0    [1    /1   ]  3.90363887529        1
[INPUT] 1    0    [1    /1   ]  5.07467286678        1
[INPUT] 1    0    [1    /1   ]  0.867982279868       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.8423308951310832, 1.0]], [0, [453.8250289090654, 1.0]], [0, [73.84383172158847, 1.0]], [0, [17.863751488058277, 1.0]], [0, [3.903638875286625, 1.0]], [1, [5.0746728667849945, 1.0]], [1, [0.8679822798681082, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.8423309]
bas 1, expnt(s) = [453.82502891]
bas 2, expnt(s) = [73.84383172]
bas 3, expnt(s) = [17.86375149]
bas 4, expnt(s) = [3.90363888]
bas 5, expnt(s) = [5.07467287]
bas 6, expnt(s) = [0.86798228]
CPU time:        83.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.8423309
   2.22140156 453.82502891 248.41702545  73.84383172  63.64300718
  17.86375149  21.95303276   3.90363888   7.01644702   5.07467287
  22.22002056   0.86798228   2.44412248]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851975726239543
cond(S) = 25.605817826019955
E1 = -181.18338750144187  E_coul = 54.37988457277547
init E= -126.803502928666
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645255861788731  LUMO = 5.0825739658672
  mo_energy =
[-3.25383123e+01 -1.85916656e+00 -6.45255862e-01 -6.45255862e-01
 -6.45255862e-01  5.08257397e+00  5.08257397e+00  5.08257397e+00
  7.03318060e+00  8.05679238e+01  6.65140953e+02]
E1 = -181.04322460131368  E_coul = 54.004665594677945
cycle= 1 E= -127.038559006636  delta_E= -0.235  |g|= 0.136  |ddm|= 0.297
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.151039
diis-c [-0.02281288  1.        ]
  HOMO = -0.63716471882697  LUMO = 5.06874457712544
  mo_energy =
[-3.27503841e+01 -1.85555383e+00 -6.37164719e-01 -6.37164719e-01
 -6.37164719e-01  5.06874458e+00  5.06874458e+00  5.06874458e+00
  6.99568592e+00  8.03675613e+01  6.64857905e+02]
E1 = -181.2387516869473  E_coul = 54.19941992941496
cycle= 2 E= -127.039331757532  delta_E= -0.000773  |g|= 0.0245  |ddm|= 0.037
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0309778
diis-c [-2.48578551e-04  1.50754711e-01  8.49245289e-01]
  HOMO = -0.626666932837446  LUMO = 5.08507474891178
  mo_energy =
[-3.27098600e+01 -1.84480721e+00 -6.26666933e-01 -6.26666933e-01
 -6.26666933e-01  5.08507475e+00  5.08507475e+00  5.08507475e+00
  7.01281842e+00  8.04066862e+01  6.64906979e+02]
E1 = -181.20105951686554  E_coul = 54.161688919976235
cycle= 3 E= -127.039370596889  delta_E= -3.88e-05  |g|= 0.00156  |ddm|= 0.00593
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00148903
diis-c [-4.02892793e-07 -9.42977439e-03 -2.49229425e-03  1.01192207e+00]
  HOMO = -0.627104006693229  LUMO = 5.08442957069816
  mo_energy =
[-3.27113558e+01 -1.84547914e+00 -6.27104007e-01 -6.27104007e-01
 -6.27104007e-01  5.08442957e+00  5.08442957e+00  5.08442957e+00
  7.01181062e+00  8.04052669e+01  6.64905862e+02]
E1 = -181.2026247049176  E_coul = 54.16325398150101
cycle= 4 E= -127.039370723417  delta_E= -1.27e-07  |g|= 7.54e-05  |ddm|= 0.000497
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.11573e-05
diis-c [-6.20551774e-11  3.75031828e-04 -3.22898222e-03 -9.06533670e-02
  1.09350732e+00]
  HOMO = -0.627092844045241  LUMO = 5.08444729376334
  mo_energy =
[-3.27113126e+01 -1.84548444e+00 -6.27092844e-01 -6.27092844e-01
 -6.27092844e-01  5.08444729e+00  5.08444729e+00  5.08444729e+00
  7.01180486e+00  8.04053074e+01  6.64905938e+02]
E1 = -181.20259140913947  E_coul = 54.16322068530608
cycle= 5 E= -127.039370723833  delta_E= -4.17e-10  |g|= 4.29e-07  |ddm|= 2.94e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.20259140913947  E_coul = 54.16322068530608
  HOMO = -0.62709277073404  LUMO = 5.08444739019818
  mo_energy =
[-3.27113124e+01 -1.84548432e+00 -6.27092771e-01 -6.27092771e-01
 -6.27092771e-01  5.08444739e+00  5.08444739e+00  5.08444739e+00
  7.01180505e+00  8.04053075e+01  6.64905938e+02]
E1 = -181.2025912139794  E_coul = 54.163220490145996
Extra cycle  E= -127.039370723833  delta_E=    0  |g|= 3.47e-08  |ddm|= 9.75e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [  0.8423309  453.82502891  73.84383172  17.86375149   3.90363888
   5.07467287   0.86798228]
E = -127.0393707238334
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.842330895131       1
[INPUT] 0    0    [1    /1   ]  453.825028909        1
[INPUT] 0    0    [1    /1   ]  73.8438317216        1
[INPUT] 0    0    [1    /1   ]  17.8637514881        1
[INPUT] 0    0    [1    /1   ]  3.90363887529        1
[INPUT] 1    0    [1    /1   ]  5.07467286678        1
[INPUT] 1    0    [1    /1   ]  0.867982279868       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.8423308951310832, 1.0]], [0, [453.8250289090654, 1.0]], [0, [73.84383172158847, 1.0]], [0, [17.863751488058277, 1.0]], [0, [3.903638875286625, 1.0]], [1, [5.0746728667849945, 1.0]], [1, [0.8679822798681082, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.8423309]
bas 1, expnt(s) = [453.82502891]
bas 2, expnt(s) = [73.84383172]
bas 3, expnt(s) = [17.86375149]
bas 4, expnt(s) = [3.90363888]
bas 5, expnt(s) = [5.07467287]
bas 6, expnt(s) = [0.86798228]
CPU time:        83.86
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.8423309
   2.22140156 453.82502891 248.41702545  73.84383172  63.64300718
  17.86375149  21.95303276   3.90363888   7.01644702   5.07467287
  22.22002056   0.86798228   2.44412248]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.851975726239543
cond(S) = 25.605817826019955
E1 = -181.18338750144187  E_coul = 54.37988457277547
init E= -126.803502928666
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.645255861788731  LUMO = 5.0825739658672
  mo_energy =
[-3.25383123e+01 -1.85916656e+00 -6.45255862e-01 -6.45255862e-01
 -6.45255862e-01  5.08257397e+00  5.08257397e+00  5.08257397e+00
  7.03318060e+00  8.05679238e+01  6.65140953e+02]
E1 = -181.04322460131368  E_coul = 54.004665594677945
cycle= 1 E= -127.038559006636  delta_E= -0.235  |g|= 0.136  |ddm|= 0.297
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.151039
diis-c [-0.02281288  1.        ]
  HOMO = -0.63716471882697  LUMO = 5.06874457712544
  mo_energy =
[-3.27503841e+01 -1.85555383e+00 -6.37164719e-01 -6.37164719e-01
 -6.37164719e-01  5.06874458e+00  5.06874458e+00  5.06874458e+00
  6.99568592e+00  8.03675613e+01  6.64857905e+02]
E1 = -181.2387516869473  E_coul = 54.19941992941496
cycle= 2 E= -127.039331757532  delta_E= -0.000773  |g|= 0.0245  |ddm|= 0.037
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0309778
diis-c [-2.48578551e-04  1.50754711e-01  8.49245289e-01]
  HOMO = -0.626666932837446  LUMO = 5.08507474891178
  mo_energy =
[-3.27098600e+01 -1.84480721e+00 -6.26666933e-01 -6.26666933e-01
 -6.26666933e-01  5.08507475e+00  5.08507475e+00  5.08507475e+00
  7.01281842e+00  8.04066862e+01  6.64906979e+02]
E1 = -181.20105951686554  E_coul = 54.161688919976235
cycle= 3 E= -127.039370596889  delta_E= -3.88e-05  |g|= 0.00156  |ddm|= 0.00593
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00148903
diis-c [-4.02892793e-07 -9.42977439e-03 -2.49229425e-03  1.01192207e+00]
  HOMO = -0.627104006693229  LUMO = 5.08442957069816
  mo_energy =
[-3.27113558e+01 -1.84547914e+00 -6.27104007e-01 -6.27104007e-01
 -6.27104007e-01  5.08442957e+00  5.08442957e+00  5.08442957e+00
  7.01181062e+00  8.04052669e+01  6.64905862e+02]
E1 = -181.2026247049176  E_coul = 54.16325398150101
cycle= 4 E= -127.039370723417  delta_E= -1.27e-07  |g|= 7.54e-05  |ddm|= 0.000497
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.11573e-05
diis-c [-6.20551774e-11  3.75031828e-04 -3.22898222e-03 -9.06533670e-02
  1.09350732e+00]
  HOMO = -0.627092844045241  LUMO = 5.08444729376334
  mo_energy =
[-3.27113126e+01 -1.84548444e+00 -6.27092844e-01 -6.27092844e-01
 -6.27092844e-01  5.08444729e+00  5.08444729e+00  5.08444729e+00
  7.01180486e+00  8.04053074e+01  6.64905938e+02]
E1 = -181.20259140913947  E_coul = 54.16322068530608
cycle= 5 E= -127.039370723833  delta_E= -4.17e-10  |g|= 4.29e-07  |ddm|= 2.94e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.20259140913947  E_coul = 54.16322068530608
  HOMO = -0.62709277073404  LUMO = 5.08444739019818
  mo_energy =
[-3.27113124e+01 -1.84548432e+00 -6.27092771e-01 -6.27092771e-01
 -6.27092771e-01  5.08444739e+00  5.08444739e+00  5.08444739e+00
  7.01180505e+00  8.04053075e+01  6.64905938e+02]
E1 = -181.2025912139794  E_coul = 54.163220490145996
Extra cycle  E= -127.039370723833  delta_E=    0  |g|= 3.47e-08  |ddm|= 9.75e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 25.605817826019955
E1 = -181.2025912139794  E_coul = 54.163220490145996
init E= -127.039370723833
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.62709278325425  LUMO = 5.08444736983812
  mo_energy =
[-3.27113124e+01 -1.84548433e+00 -6.27092783e-01 -6.27092783e-01
 -6.27092783e-01  5.08444737e+00  5.08444737e+00  5.08444737e+00
  7.01180504e+00  8.04053074e+01  6.64905938e+02]
E1 = -181.20259126042572  E_coul = 54.16322053659244
cycle= 1 E= -127.039370723833  delta_E= 1.14e-13  |g|= 7.17e-09  |ddm|= 9.78e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.20259126042572  E_coul = 54.16322053659244
  HOMO = -0.627092780351026  LUMO = 5.08444737426199
  mo_energy =
[-3.27113124e+01 -1.84548433e+00 -6.27092780e-01 -6.27092780e-01
 -6.27092780e-01  5.08444737e+00  5.08444737e+00  5.08444737e+00
  7.01180504e+00  8.04053075e+01  6.64905938e+02]
E1 = -181.20259124996016  E_coul = 54.16322052612681
Extra cycle  E= -127.039370723833  delta_E= -7.11e-14  |g|= 1.33e-09  |ddm|= 2.34e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.8423309  453.82502891  73.84383172  17.86375149   3.90363888
   5.07467287   0.86798228]
grad_E = [ 0.04776942 -0.00024692 -0.00434225  0.0124147  -0.01507524 -0.02532804
 -0.00317634]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.928231536548       1
[INPUT] 0    0    [1    /1   ]  453.711336343        1
[INPUT] 0    0    [1    /1   ]  77.8271590179        1
[INPUT] 0    0    [1    /1   ]  19.9304007792        1
[INPUT] 0    0    [1    /1   ]  5.60614497451        1
[INPUT] 1    0    [1    /1   ]  5.08115374646        1
[INPUT] 1    0    [1    /1   ]  0.871058492897       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9282315365483531, 1.0]], [0, [453.71133634324013, 1.0]], [0, [77.82715901789281, 1.0]], [0, [19.930400779179557, 1.0]], [0, [5.606144974511091, 1.0]], [1, [5.081153746464901, 1.0]], [1, [0.8710584928966841, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92823154]
bas 1, expnt(s) = [453.71133634]
bas 2, expnt(s) = [77.82715902]
bas 3, expnt(s) = [19.93040078]
bas 4, expnt(s) = [5.60614497]
bas 5, expnt(s) = [5.08115375]
bas 6, expnt(s) = [0.87105849]
CPU time:        86.57
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92823154
   2.38922617 453.71133634 248.37034878  77.82715902  66.20082585
  19.93040078  23.83153675   5.60614497   9.20477692   5.08115375
  22.25549779   0.87105849   2.45495503]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842427134653592
cond(S) = 33.582977146467655
E1 = -181.2296520119506  E_coul = 54.41059784450803
init E= -126.819054167443
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.641917300147249  LUMO = 5.1007468938792
  mo_energy =
[-3.25565535e+01 -1.84076310e+00 -6.41917300e-01 -6.41917300e-01
 -6.41917300e-01  5.10074689e+00  5.10074689e+00  5.10074689e+00
  1.06744703e+01  9.58572226e+01  6.91058961e+02]
E1 = -181.21961819237433  E_coul = 54.170425994478904
cycle= 1 E= -127.049192197895  delta_E= -0.23  |g|= 0.123  |ddm|= 0.291
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1342
diis-c [-0.01800959  1.        ]
  HOMO = -0.621312667320171  LUMO = 5.10250877178338
  mo_energy =
[-3.27468370e+01 -1.82894680e+00 -6.21312667e-01 -6.21312667e-01
 -6.21312667e-01  5.10250877e+00  5.10250877e+00  5.10250877e+00
  1.06207603e+01  9.56728535e+01  6.90794330e+02]
E1 = -181.37452091788757  E_coul = 54.324775591198666
cycle= 2 E= -127.049745326689  delta_E= -0.000553  |g|= 0.019  |ddm|= 0.0288
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0242341
diis-c [-1.77421403e-04  1.31648559e-01  8.68351441e-01]
  HOMO = -0.612989494238548  LUMO = 5.11559939688584
  mo_energy =
[-3.27135911e+01 -1.82010393e+00 -6.12989494e-01 -6.12989494e-01
 -6.12989494e-01  5.11559940e+00  5.11559940e+00  5.11559940e+00
  1.06381061e+01  9.57056789e+01  6.90835193e+02]
E1 = -181.3457644693164  E_coul = 54.29599612634927
cycle= 3 E= -127.049768342967  delta_E= -2.3e-05  |g|= 0.00142  |ddm|= 0.00451
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00138779
diis-c [-1.70365725e-07 -8.72287776e-03  7.95907352e-03  1.00076380e+00]
  HOMO = -0.613449807613274  LUMO = 5.11491985687887
  mo_energy =
[-3.27151239e+01 -1.82075033e+00 -6.13449808e-01 -6.13449808e-01
 -6.13449808e-01  5.11491986e+00  5.11491986e+00  5.11491986e+00
  1.06369400e+01  9.57042311e+01  6.90833971e+02]
E1 = -181.3471521720042  E_coul = 54.297383745411665
cycle= 4 E= -127.049768426593  delta_E= -8.36e-08  |g|= 3.78e-05  |ddm|= 0.000339
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.96453e-05
diis-c [-3.93641100e-11  3.41451144e-04 -2.50874904e-03 -6.86654255e-02
  1.07083272e+00]
  HOMO = -0.613446717033884  LUMO = 5.11492542788232
  mo_energy =
[-3.27151062e+01 -1.82075442e+00 -6.13446717e-01 -6.13446717e-01
 -6.13446717e-01  5.11492543e+00  5.11492543e+00  5.11492543e+00
  1.06369351e+01  9.57042481e+01  6.90834003e+02]
E1 = -181.34713618516466  E_coul = 54.29736775849421
cycle= 5 E= -127.04976842667  delta_E= -7.79e-11  |g|= 3.81e-07  |ddm|= 1.15e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.34713618516466  E_coul = 54.29736775849421
  HOMO = -0.613446660499454  LUMO = 5.11492549944289
  mo_energy =
[-3.27151060e+01 -1.82075431e+00 -6.13446660e-01 -6.13446660e-01
 -6.13446660e-01  5.11492550e+00  5.11492550e+00  5.11492550e+00
  1.06369352e+01  9.57042481e+01  6.90834003e+02]
E1 = -181.3471360839033  E_coul = 54.29736765723281
Extra cycle  E= -127.04976842667  delta_E= -4.26e-14  |g|= 2.45e-08  |ddm|= 7.45e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.92823154 453.71133634  77.82715902  19.93040078   5.60614497
   5.08115375   0.87105849]
E = -127.0497684266705
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:32:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.928231536548       1
[INPUT] 0    0    [1    /1   ]  453.711336343        1
[INPUT] 0    0    [1    /1   ]  77.8271590179        1
[INPUT] 0    0    [1    /1   ]  19.9304007792        1
[INPUT] 0    0    [1    /1   ]  5.60614497451        1
[INPUT] 1    0    [1    /1   ]  5.08115374646        1
[INPUT] 1    0    [1    /1   ]  0.871058492897       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9282315365483531, 1.0]], [0, [453.71133634324013, 1.0]], [0, [77.82715901789281, 1.0]], [0, [19.930400779179557, 1.0]], [0, [5.606144974511091, 1.0]], [1, [5.081153746464901, 1.0]], [1, [0.8710584928966841, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92823154]
bas 1, expnt(s) = [453.71133634]
bas 2, expnt(s) = [77.82715902]
bas 3, expnt(s) = [19.93040078]
bas 4, expnt(s) = [5.60614497]
bas 5, expnt(s) = [5.08115375]
bas 6, expnt(s) = [0.87105849]
CPU time:        87.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92823154
   2.38922617 453.71133634 248.37034878  77.82715902  66.20082585
  19.93040078  23.83153675   5.60614497   9.20477692   5.08115375
  22.25549779   0.87105849   2.45495503]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.842427134653592
cond(S) = 33.582977146467655
E1 = -181.2296520119506  E_coul = 54.41059784450803
init E= -126.819054167443
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.641917300147249  LUMO = 5.1007468938792
  mo_energy =
[-3.25565535e+01 -1.84076310e+00 -6.41917300e-01 -6.41917300e-01
 -6.41917300e-01  5.10074689e+00  5.10074689e+00  5.10074689e+00
  1.06744703e+01  9.58572226e+01  6.91058961e+02]
E1 = -181.21961819237433  E_coul = 54.170425994478904
cycle= 1 E= -127.049192197895  delta_E= -0.23  |g|= 0.123  |ddm|= 0.291
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1342
diis-c [-0.01800959  1.        ]
  HOMO = -0.621312667320171  LUMO = 5.10250877178338
  mo_energy =
[-3.27468370e+01 -1.82894680e+00 -6.21312667e-01 -6.21312667e-01
 -6.21312667e-01  5.10250877e+00  5.10250877e+00  5.10250877e+00
  1.06207603e+01  9.56728535e+01  6.90794330e+02]
E1 = -181.37452091788757  E_coul = 54.324775591198666
cycle= 2 E= -127.049745326689  delta_E= -0.000553  |g|= 0.019  |ddm|= 0.0288
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0242341
diis-c [-1.77421403e-04  1.31648559e-01  8.68351441e-01]
  HOMO = -0.612989494238548  LUMO = 5.11559939688584
  mo_energy =
[-3.27135911e+01 -1.82010393e+00 -6.12989494e-01 -6.12989494e-01
 -6.12989494e-01  5.11559940e+00  5.11559940e+00  5.11559940e+00
  1.06381061e+01  9.57056789e+01  6.90835193e+02]
E1 = -181.3457644693164  E_coul = 54.29599612634927
cycle= 3 E= -127.049768342967  delta_E= -2.3e-05  |g|= 0.00142  |ddm|= 0.00451
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00138779
diis-c [-1.70365725e-07 -8.72287776e-03  7.95907352e-03  1.00076380e+00]
  HOMO = -0.613449807613274  LUMO = 5.11491985687887
  mo_energy =
[-3.27151239e+01 -1.82075033e+00 -6.13449808e-01 -6.13449808e-01
 -6.13449808e-01  5.11491986e+00  5.11491986e+00  5.11491986e+00
  1.06369400e+01  9.57042311e+01  6.90833971e+02]
E1 = -181.3471521720042  E_coul = 54.297383745411665
cycle= 4 E= -127.049768426593  delta_E= -8.36e-08  |g|= 3.78e-05  |ddm|= 0.000339
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.96453e-05
diis-c [-3.93641100e-11  3.41451144e-04 -2.50874904e-03 -6.86654255e-02
  1.07083272e+00]
  HOMO = -0.613446717033884  LUMO = 5.11492542788232
  mo_energy =
[-3.27151062e+01 -1.82075442e+00 -6.13446717e-01 -6.13446717e-01
 -6.13446717e-01  5.11492543e+00  5.11492543e+00  5.11492543e+00
  1.06369351e+01  9.57042481e+01  6.90834003e+02]
E1 = -181.34713618516466  E_coul = 54.29736775849421
cycle= 5 E= -127.04976842667  delta_E= -7.79e-11  |g|= 3.81e-07  |ddm|= 1.15e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.34713618516466  E_coul = 54.29736775849421
  HOMO = -0.613446660499454  LUMO = 5.11492549944289
  mo_energy =
[-3.27151060e+01 -1.82075431e+00 -6.13446660e-01 -6.13446660e-01
 -6.13446660e-01  5.11492550e+00  5.11492550e+00  5.11492550e+00
  1.06369352e+01  9.57042481e+01  6.90834003e+02]
E1 = -181.3471360839033  E_coul = 54.29736765723281
Extra cycle  E= -127.04976842667  delta_E= -4.26e-14  |g|= 2.45e-08  |ddm|= 7.45e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 33.582977146467655
E1 = -181.3471360839033  E_coul = 54.29736765723281
init E= -127.04976842667
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.613446666467531  LUMO = 5.1149254890247
  mo_energy =
[-3.27151061e+01 -1.82075431e+00 -6.13446666e-01 -6.13446666e-01
 -6.13446666e-01  5.11492549e+00  5.11492549e+00  5.11492549e+00
  1.06369352e+01  9.57042481e+01  6.90834003e+02]
E1 = -181.3471361095594  E_coul = 54.29736768288886
cycle= 1 E= -127.049768426671  delta_E= -2.84e-14  |g|= 4.2e-09  |ddm|= 6.4e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.3471361095594  E_coul = 54.29736768288886
  HOMO = -0.613446664842341  LUMO = 5.11492549147514
  mo_energy =
[-3.27151061e+01 -1.82075431e+00 -6.13446665e-01 -6.13446665e-01
 -6.13446665e-01  5.11492549e+00  5.11492549e+00  5.11492549e+00
  1.06369352e+01  9.57042481e+01  6.90834003e+02]
E1 = -181.347136104478  E_coul = 54.29736767780753
Extra cycle  E= -127.04976842667  delta_E= 4.26e-14  |g|= 6.3e-10  |ddm|= 1.11e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.92823154 453.71133634  77.82715902  19.93040078   5.60614497
   5.08115375   0.87105849]
grad_E = [ 0.14420441 -0.00047053 -0.00334037  0.00767301 -0.01184319 -0.02877514
  0.03282344]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.992837895302       1
[INPUT] 0    0    [1    /1   ]  453.43942614         1
[INPUT] 0    0    [1    /1   ]  87.3844489123        1
[INPUT] 0    0    [1    /1   ]  24.5591892599        1
[INPUT] 0    0    [1    /1   ]  9.04154507129        1
[INPUT] 1    0    [1    /1   ]  5.20076797663        1
[INPUT] 1    0    [1    /1   ]  0.889032687873       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.992837895301518, 1.0]], [0, [453.439426140429, 1.0]], [0, [87.38444891229969, 1.0]], [0, [24.559189259910664, 1.0]], [0, [9.041545071290372, 1.0]], [1, [5.200767976633929, 1.0]], [1, [0.8890326878734053, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.9928379]
bas 1, expnt(s) = [453.43942614]
bas 2, expnt(s) = [87.38444891]
bas 3, expnt(s) = [24.55918926]
bas 4, expnt(s) = [9.04154507]
bas 5, expnt(s) = [5.20076798]
bas 6, expnt(s) = [0.88903269]
CPU time:        90.11
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.9928379
   2.51289177 453.43942614 248.25870375  87.38444891  72.20888484
  24.55918926  27.87247558   9.04154507  13.17337373   5.20076798
  22.91230285   0.88903269   2.51843969]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826648896619442
cond(S) = 53.232056962564464
E1 = -181.3014039738226  E_coul = 54.486589084120176
init E= -126.814814889702
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.636637187288803  LUMO = 5.24822738015219
  mo_energy =
[-3.25490544e+01 -1.82606661e+00 -6.36637187e-01 -6.36637187e-01
 -6.36637187e-01  5.24822738e+00  5.24822738e+00  5.24822738e+00
  1.84411041e+01  1.28307684e+02  7.49517419e+02]
E1 = -181.56065810390305  E_coul = 54.5107268810181
cycle= 1 E= -127.049931222885  delta_E= -0.235  |g|= 0.105  |ddm|= 0.278
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0955224
diis-c [-0.00912452  1.        ]
  HOMO = -0.593905977425011  LUMO = 5.27840598773611
  mo_energy =
[-3.26925089e+01 -1.79551729e+00 -5.93905977e-01 -5.93905977e-01
 -5.93905977e-01  5.27840599e+00  5.27840599e+00  5.27840599e+00
  1.83846722e+01  1.28165070e+02  7.49306085e+02]
E1 = -181.64891993715878  E_coul = 54.59874363101217
cycle= 2 E= -127.050176306147  delta_E= -0.000245  |g|= 0.0103  |ddm|= 0.0175
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0134731
diis-c [-8.52293372e-05  9.35565664e-02  9.06443434e-01]
  HOMO = -0.589110534877833  LUMO = 5.28620643059993
  mo_energy =
[-3.26722653e+01 -1.79024185e+00 -5.89110535e-01 -5.89110535e-01
 -5.89110535e-01  5.28620643e+00  5.28620643e+00  5.28620643e+00
  1.83977057e+01  1.28186090e+02  7.49332105e+02]
E1 = -181.6333260703553  E_coul = 54.58314297142915
cycle= 3 E= -127.050183098926  delta_E= -6.79e-06  |g|= 0.0011  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00109545
diis-c [-2.13676451e-08 -7.63179756e-03  3.16456506e-02  9.75986147e-01]
  HOMO = -0.589521617690804  LUMO = 5.28558429425332
  mo_energy =
[-3.26736542e+01 -1.79077778e+00 -5.89521618e-01 -5.89521618e-01
 -5.89521618e-01  5.28558429e+00  5.28558429e+00  5.28558429e+00
  1.83965337e+01  1.28184789e+02  7.49330937e+02]
E1 = -181.63441726666278  E_coul = 54.58423412427161
cycle= 4 E= -127.050183142391  delta_E= -4.35e-08  |g|= 9.98e-06  |ddm|= 0.000205
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.18613e-05
diis-c [-2.17399895e-11  3.69372515e-04 -2.25691950e-03 -4.83064810e-02
  1.05019403e+00]
  HOMO = -0.58951925168456  LUMO = 5.28558804074934
  mo_energy =
[-3.26736441e+01 -1.79077621e+00 -5.89519252e-01 -5.89519252e-01
 -5.89519252e-01  5.28558804e+00  5.28558804e+00  5.28558804e+00
  1.83965379e+01  1.28184798e+02  7.49330947e+02]
E1 = -181.63440855950458  E_coul = 54.58422541710923
cycle= 5 E= -127.050183142395  delta_E= -4.18e-12  |g|= 1.95e-07  |ddm|= 2.03e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.63440855950458  E_coul = 54.58422541710923
  HOMO = -0.589519348155105  LUMO = 5.28558789091581
  mo_energy =
[-3.26736445e+01 -1.79077633e+00 -5.89519348e-01 -5.89519348e-01
 -5.89519348e-01  5.28558789e+00  5.28558789e+00  5.28558789e+00
  1.83965376e+01  1.28184798e+02  7.49330947e+02]
E1 = -181.63440884493068  E_coul = 54.58422570253519
Extra cycle  E= -127.050183142395  delta_E= -1.28e-13  |g|= 3.46e-08  |ddm|= 4.63e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.9928379  453.43942614  87.38444891  24.55918926   9.04154507
   5.20076798   0.88903269]
E = -127.05018314239548
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.960979979488       1
[INPUT] 0    0    [1    /1   ]  453.573507251        1
[INPUT] 0    0    [1    /1   ]  82.6716722949        1
[INPUT] 0    0    [1    /1   ]  22.2766963817        1
[INPUT] 0    0    [1    /1   ]  7.34752161628        1
[INPUT] 1    0    [1    /1   ]  5.14178523641        1
[INPUT] 1    0    [1    /1   ]  0.880169467574       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9609799794875605, 1.0]], [0, [453.573507251287, 1.0]], [0, [82.67167229492556, 1.0]], [0, [22.276696381722825, 1.0]], [0, [7.347521616283412, 1.0]], [1, [5.141785236414267, 1.0]], [1, [0.8801694675736853, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.96097998]
bas 1, expnt(s) = [453.57350725]
bas 2, expnt(s) = [82.67167229]
bas 3, expnt(s) = [22.27669638]
bas 4, expnt(s) = [7.34752162]
bas 5, expnt(s) = [5.14178524]
bas 6, expnt(s) = [0.88016947]
CPU time:        90.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.96097998
   2.45217115 453.57350725 248.3137589   82.67167229  69.26798692
  22.27669638  25.90616418   7.34752162  11.27510717   5.14178524
  22.58794953   0.88016947   2.48709438]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.834845359378802
cond(S) = 42.79790080832268
E1 = -181.27250249093728  E_coul = 54.44062980185958
init E= -126.831872689078
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.640010821989431  LUMO = 5.17402624757923
  mo_energy =
[-3.25608859e+01 -1.83213189e+00 -6.40010822e-01 -6.40010822e-01
 -6.40010822e-01  5.17402625e+00  5.17402625e+00  5.17402625e+00
  1.44959475e+01  1.12331428e+02  7.20701152e+02]
E1 = -181.36778209768494  E_coul = 54.308561988767366
cycle= 1 E= -127.059220108918  delta_E= -0.227  |g|= 0.11  |ddm|= 0.291
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.117134
diis-c [-0.01372045  1.        ]
  HOMO = -0.609803798401495  LUMO = 5.18732927735445
  mo_energy =
[-3.27347339e+01 -1.81142004e+00 -6.09803798e-01 -6.09803798e-01
 -6.09803798e-01  5.18732928e+00  5.18732928e+00  5.18732928e+00
  1.44342393e+01  1.12159053e+02  7.20451095e+02]
E1 = -181.49345952419728  E_coul = 54.43384870133239
cycle= 2 E= -127.059610822865  delta_E= -0.000391  |g|= 0.0151  |ddm|= 0.0226
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0192395
diis-c [-1.10710659e-04  1.21319316e-01  8.78680684e-01]
  HOMO = -0.603060322768289  LUMO = 5.1980812892155
  mo_energy =
[-3.27072694e+01 -1.80404200e+00 -6.03060323e-01 -6.03060323e-01
 -6.03060323e-01  5.19808129e+00  5.19808129e+00  5.19808129e+00
  1.44507812e+01  1.12186803e+02  7.20485129e+02]
E1 = -181.47115814063295  E_coul = 54.41153315737832
cycle= 3 E= -127.059624983255  delta_E= -1.42e-05  |g|= 0.00112  |ddm|= 0.00352
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111
diis-c [-4.10099968e-08 -7.54885809e-03  1.26535770e-02  9.94895281e-01]
  HOMO = -0.60345583837024  LUMO = 5.19749272383505
  mo_energy =
[-3.27085807e+01 -1.80456765e+00 -6.03455838e-01 -6.03455838e-01
 -6.03455838e-01  5.19749272e+00  5.19749272e+00  5.19749272e+00
  1.44497137e+01  1.12185578e+02  7.20484078e+02]
E1 = -181.47225166968752  E_coul = 54.4126266401157
cycle= 4 E= -127.059625029572  delta_E= -4.63e-08  |g|= 1.69e-05  |ddm|= 0.000225
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.80362e-05
diis-c [-1.60346843e-11  3.99499670e-04 -1.88901776e-03 -6.71000129e-02
  1.06858953e+00]
  HOMO = -0.603454330163115  LUMO = 5.19749546526947
  mo_energy =
[-3.27085715e+01 -1.80456890e+00 -6.03454330e-01 -6.03454330e-01
 -6.03454330e-01  5.19749547e+00  5.19749547e+00  5.19749547e+00
  1.44497127e+01  1.12185587e+02  7.20484093e+02]
E1 = -181.47224290387493  E_coul = 54.412617874290355
cycle= 5 E= -127.059625029585  delta_E= -1.27e-11  |g|= 2.52e-07  |ddm|= 4.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.47224290387493  E_coul = 54.412617874290355
  HOMO = -0.603454356017458  LUMO = 5.19749541564157
  mo_energy =
[-3.27085716e+01 -1.80456889e+00 -6.03454356e-01 -6.03454356e-01
 -6.03454356e-01  5.19749542e+00  5.19749542e+00  5.19749542e+00
  1.44497127e+01  1.12185587e+02  7.20484093e+02]
E1 = -181.47224305904612  E_coul = 54.412618029461484
Extra cycle  E= -127.059625029585  delta_E= -7.11e-14  |g|= 2.85e-08  |ddm|= 5.18e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [  0.96097998 453.57350725  82.67167229  22.27669638   7.34752162
   5.14178524   0.88016947]
E = -127.05962502958464
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.960979979488       1
[INPUT] 0    0    [1    /1   ]  453.573507251        1
[INPUT] 0    0    [1    /1   ]  82.6716722949        1
[INPUT] 0    0    [1    /1   ]  22.2766963817        1
[INPUT] 0    0    [1    /1   ]  7.34752161628        1
[INPUT] 1    0    [1    /1   ]  5.14178523641        1
[INPUT] 1    0    [1    /1   ]  0.880169467574       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9609799794875605, 1.0]], [0, [453.573507251287, 1.0]], [0, [82.67167229492556, 1.0]], [0, [22.276696381722825, 1.0]], [0, [7.347521616283412, 1.0]], [1, [5.141785236414267, 1.0]], [1, [0.8801694675736853, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.96097998]
bas 1, expnt(s) = [453.57350725]
bas 2, expnt(s) = [82.67167229]
bas 3, expnt(s) = [22.27669638]
bas 4, expnt(s) = [7.34752162]
bas 5, expnt(s) = [5.14178524]
bas 6, expnt(s) = [0.88016947]
CPU time:        91.22
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.96097998
   2.45217115 453.57350725 248.3137589   82.67167229  69.26798692
  22.27669638  25.90616418   7.34752162  11.27510717   5.14178524
  22.58794953   0.88016947   2.48709438]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.834845359378802
cond(S) = 42.79790080832268
E1 = -181.27250249093728  E_coul = 54.44062980185958
init E= -126.831872689078
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.640010821989431  LUMO = 5.17402624757923
  mo_energy =
[-3.25608859e+01 -1.83213189e+00 -6.40010822e-01 -6.40010822e-01
 -6.40010822e-01  5.17402625e+00  5.17402625e+00  5.17402625e+00
  1.44959475e+01  1.12331428e+02  7.20701152e+02]
E1 = -181.36778209768494  E_coul = 54.308561988767366
cycle= 1 E= -127.059220108918  delta_E= -0.227  |g|= 0.11  |ddm|= 0.291
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.117134
diis-c [-0.01372045  1.        ]
  HOMO = -0.609803798401495  LUMO = 5.18732927735445
  mo_energy =
[-3.27347339e+01 -1.81142004e+00 -6.09803798e-01 -6.09803798e-01
 -6.09803798e-01  5.18732928e+00  5.18732928e+00  5.18732928e+00
  1.44342393e+01  1.12159053e+02  7.20451095e+02]
E1 = -181.49345952419728  E_coul = 54.43384870133239
cycle= 2 E= -127.059610822865  delta_E= -0.000391  |g|= 0.0151  |ddm|= 0.0226
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0192395
diis-c [-1.10710659e-04  1.21319316e-01  8.78680684e-01]
  HOMO = -0.603060322768289  LUMO = 5.1980812892155
  mo_energy =
[-3.27072694e+01 -1.80404200e+00 -6.03060323e-01 -6.03060323e-01
 -6.03060323e-01  5.19808129e+00  5.19808129e+00  5.19808129e+00
  1.44507812e+01  1.12186803e+02  7.20485129e+02]
E1 = -181.47115814063295  E_coul = 54.41153315737832
cycle= 3 E= -127.059624983255  delta_E= -1.42e-05  |g|= 0.00112  |ddm|= 0.00352
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111
diis-c [-4.10099968e-08 -7.54885809e-03  1.26535770e-02  9.94895281e-01]
  HOMO = -0.60345583837024  LUMO = 5.19749272383505
  mo_energy =
[-3.27085807e+01 -1.80456765e+00 -6.03455838e-01 -6.03455838e-01
 -6.03455838e-01  5.19749272e+00  5.19749272e+00  5.19749272e+00
  1.44497137e+01  1.12185578e+02  7.20484078e+02]
E1 = -181.47225166968752  E_coul = 54.4126266401157
cycle= 4 E= -127.059625029572  delta_E= -4.63e-08  |g|= 1.69e-05  |ddm|= 0.000225
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.80362e-05
diis-c [-1.60346843e-11  3.99499670e-04 -1.88901776e-03 -6.71000129e-02
  1.06858953e+00]
  HOMO = -0.603454330163115  LUMO = 5.19749546526947
  mo_energy =
[-3.27085715e+01 -1.80456890e+00 -6.03454330e-01 -6.03454330e-01
 -6.03454330e-01  5.19749547e+00  5.19749547e+00  5.19749547e+00
  1.44497127e+01  1.12185587e+02  7.20484093e+02]
E1 = -181.47224290387493  E_coul = 54.412617874290355
cycle= 5 E= -127.059625029585  delta_E= -1.27e-11  |g|= 2.52e-07  |ddm|= 4.3e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.47224290387493  E_coul = 54.412617874290355
  HOMO = -0.603454356017458  LUMO = 5.19749541564157
  mo_energy =
[-3.27085716e+01 -1.80456889e+00 -6.03454356e-01 -6.03454356e-01
 -6.03454356e-01  5.19749542e+00  5.19749542e+00  5.19749542e+00
  1.44497127e+01  1.12185587e+02  7.20484093e+02]
E1 = -181.47224305904612  E_coul = 54.412618029461484
Extra cycle  E= -127.059625029585  delta_E= -7.11e-14  |g|= 2.85e-08  |ddm|= 5.18e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 42.79790080832268
E1 = -181.47224305904612  E_coul = 54.412618029461484
init E= -127.059625029585
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.603454345965855  LUMO = 5.19749543060195
  mo_energy =
[-3.27085716e+01 -1.80456888e+00 -6.03454346e-01 -6.03454346e-01
 -6.03454346e-01  5.19749543e+00  5.19749543e+00  5.19749543e+00
  1.44497127e+01  1.12185587e+02  7.20484093e+02]
E1 = -181.47224303196924  E_coul = 54.4126180023847
cycle= 1 E= -127.059625029585  delta_E= 9.95e-14  |g|= 3.29e-09  |ddm|= 6.33e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.47224303196924  E_coul = 54.4126180023847
  HOMO = -0.603454347622542  LUMO = 5.19749542794706
  mo_energy =
[-3.27085716e+01 -1.80456888e+00 -6.03454348e-01 -6.03454348e-01
 -6.03454348e-01  5.19749543e+00  5.19749543e+00  5.19749543e+00
  1.44497127e+01  1.12185587e+02  7.20484093e+02]
E1 = -181.47224303758446  E_coul = 54.41261800799983
Extra cycle  E= -127.059625029585  delta_E= -8.53e-14  |g|= 7.24e-10  |ddm|= 8.84e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.96097998 453.57350725  82.67167229  22.27669638   7.34752162
   5.14178524   0.88016947]
grad_E = [ 0.17601326 -0.00074663 -0.00101965 -0.00069816 -0.00031975 -0.0250223
  0.06152329]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.887295885022       1
[INPUT] 0    0    [1    /1   ]  453.489740315        1
[INPUT] 0    0    [1    /1   ]  85.6440960885        1
[INPUT] 0    0    [1    /1   ]  23.5003287231        1
[INPUT] 0    0    [1    /1   ]  7.94545954078        1
[INPUT] 1    0    [1    /1   ]  5.28208737567        1
[INPUT] 1    0    [1    /1   ]  0.896651806737       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.8872958850215609, 1.0]], [0, [453.4897403146082, 1.0]], [0, [85.64409608853165, 1.0]], [0, [23.50032872312975, 1.0]], [0, [7.945459540782759, 1.0]], [1, [5.282087375667067, 1.0]], [1, [0.8966518067365984, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.88729589]
bas 1, expnt(s) = [453.48974031]
bas 2, expnt(s) = [85.64409609]
bas 3, expnt(s) = [23.50032872]
bas 4, expnt(s) = [7.94545954]
bas 5, expnt(s) = [5.28208738]
bas 6, expnt(s) = [0.89665181]
CPU time:        93.99
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.88729589
   2.30975744 453.48974031 248.27936377  85.64409609  71.12759048
  23.50032872  26.96624508   7.94545954  11.9565061    5.28208738
  23.36099674   0.89665181   2.5454477 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.83586950488829
cond(S) = 44.43481234932609
E1 = -181.12114472313223  E_coul = 54.33784998100573
init E= -126.783294742127
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651945509903092  LUMO = 5.30728419631238
  mo_energy =
[-3.25719588e+01 -1.84005715e+00 -6.51945510e-01 -6.51945510e-01
 -6.51945510e-01  5.30728420e+00  5.30728420e+00  5.30728420e+00
  1.55854523e+01  1.19710433e+02  7.36118987e+02]
E1 = -181.18071292850186  E_coul = 54.11572948218509
cycle= 1 E= -127.064983446317  delta_E= -0.282  |g|= 0.113  |ddm|= 0.385
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133257
diis-c [-0.01775749  1.        ]
  HOMO = -0.628404286643263  LUMO = 5.30754488056535
  mo_energy =
[-3.27754093e+01 -1.81432648e+00 -6.28404287e-01 -6.28404287e-01
 -6.28404287e-01  5.30754488e+00  5.30754488e+00  5.30754488e+00
  1.55119731e+01  1.19504964e+02  7.35825792e+02]
E1 = -181.33267602075543  E_coul = 54.2671684301462
cycle= 2 E= -127.065507590609  delta_E= -0.000524  |g|= 0.019  |ddm|= 0.0236
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0228934
diis-c [-6.64101701e-05  1.38559603e-01  8.61440397e-01]
  HOMO = -0.620321413149173  LUMO = 5.32051319868392
  mo_energy =
[-3.27433499e+01 -1.80536401e+00 -6.20321413e-01 -6.20321413e-01
 -6.20321413e-01  5.32051320e+00  5.32051320e+00  5.32051320e+00
  1.55333359e+01  1.19537471e+02  7.35863884e+02]
E1 = -181.30754315008662  E_coul = 54.24201610489105
cycle= 3 E= -127.065527045196  delta_E= -1.95e-05  |g|= 0.000582  |ddm|= 0.00407
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000720541
diis-c [-4.41033633e-08 -4.58824039e-03  3.71829165e-03  1.00086995e+00]
  HOMO = -0.620549892079675  LUMO = 5.32016178637454
  mo_energy =
[-3.27441819e+01 -1.80558726e+00 -6.20549892e-01 -6.20549892e-01
 -6.20549892e-01  5.32016179e+00  5.32016179e+00  5.32016179e+00
  1.55328138e+01  1.19536704e+02  7.35863111e+02]
E1 = -181.30823711630057  E_coul = 54.24271005436966
cycle= 4 E= -127.065527061931  delta_E= -1.67e-08  |g|= 9.91e-06  |ddm|= 0.00011
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.02663e-05
diis-c [-4.63479297e-12  2.13052629e-04 -3.38333607e-04 -4.85472695e-02
  1.04867255e+00]
  HOMO = -0.620548530055075  LUMO = 5.32016355926197
  mo_energy =
[-3.27441793e+01 -1.80558445e+00 -6.20548530e-01 -6.20548530e-01
 -6.20548530e-01  5.32016356e+00  5.32016356e+00  5.32016356e+00
  1.55328194e+01  1.19536707e+02  7.35863110e+02]
E1 = -181.308234921553  E_coul = 54.24270785961917
cycle= 5 E= -127.065527061934  delta_E= -2.93e-12  |g|= 2.09e-07  |ddm|= 2.05e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.308234921553  E_coul = 54.24270785961917
  HOMO = -0.620548563048744  LUMO = 5.32016350267695
  mo_energy =
[-3.27441795e+01 -1.80558445e+00 -6.20548563e-01 -6.20548563e-01
 -6.20548563e-01  5.32016350e+00  5.32016350e+00  5.32016350e+00
  1.55328194e+01  1.19536707e+02  7.35863110e+02]
E1 = -181.30823507692313  E_coul = 54.24270801498935
Extra cycle  E= -127.065527061934  delta_E= 5.68e-14  |g|= 2.69e-08  |ddm|= 4.68e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.88729589 453.48974031  85.64409609  23.50032872   7.94545954
   5.28208738   0.89665181]
E = -127.06552706193378
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.887295885022       1
[INPUT] 0    0    [1    /1   ]  453.489740315        1
[INPUT] 0    0    [1    /1   ]  85.6440960885        1
[INPUT] 0    0    [1    /1   ]  23.5003287231        1
[INPUT] 0    0    [1    /1   ]  7.94545954078        1
[INPUT] 1    0    [1    /1   ]  5.28208737567        1
[INPUT] 1    0    [1    /1   ]  0.896651806737       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.8872958850215609, 1.0]], [0, [453.4897403146082, 1.0]], [0, [85.64409608853165, 1.0]], [0, [23.50032872312975, 1.0]], [0, [7.945459540782759, 1.0]], [1, [5.282087375667067, 1.0]], [1, [0.8966518067365984, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.88729589]
bas 1, expnt(s) = [453.48974031]
bas 2, expnt(s) = [85.64409609]
bas 3, expnt(s) = [23.50032872]
bas 4, expnt(s) = [7.94545954]
bas 5, expnt(s) = [5.28208738]
bas 6, expnt(s) = [0.89665181]
CPU time:        94.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.88729589
   2.30975744 453.48974031 248.27936377  85.64409609  71.12759048
  23.50032872  26.96624508   7.94545954  11.9565061    5.28208738
  23.36099674   0.89665181   2.5454477 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.83586950488829
cond(S) = 44.43481234932609
E1 = -181.12114472313223  E_coul = 54.33784998100573
init E= -126.783294742127
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651945509903092  LUMO = 5.30728419631238
  mo_energy =
[-3.25719588e+01 -1.84005715e+00 -6.51945510e-01 -6.51945510e-01
 -6.51945510e-01  5.30728420e+00  5.30728420e+00  5.30728420e+00
  1.55854523e+01  1.19710433e+02  7.36118987e+02]
E1 = -181.18071292850186  E_coul = 54.11572948218509
cycle= 1 E= -127.064983446317  delta_E= -0.282  |g|= 0.113  |ddm|= 0.385
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133257
diis-c [-0.01775749  1.        ]
  HOMO = -0.628404286643263  LUMO = 5.30754488056535
  mo_energy =
[-3.27754093e+01 -1.81432648e+00 -6.28404287e-01 -6.28404287e-01
 -6.28404287e-01  5.30754488e+00  5.30754488e+00  5.30754488e+00
  1.55119731e+01  1.19504964e+02  7.35825792e+02]
E1 = -181.33267602075543  E_coul = 54.2671684301462
cycle= 2 E= -127.065507590609  delta_E= -0.000524  |g|= 0.019  |ddm|= 0.0236
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0228934
diis-c [-6.64101701e-05  1.38559603e-01  8.61440397e-01]
  HOMO = -0.620321413149173  LUMO = 5.32051319868392
  mo_energy =
[-3.27433499e+01 -1.80536401e+00 -6.20321413e-01 -6.20321413e-01
 -6.20321413e-01  5.32051320e+00  5.32051320e+00  5.32051320e+00
  1.55333359e+01  1.19537471e+02  7.35863884e+02]
E1 = -181.30754315008662  E_coul = 54.24201610489105
cycle= 3 E= -127.065527045196  delta_E= -1.95e-05  |g|= 0.000582  |ddm|= 0.00407
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000720541
diis-c [-4.41033633e-08 -4.58824039e-03  3.71829165e-03  1.00086995e+00]
  HOMO = -0.620549892079675  LUMO = 5.32016178637454
  mo_energy =
[-3.27441819e+01 -1.80558726e+00 -6.20549892e-01 -6.20549892e-01
 -6.20549892e-01  5.32016179e+00  5.32016179e+00  5.32016179e+00
  1.55328138e+01  1.19536704e+02  7.35863111e+02]
E1 = -181.30823711630057  E_coul = 54.24271005436966
cycle= 4 E= -127.065527061931  delta_E= -1.67e-08  |g|= 9.91e-06  |ddm|= 0.00011
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.02663e-05
diis-c [-4.63479297e-12  2.13052629e-04 -3.38333607e-04 -4.85472695e-02
  1.04867255e+00]
  HOMO = -0.620548530055075  LUMO = 5.32016355926197
  mo_energy =
[-3.27441793e+01 -1.80558445e+00 -6.20548530e-01 -6.20548530e-01
 -6.20548530e-01  5.32016356e+00  5.32016356e+00  5.32016356e+00
  1.55328194e+01  1.19536707e+02  7.35863110e+02]
E1 = -181.308234921553  E_coul = 54.24270785961917
cycle= 5 E= -127.065527061934  delta_E= -2.93e-12  |g|= 2.09e-07  |ddm|= 2.05e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.308234921553  E_coul = 54.24270785961917
  HOMO = -0.620548563048744  LUMO = 5.32016350267695
  mo_energy =
[-3.27441795e+01 -1.80558445e+00 -6.20548563e-01 -6.20548563e-01
 -6.20548563e-01  5.32016350e+00  5.32016350e+00  5.32016350e+00
  1.55328194e+01  1.19536707e+02  7.35863110e+02]
E1 = -181.30823507692313  E_coul = 54.24270801498935
Extra cycle  E= -127.065527061934  delta_E= 5.68e-14  |g|= 2.69e-08  |ddm|= 4.68e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.43481234932609
E1 = -181.30823507692313  E_coul = 54.24270801498935
init E= -127.065527061934
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.620548553075452  LUMO = 5.32016351793339
  mo_energy =
[-3.27441794e+01 -1.80558444e+00 -6.20548553e-01 -6.20548553e-01
 -6.20548553e-01  5.32016352e+00  5.32016352e+00  5.32016352e+00
  1.55328194e+01  1.19536707e+02  7.35863110e+02]
E1 = -181.308235049956  E_coul = 54.242707988022204
cycle= 1 E= -127.065527061934  delta_E= -2.84e-14  |g|= 3.29e-09  |ddm|= 5.81e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.308235049956  E_coul = 54.242707988022204
  HOMO = -0.620548554738357  LUMO = 5.32016351523482
  mo_energy =
[-3.27441794e+01 -1.80558444e+00 -6.20548555e-01 -6.20548555e-01
 -6.20548555e-01  5.32016352e+00  5.32016352e+00  5.32016352e+00
  1.55328194e+01  1.19536707e+02  7.35863110e+02]
E1 = -181.30823505537015  E_coul = 54.24270799343638
Extra cycle  E= -127.065527061934  delta_E= 4.26e-14  |g|= 6.97e-10  |ddm|= 8.5e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.88729589 453.48974031  85.64409609  23.50032872   7.94545954
   5.28208738   0.89665181]
grad_E = [-1.17995620e-01 -8.84313954e-04 -7.39708075e-06 -1.62575024e-03
  4.12995745e-03 -8.36721981e-03  1.26952522e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.916194234858       1
[INPUT] 0    0    [1    /1   ]  453.493409027        1
[INPUT] 0    0    [1    /1   ]  85.5278620143        1
[INPUT] 0    0    [1    /1   ]  23.5206026296        1
[INPUT] 0    0    [1    /1   ]  7.95660894517        1
[INPUT] 1    0    [1    /1   ]  5.30158737072        1
[INPUT] 1    0    [1    /1   ]  0.896712855686       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9161942348580332, 1.0]], [0, [453.49340902704586, 1.0]], [0, [85.52786201428466, 1.0]], [0, [23.520602629584385, 1.0]], [0, [7.956608945167494, 1.0]], [1, [5.301587370724202, 1.0]], [1, [0.8967128556863566, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91619423]
bas 1, expnt(s) = [453.49340903]
bas 2, expnt(s) = [85.52786201]
bas 3, expnt(s) = [23.52060263]
bas 4, expnt(s) = [7.95660895]
bas 5, expnt(s) = [5.30158737]
bas 6, expnt(s) = [0.89671286]
CPU time:        97.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91619423
   2.3659507  453.49340903 248.28087019  85.52786201  71.05517872
  23.52060263  26.98369118   7.95660895  11.9690873    5.30158737
  23.4688493    0.89671286   2.54566433]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.833419542431761
cond(S) = 44.89824313817189
E1 = -181.20447026267695  E_coul = 54.39380292748816
init E= -126.810667335189
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647194950901155  LUMO = 5.32662856325054
  mo_energy =
[-3.25615560e+01 -1.83764774e+00 -6.47194951e-01 -6.47194951e-01
 -6.47194951e-01  5.32662856e+00  5.32662856e+00  5.32662856e+00
  1.57590110e+01  1.19838544e+02  7.35976274e+02]
E1 = -181.29830220444686  E_coul = 54.2313699164164
cycle= 1 E= -127.06693228803  delta_E= -0.256  |g|= 0.108  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124281
diis-c [-0.01544585  1.        ]
  HOMO = -0.618798008226654  LUMO = 5.333670138695
  mo_energy =
[-3.27508793e+01 -1.81077416e+00 -6.18798008e-01 -6.18798008e-01
 -6.18798008e-01  5.33367014e+00  5.33367014e+00  5.33367014e+00
  1.56906752e+01  1.19647650e+02  7.35701881e+02]
E1 = -181.43602889456093  E_coul = 54.3686628769957
cycle= 2 E= -127.067366017565  delta_E= -0.000434  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208231
diis-c [-6.86582058e-05  1.33489906e-01  8.66510094e-01]
  HOMO = -0.611478097910762  LUMO = 5.34552632433143
  mo_energy =
[-3.27214462e+01 -1.80264854e+00 -6.11478098e-01 -6.11478098e-01
 -6.11478098e-01  5.34552632e+00  5.34552632e+00  5.34552632e+00
  1.57099197e+01  1.19677572e+02  7.35737428e+02]
E1 = -181.41301124692555  E_coul = 54.34562917256893
cycle= 3 E= -127.067382074357  delta_E= -1.61e-05  |g|= 0.000665  |ddm|= 0.00368
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000751496
diis-c [-6.85884914e-09 -4.73342356e-03  8.20786915e-03  9.96525554e-01]
  HOMO = -0.611738824678026  LUMO = 5.34512851811255
  mo_energy =
[-3.27223499e+01 -1.80294499e+00 -6.11738825e-01 -6.11738825e-01
 -6.11738825e-01  5.34512852e+00  5.34512852e+00  5.34512852e+00
  1.57092619e+01  1.19676743e+02  7.35736674e+02]
E1 = -181.4137525355357  E_coul = 54.34637044281108
cycle= 4 E= -127.067382092725  delta_E= -1.84e-08  |g|= 2.67e-06  |ddm|= 0.00012
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76686e-06
diis-c [-7.49544684e-13  4.46572209e-05 -3.22762230e-04 -1.37320037e-02
  1.01401011e+00]
  HOMO = -0.611738274955973  LUMO = 5.34512944937028
  mo_energy =
[-3.27223474e+01 -1.80294465e+00 -6.11738275e-01 -6.11738275e-01
 -6.11738275e-01  5.34512945e+00  5.34512945e+00  5.34512945e+00
  1.57092630e+01  1.19676746e+02  7.35736678e+02]
E1 = -181.4137502144496  E_coul = 54.34636812172484
cycle= 5 E= -127.067382092725  delta_E= -1.28e-13  |g|= 7.84e-08  |ddm|= 4.49e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4137502144496  E_coul = 54.34636812172484
  HOMO = -0.611738287047216  LUMO = 5.34512943379835
  mo_energy =
[-3.27223474e+01 -1.80294468e+00 -6.11738287e-01 -6.11738287e-01
 -6.11738287e-01  5.34512943e+00  5.34512943e+00  5.34512943e+00
  1.57092630e+01  1.19676746e+02  7.35736678e+02]
E1 = -181.41375023244981  E_coul = 54.34636813972501
Extra cycle  E= -127.067382092725  delta_E= -5.68e-14  |g|= 4.93e-09  |ddm|= 1.61e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91619423 453.49340903  85.52786201  23.52060263   7.95660895
   5.30158737   0.89671286]
E = -127.06738209272481
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.916194234858       1
[INPUT] 0    0    [1    /1   ]  453.493409027        1
[INPUT] 0    0    [1    /1   ]  85.5278620143        1
[INPUT] 0    0    [1    /1   ]  23.5206026296        1
[INPUT] 0    0    [1    /1   ]  7.95660894517        1
[INPUT] 1    0    [1    /1   ]  5.30158737072        1
[INPUT] 1    0    [1    /1   ]  0.896712855686       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9161942348580332, 1.0]], [0, [453.49340902704586, 1.0]], [0, [85.52786201428466, 1.0]], [0, [23.520602629584385, 1.0]], [0, [7.956608945167494, 1.0]], [1, [5.301587370724202, 1.0]], [1, [0.8967128556863566, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91619423]
bas 1, expnt(s) = [453.49340903]
bas 2, expnt(s) = [85.52786201]
bas 3, expnt(s) = [23.52060263]
bas 4, expnt(s) = [7.95660895]
bas 5, expnt(s) = [5.30158737]
bas 6, expnt(s) = [0.89671286]
CPU time:        97.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91619423
   2.3659507  453.49340903 248.28087019  85.52786201  71.05517872
  23.52060263  26.98369118   7.95660895  11.9690873    5.30158737
  23.4688493    0.89671286   2.54566433]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.833419542431761
cond(S) = 44.89824313817189
E1 = -181.20447026267695  E_coul = 54.39380292748816
init E= -126.810667335189
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647194950901155  LUMO = 5.32662856325054
  mo_energy =
[-3.25615560e+01 -1.83764774e+00 -6.47194951e-01 -6.47194951e-01
 -6.47194951e-01  5.32662856e+00  5.32662856e+00  5.32662856e+00
  1.57590110e+01  1.19838544e+02  7.35976274e+02]
E1 = -181.29830220444686  E_coul = 54.2313699164164
cycle= 1 E= -127.06693228803  delta_E= -0.256  |g|= 0.108  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124281
diis-c [-0.01544585  1.        ]
  HOMO = -0.618798008226654  LUMO = 5.333670138695
  mo_energy =
[-3.27508793e+01 -1.81077416e+00 -6.18798008e-01 -6.18798008e-01
 -6.18798008e-01  5.33367014e+00  5.33367014e+00  5.33367014e+00
  1.56906752e+01  1.19647650e+02  7.35701881e+02]
E1 = -181.43602889456093  E_coul = 54.3686628769957
cycle= 2 E= -127.067366017565  delta_E= -0.000434  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208231
diis-c [-6.86582058e-05  1.33489906e-01  8.66510094e-01]
  HOMO = -0.611478097910762  LUMO = 5.34552632433143
  mo_energy =
[-3.27214462e+01 -1.80264854e+00 -6.11478098e-01 -6.11478098e-01
 -6.11478098e-01  5.34552632e+00  5.34552632e+00  5.34552632e+00
  1.57099197e+01  1.19677572e+02  7.35737428e+02]
E1 = -181.41301124692555  E_coul = 54.34562917256893
cycle= 3 E= -127.067382074357  delta_E= -1.61e-05  |g|= 0.000665  |ddm|= 0.00368
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000751496
diis-c [-6.85884914e-09 -4.73342356e-03  8.20786915e-03  9.96525554e-01]
  HOMO = -0.611738824678026  LUMO = 5.34512851811255
  mo_energy =
[-3.27223499e+01 -1.80294499e+00 -6.11738825e-01 -6.11738825e-01
 -6.11738825e-01  5.34512852e+00  5.34512852e+00  5.34512852e+00
  1.57092619e+01  1.19676743e+02  7.35736674e+02]
E1 = -181.4137525355357  E_coul = 54.34637044281108
cycle= 4 E= -127.067382092725  delta_E= -1.84e-08  |g|= 2.67e-06  |ddm|= 0.00012
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76686e-06
diis-c [-7.49544684e-13  4.46572209e-05 -3.22762230e-04 -1.37320037e-02
  1.01401011e+00]
  HOMO = -0.611738274955973  LUMO = 5.34512944937028
  mo_energy =
[-3.27223474e+01 -1.80294465e+00 -6.11738275e-01 -6.11738275e-01
 -6.11738275e-01  5.34512945e+00  5.34512945e+00  5.34512945e+00
  1.57092630e+01  1.19676746e+02  7.35736678e+02]
E1 = -181.4137502144496  E_coul = 54.34636812172484
cycle= 5 E= -127.067382092725  delta_E= -1.28e-13  |g|= 7.84e-08  |ddm|= 4.49e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4137502144496  E_coul = 54.34636812172484
  HOMO = -0.611738287047216  LUMO = 5.34512943379835
  mo_energy =
[-3.27223474e+01 -1.80294468e+00 -6.11738287e-01 -6.11738287e-01
 -6.11738287e-01  5.34512943e+00  5.34512943e+00  5.34512943e+00
  1.57092630e+01  1.19676746e+02  7.35736678e+02]
E1 = -181.41375023244981  E_coul = 54.34636813972501
Extra cycle  E= -127.067382092725  delta_E= -5.68e-14  |g|= 4.93e-09  |ddm|= 1.61e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.89824313817189
E1 = -181.41375023244981  E_coul = 54.34636813972501
init E= -127.067382092725
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.611738286027218  LUMO = 5.3451294356478
  mo_energy =
[-3.27223474e+01 -1.80294468e+00 -6.11738286e-01 -6.11738286e-01
 -6.11738286e-01  5.34512944e+00  5.34512944e+00  5.34512944e+00
  1.57092630e+01  1.19676746e+02  7.35736678e+02]
E1 = -181.41375022798618  E_coul = 54.346368135261265
cycle= 1 E= -127.067382092725  delta_E= -1.14e-13  |g|= 7.21e-10  |ddm|= 1.15e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.41375022798618  E_coul = 54.346368135261265
  HOMO = -0.611738286310923  LUMO = 5.34512943520649
  mo_energy =
[-3.27223474e+01 -1.80294468e+00 -6.11738286e-01 -6.11738286e-01
 -6.11738286e-01  5.34512944e+00  5.34512944e+00  5.34512944e+00
  1.57092630e+01  1.19676746e+02  7.35736678e+02]
E1 = -181.41375022877546  E_coul = 54.34636813605059
Extra cycle  E= -127.067382092725  delta_E= 5.68e-14  |g|= 9.59e-11  |ddm|= 1.59e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.91619423 453.49340903  85.52786201  23.52060263   7.95660895
   5.30158737   0.89671286]
grad_E = [-0.00405407 -0.00087546 -0.00012857 -0.00163232  0.00333542 -0.00412983
  0.00666719]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.916010119823       1
[INPUT] 0    0    [1    /1   ]  453.49780783         1
[INPUT] 0    0    [1    /1   ]  85.4013306183        1
[INPUT] 0    0    [1    /1   ]  23.4345491558        1
[INPUT] 0    0    [1    /1   ]  7.8153527976         1
[INPUT] 1    0    [1    /1   ]  5.32132450985        1
[INPUT] 1    0    [1    /1   ]  0.89826752657        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.916010119823354, 1.0]], [0, [453.4978078298311, 1.0]], [0, [85.40133061827102, 1.0]], [0, [23.43454915582683, 1.0]], [0, [7.8153527976017125, 1.0]], [1, [5.321324509851101, 1.0]], [1, [0.898267526569751, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91601012]
bas 1, expnt(s) = [453.49780783]
bas 2, expnt(s) = [85.40133062]
bas 3, expnt(s) = [23.43454916]
bas 4, expnt(s) = [7.8153528]
bas 5, expnt(s) = [5.32132451]
bas 6, expnt(s) = [0.89826753]
CPU time:       100.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91601012
   2.3655941  453.49780783 248.2826764   85.40133062  70.97632394
  23.43454916  26.90961451   7.8153528   11.8093628    5.32132451
  23.57811453   0.89826753   2.55118244]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832838047614711
cond(S) = 43.924371558004324
E1 = -181.20942700102825  E_coul = 54.39839022202205
init E= -126.811036779006
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647178124306687  LUMO = 5.34511537679803
  mo_energy =
[-3.25596177e+01 -1.83750166e+00 -6.47178124e-01 -6.47178124e-01
 -6.47178124e-01  5.34511538e+00  5.34511538e+00  5.34511538e+00
  1.54771181e+01  1.18986909e+02  7.34777356e+02]
E1 = -181.3083730221396  E_coul = 54.24120428932594
cycle= 1 E= -127.067168732814  delta_E= -0.256  |g|= 0.108  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124926
diis-c [-0.01560651  1.        ]
  HOMO = -0.618306644061869  LUMO = 5.35233377241682
  mo_energy =
[-3.27483027e+01 -1.81002648e+00 -6.18306644e-01 -6.18306644e-01
 -6.18306644e-01  5.35233377e+00  5.35233377e+00  5.35233377e+00
  1.54107137e+01  1.18796468e+02  7.34503505e+02]
E1 = -181.44630414021765  E_coul = 54.37870107335507
cycle= 2 E= -127.067603066863  delta_E= -0.000434  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0209225
diis-c [-6.95724391e-05  1.33402473e-01  8.66597527e-01]
  HOMO = -0.610978480815265  LUMO = 5.36424293750363
  mo_energy =
[-3.27187982e+01 -1.80190248e+00 -6.10978481e-01 -6.10978481e-01
 -6.10978481e-01  5.36424294e+00  5.36424294e+00  5.36424294e+00
  1.54298407e+01  1.18826445e+02  7.34539175e+02]
E1 = -181.42321549214037  E_coul = 54.355596271436
cycle= 3 E= -127.067619220704  delta_E= -1.62e-05  |g|= 0.00067  |ddm|= 0.00369
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000760873
diis-c [-6.50479082e-09 -4.62051713e-03  9.18470343e-03  9.95435814e-01]
  HOMO = -0.611241815312774  LUMO = 5.36383946240015
  mo_energy =
[-3.27197132e+01 -1.80220228e+00 -6.11241815e-01 -6.11241815e-01
 -6.11241815e-01  5.36383946e+00  5.36383946e+00  5.36383946e+00
  1.54291784e+01  1.18825603e+02  7.34538407e+02]
E1 = -181.4239662072623  E_coul = 54.356346967714764
cycle= 4 E= -127.067619239548  delta_E= -1.88e-08  |g|= 2.88e-06  |ddm|= 0.000122
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.77644e-06
diis-c [-9.95525463e-13  3.79982883e-05 -3.44229251e-04 -1.33842354e-02
  1.01369047e+00]
  HOMO = -0.611241355520158  LUMO = 5.36384027750089
  mo_energy =
[-3.27197110e+01 -1.80220210e+00 -6.11241356e-01 -6.11241356e-01
 -6.11241356e-01  5.36384028e+00  5.36384028e+00  5.36384028e+00
  1.54291792e+01  1.18825606e+02  7.34538411e+02]
E1 = -181.4239640524948  E_coul = 54.35634481294698
cycle= 5 E= -127.067619239548  delta_E= -2.56e-13  |g|= 9.5e-08  |ddm|= 4.8e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4239640524948  E_coul = 54.35634481294698
  HOMO = -0.611241365362508  LUMO = 5.36384026602097
  mo_energy =
[-3.27197110e+01 -1.80220212e+00 -6.11241365e-01 -6.11241365e-01
 -6.11241365e-01  5.36384027e+00  5.36384027e+00  5.36384027e+00
  1.54291792e+01  1.18825606e+02  7.34538411e+02]
E1 = -181.42396405952073  E_coul = 54.35634481997297
Extra cycle  E= -127.067619239548  delta_E= 5.68e-14  |g|= 6.23e-09  |ddm|= 1.98e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91601012 453.49780783  85.40133062  23.43454916   7.8153528
   5.32132451   0.89826753]
E = -127.06761923954775
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.916010119823       1
[INPUT] 0    0    [1    /1   ]  453.49780783         1
[INPUT] 0    0    [1    /1   ]  85.4013306183        1
[INPUT] 0    0    [1    /1   ]  23.4345491558        1
[INPUT] 0    0    [1    /1   ]  7.8153527976         1
[INPUT] 1    0    [1    /1   ]  5.32132450985        1
[INPUT] 1    0    [1    /1   ]  0.89826752657        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.916010119823354, 1.0]], [0, [453.4978078298311, 1.0]], [0, [85.40133061827102, 1.0]], [0, [23.43454915582683, 1.0]], [0, [7.8153527976017125, 1.0]], [1, [5.321324509851101, 1.0]], [1, [0.898267526569751, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91601012]
bas 1, expnt(s) = [453.49780783]
bas 2, expnt(s) = [85.40133062]
bas 3, expnt(s) = [23.43454916]
bas 4, expnt(s) = [7.8153528]
bas 5, expnt(s) = [5.32132451]
bas 6, expnt(s) = [0.89826753]
CPU time:       101.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91601012
   2.3655941  453.49780783 248.2826764   85.40133062  70.97632394
  23.43454916  26.90961451   7.8153528   11.8093628    5.32132451
  23.57811453   0.89826753   2.55118244]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832838047614711
cond(S) = 43.924371558004324
E1 = -181.20942700102825  E_coul = 54.39839022202205
init E= -126.811036779006
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647178124306687  LUMO = 5.34511537679803
  mo_energy =
[-3.25596177e+01 -1.83750166e+00 -6.47178124e-01 -6.47178124e-01
 -6.47178124e-01  5.34511538e+00  5.34511538e+00  5.34511538e+00
  1.54771181e+01  1.18986909e+02  7.34777356e+02]
E1 = -181.3083730221396  E_coul = 54.24120428932594
cycle= 1 E= -127.067168732814  delta_E= -0.256  |g|= 0.108  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124926
diis-c [-0.01560651  1.        ]
  HOMO = -0.618306644061869  LUMO = 5.35233377241682
  mo_energy =
[-3.27483027e+01 -1.81002648e+00 -6.18306644e-01 -6.18306644e-01
 -6.18306644e-01  5.35233377e+00  5.35233377e+00  5.35233377e+00
  1.54107137e+01  1.18796468e+02  7.34503505e+02]
E1 = -181.44630414021765  E_coul = 54.37870107335507
cycle= 2 E= -127.067603066863  delta_E= -0.000434  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0209225
diis-c [-6.95724391e-05  1.33402473e-01  8.66597527e-01]
  HOMO = -0.610978480815265  LUMO = 5.36424293750363
  mo_energy =
[-3.27187982e+01 -1.80190248e+00 -6.10978481e-01 -6.10978481e-01
 -6.10978481e-01  5.36424294e+00  5.36424294e+00  5.36424294e+00
  1.54298407e+01  1.18826445e+02  7.34539175e+02]
E1 = -181.42321549214037  E_coul = 54.355596271436
cycle= 3 E= -127.067619220704  delta_E= -1.62e-05  |g|= 0.00067  |ddm|= 0.00369
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000760873
diis-c [-6.50479082e-09 -4.62051713e-03  9.18470343e-03  9.95435814e-01]
  HOMO = -0.611241815312774  LUMO = 5.36383946240015
  mo_energy =
[-3.27197132e+01 -1.80220228e+00 -6.11241815e-01 -6.11241815e-01
 -6.11241815e-01  5.36383946e+00  5.36383946e+00  5.36383946e+00
  1.54291784e+01  1.18825603e+02  7.34538407e+02]
E1 = -181.4239662072623  E_coul = 54.356346967714764
cycle= 4 E= -127.067619239548  delta_E= -1.88e-08  |g|= 2.88e-06  |ddm|= 0.000122
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.77644e-06
diis-c [-9.95525463e-13  3.79982883e-05 -3.44229251e-04 -1.33842354e-02
  1.01369047e+00]
  HOMO = -0.611241355520158  LUMO = 5.36384027750089
  mo_energy =
[-3.27197110e+01 -1.80220210e+00 -6.11241356e-01 -6.11241356e-01
 -6.11241356e-01  5.36384028e+00  5.36384028e+00  5.36384028e+00
  1.54291792e+01  1.18825606e+02  7.34538411e+02]
E1 = -181.4239640524948  E_coul = 54.35634481294698
cycle= 5 E= -127.067619239548  delta_E= -2.56e-13  |g|= 9.5e-08  |ddm|= 4.8e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4239640524948  E_coul = 54.35634481294698
  HOMO = -0.611241365362508  LUMO = 5.36384026602097
  mo_energy =
[-3.27197110e+01 -1.80220212e+00 -6.11241365e-01 -6.11241365e-01
 -6.11241365e-01  5.36384027e+00  5.36384027e+00  5.36384027e+00
  1.54291792e+01  1.18825606e+02  7.34538411e+02]
E1 = -181.42396405952073  E_coul = 54.35634481997297
Extra cycle  E= -127.067619239548  delta_E= 5.68e-14  |g|= 6.23e-09  |ddm|= 1.98e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 43.924371558004324
E1 = -181.42396405952073  E_coul = 54.35634481997297
init E= -127.067619239548
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.611241365042582  LUMO = 5.36384026680467
  mo_energy =
[-3.27197110e+01 -1.80220212e+00 -6.11241365e-01 -6.11241365e-01
 -6.11241365e-01  5.36384027e+00  5.36384027e+00  5.36384027e+00
  1.54291791e+01  1.18825606e+02  7.34538411e+02]
E1 = -181.4239640568953  E_coul = 54.35634481734761
cycle= 1 E= -127.067619239548  delta_E= 5.68e-14  |g|= 6.17e-10  |ddm|= 1.35e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.4239640568953  E_coul = 54.35634481734761
  HOMO = -0.611241365213465  LUMO = 5.36384026654787
  mo_energy =
[-3.27197110e+01 -1.80220212e+00 -6.11241365e-01 -6.11241365e-01
 -6.11241365e-01  5.36384027e+00  5.36384027e+00  5.36384027e+00
  1.54291791e+01  1.18825606e+02  7.34538411e+02]
E1 = -181.42396405731168  E_coul = 54.356344817763826
Extra cycle  E= -127.067619239548  delta_E= -1.56e-13  |g|= 5.47e-11  |ddm|= 1.29e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.91601012 453.49780783  85.40133062  23.43454916   7.8153528
   5.32132451   0.89826753]
grad_E = [-0.0008817  -0.0008625  -0.0003409  -0.00033309  0.00090557 -0.00119085
 -0.00122211]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.917463945015       1
[INPUT] 0    0    [1    /1   ]  453.480112289        1
[INPUT] 0    0    [1    /1   ]  86.0792469281        1
[INPUT] 0    0    [1    /1   ]  23.7006649861        1
[INPUT] 0    0    [1    /1   ]  7.89130733038        1
[INPUT] 1    0    [1    /1   ]  5.35123343378        1
[INPUT] 1    0    [1    /1   ]  0.901356998699       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9174639450153156, 1.0]], [0, [453.4801122886333, 1.0]], [0, [86.07924692805491, 1.0]], [0, [23.70066498606298, 1.0]], [0, [7.891307330381647, 1.0]], [1, [5.3512334337827365, 1.0]], [1, [0.9013569986992227, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91746395]
bas 1, expnt(s) = [453.48011229]
bas 2, expnt(s) = [86.07924693]
bas 3, expnt(s) = [23.70066499]
bas 4, expnt(s) = [7.89130733]
bas 5, expnt(s) = [5.35123343]
bas 6, expnt(s) = [0.901357]
CPU time:       104.42
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91746395
   2.36840941 453.48011229 248.27541035  86.07924693  71.39846392
  23.70066499  27.13847395   7.89130733  11.89533678   5.35123343
  23.74388406   0.901357     2.56215522]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831411256648375
cond(S) = 44.07071816260261
E1 = -181.21293089977772  E_coul = 54.40275425314345
init E= -126.810176646634
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.64721762992608  LUMO = 5.37557448141794
  mo_energy =
[-3.25577962e+01 -1.83713052e+00 -6.47217630e-01 -6.47217630e-01
 -6.47217630e-01  5.37557448e+00  5.37557448e+00  5.37557448e+00
  1.57083693e+01  1.20484523e+02  7.38086443e+02]
E1 = -181.3350554124153  E_coul = 54.26768659429898
cycle= 1 E= -127.067368818116  delta_E= -0.257  |g|= 0.106  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122975
diis-c [-0.01512282  1.        ]
  HOMO = -0.616488930725747  LUMO = 5.38476758019006
  mo_energy =
[-3.27430162e+01 -1.80761272e+00 -6.16488931e-01 -6.16488931e-01
 -6.16488931e-01  5.38476758e+00  5.38476758e+00  5.38476758e+00
  1.56439850e+01  1.20296895e+02  7.37816023e+02]
E1 = -181.46929524283422  E_coul = 54.4015113837617
cycle= 2 E= -127.067783859073  delta_E= -0.000415  |g|= 0.0166  |ddm|= 0.0212
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203718
diis-c [-6.71847784e-05  1.31941477e-01  8.68058523e-01]
  HOMO = -0.609354462507537  LUMO = 5.39641965802519
  mo_energy =
[-3.27142149e+01 -1.79969951e+00 -6.09354463e-01 -6.09354463e-01
 -6.09354463e-01  5.39641966e+00  5.39641966e+00  5.39641966e+00
  1.56627510e+01  1.20326226e+02  7.37850916e+02]
E1 = -181.44692065197535  E_coul = 54.37912157472092
cycle= 3 E= -127.067799077254  delta_E= -1.52e-05  |g|= 0.000665  |ddm|= 0.00358
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000757661
diis-c [-6.81763434e-09 -4.63108256e-03  9.65122288e-03  9.94979860e-01]
  HOMO = -0.609616134461859  LUMO = 5.39601651379623
  mo_energy =
[-3.27151275e+01 -1.79999660e+00 -6.09616134e-01 -6.09616134e-01
 -6.09616134e-01  5.39601651e+00  5.39601651e+00  5.39601651e+00
  1.56620899e+01  1.20325386e+02  7.37850149e+02]
E1 = -181.4476640296339  E_coul = 54.37986493385006
cycle= 4 E= -127.067799095784  delta_E= -1.85e-08  |g|= 2.72e-06  |ddm|= 0.00012
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7975e-06
diis-c [-7.01201706e-13  4.31965327e-05 -3.55593746e-04 -1.39827906e-02
  1.01429519e+00]
  HOMO = -0.609615595851681  LUMO = 5.39601744697373
  mo_energy =
[-3.27151251e+01 -1.79999627e+00 -6.09615596e-01 -6.09615596e-01
 -6.09615596e-01  5.39601745e+00  5.39601745e+00  5.39601745e+00
  1.56620910e+01  1.20325389e+02  7.37850153e+02]
E1 = -181.4476617371688  E_coul = 54.379862641384726
cycle= 5 E= -127.067799095784  delta_E= -2.27e-13  |g|= 7.63e-08  |ddm|= 4.44e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4476617371688  E_coul = 54.379862641384726
  HOMO = -0.609615606203298  LUMO = 5.39601743396121
  mo_energy =
[-3.27151251e+01 -1.79999629e+00 -6.09615606e-01 -6.09615606e-01
 -6.09615606e-01  5.39601743e+00  5.39601743e+00  5.39601743e+00
  1.56620909e+01  1.20325389e+02  7.37850153e+02]
E1 = -181.4476617503061  E_coul = 54.379862654522036
Extra cycle  E= -127.067799095784  delta_E=    0  |g|= 4.8e-09  |ddm|= 1.55e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.91746395 453.48011229  86.07924693  23.70066499   7.89130733
   5.35123343   0.901357  ]
E = -127.06779909578407
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.917463945015       1
[INPUT] 0    0    [1    /1   ]  453.480112289        1
[INPUT] 0    0    [1    /1   ]  86.0792469281        1
[INPUT] 0    0    [1    /1   ]  23.7006649861        1
[INPUT] 0    0    [1    /1   ]  7.89130733038        1
[INPUT] 1    0    [1    /1   ]  5.35123343378        1
[INPUT] 1    0    [1    /1   ]  0.901356998699       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9174639450153156, 1.0]], [0, [453.4801122886333, 1.0]], [0, [86.07924692805491, 1.0]], [0, [23.70066498606298, 1.0]], [0, [7.891307330381647, 1.0]], [1, [5.3512334337827365, 1.0]], [1, [0.9013569986992227, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91746395]
bas 1, expnt(s) = [453.48011229]
bas 2, expnt(s) = [86.07924693]
bas 3, expnt(s) = [23.70066499]
bas 4, expnt(s) = [7.89130733]
bas 5, expnt(s) = [5.35123343]
bas 6, expnt(s) = [0.901357]
CPU time:       105.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91746395
   2.36840941 453.48011229 248.27541035  86.07924693  71.39846392
  23.70066499  27.13847395   7.89130733  11.89533678   5.35123343
  23.74388406   0.901357     2.56215522]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831411256648375
cond(S) = 44.07071816260261
E1 = -181.21293089977772  E_coul = 54.40275425314345
init E= -126.810176646634
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64721762992608  LUMO = 5.37557448141794
  mo_energy =
[-3.25577962e+01 -1.83713052e+00 -6.47217630e-01 -6.47217630e-01
 -6.47217630e-01  5.37557448e+00  5.37557448e+00  5.37557448e+00
  1.57083693e+01  1.20484523e+02  7.38086443e+02]
E1 = -181.3350554124153  E_coul = 54.26768659429898
cycle= 1 E= -127.067368818116  delta_E= -0.257  |g|= 0.106  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122975
diis-c [-0.01512282  1.        ]
  HOMO = -0.616488930725747  LUMO = 5.38476758019006
  mo_energy =
[-3.27430162e+01 -1.80761272e+00 -6.16488931e-01 -6.16488931e-01
 -6.16488931e-01  5.38476758e+00  5.38476758e+00  5.38476758e+00
  1.56439850e+01  1.20296895e+02  7.37816023e+02]
E1 = -181.46929524283422  E_coul = 54.4015113837617
cycle= 2 E= -127.067783859073  delta_E= -0.000415  |g|= 0.0166  |ddm|= 0.0212
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203718
diis-c [-6.71847784e-05  1.31941477e-01  8.68058523e-01]
  HOMO = -0.609354462507537  LUMO = 5.39641965802519
  mo_energy =
[-3.27142149e+01 -1.79969951e+00 -6.09354463e-01 -6.09354463e-01
 -6.09354463e-01  5.39641966e+00  5.39641966e+00  5.39641966e+00
  1.56627510e+01  1.20326226e+02  7.37850916e+02]
E1 = -181.44692065197535  E_coul = 54.37912157472092
cycle= 3 E= -127.067799077254  delta_E= -1.52e-05  |g|= 0.000665  |ddm|= 0.00358
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000757661
diis-c [-6.81763434e-09 -4.63108256e-03  9.65122288e-03  9.94979860e-01]
  HOMO = -0.609616134461859  LUMO = 5.39601651379623
  mo_energy =
[-3.27151275e+01 -1.79999660e+00 -6.09616134e-01 -6.09616134e-01
 -6.09616134e-01  5.39601651e+00  5.39601651e+00  5.39601651e+00
  1.56620899e+01  1.20325386e+02  7.37850149e+02]
E1 = -181.4476640296339  E_coul = 54.37986493385006
cycle= 4 E= -127.067799095784  delta_E= -1.85e-08  |g|= 2.72e-06  |ddm|= 0.00012
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7975e-06
diis-c [-7.01201706e-13  4.31965327e-05 -3.55593746e-04 -1.39827906e-02
  1.01429519e+00]
  HOMO = -0.609615595851681  LUMO = 5.39601744697373
  mo_energy =
[-3.27151251e+01 -1.79999627e+00 -6.09615596e-01 -6.09615596e-01
 -6.09615596e-01  5.39601745e+00  5.39601745e+00  5.39601745e+00
  1.56620910e+01  1.20325389e+02  7.37850153e+02]
E1 = -181.4476617371688  E_coul = 54.379862641384726
cycle= 5 E= -127.067799095784  delta_E= -2.27e-13  |g|= 7.63e-08  |ddm|= 4.44e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4476617371688  E_coul = 54.379862641384726
  HOMO = -0.609615606203298  LUMO = 5.39601743396121
  mo_energy =
[-3.27151251e+01 -1.79999629e+00 -6.09615606e-01 -6.09615606e-01
 -6.09615606e-01  5.39601743e+00  5.39601743e+00  5.39601743e+00
  1.56620909e+01  1.20325389e+02  7.37850153e+02]
E1 = -181.4476617503061  E_coul = 54.379862654522036
Extra cycle  E= -127.067799095784  delta_E=    0  |g|= 4.8e-09  |ddm|= 1.55e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.07071816260261
E1 = -181.4476617503061  E_coul = 54.379862654522036
init E= -127.067799095784
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.609615605482379  LUMO = 5.39601743534077
  mo_energy =
[-3.27151251e+01 -1.79999629e+00 -6.09615605e-01 -6.09615605e-01
 -6.09615605e-01  5.39601744e+00  5.39601744e+00  5.39601744e+00
  1.56620909e+01  1.20325389e+02  7.37850153e+02]
E1 = -181.44766174680754  E_coul = 54.37986265102339
cycle= 1 E= -127.067799095784  delta_E= -8.53e-14  |g|= 6.16e-10  |ddm|= 1.08e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.44766174680754  E_coul = 54.37986265102339
  HOMO = -0.609615605705557  LUMO = 5.39601743499384
  mo_energy =
[-3.27151251e+01 -1.79999629e+00 -6.09615606e-01 -6.09615606e-01
 -6.09615606e-01  5.39601743e+00  5.39601743e+00  5.39601743e+00
  1.56620909e+01  1.20325389e+02  7.37850153e+02]
E1 = -181.44766174740914  E_coul = 54.37986265162506
Extra cycle  E= -127.067799095784  delta_E= 7.11e-14  |g|= 7.37e-11  |ddm|= 1.33e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91746395 453.48011229  86.07924693  23.70066499   7.89130733
   5.35123343   0.901357  ]
grad_E = [ 0.0017319  -0.00088905 -0.00020265 -0.00021813  0.00052333  0.00221011
 -0.00433842]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.917600046904       1
[INPUT] 0    0    [1    /1   ]  453.467080008        1
[INPUT] 0    0    [1    /1   ]  86.6035134098        1
[INPUT] 0    0    [1    /1   ]  23.8785907936        1
[INPUT] 0    0    [1    /1   ]  7.93562938674        1
[INPUT] 1    0    [1    /1   ]  5.35408182388        1
[INPUT] 1    0    [1    /1   ]  0.901886738774       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9176000469039506, 1.0]], [0, [453.46708000837566, 1.0]], [0, [86.60351340982425, 1.0]], [0, [23.878590793586657, 1.0]], [0, [7.935629386739653, 1.0]], [1, [5.354081823878825, 1.0]], [1, [0.9018867387736371, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91760005]
bas 1, expnt(s) = [453.46708001]
bas 2, expnt(s) = [86.60351341]
bas 3, expnt(s) = [23.87859079]
bas 4, expnt(s) = [7.93562939]
bas 5, expnt(s) = [5.35408182]
bas 6, expnt(s) = [0.90188674]
CPU time:       107.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91760005
   2.36867292 453.46708001 248.27005906  86.60351341  71.72435603
  23.87859079  27.29113163   7.93562939  11.9454099    5.35408182
  23.7596833    0.90188674   2.56403763]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831159001306105
cond(S) = 44.07863173528636
E1 = -181.21133112592605  E_coul = 54.401908693583366
init E= -126.809422432343
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647310630344073  LUMO = 5.37916424388402
  mo_energy =
[-3.25581645e+01 -1.83694416e+00 -6.47310630e-01 -6.47310630e-01
 -6.47310630e-01  5.37916424e+00  5.37916424e+00  5.37916424e+00
  1.58469394e+01  1.21510496e+02  7.40486689e+02]
E1 = -181.33864254409136  E_coul = 54.2711949247889
cycle= 1 E= -127.067447619302  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1224
diis-c [-0.01498186  1.        ]
  HOMO = -0.616221136917707  LUMO = 5.38878314448943
  mo_energy =
[-3.27427604e+01 -1.80695433e+00 -6.16221137e-01 -6.16221137e-01
 -6.16221137e-01  5.38878314e+00  5.38878314e+00  5.38878314e+00
  1.57825792e+01  1.21323046e+02  7.40216816e+02]
E1 = -181.47207570092903  E_coul = 54.404217320196665
cycle= 2 E= -127.067858380732  delta_E= -0.000411  |g|= 0.0165  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.020232
diis-c [-6.54627955e-05  1.31818640e-01  8.68181360e-01]
  HOMO = -0.60912900078586  LUMO = 5.40036874640464
  mo_energy =
[-3.27141305e+01 -1.79908328e+00 -6.09129001e-01 -6.09129001e-01
 -6.09129001e-01  5.40036875e+00  5.40036875e+00  5.40036875e+00
  1.58013163e+01  1.21352239e+02  7.40251500e+02]
E1 = -181.44988435035748  E_coul = 54.38201097461304
cycle= 3 E= -127.067873375744  delta_E= -1.5e-05  |g|= 0.000656  |ddm|= 0.00355
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000749224
diis-c [-7.38784057e-09 -4.62569694e-03  9.42311990e-03  9.95202577e-01]
  HOMO = -0.609387355851797  LUMO = 5.39997044387714
  mo_energy =
[-3.27150327e+01 -1.79937534e+00 -6.09387356e-01 -6.09387356e-01
 -6.09387356e-01  5.39997044e+00  5.39997044e+00  5.39997044e+00
  1.58006635e+01  1.21351410e+02  7.40250741e+02]
E1 = -181.45061825748118  E_coul = 54.382744863686234
cycle= 4 E= -127.067873393795  delta_E= -1.81e-08  |g|= 2.6e-06  |ddm|= 0.000118
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.82889e-06
diis-c [-4.52879680e-13  5.29528334e-05 -3.61513415e-04 -1.56567582e-02
  1.01596532e+00]
  HOMO = -0.609386760322479  LUMO = 5.39997145095037
  mo_energy =
[-3.27150302e+01 -1.79937488e+00 -6.09386760e-01 -6.09386760e-01
 -6.09386760e-01  5.39997145e+00  5.39997145e+00  5.39997145e+00
  1.58006649e+01  1.21351413e+02  7.40250745e+02]
E1 = -181.45061590542997  E_coul = 54.382742511634845
cycle= 5 E= -127.067873393795  delta_E= -1.85e-13  |g|= 5.48e-08  |ddm|= 4.06e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.45061590542997  E_coul = 54.382742511634845
  HOMO = -0.60938677226153  LUMO = 5.39997143460613
  mo_energy =
[-3.27150302e+01 -1.79937490e+00 -6.09386772e-01 -6.09386772e-01
 -6.09386772e-01  5.39997143e+00  5.39997143e+00  5.39997143e+00
  1.58006649e+01  1.21351413e+02  7.40250745e+02]
E1 = -181.450615929245  E_coul = 54.38274253544979
Extra cycle  E= -127.067873393795  delta_E= -8.53e-14  |g|= 3.79e-09  |ddm|= 1.1e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [  0.91760005 453.46708001  86.60351341  23.87859079   7.93562939
   5.35408182   0.90188674]
E = -127.06787339379521
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.917600046904       1
[INPUT] 0    0    [1    /1   ]  453.467080008        1
[INPUT] 0    0    [1    /1   ]  86.6035134098        1
[INPUT] 0    0    [1    /1   ]  23.8785907936        1
[INPUT] 0    0    [1    /1   ]  7.93562938674        1
[INPUT] 1    0    [1    /1   ]  5.35408182388        1
[INPUT] 1    0    [1    /1   ]  0.901886738774       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9176000469039506, 1.0]], [0, [453.46708000837566, 1.0]], [0, [86.60351340982425, 1.0]], [0, [23.878590793586657, 1.0]], [0, [7.935629386739653, 1.0]], [1, [5.354081823878825, 1.0]], [1, [0.9018867387736371, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91760005]
bas 1, expnt(s) = [453.46708001]
bas 2, expnt(s) = [86.60351341]
bas 3, expnt(s) = [23.87859079]
bas 4, expnt(s) = [7.93562939]
bas 5, expnt(s) = [5.35408182]
bas 6, expnt(s) = [0.90188674]
CPU time:       108.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91760005
   2.36867292 453.46708001 248.27005906  86.60351341  71.72435603
  23.87859079  27.29113163   7.93562939  11.9454099    5.35408182
  23.7596833    0.90188674   2.56403763]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831159001306105
cond(S) = 44.07863173528636
E1 = -181.21133112592605  E_coul = 54.401908693583366
init E= -126.809422432343
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647310630344073  LUMO = 5.37916424388402
  mo_energy =
[-3.25581645e+01 -1.83694416e+00 -6.47310630e-01 -6.47310630e-01
 -6.47310630e-01  5.37916424e+00  5.37916424e+00  5.37916424e+00
  1.58469394e+01  1.21510496e+02  7.40486689e+02]
E1 = -181.33864254409136  E_coul = 54.2711949247889
cycle= 1 E= -127.067447619302  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1224
diis-c [-0.01498186  1.        ]
  HOMO = -0.616221136917707  LUMO = 5.38878314448943
  mo_energy =
[-3.27427604e+01 -1.80695433e+00 -6.16221137e-01 -6.16221137e-01
 -6.16221137e-01  5.38878314e+00  5.38878314e+00  5.38878314e+00
  1.57825792e+01  1.21323046e+02  7.40216816e+02]
E1 = -181.47207570092903  E_coul = 54.404217320196665
cycle= 2 E= -127.067858380732  delta_E= -0.000411  |g|= 0.0165  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.020232
diis-c [-6.54627955e-05  1.31818640e-01  8.68181360e-01]
  HOMO = -0.60912900078586  LUMO = 5.40036874640464
  mo_energy =
[-3.27141305e+01 -1.79908328e+00 -6.09129001e-01 -6.09129001e-01
 -6.09129001e-01  5.40036875e+00  5.40036875e+00  5.40036875e+00
  1.58013163e+01  1.21352239e+02  7.40251500e+02]
E1 = -181.44988435035748  E_coul = 54.38201097461304
cycle= 3 E= -127.067873375744  delta_E= -1.5e-05  |g|= 0.000656  |ddm|= 0.00355
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000749224
diis-c [-7.38784057e-09 -4.62569694e-03  9.42311990e-03  9.95202577e-01]
  HOMO = -0.609387355851797  LUMO = 5.39997044387714
  mo_energy =
[-3.27150327e+01 -1.79937534e+00 -6.09387356e-01 -6.09387356e-01
 -6.09387356e-01  5.39997044e+00  5.39997044e+00  5.39997044e+00
  1.58006635e+01  1.21351410e+02  7.40250741e+02]
E1 = -181.45061825748118  E_coul = 54.382744863686234
cycle= 4 E= -127.067873393795  delta_E= -1.81e-08  |g|= 2.6e-06  |ddm|= 0.000118
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.82889e-06
diis-c [-4.52879680e-13  5.29528334e-05 -3.61513415e-04 -1.56567582e-02
  1.01596532e+00]
  HOMO = -0.609386760322479  LUMO = 5.39997145095037
  mo_energy =
[-3.27150302e+01 -1.79937488e+00 -6.09386760e-01 -6.09386760e-01
 -6.09386760e-01  5.39997145e+00  5.39997145e+00  5.39997145e+00
  1.58006649e+01  1.21351413e+02  7.40250745e+02]
E1 = -181.45061590542997  E_coul = 54.382742511634845
cycle= 5 E= -127.067873393795  delta_E= -1.85e-13  |g|= 5.48e-08  |ddm|= 4.06e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.45061590542997  E_coul = 54.382742511634845
  HOMO = -0.60938677226153  LUMO = 5.39997143460613
  mo_energy =
[-3.27150302e+01 -1.79937490e+00 -6.09386772e-01 -6.09386772e-01
 -6.09386772e-01  5.39997143e+00  5.39997143e+00  5.39997143e+00
  1.58006649e+01  1.21351413e+02  7.40250745e+02]
E1 = -181.450615929245  E_coul = 54.38274253544979
Extra cycle  E= -127.067873393795  delta_E= -8.53e-14  |g|= 3.79e-09  |ddm|= 1.1e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.07863173528636
E1 = -181.450615929245  E_coul = 54.38274253544979
init E= -127.067873393795
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.609386770850093  LUMO = 5.39997143703286
  mo_energy =
[-3.27150302e+01 -1.79937490e+00 -6.09386771e-01 -6.09386771e-01
 -6.09386771e-01  5.39997144e+00  5.39997144e+00  5.39997144e+00
  1.58006649e+01  1.21351413e+02  7.40250745e+02]
E1 = -181.45061592405878  E_coul = 54.38274253026356
cycle= 1 E= -127.067873393795  delta_E= -1.42e-14  |g|= 7.31e-10  |ddm|= 9.52e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.45061592405878  E_coul = 54.38274253026356
  HOMO = -0.609386771175846  LUMO = 5.39997143651463
  mo_energy =
[-3.27150302e+01 -1.79937490e+00 -6.09386771e-01 -6.09386771e-01
 -6.09386771e-01  5.39997144e+00  5.39997144e+00  5.39997144e+00
  1.58006649e+01  1.21351413e+02  7.40250745e+02]
E1 = -181.45061592500628  E_coul = 54.38274253121118
Extra cycle  E= -127.067873393795  delta_E= 1.28e-13  |g|= 1.16e-10  |ddm|= 1.67e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.91760005 453.46708001  86.60351341  23.87859079   7.93562939
   5.35408182   0.90188674]
grad_E = [-1.02211921e-04 -9.11093523e-04 -6.36599190e-05 -2.23127020e-04
  2.93152623e-04  2.23040500e-03 -2.30732842e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918019566078       1
[INPUT] 0    0    [1    /1   ]  453.458767622        1
[INPUT] 0    0    [1    /1   ]  86.9770854462        1
[INPUT] 0    0    [1    /1   ]  23.9917922427        1
[INPUT] 0    0    [1    /1   ]  7.96058356906        1
[INPUT] 1    0    [1    /1   ]  5.34462666784        1
[INPUT] 1    0    [1    /1   ]  0.901027711055       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9180195660777763, 1.0]], [0, [453.4587676223003, 1.0]], [0, [86.9770854461887, 1.0]], [0, [23.991792242723786, 1.0]], [0, [7.960583569059775, 1.0]], [1, [5.344626667843445, 1.0]], [1, [0.9010277110554309, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91801957]
bas 1, expnt(s) = [453.45876762]
bas 2, expnt(s) = [86.97708545]
bas 3, expnt(s) = [23.99179224]
bas 4, expnt(s) = [7.96058357]
bas 5, expnt(s) = [5.34462667]
bas 6, expnt(s) = [0.90102771]
CPU time:       111.16
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91801957
   2.36948507 453.45876762 248.26664582  86.97708545  71.95627323
  23.99179224  27.38810872   7.96058357  11.97357127   5.34462667
  23.70724623   0.90102771   2.56098525]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831452809082037
cond(S) = 44.04527413587839
E1 = -181.20972527901853  E_coul = 54.400314922963936
init E= -126.809410356055
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647303205194518  LUMO = 5.36991143564787
  mo_energy =
[-3.25591541e+01 -1.83678413e+00 -6.47303205e-01 -6.47303205e-01
 -6.47303205e-01  5.36991144e+00  5.36991144e+00  5.36991144e+00
  1.59305642e+01  1.22181847e+02  7.42124145e+02]
E1 = -181.33269662408608  E_coul = 54.26521960027562
cycle= 1 E= -127.06747702381  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122512
diis-c [-0.01500914  1.        ]
  HOMO = -0.616564602675528  LUMO = 5.37920877938856
  mo_energy =
[-3.27444660e+01 -1.80722238e+00 -6.16564603e-01 -6.16564603e-01
 -6.16564603e-01  5.37920878e+00  5.37920878e+00  5.37920878e+00
  1.58651692e+01  1.21993411e+02  7.41853594e+02]
E1 = -181.4666508038323  E_coul = 54.398760396161116
cycle= 2 E= -127.067890407671  delta_E= -0.000413  |g|= 0.0165  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0202887
diis-c [-6.45612272e-05  1.32240814e-01  8.67759186e-01]
  HOMO = -0.609445964679496  LUMO = 5.39081839625336
  mo_energy =
[-3.27157526e+01 -1.79931723e+00 -6.09445965e-01 -6.09445965e-01
 -6.09445965e-01  5.39081840e+00  5.39081840e+00  5.39081840e+00
  1.58840166e+01  1.22022709e+02  7.41888358e+02]
E1 = -181.44438397112754  E_coul = 54.376478461263204
cycle= 3 E= -127.067905509864  delta_E= -1.51e-05  |g|= 0.000649  |ddm|= 0.00356
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000741565
diis-c [-7.50480586e-09 -4.63713243e-03  8.89304088e-03  9.95744092e-01]
  HOMO = -0.609701781530192  LUMO = 5.3904247390575
  mo_energy =
[-3.27166447e+01 -1.79960626e+00 -6.09701782e-01 -6.09701782e-01
 -6.09701782e-01  5.39042474e+00  5.39042474e+00  5.39042474e+00
  1.58833698e+01  1.22021890e+02  7.41887610e+02]
E1 = -181.44511059139083  E_coul = 54.377205063848834
cycle= 4 E= -127.067905527542  delta_E= -1.77e-08  |g|= 2.57e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.85959e-06
diis-c [-4.09299637e-13  5.52301992e-05 -3.54136126e-04 -1.59517963e-02
  1.01625070e+00]
  HOMO = -0.609701156058494  LUMO = 5.39042578492298
  mo_energy =
[-3.27166421e+01 -1.79960575e+00 -6.09701156e-01 -6.09701156e-01
 -6.09701156e-01  5.39042578e+00  5.39042578e+00  5.39042578e+00
  1.58833713e+01  1.22021893e+02  7.41887614e+02]
E1 = -181.44510818167785  E_coul = 54.37720265413572
cycle= 5 E= -127.067905527542  delta_E= -1.42e-13  |g|= 4.99e-08  |ddm|= 4.05e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.44510818167785  E_coul = 54.37720265413572
  HOMO = -0.609701168505308  LUMO = 5.39042576760717
  mo_energy =
[-3.27166422e+01 -1.79960577e+00 -6.09701169e-01 -6.09701169e-01
 -6.09701169e-01  5.39042577e+00  5.39042577e+00  5.39042577e+00
  1.58833713e+01  1.22021893e+02  7.41887614e+02]
E1 = -181.4451082084564  E_coul = 54.37720268091411
Extra cycle  E= -127.067905527542  delta_E= -1.42e-13  |g|= 3.78e-09  |ddm|= 9.99e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91801957 453.45876762  86.97708545  23.99179224   7.96058357
   5.34462667   0.90102771]
E = -127.06790552754228
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918019566078       1
[INPUT] 0    0    [1    /1   ]  453.458767622        1
[INPUT] 0    0    [1    /1   ]  86.9770854462        1
[INPUT] 0    0    [1    /1   ]  23.9917922427        1
[INPUT] 0    0    [1    /1   ]  7.96058356906        1
[INPUT] 1    0    [1    /1   ]  5.34462666784        1
[INPUT] 1    0    [1    /1   ]  0.901027711055       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9180195660777763, 1.0]], [0, [453.4587676223003, 1.0]], [0, [86.9770854461887, 1.0]], [0, [23.991792242723786, 1.0]], [0, [7.960583569059775, 1.0]], [1, [5.344626667843445, 1.0]], [1, [0.9010277110554309, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91801957]
bas 1, expnt(s) = [453.45876762]
bas 2, expnt(s) = [86.97708545]
bas 3, expnt(s) = [23.99179224]
bas 4, expnt(s) = [7.96058357]
bas 5, expnt(s) = [5.34462667]
bas 6, expnt(s) = [0.90102771]
CPU time:       111.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91801957
   2.36948507 453.45876762 248.26664582  86.97708545  71.95627323
  23.99179224  27.38810872   7.96058357  11.97357127   5.34462667
  23.70724623   0.90102771   2.56098525]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831452809082037
cond(S) = 44.04527413587839
E1 = -181.20972527901853  E_coul = 54.400314922963936
init E= -126.809410356055
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647303205194518  LUMO = 5.36991143564787
  mo_energy =
[-3.25591541e+01 -1.83678413e+00 -6.47303205e-01 -6.47303205e-01
 -6.47303205e-01  5.36991144e+00  5.36991144e+00  5.36991144e+00
  1.59305642e+01  1.22181847e+02  7.42124145e+02]
E1 = -181.33269662408608  E_coul = 54.26521960027562
cycle= 1 E= -127.06747702381  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122512
diis-c [-0.01500914  1.        ]
  HOMO = -0.616564602675528  LUMO = 5.37920877938856
  mo_energy =
[-3.27444660e+01 -1.80722238e+00 -6.16564603e-01 -6.16564603e-01
 -6.16564603e-01  5.37920878e+00  5.37920878e+00  5.37920878e+00
  1.58651692e+01  1.21993411e+02  7.41853594e+02]
E1 = -181.4666508038323  E_coul = 54.398760396161116
cycle= 2 E= -127.067890407671  delta_E= -0.000413  |g|= 0.0165  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0202887
diis-c [-6.45612272e-05  1.32240814e-01  8.67759186e-01]
  HOMO = -0.609445964679496  LUMO = 5.39081839625336
  mo_energy =
[-3.27157526e+01 -1.79931723e+00 -6.09445965e-01 -6.09445965e-01
 -6.09445965e-01  5.39081840e+00  5.39081840e+00  5.39081840e+00
  1.58840166e+01  1.22022709e+02  7.41888358e+02]
E1 = -181.44438397112754  E_coul = 54.376478461263204
cycle= 3 E= -127.067905509864  delta_E= -1.51e-05  |g|= 0.000649  |ddm|= 0.00356
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000741565
diis-c [-7.50480586e-09 -4.63713243e-03  8.89304088e-03  9.95744092e-01]
  HOMO = -0.609701781530192  LUMO = 5.3904247390575
  mo_energy =
[-3.27166447e+01 -1.79960626e+00 -6.09701782e-01 -6.09701782e-01
 -6.09701782e-01  5.39042474e+00  5.39042474e+00  5.39042474e+00
  1.58833698e+01  1.22021890e+02  7.41887610e+02]
E1 = -181.44511059139083  E_coul = 54.377205063848834
cycle= 4 E= -127.067905527542  delta_E= -1.77e-08  |g|= 2.57e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.85959e-06
diis-c [-4.09299637e-13  5.52301992e-05 -3.54136126e-04 -1.59517963e-02
  1.01625070e+00]
  HOMO = -0.609701156058494  LUMO = 5.39042578492298
  mo_energy =
[-3.27166421e+01 -1.79960575e+00 -6.09701156e-01 -6.09701156e-01
 -6.09701156e-01  5.39042578e+00  5.39042578e+00  5.39042578e+00
  1.58833713e+01  1.22021893e+02  7.41887614e+02]
E1 = -181.44510818167785  E_coul = 54.37720265413572
cycle= 5 E= -127.067905527542  delta_E= -1.42e-13  |g|= 4.99e-08  |ddm|= 4.05e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.44510818167785  E_coul = 54.37720265413572
  HOMO = -0.609701168505308  LUMO = 5.39042576760717
  mo_energy =
[-3.27166422e+01 -1.79960577e+00 -6.09701169e-01 -6.09701169e-01
 -6.09701169e-01  5.39042577e+00  5.39042577e+00  5.39042577e+00
  1.58833713e+01  1.22021893e+02  7.41887614e+02]
E1 = -181.4451082084564  E_coul = 54.37720268091411
Extra cycle  E= -127.067905527542  delta_E= -1.42e-13  |g|= 3.78e-09  |ddm|= 9.99e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.04527413587839
E1 = -181.4451082084564  E_coul = 54.37720268091411
init E= -127.067905527542
    CPU time for initialize scf      0.04 sec, wall time      0.05 sec
  HOMO = -0.609701166903064  LUMO = 5.39042577032067
  mo_energy =
[-3.27166422e+01 -1.79960577e+00 -6.09701167e-01 -6.09701167e-01
 -6.09701167e-01  5.39042577e+00  5.39042577e+00  5.39042577e+00
  1.58833713e+01  1.22021893e+02  7.41887614e+02]
E1 = -181.44510820278853  E_coul = 54.37720267524641
cycle= 1 E= -127.067905527542  delta_E= 1.56e-13  |g|= 7.74e-10  |ddm|= 9.68e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.44510820278853  E_coul = 54.37720267524641
  HOMO = -0.609701167258274  LUMO = 5.39042576975433
  mo_energy =
[-3.27166422e+01 -1.79960577e+00 -6.09701167e-01 -6.09701167e-01
 -6.09701167e-01  5.39042577e+00  5.39042577e+00  5.39042577e+00
  1.58833713e+01  1.22021893e+02  7.41887614e+02]
E1 = -181.44510820383445  E_coul = 54.377202676292306
Extra cycle  E= -127.067905527542  delta_E= -1.42e-14  |g|= 1.28e-10  |ddm|= 1.79e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.91801957 453.45876762  86.97708545  23.99179224   7.96058357
   5.34462667   0.90102771]
grad_E = [-4.15269990e-04 -9.27539545e-04  5.03278839e-05 -2.80295525e-04
  1.50134701e-04  1.00682459e-03 -1.93242094e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918271713101       1
[INPUT] 0    0    [1    /1   ]  453.458675298        1
[INPUT] 0    0    [1    /1   ]  87.0318083748        1
[INPUT] 0    0    [1    /1   ]  24.0038052073        1
[INPUT] 0    0    [1    /1   ]  7.96190699202        1
[INPUT] 1    0    [1    /1   ]  5.33859973196        1
[INPUT] 1    0    [1    /1   ]  0.900368087663       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.918271713100689, 1.0]], [0, [453.45867529781776, 1.0]], [0, [87.03180837481125, 1.0]], [0, [24.00380520726445, 1.0]], [0, [7.961906992018332, 1.0]], [1, [5.338599731956412, 1.0]], [1, [0.9003680876632184, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91827171]
bas 1, expnt(s) = [453.4586753]
bas 2, expnt(s) = [87.03180837]
bas 3, expnt(s) = [24.00380521]
bas 4, expnt(s) = [7.96190699]
bas 5, expnt(s) = [5.33859973]
bas 6, expnt(s) = [0.90036809]
CPU time:       114.61
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91827171
   2.36997317 453.4586753  248.26660791  87.03180837  71.99022483
  24.00380521  27.39839323   7.96190699  11.97506417   5.33859973
  23.67383372   0.90036809   2.55864191]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831694583511004
cond(S) = 44.02692469498177
E1 = -181.20939503085287  E_coul = 54.39974467760812
init E= -126.809650353245
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647268446779438  LUMO = 5.36367177285829
  mo_energy =
[-3.25595818e+01 -1.83674512e+00 -6.47268447e-01 -6.47268447e-01
 -6.47268447e-01  5.36367177e+00  5.36367177e+00  5.36367177e+00
  1.59378272e+01  1.22259839e+02  7.42340459e+02]
E1 = -181.32813619343455  E_coul = 54.260658155938955
cycle= 1 E= -127.067478037496  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122778
diis-c [-0.0150745  1.       ]
  HOMO = -0.616848227549525  LUMO = 5.37263786240711
  mo_energy =
[-3.27455324e+01 -1.80758827e+00 -6.16848228e-01 -6.16848228e-01
 -6.16848228e-01  5.37263786e+00  5.37263786e+00  5.37263786e+00
  1.58717909e+01  1.22070744e+02  7.42069319e+02]
E1 = -181.46266404052415  E_coul = 54.39476962059244
cycle= 2 E= -127.067894419932  delta_E= -0.000416  |g|= 0.0166  |ddm|= 0.0212
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203686
diis-c [-6.45743180e-05  1.32523495e-01  8.67476505e-01]
  HOMO = -0.609700136402646  LUMO = 5.38428427000243
  mo_energy =
[-3.27167125e+01 -1.79964905e+00 -6.09700136e-01 -6.09700136e-01
 -6.09700136e-01  5.38428427e+00  5.38428427e+00  5.38428427e+00
  1.58907149e+01  1.22100151e+02  7.42104201e+02]
E1 = -181.44029340818457  E_coul = 54.372383749457285
cycle= 3 E= -127.067909658727  delta_E= -1.52e-05  |g|= 0.000648  |ddm|= 0.00357
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000739731
diis-c [-7.36398064e-09 -4.64544488e-03  8.65261420e-03  9.95992831e-01]
  HOMO = -0.60995551699896  LUMO = 5.38389177667406
  mo_energy =
[-3.27176020e+01 -1.79993794e+00 -6.09955517e-01 -6.09955517e-01
 -6.09955517e-01  5.38389178e+00  5.38389178e+00  5.38389178e+00
  1.58900690e+01  1.22099334e+02  7.42103457e+02]
E1 = -181.44101867912477  E_coul = 54.373109002791146
cycle= 4 E= -127.067909676334  delta_E= -1.76e-08  |g|= 2.58e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.85408e-06
diis-c [-4.38206421e-13  5.31268277e-05 -3.47689453e-04 -1.55224473e-02
  1.01581701e+00]
  HOMO = -0.609954892885678  LUMO = 5.38389282076891
  mo_energy =
[-3.27175993e+01 -1.79993744e+00 -6.09954893e-01 -6.09954893e-01
 -6.09954893e-01  5.38389282e+00  5.38389282e+00  5.38389282e+00
  1.58900704e+01  1.22099337e+02  7.42103461e+02]
E1 = -181.44101625512204  E_coul = 54.373106578788246
cycle= 5 E= -127.067909676334  delta_E= -1.71e-13  |g|= 5.33e-08  |ddm|= 4.13e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.44101625512204  E_coul = 54.373106578788246
  HOMO = -0.609954905043122  LUMO = 5.38389280407133
  mo_energy =
[-3.27175994e+01 -1.79993746e+00 -6.09954905e-01 -6.09954905e-01
 -6.09954905e-01  5.38389280e+00  5.38389280e+00  5.38389280e+00
  1.58900704e+01  1.22099337e+02  7.42103461e+02]
E1 = -181.4410162799622  E_coul = 54.37310660362833
Extra cycle  E= -127.067909676334  delta_E= -9.95e-14  |g|= 3.78e-09  |ddm|= 1.06e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91827171 453.4586753   87.03180837  24.00380521   7.96190699
   5.33859973   0.90036809]
E = -127.06790967633388
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918271713101       1
[INPUT] 0    0    [1    /1   ]  453.458675298        1
[INPUT] 0    0    [1    /1   ]  87.0318083748        1
[INPUT] 0    0    [1    /1   ]  24.0038052073        1
[INPUT] 0    0    [1    /1   ]  7.96190699202        1
[INPUT] 1    0    [1    /1   ]  5.33859973196        1
[INPUT] 1    0    [1    /1   ]  0.900368087663       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.918271713100689, 1.0]], [0, [453.45867529781776, 1.0]], [0, [87.03180837481125, 1.0]], [0, [24.00380520726445, 1.0]], [0, [7.961906992018332, 1.0]], [1, [5.338599731956412, 1.0]], [1, [0.9003680876632184, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91827171]
bas 1, expnt(s) = [453.4586753]
bas 2, expnt(s) = [87.03180837]
bas 3, expnt(s) = [24.00380521]
bas 4, expnt(s) = [7.96190699]
bas 5, expnt(s) = [5.33859973]
bas 6, expnt(s) = [0.90036809]
CPU time:       115.21
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91827171
   2.36997317 453.4586753  248.26660791  87.03180837  71.99022483
  24.00380521  27.39839323   7.96190699  11.97506417   5.33859973
  23.67383372   0.90036809   2.55864191]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831694583511004
cond(S) = 44.02692469498177
E1 = -181.20939503085287  E_coul = 54.39974467760812
init E= -126.809650353245
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647268446779438  LUMO = 5.36367177285829
  mo_energy =
[-3.25595818e+01 -1.83674512e+00 -6.47268447e-01 -6.47268447e-01
 -6.47268447e-01  5.36367177e+00  5.36367177e+00  5.36367177e+00
  1.59378272e+01  1.22259839e+02  7.42340459e+02]
E1 = -181.32813619343455  E_coul = 54.260658155938955
cycle= 1 E= -127.067478037496  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122778
diis-c [-0.0150745  1.       ]
  HOMO = -0.616848227549525  LUMO = 5.37263786240711
  mo_energy =
[-3.27455324e+01 -1.80758827e+00 -6.16848228e-01 -6.16848228e-01
 -6.16848228e-01  5.37263786e+00  5.37263786e+00  5.37263786e+00
  1.58717909e+01  1.22070744e+02  7.42069319e+02]
E1 = -181.46266404052415  E_coul = 54.39476962059244
cycle= 2 E= -127.067894419932  delta_E= -0.000416  |g|= 0.0166  |ddm|= 0.0212
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203686
diis-c [-6.45743180e-05  1.32523495e-01  8.67476505e-01]
  HOMO = -0.609700136402646  LUMO = 5.38428427000243
  mo_energy =
[-3.27167125e+01 -1.79964905e+00 -6.09700136e-01 -6.09700136e-01
 -6.09700136e-01  5.38428427e+00  5.38428427e+00  5.38428427e+00
  1.58907149e+01  1.22100151e+02  7.42104201e+02]
E1 = -181.44029340818457  E_coul = 54.372383749457285
cycle= 3 E= -127.067909658727  delta_E= -1.52e-05  |g|= 0.000648  |ddm|= 0.00357
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000739731
diis-c [-7.36398064e-09 -4.64544488e-03  8.65261420e-03  9.95992831e-01]
  HOMO = -0.60995551699896  LUMO = 5.38389177667406
  mo_energy =
[-3.27176020e+01 -1.79993794e+00 -6.09955517e-01 -6.09955517e-01
 -6.09955517e-01  5.38389178e+00  5.38389178e+00  5.38389178e+00
  1.58900690e+01  1.22099334e+02  7.42103457e+02]
E1 = -181.44101867912477  E_coul = 54.373109002791146
cycle= 4 E= -127.067909676334  delta_E= -1.76e-08  |g|= 2.58e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.85408e-06
diis-c [-4.38206421e-13  5.31268277e-05 -3.47689453e-04 -1.55224473e-02
  1.01581701e+00]
  HOMO = -0.609954892885678  LUMO = 5.38389282076891
  mo_energy =
[-3.27175993e+01 -1.79993744e+00 -6.09954893e-01 -6.09954893e-01
 -6.09954893e-01  5.38389282e+00  5.38389282e+00  5.38389282e+00
  1.58900704e+01  1.22099337e+02  7.42103461e+02]
E1 = -181.44101625512204  E_coul = 54.373106578788246
cycle= 5 E= -127.067909676334  delta_E= -1.71e-13  |g|= 5.33e-08  |ddm|= 4.13e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.44101625512204  E_coul = 54.373106578788246
  HOMO = -0.609954905043122  LUMO = 5.38389280407133
  mo_energy =
[-3.27175994e+01 -1.79993746e+00 -6.09954905e-01 -6.09954905e-01
 -6.09954905e-01  5.38389280e+00  5.38389280e+00  5.38389280e+00
  1.58900704e+01  1.22099337e+02  7.42103461e+02]
E1 = -181.4410162799622  E_coul = 54.37310660362833
Extra cycle  E= -127.067909676334  delta_E= -9.95e-14  |g|= 3.78e-09  |ddm|= 1.06e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.02692469498177
E1 = -181.4410162799622  E_coul = 54.37310660362833
init E= -127.067909676334
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.609954903566345  LUMO = 5.38389280659175
  mo_energy =
[-3.27175994e+01 -1.79993746e+00 -6.09954904e-01 -6.09954904e-01
 -6.09954904e-01  5.38389281e+00  5.38389281e+00  5.38389281e+00
  1.58900704e+01  1.22099337e+02  7.42103461e+02]
E1 = -181.44101627460168  E_coul = 54.37310659826782
cycle= 1 E= -127.067909676334  delta_E= 1.42e-14  |g|= 7.46e-10  |ddm|= 9.57e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.44101627460168  E_coul = 54.37310659826782
  HOMO = -0.60995490390293  LUMO = 5.38389280605686
  mo_energy =
[-3.27175994e+01 -1.79993746e+00 -6.09954904e-01 -6.09954904e-01
 -6.09954904e-01  5.38389281e+00  5.38389281e+00  5.38389281e+00
  1.58900704e+01  1.22099337e+02  7.42103461e+02]
E1 = -181.44101627558553  E_coul = 54.37310659925159
Extra cycle  E= -127.067909676334  delta_E= -5.68e-14  |g|= 1.2e-10  |ddm|= 1.71e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [  0.91827171 453.4586753   87.03180837  24.00380521   7.96190699
   5.33859973   0.90036809]
grad_E = [ 1.17863588e-04 -9.30282474e-04  7.26530154e-05 -3.05013806e-04
  1.30560036e-04  3.67879772e-04  2.88581800e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918392372477       1
[INPUT] 0    0    [1    /1   ]  453.46033595         1
[INPUT] 0    0    [1    /1   ]  87.031753058         1
[INPUT] 0    0    [1    /1   ]  24.0021899348        1
[INPUT] 0    0    [1    /1   ]  7.96100320284        1
[INPUT] 1    0    [1    /1   ]  5.33579435436        1
[INPUT] 1    0    [1    /1   ]  0.900039569417       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9183923724774915, 1.0]], [0, [453.4603359502903, 1.0]], [0, [87.0317530579673, 1.0]], [0, [24.002189934807102, 1.0]], [0, [7.961003202836333, 1.0]], [1, [5.335794354364177, 1.0]], [1, [0.9000395694165754, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91839237]
bas 1, expnt(s) = [453.46033595]
bas 2, expnt(s) = [87.03175306]
bas 3, expnt(s) = [24.00218993]
bas 4, expnt(s) = [7.9610032]
bas 5, expnt(s) = [5.33579435]
bas 6, expnt(s) = [0.90003957]
CPU time:       118.08
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91839237
   2.37020672 453.46033595 248.26728981  87.03175306  71.99019051
  24.00218993  27.39701045   7.9610032   11.97404465   5.33579435
  23.65828431   0.90003957   2.557475  ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831816325421832
cond(S) = 44.022100121470984
E1 = -181.2093184382261  E_coul = 54.399532139921185
init E= -126.809786298305
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647249254457475  LUMO = 5.36069787409241
  mo_energy =
[-3.25597561e+01 -1.83673461e+00 -6.47249254e-01 -6.47249254e-01
 -6.47249254e-01  5.36069787e+00  5.36069787e+00  5.36069787e+00
  1.59361463e+01  1.22252410e+02  7.42333112e+02]
E1 = -181.32582305976885  E_coul = 54.258344895737956
cycle= 1 E= -127.067478164031  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122941
diis-c [-0.0151144  1.       ]
  HOMO = -0.616995456223138  LUMO = 5.36948442944851
  mo_energy =
[-3.27460460e+01 -1.80779067e+00 -6.16995456e-01 -6.16995456e-01
 -6.16995456e-01  5.36948443e+00  5.36948443e+00  5.36948443e+00
  1.58697953e+01  1.22062986e+02  7.42061660e+02]
E1 = -181.46066527704852  E_coul = 54.39276906546948
cycle= 2 E= -127.067896211579  delta_E= -0.000418  |g|= 0.0166  |ddm|= 0.0213
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0204139
diis-c [-6.46717761e-05  1.32657629e-01  8.67342371e-01]
  HOMO = -0.60983119199322  LUMO = 5.38115209187543
  mo_energy =
[-3.27171663e+01 -1.79983300e+00 -6.09831192e-01 -6.09831192e-01
 -6.09831192e-01  5.38115209e+00  5.38115209e+00  5.38115209e+00
  1.58887585e+01  1.22092453e+02  7.42096609e+02]
E1 = -181.4382364723402  E_coul = 54.37032494569377
cycle= 3 E= -127.067911526646  delta_E= -1.53e-05  |g|= 0.000648  |ddm|= 0.00358
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000739323
diis-c [-7.27148037e-09 -4.64896606e-03  8.55518685e-03  9.96093779e-01]
  HOMO = -0.610086539500292  LUMO = 5.38075988015359
  mo_energy =
[-3.27180552e+01 -1.80012207e+00 -6.10086540e-01 -6.10086540e-01
 -6.10086540e-01  5.38075988e+00  5.38075988e+00  5.38075988e+00
  1.58881125e+01  1.22091637e+02  7.42095867e+02]
E1 = -181.43896159618407  E_coul = 54.37105005194036
cycle= 4 E= -127.067911544244  delta_E= -1.76e-08  |g|= 2.59e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.84852e-06
diis-c [-4.60869936e-13  5.16906061e-05 -3.44595404e-04 -1.52476765e-02
  1.01554058e+00]
  HOMO = -0.610085919207687  LUMO = 5.38076091915201
  mo_energy =
[-3.27180525e+01 -1.80012158e+00 -6.10085919e-01 -6.10085919e-01
 -6.10085919e-01  5.38076092e+00  5.38076092e+00  5.38076092e+00
  1.58881139e+01  1.22091640e+02  7.42095871e+02]
E1 = -181.43895916994907  E_coul = 54.371047625705074
cycle= 5 E= -127.067911544244  delta_E= -2.84e-13  |g|= 5.58e-08  |ddm|= 4.17e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43895916994907  E_coul = 54.371047625705074
  HOMO = -0.610085931147588  LUMO = 5.38076090290686
  mo_energy =
[-3.27180526e+01 -1.80012160e+00 -6.10085931e-01 -6.10085931e-01
 -6.10085931e-01  5.38076090e+00  5.38076090e+00  5.38076090e+00
  1.58881139e+01  1.22091640e+02  7.42095871e+02]
E1 = -181.438959193376  E_coul = 54.37104764913206
Extra cycle  E= -127.067911544244  delta_E= 5.68e-14  |g|= 3.8e-09  |ddm|= 1.11e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [  0.91839237 453.46033595  87.03175306  24.00218993   7.9610032
   5.33579435   0.90003957]
E = -127.06791154424394
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918392372477       1
[INPUT] 0    0    [1    /1   ]  453.46033595         1
[INPUT] 0    0    [1    /1   ]  87.031753058         1
[INPUT] 0    0    [1    /1   ]  24.0021899348        1
[INPUT] 0    0    [1    /1   ]  7.96100320284        1
[INPUT] 1    0    [1    /1   ]  5.33579435436        1
[INPUT] 1    0    [1    /1   ]  0.900039569417       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9183923724774915, 1.0]], [0, [453.4603359502903, 1.0]], [0, [87.0317530579673, 1.0]], [0, [24.002189934807102, 1.0]], [0, [7.961003202836333, 1.0]], [1, [5.335794354364177, 1.0]], [1, [0.9000395694165754, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91839237]
bas 1, expnt(s) = [453.46033595]
bas 2, expnt(s) = [87.03175306]
bas 3, expnt(s) = [24.00218993]
bas 4, expnt(s) = [7.9610032]
bas 5, expnt(s) = [5.33579435]
bas 6, expnt(s) = [0.90003957]
CPU time:       118.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91839237
   2.37020672 453.46033595 248.26728981  87.03175306  71.99019051
  24.00218993  27.39701045   7.9610032   11.97404465   5.33579435
  23.65828431   0.90003957   2.557475  ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831816325421832
cond(S) = 44.022100121470984
E1 = -181.2093184382261  E_coul = 54.399532139921185
init E= -126.809786298305
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647249254457475  LUMO = 5.36069787409241
  mo_energy =
[-3.25597561e+01 -1.83673461e+00 -6.47249254e-01 -6.47249254e-01
 -6.47249254e-01  5.36069787e+00  5.36069787e+00  5.36069787e+00
  1.59361463e+01  1.22252410e+02  7.42333112e+02]
E1 = -181.32582305976885  E_coul = 54.258344895737956
cycle= 1 E= -127.067478164031  delta_E= -0.258  |g|= 0.106  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122941
diis-c [-0.0151144  1.       ]
  HOMO = -0.616995456223138  LUMO = 5.36948442944851
  mo_energy =
[-3.27460460e+01 -1.80779067e+00 -6.16995456e-01 -6.16995456e-01
 -6.16995456e-01  5.36948443e+00  5.36948443e+00  5.36948443e+00
  1.58697953e+01  1.22062986e+02  7.42061660e+02]
E1 = -181.46066527704852  E_coul = 54.39276906546948
cycle= 2 E= -127.067896211579  delta_E= -0.000418  |g|= 0.0166  |ddm|= 0.0213
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0204139
diis-c [-6.46717761e-05  1.32657629e-01  8.67342371e-01]
  HOMO = -0.60983119199322  LUMO = 5.38115209187543
  mo_energy =
[-3.27171663e+01 -1.79983300e+00 -6.09831192e-01 -6.09831192e-01
 -6.09831192e-01  5.38115209e+00  5.38115209e+00  5.38115209e+00
  1.58887585e+01  1.22092453e+02  7.42096609e+02]
E1 = -181.4382364723402  E_coul = 54.37032494569377
cycle= 3 E= -127.067911526646  delta_E= -1.53e-05  |g|= 0.000648  |ddm|= 0.00358
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000739323
diis-c [-7.27148037e-09 -4.64896606e-03  8.55518685e-03  9.96093779e-01]
  HOMO = -0.610086539500292  LUMO = 5.38075988015359
  mo_energy =
[-3.27180552e+01 -1.80012207e+00 -6.10086540e-01 -6.10086540e-01
 -6.10086540e-01  5.38075988e+00  5.38075988e+00  5.38075988e+00
  1.58881125e+01  1.22091637e+02  7.42095867e+02]
E1 = -181.43896159618407  E_coul = 54.37105005194036
cycle= 4 E= -127.067911544244  delta_E= -1.76e-08  |g|= 2.59e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.84852e-06
diis-c [-4.60869936e-13  5.16906061e-05 -3.44595404e-04 -1.52476765e-02
  1.01554058e+00]
  HOMO = -0.610085919207687  LUMO = 5.38076091915201
  mo_energy =
[-3.27180525e+01 -1.80012158e+00 -6.10085919e-01 -6.10085919e-01
 -6.10085919e-01  5.38076092e+00  5.38076092e+00  5.38076092e+00
  1.58881139e+01  1.22091640e+02  7.42095871e+02]
E1 = -181.43895916994907  E_coul = 54.371047625705074
cycle= 5 E= -127.067911544244  delta_E= -2.84e-13  |g|= 5.58e-08  |ddm|= 4.17e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43895916994907  E_coul = 54.371047625705074
  HOMO = -0.610085931147588  LUMO = 5.38076090290686
  mo_energy =
[-3.27180526e+01 -1.80012160e+00 -6.10085931e-01 -6.10085931e-01
 -6.10085931e-01  5.38076090e+00  5.38076090e+00  5.38076090e+00
  1.58881139e+01  1.22091640e+02  7.42095871e+02]
E1 = -181.438959193376  E_coul = 54.37104764913206
Extra cycle  E= -127.067911544244  delta_E= 5.68e-14  |g|= 3.8e-09  |ddm|= 1.11e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.022100121470984
E1 = -181.438959193376  E_coul = 54.37104764913206
init E= -127.067911544244
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.610085929762209  LUMO = 5.38076090528731
  mo_energy =
[-3.27180526e+01 -1.80012160e+00 -6.10085930e-01 -6.10085930e-01
 -6.10085930e-01  5.38076091e+00  5.38076091e+00  5.38076091e+00
  1.58881139e+01  1.22091640e+02  7.42095871e+02]
E1 = -181.43895918824109  E_coul = 54.371047643997144
cycle= 1 E= -127.067911544244  delta_E=    0  |g|= 7.26e-10  |ddm|= 9.53e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.43895918824109  E_coul = 54.371047643997144
  HOMO = -0.610085930085086  LUMO = 5.38076090477539
  mo_energy =
[-3.27180526e+01 -1.80012160e+00 -6.10085930e-01 -6.10085930e-01
 -6.10085930e-01  5.38076090e+00  5.38076090e+00  5.38076090e+00
  1.58881139e+01  1.22091640e+02  7.42095871e+02]
E1 = -181.43895918917914  E_coul = 54.37104764493515
Extra cycle  E= -127.067911544244  delta_E= -5.68e-14  |g|= 1.15e-10  |ddm|= 1.66e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.91839237 453.46033595  87.03175306  24.00218993   7.9610032
   5.33579435   0.90003957]
grad_E = [ 4.61240875e-04 -9.30383468e-04  7.44161416e-05 -3.09572997e-04
  1.27811361e-04  9.77648892e-05  1.99547517e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918620035259       1
[INPUT] 0    0    [1    /1   ]  453.466393701        1
[INPUT] 0    0    [1    /1   ]  87.0252455419        1
[INPUT] 0    0    [1    /1   ]  24.0009166195        1
[INPUT] 0    0    [1    /1   ]  7.96075583679        1
[INPUT] 1    0    [1    /1   ]  5.33089181928        1
[INPUT] 1    0    [1    /1   ]  0.89945577755        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9186200352588414, 1.0]], [0, [453.46639370080453, 1.0]], [0, [87.02524554190244, 1.0]], [0, [24.000916619461872, 1.0]], [0, [7.960755836790115, 1.0]], [1, [5.33089181928392, 1.0]], [1, [0.8994557775503818, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91862004]
bas 1, expnt(s) = [453.4663937]
bas 2, expnt(s) = [87.02524554]
bas 3, expnt(s) = [24.00091662]
bas 4, expnt(s) = [7.96075584]
bas 5, expnt(s) = [5.33089182]
bas 6, expnt(s) = [0.89945578]
CPU time:       121.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91862004
   2.37064738 453.4663937  248.26977725  87.02524554  71.98615335
  24.00091662  27.39592038   7.96075584  11.9737656    5.33089182
  23.63111585   0.89945578   2.5554016 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832030852069341
cond(S) = 44.02615829985701
E1 = -181.2091568185313  E_coul = 54.399154714873625
init E= -126.810002103658
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647216304608648  LUMO = 5.35546695903044
  mo_energy =
[-3.25600649e+01 -1.83671440e+00 -6.47216305e-01 -6.47216305e-01
 -6.47216305e-01  5.35546696e+00  5.35546696e+00  5.35546696e+00
  1.59362946e+01  1.22243780e+02  7.42314355e+02]
E1 = -181.3216768943604  E_coul = 54.25419692240675
cycle= 1 E= -127.067479971954  delta_E= -0.257  |g|= 0.106  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123242
diis-c [-0.01518856  1.        ]
  HOMO = -0.617259747389832  LUMO = 5.36392998299021
  mo_energy =
[-3.27469689e+01 -1.80815168e+00 -6.17259747e-01 -6.17259747e-01
 -6.17259747e-01  5.36392998e+00  5.36392998e+00  5.36392998e+00
  1.58693621e+01  1.22053762e+02  7.42042342e+02]
E1 = -181.45708442427397  E_coul = 54.38918338765312
cycle= 2 E= -127.067901036621  delta_E= -0.000421  |g|= 0.0167  |ddm|= 0.0214
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0204951
diis-c [-6.48870923e-05  1.32881293e-01  8.67118707e-01]
  HOMO = -0.61006631856764  LUMO = 5.3756362157401
  mo_energy =
[-3.27179811e+01 -1.80016061e+00 -6.10066319e-01 -6.10066319e-01
 -6.10066319e-01  5.37563622e+00  5.37563622e+00  5.37563622e+00
  1.58883977e+01  1.22083336e+02  7.42077413e+02]
E1 = -181.43455147050327  E_coul = 54.366634981843966
cycle= 3 E= -127.067916488659  delta_E= -1.55e-05  |g|= 0.000649  |ddm|= 0.0036
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738847
diis-c [-7.11185498e-09 -4.65376473e-03  8.40144748e-03  9.96252317e-01]
  HOMO = -0.610321691806595  LUMO = 5.37524435886935
  mo_energy =
[-3.27188691e+01 -1.80045008e+00 -6.10321692e-01 -6.10321692e-01
 -6.10321692e-01  5.37524436e+00  5.37524436e+00  5.37524436e+00
  1.58877513e+01  1.22082521e+02  7.42076673e+02]
E1 = -181.43527659015467  E_coul = 54.36736008390155
cycle= 4 E= -127.067916506253  delta_E= -1.76e-08  |g|= 2.6e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.83868e-06
diis-c [-5.04364150e-13  4.92048322e-05 -3.39591138e-04 -1.47822881e-02
  1.01507267e+00]
  HOMO = -0.610321079729657  LUMO = 5.37524538659617
  mo_energy =
[-3.27188665e+01 -1.80044962e+00 -6.10321080e-01 -6.10321080e-01
 -6.10321080e-01  5.37524539e+00  5.37524539e+00  5.37524539e+00
  1.58877527e+01  1.22082524e+02  7.42076677e+02]
E1 = -181.43527416441611  E_coul = 54.36735765816279
cycle= 5 E= -127.067916506253  delta_E= -2.13e-13  |g|= 6.02e-08  |ddm|= 4.25e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43527416441611  E_coul = 54.36735765816279
  HOMO = -0.610321091285128  LUMO = 5.37524537114619
  mo_energy =
[-3.27188665e+01 -1.80044964e+00 -6.10321091e-01 -6.10321091e-01
 -6.10321091e-01  5.37524537e+00  5.37524537e+00  5.37524537e+00
  1.58877526e+01  1.22082524e+02  7.42076677e+02]
E1 = -181.43527418535666  E_coul = 54.36735767910338
Extra cycle  E= -127.067916506253  delta_E= 4.26e-14  |g|= 3.91e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [  0.91862004 453.4663937   87.02524554  24.00091662   7.96075584
   5.33089182   0.89945578]
E = -127.06791650625328
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918620035259       1
[INPUT] 0    0    [1    /1   ]  453.466393701        1
[INPUT] 0    0    [1    /1   ]  87.0252455419        1
[INPUT] 0    0    [1    /1   ]  24.0009166195        1
[INPUT] 0    0    [1    /1   ]  7.96075583679        1
[INPUT] 1    0    [1    /1   ]  5.33089181928        1
[INPUT] 1    0    [1    /1   ]  0.89945577755        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9186200352588414, 1.0]], [0, [453.46639370080453, 1.0]], [0, [87.02524554190244, 1.0]], [0, [24.000916619461872, 1.0]], [0, [7.960755836790115, 1.0]], [1, [5.33089181928392, 1.0]], [1, [0.8994557775503818, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91862004]
bas 1, expnt(s) = [453.4663937]
bas 2, expnt(s) = [87.02524554]
bas 3, expnt(s) = [24.00091662]
bas 4, expnt(s) = [7.96075584]
bas 5, expnt(s) = [5.33089182]
bas 6, expnt(s) = [0.89945578]
CPU time:       122.14
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91862004
   2.37064738 453.4663937  248.26977725  87.02524554  71.98615335
  24.00091662  27.39592038   7.96075584  11.9737656    5.33089182
  23.63111585   0.89945578   2.5554016 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832030852069341
cond(S) = 44.02615829985701
E1 = -181.2091568185313  E_coul = 54.399154714873625
init E= -126.810002103658
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647216304608648  LUMO = 5.35546695903044
  mo_energy =
[-3.25600649e+01 -1.83671440e+00 -6.47216305e-01 -6.47216305e-01
 -6.47216305e-01  5.35546696e+00  5.35546696e+00  5.35546696e+00
  1.59362946e+01  1.22243780e+02  7.42314355e+02]
E1 = -181.3216768943604  E_coul = 54.25419692240675
cycle= 1 E= -127.067479971954  delta_E= -0.257  |g|= 0.106  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123242
diis-c [-0.01518856  1.        ]
  HOMO = -0.617259747389832  LUMO = 5.36392998299021
  mo_energy =
[-3.27469689e+01 -1.80815168e+00 -6.17259747e-01 -6.17259747e-01
 -6.17259747e-01  5.36392998e+00  5.36392998e+00  5.36392998e+00
  1.58693621e+01  1.22053762e+02  7.42042342e+02]
E1 = -181.45708442427397  E_coul = 54.38918338765312
cycle= 2 E= -127.067901036621  delta_E= -0.000421  |g|= 0.0167  |ddm|= 0.0214
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0204951
diis-c [-6.48870923e-05  1.32881293e-01  8.67118707e-01]
  HOMO = -0.61006631856764  LUMO = 5.3756362157401
  mo_energy =
[-3.27179811e+01 -1.80016061e+00 -6.10066319e-01 -6.10066319e-01
 -6.10066319e-01  5.37563622e+00  5.37563622e+00  5.37563622e+00
  1.58883977e+01  1.22083336e+02  7.42077413e+02]
E1 = -181.43455147050327  E_coul = 54.366634981843966
cycle= 3 E= -127.067916488659  delta_E= -1.55e-05  |g|= 0.000649  |ddm|= 0.0036
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738847
diis-c [-7.11185498e-09 -4.65376473e-03  8.40144748e-03  9.96252317e-01]
  HOMO = -0.610321691806595  LUMO = 5.37524435886935
  mo_energy =
[-3.27188691e+01 -1.80045008e+00 -6.10321692e-01 -6.10321692e-01
 -6.10321692e-01  5.37524436e+00  5.37524436e+00  5.37524436e+00
  1.58877513e+01  1.22082521e+02  7.42076673e+02]
E1 = -181.43527659015467  E_coul = 54.36736008390155
cycle= 4 E= -127.067916506253  delta_E= -1.76e-08  |g|= 2.6e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.83868e-06
diis-c [-5.04364150e-13  4.92048322e-05 -3.39591138e-04 -1.47822881e-02
  1.01507267e+00]
  HOMO = -0.610321079729657  LUMO = 5.37524538659617
  mo_energy =
[-3.27188665e+01 -1.80044962e+00 -6.10321080e-01 -6.10321080e-01
 -6.10321080e-01  5.37524539e+00  5.37524539e+00  5.37524539e+00
  1.58877527e+01  1.22082524e+02  7.42076677e+02]
E1 = -181.43527416441611  E_coul = 54.36735765816279
cycle= 5 E= -127.067916506253  delta_E= -2.13e-13  |g|= 6.02e-08  |ddm|= 4.25e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43527416441611  E_coul = 54.36735765816279
  HOMO = -0.610321091285128  LUMO = 5.37524537114619
  mo_energy =
[-3.27188665e+01 -1.80044964e+00 -6.10321091e-01 -6.10321091e-01
 -6.10321091e-01  5.37524537e+00  5.37524537e+00  5.37524537e+00
  1.58877526e+01  1.22082524e+02  7.42076677e+02]
E1 = -181.43527418535666  E_coul = 54.36735767910338
Extra cycle  E= -127.067916506253  delta_E= 4.26e-14  |g|= 3.91e-09  |ddm|= 1.2e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.02615829985701
E1 = -181.43527418535666  E_coul = 54.36735767910338
init E= -127.067916506253
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.610321090060563  LUMO = 5.3752453732805
  mo_energy =
[-3.27188665e+01 -1.80044964e+00 -6.10321090e-01 -6.10321090e-01
 -6.10321090e-01  5.37524537e+00  5.37524537e+00  5.37524537e+00
  1.58877526e+01  1.22082524e+02  7.42076677e+02]
E1 = -181.4352741806195  E_coul = 54.36735767436614
cycle= 1 E= -127.067916506253  delta_E= -8.53e-14  |g|= 6.93e-10  |ddm|= 9.55e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.4352741806195  E_coul = 54.36735767436614
  HOMO = -0.610321090359268  LUMO = 5.37524537280901
  mo_energy =
[-3.27188665e+01 -1.80044964e+00 -6.10321090e-01 -6.10321090e-01
 -6.10321090e-01  5.37524537e+00  5.37524537e+00  5.37524537e+00
  1.58877526e+01  1.22082524e+02  7.42076677e+02]
E1 = -181.43527418147679  E_coul = 54.367357675223445
Extra cycle  E= -127.067916506253  delta_E= 2.84e-14  |g|= 1.04e-10  |ddm|= 1.56e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [  0.91862004 453.4663937   87.02524554  24.00091662   7.96075584
   5.33089182   0.89945578]
grad_E = [ 1.07567103e-03 -9.29957656e-04  7.06718793e-05 -3.03724473e-04
  1.20501509e-04 -3.62610704e-04 -6.72512097e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918986879349       1
[INPUT] 0    0    [1    /1   ]  453.481975146        1
[INPUT] 0    0    [1    /1   ]  87.024018709         1
[INPUT] 0    0    [1    /1   ]  24.010565906         1
[INPUT] 0    0    [1    /1   ]  7.96558895107        1
[INPUT] 1    0    [1    /1   ]  5.32395061556        1
[INPUT] 1    0    [1    /1   ]  0.898626447463       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9189868793489268, 1.0]], [0, [453.48197514616777, 1.0]], [0, [87.02401870897437, 1.0]], [0, [24.01056590604134, 1.0]], [0, [7.9655889510655395, 1.0]], [1, [5.323950615560745, 1.0]], [1, [0.8986264474632425, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91898688]
bas 1, expnt(s) = [453.48197515]
bas 2, expnt(s) = [87.02401871]
bas 3, expnt(s) = [24.01056591]
bas 4, expnt(s) = [7.96558895]
bas 5, expnt(s) = [5.32395062]
bas 6, expnt(s) = [0.89862645]
CPU time:       124.95
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91898688
   2.37135737 453.48197515 248.27617527  87.02401871  71.98539223
  24.01056591  27.40418062   7.96558895  11.9792173    5.32395062
  23.59266035   0.89862645   2.55245673]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832329117425173
cond(S) = 44.062535620417556
E1 = -181.20878219887587  E_coul = 54.398555911088124
init E= -126.810226287788
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64717355284837  LUMO = 5.348046619318
  mo_energy =
[-3.25605380e+01 -1.83667270e+00 -6.47173553e-01 -6.47173553e-01
 -6.47173553e-01  5.34804662e+00  5.34804662e+00  5.34804662e+00
  1.59500551e+01  1.22287290e+02  7.42379811e+02]
E1 = -181.31575307956  E_coul = 54.24826632359586
cycle= 1 E= -127.067486755964  delta_E= -0.257  |g|= 0.107  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123673
diis-c [-0.01529498  1.        ]
  HOMO = -0.6176346311549  LUMO = 5.35605391683932
  mo_energy =
[-3.27483197e+01 -1.80864761e+00 -6.17634631e-01 -6.17634631e-01
 -6.17634631e-01  5.35605392e+00  5.35605392e+00  5.35605392e+00
  1.58822344e+01  1.22096412e+02  7.42107005e+02]
E1 = -181.45195010454773  E_coul = 54.38403803041237
cycle= 2 E= -127.067912074135  delta_E= -0.000425  |g|= 0.0168  |ddm|= 0.0215
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0206066
diis-c [-6.52216694e-05  1.33163670e-01  8.66836330e-01]
  HOMO = -0.610400267779809  LUMO = 5.36781394521513
  mo_energy =
[-3.27191805e+01 -1.80060907e+00 -6.10400268e-01 -6.10400268e-01
 -6.10400268e-01  5.36781395e+00  5.36781395e+00  5.36781395e+00
  1.59013789e+01  1.22126138e+02  7.42142245e+02]
E1 = -181.42927396467047  E_coul = 54.361346248998046
cycle= 3 E= -127.067927715672  delta_E= -1.56e-05  |g|= 0.000649  |ddm|= 0.00362
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738382
diis-c [-6.91585709e-09 -4.65709970e-03  8.21703043e-03  9.96440069e-01]
  HOMO = -0.610655740695397  LUMO = 5.36742246758031
  mo_energy =
[-3.27200677e+01 -1.80089914e+00 -6.10655741e-01 -6.10655741e-01
 -6.10655741e-01  5.36742247e+00  5.36742247e+00  5.36742247e+00
  1.59007316e+01  1.22125324e+02  7.42141507e+02]
E1 = -181.42999930076772  E_coul = 54.36207156749617
cycle= 4 E= -127.067927733272  delta_E= -1.76e-08  |g|= 2.62e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.82512e-06
diis-c [-5.63147019e-13  4.62089087e-05 -3.33607288e-04 -1.42368504e-02
  1.01452425e+00]
  HOMO = -0.610655141340161  LUMO = 5.36742347706176
  mo_energy =
[-3.27200651e+01 -1.80089872e+00 -6.10655141e-01 -6.10655141e-01
 -6.10655141e-01  5.36742348e+00  5.36742348e+00  5.36742348e+00
  1.59007329e+01  1.22125327e+02  7.42141511e+02]
E1 = -181.4299968835358  E_coul = 54.362069150264176
cycle= 5 E= -127.067927733272  delta_E= -8.53e-14  |g|= 6.56e-08  |ddm|= 4.34e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4299968835358  E_coul = 54.362069150264176
  HOMO = -0.610655152424449  LUMO = 5.36742346258124
  mo_energy =
[-3.27200651e+01 -1.80089874e+00 -6.10655152e-01 -6.10655152e-01
 -6.10655152e-01  5.36742346e+00  5.36742346e+00  5.36742346e+00
  1.59007329e+01  1.22125327e+02  7.42141511e+02]
E1 = -181.42999690144072  E_coul = 54.36206916816892
Extra cycle  E= -127.067927733272  delta_E= -1.71e-13  |g|= 4.12e-09  |ddm|= 1.31e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91898688 453.48197515  87.02401871  24.01056591   7.96558895
   5.32395062   0.89862645]
E = -127.0679277332718
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918986879349       1
[INPUT] 0    0    [1    /1   ]  453.481975146        1
[INPUT] 0    0    [1    /1   ]  87.024018709         1
[INPUT] 0    0    [1    /1   ]  24.010565906         1
[INPUT] 0    0    [1    /1   ]  7.96558895107        1
[INPUT] 1    0    [1    /1   ]  5.32395061556        1
[INPUT] 1    0    [1    /1   ]  0.898626447463       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9189868793489268, 1.0]], [0, [453.48197514616777, 1.0]], [0, [87.02401870897437, 1.0]], [0, [24.01056590604134, 1.0]], [0, [7.9655889510655395, 1.0]], [1, [5.323950615560745, 1.0]], [1, [0.8986264474632425, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91898688]
bas 1, expnt(s) = [453.48197515]
bas 2, expnt(s) = [87.02401871]
bas 3, expnt(s) = [24.01056591]
bas 4, expnt(s) = [7.96558895]
bas 5, expnt(s) = [5.32395062]
bas 6, expnt(s) = [0.89862645]
CPU time:       125.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91898688
   2.37135737 453.48197515 248.27617527  87.02401871  71.98539223
  24.01056591  27.40418062   7.96558895  11.9792173    5.32395062
  23.59266035   0.89862645   2.55245673]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832329117425173
cond(S) = 44.062535620417556
E1 = -181.20878219887587  E_coul = 54.398555911088124
init E= -126.810226287788
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64717355284837  LUMO = 5.348046619318
  mo_energy =
[-3.25605380e+01 -1.83667270e+00 -6.47173553e-01 -6.47173553e-01
 -6.47173553e-01  5.34804662e+00  5.34804662e+00  5.34804662e+00
  1.59500551e+01  1.22287290e+02  7.42379811e+02]
E1 = -181.31575307956  E_coul = 54.24826632359586
cycle= 1 E= -127.067486755964  delta_E= -0.257  |g|= 0.107  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123673
diis-c [-0.01529498  1.        ]
  HOMO = -0.6176346311549  LUMO = 5.35605391683932
  mo_energy =
[-3.27483197e+01 -1.80864761e+00 -6.17634631e-01 -6.17634631e-01
 -6.17634631e-01  5.35605392e+00  5.35605392e+00  5.35605392e+00
  1.58822344e+01  1.22096412e+02  7.42107005e+02]
E1 = -181.45195010454773  E_coul = 54.38403803041237
cycle= 2 E= -127.067912074135  delta_E= -0.000425  |g|= 0.0168  |ddm|= 0.0215
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0206066
diis-c [-6.52216694e-05  1.33163670e-01  8.66836330e-01]
  HOMO = -0.610400267779809  LUMO = 5.36781394521513
  mo_energy =
[-3.27191805e+01 -1.80060907e+00 -6.10400268e-01 -6.10400268e-01
 -6.10400268e-01  5.36781395e+00  5.36781395e+00  5.36781395e+00
  1.59013789e+01  1.22126138e+02  7.42142245e+02]
E1 = -181.42927396467047  E_coul = 54.361346248998046
cycle= 3 E= -127.067927715672  delta_E= -1.56e-05  |g|= 0.000649  |ddm|= 0.00362
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738382
diis-c [-6.91585709e-09 -4.65709970e-03  8.21703043e-03  9.96440069e-01]
  HOMO = -0.610655740695397  LUMO = 5.36742246758031
  mo_energy =
[-3.27200677e+01 -1.80089914e+00 -6.10655741e-01 -6.10655741e-01
 -6.10655741e-01  5.36742247e+00  5.36742247e+00  5.36742247e+00
  1.59007316e+01  1.22125324e+02  7.42141507e+02]
E1 = -181.42999930076772  E_coul = 54.36207156749617
cycle= 4 E= -127.067927733272  delta_E= -1.76e-08  |g|= 2.62e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.82512e-06
diis-c [-5.63147019e-13  4.62089087e-05 -3.33607288e-04 -1.42368504e-02
  1.01452425e+00]
  HOMO = -0.610655141340161  LUMO = 5.36742347706176
  mo_energy =
[-3.27200651e+01 -1.80089872e+00 -6.10655141e-01 -6.10655141e-01
 -6.10655141e-01  5.36742348e+00  5.36742348e+00  5.36742348e+00
  1.59007329e+01  1.22125327e+02  7.42141511e+02]
E1 = -181.4299968835358  E_coul = 54.362069150264176
cycle= 5 E= -127.067927733272  delta_E= -8.53e-14  |g|= 6.56e-08  |ddm|= 4.34e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4299968835358  E_coul = 54.362069150264176
  HOMO = -0.610655152424449  LUMO = 5.36742346258124
  mo_energy =
[-3.27200651e+01 -1.80089874e+00 -6.10655152e-01 -6.10655152e-01
 -6.10655152e-01  5.36742346e+00  5.36742346e+00  5.36742346e+00
  1.59007329e+01  1.22125327e+02  7.42141511e+02]
E1 = -181.42999690144072  E_coul = 54.36206916816892
Extra cycle  E= -127.067927733272  delta_E= -1.71e-13  |g|= 4.12e-09  |ddm|= 1.31e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.062535620417556
E1 = -181.42999690144072  E_coul = 54.36206916816892
init E= -127.067927733272
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.610655151396265  LUMO = 5.36742346441474
  mo_energy =
[-3.27200651e+01 -1.80089874e+00 -6.10655151e-01 -6.10655151e-01
 -6.10655151e-01  5.36742346e+00  5.36742346e+00  5.36742346e+00
  1.59007329e+01  1.22125327e+02  7.42141511e+02]
E1 = -181.42999689719093  E_coul = 54.362069163919294
cycle= 1 E= -127.067927733272  delta_E= 1.71e-13  |g|= 6.55e-10  |ddm|= 9.74e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.42999689719093  E_coul = 54.362069163919294
  HOMO = -0.610655151665331  LUMO = 5.36742346399276
  mo_energy =
[-3.27200651e+01 -1.80089874e+00 -6.10655152e-01 -6.10655152e-01
 -6.10655152e-01  5.36742346e+00  5.36742346e+00  5.36742346e+00
  1.59007329e+01  1.22125327e+02  7.42141511e+02]
E1 = -181.42999689794937  E_coul = 54.36206916467763
Extra cycle  E= -127.067927733272  delta_E= -1.14e-13  |g|= 9.23e-11  |ddm|= 1.45e-10
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [  0.91898688 453.48197515  87.02401871  24.01056591   7.96558895
   5.32395062   0.89862645]
grad_E = [ 1.89812142e-03 -9.28881824e-04  5.53431267e-05 -2.64860422e-04
  9.72986478e-05 -1.01311311e-03 -4.87597205e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.919631647956       1
[INPUT] 0    0    [1    /1   ]  453.522000306        1
[INPUT] 0    0    [1    /1   ]  87.0514414986        1
[INPUT] 0    0    [1    /1   ]  24.056178966         1
[INPUT] 0    0    [1    /1   ]  7.98630942129        1
[INPUT] 1    0    [1    /1   ]  5.3138900712         1
[INPUT] 1    0    [1    /1   ]  0.89742642938        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9196316479559719, 1.0]], [0, [453.52200030601364, 1.0]], [0, [87.05144149863757, 1.0]], [0, [24.056178965960903, 1.0]], [0, [7.9863094212869825, 1.0]], [1, [5.31389007120043, 1.0]], [1, [0.8974264293795479, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91963165]
bas 1, expnt(s) = [453.52200031]
bas 2, expnt(s) = [87.0514415]
bas 3, expnt(s) = [24.05617897]
bas 4, expnt(s) = [7.98630942]
bas 5, expnt(s) = [5.31389007]
bas 6, expnt(s) = [0.89742643]
CPU time:       128.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91963165
   2.37260508 453.52200031 248.29261008  87.0514415   72.00240445
  24.05617897  27.44321631   7.98630942  12.00258039   5.31389007
  23.5369454    0.89742643   2.54819678]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832743803085837
cond(S) = 44.19208449503771
E1 = -181.20785770616783  E_coul = 54.39751675815797
init E= -126.81034094801
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647121736991902  LUMO = 5.33728564857933
  mo_energy =
[-3.25613205e+01 -1.83657633e+00 -6.47121737e-01 -6.47121737e-01
 -6.47121737e-01  5.33728565e+00  5.33728565e+00  5.33728565e+00
  1.60062697e+01  1.22507275e+02  7.42746546e+02]
E1 = -181.30713299651913  E_coul = 54.23962594273733
cycle= 1 E= -127.067507053782  delta_E= -0.257  |g|= 0.107  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124291
diis-c [-0.01544819  1.        ]
  HOMO = -0.61817191284718  LUMO = 5.34464969920021
  mo_energy =
[-3.27503747e+01 -1.80931486e+00 -6.18171913e-01 -6.18171913e-01
 -6.18171913e-01  5.34464970e+00  5.34464970e+00  5.34464970e+00
  1.59370055e+01  1.22315111e+02  7.42472610e+02]
E1 = -181.44442349389132  E_coul = 54.37648514644179
cycle= 2 E= -127.06793834745  delta_E= -0.000431  |g|= 0.0169  |ddm|= 0.0217
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0207554
diis-c [-6.57455547e-05  1.33485283e-01  8.66514717e-01]
  HOMO = -0.610880324263534  LUMO = 5.35648370154217
  mo_energy =
[-3.27210253e+01 -1.80120832e+00 -6.10880324e-01 -6.10880324e-01
 -6.10880324e-01  5.35648370e+00  5.35648370e+00  5.35648370e+00
  1.59563218e+01  1.22345050e+02  7.42508084e+02]
E1 = -181.4215553871683  E_coul = 54.353601141654465
cycle= 3 E= -127.067954245514  delta_E= -1.59e-05  |g|= 0.00065  |ddm|= 0.00365
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738063
diis-c [-6.70842839e-09 -4.65294268e-03  8.03032999e-03  9.96622613e-01]
  HOMO = -0.611136039897364  LUMO = 5.35609255687965
  mo_energy =
[-3.27219120e+01 -1.80149922e+00 -6.11136040e-01 -6.11136040e-01
 -6.11136040e-01  5.35609256e+00  5.35609256e+00  5.35609256e+00
  1.59556726e+01  1.22344237e+02  7.42507348e+02]
E1 = -181.42228142545287  E_coul = 54.3543271623163
cycle= 4 E= -127.067954263137  delta_E= -1.76e-08  |g|= 2.64e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.79933e-06
diis-c [-6.21583691e-13  4.33344717e-05 -3.27217171e-04 -1.37498530e-02
  1.01403374e+00]
  HOMO = -0.611135460827133  LUMO = 5.35609353535253
  mo_energy =
[-3.27219095e+01 -1.80149883e+00 -6.11135461e-01 -6.11135461e-01
 -6.11135461e-01  5.35609354e+00  5.35609354e+00  5.35609354e+00
  1.59556739e+01  1.22344240e+02  7.42507352e+02]
E1 = -181.42227903939423  E_coul = 54.3543247762573
cycle= 5 E= -127.067954263137  delta_E= -3.69e-13  |g|= 7.06e-08  |ddm|= 4.41e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.42227903939423  E_coul = 54.3543247762573
  HOMO = -0.611135471440124  LUMO = 5.35609352182627
  mo_energy =
[-3.27219095e+01 -1.80149885e+00 -6.11135471e-01 -6.11135471e-01
 -6.11135471e-01  5.35609352e+00  5.35609352e+00  5.35609352e+00
  1.59556739e+01  1.22344240e+02  7.42507352e+02]
E1 = -181.4222790543514  E_coul = 54.354324791214474
Extra cycle  E= -127.067954263137  delta_E=    0  |g|= 4.37e-09  |ddm|= 1.41e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91963165 453.52200031  87.0514415   24.05617897   7.98630942
   5.31389007   0.89742643]
E = -127.06795426313693
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.919631647956       1
[INPUT] 0    0    [1    /1   ]  453.522000306        1
[INPUT] 0    0    [1    /1   ]  87.0514414986        1
[INPUT] 0    0    [1    /1   ]  24.056178966         1
[INPUT] 0    0    [1    /1   ]  7.98630942129        1
[INPUT] 1    0    [1    /1   ]  5.3138900712         1
[INPUT] 1    0    [1    /1   ]  0.89742642938        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9196316479559719, 1.0]], [0, [453.52200030601364, 1.0]], [0, [87.05144149863757, 1.0]], [0, [24.056178965960903, 1.0]], [0, [7.9863094212869825, 1.0]], [1, [5.31389007120043, 1.0]], [1, [0.8974264293795479, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91963165]
bas 1, expnt(s) = [453.52200031]
bas 2, expnt(s) = [87.0514415]
bas 3, expnt(s) = [24.05617897]
bas 4, expnt(s) = [7.98630942]
bas 5, expnt(s) = [5.31389007]
bas 6, expnt(s) = [0.89742643]
CPU time:       129.08
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91963165
   2.37260508 453.52200031 248.29261008  87.0514415   72.00240445
  24.05617897  27.44321631   7.98630942  12.00258039   5.31389007
  23.5369454    0.89742643   2.54819678]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832743803085837
cond(S) = 44.19208449503771
E1 = -181.20785770616783  E_coul = 54.39751675815797
init E= -126.81034094801
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647121736991902  LUMO = 5.33728564857933
  mo_energy =
[-3.25613205e+01 -1.83657633e+00 -6.47121737e-01 -6.47121737e-01
 -6.47121737e-01  5.33728565e+00  5.33728565e+00  5.33728565e+00
  1.60062697e+01  1.22507275e+02  7.42746546e+02]
E1 = -181.30713299651913  E_coul = 54.23962594273733
cycle= 1 E= -127.067507053782  delta_E= -0.257  |g|= 0.107  |ddm|= 0.343
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124291
diis-c [-0.01544819  1.        ]
  HOMO = -0.61817191284718  LUMO = 5.34464969920021
  mo_energy =
[-3.27503747e+01 -1.80931486e+00 -6.18171913e-01 -6.18171913e-01
 -6.18171913e-01  5.34464970e+00  5.34464970e+00  5.34464970e+00
  1.59370055e+01  1.22315111e+02  7.42472610e+02]
E1 = -181.44442349389132  E_coul = 54.37648514644179
cycle= 2 E= -127.06793834745  delta_E= -0.000431  |g|= 0.0169  |ddm|= 0.0217
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0207554
diis-c [-6.57455547e-05  1.33485283e-01  8.66514717e-01]
  HOMO = -0.610880324263534  LUMO = 5.35648370154217
  mo_energy =
[-3.27210253e+01 -1.80120832e+00 -6.10880324e-01 -6.10880324e-01
 -6.10880324e-01  5.35648370e+00  5.35648370e+00  5.35648370e+00
  1.59563218e+01  1.22345050e+02  7.42508084e+02]
E1 = -181.4215553871683  E_coul = 54.353601141654465
cycle= 3 E= -127.067954245514  delta_E= -1.59e-05  |g|= 0.00065  |ddm|= 0.00365
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738063
diis-c [-6.70842839e-09 -4.65294268e-03  8.03032999e-03  9.96622613e-01]
  HOMO = -0.611136039897364  LUMO = 5.35609255687965
  mo_energy =
[-3.27219120e+01 -1.80149922e+00 -6.11136040e-01 -6.11136040e-01
 -6.11136040e-01  5.35609256e+00  5.35609256e+00  5.35609256e+00
  1.59556726e+01  1.22344237e+02  7.42507348e+02]
E1 = -181.42228142545287  E_coul = 54.3543271623163
cycle= 4 E= -127.067954263137  delta_E= -1.76e-08  |g|= 2.64e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.79933e-06
diis-c [-6.21583691e-13  4.33344717e-05 -3.27217171e-04 -1.37498530e-02
  1.01403374e+00]
  HOMO = -0.611135460827133  LUMO = 5.35609353535253
  mo_energy =
[-3.27219095e+01 -1.80149883e+00 -6.11135461e-01 -6.11135461e-01
 -6.11135461e-01  5.35609354e+00  5.35609354e+00  5.35609354e+00
  1.59556739e+01  1.22344240e+02  7.42507352e+02]
E1 = -181.42227903939423  E_coul = 54.3543247762573
cycle= 5 E= -127.067954263137  delta_E= -3.69e-13  |g|= 7.06e-08  |ddm|= 4.41e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.42227903939423  E_coul = 54.3543247762573
  HOMO = -0.611135471440124  LUMO = 5.35609352182627
  mo_energy =
[-3.27219095e+01 -1.80149885e+00 -6.11135471e-01 -6.11135471e-01
 -6.11135471e-01  5.35609352e+00  5.35609352e+00  5.35609352e+00
  1.59556739e+01  1.22344240e+02  7.42507352e+02]
E1 = -181.4222790543514  E_coul = 54.354324791214474
Extra cycle  E= -127.067954263137  delta_E=    0  |g|= 4.37e-09  |ddm|= 1.41e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.19208449503771
E1 = -181.4222790543514  E_coul = 54.354324791214474
init E= -127.067954263137
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.611135470602557  LUMO = 5.356093523366
  mo_energy =
[-3.27219095e+01 -1.80149885e+00 -6.11135471e-01 -6.11135471e-01
 -6.11135471e-01  5.35609352e+00  5.35609352e+00  5.35609352e+00
  1.59556739e+01  1.22344240e+02  7.42507352e+02]
E1 = -181.42227905058155  E_coul = 54.354324787444746
cycle= 1 E= -127.067954263137  delta_E= 1.14e-13  |g|= 6.18e-10  |ddm|= 1e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.42227905058155  E_coul = 54.354324787444746
  HOMO = -0.611135470842433  LUMO = 5.35609352299272
  mo_energy =
[-3.27219095e+01 -1.80149885e+00 -6.11135471e-01 -6.11135471e-01
 -6.11135471e-01  5.35609352e+00  5.35609352e+00  5.35609352e+00
  1.59556739e+01  1.22344240e+02  7.42507352e+02]
E1 = -181.42227905124298  E_coul = 54.354324788106126
Extra cycle  E= -127.067954263137  delta_E= -4.26e-14  |g|= 8.04e-11  |ddm|= 1.34e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.13 sec
exp = [  0.91963165 453.52200031  87.0514415   24.05617897   7.98630942
   5.31389007   0.89742643]
grad_E = [ 2.94721449e-03 -9.26543026e-04  1.10752481e-05 -1.35201251e-04
  3.04798788e-05 -1.96336432e-03 -1.10494676e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.920547873566       1
[INPUT] 0    0    [1    /1   ]  453.60388537         1
[INPUT] 0    0    [1    /1   ]  87.1515912463        1
[INPUT] 0    0    [1    /1   ]  24.1777923857        1
[INPUT] 0    0    [1    /1   ]  8.03968872225        1
[INPUT] 1    0    [1    /1   ]  5.30371079933        1
[INPUT] 1    0    [1    /1   ]  0.896220889756       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9205478735655324, 1.0]], [0, [453.6038853696062, 1.0]], [0, [87.15159124631757, 1.0]], [0, [24.177792385713026, 1.0]], [0, [8.039688722249734, 1.0]], [1, [5.303710799325265, 1.0]], [1, [0.8962208897561359, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92054787]
bas 1, expnt(s) = [453.60388537]
bas 2, expnt(s) = [87.15159125]
bas 3, expnt(s) = [24.17779239]
bas 4, expnt(s) = [8.03968872]
bas 5, expnt(s) = [5.3037108]
bas 6, expnt(s) = [0.89622089]
CPU time:       131.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92054787
   2.37437772 453.60388537 248.32623192  87.15159125  72.06452278
  24.17779239  27.54720286   8.03968872  12.06269786   5.3037108
  23.48059978   0.89622089   2.54391866]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.833122098927554
cond(S) = 44.50381998508248
E1 = -181.20606538527883  E_coul = 54.39609157977294
init E= -126.809973805506
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647092417603347  LUMO = 5.32639300333074
  mo_energy =
[-3.25623256e+01 -1.83639532e+00 -6.47092418e-01 -6.47092418e-01
 -6.47092418e-01  5.32639300e+00  5.32639300e+00  5.32639300e+00
  1.61493276e+01  1.23104917e+02  7.43773330e+02]
E1 = -181.2984149385779  E_coul = 54.23086332008655
cycle= 1 E= -127.067551618491  delta_E= -0.258  |g|= 0.108  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124886
diis-c [-0.01559647  1.        ]
  HOMO = -0.618696678076999  LUMO = 5.33315191866853
  mo_energy =
[-3.27526567e+01 -1.80986561e+00 -6.18696678e-01 -6.18696678e-01
 -6.18696678e-01  5.33315192e+00  5.33315192e+00  5.33315192e+00
  1.60782426e+01  1.22911370e+02  7.43498314e+02]
E1 = -181.43667440186582  E_coul = 54.36868604060704
cycle= 2 E= -127.067988361259  delta_E= -0.000437  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208732
diis-c [-6.63429550e-05  1.33611434e-01  8.66388566e-01]
  HOMO = -0.61135308019135  LUMO = 5.34505016371928
  mo_energy =
[-3.27231198e+01 -1.80169333e+00 -6.11353080e-01 -6.11353080e-01
 -6.11353080e-01  5.34505016e+00  5.34505016e+00  5.34505016e+00
  1.60977636e+01  1.22941511e+02  7.43533989e+02]
E1 = -181.4136522861263  E_coul = 54.345647817567254
cycle= 3 E= -127.068004468559  delta_E= -1.61e-05  |g|= 0.000651  |ddm|= 0.00368
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738417
diis-c [-6.65793951e-09 -4.62796263e-03  8.02075937e-03  9.96607203e-01]
  HOMO = -0.611609229096972  LUMO = 5.34465891889408
  mo_energy =
[-3.27240076e+01 -1.80198490e+00 -6.11609229e-01 -6.11609229e-01
 -6.11609229e-01  5.34465892e+00  5.34465892e+00  5.34465892e+00
  1.60971114e+01  1.22940697e+02  7.43533252e+02]
E1 = -181.41437981369197  E_coul = 54.346375327455206
cycle= 4 E= -127.068004486237  delta_E= -1.77e-08  |g|= 2.61e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7458e-06
diis-c [-5.88820501e-13  4.36857037e-05 -3.24840387e-04 -1.39220212e-02
  1.01420318e+00]
  HOMO = -0.6116086742376  LUMO = 5.3446598564004
  mo_energy =
[-3.27240051e+01 -1.80198453e+00 -6.11608674e-01 -6.11608674e-01
 -6.11608674e-01  5.34465986e+00  5.34465986e+00  5.34465986e+00
  1.60971126e+01  1.22940700e+02  7.43533256e+02]
E1 = -181.41437750146181  E_coul = 54.34637301522488
cycle= 5 E= -127.068004486237  delta_E= -1.71e-13  |g|= 6.83e-08  |ddm|= 4.3e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41437750146181  E_coul = 54.34637301522488
  HOMO = -0.611608684795469  LUMO = 5.34465984291202
  mo_energy =
[-3.27240051e+01 -1.80198455e+00 -6.11608685e-01 -6.11608685e-01
 -6.11608685e-01  5.34465984e+00  5.34465984e+00  5.34465984e+00
  1.60971126e+01  1.22940700e+02  7.43533256e+02]
E1 = -181.41437751667428  E_coul = 54.34637303043733
Extra cycle  E= -127.068004486237  delta_E= -2.84e-14  |g|= 4.2e-09  |ddm|= 1.36e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [  0.92054787 453.60388537  87.15159125  24.17779239   8.03968872
   5.3037108    0.89622089]
E = -127.06800448623696
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.920547873566       1
[INPUT] 0    0    [1    /1   ]  453.60388537         1
[INPUT] 0    0    [1    /1   ]  87.1515912463        1
[INPUT] 0    0    [1    /1   ]  24.1777923857        1
[INPUT] 0    0    [1    /1   ]  8.03968872225        1
[INPUT] 1    0    [1    /1   ]  5.30371079933        1
[INPUT] 1    0    [1    /1   ]  0.896220889756       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9205478735655324, 1.0]], [0, [453.6038853696062, 1.0]], [0, [87.15159124631757, 1.0]], [0, [24.177792385713026, 1.0]], [0, [8.039688722249734, 1.0]], [1, [5.303710799325265, 1.0]], [1, [0.8962208897561359, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92054787]
bas 1, expnt(s) = [453.60388537]
bas 2, expnt(s) = [87.15159125]
bas 3, expnt(s) = [24.17779239]
bas 4, expnt(s) = [8.03968872]
bas 5, expnt(s) = [5.3037108]
bas 6, expnt(s) = [0.89622089]
CPU time:       132.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92054787
   2.37437772 453.60388537 248.32623192  87.15159125  72.06452278
  24.17779239  27.54720286   8.03968872  12.06269786   5.3037108
  23.48059978   0.89622089   2.54391866]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.833122098927554
cond(S) = 44.50381998508248
E1 = -181.20606538527883  E_coul = 54.39609157977294
init E= -126.809973805506
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647092417603347  LUMO = 5.32639300333074
  mo_energy =
[-3.25623256e+01 -1.83639532e+00 -6.47092418e-01 -6.47092418e-01
 -6.47092418e-01  5.32639300e+00  5.32639300e+00  5.32639300e+00
  1.61493276e+01  1.23104917e+02  7.43773330e+02]
E1 = -181.2984149385779  E_coul = 54.23086332008655
cycle= 1 E= -127.067551618491  delta_E= -0.258  |g|= 0.108  |ddm|= 0.344
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124886
diis-c [-0.01559647  1.        ]
  HOMO = -0.618696678076999  LUMO = 5.33315191866853
  mo_energy =
[-3.27526567e+01 -1.80986561e+00 -6.18696678e-01 -6.18696678e-01
 -6.18696678e-01  5.33315192e+00  5.33315192e+00  5.33315192e+00
  1.60782426e+01  1.22911370e+02  7.43498314e+02]
E1 = -181.43667440186582  E_coul = 54.36868604060704
cycle= 2 E= -127.067988361259  delta_E= -0.000437  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208732
diis-c [-6.63429550e-05  1.33611434e-01  8.66388566e-01]
  HOMO = -0.61135308019135  LUMO = 5.34505016371928
  mo_energy =
[-3.27231198e+01 -1.80169333e+00 -6.11353080e-01 -6.11353080e-01
 -6.11353080e-01  5.34505016e+00  5.34505016e+00  5.34505016e+00
  1.60977636e+01  1.22941511e+02  7.43533989e+02]
E1 = -181.4136522861263  E_coul = 54.345647817567254
cycle= 3 E= -127.068004468559  delta_E= -1.61e-05  |g|= 0.000651  |ddm|= 0.00368
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738417
diis-c [-6.65793951e-09 -4.62796263e-03  8.02075937e-03  9.96607203e-01]
  HOMO = -0.611609229096972  LUMO = 5.34465891889408
  mo_energy =
[-3.27240076e+01 -1.80198490e+00 -6.11609229e-01 -6.11609229e-01
 -6.11609229e-01  5.34465892e+00  5.34465892e+00  5.34465892e+00
  1.60971114e+01  1.22940697e+02  7.43533252e+02]
E1 = -181.41437981369197  E_coul = 54.346375327455206
cycle= 4 E= -127.068004486237  delta_E= -1.77e-08  |g|= 2.61e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7458e-06
diis-c [-5.88820501e-13  4.36857037e-05 -3.24840387e-04 -1.39220212e-02
  1.01420318e+00]
  HOMO = -0.6116086742376  LUMO = 5.3446598564004
  mo_energy =
[-3.27240051e+01 -1.80198453e+00 -6.11608674e-01 -6.11608674e-01
 -6.11608674e-01  5.34465986e+00  5.34465986e+00  5.34465986e+00
  1.60971126e+01  1.22940700e+02  7.43533256e+02]
E1 = -181.41437750146181  E_coul = 54.34637301522488
cycle= 5 E= -127.068004486237  delta_E= -1.71e-13  |g|= 6.83e-08  |ddm|= 4.3e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41437750146181  E_coul = 54.34637301522488
  HOMO = -0.611608684795469  LUMO = 5.34465984291202
  mo_energy =
[-3.27240051e+01 -1.80198455e+00 -6.11608685e-01 -6.11608685e-01
 -6.11608685e-01  5.34465984e+00  5.34465984e+00  5.34465984e+00
  1.60971126e+01  1.22940700e+02  7.43533256e+02]
E1 = -181.41437751667428  E_coul = 54.34637303043733
Extra cycle  E= -127.068004486237  delta_E= -2.84e-14  |g|= 4.2e-09  |ddm|= 1.36e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.50381998508248
E1 = -181.41437751667428  E_coul = 54.34637303043733
init E= -127.068004486237
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.611608683940217  LUMO = 5.34465984447002
  mo_energy =
[-3.27240051e+01 -1.80198455e+00 -6.11608684e-01 -6.11608684e-01
 -6.11608684e-01  5.34465984e+00  5.34465984e+00  5.34465984e+00
  1.60971126e+01  1.22940700e+02  7.43533256e+02]
E1 = -181.41437751288905  E_coul = 54.34637302665208
cycle= 1 E= -127.068004486237  delta_E=    0  |g|= 6.09e-10  |ddm|= 9.66e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.41437751288905  E_coul = 54.34637302665208
  HOMO = -0.611608684180936  LUMO = 5.34465984409538
  mo_energy =
[-3.27240051e+01 -1.80198455e+00 -6.11608684e-01 -6.11608684e-01
 -6.11608684e-01  5.34465984e+00  5.34465984e+00  5.34465984e+00
  1.60971126e+01  1.22940700e+02  7.43533256e+02]
E1 = -181.41437751355602  E_coul = 54.34637302731906
Extra cycle  E= -127.068004486237  delta_E=    0  |g|= 8.1e-11  |ddm|= 1.32e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.92054787 453.60388537  87.15159125  24.17779239   8.03968872
   5.3037108    0.89622089]
grad_E = [ 3.69148696e-03 -9.22587446e-04 -8.18702403e-05  1.56667752e-04
 -1.07364535e-04 -2.94079364e-03 -1.71331746e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921410829767       1
[INPUT] 0    0    [1    /1   ]  453.726737734        1
[INPUT] 0    0    [1    /1   ]  87.3570741216        1
[INPUT] 0    0    [1    /1   ]  24.3934996739        1
[INPUT] 0    0    [1    /1   ]  8.131831001          1
[INPUT] 1    0    [1    /1   ]  5.30107222719        1
[INPUT] 1    0    [1    /1   ]  0.895932903626       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9214108297666147, 1.0]], [0, [453.7267377337387, 1.0]], [0, [87.35707412158602, 1.0]], [0, [24.39349967393851, 1.0]], [0, [8.131831001004334, 1.0]], [1, [5.301072227189618, 1.0]], [1, [0.895932903625921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92141083]
bas 1, expnt(s) = [453.72673773]
bas 2, expnt(s) = [87.35707412]
bas 3, expnt(s) = [24.39349967]
bas 4, expnt(s) = [8.131831]
bas 5, expnt(s) = [5.30107223]
bas 6, expnt(s) = [0.8959329]
CPU time:       135.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92141083
   2.3760469  453.72673773 248.37667202  87.35707412  72.1919186
  24.39349967  27.73132421   8.131831    12.16623729   5.30107223
  23.46599882   0.8959329    2.54289689]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.833124023418408
cond(S) = 45.02062046944378
E1 = -181.20358640520868  E_coul = 54.394863283080944
init E= -126.808723122128
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647141530537231  LUMO = 5.32355638355438
  mo_energy =
[-3.25630703e+01 -1.83615222e+00 -6.47141531e-01 -6.47141531e-01
 -6.47141531e-01  5.32355638e+00  5.32355638e+00  5.32355638e+00
  1.63958845e+01  1.24173789e+02  7.45646310e+02]
E1 = -181.29626928307727  E_coul = 54.22864836461688
cycle= 1 E= -127.06762091846  delta_E= -0.259  |g|= 0.108  |ddm|= 0.345
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.12495
diis-c [-0.01561258  1.        ]
  HOMO = -0.618784164786128  LUMO = 5.33027331323213
  mo_energy =
[-3.27536920e+01 -1.80970964e+00 -6.18784165e-01 -6.18784165e-01
 -6.18784165e-01  5.33027331e+00  5.33027331e+00  5.33027331e+00
  1.63234740e+01  1.23979702e+02  7.45371174e+02]
E1 = -181.43442637894773  E_coul = 54.36636895647407
cycle= 2 E= -127.068057422474  delta_E= -0.000437  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208226
diis-c [-6.66428019e-05  1.33173843e-01  8.66826157e-01]
  HOMO = -0.61144247769799  LUMO = 5.3421614345515
  mo_energy =
[-3.27241715e+01 -1.80152948e+00 -6.11442478e-01 -6.11442478e-01
 -6.11442478e-01  5.34216143e+00  5.34216143e+00  5.34216143e+00
  1.63431177e+01  1.24009853e+02  7.45406814e+02]
E1 = -181.41146521351567  E_coul = 54.34339176055813
cycle= 3 E= -127.068073452958  delta_E= -1.6e-05  |g|= 0.00065  |ddm|= 0.00367
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000740017
diis-c [-7.01872282e-09 -4.57516141e-03  8.42113322e-03  9.96154028e-01]
  HOMO = -0.611699153204839  LUMO = 5.34176917988493
  mo_energy =
[-3.27250632e+01 -1.80182086e+00 -6.11699153e-01 -6.11699153e-01
 -6.11699153e-01  5.34176918e+00  5.34176918e+00  5.34176918e+00
  1.63424619e+01  1.24009034e+02  7.45406070e+02]
E1 = -181.41219484869228  E_coul = 54.344121377973835
cycle= 4 E= -127.068073470718  delta_E= -1.78e-08  |g|= 2.51e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.68737e-06
diis-c [-4.05500836e-13  5.11046866e-05 -3.34456913e-04 -1.54914293e-02
  1.01577478e+00]
  HOMO = -0.611698610790106  LUMO = 5.34177008817602
  mo_energy =
[-3.27250608e+01 -1.80182045e+00 -6.11698611e-01 -6.11698611e-01
 -6.11698611e-01  5.34177009e+00  5.34177009e+00  5.34177009e+00
  1.63424632e+01  1.24009037e+02  7.45406074e+02]
E1 = -181.41219264722298  E_coul = 54.34411917650412
cycle= 5 E= -127.068073470719  delta_E= -4.12e-13  |g|= 5.2e-08  |ddm|= 3.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41219264722298  E_coul = 54.34411917650412
  HOMO = -0.611698622086813  LUMO = 5.34177007294027
  mo_energy =
[-3.27250608e+01 -1.80182047e+00 -6.11698622e-01 -6.11698622e-01
 -6.11698622e-01  5.34177007e+00  5.34177007e+00  5.34177007e+00
  1.63424631e+01  1.24009037e+02  7.45406074e+02]
E1 = -181.4121926691795  E_coul = 54.34411919846073
Extra cycle  E= -127.068073470719  delta_E= 9.95e-14  |g|= 3.49e-09  |ddm|= 1.02e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [  0.92141083 453.72673773  87.35707412  24.39349967   8.131831
   5.30107223   0.8959329 ]
E = -127.06807347071876
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921410829767       1
[INPUT] 0    0    [1    /1   ]  453.726737734        1
[INPUT] 0    0    [1    /1   ]  87.3570741216        1
[INPUT] 0    0    [1    /1   ]  24.3934996739        1
[INPUT] 0    0    [1    /1   ]  8.131831001          1
[INPUT] 1    0    [1    /1   ]  5.30107222719        1
[INPUT] 1    0    [1    /1   ]  0.895932903626       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9214108297666147, 1.0]], [0, [453.7267377337387, 1.0]], [0, [87.35707412158602, 1.0]], [0, [24.39349967393851, 1.0]], [0, [8.131831001004334, 1.0]], [1, [5.301072227189618, 1.0]], [1, [0.895932903625921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92141083]
bas 1, expnt(s) = [453.72673773]
bas 2, expnt(s) = [87.35707412]
bas 3, expnt(s) = [24.39349967]
bas 4, expnt(s) = [8.131831]
bas 5, expnt(s) = [5.30107223]
bas 6, expnt(s) = [0.8959329]
CPU time:       136.08
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92141083
   2.3760469  453.72673773 248.37667202  87.35707412  72.1919186
  24.39349967  27.73132421   8.131831    12.16623729   5.30107223
  23.46599882   0.8959329    2.54289689]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.833124023418408
cond(S) = 45.02062046944378
E1 = -181.20358640520868  E_coul = 54.394863283080944
init E= -126.808723122128
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647141530537231  LUMO = 5.32355638355438
  mo_energy =
[-3.25630703e+01 -1.83615222e+00 -6.47141531e-01 -6.47141531e-01
 -6.47141531e-01  5.32355638e+00  5.32355638e+00  5.32355638e+00
  1.63958845e+01  1.24173789e+02  7.45646310e+02]
E1 = -181.29626928307727  E_coul = 54.22864836461688
cycle= 1 E= -127.06762091846  delta_E= -0.259  |g|= 0.108  |ddm|= 0.345
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.12495
diis-c [-0.01561258  1.        ]
  HOMO = -0.618784164786128  LUMO = 5.33027331323213
  mo_energy =
[-3.27536920e+01 -1.80970964e+00 -6.18784165e-01 -6.18784165e-01
 -6.18784165e-01  5.33027331e+00  5.33027331e+00  5.33027331e+00
  1.63234740e+01  1.23979702e+02  7.45371174e+02]
E1 = -181.43442637894773  E_coul = 54.36636895647407
cycle= 2 E= -127.068057422474  delta_E= -0.000437  |g|= 0.017  |ddm|= 0.0218
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0208226
diis-c [-6.66428019e-05  1.33173843e-01  8.66826157e-01]
  HOMO = -0.61144247769799  LUMO = 5.3421614345515
  mo_energy =
[-3.27241715e+01 -1.80152948e+00 -6.11442478e-01 -6.11442478e-01
 -6.11442478e-01  5.34216143e+00  5.34216143e+00  5.34216143e+00
  1.63431177e+01  1.24009853e+02  7.45406814e+02]
E1 = -181.41146521351567  E_coul = 54.34339176055813
cycle= 3 E= -127.068073452958  delta_E= -1.6e-05  |g|= 0.00065  |ddm|= 0.00367
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000740017
diis-c [-7.01872282e-09 -4.57516141e-03  8.42113322e-03  9.96154028e-01]
  HOMO = -0.611699153204839  LUMO = 5.34176917988493
  mo_energy =
[-3.27250632e+01 -1.80182086e+00 -6.11699153e-01 -6.11699153e-01
 -6.11699153e-01  5.34176918e+00  5.34176918e+00  5.34176918e+00
  1.63424619e+01  1.24009034e+02  7.45406070e+02]
E1 = -181.41219484869228  E_coul = 54.344121377973835
cycle= 4 E= -127.068073470718  delta_E= -1.78e-08  |g|= 2.51e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.68737e-06
diis-c [-4.05500836e-13  5.11046866e-05 -3.34456913e-04 -1.54914293e-02
  1.01577478e+00]
  HOMO = -0.611698610790106  LUMO = 5.34177008817602
  mo_energy =
[-3.27250608e+01 -1.80182045e+00 -6.11698611e-01 -6.11698611e-01
 -6.11698611e-01  5.34177009e+00  5.34177009e+00  5.34177009e+00
  1.63424632e+01  1.24009037e+02  7.45406074e+02]
E1 = -181.41219264722298  E_coul = 54.34411917650412
cycle= 5 E= -127.068073470719  delta_E= -4.12e-13  |g|= 5.2e-08  |ddm|= 3.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41219264722298  E_coul = 54.34411917650412
  HOMO = -0.611698622086813  LUMO = 5.34177007294027
  mo_energy =
[-3.27250608e+01 -1.80182047e+00 -6.11698622e-01 -6.11698622e-01
 -6.11698622e-01  5.34177007e+00  5.34177007e+00  5.34177007e+00
  1.63424631e+01  1.24009037e+02  7.45406074e+02]
E1 = -181.4121926691795  E_coul = 54.34411919846073
Extra cycle  E= -127.068073470719  delta_E= 9.95e-14  |g|= 3.49e-09  |ddm|= 1.02e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.02062046944378
E1 = -181.4121926691795  E_coul = 54.34411919846073
init E= -127.068073470719
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.611698620790276  LUMO = 5.34177007515292
  mo_energy =
[-3.27250608e+01 -1.80182047e+00 -6.11698621e-01 -6.11698621e-01
 -6.11698621e-01  5.34177008e+00  5.34177008e+00  5.34177008e+00
  1.63424631e+01  1.24009037e+02  7.45406074e+02]
E1 = -181.41219266437187  E_coul = 54.34411919365316
cycle= 1 E= -127.068073470719  delta_E= 4.26e-14  |g|= 6.73e-10  |ddm|= 8.79e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.41219266437187  E_coul = 54.34411919365316
  HOMO = -0.611698621092839  LUMO = 5.34177007467543
  mo_energy =
[-3.27250608e+01 -1.80182047e+00 -6.11698621e-01 -6.11698621e-01
 -6.11698621e-01  5.34177007e+00  5.34177007e+00  5.34177007e+00
  1.63424631e+01  1.24009037e+02  7.45406074e+02]
E1 = -181.4121926652515  E_coul = 54.344119194532695
Extra cycle  E= -127.068073470719  delta_E= -8.53e-14  |g|= 1.07e-10  |ddm|= 1.54e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.92141083 453.72673773  87.35707412  24.39349967   8.131831
   5.30107223   0.8959329 ]
grad_E = [ 0.0031529  -0.00091802 -0.00021604  0.00059838 -0.00029856 -0.00322116
 -0.00181962]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921596444564       1
[INPUT] 0    0    [1    /1   ]  453.830920544        1
[INPUT] 0    0    [1    /1   ]  87.5866258175        1
[INPUT] 0    0    [1    /1   ]  24.6058590748        1
[INPUT] 0    0    [1    /1   ]  8.21857770545        1
[INPUT] 1    0    [1    /1   ]  5.31105209985        1
[INPUT] 1    0    [1    /1   ]  0.897164488603       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9215964445644274, 1.0]], [0, [453.83092054400066, 1.0]], [0, [87.58662581748115, 1.0]], [0, [24.605859074794562, 1.0]], [0, [8.21857770545104, 1.0]], [1, [5.311052099847066, 1.0]], [1, [0.8971644886031819, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92159644]
bas 1, expnt(s) = [453.83092054]
bas 2, expnt(s) = [87.58662582]
bas 3, expnt(s) = [24.60585907]
bas 4, expnt(s) = [8.21857771]
bas 5, expnt(s) = [5.3110521]
bas 6, expnt(s) = [0.89716449]
CPU time:       139.24
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92159644
   2.37640587 453.83092054 248.41944419  87.58662582  72.33414813
  24.60585907  27.91219069   8.21857771  12.26344601   5.3110521
  23.52123358   0.89716449   2.5472671 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832583252103541
cond(S) = 45.4840813805481
E1 = -181.20163020535767  E_coul = 54.39465412649267
init E= -126.806976078865
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647278984737632  LUMO = 5.33421819318994
  mo_energy =
[-3.25629620e+01 -1.83598138e+00 -6.47278985e-01 -6.47278985e-01
 -6.47278985e-01  5.33421819e+00  5.33421819e+00  5.33421819e+00
  1.66294329e+01  1.25229286e+02  7.47540980e+02]
E1 = -181.3049638590529  E_coul = 54.23728228949052
cycle= 1 E= -127.067681569562  delta_E= -0.261  |g|= 0.107  |ddm|= 0.347
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124215
diis-c [-0.01542942  1.        ]
  HOMO = -0.618189813463079  LUMO = 5.34173316362856
  mo_energy =
[-3.27522597e+01 -1.80863311e+00 -6.18189813e-01 -6.18189813e-01
 -6.18189813e-01  5.34173316e+00  5.34173316e+00  5.34173316e+00
  1.65573038e+01  1.25036222e+02  7.47267182e+02]
E1 = -181.4415521092292  E_coul = 54.373442238609066
cycle= 2 E= -127.06810987062  delta_E= -0.000428  |g|= 0.0168  |ddm|= 0.0215
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0205648
diis-c [-6.63263342e-05  1.32208204e-01  8.67791796e-01]
  HOMO = -0.610925964338835  LUMO = 5.35351148216482
  mo_energy =
[-3.27230366e+01 -1.80053343e+00 -6.10925964e-01 -6.10925964e-01
 -6.10925964e-01  5.35351148e+00  5.35351148e+00  5.35351148e+00
  1.65768695e+01  1.25066102e+02  7.47302471e+02]
E1 = -181.41891873951857  E_coul = 54.35079327033902
cycle= 3 E= -127.06812546918  delta_E= -1.56e-05  |g|= 0.000648  |ddm|= 0.00361
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000742446
diis-c [-7.80198000e-09 -4.52066133e-03  9.13408463e-03  9.95386577e-01]
  HOMO = -0.611182948885835  LUMO = 5.35311757265074
  mo_energy =
[-3.27239336e+01 -1.80082351e+00 -6.11182949e-01 -6.11182949e-01
 -6.11182949e-01  5.35311757e+00  5.35311757e+00  5.35311757e+00
  1.65762114e+01  1.25065277e+02  7.47301716e+02]
E1 = -181.41964997506017  E_coul = 54.351524488044134
cycle= 4 E= -127.068125487016  delta_E= -1.78e-08  |g|= 2.45e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.73408e-06
diis-c [-2.55768769e-13  6.35755659e-05 -3.59384892e-04 -1.80620831e-02
  1.01835789e+00]
  HOMO = -0.611182390649692  LUMO = 5.3531184925484
  mo_energy =
[-3.27239313e+01 -1.80082302e+00 -6.11182391e-01 -6.11182391e-01
 -6.11182391e-01  5.35311849e+00  5.35311849e+00  5.35311849e+00
  1.65762129e+01  1.25065280e+02  7.47301720e+02]
E1 = -181.41964785475207  E_coul = 54.351522367736045
cycle= 5 E= -127.068125487016  delta_E=    0  |g|= 3.22e-08  |ddm|= 3.46e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41964785475207  E_coul = 54.351522367736045
  HOMO = -0.611182403180461  LUMO = 5.35311847445087
  mo_energy =
[-3.27239313e+01 -1.80082303e+00 -6.11182403e-01 -6.11182403e-01
 -6.11182403e-01  5.35311847e+00  5.35311847e+00  5.35311847e+00
  1.65762129e+01  1.25065280e+02  7.47301720e+02]
E1 = -181.4196478872794  E_coul = 54.351522400263384
Extra cycle  E= -127.068125487016  delta_E=    0  |g|= 3.93e-09  |ddm|= 6.66e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.92159644 453.83092054  87.58662582  24.60585907   8.21857771
   5.3110521    0.89716449]
E = -127.06812548701603
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921596444564       1
[INPUT] 0    0    [1    /1   ]  453.830920544        1
[INPUT] 0    0    [1    /1   ]  87.5866258175        1
[INPUT] 0    0    [1    /1   ]  24.6058590748        1
[INPUT] 0    0    [1    /1   ]  8.21857770545        1
[INPUT] 1    0    [1    /1   ]  5.31105209985        1
[INPUT] 1    0    [1    /1   ]  0.897164488603       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9215964445644274, 1.0]], [0, [453.83092054400066, 1.0]], [0, [87.58662581748115, 1.0]], [0, [24.605859074794562, 1.0]], [0, [8.21857770545104, 1.0]], [1, [5.311052099847066, 1.0]], [1, [0.8971644886031819, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92159644]
bas 1, expnt(s) = [453.83092054]
bas 2, expnt(s) = [87.58662582]
bas 3, expnt(s) = [24.60585907]
bas 4, expnt(s) = [8.21857771]
bas 5, expnt(s) = [5.3110521]
bas 6, expnt(s) = [0.89716449]
CPU time:       139.90
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92159644
   2.37640587 453.83092054 248.41944419  87.58662582  72.33414813
  24.60585907  27.91219069   8.21857771  12.26344601   5.3110521
  23.52123358   0.89716449   2.5472671 ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832583252103541
cond(S) = 45.4840813805481
E1 = -181.20163020535767  E_coul = 54.39465412649267
init E= -126.806976078865
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647278984737632  LUMO = 5.33421819318994
  mo_energy =
[-3.25629620e+01 -1.83598138e+00 -6.47278985e-01 -6.47278985e-01
 -6.47278985e-01  5.33421819e+00  5.33421819e+00  5.33421819e+00
  1.66294329e+01  1.25229286e+02  7.47540980e+02]
E1 = -181.3049638590529  E_coul = 54.23728228949052
cycle= 1 E= -127.067681569562  delta_E= -0.261  |g|= 0.107  |ddm|= 0.347
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.124215
diis-c [-0.01542942  1.        ]
  HOMO = -0.618189813463079  LUMO = 5.34173316362856
  mo_energy =
[-3.27522597e+01 -1.80863311e+00 -6.18189813e-01 -6.18189813e-01
 -6.18189813e-01  5.34173316e+00  5.34173316e+00  5.34173316e+00
  1.65573038e+01  1.25036222e+02  7.47267182e+02]
E1 = -181.4415521092292  E_coul = 54.373442238609066
cycle= 2 E= -127.06810987062  delta_E= -0.000428  |g|= 0.0168  |ddm|= 0.0215
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0205648
diis-c [-6.63263342e-05  1.32208204e-01  8.67791796e-01]
  HOMO = -0.610925964338835  LUMO = 5.35351148216482
  mo_energy =
[-3.27230366e+01 -1.80053343e+00 -6.10925964e-01 -6.10925964e-01
 -6.10925964e-01  5.35351148e+00  5.35351148e+00  5.35351148e+00
  1.65768695e+01  1.25066102e+02  7.47302471e+02]
E1 = -181.41891873951857  E_coul = 54.35079327033902
cycle= 3 E= -127.06812546918  delta_E= -1.56e-05  |g|= 0.000648  |ddm|= 0.00361
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000742446
diis-c [-7.80198000e-09 -4.52066133e-03  9.13408463e-03  9.95386577e-01]
  HOMO = -0.611182948885835  LUMO = 5.35311757265074
  mo_energy =
[-3.27239336e+01 -1.80082351e+00 -6.11182949e-01 -6.11182949e-01
 -6.11182949e-01  5.35311757e+00  5.35311757e+00  5.35311757e+00
  1.65762114e+01  1.25065277e+02  7.47301716e+02]
E1 = -181.41964997506017  E_coul = 54.351524488044134
cycle= 4 E= -127.068125487016  delta_E= -1.78e-08  |g|= 2.45e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.73408e-06
diis-c [-2.55768769e-13  6.35755659e-05 -3.59384892e-04 -1.80620831e-02
  1.01835789e+00]
  HOMO = -0.611182390649692  LUMO = 5.3531184925484
  mo_energy =
[-3.27239313e+01 -1.80082302e+00 -6.11182391e-01 -6.11182391e-01
 -6.11182391e-01  5.35311849e+00  5.35311849e+00  5.35311849e+00
  1.65762129e+01  1.25065280e+02  7.47301720e+02]
E1 = -181.41964785475207  E_coul = 54.351522367736045
cycle= 5 E= -127.068125487016  delta_E=    0  |g|= 3.22e-08  |ddm|= 3.46e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.41964785475207  E_coul = 54.351522367736045
  HOMO = -0.611182403180461  LUMO = 5.35311847445087
  mo_energy =
[-3.27239313e+01 -1.80082303e+00 -6.11182403e-01 -6.11182403e-01
 -6.11182403e-01  5.35311847e+00  5.35311847e+00  5.35311847e+00
  1.65762129e+01  1.25065280e+02  7.47301720e+02]
E1 = -181.4196478872794  E_coul = 54.351522400263384
Extra cycle  E= -127.068125487016  delta_E=    0  |g|= 3.93e-09  |ddm|= 6.66e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.4840813805481
E1 = -181.4196478872794  E_coul = 54.351522400263384
init E= -127.068125487016
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.611182401192825  LUMO = 5.35311847770154
  mo_energy =
[-3.27239313e+01 -1.80082303e+00 -6.11182401e-01 -6.11182401e-01
 -6.11182401e-01  5.35311848e+00  5.35311848e+00  5.35311848e+00
  1.65762129e+01  1.25065280e+02  7.47301720e+02]
E1 = -181.419647880847  E_coul = 54.35152239383091
cycle= 1 E= -127.068125487016  delta_E= -5.68e-14  |g|= 8.22e-10  |ddm|= 1.01e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.419647880847  E_coul = 54.35152239383091
  HOMO = -0.611182401593716  LUMO = 5.35311847706007
  mo_energy =
[-3.27239313e+01 -1.80082303e+00 -6.11182402e-01 -6.11182402e-01
 -6.11182402e-01  5.35311848e+00  5.35311848e+00  5.35311848e+00
  1.65762129e+01  1.25065280e+02  7.47301720e+02]
E1 = -181.41964788205843  E_coul = 54.351522395042416
Extra cycle  E= -127.068125487016  delta_E= 8.53e-14  |g|= 1.5e-10  |ddm|= 1.97e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.92159644 453.83092054  87.58662582  24.60585907   8.21857771
   5.3110521    0.89716449]
grad_E = [ 0.0010149  -0.00091571 -0.00032091  0.00097494 -0.00046637 -0.0023139
 -0.00109609]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921265779589       1
[INPUT] 0    0    [1    /1   ]  453.863943262        1
[INPUT] 0    0    [1    /1   ]  87.6961190703        1
[INPUT] 0    0    [1    /1   ]  24.6889259219        1
[INPUT] 0    0    [1    /1   ]  8.24938110426        1
[INPUT] 1    0    [1    /1   ]  5.32243116309        1
[INPUT] 1    0    [1    /1   ]  0.898548973704       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9212657795892819, 1.0]], [0, [453.86394326247284, 1.0]], [0, [87.69611907025967, 1.0]], [0, [24.68892592191241, 1.0]], [0, [8.249381104262042, 1.0]], [1, [5.3224311630877335, 1.0]], [1, [0.8985489737041775, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92126578]
bas 1, expnt(s) = [453.86394326]
bas 2, expnt(s) = [87.69611907]
bas 3, expnt(s) = [24.68892592]
bas 4, expnt(s) = [8.2493811]
bas 5, expnt(s) = [5.32243116]
bas 6, expnt(s) = [0.89854897]
CPU time:       142.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92126578
   2.37576636 453.86394326 248.43300113  87.69611907  72.40195697
  24.68892592  27.98283242   8.2493811   12.29790262   5.32243116
  23.58424399   0.89854897   2.55218166]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832046928797263
cond(S) = 45.62899634565862
E1 = -181.20106104449349  E_coul = 54.39509904915775
init E= -126.805961995336
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647389008882331  LUMO = 5.34639511958838
  mo_energy =
[-3.25624521e+01 -1.83595045e+00 -6.47389009e-01 -6.47389009e-01
 -6.47389009e-01  5.34639512e+00  5.34639512e+00  5.34639512e+00
  1.67134518e+01  1.25644106e+02  7.48322486e+02]
E1 = -181.31470082819163  E_coul = 54.24699376834542
cycle= 1 E= -127.067707059846  delta_E= -0.262  |g|= 0.106  |ddm|= 0.348
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123469
diis-c [-0.01524459  1.        ]
  HOMO = -0.617557820062763  LUMO = 5.35471842397439
  mo_energy =
[-3.27502838e+01 -1.80765709e+00 -6.17557820e-01 -6.17557820e-01
 -6.17557820e-01  5.35471842e+00  5.35471842e+00  5.35471842e+00
  1.66423774e+01  1.25452350e+02  7.48050066e+02]
E1 = -181.44982448607655  E_coul = 54.38169688451921
cycle= 2 E= -127.068127601557  delta_E= -0.000421  |g|= 0.0166  |ddm|= 0.0213
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203436
diis-c [-6.58444418e-05  1.31507207e-01  8.68492793e-01]
  HOMO = -0.610368432363499  LUMO = 5.36639576803322
  mo_energy =
[-3.27213404e+01 -1.79963995e+00 -6.10368432e-01 -6.10368432e-01
 -6.10368432e-01  5.36639577e+00  5.36639577e+00  5.36639577e+00
  1.66617968e+01  1.25481961e+02  7.48085035e+02]
E1 = -181.4274743308543  E_coul = 54.359331501515825
cycle= 3 E= -127.068142829338  delta_E= -1.52e-05  |g|= 0.000646  |ddm|= 0.00357
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000743973
diis-c [-8.40571321e-09 -4.49678745e-03  9.61325012e-03  9.94883537e-01]
  HOMO = -0.610625411576962  LUMO = 5.36600081014576
  mo_energy =
[-3.27222404e+01 -1.79992884e+00 -6.10625412e-01 -6.10625412e-01
 -6.10625412e-01  5.36600081e+00  5.36600081e+00  5.36600081e+00
  1.66611387e+01  1.25481132e+02  7.48084273e+02]
E1 = -181.42820594909767  E_coul = 54.36006310189437
cycle= 4 E= -127.068142847203  delta_E= -1.79e-08  |g|= 2.48e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.83145e-06
diis-c [-2.31923431e-13  7.16311680e-05 -3.79884392e-04 -1.97098608e-02
  1.02001811e+00]
  HOMO = -0.61062483060311  LUMO = 5.36600175801518
  mo_energy =
[-3.27222381e+01 -1.79992827e+00 -6.10624831e-01 -6.10624831e-01
 -6.10624831e-01  5.36600176e+00  5.36600176e+00  5.36600176e+00
  1.66611403e+01  1.25481135e+02  7.48084276e+02]
E1 = -181.42820384616618  E_coul = 54.360060998962744
cycle= 5 E= -127.068142847203  delta_E= -1.28e-13  |g|= 2.68e-08  |ddm|= 3.41e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.42820384616618  E_coul = 54.360060998962744
  HOMO = -0.610624843997444  LUMO = 5.36600173797703
  mo_energy =
[-3.27222381e+01 -1.79992828e+00 -6.10624844e-01 -6.10624844e-01
 -6.10624844e-01  5.36600174e+00  5.36600174e+00  5.36600174e+00
  1.66611403e+01  1.25481135e+02  7.48084276e+02]
E1 = -181.42820388535586  E_coul = 54.36006103815235
Extra cycle  E= -127.068142847204  delta_E= -7.11e-14  |g|= 4.85e-09  |ddm|= 6.25e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [  0.92126578 453.86394326  87.69611907  24.68892592   8.2493811
   5.32243116   0.89854897]
E = -127.0681428472035
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:33:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921265779589       1
[INPUT] 0    0    [1    /1   ]  453.863943262        1
[INPUT] 0    0    [1    /1   ]  87.6961190703        1
[INPUT] 0    0    [1    /1   ]  24.6889259219        1
[INPUT] 0    0    [1    /1   ]  8.24938110426        1
[INPUT] 1    0    [1    /1   ]  5.32243116309        1
[INPUT] 1    0    [1    /1   ]  0.898548973704       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9212657795892819, 1.0]], [0, [453.86394326247284, 1.0]], [0, [87.69611907025967, 1.0]], [0, [24.68892592191241, 1.0]], [0, [8.249381104262042, 1.0]], [1, [5.3224311630877335, 1.0]], [1, [0.8985489737041775, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92126578]
bas 1, expnt(s) = [453.86394326]
bas 2, expnt(s) = [87.69611907]
bas 3, expnt(s) = [24.68892592]
bas 4, expnt(s) = [8.2493811]
bas 5, expnt(s) = [5.32243116]
bas 6, expnt(s) = [0.89854897]
CPU time:       143.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92126578
   2.37576636 453.86394326 248.43300113  87.69611907  72.40195697
  24.68892592  27.98283242   8.2493811   12.29790262   5.32243116
  23.58424399   0.89854897   2.55218166]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.832046928797263
cond(S) = 45.62899634565862
E1 = -181.20106104449349  E_coul = 54.39509904915775
init E= -126.805961995336
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647389008882331  LUMO = 5.34639511958838
  mo_energy =
[-3.25624521e+01 -1.83595045e+00 -6.47389009e-01 -6.47389009e-01
 -6.47389009e-01  5.34639512e+00  5.34639512e+00  5.34639512e+00
  1.67134518e+01  1.25644106e+02  7.48322486e+02]
E1 = -181.31470082819163  E_coul = 54.24699376834542
cycle= 1 E= -127.067707059846  delta_E= -0.262  |g|= 0.106  |ddm|= 0.348
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123469
diis-c [-0.01524459  1.        ]
  HOMO = -0.617557820062763  LUMO = 5.35471842397439
  mo_energy =
[-3.27502838e+01 -1.80765709e+00 -6.17557820e-01 -6.17557820e-01
 -6.17557820e-01  5.35471842e+00  5.35471842e+00  5.35471842e+00
  1.66423774e+01  1.25452350e+02  7.48050066e+02]
E1 = -181.44982448607655  E_coul = 54.38169688451921
cycle= 2 E= -127.068127601557  delta_E= -0.000421  |g|= 0.0166  |ddm|= 0.0213
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0203436
diis-c [-6.58444418e-05  1.31507207e-01  8.68492793e-01]
  HOMO = -0.610368432363499  LUMO = 5.36639576803322
  mo_energy =
[-3.27213404e+01 -1.79963995e+00 -6.10368432e-01 -6.10368432e-01
 -6.10368432e-01  5.36639577e+00  5.36639577e+00  5.36639577e+00
  1.66617968e+01  1.25481961e+02  7.48085035e+02]
E1 = -181.4274743308543  E_coul = 54.359331501515825
cycle= 3 E= -127.068142829338  delta_E= -1.52e-05  |g|= 0.000646  |ddm|= 0.00357
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000743973
diis-c [-8.40571321e-09 -4.49678745e-03  9.61325012e-03  9.94883537e-01]
  HOMO = -0.610625411576962  LUMO = 5.36600081014576
  mo_energy =
[-3.27222404e+01 -1.79992884e+00 -6.10625412e-01 -6.10625412e-01
 -6.10625412e-01  5.36600081e+00  5.36600081e+00  5.36600081e+00
  1.66611387e+01  1.25481132e+02  7.48084273e+02]
E1 = -181.42820594909767  E_coul = 54.36006310189437
cycle= 4 E= -127.068142847203  delta_E= -1.79e-08  |g|= 2.48e-06  |ddm|= 0.000117
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.83145e-06
diis-c [-2.31923431e-13  7.16311680e-05 -3.79884392e-04 -1.97098608e-02
  1.02001811e+00]
  HOMO = -0.61062483060311  LUMO = 5.36600175801518
  mo_energy =
[-3.27222381e+01 -1.79992827e+00 -6.10624831e-01 -6.10624831e-01
 -6.10624831e-01  5.36600176e+00  5.36600176e+00  5.36600176e+00
  1.66611403e+01  1.25481135e+02  7.48084276e+02]
E1 = -181.42820384616618  E_coul = 54.360060998962744
cycle= 5 E= -127.068142847203  delta_E= -1.28e-13  |g|= 2.68e-08  |ddm|= 3.41e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.42820384616618  E_coul = 54.360060998962744
  HOMO = -0.610624843997444  LUMO = 5.36600173797703
  mo_energy =
[-3.27222381e+01 -1.79992828e+00 -6.10624844e-01 -6.10624844e-01
 -6.10624844e-01  5.36600174e+00  5.36600174e+00  5.36600174e+00
  1.66611403e+01  1.25481135e+02  7.48084276e+02]
E1 = -181.42820388535586  E_coul = 54.36006103815235
Extra cycle  E= -127.068142847204  delta_E= -7.11e-14  |g|= 4.85e-09  |ddm|= 6.25e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.62899634565862
E1 = -181.42820388535586  E_coul = 54.36006103815235
init E= -127.068142847204
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.610624841575667  LUMO = 5.36600174188776
  mo_energy =
[-3.27222381e+01 -1.79992828e+00 -6.10624842e-01 -6.10624842e-01
 -6.10624842e-01  5.36600174e+00  5.36600174e+00  5.36600174e+00
  1.66611403e+01  1.25481135e+02  7.48084276e+02]
E1 = -181.42820387788697  E_coul = 54.360061030683525
cycle= 1 E= -127.068142847203  delta_E= 5.68e-14  |g|= 9.31e-10  |ddm|= 1.19e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.42820387788697  E_coul = 54.360061030683525
  HOMO = -0.61062484203933  LUMO = 5.36600174114114
  mo_energy =
[-3.27222381e+01 -1.79992828e+00 -6.10624842e-01 -6.10624842e-01
 -6.10624842e-01  5.36600174e+00  5.36600174e+00  5.36600174e+00
  1.66611403e+01  1.25481135e+02  7.48084276e+02]
E1 = -181.42820387930706  E_coul = 54.3600610321036
Extra cycle  E= -127.068142847203  delta_E= -1.42e-14  |g|= 1.77e-10  |ddm|= 2.27e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.92126578 453.86394326  87.69611907  24.68892592   8.2493811
   5.32243116   0.89854897]
grad_E = [-0.00085721 -0.00091609 -0.00034893  0.00110918 -0.00055049 -0.00126716
 -0.00029423]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921006462125       1
[INPUT] 0    0    [1    /1   ]  453.86702292         1
[INPUT] 0    0    [1    /1   ]  87.7237639051        1
[INPUT] 0    0    [1    /1   ]  24.7002306546        1
[INPUT] 0    0    [1    /1   ]  8.25260981617        1
[INPUT] 1    0    [1    /1   ]  5.32843555306        1
[INPUT] 1    0    [1    /1   ]  0.899273986991       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9210064621251706, 1.0]], [0, [453.86702291978463, 1.0]], [0, [87.72376390507776, 1.0]], [0, [24.700230654632925, 1.0]], [0, [8.252609816169183, 1.0]], [1, [5.328435553058454, 1.0]], [1, [0.8992739869910236, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92100646]
bas 1, expnt(s) = [453.86702292]
bas 2, expnt(s) = [87.72376391]
bas 3, expnt(s) = [24.70023065]
bas 4, expnt(s) = [8.25260982]
bas 5, expnt(s) = [5.32843555]
bas 6, expnt(s) = [0.89927399]
CPU time:       146.90
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92100646
   2.3752648  453.86702292 248.43426542  87.72376391  72.41907399
  24.70023065  27.9924416    8.25260982  12.30151239   5.32843555
  23.61750627   0.89927399   2.55475602]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831777815073332
cond(S) = 45.63269882713601
E1 = -181.20115284671738  E_coul = 54.39550109902304
init E= -126.805651747694
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647434236678773  LUMO = 5.35282540217483
  mo_energy =
[-3.25621050e+01 -1.83596598e+00 -6.47434237e-01 -6.47434237e-01
 -6.47434237e-01  5.35282540e+00  5.35282540e+00  5.35282540e+00
  1.67221155e+01  1.25706068e+02  7.48462681e+02]
E1 = -181.31988330495935  E_coul = 54.2521649238331
cycle= 1 E= -127.067718381126  delta_E= -0.262  |g|= 0.106  |ddm|= 0.348
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123083
diis-c [-0.01514941  1.        ]
  HOMO = -0.617226413639244  LUMO = 5.36156100112689
  mo_energy =
[-3.27491615e+01 -1.80719117e+00 -6.17226414e-01 -6.17226414e-01
 -6.17226414e-01  5.36156100e+00  5.36156100e+00  5.36156100e+00
  1.66517428e+01  1.25515045e+02  7.48190973e+02]
E1 = -181.45428467414058  E_coul = 54.38614959177403
cycle= 2 E= -127.068135082367  delta_E= -0.000417  |g|= 0.0166  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.020239
diis-c [-6.55612512e-05  1.31211895e-01  8.68788105e-01]
  HOMO = -0.61007423113865  LUMO = 5.37318865390508
  mo_energy =
[-3.27203567e+01 -1.79921651e+00 -6.10074231e-01 -6.10074231e-01
 -6.10074231e-01  5.37318865e+00  5.37318865e+00  5.37318865e+00
  1.66710722e+01  1.25544520e+02  7.48225785e+02]
E1 = -181.43206829596733  E_coul = 54.36391816027311
cycle= 3 E= -127.068150135694  delta_E= -1.51e-05  |g|= 0.000646  |ddm|= 0.00355
    CPU time for cycle= 3      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.000744524
diis-c [-8.65112511e-09 -4.49271896e-03  9.79779237e-03  9.94694927e-01]
  HOMO = -0.610331148065581  LUMO = 5.37279329732254
  mo_energy =
[-3.27212576e+01 -1.79950485e+00 -6.10331148e-01 -6.10331148e-01
 -6.10331148e-01  5.37279330e+00  5.37279330e+00  5.37279330e+00
  1.66704146e+01  1.25543690e+02  7.48225020e+02]
E1 = -181.43279981520033  E_coul = 54.36464966163867
cycle= 4 E= -127.068150153562  delta_E= -1.79e-08  |g|= 2.5e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.88235e-06
diis-c [-2.35987290e-13  7.45942212e-05 -3.88404782e-04 -2.02925943e-02
  1.02060640e+00]
  HOMO = -0.610330554120832  LUMO = 5.37279426305733
  mo_energy =
[-3.27212553e+01 -1.79950425e+00 -6.10330554e-01 -6.10330554e-01
 -6.10330554e-01  5.37279426e+00  5.37279426e+00  5.37279426e+00
  1.66704163e+01  1.25543693e+02  7.48225024e+02]
E1 = -181.43279770547704  E_coul = 54.36464755191512
cycle= 5 E= -127.068150153562  delta_E= -2.84e-13  |g|= 2.68e-08  |ddm|= 3.44e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43279770547704  E_coul = 54.36464755191512
  HOMO = -0.610330567899787  LUMO = 5.3727942421975
  mo_energy =
[-3.27212553e+01 -1.79950426e+00 -6.10330568e-01 -6.10330568e-01
 -6.10330568e-01  5.37279424e+00  5.37279424e+00  5.37279424e+00
  1.66704162e+01  1.25543692e+02  7.48225024e+02]
E1 = -181.43279774722936  E_coul = 54.36464759366748
Extra cycle  E= -127.068150153562  delta_E= 5.68e-14  |g|= 5.26e-09  |ddm|= 6.51e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.92100646 453.86702292  87.72376391  24.70023065   8.25260982
   5.32843555   0.89927399]
E = -127.06815015356187
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.921006462125       1
[INPUT] 0    0    [1    /1   ]  453.86702292         1
[INPUT] 0    0    [1    /1   ]  87.7237639051        1
[INPUT] 0    0    [1    /1   ]  24.7002306546        1
[INPUT] 0    0    [1    /1   ]  8.25260981617        1
[INPUT] 1    0    [1    /1   ]  5.32843555306        1
[INPUT] 1    0    [1    /1   ]  0.899273986991       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9210064621251706, 1.0]], [0, [453.86702291978463, 1.0]], [0, [87.72376390507776, 1.0]], [0, [24.700230654632925, 1.0]], [0, [8.252609816169183, 1.0]], [1, [5.328435553058454, 1.0]], [1, [0.8992739869910236, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92100646]
bas 1, expnt(s) = [453.86702292]
bas 2, expnt(s) = [87.72376391]
bas 3, expnt(s) = [24.70023065]
bas 4, expnt(s) = [8.25260982]
bas 5, expnt(s) = [5.32843555]
bas 6, expnt(s) = [0.89927399]
CPU time:       147.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92100646
   2.3752648  453.86702292 248.43426542  87.72376391  72.41907399
  24.70023065  27.9924416    8.25260982  12.30151239   5.32843555
  23.61750627   0.89927399   2.55475602]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831777815073332
cond(S) = 45.63269882713601
E1 = -181.20115284671738  E_coul = 54.39550109902304
init E= -126.805651747694
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647434236678773  LUMO = 5.35282540217483
  mo_energy =
[-3.25621050e+01 -1.83596598e+00 -6.47434237e-01 -6.47434237e-01
 -6.47434237e-01  5.35282540e+00  5.35282540e+00  5.35282540e+00
  1.67221155e+01  1.25706068e+02  7.48462681e+02]
E1 = -181.31988330495935  E_coul = 54.2521649238331
cycle= 1 E= -127.067718381126  delta_E= -0.262  |g|= 0.106  |ddm|= 0.348
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.123083
diis-c [-0.01514941  1.        ]
  HOMO = -0.617226413639244  LUMO = 5.36156100112689
  mo_energy =
[-3.27491615e+01 -1.80719117e+00 -6.17226414e-01 -6.17226414e-01
 -6.17226414e-01  5.36156100e+00  5.36156100e+00  5.36156100e+00
  1.66517428e+01  1.25515045e+02  7.48190973e+02]
E1 = -181.45428467414058  E_coul = 54.38614959177403
cycle= 2 E= -127.068135082367  delta_E= -0.000417  |g|= 0.0166  |ddm|= 0.0211
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.020239
diis-c [-6.55612512e-05  1.31211895e-01  8.68788105e-01]
  HOMO = -0.61007423113865  LUMO = 5.37318865390508
  mo_energy =
[-3.27203567e+01 -1.79921651e+00 -6.10074231e-01 -6.10074231e-01
 -6.10074231e-01  5.37318865e+00  5.37318865e+00  5.37318865e+00
  1.66710722e+01  1.25544520e+02  7.48225785e+02]
E1 = -181.43206829596733  E_coul = 54.36391816027311
cycle= 3 E= -127.068150135694  delta_E= -1.51e-05  |g|= 0.000646  |ddm|= 0.00355
    CPU time for cycle= 3      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.000744524
diis-c [-8.65112511e-09 -4.49271896e-03  9.79779237e-03  9.94694927e-01]
  HOMO = -0.610331148065581  LUMO = 5.37279329732254
  mo_energy =
[-3.27212576e+01 -1.79950485e+00 -6.10331148e-01 -6.10331148e-01
 -6.10331148e-01  5.37279330e+00  5.37279330e+00  5.37279330e+00
  1.66704146e+01  1.25543690e+02  7.48225020e+02]
E1 = -181.43279981520033  E_coul = 54.36464966163867
cycle= 4 E= -127.068150153562  delta_E= -1.79e-08  |g|= 2.5e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.88235e-06
diis-c [-2.35987290e-13  7.45942212e-05 -3.88404782e-04 -2.02925943e-02
  1.02060640e+00]
  HOMO = -0.610330554120832  LUMO = 5.37279426305733
  mo_energy =
[-3.27212553e+01 -1.79950425e+00 -6.10330554e-01 -6.10330554e-01
 -6.10330554e-01  5.37279426e+00  5.37279426e+00  5.37279426e+00
  1.66704163e+01  1.25543693e+02  7.48225024e+02]
E1 = -181.43279770547704  E_coul = 54.36464755191512
cycle= 5 E= -127.068150153562  delta_E= -2.84e-13  |g|= 2.68e-08  |ddm|= 3.44e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43279770547704  E_coul = 54.36464755191512
  HOMO = -0.610330567899787  LUMO = 5.3727942421975
  mo_energy =
[-3.27212553e+01 -1.79950426e+00 -6.10330568e-01 -6.10330568e-01
 -6.10330568e-01  5.37279424e+00  5.37279424e+00  5.37279424e+00
  1.66704162e+01  1.25543692e+02  7.48225024e+02]
E1 = -181.43279774722936  E_coul = 54.36464759366748
Extra cycle  E= -127.068150153562  delta_E= 5.68e-14  |g|= 5.26e-09  |ddm|= 6.51e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.63269882713601
E1 = -181.43279774722936  E_coul = 54.36464759366748
init E= -127.068150153562
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.61033056531197  LUMO = 5.37279424636391
  mo_energy =
[-3.27212553e+01 -1.79950426e+00 -6.10330565e-01 -6.10330565e-01
 -6.10330565e-01  5.37279425e+00  5.37279425e+00  5.37279425e+00
  1.66704162e+01  1.25543692e+02  7.48225024e+02]
E1 = -181.43279773935487  E_coul = 54.36464758579301
cycle= 1 E= -127.068150153562  delta_E= 1.42e-14  |g|= 9.77e-10  |ddm|= 1.27e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.43279773935487  E_coul = 54.36464758579301
  HOMO = -0.610330565800243  LUMO = 5.37279424557591
  mo_energy =
[-3.27212553e+01 -1.79950426e+00 -6.10330566e-01 -6.10330566e-01
 -6.10330566e-01  5.37279425e+00  5.37279425e+00  5.37279425e+00
  1.66704162e+01  1.25543692e+02  7.48225024e+02]
E1 = -181.43279774085553  E_coul = 54.36464758729374
Extra cycle  E= -127.068150153562  delta_E= 7.11e-14  |g|= 1.87e-10  |ddm|= 2.39e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [  0.92100646 453.86702292  87.72376391  24.70023065   8.25260982
   5.32843555   0.89927399]
grad_E = [-0.00166212 -0.00091699 -0.00034398  0.00111228 -0.00055511 -0.00071271
  0.00012522]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.92060309256        1
[INPUT] 0    0    [1    /1   ]  453.872159928        1
[INPUT] 0    0    [1    /1   ]  87.7423562463        1
[INPUT] 0    0    [1    /1   ]  24.6970111581        1
[INPUT] 0    0    [1    /1   ]  8.2496378428         1
[INPUT] 1    0    [1    /1   ]  5.33652458115        1
[INPUT] 1    0    [1    /1   ]  0.900247060443       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9206030925595939, 1.0]], [0, [453.8721599282676, 1.0]], [0, [87.74235624628521, 1.0]], [0, [24.69701115811028, 1.0]], [0, [8.24963784280096, 1.0]], [1, [5.3365245811475255, 1.0]], [1, [0.9002470604428063, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92060309]
bas 1, expnt(s) = [453.87215993]
bas 2, expnt(s) = [87.74235625]
bas 3, expnt(s) = [24.69701116]
bas 4, expnt(s) = [8.24963784]
bas 5, expnt(s) = [5.33652458]
bas 6, expnt(s) = [0.90024706]
CPU time:       150.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92060309
   2.37448454 453.87215993 248.43637431  87.74235625  72.43058516
  24.69701116  27.9897051    8.24963784  12.29818968   5.33652458
  23.66233155   0.90024706   2.558212  ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831423461366427
cond(S) = 45.59722280545801
E1 = -181.20147668339393  E_coul = 54.396120704998786
init E= -126.805355978395
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647488850555192  LUMO = 5.36148947822875
  mo_energy =
[-3.25616012e+01 -1.83600544e+00 -6.47488851e-01 -6.47488851e-01
 -6.47488851e-01  5.36148948e+00  5.36148948e+00  5.36148948e+00
  1.67136367e+01  1.25699556e+02  7.48502297e+02]
E1 = -181.3268544064998  E_coul = 54.25911648086289
cycle= 1 E= -127.067737925637  delta_E= -0.262  |g|= 0.105  |ddm|= 0.348
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122573
diis-c [-0.01502415  1.        ]
  HOMO = -0.616783958485976  LUMO = 5.37076980737493
  mo_energy =
[-3.27476181e+01 -1.80659285e+00 -6.16783958e-01 -6.16783958e-01
 -6.16783958e-01  5.37076981e+00  5.37076981e+00  5.37076981e+00
  1.66442870e+01  1.25509537e+02  7.48231532e+02]
E1 = -181.46031797515522  E_coul = 54.39216833211323
cycle= 2 E= -127.068149643042  delta_E= -0.000412  |g|= 0.0164  |ddm|= 0.021
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0201059
diis-c [-6.51741415e-05  1.30854080e-01  8.69145920e-01]
  HOMO = -0.609680338266702  LUMO = 5.38233306207834
  mo_energy =
[-3.27189932e+01 -1.79867432e+00 -6.09680338e-01 -6.09680338e-01
 -6.09680338e-01  5.38233306e+00  5.38233306e+00  5.38233306e+00
  1.66634894e+01  1.25538832e+02  7.48266143e+02]
E1 = -181.43827186174775  E_coul = 54.37010738651682
cycle= 3 E= -127.068164475231  delta_E= -1.48e-05  |g|= 0.000645  |ddm|= 0.00352
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000745181
diis-c [-8.94623829e-09 -4.49116020e-03  1.00151320e-02  9.94476028e-01]
  HOMO = -0.609937154329686  LUMO = 5.38193722598313
  mo_energy =
[-3.27198953e+01 -1.79896198e+00 -6.09937154e-01 -6.09937154e-01
 -6.09937154e-01  5.38193723e+00  5.38193723e+00  5.38193723e+00
  1.66628327e+01  1.25538001e+02  7.48265375e+02]
E1 = -181.4390031482331  E_coul = 54.37083865513493
cycle= 4 E= -127.068164493098  delta_E= -1.79e-08  |g|= 2.54e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.9494e-06
diis-c [-2.48340636e-13  7.79667855e-05 -3.98781637e-04 -2.09394841e-02
  1.02126030e+00]
  HOMO = -0.609936542857253  LUMO = 5.3819382167017
  mo_energy =
[-3.27198929e+01 -1.79896133e+00 -6.09936543e-01 -6.09936543e-01
 -6.09936543e-01  5.38193822e+00  5.38193822e+00  5.38193822e+00
  1.66628344e+01  1.25538004e+02  7.48265379e+02]
E1 = -181.43900102249503  E_coul = 54.37083652939659
cycle= 5 E= -127.068164493098  delta_E= -2.7e-13  |g|= 2.82e-08  |ddm|= 3.52e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43900102249503  E_coul = 54.37083652939659
  HOMO = -0.609936557133953  LUMO = 5.38193819480905
  mo_energy =
[-3.27198930e+01 -1.79896135e+00 -6.09936557e-01 -6.09936557e-01
 -6.09936557e-01  5.38193819e+00  5.38193819e+00  5.38193819e+00
  1.66628344e+01  1.25538004e+02  7.48265379e+02]
E1 = -181.43900106728097  E_coul = 54.37083657418261
Extra cycle  E= -127.068164493098  delta_E= 8.53e-14  |g|= 5.76e-09  |ddm|= 7.01e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.92060309 453.87215993  87.74235625  24.69701116   8.24963784
   5.33652458   0.90024706]
E = -127.06816449309835
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.92060309256        1
[INPUT] 0    0    [1    /1   ]  453.872159928        1
[INPUT] 0    0    [1    /1   ]  87.7423562463        1
[INPUT] 0    0    [1    /1   ]  24.6970111581        1
[INPUT] 0    0    [1    /1   ]  8.2496378428         1
[INPUT] 1    0    [1    /1   ]  5.33652458115        1
[INPUT] 1    0    [1    /1   ]  0.900247060443       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9206030925595939, 1.0]], [0, [453.8721599282676, 1.0]], [0, [87.74235624628521, 1.0]], [0, [24.69701115811028, 1.0]], [0, [8.24963784280096, 1.0]], [1, [5.3365245811475255, 1.0]], [1, [0.9002470604428063, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92060309]
bas 1, expnt(s) = [453.87215993]
bas 2, expnt(s) = [87.74235625]
bas 3, expnt(s) = [24.69701116]
bas 4, expnt(s) = [8.24963784]
bas 5, expnt(s) = [5.33652458]
bas 6, expnt(s) = [0.90024706]
CPU time:       151.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92060309
   2.37448454 453.87215993 248.43637431  87.74235625  72.43058516
  24.69701116  27.9897051    8.24963784  12.29818968   5.33652458
  23.66233155   0.90024706   2.558212  ]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831423461366427
cond(S) = 45.59722280545801
E1 = -181.20147668339393  E_coul = 54.396120704998786
init E= -126.805355978395
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647488850555192  LUMO = 5.36148947822875
  mo_energy =
[-3.25616012e+01 -1.83600544e+00 -6.47488851e-01 -6.47488851e-01
 -6.47488851e-01  5.36148948e+00  5.36148948e+00  5.36148948e+00
  1.67136367e+01  1.25699556e+02  7.48502297e+02]
E1 = -181.3268544064998  E_coul = 54.25911648086289
cycle= 1 E= -127.067737925637  delta_E= -0.262  |g|= 0.105  |ddm|= 0.348
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.122573
diis-c [-0.01502415  1.        ]
  HOMO = -0.616783958485976  LUMO = 5.37076980737493
  mo_energy =
[-3.27476181e+01 -1.80659285e+00 -6.16783958e-01 -6.16783958e-01
 -6.16783958e-01  5.37076981e+00  5.37076981e+00  5.37076981e+00
  1.66442870e+01  1.25509537e+02  7.48231532e+02]
E1 = -181.46031797515522  E_coul = 54.39216833211323
cycle= 2 E= -127.068149643042  delta_E= -0.000412  |g|= 0.0164  |ddm|= 0.021
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0201059
diis-c [-6.51741415e-05  1.30854080e-01  8.69145920e-01]
  HOMO = -0.609680338266702  LUMO = 5.38233306207834
  mo_energy =
[-3.27189932e+01 -1.79867432e+00 -6.09680338e-01 -6.09680338e-01
 -6.09680338e-01  5.38233306e+00  5.38233306e+00  5.38233306e+00
  1.66634894e+01  1.25538832e+02  7.48266143e+02]
E1 = -181.43827186174775  E_coul = 54.37010738651682
cycle= 3 E= -127.068164475231  delta_E= -1.48e-05  |g|= 0.000645  |ddm|= 0.00352
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000745181
diis-c [-8.94623829e-09 -4.49116020e-03  1.00151320e-02  9.94476028e-01]
  HOMO = -0.609937154329686  LUMO = 5.38193722598313
  mo_energy =
[-3.27198953e+01 -1.79896198e+00 -6.09937154e-01 -6.09937154e-01
 -6.09937154e-01  5.38193723e+00  5.38193723e+00  5.38193723e+00
  1.66628327e+01  1.25538001e+02  7.48265375e+02]
E1 = -181.4390031482331  E_coul = 54.37083865513493
cycle= 4 E= -127.068164493098  delta_E= -1.79e-08  |g|= 2.54e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.9494e-06
diis-c [-2.48340636e-13  7.79667855e-05 -3.98781637e-04 -2.09394841e-02
  1.02126030e+00]
  HOMO = -0.609936542857253  LUMO = 5.3819382167017
  mo_energy =
[-3.27198929e+01 -1.79896133e+00 -6.09936543e-01 -6.09936543e-01
 -6.09936543e-01  5.38193822e+00  5.38193822e+00  5.38193822e+00
  1.66628344e+01  1.25538004e+02  7.48265379e+02]
E1 = -181.43900102249503  E_coul = 54.37083652939659
cycle= 5 E= -127.068164493098  delta_E= -2.7e-13  |g|= 2.82e-08  |ddm|= 3.52e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.43900102249503  E_coul = 54.37083652939659
  HOMO = -0.609936557133953  LUMO = 5.38193819480905
  mo_energy =
[-3.27198930e+01 -1.79896135e+00 -6.09936557e-01 -6.09936557e-01
 -6.09936557e-01  5.38193819e+00  5.38193819e+00  5.38193819e+00
  1.66628344e+01  1.25538004e+02  7.48265379e+02]
E1 = -181.43900106728097  E_coul = 54.37083657418261
Extra cycle  E= -127.068164493098  delta_E= 8.53e-14  |g|= 5.76e-09  |ddm|= 7.01e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.59722280545801
E1 = -181.43900106728097  E_coul = 54.37083657418261
init E= -127.068164493098
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.609936554350379  LUMO = 5.38193819927937
  mo_energy =
[-3.27198930e+01 -1.79896134e+00 -6.09936554e-01 -6.09936554e-01
 -6.09936554e-01  5.38193820e+00  5.38193820e+00  5.38193820e+00
  1.66628344e+01  1.25538004e+02  7.48265379e+02]
E1 = -181.4390010589206  E_coul = 54.37083656582227
cycle= 1 E= -127.068164493098  delta_E= 1.42e-14  |g|= 1.03e-09  |ddm|= 1.37e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.4390010589206  E_coul = 54.37083656582227
  HOMO = -0.609936554868166  LUMO = 5.38193819844162
  mo_energy =
[-3.27198930e+01 -1.79896135e+00 -6.09936555e-01 -6.09936555e-01
 -6.09936555e-01  5.38193820e+00  5.38193820e+00  5.38193820e+00
  1.66628344e+01  1.25538004e+02  7.48265379e+02]
E1 = -181.43900106051754  E_coul = 54.37083656741915
Extra cycle  E= -127.068164493098  delta_E= -5.68e-14  |g|= 2e-10  |ddm|= 2.53e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.92060309 453.87215993  87.74235625  24.69701116   8.24963784
   5.33652458   0.90024706]
grad_E = [-2.67190670e-03 -9.18348186e-04 -3.28142872e-04  1.08283292e-03
 -5.42513184e-04  3.43807646e-05  6.81543168e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.920000848963       1
[INPUT] 0    0    [1    /1   ]  453.900933           1
[INPUT] 0    0    [1    /1   ]  87.7607713256        1
[INPUT] 0    0    [1    /1   ]  24.6822149669        1
[INPUT] 0    0    [1    /1   ]  8.24152072846        1
[INPUT] 1    0    [1    /1   ]  5.34817213396        1
[INPUT] 1    0    [1    /1   ]  0.901644703995       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9200008489627802, 1.0]], [0, [453.90093300029713, 1.0]], [0, [87.76077132560214, 1.0]], [0, [24.682214966856844, 1.0]], [0, [8.24152072845829, 1.0]], [1, [5.348172133963026, 1.0]], [1, [0.9016447039949294, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92000085]
bas 1, expnt(s) = [453.900933]
bas 2, expnt(s) = [87.76077133]
bas 3, expnt(s) = [24.68221497]
bas 4, expnt(s) = [8.24152073]
bas 5, expnt(s) = [5.34817213]
bas 6, expnt(s) = [0.9016447]
CPU time:       154.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92000085
   2.37331943 453.900933   248.44818637  87.76077133  72.44198599
  24.68221497  27.9771275    8.24152073  12.28911309   5.34817213
  23.72690621   0.9016447    2.56317753]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.830916097965684
cond(S) = 45.52359387662551
E1 = -181.2020664282989  E_coul = 54.39705316285042
init E= -126.805013265448
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647562336933776  LUMO = 5.37396766147994
  mo_energy =
[-3.25608660e+01 -1.83607380e+00 -6.47562337e-01 -6.47562337e-01
 -6.47562337e-01  5.37396766e+00  5.37396766e+00  5.37396766e+00
  1.66907314e+01  1.25642745e+02  7.48505863e+02]
E1 = -181.3369119211709  E_coul = 54.26913330942812
cycle= 1 E= -127.067778611743  delta_E= -0.263  |g|= 0.105  |ddm|= 0.348
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.121841
diis-c [-0.01484521  1.        ]
  HOMO = -0.616145860602192  LUMO = 5.38403002140709
  mo_energy =
[-3.27453836e+01 -1.80574907e+00 -6.16145861e-01 -6.16145861e-01
 -6.16145861e-01  5.38403002e+00  5.38403002e+00  5.38403002e+00
  1.66228970e+01  1.25454186e+02  7.48236455e+02]
E1 = -181.46904120532773  E_coul = 54.400857928838874
cycle= 2 E= -127.068183276489  delta_E= -0.000405  |g|= 0.0163  |ddm|= 0.0207
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0199176
diis-c [-6.46193317e-05  1.30354119e-01  8.69645881e-01]
  HOMO = -0.609111478637227  LUMO = 5.3955014499537
  mo_energy =
[-3.27170152e+01 -1.79791087e+00 -6.09111479e-01 -6.09111479e-01
 -6.09111479e-01  5.39550145e+00  5.39550145e+00  5.39550145e+00
  1.66419131e+01  1.25483225e+02  7.48270778e+02]
E1 = -181.4472349606394  E_coul = 54.37903716140458
cycle= 3 E= -127.068197799235  delta_E= -1.45e-05  |g|= 0.000645  |ddm|= 0.00348
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000746134
diis-c [-9.35452867e-09 -4.49188003e-03  1.03131082e-02  9.94178772e-01]
  HOMO = -0.609368163604762  LUMO = 5.39510492078128
  mo_energy =
[-3.27179187e+01 -1.79819761e+00 -6.09368164e-01 -6.09368164e-01
 -6.09368164e-01  5.39510492e+00  5.39510492e+00  5.39510492e+00
  1.66412576e+01  1.25482392e+02  7.48270007e+02]
E1 = -181.44796590200573  E_coul = 54.37976808490334
cycle= 4 E= -127.068197817102  delta_E= -1.79e-08  |g|= 2.61e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04808e-06
diis-c [-2.75285198e-13  8.23926833e-05 -4.13331868e-04 -2.17714393e-02
  1.02210238e+00]
  HOMO = -0.609367526531798  LUMO = 5.39510594857564
  mo_energy =
[-3.27179163e+01 -1.79819691e+00 -6.09367527e-01 -6.09367527e-01
 -6.09367527e-01  5.39510595e+00  5.39510595e+00  5.39510595e+00
  1.66412594e+01  1.25482395e+02  7.48270011e+02]
E1 = -181.44796374794436  E_coul = 54.379765930841764
cycle= 5 E= -127.068197817103  delta_E= -1.99e-13  |g|= 3.16e-08  |ddm|= 3.65e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.44796374794436  E_coul = 54.379765930841764
  HOMO = -0.609367541530251  LUMO = 5.39510592521232
  mo_energy =
[-3.27179164e+01 -1.79819693e+00 -6.09367542e-01 -6.09367542e-01
 -6.09367542e-01  5.39510593e+00  5.39510593e+00  5.39510593e+00
  1.66412594e+01  1.25482395e+02  7.48270011e+02]
E1 = -181.44796379684823  E_coul = 54.379765979745635
Extra cycle  E= -127.068197817103  delta_E=    0  |g|= 6.46e-09  |ddm|= 7.92e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.92000085 453.900933    87.76077133  24.68221497   8.24152073
   5.34817213   0.9016447 ]
E = -127.0681978171026
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.920000848963       1
[INPUT] 0    0    [1    /1   ]  453.900933           1
[INPUT] 0    0    [1    /1   ]  87.7607713256        1
[INPUT] 0    0    [1    /1   ]  24.6822149669        1
[INPUT] 0    0    [1    /1   ]  8.24152072846        1
[INPUT] 1    0    [1    /1   ]  5.34817213396        1
[INPUT] 1    0    [1    /1   ]  0.901644703995       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9200008489627802, 1.0]], [0, [453.90093300029713, 1.0]], [0, [87.76077132560214, 1.0]], [0, [24.682214966856844, 1.0]], [0, [8.24152072845829, 1.0]], [1, [5.348172133963026, 1.0]], [1, [0.9016447039949294, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92000085]
bas 1, expnt(s) = [453.900933]
bas 2, expnt(s) = [87.76077133]
bas 3, expnt(s) = [24.68221497]
bas 4, expnt(s) = [8.24152073]
bas 5, expnt(s) = [5.34817213]
bas 6, expnt(s) = [0.9016447]
CPU time:       155.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92000085
   2.37331943 453.900933   248.44818637  87.76077133  72.44198599
  24.68221497  27.9771275    8.24152073  12.28911309   5.34817213
  23.72690621   0.9016447    2.56317753]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.830916097965684
cond(S) = 45.52359387662551
E1 = -181.2020664282989  E_coul = 54.39705316285042
init E= -126.805013265448
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.647562336933776  LUMO = 5.37396766147994
  mo_energy =
[-3.25608660e+01 -1.83607380e+00 -6.47562337e-01 -6.47562337e-01
 -6.47562337e-01  5.37396766e+00  5.37396766e+00  5.37396766e+00
  1.66907314e+01  1.25642745e+02  7.48505863e+02]
E1 = -181.3369119211709  E_coul = 54.26913330942812
cycle= 1 E= -127.067778611743  delta_E= -0.263  |g|= 0.105  |ddm|= 0.348
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.121841
diis-c [-0.01484521  1.        ]
  HOMO = -0.616145860602192  LUMO = 5.38403002140709
  mo_energy =
[-3.27453836e+01 -1.80574907e+00 -6.16145861e-01 -6.16145861e-01
 -6.16145861e-01  5.38403002e+00  5.38403002e+00  5.38403002e+00
  1.66228970e+01  1.25454186e+02  7.48236455e+02]
E1 = -181.46904120532773  E_coul = 54.400857928838874
cycle= 2 E= -127.068183276489  delta_E= -0.000405  |g|= 0.0163  |ddm|= 0.0207
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0199176
diis-c [-6.46193317e-05  1.30354119e-01  8.69645881e-01]
  HOMO = -0.609111478637227  LUMO = 5.3955014499537
  mo_energy =
[-3.27170152e+01 -1.79791087e+00 -6.09111479e-01 -6.09111479e-01
 -6.09111479e-01  5.39550145e+00  5.39550145e+00  5.39550145e+00
  1.66419131e+01  1.25483225e+02  7.48270778e+02]
E1 = -181.4472349606394  E_coul = 54.37903716140458
cycle= 3 E= -127.068197799235  delta_E= -1.45e-05  |g|= 0.000645  |ddm|= 0.00348
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000746134
diis-c [-9.35452867e-09 -4.49188003e-03  1.03131082e-02  9.94178772e-01]
  HOMO = -0.609368163604762  LUMO = 5.39510492078128
  mo_energy =
[-3.27179187e+01 -1.79819761e+00 -6.09368164e-01 -6.09368164e-01
 -6.09368164e-01  5.39510492e+00  5.39510492e+00  5.39510492e+00
  1.66412576e+01  1.25482392e+02  7.48270007e+02]
E1 = -181.44796590200573  E_coul = 54.37976808490334
cycle= 4 E= -127.068197817102  delta_E= -1.79e-08  |g|= 2.61e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=3.04808e-06
diis-c [-2.75285198e-13  8.23926833e-05 -4.13331868e-04 -2.17714393e-02
  1.02210238e+00]
  HOMO = -0.609367526531798  LUMO = 5.39510594857564
  mo_energy =
[-3.27179163e+01 -1.79819691e+00 -6.09367527e-01 -6.09367527e-01
 -6.09367527e-01  5.39510595e+00  5.39510595e+00  5.39510595e+00
  1.66412594e+01  1.25482395e+02  7.48270011e+02]
E1 = -181.44796374794436  E_coul = 54.379765930841764
cycle= 5 E= -127.068197817103  delta_E= -1.99e-13  |g|= 3.16e-08  |ddm|= 3.65e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.44796374794436  E_coul = 54.379765930841764
  HOMO = -0.609367541530251  LUMO = 5.39510592521232
  mo_energy =
[-3.27179164e+01 -1.79819693e+00 -6.09367542e-01 -6.09367542e-01
 -6.09367542e-01  5.39510593e+00  5.39510593e+00  5.39510593e+00
  1.66412594e+01  1.25482395e+02  7.48270011e+02]
E1 = -181.44796379684823  E_coul = 54.379765979745635
Extra cycle  E= -127.068197817103  delta_E=    0  |g|= 6.46e-09  |ddm|= 7.92e-09
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.52359387662551
E1 = -181.44796379684823  E_coul = 54.379765979745635
init E= -127.068197817103
    CPU time for initialize scf      0.07 sec, wall time      0.08 sec
  HOMO = -0.609367538481856  LUMO = 5.39510593009663
  mo_energy =
[-3.27179164e+01 -1.79819692e+00 -6.09367538e-01 -6.09367538e-01
 -6.09367538e-01  5.39510593e+00  5.39510593e+00  5.39510593e+00
  1.66412594e+01  1.25482395e+02  7.48270011e+02]
E1 = -181.44796378782365  E_coul = 54.379765970721195
cycle= 1 E= -127.068197817102  delta_E= 1.42e-13  |g|= 1.11e-09  |ddm|= 1.5e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.44796378782365  E_coul = 54.379765970721195
  HOMO = -0.609367539040016  LUMO = 5.39510592919064
  mo_energy =
[-3.27179164e+01 -1.79819693e+00 -6.09367539e-01 -6.09367539e-01
 -6.09367539e-01  5.39510593e+00  5.39510593e+00  5.39510593e+00
  1.66412594e+01  1.25482395e+02  7.48270011e+02]
E1 = -181.44796378955127  E_coul = 54.37976597244866
Extra cycle  E= -127.068197817103  delta_E= -1.42e-13  |g|= 2.17e-10  |ddm|= 2.73e-10
    CPU time for scf_cycle      0.15 sec, wall time      0.16 sec
exp = [  0.92000085 453.900933    87.76077133  24.68221497   8.24152073
   5.34817213   0.9016447 ]
grad_E = [-0.00405806 -0.00092027 -0.00029973  0.00101724 -0.00050687  0.0011061
  0.00148206]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.919020835115       1
[INPUT] 0    0    [1    /1   ]  454.016266459        1
[INPUT] 0    0    [1    /1   ]  87.795098994         1
[INPUT] 0    0    [1    /1   ]  24.6547338667        1
[INPUT] 0    0    [1    /1   ]  8.22677596837        1
[INPUT] 1    0    [1    /1   ]  5.36714218321        1
[INPUT] 1    0    [1    /1   ]  0.90391488112        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9190208351153162, 1.0]], [0, [454.0162664586211, 1.0]], [0, [87.79509899395767, 1.0]], [0, [24.654733866735647, 1.0]], [0, [8.226775968365894, 1.0]], [1, [5.367142183205517, 1.0]], [1, [0.9039148811203971, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91902084]
bas 1, expnt(s) = [454.01626646]
bas 2, expnt(s) = [87.79509899]
bas 3, expnt(s) = [24.65473387]
bas 4, expnt(s) = [8.22677597]
bas 5, expnt(s) = [5.36714218]
bas 6, expnt(s) = [0.90391488]
CPU time:       159.08
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91902084
   2.37142308 454.01626646 248.49553175  87.79509899  72.46323674
  24.65473387  27.95376201   8.22677597  12.27261972   5.36714218
  23.83215244   0.90391488   2.57124709]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.83008776805649
cond(S) = 45.388470994794574
E1 = -181.2030682284466  E_coul = 54.39855294896434
init E= -126.804515279482
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647677884453937  LUMO = 5.39429200578843
  mo_energy =
[-3.25597003e+01 -1.83619253e+00 -6.47677884e-01 -6.47677884e-01
 -6.47677884e-01  5.39429201e+00  5.39429201e+00  5.39429201e+00
  1.66494585e+01  1.25538644e+02  7.48579990e+02]
E1 = -181.353286692069  E_coul = 54.28540857661601
cycle= 1 E= -127.067878115453  delta_E= -0.263  |g|= 0.104  |ddm|= 0.349
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.120652
diis-c [-0.01455679  1.        ]
  HOMO = -0.615104094230793  LUMO = 5.40563016358987
  mo_energy =
[-3.27417755e+01 -1.80438754e+00 -6.15104094e-01 -6.15104094e-01
 -6.15104094e-01  5.40563016e+00  5.40563016e+00  5.40563016e+00
  1.65841033e+01  1.25352468e+02  7.48312792e+02]
E1 = -181.48325683044158  E_coul = 54.414985340418504
cycle= 2 E= -127.068271490023  delta_E= -0.000393  |g|= 0.016  |ddm|= 0.0204
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0196128
diis-c [-6.37301835e-05  1.29532765e-01  8.70467235e-01]
  HOMO = -0.608181803828603  LUMO = 5.41695233990688
  mo_energy =
[-3.27138226e+01 -1.79667929e+00 -6.08181804e-01 -6.08181804e-01
 -6.08181804e-01  5.41695234e+00  5.41695234e+00  5.41695234e+00
  1.66028159e+01  1.25381091e+02  7.48346651e+02]
E1 = -181.4618368761288  E_coul = 54.393551355822915
cycle= 3 E= -127.068285520306  delta_E= -1.4e-05  |g|= 0.000644  |ddm|= 0.00342
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000747797
diis-c [-1.00338506e-08 -4.49544238e-03  1.07996232e-02  9.93695819e-01]
  HOMO = -0.608438320616503  LUMO = 5.41655462042387
  mo_energy =
[-3.27147286e+01 -1.79696463e+00 -6.08438321e-01 -6.08438321e-01
 -6.08438321e-01  5.41655462e+00  5.41655462e+00  5.41655462e+00
  1.66021623e+01  1.25380255e+02  7.48345874e+02]
E1 = -181.4625673415724  E_coul = 54.3942818033924
cycle= 4 E= -127.06828553818  delta_E= -1.79e-08  |g|= 2.73e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.2202e-06
diis-c [-3.38952737e-13  8.92724109e-05 -4.37822534e-04 -2.30479809e-02
  1.02339653e+00]
  HOMO = -0.608437640880491  LUMO = 5.41655571041477
  mo_energy =
[-3.27147261e+01 -1.79696384e+00 -6.08437641e-01 -6.08437641e-01
 -6.08437641e-01  5.41655571e+00  5.41655571e+00  5.41655571e+00
  1.66021644e+01  1.25380258e+02  7.48345877e+02]
E1 = -181.4625651365134  E_coul = 54.3942795983333
cycle= 5 E= -127.06828553818  delta_E= -1.14e-13  |g|= 3.91e-08  |ddm|= 3.95e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4625651365134  E_coul = 54.3942795983333
  HOMO = -0.60843765710408  LUMO = 5.41655568458466
  mo_energy =
[-3.27147261e+01 -1.79696385e+00 -6.08437657e-01 -6.08437657e-01
 -6.08437657e-01  5.41655568e+00  5.41655568e+00  5.41655568e+00
  1.66021643e+01  1.25380258e+02  7.48345877e+02]
E1 = -181.46256519202174  E_coul = 54.39427965384165
Extra cycle  E= -127.06828553818  delta_E= 1.42e-14  |g|= 7.61e-09  |ddm|= 9.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91902084 454.01626646  87.79509899  24.65473387   8.22677597
   5.36714218   0.90391488]
E = -127.06828553818009
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.919020835115       1
[INPUT] 0    0    [1    /1   ]  454.016266459        1
[INPUT] 0    0    [1    /1   ]  87.795098994         1
[INPUT] 0    0    [1    /1   ]  24.6547338667        1
[INPUT] 0    0    [1    /1   ]  8.22677596837        1
[INPUT] 1    0    [1    /1   ]  5.36714218321        1
[INPUT] 1    0    [1    /1   ]  0.90391488112        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9190208351153162, 1.0]], [0, [454.0162664586211, 1.0]], [0, [87.79509899395767, 1.0]], [0, [24.654733866735647, 1.0]], [0, [8.226775968365894, 1.0]], [1, [5.367142183205517, 1.0]], [1, [0.9039148811203971, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91902084]
bas 1, expnt(s) = [454.01626646]
bas 2, expnt(s) = [87.79509899]
bas 3, expnt(s) = [24.65473387]
bas 4, expnt(s) = [8.22677597]
bas 5, expnt(s) = [5.36714218]
bas 6, expnt(s) = [0.90391488]
CPU time:       159.77
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91902084
   2.37142308 454.01626646 248.49553175  87.79509899  72.46323674
  24.65473387  27.95376201   8.22677597  12.27261972   5.36714218
  23.83215244   0.90391488   2.57124709]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.83008776805649
cond(S) = 45.388470994794574
E1 = -181.2030682284466  E_coul = 54.39855294896434
init E= -126.804515279482
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647677884453937  LUMO = 5.39429200578843
  mo_energy =
[-3.25597003e+01 -1.83619253e+00 -6.47677884e-01 -6.47677884e-01
 -6.47677884e-01  5.39429201e+00  5.39429201e+00  5.39429201e+00
  1.66494585e+01  1.25538644e+02  7.48579990e+02]
E1 = -181.353286692069  E_coul = 54.28540857661601
cycle= 1 E= -127.067878115453  delta_E= -0.263  |g|= 0.104  |ddm|= 0.349
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.120652
diis-c [-0.01455679  1.        ]
  HOMO = -0.615104094230793  LUMO = 5.40563016358987
  mo_energy =
[-3.27417755e+01 -1.80438754e+00 -6.15104094e-01 -6.15104094e-01
 -6.15104094e-01  5.40563016e+00  5.40563016e+00  5.40563016e+00
  1.65841033e+01  1.25352468e+02  7.48312792e+02]
E1 = -181.48325683044158  E_coul = 54.414985340418504
cycle= 2 E= -127.068271490023  delta_E= -0.000393  |g|= 0.016  |ddm|= 0.0204
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0196128
diis-c [-6.37301835e-05  1.29532765e-01  8.70467235e-01]
  HOMO = -0.608181803828603  LUMO = 5.41695233990688
  mo_energy =
[-3.27138226e+01 -1.79667929e+00 -6.08181804e-01 -6.08181804e-01
 -6.08181804e-01  5.41695234e+00  5.41695234e+00  5.41695234e+00
  1.66028159e+01  1.25381091e+02  7.48346651e+02]
E1 = -181.4618368761288  E_coul = 54.393551355822915
cycle= 3 E= -127.068285520306  delta_E= -1.4e-05  |g|= 0.000644  |ddm|= 0.00342
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000747797
diis-c [-1.00338506e-08 -4.49544238e-03  1.07996232e-02  9.93695819e-01]
  HOMO = -0.608438320616503  LUMO = 5.41655462042387
  mo_energy =
[-3.27147286e+01 -1.79696463e+00 -6.08438321e-01 -6.08438321e-01
 -6.08438321e-01  5.41655462e+00  5.41655462e+00  5.41655462e+00
  1.66021623e+01  1.25380255e+02  7.48345874e+02]
E1 = -181.4625673415724  E_coul = 54.3942818033924
cycle= 4 E= -127.06828553818  delta_E= -1.79e-08  |g|= 2.73e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.2202e-06
diis-c [-3.38952737e-13  8.92724109e-05 -4.37822534e-04 -2.30479809e-02
  1.02339653e+00]
  HOMO = -0.608437640880491  LUMO = 5.41655571041477
  mo_energy =
[-3.27147261e+01 -1.79696384e+00 -6.08437641e-01 -6.08437641e-01
 -6.08437641e-01  5.41655571e+00  5.41655571e+00  5.41655571e+00
  1.66021644e+01  1.25380258e+02  7.48345877e+02]
E1 = -181.4625651365134  E_coul = 54.3942795983333
cycle= 5 E= -127.06828553818  delta_E= -1.14e-13  |g|= 3.91e-08  |ddm|= 3.95e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4625651365134  E_coul = 54.3942795983333
  HOMO = -0.60843765710408  LUMO = 5.41655568458466
  mo_energy =
[-3.27147261e+01 -1.79696385e+00 -6.08437657e-01 -6.08437657e-01
 -6.08437657e-01  5.41655568e+00  5.41655568e+00  5.41655568e+00
  1.66021643e+01  1.25380258e+02  7.48345877e+02]
E1 = -181.46256519202174  E_coul = 54.39427965384165
Extra cycle  E= -127.06828553818  delta_E= 1.42e-14  |g|= 7.61e-09  |ddm|= 9.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.388470994794574
E1 = -181.46256519202174  E_coul = 54.39427965384165
init E= -127.06828553818
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.60843765363234  LUMO = 5.41655569013536
  mo_energy =
[-3.27147261e+01 -1.79696385e+00 -6.08437654e-01 -6.08437654e-01
 -6.08437654e-01  5.41655569e+00  5.41655569e+00  5.41655569e+00
  1.66021643e+01  1.25380258e+02  7.48345877e+02]
E1 = -181.46256518192772  E_coul = 54.39427964374769
cycle= 1 E= -127.06828553818  delta_E= 7.11e-14  |g|= 1.24e-09  |ddm|= 1.73e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.46256518192772  E_coul = 54.39427964374769
  HOMO = -0.608437654255545  LUMO = 5.41655568911898
  mo_energy =
[-3.27147261e+01 -1.79696385e+00 -6.08437654e-01 -6.08437654e-01
 -6.08437654e-01  5.41655569e+00  5.41655569e+00  5.41655569e+00
  1.66021643e+01  1.25380258e+02  7.48345877e+02]
E1 = -181.46256518386448  E_coul = 54.39427964568429
Extra cycle  E= -127.06828553818  delta_E= -1.71e-13  |g|= 2.44e-10  |ddm|= 3.05e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.91902084 454.01626646  87.79509899  24.65473387   8.22677597
   5.36714218   0.90391488]
grad_E = [-0.0062674  -0.00092304 -0.00025046  0.00089677 -0.00043996  0.00283894
  0.00277983]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.917508671508       1
[INPUT] 0    0    [1    /1   ]  454.38592073         1
[INPUT] 0    0    [1    /1   ]  87.8832636672        1
[INPUT] 0    0    [1    /1   ]  24.6194166205        1
[INPUT] 0    0    [1    /1   ]  8.20593027599        1
[INPUT] 1    0    [1    /1   ]  5.39754354698        1
[INPUT] 1    0    [1    /1   ]  0.907538707516       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9175086715079798, 1.0]], [0, [454.38592073025546, 1.0]], [0, [87.88326366719924, 1.0]], [0, [24.619416620535105, 1.0]], [0, [8.205930275989207, 1.0]], [1, [5.397543546977652, 1.0]], [1, [0.9075387075157109, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91750867]
bas 1, expnt(s) = [454.38592073]
bas 2, expnt(s) = [87.88326367]
bas 3, expnt(s) = [24.61941662]
bas 4, expnt(s) = [8.20593028]
bas 5, expnt(s) = [5.39754355]
bas 6, expnt(s) = [0.90753871]
CPU time:       162.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91750867
   2.36849601 454.38592073 248.64725773  87.88326367  72.51780609
  24.61941662  27.92372437   8.20593028  12.24928928   5.39754355
  24.00101377   0.90753871   2.58413881]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.828747017253992
cond(S) = 45.16704680095559
E1 = -181.20459978911904  E_coul = 54.40083169041138
init E= -126.803768098708
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647857679247943  LUMO = 5.4268633672147
  mo_energy =
[-3.25579531e+01 -1.83638476e+00 -6.47857679e-01 -6.47857679e-01
 -6.47857679e-01  5.42686337e+00  5.42686337e+00  5.42686337e+00
  1.65917387e+01  1.25429566e+02  7.49038465e+02]
E1 = -181.37952053670307  E_coul = 54.3113974085169
cycle= 1 E= -127.068123128186  delta_E= -0.264  |g|= 0.102  |ddm|= 0.349
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.118743
diis-c [-0.01409994  1.        ]
  HOMO = -0.613423710215216  LUMO = 5.44026228307235
  mo_energy =
[-3.27361087e+01 -1.80221238e+00 -6.13423710e-01 -6.13423710e-01
 -6.13423710e-01  5.44026228e+00  5.44026228e+00  5.44026228e+00
  1.65303133e+01  1.25247196e+02  7.48774815e+02]
E1 = -181.50603587186825  E_coul = 54.43753709314941
cycle= 2 E= -127.068498778719  delta_E= -0.000376  |g|= 0.0156  |ddm|= 0.0198
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0191225
diis-c [-6.23402238e-05  1.28159141e-01  8.71840859e-01]
  HOMO = -0.606680694228812  LUMO = 5.45134366032026
  mo_energy =
[-3.27088220e+01 -1.79471104e+00 -6.06680694e-01 -6.06680694e-01
 -6.06680694e-01  5.45134366e+00  5.45134366e+00  5.45134366e+00
  1.65485449e+01  1.25275154e+02  7.48807930e+02]
E1 = -181.48523226359288  E_coul = 54.41672022475004
cycle= 3 E= -127.068512038843  delta_E= -1.33e-05  |g|= 0.000642  |ddm|= 0.00333
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000750778
diis-c [-1.11942809e-08 -4.50482777e-03  1.16063146e-02  9.92898513e-01]
  HOMO = -0.60693705785513  LUMO = 5.45094384893394
  mo_energy =
[-3.27097323e+01 -1.79499427e+00 -6.06937058e-01 -6.06937058e-01
 -6.06937058e-01  5.45094385e+00  5.45094385e+00  5.45094385e+00
  1.65478941e+01  1.25274313e+02  7.48807143e+02]
E1 = -181.48596220950193  E_coul = 54.417450152758036
cycle= 4 E= -127.068512056744  delta_E= -1.79e-08  |g|= 2.99e-06  |ddm|= 0.000115
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.52599e-06
diis-c [-4.86551203e-13  9.98428593e-05 -4.80141362e-04 -2.49752438e-02
  1.02535554e+00]
  HOMO = -0.606936306396164  LUMO = 5.45094504397496
  mo_energy =
[-3.27097297e+01 -1.79499333e+00 -6.06936306e-01 -6.06936306e-01
 -6.06936306e-01  5.45094504e+00  5.45094504e+00  5.45094504e+00
  1.65478964e+01  1.25274316e+02  7.48807146e+02]
E1 = -181.4859599132101  E_coul = 54.41744785646591
cycle= 5 E= -127.068512056744  delta_E= -2.98e-13  |g|= 5.33e-08  |ddm|= 4.56e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4859599132101  E_coul = 54.41744785646591
  HOMO = -0.606936324719164  LUMO = 5.45094501396215
  mo_energy =
[-3.27097298e+01 -1.79499334e+00 -6.06936325e-01 -6.06936325e-01
 -6.06936325e-01  5.45094501e+00  5.45094501e+00  5.45094501e+00
  1.65478963e+01  1.25274316e+02  7.48807146e+02]
E1 = -181.4859599793081  E_coul = 54.41744792256407
Extra cycle  E= -127.068512056744  delta_E= 1.71e-13  |g|= 9.47e-09  |ddm|= 1.28e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91750867 454.38592073  87.88326367  24.61941662   8.20593028
   5.39754355   0.90753871]
E = -127.06851205674403
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.917508671508       1
[INPUT] 0    0    [1    /1   ]  454.38592073         1
[INPUT] 0    0    [1    /1   ]  87.8832636672        1
[INPUT] 0    0    [1    /1   ]  24.6194166205        1
[INPUT] 0    0    [1    /1   ]  8.20593027599        1
[INPUT] 1    0    [1    /1   ]  5.39754354698        1
[INPUT] 1    0    [1    /1   ]  0.907538707516       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9175086715079798, 1.0]], [0, [454.38592073025546, 1.0]], [0, [87.88326366719924, 1.0]], [0, [24.619416620535105, 1.0]], [0, [8.205930275989207, 1.0]], [1, [5.397543546977652, 1.0]], [1, [0.9075387075157109, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91750867]
bas 1, expnt(s) = [454.38592073]
bas 2, expnt(s) = [87.88326367]
bas 3, expnt(s) = [24.61941662]
bas 4, expnt(s) = [8.20593028]
bas 5, expnt(s) = [5.39754355]
bas 6, expnt(s) = [0.90753871]
CPU time:       163.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91750867
   2.36849601 454.38592073 248.64725773  87.88326367  72.51780609
  24.61941662  27.92372437   8.20593028  12.24928928   5.39754355
  24.00101377   0.90753871   2.58413881]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.828747017253992
cond(S) = 45.16704680095559
E1 = -181.20459978911904  E_coul = 54.40083169041138
init E= -126.803768098708
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.647857679247943  LUMO = 5.4268633672147
  mo_energy =
[-3.25579531e+01 -1.83638476e+00 -6.47857679e-01 -6.47857679e-01
 -6.47857679e-01  5.42686337e+00  5.42686337e+00  5.42686337e+00
  1.65917387e+01  1.25429566e+02  7.49038465e+02]
E1 = -181.37952053670307  E_coul = 54.3113974085169
cycle= 1 E= -127.068123128186  delta_E= -0.264  |g|= 0.102  |ddm|= 0.349
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.118743
diis-c [-0.01409994  1.        ]
  HOMO = -0.613423710215216  LUMO = 5.44026228307235
  mo_energy =
[-3.27361087e+01 -1.80221238e+00 -6.13423710e-01 -6.13423710e-01
 -6.13423710e-01  5.44026228e+00  5.44026228e+00  5.44026228e+00
  1.65303133e+01  1.25247196e+02  7.48774815e+02]
E1 = -181.50603587186825  E_coul = 54.43753709314941
cycle= 2 E= -127.068498778719  delta_E= -0.000376  |g|= 0.0156  |ddm|= 0.0198
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0191225
diis-c [-6.23402238e-05  1.28159141e-01  8.71840859e-01]
  HOMO = -0.606680694228812  LUMO = 5.45134366032026
  mo_energy =
[-3.27088220e+01 -1.79471104e+00 -6.06680694e-01 -6.06680694e-01
 -6.06680694e-01  5.45134366e+00  5.45134366e+00  5.45134366e+00
  1.65485449e+01  1.25275154e+02  7.48807930e+02]
E1 = -181.48523226359288  E_coul = 54.41672022475004
cycle= 3 E= -127.068512038843  delta_E= -1.33e-05  |g|= 0.000642  |ddm|= 0.00333
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000750778
diis-c [-1.11942809e-08 -4.50482777e-03  1.16063146e-02  9.92898513e-01]
  HOMO = -0.60693705785513  LUMO = 5.45094384893394
  mo_energy =
[-3.27097323e+01 -1.79499427e+00 -6.06937058e-01 -6.06937058e-01
 -6.06937058e-01  5.45094385e+00  5.45094385e+00  5.45094385e+00
  1.65478941e+01  1.25274313e+02  7.48807143e+02]
E1 = -181.48596220950193  E_coul = 54.417450152758036
cycle= 4 E= -127.068512056744  delta_E= -1.79e-08  |g|= 2.99e-06  |ddm|= 0.000115
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.52599e-06
diis-c [-4.86551203e-13  9.98428593e-05 -4.80141362e-04 -2.49752438e-02
  1.02535554e+00]
  HOMO = -0.606936306396164  LUMO = 5.45094504397496
  mo_energy =
[-3.27097297e+01 -1.79499333e+00 -6.06936306e-01 -6.06936306e-01
 -6.06936306e-01  5.45094504e+00  5.45094504e+00  5.45094504e+00
  1.65478964e+01  1.25274316e+02  7.48807146e+02]
E1 = -181.4859599132101  E_coul = 54.41744785646591
cycle= 5 E= -127.068512056744  delta_E= -2.98e-13  |g|= 5.33e-08  |ddm|= 4.56e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.4859599132101  E_coul = 54.41744785646591
  HOMO = -0.606936324719164  LUMO = 5.45094501396215
  mo_energy =
[-3.27097298e+01 -1.79499334e+00 -6.06936325e-01 -6.06936325e-01
 -6.06936325e-01  5.45094501e+00  5.45094501e+00  5.45094501e+00
  1.65478963e+01  1.25274316e+02  7.48807146e+02]
E1 = -181.4859599793081  E_coul = 54.41744792256407
Extra cycle  E= -127.068512056744  delta_E= 1.71e-13  |g|= 9.47e-09  |ddm|= 1.28e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 45.16704680095559
E1 = -181.4859599793081  E_coul = 54.41744792256407
init E= -127.068512056744
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.606936320571508  LUMO = 5.45094502058712
  mo_energy =
[-3.27097298e+01 -1.79499334e+00 -6.06936321e-01 -6.06936321e-01
 -6.06936321e-01  5.45094502e+00  5.45094502e+00  5.45094502e+00
  1.65478963e+01  1.25274316e+02  7.48807146e+02]
E1 = -181.48595996749467  E_coul = 54.41744791075043
cycle= 1 E= -127.068512056744  delta_E= -1.99e-13  |g|= 1.44e-09  |ddm|= 2.1e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.48595996749467  E_coul = 54.41744791075043
  HOMO = -0.606936321299321  LUMO = 5.4509450193921
  mo_energy =
[-3.27097298e+01 -1.79499334e+00 -6.06936321e-01 -6.06936321e-01
 -6.06936321e-01  5.45094502e+00  5.45094502e+00  5.45094502e+00
  1.65478963e+01  1.25274316e+02  7.48807146e+02]
E1 = -181.485959969764  E_coul = 54.41744791301994
Extra cycle  E= -127.068512056744  delta_E= 1.71e-13  |g|= 2.87e-10  |ddm|= 3.56e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.91750867 454.38592073  87.88326367  24.61941662   8.20593028
   5.39754355   0.90753871]
grad_E = [-0.00973487 -0.00092656 -0.00017015  0.0006953  -0.00032572  0.00558236
  0.00484153]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.915233846588       1
[INPUT] 0    0    [1    /1   ]  455.470355621        1
[INPUT] 0    0    [1    /1   ]  88.1274873918        1
[INPUT] 0    0    [1    /1   ]  24.5960470982        1
[INPUT] 0    0    [1    /1   ]  8.18337510606        1
[INPUT] 1    0    [1    /1   ]  5.44691005614        1
[INPUT] 1    0    [1    /1   ]  0.913386396158       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9152338465884508, 1.0]], [0, [455.47035562088286, 1.0]], [0, [88.12748739181598, 1.0]], [0, [24.596047098241897, 1.0]], [0, [8.18337510606319, 1.0]], [1, [5.446910056142706, 1.0]], [1, [0.913386396158218, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91523385]
bas 1, expnt(s) = [455.47035562]
bas 2, expnt(s) = [88.12748739]
bas 3, expnt(s) = [24.5960471]
bas 4, expnt(s) = [8.18337511]
bas 5, expnt(s) = [5.44691006]
bas 6, expnt(s) = [0.9133864]
CPU time:       166.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91523385
   2.3640904  455.47035562 249.09219021  88.12748739  72.66889649
  24.5960471   27.90384245   8.18337511  12.22402891   5.44691006
  24.27572155   0.9133864    2.60496904]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826531614998553
cond(S) = 44.81500512364559
E1 = -181.20673832698836  E_coul = 54.40413470244514
init E= -126.802603624543
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648141539855196  LUMO = 5.47974573249016
  mo_energy =
[-3.25554603e+01 -1.83669003e+00 -6.48141540e-01 -6.48141540e-01
 -6.48141540e-01  5.47974573e+00  5.47974573e+00  5.47974573e+00
  1.65313265e+01  1.25458826e+02  7.50771321e+02]
E1 = -181.42204320778475  E_coul = 54.35330156358509
cycle= 1 E= -127.0687416442  delta_E= -0.266  |g|= 0.0992  |ddm|= 0.35
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.115643
diis-c [-0.01337333  1.        ]
  HOMO = -0.610668839478023  LUMO = 5.4965359035531
  mo_energy =
[-3.27272442e+01 -1.79868119e+00 -6.10668839e-01 -6.10668839e-01
 -6.10668839e-01  5.49653590e+00  5.49653590e+00  5.49653590e+00
  1.64761226e+01  1.25282578e+02  7.50513452e+02]
E1 = -181.54295576221622  E_coul = 54.473866293007916
cycle= 2 E= -127.069089469208  delta_E= -0.000348  |g|= 0.015  |ddm|= 0.0189
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0183194
diis-c [-6.01778266e-05  1.25746555e-01  8.74253445e-01]
  HOMO = -0.604216226454074  LUMO = 5.50722155515304
  mo_energy =
[-3.27010412e+01 -1.79151229e+00 -6.04216226e-01 -6.04216226e-01
 -6.04216226e-01  5.50722156e+00  5.50722156e+00  5.50722156e+00
  1.64935916e+01  1.25309460e+02  7.50545356e+02]
E1 = -181.52314895821806  E_coul = 54.45404743293478
cycle= 3 E= -127.069101525283  delta_E= -1.21e-05  |g|= 0.000641  |ddm|= 0.00317
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000756434
diis-c [-1.32904628e-08 -4.52818789e-03  1.30069512e-02  9.91521237e-01]
  HOMO = -0.604472634446796  LUMO = 5.50681785817514
  mo_energy =
[-3.27019596e+01 -1.79179245e+00 -6.04472634e-01 -6.04472634e-01
 -6.04472634e-01  5.50681786e+00  5.50681786e+00  5.50681786e+00
  1.64929439e+01  1.25308610e+02  7.50544550e+02]
E1 = -181.5238786874284  E_coul = 54.454777144157866
cycle= 4 E= -127.069101543271  delta_E= -1.8e-08  |g|= 3.52e-06  |ddm|= 0.000115
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.08717e-06
diis-c [-8.27443872e-13  1.15845207e-04 -5.57603755e-04 -2.78002632e-02
  1.02824202e+00]
  HOMO = -0.60447175651421  LUMO = 5.50681923976086
  mo_energy =
[-3.27019567e+01 -1.79179126e+00 -6.04471757e-01 -6.04471757e-01
 -6.04471757e-01  5.50681924e+00  5.50681924e+00  5.50681924e+00
  1.64929467e+01  1.25308613e+02  7.50544553e+02]
E1 = -181.5238762175689  E_coul = 54.454774674298086
cycle= 5 E= -127.069101543271  delta_E= -2.84e-13  |g|= 7.71e-08  |ddm|= 5.82e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.5238762175689  E_coul = 54.454774674298086
  HOMO = -0.604471778528913  LUMO = 5.50681920245849
  mo_energy =
[-3.27019568e+01 -1.79179128e+00 -6.04471779e-01 -6.04471779e-01
 -6.04471779e-01  5.50681920e+00  5.50681920e+00  5.50681920e+00
  1.64929467e+01  1.25308613e+02  7.50544553e+02]
E1 = -181.5238763007919  E_coul = 54.45477475752099
Extra cycle  E= -127.069101543271  delta_E= -8.53e-14  |g|= 1.25e-08  |ddm|= 1.79e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91523385 455.47035562  88.12748739  24.5960471    8.18337511
   5.44691006   0.9133864 ]
E = -127.0691015432709
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.915233846588       1
[INPUT] 0    0    [1    /1   ]  455.470355621        1
[INPUT] 0    0    [1    /1   ]  88.1274873918        1
[INPUT] 0    0    [1    /1   ]  24.5960470982        1
[INPUT] 0    0    [1    /1   ]  8.18337510606        1
[INPUT] 1    0    [1    /1   ]  5.44691005614        1
[INPUT] 1    0    [1    /1   ]  0.913386396158       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9152338465884508, 1.0]], [0, [455.47035562088286, 1.0]], [0, [88.12748739181598, 1.0]], [0, [24.596047098241897, 1.0]], [0, [8.18337510606319, 1.0]], [1, [5.446910056142706, 1.0]], [1, [0.913386396158218, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91523385]
bas 1, expnt(s) = [455.47035562]
bas 2, expnt(s) = [88.12748739]
bas 3, expnt(s) = [24.5960471]
bas 4, expnt(s) = [8.18337511]
bas 5, expnt(s) = [5.44691006]
bas 6, expnt(s) = [0.9133864]
CPU time:       167.51
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91523385
   2.3640904  455.47035562 249.09219021  88.12748739  72.66889649
  24.5960471   27.90384245   8.18337511  12.22402891   5.44691006
  24.27572155   0.9133864    2.60496904]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826531614998553
cond(S) = 44.81500512364559
E1 = -181.20673832698836  E_coul = 54.40413470244514
init E= -126.802603624543
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648141539855196  LUMO = 5.47974573249016
  mo_energy =
[-3.25554603e+01 -1.83669003e+00 -6.48141540e-01 -6.48141540e-01
 -6.48141540e-01  5.47974573e+00  5.47974573e+00  5.47974573e+00
  1.65313265e+01  1.25458826e+02  7.50771321e+02]
E1 = -181.42204320778475  E_coul = 54.35330156358509
cycle= 1 E= -127.0687416442  delta_E= -0.266  |g|= 0.0992  |ddm|= 0.35
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.115643
diis-c [-0.01337333  1.        ]
  HOMO = -0.610668839478023  LUMO = 5.4965359035531
  mo_energy =
[-3.27272442e+01 -1.79868119e+00 -6.10668839e-01 -6.10668839e-01
 -6.10668839e-01  5.49653590e+00  5.49653590e+00  5.49653590e+00
  1.64761226e+01  1.25282578e+02  7.50513452e+02]
E1 = -181.54295576221622  E_coul = 54.473866293007916
cycle= 2 E= -127.069089469208  delta_E= -0.000348  |g|= 0.015  |ddm|= 0.0189
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0183194
diis-c [-6.01778266e-05  1.25746555e-01  8.74253445e-01]
  HOMO = -0.604216226454074  LUMO = 5.50722155515304
  mo_energy =
[-3.27010412e+01 -1.79151229e+00 -6.04216226e-01 -6.04216226e-01
 -6.04216226e-01  5.50722156e+00  5.50722156e+00  5.50722156e+00
  1.64935916e+01  1.25309460e+02  7.50545356e+02]
E1 = -181.52314895821806  E_coul = 54.45404743293478
cycle= 3 E= -127.069101525283  delta_E= -1.21e-05  |g|= 0.000641  |ddm|= 0.00317
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000756434
diis-c [-1.32904628e-08 -4.52818789e-03  1.30069512e-02  9.91521237e-01]
  HOMO = -0.604472634446796  LUMO = 5.50681785817514
  mo_energy =
[-3.27019596e+01 -1.79179245e+00 -6.04472634e-01 -6.04472634e-01
 -6.04472634e-01  5.50681786e+00  5.50681786e+00  5.50681786e+00
  1.64929439e+01  1.25308610e+02  7.50544550e+02]
E1 = -181.5238786874284  E_coul = 54.454777144157866
cycle= 4 E= -127.069101543271  delta_E= -1.8e-08  |g|= 3.52e-06  |ddm|= 0.000115
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.08717e-06
diis-c [-8.27443872e-13  1.15845207e-04 -5.57603755e-04 -2.78002632e-02
  1.02824202e+00]
  HOMO = -0.60447175651421  LUMO = 5.50681923976086
  mo_energy =
[-3.27019567e+01 -1.79179126e+00 -6.04471757e-01 -6.04471757e-01
 -6.04471757e-01  5.50681924e+00  5.50681924e+00  5.50681924e+00
  1.64929467e+01  1.25308613e+02  7.50544553e+02]
E1 = -181.5238762175689  E_coul = 54.454774674298086
cycle= 5 E= -127.069101543271  delta_E= -2.84e-13  |g|= 7.71e-08  |ddm|= 5.82e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.5238762175689  E_coul = 54.454774674298086
  HOMO = -0.604471778528913  LUMO = 5.50681920245849
  mo_energy =
[-3.27019568e+01 -1.79179128e+00 -6.04471779e-01 -6.04471779e-01
 -6.04471779e-01  5.50681920e+00  5.50681920e+00  5.50681920e+00
  1.64929467e+01  1.25308613e+02  7.50544553e+02]
E1 = -181.5238763007919  E_coul = 54.45477475752099
Extra cycle  E= -127.069101543271  delta_E= -8.53e-14  |g|= 1.25e-08  |ddm|= 1.79e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.81500512364559
E1 = -181.5238763007919  E_coul = 54.45477475752099
init E= -127.069101543271
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604471773294767  LUMO = 5.50681921083625
  mo_energy =
[-3.27019568e+01 -1.79179127e+00 -6.04471773e-01 -6.04471773e-01
 -6.04471773e-01  5.50681921e+00  5.50681921e+00  5.50681921e+00
  1.64929467e+01  1.25308613e+02  7.50544553e+02]
E1 = -181.5238762861958  E_coul = 54.45477474292488
cycle= 1 E= -127.069101543271  delta_E=    0  |g|= 1.78e-09  |ddm|= 2.7e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.5238762861958  E_coul = 54.45477474292488
  HOMO = -0.604471774191829  LUMO = 5.50681920934916
  mo_energy =
[-3.27019568e+01 -1.79179127e+00 -6.04471774e-01 -6.04471774e-01
 -6.04471774e-01  5.50681921e+00  5.50681921e+00  5.50681921e+00
  1.64929467e+01  1.25308613e+02  7.50544553e+02]
E1 = -181.52387628899578  E_coul = 54.45477474572497
Extra cycle  E= -127.069101543271  delta_E= 8.53e-14  |g|= 3.56e-10  |ddm|= 4.38e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [  0.91523385 455.47035562  88.12748739  24.5960471    8.18337511
   5.44691006   0.9133864 ]
grad_E = [-1.52442426e-02 -9.29894783e-04 -4.17332829e-05  3.70395536e-04
 -1.42833283e-04  9.95029550e-03  8.12750766e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.91207489734        1
[INPUT] 0    0    [1    /1   ]  458.460801138        1
[INPUT] 0    0    [1    /1   ]  88.7931810696        1
[INPUT] 0    0    [1    /1   ]  24.653303016         1
[INPUT] 0    0    [1    /1   ]  8.17919954028        1
[INPUT] 1    0    [1    /1   ]  5.52623530454        1
[INPUT] 1    0    [1    /1   ]  0.922688008626       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9120748973401365, 1.0]], [0, [458.46080113784103, 1.0]], [0, [88.79318106960258, 1.0]], [0, [24.65330301597726, 1.0]], [0, [8.179199540276965, 1.0]], [1, [5.526235304540593, 1.0]], [1, [0.9226880086261217, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.9120749]
bas 1, expnt(s) = [458.46080114]
bas 2, expnt(s) = [88.79318107]
bas 3, expnt(s) = [24.65330302]
bas 4, expnt(s) = [8.17919954]
bas 5, expnt(s) = [5.5262353]
bas 6, expnt(s) = [0.92268801]
CPU time:       170.94
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.9120749
   2.35796797 458.46080114 250.31776989  88.79318107  73.08020141
  24.65330302  27.95254527   8.17919954  12.21935063   5.5262353
  24.71844286   0.92268801   2.63817128]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.822872944669937
cond(S) = 44.28451654962201
E1 = -181.20915662574902  E_coul = 54.40836248887392
init E= -126.800794136875
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64858302592991  LUMO = 5.56469051973109
  mo_energy =
[-3.25523587e+01 -1.83715374e+00 -6.48583026e-01 -6.48583026e-01
 -6.48583026e-01  5.56469052e+00  5.56469052e+00  5.56469052e+00
  1.65280216e+01  1.26078669e+02  7.56181204e+02]
E1 = -181.4901629585991  E_coul = 54.41986408271548
cycle= 1 E= -127.070298875884  delta_E= -0.27  |g|= 0.095  |ddm|= 0.351
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110671
diis-c [-0.01224807  1.        ]
  HOMO = -0.606174762936953  LUMO = 5.58705235982509
  mo_energy =
[-3.27138835e+01 -1.79299487e+00 -6.06174763e-01 -6.06174763e-01
 -6.06174763e-01  5.58705236e+00  5.58705236e+00  5.58705236e+00
  1.64823901e+01  1.25912105e+02  7.55932672e+02]
E1 = -181.6020889095865  E_coul = 54.53148441754654
cycle= 2 E= -127.07060449204  delta_E= -0.000306  |g|= 0.0139  |ddm|= 0.0174
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0170114
diis-c [-5.69577625e-05  1.21325736e-01  8.78674264e-01]
  HOMO = -0.600187100928991  LUMO = 5.59708980933207
  mo_energy =
[-3.26894271e+01 -1.78635152e+00 -6.00187101e-01 -6.00187101e-01
 -6.00187101e-01  5.59708981e+00  5.59708981e+00  5.59708981e+00
  1.64986791e+01  1.25937268e+02  7.55962623e+02]
E1 = -181.58387343653288  E_coul = 54.51325870226255
cycle= 3 E= -127.07061473427  delta_E= -1.02e-05  |g|= 0.000641  |ddm|= 0.00292
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000767491
diis-c [-1.71488557e-08 -4.58876595e-03  1.55279484e-02  9.89060818e-01]
  HOMO = -0.600444328415182  LUMO = 5.59667859152254
  mo_energy =
[-3.26903614e+01 -1.78662777e+00 -6.00444328e-01 -6.00444328e-01
 -6.00444328e-01  5.59667859e+00  5.59667859e+00  5.59667859e+00
  1.64980331e+01  1.25936400e+02  7.55961785e+02]
E1 = -181.58460433251497  E_coul = 54.51398958001416
cycle= 4 E= -127.070614752501  delta_E= -1.82e-08  |g|= 4.57e-06  |ddm|= 0.000114
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.08525e-06
diis-c [-1.56224749e-12  1.37701560e-04 -7.04222709e-04 -3.13485442e-02
  1.03191507e+00]
  HOMO = -0.600443217053065  LUMO = 5.59668032339005
  mo_energy =
[-3.26903580e+01 -1.78662615e+00 -6.00443217e-01 -6.00443217e-01
 -6.00443217e-01  5.59668032e+00  5.59668032e+00  5.59668032e+00
  1.64980368e+01  1.25936404e+02  7.55961788e+02]
E1 = -181.5846015015469  E_coul = 54.513986749045486
cycle= 5 E= -127.070614752501  delta_E= -6.11e-13  |g|= 1.11e-07  |ddm|= 8.15e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.5846015015469  E_coul = 54.513986749045486
  HOMO = -0.60044324534131  LUMO = 5.59668027374846
  mo_energy =
[-3.26903581e+01 -1.78662616e+00 -6.00443245e-01 -6.00443245e-01
 -6.00443245e-01  5.59668027e+00  5.59668027e+00  5.59668027e+00
  1.64980368e+01  1.25936404e+02  7.55961788e+02]
E1 = -181.58460161092984  E_coul = 54.51398685842849
Extra cycle  E= -127.070614752501  delta_E= 7.11e-14  |g|= 1.69e-08  |ddm|= 2.52e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.9120749  458.46080114  88.79318107  24.65330302   8.17919954
   5.5262353    0.92268801]
E = -127.07061475250134
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.91207489734        1
[INPUT] 0    0    [1    /1   ]  458.460801138        1
[INPUT] 0    0    [1    /1   ]  88.7931810696        1
[INPUT] 0    0    [1    /1   ]  24.653303016         1
[INPUT] 0    0    [1    /1   ]  8.17919954028        1
[INPUT] 1    0    [1    /1   ]  5.52623530454        1
[INPUT] 1    0    [1    /1   ]  0.922688008626       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9120748973401365, 1.0]], [0, [458.46080113784103, 1.0]], [0, [88.79318106960258, 1.0]], [0, [24.65330301597726, 1.0]], [0, [8.179199540276965, 1.0]], [1, [5.526235304540593, 1.0]], [1, [0.9226880086261217, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.9120749]
bas 1, expnt(s) = [458.46080114]
bas 2, expnt(s) = [88.79318107]
bas 3, expnt(s) = [24.65330302]
bas 4, expnt(s) = [8.17919954]
bas 5, expnt(s) = [5.5262353]
bas 6, expnt(s) = [0.92268801]
CPU time:       171.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.9120749
   2.35796797 458.46080114 250.31776989  88.79318107  73.08020141
  24.65330302  27.95254527   8.17919954  12.21935063   5.5262353
  24.71844286   0.92268801   2.63817128]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.822872944669937
cond(S) = 44.28451654962201
E1 = -181.20915662574902  E_coul = 54.40836248887392
init E= -126.800794136875
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64858302592991  LUMO = 5.56469051973109
  mo_energy =
[-3.25523587e+01 -1.83715374e+00 -6.48583026e-01 -6.48583026e-01
 -6.48583026e-01  5.56469052e+00  5.56469052e+00  5.56469052e+00
  1.65280216e+01  1.26078669e+02  7.56181204e+02]
E1 = -181.4901629585991  E_coul = 54.41986408271548
cycle= 1 E= -127.070298875884  delta_E= -0.27  |g|= 0.095  |ddm|= 0.351
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110671
diis-c [-0.01224807  1.        ]
  HOMO = -0.606174762936953  LUMO = 5.58705235982509
  mo_energy =
[-3.27138835e+01 -1.79299487e+00 -6.06174763e-01 -6.06174763e-01
 -6.06174763e-01  5.58705236e+00  5.58705236e+00  5.58705236e+00
  1.64823901e+01  1.25912105e+02  7.55932672e+02]
E1 = -181.6020889095865  E_coul = 54.53148441754654
cycle= 2 E= -127.07060449204  delta_E= -0.000306  |g|= 0.0139  |ddm|= 0.0174
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0170114
diis-c [-5.69577625e-05  1.21325736e-01  8.78674264e-01]
  HOMO = -0.600187100928991  LUMO = 5.59708980933207
  mo_energy =
[-3.26894271e+01 -1.78635152e+00 -6.00187101e-01 -6.00187101e-01
 -6.00187101e-01  5.59708981e+00  5.59708981e+00  5.59708981e+00
  1.64986791e+01  1.25937268e+02  7.55962623e+02]
E1 = -181.58387343653288  E_coul = 54.51325870226255
cycle= 3 E= -127.07061473427  delta_E= -1.02e-05  |g|= 0.000641  |ddm|= 0.00292
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000767491
diis-c [-1.71488557e-08 -4.58876595e-03  1.55279484e-02  9.89060818e-01]
  HOMO = -0.600444328415182  LUMO = 5.59667859152254
  mo_energy =
[-3.26903614e+01 -1.78662777e+00 -6.00444328e-01 -6.00444328e-01
 -6.00444328e-01  5.59667859e+00  5.59667859e+00  5.59667859e+00
  1.64980331e+01  1.25936400e+02  7.55961785e+02]
E1 = -181.58460433251497  E_coul = 54.51398958001416
cycle= 4 E= -127.070614752501  delta_E= -1.82e-08  |g|= 4.57e-06  |ddm|= 0.000114
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.08525e-06
diis-c [-1.56224749e-12  1.37701560e-04 -7.04222709e-04 -3.13485442e-02
  1.03191507e+00]
  HOMO = -0.600443217053065  LUMO = 5.59668032339005
  mo_energy =
[-3.26903580e+01 -1.78662615e+00 -6.00443217e-01 -6.00443217e-01
 -6.00443217e-01  5.59668032e+00  5.59668032e+00  5.59668032e+00
  1.64980368e+01  1.25936404e+02  7.55961788e+02]
E1 = -181.5846015015469  E_coul = 54.513986749045486
cycle= 5 E= -127.070614752501  delta_E= -6.11e-13  |g|= 1.11e-07  |ddm|= 8.15e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.5846015015469  E_coul = 54.513986749045486
  HOMO = -0.60044324534131  LUMO = 5.59668027374846
  mo_energy =
[-3.26903581e+01 -1.78662616e+00 -6.00443245e-01 -6.00443245e-01
 -6.00443245e-01  5.59668027e+00  5.59668027e+00  5.59668027e+00
  1.64980368e+01  1.25936404e+02  7.55961788e+02]
E1 = -181.58460161092984  E_coul = 54.51398685842849
Extra cycle  E= -127.070614752501  delta_E= 7.11e-14  |g|= 1.69e-08  |ddm|= 2.52e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 44.28451654962201
E1 = -181.58460161092984  E_coul = 54.51398685842849
init E= -127.070614752501
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.600443238461871  LUMO = 5.5966802848475
  mo_energy =
[-3.26903581e+01 -1.78662615e+00 -6.00443238e-01 -6.00443238e-01
 -6.00443238e-01  5.59668028e+00  5.59668028e+00  5.59668028e+00
  1.64980368e+01  1.25936404e+02  7.55961788e+02]
E1 = -181.58460159210858  E_coul = 54.513986839607284
cycle= 1 E= -127.070614752501  delta_E= 4.26e-14  |g|= 2.29e-09  |ddm|= 3.59e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.58460159210858  E_coul = 54.513986839607284
  HOMO = -0.600443239615621  LUMO = 5.59668028290905
  mo_energy =
[-3.26903581e+01 -1.78662615e+00 -6.00443240e-01 -6.00443240e-01
 -6.00443240e-01  5.59668028e+00  5.59668028e+00  5.59668028e+00
  1.64980368e+01  1.25936404e+02  7.55961788e+02]
E1 = -181.58460159569162  E_coul = 54.513986843190324
Extra cycle  E= -127.070614752501  delta_E=    0  |g|= 4.57e-10  |ddm|= 5.6e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.9120749  458.46080114  88.79318107  24.65330302   8.17919954
   5.5262353    0.92268801]
grad_E = [-0.02379945 -0.00092925  0.00015479 -0.00012814  0.00013603  0.01675065
  0.01323129]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.908373525253       1
[INPUT] 0    0    [1    /1   ]  466.33713809         1
[INPUT] 0    0    [1    /1   ]  90.5437556994        1
[INPUT] 0    0    [1    /1   ]  24.9815040649        1
[INPUT] 0    0    [1    /1   ]  8.25287660226        1
[INPUT] 1    0    [1    /1   ]  5.65061493594        1
[INPUT] 1    0    [1    /1   ]  0.937031471264       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9083735252526536, 1.0]], [0, [466.3371380900404, 1.0]], [0, [90.5437556993694, 1.0]], [0, [24.981504064920244, 1.0]], [0, [8.252876602255812, 1.0]], [1, [5.65061493593563, 1.0]], [1, [0.937031471263778, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.90837353]
bas 1, expnt(s) = [466.33713809]
bas 2, expnt(s) = [90.5437557]
bas 3, expnt(s) = [24.98150406]
bas 4, expnt(s) = [8.2528766]
bas 5, expnt(s) = [5.65061494]
bas 6, expnt(s) = [0.93703147]
CPU time:       174.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.90837353
   2.35078751 466.33713809 253.53622904  90.5437557   74.15815269
  24.98150406  28.23117545   8.2528766   12.30181065   5.65061494
  25.41581461   0.93703147   2.68953447]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.81690746212935
cond(S) = 43.53444604388054
E1 = -181.21040760714445  E_coul = 54.41229514674767
init E= -126.798112460397
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649249856979619  LUMO = 5.6977640586876
  mo_energy =
[-3.25497177e+01 -1.83782172e+00 -6.49249857e-01 -6.49249857e-01
 -6.49249857e-01  5.69776406e+00  5.69776406e+00  5.69776406e+00
  1.67591406e+01  1.28511326e+02  7.71389990e+02]
E1 = -181.59657548781894  E_coul = 54.522415666004385
cycle= 1 E= -127.074159821815  delta_E= -0.276  |g|= 0.0887  |ddm|= 0.354
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102956
diis-c [-0.01059995  1.        ]
  HOMO = -0.598962009699969  LUMO = 5.72918022744251
  mo_energy =
[-3.26950821e+01 -1.78405151e+00 -5.98962010e-01 -5.98962010e-01
 -5.98962010e-01  5.72918023e+00  5.72918023e+00  5.72918023e+00
  1.67275442e+01  1.28359594e+02  7.71156239e+02]
E1 = -181.69447092061995  E_coul = 54.62006530807137
cycle= 2 E= -127.074405612549  delta_E= -0.000246  |g|= 0.0123  |ddm|= 0.0151
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0149293
diis-c [-5.25204353e-05  1.12760147e-01  8.87239853e-01]
  HOMO = -0.593698632697846  LUMO = 5.73817252200101
  mo_energy =
[-3.26733731e+01 -1.77821304e+00 -5.93698633e-01 -5.93698633e-01
 -5.93698633e-01  5.73817252e+00  5.73817252e+00  5.73817252e+00
  1.67420761e+01  1.28382084e+02  7.71183119e+02]
E1 = -181.6787140057938  E_coul = 54.604300685188164
cycle= 3 E= -127.074413320606  delta_E= -7.71e-06  |g|= 0.000645  |ddm|= 0.00254
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000788485
diis-c [-2.37938357e-08 -4.74210340e-03  2.03568067e-02  9.84385297e-01]
  HOMO = -0.593958884057255  LUMO = 5.73774647647871
  mo_energy =
[-3.26743390e+01 -1.77848597e+00 -5.93958884e-01 -5.93958884e-01
 -5.93958884e-01  5.73774648e+00  5.73774648e+00  5.73774648e+00
  1.67414233e+01  1.28381179e+02  7.71182222e+02]
E1 = -181.6794497712709  E_coul = 54.60503643184664
cycle= 4 E= -127.074413339424  delta_E= -1.88e-08  |g|= 6.3e-06  |ddm|= 0.000115
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.64947e-06
diis-c [-2.91157570e-12  1.60590465e-04 -9.84785943e-04 -3.40226296e-02
  1.03484683e+00]
  HOMO = -0.59395732354044  LUMO = 5.73774890951605
  mo_energy =
[-3.26743344e+01 -1.77848363e+00 -5.93957324e-01 -5.93957324e-01
 -5.93957324e-01  5.73774891e+00  5.73774891e+00  5.73774891e+00
  1.67414285e+01  1.28381184e+02  7.71182225e+02]
E1 = -181.67944612055922  E_coul = 54.605032781133716
cycle= 5 E= -127.074413339426  delta_E= -1.25e-12  |g|= 1.5e-07  |ddm|= 1.16e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67944612055922  E_coul = 54.605032781133716
  HOMO = -0.5939573610767  LUMO = 5.73774884147121
  mo_energy =
[-3.26743345e+01 -1.77848365e+00 -5.93957361e-01 -5.93957361e-01
 -5.93957361e-01  5.73774884e+00  5.73774884e+00  5.73774884e+00
  1.67414285e+01  1.28381184e+02  7.71182225e+02]
E1 = -181.67944626370814  E_coul = 54.605032924282746
Extra cycle  E= -127.074413339425  delta_E= 9.95e-14  |g|= 2.23e-08  |ddm|= 3.32e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.90837353 466.33713809  90.5437557   24.98150406   8.2528766
   5.65061494   0.93703147]
E = -127.0744133394254
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.908373525253       1
[INPUT] 0    0    [1    /1   ]  466.33713809         1
[INPUT] 0    0    [1    /1   ]  90.5437556994        1
[INPUT] 0    0    [1    /1   ]  24.9815040649        1
[INPUT] 0    0    [1    /1   ]  8.25287660226        1
[INPUT] 1    0    [1    /1   ]  5.65061493594        1
[INPUT] 1    0    [1    /1   ]  0.937031471264       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9083735252526536, 1.0]], [0, [466.3371380900404, 1.0]], [0, [90.5437556993694, 1.0]], [0, [24.981504064920244, 1.0]], [0, [8.252876602255812, 1.0]], [1, [5.65061493593563, 1.0]], [1, [0.937031471263778, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.90837353]
bas 1, expnt(s) = [466.33713809]
bas 2, expnt(s) = [90.5437557]
bas 3, expnt(s) = [24.98150406]
bas 4, expnt(s) = [8.2528766]
bas 5, expnt(s) = [5.65061494]
bas 6, expnt(s) = [0.93703147]
CPU time:       175.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.90837353
   2.35078751 466.33713809 253.53622904  90.5437557   74.15815269
  24.98150406  28.23117545   8.2528766   12.30181065   5.65061494
  25.41581461   0.93703147   2.68953447]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.81690746212935
cond(S) = 43.53444604388054
E1 = -181.21040760714445  E_coul = 54.41229514674767
init E= -126.798112460397
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649249856979619  LUMO = 5.6977640586876
  mo_energy =
[-3.25497177e+01 -1.83782172e+00 -6.49249857e-01 -6.49249857e-01
 -6.49249857e-01  5.69776406e+00  5.69776406e+00  5.69776406e+00
  1.67591406e+01  1.28511326e+02  7.71389990e+02]
E1 = -181.59657548781894  E_coul = 54.522415666004385
cycle= 1 E= -127.074159821815  delta_E= -0.276  |g|= 0.0887  |ddm|= 0.354
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102956
diis-c [-0.01059995  1.        ]
  HOMO = -0.598962009699969  LUMO = 5.72918022744251
  mo_energy =
[-3.26950821e+01 -1.78405151e+00 -5.98962010e-01 -5.98962010e-01
 -5.98962010e-01  5.72918023e+00  5.72918023e+00  5.72918023e+00
  1.67275442e+01  1.28359594e+02  7.71156239e+02]
E1 = -181.69447092061995  E_coul = 54.62006530807137
cycle= 2 E= -127.074405612549  delta_E= -0.000246  |g|= 0.0123  |ddm|= 0.0151
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0149293
diis-c [-5.25204353e-05  1.12760147e-01  8.87239853e-01]
  HOMO = -0.593698632697846  LUMO = 5.73817252200101
  mo_energy =
[-3.26733731e+01 -1.77821304e+00 -5.93698633e-01 -5.93698633e-01
 -5.93698633e-01  5.73817252e+00  5.73817252e+00  5.73817252e+00
  1.67420761e+01  1.28382084e+02  7.71183119e+02]
E1 = -181.6787140057938  E_coul = 54.604300685188164
cycle= 3 E= -127.074413320606  delta_E= -7.71e-06  |g|= 0.000645  |ddm|= 0.00254
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000788485
diis-c [-2.37938357e-08 -4.74210340e-03  2.03568067e-02  9.84385297e-01]
  HOMO = -0.593958884057255  LUMO = 5.73774647647871
  mo_energy =
[-3.26743390e+01 -1.77848597e+00 -5.93958884e-01 -5.93958884e-01
 -5.93958884e-01  5.73774648e+00  5.73774648e+00  5.73774648e+00
  1.67414233e+01  1.28381179e+02  7.71182222e+02]
E1 = -181.6794497712709  E_coul = 54.60503643184664
cycle= 4 E= -127.074413339424  delta_E= -1.88e-08  |g|= 6.3e-06  |ddm|= 0.000115
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.64947e-06
diis-c [-2.91157570e-12  1.60590465e-04 -9.84785943e-04 -3.40226296e-02
  1.03484683e+00]
  HOMO = -0.59395732354044  LUMO = 5.73774890951605
  mo_energy =
[-3.26743344e+01 -1.77848363e+00 -5.93957324e-01 -5.93957324e-01
 -5.93957324e-01  5.73774891e+00  5.73774891e+00  5.73774891e+00
  1.67414285e+01  1.28381184e+02  7.71182225e+02]
E1 = -181.67944612055922  E_coul = 54.605032781133716
cycle= 5 E= -127.074413339426  delta_E= -1.25e-12  |g|= 1.5e-07  |ddm|= 1.16e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67944612055922  E_coul = 54.605032781133716
  HOMO = -0.5939573610767  LUMO = 5.73774884147121
  mo_energy =
[-3.26743345e+01 -1.77848365e+00 -5.93957361e-01 -5.93957361e-01
 -5.93957361e-01  5.73774884e+00  5.73774884e+00  5.73774884e+00
  1.67414285e+01  1.28381184e+02  7.71182225e+02]
E1 = -181.67944626370814  E_coul = 54.605032924282746
Extra cycle  E= -127.074413339425  delta_E= 9.95e-14  |g|= 2.23e-08  |ddm|= 3.32e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 43.53444604388054
E1 = -181.67944626370814  E_coul = 54.605032924282746
init E= -127.074413339425
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.593957352101383  LUMO = 5.73774885619745
  mo_energy =
[-3.26743345e+01 -1.77848363e+00 -5.93957352e-01 -5.93957352e-01
 -5.93957352e-01  5.73774886e+00  5.73774886e+00  5.73774886e+00
  1.67414285e+01  1.28381184e+02  7.71182225e+02]
E1 = -181.6794462395858  E_coul = 54.60503290016028
cycle= 1 E= -127.074413339426  delta_E= -9.95e-14  |g|= 2.95e-09  |ddm|= 4.63e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6794462395858  E_coul = 54.60503290016028
  HOMO = -0.593957353575615  LUMO = 5.73774885367366
  mo_energy =
[-3.26743345e+01 -1.77848364e+00 -5.93957354e-01 -5.93957354e-01
 -5.93957354e-01  5.73774885e+00  5.73774885e+00  5.73774885e+00
  1.67414285e+01  1.28381184e+02  7.71182225e+02]
E1 = -181.6794462440923  E_coul = 54.605032904667
Extra cycle  E= -127.074413339425  delta_E= 1.99e-13  |g|= 5.77e-10  |ddm|= 7.04e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.90837353 466.33713809  90.5437557   24.98150406   8.2528766
   5.65061494   0.93703147]
grad_E = [-0.03632977 -0.00091375  0.00043141 -0.00083651  0.00055691  0.02690542
  0.02071715]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.90579505177        1
[INPUT] 0    0    [1    /1   ]  485.814007965        1
[INPUT] 0    0    [1    /1   ]  94.8467706686        1
[INPUT] 0    0    [1    /1   ]  26.007219445         1
[INPUT] 0    0    [1    /1   ]  8.53559697093        1
[INPUT] 1    0    [1    /1   ]  5.83074134656        1
[INPUT] 1    0    [1    /1   ]  0.957215673948       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9057950517697209, 1.0]], [0, [485.81400796450515, 1.0]], [0, [94.84677066860199, 1.0]], [0, [26.00721944496455, 1.0]], [0, [8.535596970927104, 1.0]], [1, [5.8307413465563975, 1.0]], [1, [0.9572156739477037, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.90579505]
bas 1, expnt(s) = [485.81400796]
bas 2, expnt(s) = [94.84677067]
bas 3, expnt(s) = [26.00721944]
bas 4, expnt(s) = [8.53559697]
bas 5, expnt(s) = [5.83074135]
bas 6, expnt(s) = [0.95721567]
CPU time:       178.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.90579505
   2.3457811  485.81400796 261.43729962  94.84677067  76.78598076
  26.00721944  29.09614591   8.53559697  12.61654525   5.83074135
  26.43255308   0.95721567   2.76214609]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.807845847151743
cond(S) = 42.511084393035574
E1 = -181.20767403735766  E_coul = 54.412465411434205
init E= -126.795208625923
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.650161371818508  LUMO = 5.88997224555461
  mo_energy =
[-3.25506533e+01 -1.83876762e+00 -6.50161372e-01 -6.50161372e-01
 -6.50161372e-01  5.88997225e+00  5.88997225e+00  5.88997225e+00
  1.76362126e+01  1.35511997e+02  8.10162400e+02]
E1 = -181.7510022571224  E_coul = 54.66775325015889
cycle= 1 E= -127.083249006964  delta_E= -0.288  |g|= 0.0809  |ddm|= 0.357
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0921383
diis-c [-0.00848947  1.        ]
  HOMO = -0.588129476353587  LUMO = 5.93525868144191
  mo_energy =
[-3.26722933e+01 -1.77116781e+00 -5.88129476e-01 -5.88129476e-01
 -5.88129476e-01  5.93525868e+00  5.93525868e+00  5.93525868e+00
  1.76231082e+01  1.35381197e+02  8.09950595e+02]
E1 = -181.8286968077674  E_coul = 54.74527507615208
cycle= 2 E= -127.083421731615  delta_E= -0.000173  |g|= 0.00983  |ddm|= 0.012
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0118768
diis-c [-4.68274047e-05  9.55528208e-02  9.04447179e-01]
  HOMO = -0.583908052437002  LUMO = 5.94267283549545
  mo_energy =
[-3.26545892e+01 -1.76646745e+00 -5.83908052e-01 -5.83908052e-01
 -5.83908052e-01  5.94267284e+00  5.94267284e+00  5.94267284e+00
  1.76352063e+01  1.35399838e+02  8.09973022e+02]
E1 = -181.81639687977352  E_coul = 54.73297043361997
cycle= 3 E= -127.083426446154  delta_E= -4.71e-06  |g|= 0.000656  |ddm|= 0.00199
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000818011
diis-c [-3.13430914e-08 -5.02289327e-03  3.05756589e-02  9.74447234e-01]
  HOMO = -0.584174958264716  LUMO = 5.94222117124404
  mo_energy =
[-3.26556094e+01 -1.76674179e+00 -5.84174958e-01 -5.84174958e-01
 -5.84174958e-01  5.94222117e+00  5.94222117e+00  5.94222117e+00
  1.76345231e+01  1.35398869e+02  8.09972030e+02]
E1 = -181.81714060914655  E_coul = 54.73371414327948
cycle= 4 E= -127.083426465867  delta_E= -1.97e-08  |g|= 8.29e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.44141e-06
diis-c [-4.60681213e-12  1.68854225e-04 -1.47839704e-03 -3.18012491e-02
  1.03311079e+00]
  HOMO = -0.584172612468633  LUMO = 5.94222492262624
  mo_energy =
[-3.26556022e+01 -1.76673845e+00 -5.84172612e-01 -5.84172612e-01
 -5.84172612e-01  5.94222492e+00  5.94222492e+00  5.94222492e+00
  1.76345307e+01  1.35398875e+02  8.09972034e+02]
E1 = -181.81713527254317  E_coul = 54.73370880667426
cycle= 5 E= -127.083426465869  delta_E= -1.85e-12  |g|= 1.73e-07  |ddm|= 1.47e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.81713527254317  E_coul = 54.73370880667426
  HOMO = -0.584172658502266  LUMO = 5.94222483653718
  mo_energy =
[-3.26556024e+01 -1.76673848e+00 -5.84172659e-01 -5.84172659e-01
 -5.84172659e-01  5.94222484e+00  5.94222484e+00  5.94222484e+00
  1.76345307e+01  1.35398875e+02  8.09972034e+02]
E1 = -181.81713544075316  E_coul = 54.73370897488412
Extra cycle  E= -127.083426465869  delta_E= -1.42e-13  |g|= 2.57e-08  |ddm|= 3.72e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.90579505 485.81400796  94.84677067  26.00721944   8.53559697
   5.83074135   0.95721567]
E = -127.08342646586905
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.90579505177        1
[INPUT] 0    0    [1    /1   ]  485.814007965        1
[INPUT] 0    0    [1    /1   ]  94.8467706686        1
[INPUT] 0    0    [1    /1   ]  26.007219445         1
[INPUT] 0    0    [1    /1   ]  8.53559697093        1
[INPUT] 1    0    [1    /1   ]  5.83074134656        1
[INPUT] 1    0    [1    /1   ]  0.957215673948       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9057950517697209, 1.0]], [0, [485.81400796450515, 1.0]], [0, [94.84677066860199, 1.0]], [0, [26.00721944496455, 1.0]], [0, [8.535596970927104, 1.0]], [1, [5.8307413465563975, 1.0]], [1, [0.9572156739477037, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.90579505]
bas 1, expnt(s) = [485.81400796]
bas 2, expnt(s) = [94.84677067]
bas 3, expnt(s) = [26.00721944]
bas 4, expnt(s) = [8.53559697]
bas 5, expnt(s) = [5.83074135]
bas 6, expnt(s) = [0.95721567]
CPU time:       179.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.90579505
   2.3457811  485.81400796 261.43729962  94.84677067  76.78598076
  26.00721944  29.09614591   8.53559697  12.61654525   5.83074135
  26.43255308   0.95721567   2.76214609]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.807845847151743
cond(S) = 42.511084393035574
E1 = -181.20767403735766  E_coul = 54.412465411434205
init E= -126.795208625923
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.650161371818508  LUMO = 5.88997224555461
  mo_energy =
[-3.25506533e+01 -1.83876762e+00 -6.50161372e-01 -6.50161372e-01
 -6.50161372e-01  5.88997225e+00  5.88997225e+00  5.88997225e+00
  1.76362126e+01  1.35511997e+02  8.10162400e+02]
E1 = -181.7510022571224  E_coul = 54.66775325015889
cycle= 1 E= -127.083249006964  delta_E= -0.288  |g|= 0.0809  |ddm|= 0.357
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0921383
diis-c [-0.00848947  1.        ]
  HOMO = -0.588129476353587  LUMO = 5.93525868144191
  mo_energy =
[-3.26722933e+01 -1.77116781e+00 -5.88129476e-01 -5.88129476e-01
 -5.88129476e-01  5.93525868e+00  5.93525868e+00  5.93525868e+00
  1.76231082e+01  1.35381197e+02  8.09950595e+02]
E1 = -181.8286968077674  E_coul = 54.74527507615208
cycle= 2 E= -127.083421731615  delta_E= -0.000173  |g|= 0.00983  |ddm|= 0.012
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0118768
diis-c [-4.68274047e-05  9.55528208e-02  9.04447179e-01]
  HOMO = -0.583908052437002  LUMO = 5.94267283549545
  mo_energy =
[-3.26545892e+01 -1.76646745e+00 -5.83908052e-01 -5.83908052e-01
 -5.83908052e-01  5.94267284e+00  5.94267284e+00  5.94267284e+00
  1.76352063e+01  1.35399838e+02  8.09973022e+02]
E1 = -181.81639687977352  E_coul = 54.73297043361997
cycle= 3 E= -127.083426446154  delta_E= -4.71e-06  |g|= 0.000656  |ddm|= 0.00199
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000818011
diis-c [-3.13430914e-08 -5.02289327e-03  3.05756589e-02  9.74447234e-01]
  HOMO = -0.584174958264716  LUMO = 5.94222117124404
  mo_energy =
[-3.26556094e+01 -1.76674179e+00 -5.84174958e-01 -5.84174958e-01
 -5.84174958e-01  5.94222117e+00  5.94222117e+00  5.94222117e+00
  1.76345231e+01  1.35398869e+02  8.09972030e+02]
E1 = -181.81714060914655  E_coul = 54.73371414327948
cycle= 4 E= -127.083426465867  delta_E= -1.97e-08  |g|= 8.29e-06  |ddm|= 0.000116
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.44141e-06
diis-c [-4.60681213e-12  1.68854225e-04 -1.47839704e-03 -3.18012491e-02
  1.03311079e+00]
  HOMO = -0.584172612468633  LUMO = 5.94222492262624
  mo_energy =
[-3.26556022e+01 -1.76673845e+00 -5.84172612e-01 -5.84172612e-01
 -5.84172612e-01  5.94222492e+00  5.94222492e+00  5.94222492e+00
  1.76345307e+01  1.35398875e+02  8.09972034e+02]
E1 = -181.81713527254317  E_coul = 54.73370880667426
cycle= 5 E= -127.083426465869  delta_E= -1.85e-12  |g|= 1.73e-07  |ddm|= 1.47e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.81713527254317  E_coul = 54.73370880667426
  HOMO = -0.584172658502266  LUMO = 5.94222483653718
  mo_energy =
[-3.26556024e+01 -1.76673848e+00 -5.84172659e-01 -5.84172659e-01
 -5.84172659e-01  5.94222484e+00  5.94222484e+00  5.94222484e+00
  1.76345307e+01  1.35398875e+02  8.09972034e+02]
E1 = -181.81713544075316  E_coul = 54.73370897488412
Extra cycle  E= -127.083426465869  delta_E= -1.42e-13  |g|= 2.57e-08  |ddm|= 3.72e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 42.511084393035574
E1 = -181.81713544075316  E_coul = 54.73370897488412
init E= -127.083426465869
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.584172648015931  LUMO = 5.9422248542105
  mo_energy =
[-3.26556023e+01 -1.76673847e+00 -5.84172648e-01 -5.84172648e-01
 -5.84172648e-01  5.94222485e+00  5.94222485e+00  5.94222485e+00
  1.76345307e+01  1.35398875e+02  8.09972034e+02]
E1 = -181.81713541322105  E_coul = 54.73370894735202
cycle= 1 E= -127.083426465869  delta_E= 2.84e-14  |g|= 3.37e-09  |ddm|= 5.14e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.81713541322105  E_coul = 54.73370894735202
  HOMO = -0.584172649691069  LUMO = 5.94222485127002
  mo_energy =
[-3.26556023e+01 -1.76673847e+00 -5.84172650e-01 -5.84172650e-01
 -5.84172650e-01  5.94222485e+00  5.94222485e+00  5.94222485e+00
  1.76345307e+01  1.35398875e+02  8.09972034e+02]
E1 = -181.81713541818635  E_coul = 54.73370895231729
Extra cycle  E= -127.083426465869  delta_E= -2.84e-14  |g|= 6.35e-10  |ddm|= 7.75e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.90579505 485.81400796  94.84677067  26.00721944   8.53559697
   5.83074135   0.95721567]
grad_E = [-0.05140431 -0.00085961  0.0007585  -0.00174406  0.00135888  0.04066146
  0.02989904]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.907169297849       1
[INPUT] 0    0    [1    /1   ]  528.963528228        1
[INPUT] 0    0    [1    /1   ]  104.074533199        1
[INPUT] 0    0    [1    /1   ]  28.3045909689        1
[INPUT] 0    0    [1    /1   ]  9.14719601807        1
[INPUT] 1    0    [1    /1   ]  6.04016322165        1
[INPUT] 1    0    [1    /1   ]  0.979374652368       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9071692978490259, 1.0]], [0, [528.9635282279901, 1.0]], [0, [104.07453319856681, 1.0]], [0, [28.304590968911395, 1.0]], [0, [9.14719601807033, 1.0]], [1, [6.040163221648639, 1.0]], [1, [0.9793746523678213, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.9071693]
bas 1, expnt(s) = [528.96352823]
bas 2, expnt(s) = [104.0745332]
bas 3, expnt(s) = [28.30459097]
bas 4, expnt(s) = [9.14719602]
bas 5, expnt(s) = [6.04016322]
bas 6, expnt(s) = [0.97937465]
CPU time:       182.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.9071693
   2.3484498  528.96352823 278.66621624 104.0745332   82.32341502
  28.30459097  31.00328315   9.14719602  13.28865461   6.04016322
  27.6245515    0.97937465   2.84230361]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.796944256569175
cond(S) = 40.687325029292445
E1 = -181.20224041995178  E_coul = 54.405253477637864
init E= -126.796986942314
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.65113308544363  LUMO = 6.11113920614847
  mo_energy =
[-3.25597593e+01 -1.84019168e+00 -6.51133085e-01 -6.51133085e-01
 -6.51133085e-01  6.11113921e+00  6.11113921e+00  6.11113921e+00
  1.96702720e+01  1.51027533e+02  8.95641691e+02]
E1 = -181.93337731263918  E_coul = 54.83101825631942
cycle= 1 E= -127.10235905632  delta_E= -0.305  |g|= 0.0744  |ddm|= 0.357
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0809431
diis-c [-0.00655179  1.        ]
  HOMO = -0.575106749503101  LUMO = 6.17354409630304
  mo_energy =
[-3.26534486e+01 -1.75696259e+00 -5.75106750e-01 -5.75106750e-01
 -5.75106750e-01  6.17354410e+00  6.17354410e+00  6.17354410e+00
  1.96757430e+01  1.50920019e+02  8.95456410e+02]
E1 = -181.9879852188242  E_coul = 54.8855183515995
cycle= 2 E= -127.102466867225  delta_E= -0.000108  |g|= 0.00703  |ddm|= 0.00869
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00838082
diis-c [-3.85221699e-05  6.52296127e-02  9.34770387e-01]
  HOMO = -0.572086811719053  LUMO = 6.17903358195536
  mo_energy =
[-3.26404275e+01 -1.75356543e+00 -5.72086812e-01 -5.72086812e-01
 -5.72086812e-01  6.17903358e+00  6.17903358e+00  6.17903358e+00
  1.96850240e+01  1.50934222e+02  8.95473733e+02]
E1 = -181.97948527704725  E_coul = 54.87701617238903
cycle= 3 E= -127.102469104658  delta_E= -2.24e-06  |g|= 0.000648  |ddm|= 0.00139
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000813981
diis-c [-3.12841968e-08 -5.14633275e-03  5.10164659e-02  9.54129867e-01]
  HOMO = -0.572354924725282  LUMO = 6.17856330878942
  mo_energy =
[-3.26414841e+01 -1.75384231e+00 -5.72354925e-01 -5.72354925e-01
 -5.72354925e-01  6.17856331e+00  6.17856331e+00  6.17856331e+00
  1.96842944e+01  1.50933194e+02  8.95472656e+02]
E1 = -181.98021056488844  E_coul = 54.877741441131064
cycle= 4 E= -127.102469123757  delta_E= -1.91e-08  |g|= 9.28e-06  |ddm|= 0.000113
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.63587e-06
diis-c [-5.18011379e-12  1.45711635e-04 -2.05697982e-03 -2.24165219e-02
  1.02432779e+00]
  HOMO = -0.572351764596694  LUMO = 6.17856859542839
  mo_energy =
[-3.26414736e+01 -1.75383824e+00 -5.72351765e-01 -5.72351765e-01
 -5.72351765e-01  6.17856860e+00  6.17856860e+00  6.17856860e+00
  1.96843043e+01  1.50933203e+02  8.95472663e+02]
E1 = -181.98020328994974  E_coul = 54.87773416618988
cycle= 5 E= -127.10246912376  delta_E= -2.49e-12  |g|= 1.54e-07  |ddm|= 1.5e-06
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.98020328994974  E_coul = 54.87773416618988
  HOMO = -0.572351808000823  LUMO = 6.17856851145159
  mo_energy =
[-3.26414738e+01 -1.75383827e+00 -5.72351808e-01 -5.72351808e-01
 -5.72351808e-01  6.17856851e+00  6.17856851e+00  6.17856851e+00
  1.96843043e+01  1.50933203e+02  8.95472662e+02]
E1 = -181.9802034423051  E_coul = 54.877734318545194
Extra cycle  E= -127.10246912376  delta_E= -5.68e-14  |g|= 2.26e-08  |ddm|= 3.16e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.9071693  528.96352823 104.0745332   28.30459097   9.14719602
   6.04016322   0.97937465]
E = -127.10246912375992
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.907169297849       1
[INPUT] 0    0    [1    /1   ]  528.963528228        1
[INPUT] 0    0    [1    /1   ]  104.074533199        1
[INPUT] 0    0    [1    /1   ]  28.3045909689        1
[INPUT] 0    0    [1    /1   ]  9.14719601807        1
[INPUT] 1    0    [1    /1   ]  6.04016322165        1
[INPUT] 1    0    [1    /1   ]  0.979374652368       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9071692978490259, 1.0]], [0, [528.9635282279901, 1.0]], [0, [104.07453319856681, 1.0]], [0, [28.304590968911395, 1.0]], [0, [9.14719601807033, 1.0]], [1, [6.040163221648639, 1.0]], [1, [0.9793746523678213, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.9071693]
bas 1, expnt(s) = [528.96352823]
bas 2, expnt(s) = [104.0745332]
bas 3, expnt(s) = [28.30459097]
bas 4, expnt(s) = [9.14719602]
bas 5, expnt(s) = [6.04016322]
bas 6, expnt(s) = [0.97937465]
CPU time:       183.69
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.9071693
   2.3484498  528.96352823 278.66621624 104.0745332   82.32341502
  28.30459097  31.00328315   9.14719602  13.28865461   6.04016322
  27.6245515    0.97937465   2.84230361]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.796944256569175
cond(S) = 40.687325029292445
E1 = -181.20224041995178  E_coul = 54.405253477637864
init E= -126.796986942314
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.65113308544363  LUMO = 6.11113920614847
  mo_energy =
[-3.25597593e+01 -1.84019168e+00 -6.51133085e-01 -6.51133085e-01
 -6.51133085e-01  6.11113921e+00  6.11113921e+00  6.11113921e+00
  1.96702720e+01  1.51027533e+02  8.95641691e+02]
E1 = -181.93337731263918  E_coul = 54.83101825631942
cycle= 1 E= -127.10235905632  delta_E= -0.305  |g|= 0.0744  |ddm|= 0.357
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0809431
diis-c [-0.00655179  1.        ]
  HOMO = -0.575106749503101  LUMO = 6.17354409630304
  mo_energy =
[-3.26534486e+01 -1.75696259e+00 -5.75106750e-01 -5.75106750e-01
 -5.75106750e-01  6.17354410e+00  6.17354410e+00  6.17354410e+00
  1.96757430e+01  1.50920019e+02  8.95456410e+02]
E1 = -181.9879852188242  E_coul = 54.8855183515995
cycle= 2 E= -127.102466867225  delta_E= -0.000108  |g|= 0.00703  |ddm|= 0.00869
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00838082
diis-c [-3.85221699e-05  6.52296127e-02  9.34770387e-01]
  HOMO = -0.572086811719053  LUMO = 6.17903358195536
  mo_energy =
[-3.26404275e+01 -1.75356543e+00 -5.72086812e-01 -5.72086812e-01
 -5.72086812e-01  6.17903358e+00  6.17903358e+00  6.17903358e+00
  1.96850240e+01  1.50934222e+02  8.95473733e+02]
E1 = -181.97948527704725  E_coul = 54.87701617238903
cycle= 3 E= -127.102469104658  delta_E= -2.24e-06  |g|= 0.000648  |ddm|= 0.00139
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000813981
diis-c [-3.12841968e-08 -5.14633275e-03  5.10164659e-02  9.54129867e-01]
  HOMO = -0.572354924725282  LUMO = 6.17856330878942
  mo_energy =
[-3.26414841e+01 -1.75384231e+00 -5.72354925e-01 -5.72354925e-01
 -5.72354925e-01  6.17856331e+00  6.17856331e+00  6.17856331e+00
  1.96842944e+01  1.50933194e+02  8.95472656e+02]
E1 = -181.98021056488844  E_coul = 54.877741441131064
cycle= 4 E= -127.102469123757  delta_E= -1.91e-08  |g|= 9.28e-06  |ddm|= 0.000113
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.63587e-06
diis-c [-5.18011379e-12  1.45711635e-04 -2.05697982e-03 -2.24165219e-02
  1.02432779e+00]
  HOMO = -0.572351764596694  LUMO = 6.17856859542839
  mo_energy =
[-3.26414736e+01 -1.75383824e+00 -5.72351765e-01 -5.72351765e-01
 -5.72351765e-01  6.17856860e+00  6.17856860e+00  6.17856860e+00
  1.96843043e+01  1.50933203e+02  8.95472663e+02]
E1 = -181.98020328994974  E_coul = 54.87773416618988
cycle= 5 E= -127.10246912376  delta_E= -2.49e-12  |g|= 1.54e-07  |ddm|= 1.5e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.98020328994974  E_coul = 54.87773416618988
  HOMO = -0.572351808000823  LUMO = 6.17856851145159
  mo_energy =
[-3.26414738e+01 -1.75383827e+00 -5.72351808e-01 -5.72351808e-01
 -5.72351808e-01  6.17856851e+00  6.17856851e+00  6.17856851e+00
  1.96843043e+01  1.50933203e+02  8.95472662e+02]
E1 = -181.9802034423051  E_coul = 54.877734318545194
Extra cycle  E= -127.10246912376  delta_E= -5.68e-14  |g|= 2.26e-08  |ddm|= 3.16e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 40.687325029292445
E1 = -181.9802034423051  E_coul = 54.877734318545194
init E= -127.10246912376
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.572351798560827  LUMO = 6.17856852786211
  mo_energy =
[-3.26414738e+01 -1.75383825e+00 -5.72351799e-01 -5.72351799e-01
 -5.72351799e-01  6.17856853e+00  6.17856853e+00  6.17856853e+00
  1.96843043e+01  1.50933203e+02  8.95472662e+02]
E1 = -181.98020341838907  E_coul = 54.87773429462918
cycle= 1 E= -127.10246912376  delta_E= 2.84e-14  |g|= 2.91e-09  |ddm|= 4.27e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.98020341838907  E_coul = 54.87773429462918
  HOMO = -0.572351800006712  LUMO = 6.17856852525265
  mo_energy =
[-3.26414738e+01 -1.75383826e+00 -5.72351800e-01 -5.72351800e-01
 -5.72351800e-01  6.17856853e+00  6.17856853e+00  6.17856853e+00
  1.96843043e+01  1.50933203e+02  8.95472662e+02]
E1 = -181.980203422493  E_coul = 54.877734298733074
Extra cycle  E= -127.10246912376  delta_E= -2.84e-14  |g|= 5.21e-10  |ddm|= 6.41e-10
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.9071693  528.96352823 104.0745332   28.30459097   9.14719602
   6.04016322   0.97937465]
grad_E = [-0.06161657 -0.00073575  0.00102344 -0.00263969  0.00292167  0.05583333
  0.03405683]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.911820992756       1
[INPUT] 0    0    [1    /1   ]  610.647552987        1
[INPUT] 0    0    [1    /1   ]  120.115745432        1
[INPUT] 0    0    [1    /1   ]  31.8380955059        1
[INPUT] 0    0    [1    /1   ]  9.82743960418        1
[INPUT] 1    0    [1    /1   ]  6.16886819167        1
[INPUT] 1    0    [1    /1   ]  0.990473824779       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9118209927557674, 1.0]], [0, [610.6475529871418, 1.0]], [0, [120.11574543234433, 1.0]], [0, [31.838095505885484, 1.0]], [0, [9.827439604180606, 1.0]], [1, [6.168868191668213, 1.0]], [1, [0.9904738247785474, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91182099]
bas 1, expnt(s) = [610.64755299]
bas 2, expnt(s) = [120.11574543]
bas 3, expnt(s) = [31.83809551]
bas 4, expnt(s) = [9.8274396]
bas 5, expnt(s) = [6.16886819]
bas 6, expnt(s) = [0.99047382]
CPU time:       186.86
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91182099
   2.35747564 610.64755299 310.35445943 120.11574543  91.66741402
  31.83809551  33.86299255   9.8274396   14.02314136   6.16886819
  28.36228758   0.99047382   2.88262498]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.790691613619536
cond(S) = 36.408128689880535
E1 = -181.20448539425252  E_coul = 54.391244687928676
init E= -126.813240706324
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.65230408904813  LUMO = 6.23841092022481
  mo_energy =
[-3.25794384e+01 -1.84130420e+00 -6.52304089e-01 -6.52304089e-01
 -6.52304089e-01  6.23841092e+00  6.23841092e+00  6.23841092e+00
  2.24628090e+01  1.75904347e+02  1.05003113e+03]
E1 = -182.04035905858706  E_coul = 54.90386928390506
cycle= 1 E= -127.136489774682  delta_E= -0.323  |g|= 0.0724  |ddm|= 0.351
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0775621
diis-c [-0.00601588  1.        ]
  HOMO = -0.568721035276065  LUMO = 6.30981071794042
  mo_energy =
[-3.26599374e+01 -1.75025547e+00 -5.68721035e-01 -5.68721035e-01
 -5.68721035e-01  6.30981072e+00  6.30981072e+00  6.30981072e+00
  2.24724865e+01  1.75803386e+02  1.04985727e+03]
E1 = -182.08370011541635  E_coul = 54.94712725005907
cycle= 2 E= -127.136572865357  delta_E= -8.31e-05  |g|= 0.00564  |ddm|= 0.00715
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00667822
diis-c [-3.22597088e-05  4.34379210e-02  9.56562079e-01]
  HOMO = -0.566299351286019  LUMO = 6.31431200895346
  mo_energy =
[-3.26492584e+01 -1.74750679e+00 -5.66299351e-01 -5.66299351e-01
 -5.66299351e-01  6.31431201e+00  6.31431201e+00  6.31431201e+00
  2.24804817e+01  1.75815568e+02  1.04987225e+03]
E1 = -182.07706811694172  E_coul = 54.9404938917434
cycle= 3 E= -127.136574225198  delta_E= -1.36e-06  |g|= 0.000611  |ddm|= 0.00108
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000765688
diis-c [-2.61978425e-08 -4.89501984e-03  6.60730984e-02  9.38821921e-01]
  HOMO = -0.566555899729381  LUMO = 6.31385223967412
  mo_energy =
[-3.26502876e+01 -1.74777605e+00 -5.66555900e-01 -5.66555900e-01
 -5.66555900e-01  6.31385224e+00  6.31385224e+00  6.31385224e+00
  2.24797341e+01  1.75814544e+02  1.04987118e+03]
E1 = -182.07774439576738  E_coul = 54.94117015379027
cycle= 4 E= -127.136574241977  delta_E= -1.68e-08  |g|= 8.91e-06  |ddm|= 0.000105
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.61909e-06
diis-c [-3.76856397e-12  1.10676398e-04 -2.11602709e-03 -1.40796879e-02
  1.01608504e+00]
  HOMO = -0.566552568336101  LUMO = 6.31385798476993
  mo_energy =
[-3.26502760e+01 -1.74777199e+00 -5.66552568e-01 -5.66552568e-01
 -5.66552568e-01  6.31385798e+00  6.31385798e+00  6.31385798e+00
  2.24797447e+01  1.75814555e+02  1.04987119e+03]
E1 = -182.07773668878224  E_coul = 54.94116244680254
cycle= 5 E= -127.13657424198  delta_E= -2.59e-12  |g|= 1.1e-07  |ddm|= 1.36e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.07773668878224  E_coul = 54.94116244680254
  HOMO = -0.566552596785924  LUMO = 6.31385792752568
  mo_energy =
[-3.26502761e+01 -1.74777200e+00 -5.66552597e-01 -5.66552597e-01
 -5.66552597e-01  6.31385793e+00  6.31385793e+00  6.31385793e+00
  2.24797446e+01  1.75814555e+02  1.04987119e+03]
E1 = -182.07773679102567  E_coul = 54.941162549045984
Extra cycle  E= -127.13657424198  delta_E= 1.42e-14  |g|= 1.5e-08  |ddm|= 2.1e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.91182099 610.64755299 120.11574543  31.83809551   9.8274396
   6.16886819   0.99047382]
E = -127.13657424197969
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.911820992756       1
[INPUT] 0    0    [1    /1   ]  610.647552987        1
[INPUT] 0    0    [1    /1   ]  120.115745432        1
[INPUT] 0    0    [1    /1   ]  31.8380955059        1
[INPUT] 0    0    [1    /1   ]  9.82743960418        1
[INPUT] 1    0    [1    /1   ]  6.16886819167        1
[INPUT] 1    0    [1    /1   ]  0.990473824779       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9118209927557674, 1.0]], [0, [610.6475529871418, 1.0]], [0, [120.11574543234433, 1.0]], [0, [31.838095505885484, 1.0]], [0, [9.827439604180606, 1.0]], [1, [6.168868191668213, 1.0]], [1, [0.9904738247785474, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91182099]
bas 1, expnt(s) = [610.64755299]
bas 2, expnt(s) = [120.11574543]
bas 3, expnt(s) = [31.83809551]
bas 4, expnt(s) = [9.8274396]
bas 5, expnt(s) = [6.16886819]
bas 6, expnt(s) = [0.99047382]
CPU time:       187.62
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.91182099
   2.35747564 610.64755299 310.35445943 120.11574543  91.66741402
  31.83809551  33.86299255   9.8274396   14.02314136   6.16886819
  28.36228758   0.99047382   2.88262498]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.790691613619536
cond(S) = 36.408128689880535
E1 = -181.20448539425252  E_coul = 54.391244687928676
init E= -126.813240706324
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.65230408904813  LUMO = 6.23841092022481
  mo_energy =
[-3.25794384e+01 -1.84130420e+00 -6.52304089e-01 -6.52304089e-01
 -6.52304089e-01  6.23841092e+00  6.23841092e+00  6.23841092e+00
  2.24628090e+01  1.75904347e+02  1.05003113e+03]
E1 = -182.04035905858706  E_coul = 54.90386928390506
cycle= 1 E= -127.136489774682  delta_E= -0.323  |g|= 0.0724  |ddm|= 0.351
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0775621
diis-c [-0.00601588  1.        ]
  HOMO = -0.568721035276065  LUMO = 6.30981071794042
  mo_energy =
[-3.26599374e+01 -1.75025547e+00 -5.68721035e-01 -5.68721035e-01
 -5.68721035e-01  6.30981072e+00  6.30981072e+00  6.30981072e+00
  2.24724865e+01  1.75803386e+02  1.04985727e+03]
E1 = -182.08370011541635  E_coul = 54.94712725005907
cycle= 2 E= -127.136572865357  delta_E= -8.31e-05  |g|= 0.00564  |ddm|= 0.00715
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00667822
diis-c [-3.22597088e-05  4.34379210e-02  9.56562079e-01]
  HOMO = -0.566299351286019  LUMO = 6.31431200895346
  mo_energy =
[-3.26492584e+01 -1.74750679e+00 -5.66299351e-01 -5.66299351e-01
 -5.66299351e-01  6.31431201e+00  6.31431201e+00  6.31431201e+00
  2.24804817e+01  1.75815568e+02  1.04987225e+03]
E1 = -182.07706811694172  E_coul = 54.9404938917434
cycle= 3 E= -127.136574225198  delta_E= -1.36e-06  |g|= 0.000611  |ddm|= 0.00108
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000765688
diis-c [-2.61978425e-08 -4.89501984e-03  6.60730984e-02  9.38821921e-01]
  HOMO = -0.566555899729381  LUMO = 6.31385223967412
  mo_energy =
[-3.26502876e+01 -1.74777605e+00 -5.66555900e-01 -5.66555900e-01
 -5.66555900e-01  6.31385224e+00  6.31385224e+00  6.31385224e+00
  2.24797341e+01  1.75814544e+02  1.04987118e+03]
E1 = -182.07774439576738  E_coul = 54.94117015379027
cycle= 4 E= -127.136574241977  delta_E= -1.68e-08  |g|= 8.91e-06  |ddm|= 0.000105
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.61909e-06
diis-c [-3.76856397e-12  1.10676398e-04 -2.11602709e-03 -1.40796879e-02
  1.01608504e+00]
  HOMO = -0.566552568336101  LUMO = 6.31385798476993
  mo_energy =
[-3.26502760e+01 -1.74777199e+00 -5.66552568e-01 -5.66552568e-01
 -5.66552568e-01  6.31385798e+00  6.31385798e+00  6.31385798e+00
  2.24797447e+01  1.75814555e+02  1.04987119e+03]
E1 = -182.07773668878224  E_coul = 54.94116244680254
cycle= 5 E= -127.13657424198  delta_E= -2.59e-12  |g|= 1.1e-07  |ddm|= 1.36e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.07773668878224  E_coul = 54.94116244680254
  HOMO = -0.566552596785924  LUMO = 6.31385792752568
  mo_energy =
[-3.26502761e+01 -1.74777200e+00 -5.66552597e-01 -5.66552597e-01
 -5.66552597e-01  6.31385793e+00  6.31385793e+00  6.31385793e+00
  2.24797446e+01  1.75814555e+02  1.04987119e+03]
E1 = -182.07773679102567  E_coul = 54.941162549045984
Extra cycle  E= -127.13657424198  delta_E= 1.42e-14  |g|= 1.5e-08  |ddm|= 2.1e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 36.408128689880535
E1 = -182.07773679102567  E_coul = 54.941162549045984
init E= -127.13657424198
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.566552590455933  LUMO = 6.31385793871463
  mo_energy =
[-3.26502761e+01 -1.74777200e+00 -5.66552590e-01 -5.66552590e-01
 -5.66552590e-01  6.31385794e+00  6.31385794e+00  6.31385794e+00
  2.24797446e+01  1.75814555e+02  1.04987119e+03]
E1 = -182.07773677557586  E_coul = 54.94116253359619
cycle= 1 E= -127.13657424198  delta_E= 1.42e-14  |g|= 1.87e-09  |ddm|= 2.65e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.07773677557586  E_coul = 54.94116253359619
  HOMO = -0.566552591384681  LUMO = 6.31385793700965
  mo_energy =
[-3.26502761e+01 -1.74777200e+00 -5.66552591e-01 -5.66552591e-01
 -5.66552591e-01  6.31385794e+00  6.31385794e+00  6.31385794e+00
  2.24797446e+01  1.75814555e+02  1.04987119e+03]
E1 = -182.07773677812844  E_coul = 54.941162536148774
Extra cycle  E= -127.13657424198  delta_E=    0  |g|= 3.21e-10  |ddm|= 3.98e-10
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [  0.91182099 610.64755299 120.11574543  31.83809551   9.8274396
   6.16886819   0.99047382]
grad_E = [-0.06533468 -0.00053972  0.00101093 -0.00184252  0.00032172  0.06677454
  0.01250499]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.931225877157       1
[INPUT] 0    0    [1    /1   ]  743.890905152        1
[INPUT] 0    0    [1    /1   ]  146.640944141        1
[INPUT] 0    0    [1    /1   ]  38.1019021875        1
[INPUT] 0    0    [1    /1   ]  11.4025793815        1
[INPUT] 1    0    [1    /1   ]  6.05864258022        1
[INPUT] 1    0    [1    /1   ]  0.975382188469       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.931225877156605, 1.0]], [0, [743.8909051524314, 1.0]], [0, [146.64094414144515, 1.0]], [0, [38.101902187527294, 1.0]], [0, [11.402579381464875, 1.0]], [1, [6.058642580217906, 1.0]], [1, [0.9753821884694629, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.93122588]
bas 1, expnt(s) = [743.89090515]
bas 2, expnt(s) = [146.64094414]
bas 3, expnt(s) = [38.10190219]
bas 4, expnt(s) = [11.40257938]
bas 5, expnt(s) = [6.05864258]
bas 6, expnt(s) = [0.97538219]
CPU time:       190.74
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.93122588
   2.39500432 743.89090515 359.87109142 146.64094414 106.46490241
  38.10190219  38.74583437  11.40257938  15.67715862   6.05864258
  27.73023554   0.97538219   2.82782753]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.795654896299705
cond(S) = 33.43497764418547
E1 = -181.25536391952764  E_coul = 54.400467325047615
init E= -126.85489659448
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651172817998194  LUMO = 6.10974860061278
  mo_energy =
[-3.25988110e+01 -1.84307809e+00 -6.51172818e-01 -6.51172818e-01
 -6.51172818e-01  6.10974860e+00  6.10974860e+00  6.10974860e+00
  2.86817904e+01  2.21266512e+02  1.30998766e+03]
E1 = -182.0494811126729  E_coul = 54.86746430300984
cycle= 1 E= -127.182016809663  delta_E= -0.327  |g|= 0.0799  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0771568
diis-c [-0.00595318  1.        ]
  HOMO = -0.5717352759174  LUMO = 6.17827315391628
  mo_energy =
[-3.26818318e+01 -1.76027860e+00 -5.71735276e-01 -5.71735276e-01
 -5.71735276e-01  6.17827315e+00  6.17827315e+00  6.17827315e+00
  2.86690495e+01  2.21163676e+02  1.30982576e+03]
E1 = -182.08885909030622  E_coul = 54.906769256573284
cycle= 2 E= -127.182089833733  delta_E= -7.3e-05  |g|= 0.00489  |ddm|= 0.0063
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0060024
diis-c [-3.03933264e-05  2.99232126e-02  9.70076787e-01]
  HOMO = -0.569530706931508  LUMO = 6.18235040317559
  mo_energy =
[-3.26718702e+01 -1.75778671e+00 -5.69530707e-01 -5.69530707e-01
 -5.69530707e-01  6.18235040e+00  6.18235040e+00  6.18235040e+00
  2.86769386e+01  2.21175727e+02  1.30984059e+03]
E1 = -182.08278593551967  E_coul = 54.900695014646026
cycle= 3 E= -127.182090920874  delta_E= -1.09e-06  |g|= 0.000617  |ddm|= 0.000961
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000741771
diis-c [-1.20268277e-08 -4.40957427e-03  8.07606503e-02  9.23648924e-01]
  HOMO = -0.569794928047959  LUMO = 6.18188457113356
  mo_energy =
[-3.26729143e+01 -1.75808028e+00 -5.69794928e-01 -5.69794928e-01
 -5.69794928e-01  6.18188457e+00  6.18188457e+00  6.18188457e+00
  2.86760935e+01  2.21174683e+02  1.30983952e+03]
E1 = -182.08346303154232  E_coul = 54.90137209396745
cycle= 4 E= -127.182090937575  delta_E= -1.67e-08  |g|= 5.43e-06  |ddm|= 0.000105
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.12405e-06
diis-c [-1.10874937e-12  5.47693805e-05 -1.16535787e-03 -4.43773481e-03
  1.00554832e+00]
  HOMO = -0.569792697035742  LUMO = 6.1818884233205
  mo_energy =
[-3.26729062e+01 -1.75807766e+00 -5.69792697e-01 -5.69792697e-01
 -5.69792697e-01  6.18188842e+00  6.18188842e+00  6.18188842e+00
  2.86761008e+01  2.21174690e+02  1.30983953e+03]
E1 = -182.08345770110034  E_coul = 54.901366763524514
cycle= 5 E= -127.182090937576  delta_E= -9.52e-13  |g|= 4e-08  |ddm|= 8.44e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.08345770110034  E_coul = 54.901366763524514
  HOMO = -0.56979270770328  LUMO = 6.1818884025893
  mo_energy =
[-3.26729063e+01 -1.75807767e+00 -5.69792708e-01 -5.69792708e-01
 -5.69792708e-01  6.18188840e+00  6.18188840e+00  6.18188840e+00
  2.86761007e+01  2.21174690e+02  1.30983953e+03]
E1 = -182.08345773865307  E_coul = 54.901366801077145
Extra cycle  E= -127.182090937576  delta_E= -9.95e-14  |g|= 5.15e-09  |ddm|= 7.13e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [  0.93122588 743.89090515 146.64094414  38.10190219  11.40257938
   6.05864258   0.97538219]
E = -127.18209093757592
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.931225877157       1
[INPUT] 0    0    [1    /1   ]  743.890905152        1
[INPUT] 0    0    [1    /1   ]  146.640944141        1
[INPUT] 0    0    [1    /1   ]  38.1019021875        1
[INPUT] 0    0    [1    /1   ]  11.4025793815        1
[INPUT] 1    0    [1    /1   ]  6.05864258022        1
[INPUT] 1    0    [1    /1   ]  0.975382188469       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.931225877156605, 1.0]], [0, [743.8909051524314, 1.0]], [0, [146.64094414144515, 1.0]], [0, [38.101902187527294, 1.0]], [0, [11.402579381464875, 1.0]], [1, [6.058642580217906, 1.0]], [1, [0.9753821884694629, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.93122588]
bas 1, expnt(s) = [743.89090515]
bas 2, expnt(s) = [146.64094414]
bas 3, expnt(s) = [38.10190219]
bas 4, expnt(s) = [11.40257938]
bas 5, expnt(s) = [6.05864258]
bas 6, expnt(s) = [0.97538219]
CPU time:       191.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.93122588
   2.39500432 743.89090515 359.87109142 146.64094414 106.46490241
  38.10190219  38.74583437  11.40257938  15.67715862   6.05864258
  27.73023554   0.97538219   2.82782753]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.795654896299705
cond(S) = 33.43497764418547
E1 = -181.25536391952764  E_coul = 54.400467325047615
init E= -126.85489659448
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.651172817998194  LUMO = 6.10974860061278
  mo_energy =
[-3.25988110e+01 -1.84307809e+00 -6.51172818e-01 -6.51172818e-01
 -6.51172818e-01  6.10974860e+00  6.10974860e+00  6.10974860e+00
  2.86817904e+01  2.21266512e+02  1.30998766e+03]
E1 = -182.0494811126729  E_coul = 54.86746430300984
cycle= 1 E= -127.182016809663  delta_E= -0.327  |g|= 0.0799  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0771568
diis-c [-0.00595318  1.        ]
  HOMO = -0.5717352759174  LUMO = 6.17827315391628
  mo_energy =
[-3.26818318e+01 -1.76027860e+00 -5.71735276e-01 -5.71735276e-01
 -5.71735276e-01  6.17827315e+00  6.17827315e+00  6.17827315e+00
  2.86690495e+01  2.21163676e+02  1.30982576e+03]
E1 = -182.08885909030622  E_coul = 54.906769256573284
cycle= 2 E= -127.182089833733  delta_E= -7.3e-05  |g|= 0.00489  |ddm|= 0.0063
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0060024
diis-c [-3.03933264e-05  2.99232126e-02  9.70076787e-01]
  HOMO = -0.569530706931508  LUMO = 6.18235040317559
  mo_energy =
[-3.26718702e+01 -1.75778671e+00 -5.69530707e-01 -5.69530707e-01
 -5.69530707e-01  6.18235040e+00  6.18235040e+00  6.18235040e+00
  2.86769386e+01  2.21175727e+02  1.30984059e+03]
E1 = -182.08278593551967  E_coul = 54.900695014646026
cycle= 3 E= -127.182090920874  delta_E= -1.09e-06  |g|= 0.000617  |ddm|= 0.000961
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000741771
diis-c [-1.20268277e-08 -4.40957427e-03  8.07606503e-02  9.23648924e-01]
  HOMO = -0.569794928047959  LUMO = 6.18188457113356
  mo_energy =
[-3.26729143e+01 -1.75808028e+00 -5.69794928e-01 -5.69794928e-01
 -5.69794928e-01  6.18188457e+00  6.18188457e+00  6.18188457e+00
  2.86760935e+01  2.21174683e+02  1.30983952e+03]
E1 = -182.08346303154232  E_coul = 54.90137209396745
cycle= 4 E= -127.182090937575  delta_E= -1.67e-08  |g|= 5.43e-06  |ddm|= 0.000105
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.12405e-06
diis-c [-1.10874937e-12  5.47693805e-05 -1.16535787e-03 -4.43773481e-03
  1.00554832e+00]
  HOMO = -0.569792697035742  LUMO = 6.1818884233205
  mo_energy =
[-3.26729062e+01 -1.75807766e+00 -5.69792697e-01 -5.69792697e-01
 -5.69792697e-01  6.18188842e+00  6.18188842e+00  6.18188842e+00
  2.86761008e+01  2.21174690e+02  1.30983953e+03]
E1 = -182.08345770110034  E_coul = 54.901366763524514
cycle= 5 E= -127.182090937576  delta_E= -9.52e-13  |g|= 4e-08  |ddm|= 8.44e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.08345770110034  E_coul = 54.901366763524514
  HOMO = -0.56979270770328  LUMO = 6.1818884025893
  mo_energy =
[-3.26729063e+01 -1.75807767e+00 -5.69792708e-01 -5.69792708e-01
 -5.69792708e-01  6.18188840e+00  6.18188840e+00  6.18188840e+00
  2.86761007e+01  2.21174690e+02  1.30983953e+03]
E1 = -182.08345773865307  E_coul = 54.901366801077145
Extra cycle  E= -127.182090937576  delta_E= -9.95e-14  |g|= 5.15e-09  |ddm|= 7.13e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 33.43497764418547
E1 = -182.08345773865307  E_coul = 54.901366801077145
init E= -127.182090937576
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.569792705384953  LUMO = 6.18188840666595
  mo_energy =
[-3.26729063e+01 -1.75807767e+00 -5.69792705e-01 -5.69792705e-01
 -5.69792705e-01  6.18188841e+00  6.18188841e+00  6.18188841e+00
  2.86761007e+01  2.21174690e+02  1.30983953e+03]
E1 = -182.08345773299376  E_coul = 54.901366795417935
cycle= 1 E= -127.182090937576  delta_E= 9.95e-14  |g|= 6.71e-10  |ddm|= 9.14e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.08345773299376  E_coul = 54.901366795417935
  HOMO = -0.569792705725805  LUMO = 6.18188840605201
  mo_energy =
[-3.26729063e+01 -1.75807767e+00 -5.69792706e-01 -5.69792706e-01
 -5.69792706e-01  6.18188841e+00  6.18188841e+00  6.18188841e+00
  2.86761007e+01  2.21174690e+02  1.30983953e+03]
E1 = -182.08345773390587  E_coul = 54.90136679632998
Extra cycle  E= -127.182090937576  delta_E= -7.11e-14  |g|= 1.11e-10  |ddm|= 1.42e-10
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [  0.93122588 743.89090515 146.64094414  38.10190219  11.40257938
   6.05864258   0.97538219]
grad_E = [-0.02469398 -0.00036023  0.00108658 -0.00428295  0.01735035  0.0633971
 -0.01893118]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.918261958627       1
[INPUT] 0    0    [1    /1   ]  1082.56851829        1
[INPUT] 0    0    [1    /1   ]  197.591675011        1
[INPUT] 0    0    [1    /1   ]  43.1247006987        1
[INPUT] 0    0    [1    /1   ]  9.60077302015        1
[INPUT] 1    0    [1    /1   ]  5.39607312723        1
[INPUT] 1    0    [1    /1   ]  0.897666475477       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.918261958626802, 1.0]], [0, [1082.5685182936695, 1.0]], [0, [197.59167501050044, 1.0]], [0, [43.12470069874066, 1.0]], [0, [9.600773020153005, 1.0]], [1, [5.396073127230898, 1.0]], [1, [0.897666475476672, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.91826196]
bas 1, expnt(s) = [1082.56851829]
bas 2, expnt(s) = [197.59167501]
bas 3, expnt(s) = [43.1247007]
bas 4, expnt(s) = [9.60077302]
bas 5, expnt(s) = [5.39607313]
bas 6, expnt(s) = [0.89766648]
CPU time:       194.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.18261959e-01 2.36995429e+00 1.08256852e+03 4.76822312e+02
 1.97591675e+02 1.33150103e+02 4.31247007e+01 4.25167045e+01
 9.60077302e+00 1.37798559e+01 5.39607313e+00 2.39928410e+01
 8.97666475e-01 2.54904880e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.829032271013858
cond(S) = 19.48004742711988
E1 = -180.76308189812607  E_coul = 54.23820314866669
init E= -126.524878749459
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.663796883300213  LUMO = 5.36515098197006
  mo_energy =
[-3.26101371e+01 -1.82146073e+00 -6.63796883e-01 -6.63796883e-01
 -6.63796883e-01  5.36515098e+00  5.36515098e+00  5.36515098e+00
  2.64675352e+01  2.73617960e+02  1.87565490e+03]
E1 = -181.04188442755884  E_coul = 53.966779764013936
cycle= 1 E= -127.075104663545  delta_E= -0.55  |g|= 0.13  |ddm|= 0.396
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.163172
diis-c [-0.02662522  1.        ]
  HOMO = -0.637285105539084  LUMO = 5.3607091006996
  mo_energy =
[-3.28501603e+01 -1.79254449e+00 -6.37285106e-01 -6.37285106e-01
 -6.37285106e-01  5.36070910e+00  5.36070910e+00  5.36070910e+00
  2.63357343e+01  2.73299371e+02  1.87527221e+03]
E1 = -181.20692200225957  E_coul = 54.131155485680814
cycle= 2 E= -127.075766516579  delta_E= -0.000662  |g|= 0.0208  |ddm|= 0.026
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0241929
diis-c [-1.32444642e-04  1.15624630e-01  8.84375370e-01]
  HOMO = -0.628199328165312  LUMO = 5.37535859905567
  mo_energy =
[-3.28149492e+01 -1.78227861e+00 -6.28199328e-01 -6.28199328e-01
 -6.28199328e-01  5.37535860e+00  5.37535860e+00  5.37535860e+00
  2.63649287e+01  2.73337856e+02  1.87531410e+03]
E1 = -181.1810853597985  E_coul = 54.10529811376886
cycle= 3 E= -127.07578724603  delta_E= -2.07e-05  |g|= 0.000828  |ddm|= 0.00401
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113905
diis-c [-1.08484562e-07 -3.81875415e-03  2.03804868e-02  9.83438267e-01]
  HOMO = -0.628550371242167  LUMO = 5.37478011461013
  mo_energy =
[-3.28164370e+01 -1.78262831e+00 -6.28550371e-01 -6.28550371e-01
 -6.28550371e-01  5.37478011e+00  5.37478011e+00  5.37478011e+00
  2.63638468e+01  2.73336137e+02  1.87531219e+03]
E1 = -181.1822044337987  E_coul = 54.10641714550514
cycle= 4 E= -127.075787288294  delta_E= -4.23e-08  |g|= 1.19e-05  |ddm|= 0.000177
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.23857e-05
diis-c [-9.19465716e-12  3.14504559e-05 -1.02265214e-03 -1.86338417e-02
  1.01962504e+00]
  HOMO = -0.628546664020642  LUMO = 5.374785645036
  mo_energy =
[-3.28164262e+01 -1.78262334e+00 -6.28546664e-01 -6.28546664e-01
 -6.28546664e-01  5.37478565e+00  5.37478565e+00  5.37478565e+00
  2.63638592e+01  2.73336146e+02  1.87531220e+03]
E1 = -181.182196132571  E_coul = 54.10640884427379
cycle= 5 E= -127.075787288297  delta_E= -3.65e-12  |g|= 1.07e-07  |ddm|= 1.54e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.182196132571  E_coul = 54.10640884427379
  HOMO = -0.628546630405918  LUMO = 5.37478569913936
  mo_energy =
[-3.28164260e+01 -1.78262329e+00 -6.28546630e-01 -6.28546630e-01
 -6.28546630e-01  5.37478570e+00  5.37478570e+00  5.37478570e+00
  2.63638593e+01  2.73336146e+02  1.87531220e+03]
E1 = -181.1821960460984  E_coul = 54.10640875780112
Extra cycle  E= -127.075787288297  delta_E= -7.11e-14  |g|= 1.07e-08  |ddm|= 1.52e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.18261959e-01 1.08256852e+03 1.97591675e+02 4.31247007e+01
 9.60077302e+00 5.39607313e+00 8.97666475e-01]
E = -127.07578728829728
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.927335014738       1
[INPUT] 0    0    [1    /1   ]  845.538257691        1
[INPUT] 0    0    [1    /1   ]  161.932793091        1
[INPUT] 0    0    [1    /1   ]  39.6093953054        1
[INPUT] 0    0    [1    /1   ]  10.8618030227        1
[INPUT] 1    0    [1    /1   ]  5.85978553105        1
[INPUT] 1    0    [1    /1   ]  0.952057362234       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9273350147377425, 1.0]], [0, [845.5382576910872, 1.0]], [0, [161.93279309099248, 1.0]], [0, [39.60939530543534, 1.0]], [0, [10.8618030227444, 1.0]], [1, [5.859785531048173, 1.0]], [1, [0.952057362233969, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92733501]
bas 1, expnt(s) = [845.53825769]
bas 2, expnt(s) = [161.93279309]
bas 3, expnt(s) = [39.60939531]
bas 4, expnt(s) = [10.86180302]
bas 5, expnt(s) = [5.85978553]
bas 6, expnt(s) = [0.95205736]
CPU time:       195.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92733501
   2.38749526 845.53825769 396.15484456 161.93279309 114.68751147
  39.60939531  39.88996759  10.86180302  15.11615952   5.85978553
  26.59723827   0.95205736   2.74355258]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.806833829453781
cond(S) = 27.629221642695587
E1 = -181.23608993858872  E_coul = 54.365684065610814
init E= -126.870405872978
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.654391007590838  LUMO = 5.88432935772585
  mo_energy =
[-3.26253115e+01 -1.83819408e+00 -6.54391008e-01 -6.54391008e-01
 -6.54391008e-01  5.88432936e+00  5.88432936e+00  5.88432936e+00
  2.81185347e+01  2.36668517e+02  1.47779602e+03]
E1 = -181.81352272376077  E_coul = 54.603602219561665
cycle= 1 E= -127.209920504199  delta_E= -0.34  |g|= 0.0783  |ddm|= 0.336
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0940521
diis-c [-0.00884579  1.        ]
  HOMO = -0.591780340320764  LUMO = 5.92892507033024
  mo_energy =
[-3.27552067e+01 -1.77270753e+00 -5.91780340e-01 -5.91780340e-01
 -5.91780340e-01  5.92892507e+00  5.92892507e+00  5.92892507e+00
  2.80681115e+01  2.36503619e+02  1.47756753e+03]
E1 = -181.8886107603339  E_coul = 54.678525345175636
cycle= 2 E= -127.210085415158  delta_E= -0.000165  |g|= 0.00916  |ddm|= 0.0117
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0109852
diis-c [-4.76928249e-05  8.34751254e-02  9.16524875e-01]
  HOMO = -0.587654660027767  LUMO = 5.93617165156195
  mo_energy =
[-3.27379190e+01 -1.76802725e+00 -5.87654660e-01 -5.87654660e-01
 -5.87654660e-01  5.93617165e+00  5.93617165e+00  5.93617165e+00
  2.80821554e+01  2.36523333e+02  1.47759026e+03]
E1 = -181.87737639684778  E_coul = 54.66728699335449
cycle= 3 E= -127.210089403493  delta_E= -3.99e-06  |g|= 0.000634  |ddm|= 0.00176
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000789854
diis-c [-1.95347288e-08 -4.38137504e-03  3.61701231e-02  9.68211252e-01]
  HOMO = -0.587924239000219  LUMO = 5.93570977672742
  mo_energy =
[-3.27389682e+01 -1.76831752e+00 -5.87924239e-01 -5.87924239e-01
 -5.87924239e-01  5.93570978e+00  5.93570978e+00  5.93570978e+00
  2.80813253e+01  2.36522307e+02  1.47758924e+03]
E1 = -181.87810146291497  E_coul = 54.66801204067802
cycle= 4 E= -127.210089422237  delta_E= -1.87e-08  |g|= 5.78e-06  |ddm|= 0.000113
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=6.39603e-06
diis-c [-9.43747645e-13  6.78534683e-05 -1.04607008e-03 -1.39938669e-02
  1.01497208e+00]
  HOMO = -0.587922003145795  LUMO = 5.93571348981799
  mo_energy =
[-3.27389605e+01 -1.76831478e+00 -5.87922003e-01 -5.87922003e-01
 -5.87922003e-01  5.93571349e+00  5.93571349e+00  5.93571349e+00
  2.80813327e+01  2.36522314e+02  1.47758925e+03]
E1 = -181.87809616852337  E_coul = 54.66800674628522
cycle= 5 E= -127.210089422238  delta_E= -1.21e-12  |g|= 4.82e-08  |ddm|= 8.65e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.87809616852337  E_coul = 54.66800674628522
  HOMO = -0.587922005697395  LUMO = 5.9357134825571
  mo_energy =
[-3.27389605e+01 -1.76831478e+00 -5.87922006e-01 -5.87922006e-01
 -5.87922006e-01  5.93571348e+00  5.93571348e+00  5.93571348e+00
  2.80813327e+01  2.36522314e+02  1.47758925e+03]
E1 = -181.87809619107378  E_coul = 54.66800676883567
Extra cycle  E= -127.210089422238  delta_E= 4.26e-14  |g|= 3.82e-09  |ddm|= 6.32e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [  0.92733501 845.53825769 161.93279309  39.60939531  10.86180302
   5.85978553   0.95205736]
E = -127.21008942223811
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.927335014738       1
[INPUT] 0    0    [1    /1   ]  845.538257691        1
[INPUT] 0    0    [1    /1   ]  161.932793091        1
[INPUT] 0    0    [1    /1   ]  39.6093953054        1
[INPUT] 0    0    [1    /1   ]  10.8618030227        1
[INPUT] 1    0    [1    /1   ]  5.85978553105        1
[INPUT] 1    0    [1    /1   ]  0.952057362234       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9273350147377425, 1.0]], [0, [845.5382576910872, 1.0]], [0, [161.93279309099248, 1.0]], [0, [39.60939530543534, 1.0]], [0, [10.8618030227444, 1.0]], [1, [5.859785531048173, 1.0]], [1, [0.952057362233969, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.92733501]
bas 1, expnt(s) = [845.53825769]
bas 2, expnt(s) = [161.93279309]
bas 3, expnt(s) = [39.60939531]
bas 4, expnt(s) = [10.86180302]
bas 5, expnt(s) = [5.85978553]
bas 6, expnt(s) = [0.95205736]
CPU time:       196.26
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [  0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.
   0.           0.           0.           0.           0.92733501
   2.38749526 845.53825769 396.15484456 161.93279309 114.68751147
  39.60939531  39.88996759  10.86180302  15.11615952   5.85978553
  26.59723827   0.95205736   2.74355258]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.806833829453781
cond(S) = 27.629221642695587
E1 = -181.23608993858872  E_coul = 54.365684065610814
init E= -126.870405872978
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.654391007590838  LUMO = 5.88432935772585
  mo_energy =
[-3.26253115e+01 -1.83819408e+00 -6.54391008e-01 -6.54391008e-01
 -6.54391008e-01  5.88432936e+00  5.88432936e+00  5.88432936e+00
  2.81185347e+01  2.36668517e+02  1.47779602e+03]
E1 = -181.81352272376077  E_coul = 54.603602219561665
cycle= 1 E= -127.209920504199  delta_E= -0.34  |g|= 0.0783  |ddm|= 0.336
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0940521
diis-c [-0.00884579  1.        ]
  HOMO = -0.591780340320764  LUMO = 5.92892507033024
  mo_energy =
[-3.27552067e+01 -1.77270753e+00 -5.91780340e-01 -5.91780340e-01
 -5.91780340e-01  5.92892507e+00  5.92892507e+00  5.92892507e+00
  2.80681115e+01  2.36503619e+02  1.47756753e+03]
E1 = -181.8886107603339  E_coul = 54.678525345175636
cycle= 2 E= -127.210085415158  delta_E= -0.000165  |g|= 0.00916  |ddm|= 0.0117
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0109852
diis-c [-4.76928249e-05  8.34751254e-02  9.16524875e-01]
  HOMO = -0.587654660027767  LUMO = 5.93617165156195
  mo_energy =
[-3.27379190e+01 -1.76802725e+00 -5.87654660e-01 -5.87654660e-01
 -5.87654660e-01  5.93617165e+00  5.93617165e+00  5.93617165e+00
  2.80821554e+01  2.36523333e+02  1.47759026e+03]
E1 = -181.87737639684778  E_coul = 54.66728699335449
cycle= 3 E= -127.210089403493  delta_E= -3.99e-06  |g|= 0.000634  |ddm|= 0.00176
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000789854
diis-c [-1.95347288e-08 -4.38137504e-03  3.61701231e-02  9.68211252e-01]
  HOMO = -0.587924239000219  LUMO = 5.93570977672742
  mo_energy =
[-3.27389682e+01 -1.76831752e+00 -5.87924239e-01 -5.87924239e-01
 -5.87924239e-01  5.93570978e+00  5.93570978e+00  5.93570978e+00
  2.80813253e+01  2.36522307e+02  1.47758924e+03]
E1 = -181.87810146291497  E_coul = 54.66801204067802
cycle= 4 E= -127.210089422237  delta_E= -1.87e-08  |g|= 5.78e-06  |ddm|= 0.000113
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.39603e-06
diis-c [-9.43747645e-13  6.78534683e-05 -1.04607008e-03 -1.39938669e-02
  1.01497208e+00]
  HOMO = -0.587922003145795  LUMO = 5.93571348981799
  mo_energy =
[-3.27389605e+01 -1.76831478e+00 -5.87922003e-01 -5.87922003e-01
 -5.87922003e-01  5.93571349e+00  5.93571349e+00  5.93571349e+00
  2.80813327e+01  2.36522314e+02  1.47758925e+03]
E1 = -181.87809616852337  E_coul = 54.66800674628522
cycle= 5 E= -127.210089422238  delta_E= -1.21e-12  |g|= 4.82e-08  |ddm|= 8.65e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.87809616852337  E_coul = 54.66800674628522
  HOMO = -0.587922005697395  LUMO = 5.9357134825571
  mo_energy =
[-3.27389605e+01 -1.76831478e+00 -5.87922006e-01 -5.87922006e-01
 -5.87922006e-01  5.93571348e+00  5.93571348e+00  5.93571348e+00
  2.80813327e+01  2.36522314e+02  1.47758925e+03]
E1 = -181.87809619107378  E_coul = 54.66800676883567
Extra cycle  E= -127.210089422238  delta_E= 4.26e-14  |g|= 3.82e-09  |ddm|= 6.32e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 27.629221642695587
E1 = -181.87809619107378  E_coul = 54.66800676883567
init E= -127.210089422238
    CPU time for initialize scf      0.04 sec, wall time      0.05 sec
  HOMO = -0.587922004238535  LUMO = 5.93571348497308
  mo_energy =
[-3.27389605e+01 -1.76831478e+00 -5.87922004e-01 -5.87922004e-01
 -5.87922004e-01  5.93571348e+00  5.93571348e+00  5.93571348e+00
  2.80813327e+01  2.36522314e+02  1.47758925e+03]
E1 = -181.8780961877632  E_coul = 54.668006765525085
cycle= 1 E= -127.210089422238  delta_E= 1.42e-14  |g|= 3.89e-10  |ddm|= 5.68e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.8780961877632  E_coul = 54.668006765525085
  HOMO = -0.587922004437329  LUMO = 5.93571348462222
  mo_energy =
[-3.27389605e+01 -1.76831478e+00 -5.87922004e-01 -5.87922004e-01
 -5.87922004e-01  5.93571348e+00  5.93571348e+00  5.93571348e+00
  2.80813327e+01  2.36522314e+02  1.47758925e+03]
E1 = -181.87809618832702  E_coul = 54.668006766088894
Extra cycle  E= -127.210089422238  delta_E= -2.84e-14  |g|= 6.94e-11  |ddm|= 8.8e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [  0.92733501 845.53825769 161.93279309  39.60939531  10.86180302
   5.85978553   0.95205736]
grad_E = [-0.05288624 -0.00024707  0.00061282  0.00408228 -0.02153796  0.05272782
 -0.06629792]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.941934973085       1
[INPUT] 0    0    [1    /1   ]  996.174276164        1
[INPUT] 0    0    [1    /1   ]  187.263711633        1
[INPUT] 0    0    [1    /1   ]  44.5103836358        1
[INPUT] 0    0    [1    /1   ]  12.0426287491        1
[INPUT] 1    0    [1    /1   ]  5.4077700469         1
[INPUT] 1    0    [1    /1   ]  0.906854950304       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9419349730850914, 1.0]], [0, [996.1742761637088, 1.0]], [0, [187.26371163306993, 1.0]], [0, [44.51038363581637, 1.0]], [0, [12.04262874909662, 1.0]], [1, [5.407770046899536, 1.0]], [1, [0.9068549503036791, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94193497]
bas 1, expnt(s) = [996.17427616]
bas 2, expnt(s) = [187.26371163]
bas 3, expnt(s) = [44.51038364]
bas 4, expnt(s) = [12.04262875]
bas 5, expnt(s) = [5.40777005]
bas 6, expnt(s) = [0.90685495]
CPU time:       199.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.41934973e-01 2.41563168e+00 9.96174276e+02 4.47988140e+02
 1.87263712e+02 1.27895494e+02 4.45103836e+01 4.35372534e+01
 1.20426287e+01 1.63326253e+01 5.40777005e+00 2.40578694e+01
 9.06854950e-01 2.58170537e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.824948004993463
cond(S) = 25.760976837418525
E1 = -181.26525524366704  E_coul = 54.35010422758491
init E= -126.915151016082
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.65156253481375  LUMO = 5.42545111016955
  mo_energy =
[-3.26546653e+01 -1.83906489e+00 -6.51562535e-01 -6.51562535e-01
 -6.51562535e-01  5.42545111e+00  5.42545111e+00  5.42545111e+00
  3.32485211e+01  2.77562937e+02  1.75398635e+03]
E1 = -181.59628052792024  E_coul = 54.35700827639657
cycle= 1 E= -127.239272251524  delta_E= -0.324  |g|= 0.0904  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100222
diis-c [-0.01004447  1.        ]
  HOMO = -0.609199272671803  LUMO = 5.45053196247297
  mo_energy =
[-3.28138941e+01 -1.79977985e+00 -6.09199273e-01 -6.09199273e-01
 -6.09199273e-01  5.45053196e+00  5.45053196e+00  5.45053196e+00
  3.31530759e+01  2.77376275e+02  1.75374769e+03]
E1 = -181.69178110904872  E_coul = 54.452273509371594
cycle= 2 E= -127.239507599677  delta_E= -0.000235  |g|= 0.0111  |ddm|= 0.0148
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0134507
diis-c [-5.83768287e-05  9.97295849e-02  9.00270415e-01]
  HOMO = -0.603972262015623  LUMO = 5.45909825561391
  mo_energy =
[-3.27926789e+01 -1.79377706e+00 -6.03972262e-01 -6.03972262e-01
 -6.03972262e-01  5.45909826e+00  5.45909826e+00  5.45909826e+00
  3.31711199e+01  2.77400457e+02  1.75377486e+03]
E1 = -181.67711248906932  E_coul = 54.43759831811818
cycle= 3 E= -127.239514170951  delta_E= -6.57e-06  |g|= 0.000654  |ddm|= 0.0023
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00077553
diis-c [-1.01923407e-08 -4.17713306e-03  2.80602391e-02  9.76116894e-01]
  HOMO = -0.604256067524015  LUMO = 5.45864717112562
  mo_energy =
[-3.27937187e+01 -1.79409677e+00 -6.04256068e-01 -6.04256068e-01
 -6.04256068e-01  5.45864717e+00  5.45864717e+00  5.45864717e+00
  3.31702320e+01  2.77399492e+02  1.75377396e+03]
E1 = -181.6778844329341  E_coul = 54.43837024179464
cycle= 4 E= -127.239514191139  delta_E= -2.02e-08  |g|= 3.27e-06  |ddm|= 0.000121
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.66532e-06
diis-c [-4.43667974e-13  5.95410478e-05 -5.82990375e-04 -1.26326636e-02
  1.01315611e+00]
  HOMO = -0.60425473083959  LUMO = 5.45864923588116
  mo_energy =
[-3.27937142e+01 -1.79409514e+00 -6.04254731e-01 -6.04254731e-01
 -6.04254731e-01  5.45864924e+00  5.45864924e+00  5.45864924e+00
  3.31702364e+01  2.77399496e+02  1.75377396e+03]
E1 = -181.67788113611547  E_coul = 54.43836694497578
cycle= 5 E= -127.23951419114  delta_E= -2.42e-13  |g|= 2.49e-08  |ddm|= 5.24e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67788113611547  E_coul = 54.43836694497578
  HOMO = -0.604254736126992  LUMO = 5.45864922675356
  mo_energy =
[-3.27937143e+01 -1.79409515e+00 -6.04254736e-01 -6.04254736e-01
 -6.04254736e-01  5.45864923e+00  5.45864923e+00  5.45864923e+00
  3.31702364e+01  2.77399496e+02  1.75377396e+03]
E1 = -181.67788115830635  E_coul = 54.43836696716655
Extra cycle  E= -127.23951419114  delta_E= -9.95e-14  |g|= 2.95e-09  |ddm|= 4.22e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.41934973e-01 9.96174276e+02 1.87263712e+02 4.45103836e+01
 1.20426287e+01 5.40777005e+00 9.06854950e-01]
E = -127.23951419113979
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]


minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.941934973085       1
[INPUT] 0    0    [1    /1   ]  996.174276164        1
[INPUT] 0    0    [1    /1   ]  187.263711633        1
[INPUT] 0    0    [1    /1   ]  44.5103836358        1
[INPUT] 0    0    [1    /1   ]  12.0426287491        1
[INPUT] 1    0    [1    /1   ]  5.4077700469         1
[INPUT] 1    0    [1    /1   ]  0.906854950304       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9419349730850914, 1.0]], [0, [996.1742761637088, 1.0]], [0, [187.26371163306993, 1.0]], [0, [44.51038363581637, 1.0]], [0, [12.04262874909662, 1.0]], [1, [5.407770046899536, 1.0]], [1, [0.9068549503036791, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94193497]
bas 1, expnt(s) = [996.17427616]
bas 2, expnt(s) = [187.26371163]
bas 3, expnt(s) = [44.51038364]
bas 4, expnt(s) = [12.04262875]
bas 5, expnt(s) = [5.40777005]
bas 6, expnt(s) = [0.90685495]
CPU time:       200.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.41934973e-01 2.41563168e+00 9.96174276e+02 4.47988140e+02
 1.87263712e+02 1.27895494e+02 4.45103836e+01 4.35372534e+01
 1.20426287e+01 1.63326253e+01 5.40777005e+00 2.40578694e+01
 9.06854950e-01 2.58170537e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.824948004993463
cond(S) = 25.760976837418525
E1 = -181.26525524366704  E_coul = 54.35010422758491
init E= -126.915151016082
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.65156253481375  LUMO = 5.42545111016955
  mo_energy =
[-3.26546653e+01 -1.83906489e+00 -6.51562535e-01 -6.51562535e-01
 -6.51562535e-01  5.42545111e+00  5.42545111e+00  5.42545111e+00
  3.32485211e+01  2.77562937e+02  1.75398635e+03]
E1 = -181.59628052792024  E_coul = 54.35700827639657
cycle= 1 E= -127.239272251524  delta_E= -0.324  |g|= 0.0904  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100222
diis-c [-0.01004447  1.        ]
  HOMO = -0.609199272671803  LUMO = 5.45053196247297
  mo_energy =
[-3.28138941e+01 -1.79977985e+00 -6.09199273e-01 -6.09199273e-01
 -6.09199273e-01  5.45053196e+00  5.45053196e+00  5.45053196e+00
  3.31530759e+01  2.77376275e+02  1.75374769e+03]
E1 = -181.69178110904872  E_coul = 54.452273509371594
cycle= 2 E= -127.239507599677  delta_E= -0.000235  |g|= 0.0111  |ddm|= 0.0148
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0134507
diis-c [-5.83768287e-05  9.97295849e-02  9.00270415e-01]
  HOMO = -0.603972262015623  LUMO = 5.45909825561391
  mo_energy =
[-3.27926789e+01 -1.79377706e+00 -6.03972262e-01 -6.03972262e-01
 -6.03972262e-01  5.45909826e+00  5.45909826e+00  5.45909826e+00
  3.31711199e+01  2.77400457e+02  1.75377486e+03]
E1 = -181.67711248906932  E_coul = 54.43759831811818
cycle= 3 E= -127.239514170951  delta_E= -6.57e-06  |g|= 0.000654  |ddm|= 0.0023
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00077553
diis-c [-1.01923407e-08 -4.17713306e-03  2.80602391e-02  9.76116894e-01]
  HOMO = -0.604256067524015  LUMO = 5.45864717112562
  mo_energy =
[-3.27937187e+01 -1.79409677e+00 -6.04256068e-01 -6.04256068e-01
 -6.04256068e-01  5.45864717e+00  5.45864717e+00  5.45864717e+00
  3.31702320e+01  2.77399492e+02  1.75377396e+03]
E1 = -181.6778844329341  E_coul = 54.43837024179464
cycle= 4 E= -127.239514191139  delta_E= -2.02e-08  |g|= 3.27e-06  |ddm|= 0.000121
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.66532e-06
diis-c [-4.43667974e-13  5.95410478e-05 -5.82990375e-04 -1.26326636e-02
  1.01315611e+00]
  HOMO = -0.60425473083959  LUMO = 5.45864923588116
  mo_energy =
[-3.27937142e+01 -1.79409514e+00 -6.04254731e-01 -6.04254731e-01
 -6.04254731e-01  5.45864924e+00  5.45864924e+00  5.45864924e+00
  3.31702364e+01  2.77399496e+02  1.75377396e+03]
E1 = -181.67788113611547  E_coul = 54.43836694497578
cycle= 5 E= -127.23951419114  delta_E= -2.42e-13  |g|= 2.49e-08  |ddm|= 5.24e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67788113611547  E_coul = 54.43836694497578
  HOMO = -0.604254736126992  LUMO = 5.45864922675356
  mo_energy =
[-3.27937143e+01 -1.79409515e+00 -6.04254736e-01 -6.04254736e-01
 -6.04254736e-01  5.45864923e+00  5.45864923e+00  5.45864923e+00
  3.31702364e+01  2.77399496e+02  1.75377396e+03]
E1 = -181.67788115830635  E_coul = 54.43836696716655
Extra cycle  E= -127.23951419114  delta_E= -9.95e-14  |g|= 2.95e-09  |ddm|= 4.22e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 25.760976837418525
E1 = -181.67788115830635  E_coul = 54.43836696716655
init E= -127.23951419114
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604254734722447  LUMO = 5.45864922900027
  mo_energy =
[-3.27937143e+01 -1.79409514e+00 -6.04254735e-01 -6.04254735e-01
 -6.04254735e-01  5.45864923e+00  5.45864923e+00  5.45864923e+00
  3.31702364e+01  2.77399496e+02  1.75377396e+03]
E1 = -181.67788115467437  E_coul = 54.43836696353447
cycle= 1 E= -127.23951419114  delta_E= -1.14e-13  |g|= 4.2e-10  |ddm|= 5.75e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67788115467437  E_coul = 54.43836696353447
  HOMO = -0.604254734945807  LUMO = 5.45864922863602
  mo_energy =
[-3.27937143e+01 -1.79409514e+00 -6.04254735e-01 -6.04254735e-01
 -6.04254735e-01  5.45864923e+00  5.45864923e+00  5.45864923e+00
  3.31702364e+01  2.77399496e+02  1.75377396e+03]
E1 = -181.67788115530496  E_coul = 54.43836696416519
Extra cycle  E= -127.23951419114  delta_E= 1.42e-13  |g|= 7.42e-11  |ddm|= 9.89e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [9.41934973e-01 9.96174276e+02 1.87263712e+02 4.45103836e+01
 1.20426287e+01 5.40777005e+00 9.06854950e-01]
grad_E = [-2.78809460e-02 -1.72981756e-04  7.66227316e-04  3.13532935e-04
 -1.37515705e-05  9.33473946e-03 -1.54948338e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max()

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.948110688977       1
[INPUT] 0    0    [1    /1   ]  1051.29256139        1
[INPUT] 0    0    [1    /1   ]  192.894891966        1
[INPUT] 0    0    [1    /1   ]  44.7817056968        1
[INPUT] 0    0    [1    /1   ]  12.0162712735        1
[INPUT] 1    0    [1    /1   ]  5.26317324984        1
[INPUT] 1    0    [1    /1   ]  0.892429039096       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9481106889773161, 1.0]], [0, [1051.2925613895015, 1.0]], [0, [192.89489196574476, 1.0]], [0, [44.7817056967974, 1.0]], [0, [12.01627127350188, 1.0]], [1, [5.2631732498429304, 1.0]], [1, [0.8924290390961276, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94811069]
bas 1, expnt(s) = [1051.29256139]
bas 2, expnt(s) = [192.89489197]
bas 3, expnt(s) = [44.7817057]
bas 4, expnt(s) = [12.01627127]
bas 5, expnt(s) = [5.26317325]
bas 6, expnt(s) = [0.89242904]
CPU time:       203.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.48110689e-01 2.42750038e+00 1.05129256e+03 4.66452814e+02
 1.92894892e+02 1.30769231e+02 4.47817057e+01 4.37361447e+01
 1.20162713e+01 1.63058077e+01 5.26317325e+00 2.32564796e+01
 8.92429039e-01 2.53047184e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.83014224932878
cond(S) = 24.583790289169148
E1 = -181.2728436668803  E_coul = 54.34442942489058
init E= -126.92841424199
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649912968094037  LUMO = 5.28205019189471
  mo_energy =
[-3.26659111e+01 -1.83772239e+00 -6.49912968e-01 -6.49912968e-01
 -6.49912968e-01  5.28205019e+00  5.28205019e+00  5.28205019e+00
  3.33437129e+01  2.83391379e+02  1.83761345e+03]
E1 = -181.51320379409486  E_coul = 54.269540329344174
cycle= 1 E= -127.243663464751  delta_E= -0.315  |g|= 0.0936  |ddm|= 0.314
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104076
diis-c [-0.0108318  1.       ]
  HOMO = -0.614264427319245  LUMO = 5.30029459187027
  mo_energy =
[-3.28375137e+01 -1.80692042e+00 -6.14264427e-01 -6.14264427e-01
 -6.14264427e-01  5.30029459e+00  5.30029459e+00  5.30029459e+00
  3.32349477e+01  2.83191872e+02  1.83736227e+03]
E1 = -181.61915890795456  E_coul = 54.3752184258376
cycle= 2 E= -127.243940482117  delta_E= -0.000277  |g|= 0.0122  |ddm|= 0.0165
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.014784
diis-c [-5.91805649e-05  1.08446118e-01  8.91553882e-01]
  HOMO = -0.608488780076994  LUMO = 5.3095380423095
  mo_energy =
[-3.28143731e+01 -1.80025861e+00 -6.08488780e-01 -6.08488780e-01
 -6.08488780e-01  5.30953804e+00  5.30953804e+00  5.30953804e+00
  3.32546837e+01  2.83218109e+02  1.83739155e+03]
E1 = -181.6027408395877  E_coul = 54.3587921605545
cycle= 3 E= -127.243948679033  delta_E= -8.2e-06  |g|= 0.000629  |ddm|= 0.00258
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00073981
diis-c [-9.44100726e-09 -4.10869533e-03  2.21892861e-02  9.81919409e-01]
  HOMO = -0.608762494510639  LUMO = 5.30911390790809
  mo_energy =
[-3.28153559e+01 -1.80056923e+00 -6.08762495e-01 -6.08762495e-01
 -6.08762495e-01  5.30911391e+00  5.30911391e+00  5.30911391e+00
  3.32538377e+01  2.83217216e+02  1.83739074e+03]
E1 = -181.60349299946634  E_coul = 54.359544301592535
cycle= 4 E= -127.243948697874  delta_E= -1.88e-08  |g|= 2.92e-06  |ddm|= 0.000118
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.28966e-06
diis-c [-3.77085422e-13  5.88281374e-05 -4.85369771e-04 -1.33223793e-02
  1.01374892e+00]
  HOMO = -0.608761305546868  LUMO = 5.3091156958988
  mo_energy =
[-3.28153519e+01 -1.80056777e+00 -6.08761306e-01 -6.08761306e-01
 -6.08761306e-01  5.30911570e+00  5.30911570e+00  5.30911570e+00
  3.32538416e+01  2.83217220e+02  1.83739074e+03]
E1 = -181.60349002932736  E_coul = 54.35954133145327
cycle= 5 E= -127.243948697874  delta_E= -2.84e-13  |g|= 2.31e-08  |ddm|= 4.74e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.60349002932736  E_coul = 54.35954133145327
  HOMO = -0.60876131024515  LUMO = 5.30911568814812
  mo_energy =
[-3.28153520e+01 -1.80056778e+00 -6.08761310e-01 -6.08761310e-01
 -6.08761310e-01  5.30911569e+00  5.30911569e+00  5.30911569e+00
  3.32538416e+01  2.83217220e+02  1.83739074e+03]
E1 = -181.603490049641  E_coul = 54.35954135176688
Extra cycle  E= -127.243948697874  delta_E= -4.26e-14  |g|= 2.69e-09  |ddm|= 3.89e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.48110689e-01 1.05129256e+03 1.92894892e+02 4.47817057e+01
 1.20162713e+01 5.26317325e+00 8.92429039e-01]
E = -127.24394869787413
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max()

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:34:58 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.948110688977       1
[INPUT] 0    0    [1    /1   ]  1051.29256139        1
[INPUT] 0    0    [1    /1   ]  192.894891966        1
[INPUT] 0    0    [1    /1   ]  44.7817056968        1
[INPUT] 0    0    [1    /1   ]  12.0162712735        1
[INPUT] 1    0    [1    /1   ]  5.26317324984        1
[INPUT] 1    0    [1    /1   ]  0.892429039096       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9481106889773161, 1.0]], [0, [1051.2925613895015, 1.0]], [0, [192.89489196574476, 1.0]], [0, [44.7817056967974, 1.0]], [0, [12.01627127350188, 1.0]], [1, [5.2631732498429304, 1.0]], [1, [0.8924290390961276, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94811069]
bas 1, expnt(s) = [1051.29256139]
bas 2, expnt(s) = [192.89489197]
bas 3, expnt(s) = [44.7817057]
bas 4, expnt(s) = [12.01627127]
bas 5, expnt(s) = [5.26317325]
bas 6, expnt(s) = [0.89242904]
CPU time:       204.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.48110689e-01 2.42750038e+00 1.05129256e+03 4.66452814e+02
 1.92894892e+02 1.30769231e+02 4.47817057e+01 4.37361447e+01
 1.20162713e+01 1.63058077e+01 5.26317325e+00 2.32564796e+01
 8.92429039e-01 2.53047184e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.83014224932878
cond(S) = 24.583790289169148
E1 = -181.2728436668803  E_coul = 54.34442942489058
init E= -126.92841424199
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649912968094037  LUMO = 5.28205019189471
  mo_energy =
[-3.26659111e+01 -1.83772239e+00 -6.49912968e-01 -6.49912968e-01
 -6.49912968e-01  5.28205019e+00  5.28205019e+00  5.28205019e+00
  3.33437129e+01  2.83391379e+02  1.83761345e+03]
E1 = -181.51320379409486  E_coul = 54.269540329344174
cycle= 1 E= -127.243663464751  delta_E= -0.315  |g|= 0.0936  |ddm|= 0.314
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104076
diis-c [-0.0108318  1.       ]
  HOMO = -0.614264427319245  LUMO = 5.30029459187027
  mo_energy =
[-3.28375137e+01 -1.80692042e+00 -6.14264427e-01 -6.14264427e-01
 -6.14264427e-01  5.30029459e+00  5.30029459e+00  5.30029459e+00
  3.32349477e+01  2.83191872e+02  1.83736227e+03]
E1 = -181.61915890795456  E_coul = 54.3752184258376
cycle= 2 E= -127.243940482117  delta_E= -0.000277  |g|= 0.0122  |ddm|= 0.0165
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.014784
diis-c [-5.91805649e-05  1.08446118e-01  8.91553882e-01]
  HOMO = -0.608488780076994  LUMO = 5.3095380423095
  mo_energy =
[-3.28143731e+01 -1.80025861e+00 -6.08488780e-01 -6.08488780e-01
 -6.08488780e-01  5.30953804e+00  5.30953804e+00  5.30953804e+00
  3.32546837e+01  2.83218109e+02  1.83739155e+03]
E1 = -181.6027408395877  E_coul = 54.3587921605545
cycle= 3 E= -127.243948679033  delta_E= -8.2e-06  |g|= 0.000629  |ddm|= 0.00258
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00073981
diis-c [-9.44100726e-09 -4.10869533e-03  2.21892861e-02  9.81919409e-01]
  HOMO = -0.608762494510639  LUMO = 5.30911390790809
  mo_energy =
[-3.28153559e+01 -1.80056923e+00 -6.08762495e-01 -6.08762495e-01
 -6.08762495e-01  5.30911391e+00  5.30911391e+00  5.30911391e+00
  3.32538377e+01  2.83217216e+02  1.83739074e+03]
E1 = -181.60349299946634  E_coul = 54.359544301592535
cycle= 4 E= -127.243948697874  delta_E= -1.88e-08  |g|= 2.92e-06  |ddm|= 0.000118
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.28966e-06
diis-c [-3.77085422e-13  5.88281374e-05 -4.85369771e-04 -1.33223793e-02
  1.01374892e+00]
  HOMO = -0.608761305546868  LUMO = 5.3091156958988
  mo_energy =
[-3.28153519e+01 -1.80056777e+00 -6.08761306e-01 -6.08761306e-01
 -6.08761306e-01  5.30911570e+00  5.30911570e+00  5.30911570e+00
  3.32538416e+01  2.83217220e+02  1.83739074e+03]
E1 = -181.60349002932736  E_coul = 54.35954133145327
cycle= 5 E= -127.243948697874  delta_E= -2.84e-13  |g|= 2.31e-08  |ddm|= 4.74e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.60349002932736  E_coul = 54.35954133145327
  HOMO = -0.60876131024515  LUMO = 5.30911568814812
  mo_energy =
[-3.28153520e+01 -1.80056778e+00 -6.08761310e-01 -6.08761310e-01
 -6.08761310e-01  5.30911569e+00  5.30911569e+00  5.30911569e+00
  3.32538416e+01  2.83217220e+02  1.83739074e+03]
E1 = -181.603490049641  E_coul = 54.35954135176688
Extra cycle  E= -127.243948697874  delta_E= -4.26e-14  |g|= 2.69e-09  |ddm|= 3.89e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 24.583790289169148
E1 = -181.603490049641  E_coul = 54.35954135176688
init E= -127.243948697874
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.608761308953443  LUMO = 5.30911569016904
  mo_energy =
[-3.28153520e+01 -1.80056777e+00 -6.08761309e-01 -6.08761309e-01
 -6.08761309e-01  5.30911569e+00  5.30911569e+00  5.30911569e+00
  3.32538416e+01  2.83217220e+02  1.83739074e+03]
E1 = -181.603490046258  E_coul = 54.359541348383885
cycle= 1 E= -127.243948697874  delta_E= 1.42e-14  |g|= 3.88e-10  |ddm|= 5.36e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.603490046258  E_coul = 54.359541348383885
  HOMO = -0.608761309162375  LUMO = 5.3091156898361
  mo_energy =
[-3.28153520e+01 -1.80056777e+00 -6.08761309e-01 -6.08761309e-01
 -6.08761309e-01  5.30911569e+00  5.30911569e+00  5.30911569e+00
  3.32538416e+01  2.83217220e+02  1.83739074e+03]
E1 = -181.60349004685597  E_coul = 54.359541348981864
Extra cycle  E= -127.243948697874  delta_E= 1.42e-14  |g|= 7e-11  |ddm|= 9.4e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [9.48110689e-01 1.05129256e+03 1.92894892e+02 4.47817057e+01
 1.20162713e+01 5.26317325e+00 8.92429039e-01]
grad_E = [-1.03007261e-02 -1.47985674e-04  8.37843208e-04 -1.74354483e-05
 -2.11116888e-03 -7.94439939e-03  9.81269972e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.953183667          1
[INPUT] 0    0    [1    /1   ]  1101.17976529        1
[INPUT] 0    0    [1    /1   ]  195.416254255        1
[INPUT] 0    0    [1    /1   ]  44.4392700727        1
[INPUT] 0    0    [1    /1   ]  11.9473570029        1
[INPUT] 1    0    [1    /1   ]  5.21618669515        1
[INPUT] 1    0    [1    /1   ]  0.886805808537       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9531836670002394, 1.0]], [0, [1101.1797652935354, 1.0]], [0, [195.4162542550785, 1.0]], [0, [44.439270072659184, 1.0]], [0, [11.947357002868722, 1.0]], [1, [5.216186695149529, 1.0]], [1, [0.8868058085369697, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95318367]
bas 1, expnt(s) = [1101.17976529]
bas 2, expnt(s) = [195.41625426]
bas 3, expnt(s) = [44.43927007]
bas 4, expnt(s) = [11.947357]
bas 5, expnt(s) = [5.2161867]
bas 6, expnt(s) = [0.88680581]
CPU time:       207.49
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.53183667e-01 2.43723535e+00 1.10117977e+03 4.82957251e+02
 1.95416254e+02 1.32049128e+02 4.44392701e+01 4.34850738e+01
 1.19473570e+01 1.62356210e+01 5.21618670e+00 2.29972444e+01
 8.86805809e-01 2.51055681e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831836392943464
cond(S) = 23.760287029417665
E1 = -181.28923077407137  E_coul = 54.35026116229633
init E= -126.938969611775
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.648708283685  LUMO = 5.23341857841323
  mo_energy =
[-3.26692131e+01 -1.83698147e+00 -6.48708284e-01 -6.48708284e-01
 -6.48708284e-01  5.23341858e+00  5.23341858e+00  5.23341858e+00
  3.30401430e+01  2.84508205e+02  1.90335655e+03]
E1 = -181.48947218111653  E_coul = 54.242058613543485
cycle= 1 E= -127.247413567573  delta_E= -0.308  |g|= 0.0966  |ddm|= 0.312
    CPU time for cycle= 1      0.02 sec, wall time      0.03 sec
diis-norm(errvec)=0.106147
diis-c [-0.01126727  1.        ]
  HOMO = -0.615706276103773  LUMO = 5.24883769182035
  mo_energy =
[-3.28457976e+01 -1.80993884e+00 -6.15706276e-01 -6.15706276e-01
 -6.15706276e-01  5.24883769e+00  5.24883769e+00  5.24883769e+00
  3.29261954e+01  2.84304174e+02  1.90310009e+03]
E1 = -181.59979799893716  E_coul = 54.35208813165839
cycle= 2 E= -127.247709867279  delta_E= -0.000296  |g|= 0.0127  |ddm|= 0.0172
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0153593
diis-c [-6.08767766e-05  1.11091945e-01  8.88908055e-01]
  HOMO = -0.609706470200382  LUMO = 5.25837516862069
  mo_energy =
[-3.28218102e+01 -1.80300045e+00 -6.09706470e-01 -6.09706470e-01
 -6.09706470e-01  5.25837517e+00  5.25837517e+00  5.25837517e+00
  3.29465911e+01  2.84331365e+02  1.90313042e+03]
E1 = -181.58260508389137  E_coul = 54.334886260968226
cycle= 3 E= -127.247718822923  delta_E= -8.96e-06  |g|= 0.000635  |ddm|= 0.00271
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000738166
diis-c [-8.62395760e-09 -4.06735050e-03  2.09531175e-02  9.83114233e-01]
  HOMO = -0.609981579231138  LUMO = 5.25795268403521
  mo_energy =
[-3.28227873e+01 -1.80331518e+00 -6.09981579e-01 -6.09981579e-01
 -6.09981579e-01  5.25795268e+00  5.25795268e+00  5.25795268e+00
  3.29457452e+01  2.84330488e+02  1.90312964e+03]
E1 = -181.583361745129  E_coul = 54.335642903247134
cycle= 4 E= -127.247718841882  delta_E= -1.9e-08  |g|= 2.6e-06  |ddm|= 0.000118
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.94823e-06
diis-c [-3.45558579e-13  5.77725618e-05 -4.40173681e-04 -1.33200178e-02
  1.01370242e+00]
  HOMO = -0.609980525482975  LUMO = 5.25795425369731
  mo_energy =
[-3.28227838e+01 -1.80331388e+00 -6.09980525e-01 -6.09980525e-01
 -6.09980525e-01  5.25795425e+00  5.25795425e+00  5.25795425e+00
  3.29457487e+01  2.84330492e+02  1.90312964e+03]
E1 = -181.58335908798531  E_coul = 54.3356402461033
cycle= 5 E= -127.247718841882  delta_E= -1.42e-13  |g|= 2.22e-08  |ddm|= 4.25e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.58335908798531  E_coul = 54.3356402461033
  HOMO = -0.60998053044169  LUMO = 5.25795424575787
  mo_energy =
[-3.28227838e+01 -1.80331388e+00 -6.09980530e-01 -6.09980530e-01
 -6.09980530e-01  5.25795425e+00  5.25795425e+00  5.25795425e+00
  3.29457487e+01  2.84330492e+02  1.90312964e+03]
E1 = -181.5833591085763  E_coul = 54.33564026669421
Extra cycle  E= -127.247718841882  delta_E= -8.53e-14  |g|= 2.7e-09  |ddm|= 3.87e-09
    CPU time for scf_cycle      0.12 sec, wall time      0.14 sec
exp = [9.53183667e-01 1.10117977e+03 1.95416254e+02 4.44392701e+01
 1.19473570e+01 5.21618670e+00 8.86805809e-01]
E = -127.24771884188209
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.953183667          1
[INPUT] 0    0    [1    /1   ]  1101.17976529        1
[INPUT] 0    0    [1    /1   ]  195.416254255        1
[INPUT] 0    0    [1    /1   ]  44.4392700727        1
[INPUT] 0    0    [1    /1   ]  11.9473570029        1
[INPUT] 1    0    [1    /1   ]  5.21618669515        1
[INPUT] 1    0    [1    /1   ]  0.886805808537       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9531836670002394, 1.0]], [0, [1101.1797652935354, 1.0]], [0, [195.4162542550785, 1.0]], [0, [44.439270072659184, 1.0]], [0, [11.947357002868722, 1.0]], [1, [5.216186695149529, 1.0]], [1, [0.8868058085369697, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95318367]
bas 1, expnt(s) = [1101.17976529]
bas 2, expnt(s) = [195.41625426]
bas 3, expnt(s) = [44.43927007]
bas 4, expnt(s) = [11.947357]
bas 5, expnt(s) = [5.2161867]
bas 6, expnt(s) = [0.88680581]
CPU time:       208.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.53183667e-01 2.43723535e+00 1.10117977e+03 4.82957251e+02
 1.95416254e+02 1.32049128e+02 4.44392701e+01 4.34850738e+01
 1.19473570e+01 1.62356210e+01 5.21618670e+00 2.29972444e+01
 8.86805809e-01 2.51055681e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.831836392943464
cond(S) = 23.760287029417665
E1 = -181.28923077407137  E_coul = 54.35026116229633
init E= -126.938969611775
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648708283685  LUMO = 5.23341857841323
  mo_energy =
[-3.26692131e+01 -1.83698147e+00 -6.48708284e-01 -6.48708284e-01
 -6.48708284e-01  5.23341858e+00  5.23341858e+00  5.23341858e+00
  3.30401430e+01  2.84508205e+02  1.90335655e+03]
E1 = -181.48947218111653  E_coul = 54.242058613543485
cycle= 1 E= -127.247413567573  delta_E= -0.308  |g|= 0.0966  |ddm|= 0.312
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106147
diis-c [-0.01126727  1.        ]
  HOMO = -0.615706276103773  LUMO = 5.24883769182035
  mo_energy =
[-3.28457976e+01 -1.80993884e+00 -6.15706276e-01 -6.15706276e-01
 -6.15706276e-01  5.24883769e+00  5.24883769e+00  5.24883769e+00
  3.29261954e+01  2.84304174e+02  1.90310009e+03]
E1 = -181.59979799893716  E_coul = 54.35208813165839
cycle= 2 E= -127.247709867279  delta_E= -0.000296  |g|= 0.0127  |ddm|= 0.0172
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0153593
diis-c [-6.08767766e-05  1.11091945e-01  8.88908055e-01]
  HOMO = -0.609706470200382  LUMO = 5.25837516862069
  mo_energy =
[-3.28218102e+01 -1.80300045e+00 -6.09706470e-01 -6.09706470e-01
 -6.09706470e-01  5.25837517e+00  5.25837517e+00  5.25837517e+00
  3.29465911e+01  2.84331365e+02  1.90313042e+03]
E1 = -181.58260508389137  E_coul = 54.334886260968226
cycle= 3 E= -127.247718822923  delta_E= -8.96e-06  |g|= 0.000635  |ddm|= 0.00271
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000738166
diis-c [-8.62395760e-09 -4.06735050e-03  2.09531175e-02  9.83114233e-01]
  HOMO = -0.609981579231138  LUMO = 5.25795268403521
  mo_energy =
[-3.28227873e+01 -1.80331518e+00 -6.09981579e-01 -6.09981579e-01
 -6.09981579e-01  5.25795268e+00  5.25795268e+00  5.25795268e+00
  3.29457452e+01  2.84330488e+02  1.90312964e+03]
E1 = -181.583361745129  E_coul = 54.335642903247134
cycle= 4 E= -127.247718841882  delta_E= -1.9e-08  |g|= 2.6e-06  |ddm|= 0.000118
    CPU time for cycle= 4      0.02 sec, wall time      0.05 sec
diis-norm(errvec)=2.94823e-06
diis-c [-3.45558579e-13  5.77725618e-05 -4.40173681e-04 -1.33200178e-02
  1.01370242e+00]
  HOMO = -0.609980525482975  LUMO = 5.25795425369731
  mo_energy =
[-3.28227838e+01 -1.80331388e+00 -6.09980525e-01 -6.09980525e-01
 -6.09980525e-01  5.25795425e+00  5.25795425e+00  5.25795425e+00
  3.29457487e+01  2.84330492e+02  1.90312964e+03]
E1 = -181.58335908798531  E_coul = 54.3356402461033
cycle= 5 E= -127.247718841882  delta_E= -1.42e-13  |g|= 2.22e-08  |ddm|= 4.25e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.58335908798531  E_coul = 54.3356402461033
  HOMO = -0.60998053044169  LUMO = 5.25795424575787
  mo_energy =
[-3.28227838e+01 -1.80331388e+00 -6.09980530e-01 -6.09980530e-01
 -6.09980530e-01  5.25795425e+00  5.25795425e+00  5.25795425e+00
  3.29457487e+01  2.84330492e+02  1.90312964e+03]
E1 = -181.5833591085763  E_coul = 54.33564026669421
Extra cycle  E= -127.247718841882  delta_E= -8.53e-14  |g|= 2.7e-09  |ddm|= 3.87e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.13 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 23.760287029417665
E1 = -181.5833591085763  E_coul = 54.33564026669421
init E= -127.247718841882
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.609980529134981  LUMO = 5.25795424779205
  mo_energy =
[-3.28227838e+01 -1.80331388e+00 -6.09980529e-01 -6.09980529e-01
 -6.09980529e-01  5.25795425e+00  5.25795425e+00  5.25795425e+00
  3.29457487e+01  2.84330492e+02  1.90312964e+03]
E1 = -181.58335910511136  E_coul = 54.335640263229436
cycle= 1 E= -127.247718841882  delta_E= 1.71e-13  |g|= 3.98e-10  |ddm|= 5.49e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.58335910511136  E_coul = 54.335640263229436
  HOMO = -0.609980529349238  LUMO = 5.25795424745307
  mo_energy =
[-3.28227838e+01 -1.80331388e+00 -6.09980529e-01 -6.09980529e-01
 -6.09980529e-01  5.25795425e+00  5.25795425e+00  5.25795425e+00
  3.29457487e+01  2.84330492e+02  1.90312964e+03]
E1 = -181.5833591057283  E_coul = 54.335640263846265
Extra cycle  E= -127.247718841882  delta_E= -1.14e-13  |g|= 7.21e-11  |ddm|= 9.7e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [9.53183667e-01 1.10117977e+03 1.95416254e+02 4.44392701e+01
 1.19473570e+01 5.21618670e+00 8.86805809e-01]
grad_E = [ 0.00731585 -0.00012405  0.0009474  -0.00143419 -0.00042654 -0.01270436
  0.01005537]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.956249485451       1
[INPUT] 0    0    [1    /1   ]  1178.83893667        1
[INPUT] 0    0    [1    /1   ]  197.556013107        1
[INPUT] 0    0    [1    /1   ]  43.8623396652        1
[INPUT] 0    0    [1    /1   ]  11.8604419872        1
[INPUT] 1    0    [1    /1   ]  5.2406474623         1
[INPUT] 1    0    [1    /1   ]  0.88865407676        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9562494854507579, 1.0]], [0, [1178.838936665405, 1.0]], [0, [197.5560131070018, 1.0]], [0, [43.86233966520624, 1.0]], [0, [11.860441987199831, 1.0]], [1, [5.240647462300685, 1.0]], [1, [0.88865407675999, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95624949]
bas 1, expnt(s) = [1178.83893667]
bas 2, expnt(s) = [197.55601311]
bas 3, expnt(s) = [43.86233967]
bas 4, expnt(s) = [11.86044199]
bas 5, expnt(s) = [5.24064746]
bas 6, expnt(s) = [0.88865408]
CPU time:       211.51
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.56249485e-01 2.44311233e+00 1.17883894e+03 5.08283344e+02
 1.97556013e+02 1.33132079e+02 4.38623397e+01 4.30609760e+01
 1.18604420e+01 1.61469567e+01 5.24064746e+00 2.31321274e+01
 8.88654077e-01 2.51709910e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.830812575027124
cond(S) = 22.819335993361555
E1 = -181.31065704770654  E_coul = 54.36320305693901
init E= -126.947453990768
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648082569698804  LUMO = 5.25678570423915
  mo_energy =
[-3.26674243e+01 -1.83663444e+00 -6.48082570e-01 -6.48082570e-01
 -6.48082570e-01  5.25678570e+00  5.25678570e+00  5.25678570e+00
  3.25804572e+01  2.84547542e+02  2.00043521e+03]
E1 = -181.52027477383606  E_coul = 54.267948518413725
cycle= 1 E= -127.252326255422  delta_E= -0.305  |g|= 0.0982  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105842
diis-c [-0.0112026  1.       ]
  HOMO = -0.613999560951313  LUMO = 5.27330803543078
  mo_energy =
[-3.28415486e+01 -1.80881420e+00 -6.13999561e-01 -6.13999561e-01
 -6.13999561e-01  5.27330804e+00  5.27330804e+00  5.27330804e+00
  3.24691199e+01  2.84346494e+02  2.00017956e+03]
E1 = -181.62853280406648  E_coul = 54.3759185828485
cycle= 2 E= -127.252614221218  delta_E= -0.000288  |g|= 0.0125  |ddm|= 0.0168
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151016
diis-c [-6.40698933e-05  1.08207741e-01  8.91792259e-01]
  HOMO = -0.608108505460497  LUMO = 5.28272343338344
  mo_energy =
[-3.28178721e+01 -1.80199895e+00 -6.08108505e-01 -6.08108505e-01
 -6.08108505e-01  5.28272343e+00  5.28272343e+00  5.28272343e+00
  3.24891314e+01  2.84373454e+02  2.00020976e+03]
E1 = -181.61160988551194  E_coul = 54.358987028341296
cycle= 3 E= -127.252622857171  delta_E= -8.64e-06  |g|= 0.00067  |ddm|= 0.00266
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000773929
diis-c [-8.22750831e-09 -4.01366809e-03  2.43330369e-02  9.79680631e-01]
  HOMO = -0.608398174566312  LUMO = 5.2822765629567
  mo_energy =
[-3.28189024e+01 -1.80233229e+00 -6.08398175e-01 -6.08398175e-01
 -6.08398175e-01  5.28227656e+00  5.28227656e+00  5.28227656e+00
  3.24882383e+01  2.84372526e+02  2.00020892e+03]
E1 = -181.61240336217517  E_coul = 54.35978048409009
cycle= 4 E= -127.252622878085  delta_E= -2.09e-08  |g|= 2.27e-06  |ddm|= 0.000124
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.59046e-06
diis-c [-3.08281996e-13  5.58387394e-05 -4.61536825e-04 -1.30890012e-02
  1.01349470e+00]
  HOMO = -0.60839727322741  LUMO = 5.28227791348562
  mo_energy =
[-3.28188993e+01 -1.80233117e+00 -6.08397273e-01 -6.08397273e-01
 -6.08397273e-01  5.28227791e+00  5.28227791e+00  5.28227791e+00
  3.24882413e+01  2.84372529e+02  2.00020893e+03]
E1 = -181.6124010820379  E_coul = 54.359778203952686
cycle= 5 E= -127.252622878085  delta_E= -1.42e-13  |g|= 2.13e-08  |ddm|= 3.66e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6124010820379  E_coul = 54.359778203952686
  HOMO = -0.608397278237273  LUMO = 5.28227790545193
  mo_energy =
[-3.28188993e+01 -1.80233118e+00 -6.08397278e-01 -6.08397278e-01
 -6.08397278e-01  5.28227791e+00  5.28227791e+00  5.28227791e+00
  3.24882413e+01  2.84372529e+02  2.00020893e+03]
E1 = -181.6124011022395  E_coul = 54.35977822415424
Extra cycle  E= -127.252622878085  delta_E= -2.84e-14  |g|= 2.65e-09  |ddm|= 3.77e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [9.56249485e-01 1.17883894e+03 1.97556013e+02 4.38623397e+01
 1.18604420e+01 5.24064746e+00 8.88654077e-01]
E = -127.25262287808525
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.956249485451       1
[INPUT] 0    0    [1    /1   ]  1178.83893667        1
[INPUT] 0    0    [1    /1   ]  197.556013107        1
[INPUT] 0    0    [1    /1   ]  43.8623396652        1
[INPUT] 0    0    [1    /1   ]  11.8604419872        1
[INPUT] 1    0    [1    /1   ]  5.2406474623         1
[INPUT] 1    0    [1    /1   ]  0.88865407676        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9562494854507579, 1.0]], [0, [1178.838936665405, 1.0]], [0, [197.5560131070018, 1.0]], [0, [43.86233966520624, 1.0]], [0, [11.860441987199831, 1.0]], [1, [5.240647462300685, 1.0]], [1, [0.88865407675999, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95624949]
bas 1, expnt(s) = [1178.83893667]
bas 2, expnt(s) = [197.55601311]
bas 3, expnt(s) = [43.86233967]
bas 4, expnt(s) = [11.86044199]
bas 5, expnt(s) = [5.24064746]
bas 6, expnt(s) = [0.88865408]
CPU time:       212.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.56249485e-01 2.44311233e+00 1.17883894e+03 5.08283344e+02
 1.97556013e+02 1.33132079e+02 4.38623397e+01 4.30609760e+01
 1.18604420e+01 1.61469567e+01 5.24064746e+00 2.31321274e+01
 8.88654077e-01 2.51709910e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.830812575027124
cond(S) = 22.819335993361555
E1 = -181.31065704770654  E_coul = 54.36320305693901
init E= -126.947453990768
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648082569698804  LUMO = 5.25678570423915
  mo_energy =
[-3.26674243e+01 -1.83663444e+00 -6.48082570e-01 -6.48082570e-01
 -6.48082570e-01  5.25678570e+00  5.25678570e+00  5.25678570e+00
  3.25804572e+01  2.84547542e+02  2.00043521e+03]
E1 = -181.52027477383606  E_coul = 54.267948518413725
cycle= 1 E= -127.252326255422  delta_E= -0.305  |g|= 0.0982  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105842
diis-c [-0.0112026  1.       ]
  HOMO = -0.613999560951313  LUMO = 5.27330803543078
  mo_energy =
[-3.28415486e+01 -1.80881420e+00 -6.13999561e-01 -6.13999561e-01
 -6.13999561e-01  5.27330804e+00  5.27330804e+00  5.27330804e+00
  3.24691199e+01  2.84346494e+02  2.00017956e+03]
E1 = -181.62853280406648  E_coul = 54.3759185828485
cycle= 2 E= -127.252614221218  delta_E= -0.000288  |g|= 0.0125  |ddm|= 0.0168
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0151016
diis-c [-6.40698933e-05  1.08207741e-01  8.91792259e-01]
  HOMO = -0.608108505460497  LUMO = 5.28272343338344
  mo_energy =
[-3.28178721e+01 -1.80199895e+00 -6.08108505e-01 -6.08108505e-01
 -6.08108505e-01  5.28272343e+00  5.28272343e+00  5.28272343e+00
  3.24891314e+01  2.84373454e+02  2.00020976e+03]
E1 = -181.61160988551194  E_coul = 54.358987028341296
cycle= 3 E= -127.252622857171  delta_E= -8.64e-06  |g|= 0.00067  |ddm|= 0.00266
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000773929
diis-c [-8.22750831e-09 -4.01366809e-03  2.43330369e-02  9.79680631e-01]
  HOMO = -0.608398174566312  LUMO = 5.2822765629567
  mo_energy =
[-3.28189024e+01 -1.80233229e+00 -6.08398175e-01 -6.08398175e-01
 -6.08398175e-01  5.28227656e+00  5.28227656e+00  5.28227656e+00
  3.24882383e+01  2.84372526e+02  2.00020892e+03]
E1 = -181.61240336217517  E_coul = 54.35978048409009
cycle= 4 E= -127.252622878085  delta_E= -2.09e-08  |g|= 2.27e-06  |ddm|= 0.000124
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.59046e-06
diis-c [-3.08281996e-13  5.58387394e-05 -4.61536825e-04 -1.30890012e-02
  1.01349470e+00]
  HOMO = -0.60839727322741  LUMO = 5.28227791348562
  mo_energy =
[-3.28188993e+01 -1.80233117e+00 -6.08397273e-01 -6.08397273e-01
 -6.08397273e-01  5.28227791e+00  5.28227791e+00  5.28227791e+00
  3.24882413e+01  2.84372529e+02  2.00020893e+03]
E1 = -181.6124010820379  E_coul = 54.359778203952686
cycle= 5 E= -127.252622878085  delta_E= -1.42e-13  |g|= 2.13e-08  |ddm|= 3.66e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6124010820379  E_coul = 54.359778203952686
  HOMO = -0.608397278237273  LUMO = 5.28227790545193
  mo_energy =
[-3.28188993e+01 -1.80233118e+00 -6.08397278e-01 -6.08397278e-01
 -6.08397278e-01  5.28227791e+00  5.28227791e+00  5.28227791e+00
  3.24882413e+01  2.84372529e+02  2.00020893e+03]
E1 = -181.6124011022395  E_coul = 54.35977822415424
Extra cycle  E= -127.252622878085  delta_E= -2.84e-14  |g|= 2.65e-09  |ddm|= 3.77e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.819335993361555
E1 = -181.6124011022395  E_coul = 54.35977822415424
init E= -127.252622878085
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.60839727695937  LUMO = 5.28227790745214
  mo_energy =
[-3.28188993e+01 -1.80233118e+00 -6.08397277e-01 -6.08397277e-01
 -6.08397277e-01  5.28227791e+00  5.28227791e+00  5.28227791e+00
  3.24882413e+01  2.84372529e+02  2.00020893e+03]
E1 = -181.61240109884153  E_coul = 54.35977822075622
cycle= 1 E= -127.252622878085  delta_E= -5.68e-14  |g|= 3.91e-10  |ddm|= 5.38e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.61240109884153  E_coul = 54.35977822075622
  HOMO = -0.608397277169248  LUMO = 5.28227790711857
  mo_energy =
[-3.28188993e+01 -1.80233118e+00 -6.08397277e-01 -6.08397277e-01
 -6.08397277e-01  5.28227791e+00  5.28227791e+00  5.28227791e+00
  3.24882413e+01  2.84372529e+02  2.00020893e+03]
E1 = -181.61240109944575  E_coul = 54.3597782213605
Extra cycle  E= -127.252622878085  delta_E= 5.68e-14  |g|= 7.08e-11  |ddm|= 9.49e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [9.56249485e-01 1.17883894e+03 1.97556013e+02 4.38623397e+01
 1.18604420e+01 5.24064746e+00 8.88654077e-01]
grad_E = [ 2.08476265e-02 -8.53761728e-05  1.01500476e-03 -3.48133626e-03
  3.05226547e-03 -8.81934230e-03  1.12851516e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.954711122613       1
[INPUT] 0    0    [1    /1   ]  1249.96393398        1
[INPUT] 0    0    [1    /1   ]  199.922573788        1
[INPUT] 0    0    [1    /1   ]  44.0588027779        1
[INPUT] 0    0    [1    /1   ]  11.9139109493        1
[INPUT] 1    0    [1    /1   ]  5.3069423739         1
[INPUT] 1    0    [1    /1   ]  0.896112927832       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.954711122613053, 1.0]], [0, [1249.9639339782589, 1.0]], [0, [199.92257378793784, 1.0]], [0, [44.05880277789929, 1.0]], [0, [11.913910949306127, 1.0]], [1, [5.306942373900807, 1.0]], [1, [0.8961129278321645, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95471112]
bas 1, expnt(s) = [1249.96393398]
bas 2, expnt(s) = [199.92257379]
bas 3, expnt(s) = [44.05880278]
bas 4, expnt(s) = [11.91391095]
bas 5, expnt(s) = [5.30694237]
bas 6, expnt(s) = [0.89611293]
CPU time:       215.30
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.54711123e-01 2.44016397e+00 1.24996393e+03 5.31114473e+02
 1.99922574e+02 1.34326408e+02 4.40588028e+01 4.32055505e+01
 1.19139109e+01 1.62015209e+01 5.30694237e+00 2.34984847e+01
 8.96112928e-01 2.54353560e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82800253245804
cond(S) = 22.25552606386149
E1 = -181.3173875165567  E_coul = 54.36990970580096
init E= -126.947477810756
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64847310853362  LUMO = 5.32581029645013
  mo_energy =
[-3.26641447e+01 -1.83715389e+00 -6.48473109e-01 -6.48473109e-01
 -6.48473109e-01  5.32581030e+00  5.32581030e+00  5.32581030e+00
  3.28140278e+01  2.87527367e+02  2.09396544e+03]
E1 = -181.58326837619828  E_coul = 54.32741207903997
cycle= 1 E= -127.255856297158  delta_E= -0.308  |g|= 0.0956  |ddm|= 0.307
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102884
diis-c [-0.01058504  1.        ]
  HOMO = -0.610263772909058  LUMO = 5.347000445826
  mo_energy =
[-3.28291712e+01 -1.80441116e+00 -6.10263773e-01 -6.10263773e-01
 -6.10263773e-01  5.34700045e+00  5.34700045e+00  5.34700045e+00
  3.27109916e+01  2.87335645e+02  2.09371826e+03]
E1 = -181.683684765227  E_coul = 54.427574441339424
cycle= 2 E= -127.256110323888  delta_E= -0.000254  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140353
diis-c [-6.53503197e-05  1.00609200e-01  8.99390800e-01]
  HOMO = -0.604770933508527  LUMO = 5.35587815881996
  mo_energy =
[-3.28069318e+01 -1.79806792e+00 -6.04770934e-01 -6.04770934e-01
 -6.04770934e-01  5.35587816e+00  5.35587816e+00  5.35587816e+00
  3.27297914e+01  2.87361146e+02  2.09374697e+03]
E1 = -181.66801656587774  E_coul = 54.41189887841668
cycle= 3 E= -127.256117687461  delta_E= -7.36e-06  |g|= 0.000707  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000821289
diis-c [-8.60463193e-09 -3.89350770e-03  3.15496625e-02  9.72343845e-01]
  HOMO = -0.605078378118403  LUMO = 5.35539744406123
  mo_energy =
[-3.28080414e+01 -1.79842111e+00 -6.05078378e-01 -6.05078378e-01
 -6.05078378e-01  5.35539744e+00  5.35539744e+00  5.35539744e+00
  3.27288320e+01  2.87360125e+02  2.09374603e+03]
E1 = -181.66885463922165  E_coul = 54.41273692823285
cycle= 4 E= -127.256117710989  delta_E= -2.35e-08  |g|= 2.12e-06  |ddm|= 0.000131
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.44683e-06
diis-c [-2.62723235e-13  5.46414444e-05 -5.84390694e-04 -1.35738760e-02
  1.01410363e+00]
  HOMO = -0.605077566092865  LUMO = 5.35539868251422
  mo_energy =
[-3.28080386e+01 -1.79842009e+00 -6.05077566e-01 -6.05077566e-01
 -6.05077566e-01  5.35539868e+00  5.35539868e+00  5.35539868e+00
  3.27288347e+01  2.87360128e+02  2.09374604e+03]
E1 = -181.66885261231639  E_coul = 54.412734901327326
cycle= 5 E= -127.256117710989  delta_E= -2.56e-13  |g|= 2.05e-08  |ddm|= 3.29e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66885261231639  E_coul = 54.412734901327326
  HOMO = -0.605077569742286  LUMO = 5.35539867633818
  mo_energy =
[-3.28080386e+01 -1.79842010e+00 -6.05077570e-01 -6.05077570e-01
 -6.05077570e-01  5.35539868e+00  5.35539868e+00  5.35539868e+00
  3.27288347e+01  2.87360128e+02  2.09374604e+03]
E1 = -181.66885262878745  E_coul = 54.41273491779847
Extra cycle  E= -127.256117710989  delta_E= 8.53e-14  |g|= 2.23e-09  |ddm|= 3.27e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.54711123e-01 1.24996393e+03 1.99922574e+02 4.40588028e+01
 1.19139109e+01 5.30694237e+00 8.96112928e-01]
E = -127.25611771098897
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.954711122613       1
[INPUT] 0    0    [1    /1   ]  1249.96393398        1
[INPUT] 0    0    [1    /1   ]  199.922573788        1
[INPUT] 0    0    [1    /1   ]  44.0588027779        1
[INPUT] 0    0    [1    /1   ]  11.9139109493        1
[INPUT] 1    0    [1    /1   ]  5.3069423739         1
[INPUT] 1    0    [1    /1   ]  0.896112927832       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.954711122613053, 1.0]], [0, [1249.9639339782589, 1.0]], [0, [199.92257378793784, 1.0]], [0, [44.05880277789929, 1.0]], [0, [11.913910949306127, 1.0]], [1, [5.306942373900807, 1.0]], [1, [0.8961129278321645, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95471112]
bas 1, expnt(s) = [1249.96393398]
bas 2, expnt(s) = [199.92257379]
bas 3, expnt(s) = [44.05880278]
bas 4, expnt(s) = [11.91391095]
bas 5, expnt(s) = [5.30694237]
bas 6, expnt(s) = [0.89611293]
CPU time:       216.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.54711123e-01 2.44016397e+00 1.24996393e+03 5.31114473e+02
 1.99922574e+02 1.34326408e+02 4.40588028e+01 4.32055505e+01
 1.19139109e+01 1.62015209e+01 5.30694237e+00 2.34984847e+01
 8.96112928e-01 2.54353560e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82800253245804
cond(S) = 22.25552606386149
E1 = -181.3173875165567  E_coul = 54.36990970580096
init E= -126.947477810756
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64847310853362  LUMO = 5.32581029645013
  mo_energy =
[-3.26641447e+01 -1.83715389e+00 -6.48473109e-01 -6.48473109e-01
 -6.48473109e-01  5.32581030e+00  5.32581030e+00  5.32581030e+00
  3.28140278e+01  2.87527367e+02  2.09396544e+03]
E1 = -181.58326837619828  E_coul = 54.32741207903997
cycle= 1 E= -127.255856297158  delta_E= -0.308  |g|= 0.0956  |ddm|= 0.307
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102884
diis-c [-0.01058504  1.        ]
  HOMO = -0.610263772909058  LUMO = 5.347000445826
  mo_energy =
[-3.28291712e+01 -1.80441116e+00 -6.10263773e-01 -6.10263773e-01
 -6.10263773e-01  5.34700045e+00  5.34700045e+00  5.34700045e+00
  3.27109916e+01  2.87335645e+02  2.09371826e+03]
E1 = -181.683684765227  E_coul = 54.427574441339424
cycle= 2 E= -127.256110323888  delta_E= -0.000254  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140353
diis-c [-6.53503197e-05  1.00609200e-01  8.99390800e-01]
  HOMO = -0.604770933508527  LUMO = 5.35587815881996
  mo_energy =
[-3.28069318e+01 -1.79806792e+00 -6.04770934e-01 -6.04770934e-01
 -6.04770934e-01  5.35587816e+00  5.35587816e+00  5.35587816e+00
  3.27297914e+01  2.87361146e+02  2.09374697e+03]
E1 = -181.66801656587774  E_coul = 54.41189887841668
cycle= 3 E= -127.256117687461  delta_E= -7.36e-06  |g|= 0.000707  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000821289
diis-c [-8.60463193e-09 -3.89350770e-03  3.15496625e-02  9.72343845e-01]
  HOMO = -0.605078378118403  LUMO = 5.35539744406123
  mo_energy =
[-3.28080414e+01 -1.79842111e+00 -6.05078378e-01 -6.05078378e-01
 -6.05078378e-01  5.35539744e+00  5.35539744e+00  5.35539744e+00
  3.27288320e+01  2.87360125e+02  2.09374603e+03]
E1 = -181.66885463922165  E_coul = 54.41273692823285
cycle= 4 E= -127.256117710989  delta_E= -2.35e-08  |g|= 2.12e-06  |ddm|= 0.000131
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.44683e-06
diis-c [-2.62723235e-13  5.46414444e-05 -5.84390694e-04 -1.35738760e-02
  1.01410363e+00]
  HOMO = -0.605077566092865  LUMO = 5.35539868251422
  mo_energy =
[-3.28080386e+01 -1.79842009e+00 -6.05077566e-01 -6.05077566e-01
 -6.05077566e-01  5.35539868e+00  5.35539868e+00  5.35539868e+00
  3.27288347e+01  2.87360128e+02  2.09374604e+03]
E1 = -181.66885261231639  E_coul = 54.412734901327326
cycle= 5 E= -127.256117710989  delta_E= -2.56e-13  |g|= 2.05e-08  |ddm|= 3.29e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66885261231639  E_coul = 54.412734901327326
  HOMO = -0.605077569742286  LUMO = 5.35539867633818
  mo_energy =
[-3.28080386e+01 -1.79842010e+00 -6.05077570e-01 -6.05077570e-01
 -6.05077570e-01  5.35539868e+00  5.35539868e+00  5.35539868e+00
  3.27288347e+01  2.87360128e+02  2.09374604e+03]
E1 = -181.66885262878745  E_coul = 54.41273491779847
Extra cycle  E= -127.256117710989  delta_E= 8.53e-14  |g|= 2.23e-09  |ddm|= 3.27e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.25552606386149
E1 = -181.66885262878745  E_coul = 54.41273491779847
init E= -127.256117710989
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.605077568695691  LUMO = 5.35539867798657
  mo_energy =
[-3.28080386e+01 -1.79842009e+00 -6.05077569e-01 -6.05077569e-01
 -6.05077569e-01  5.35539868e+00  5.35539868e+00  5.35539868e+00
  3.27288347e+01  2.87360128e+02  2.09374604e+03]
E1 = -181.66885262607215  E_coul = 54.4127349150832
cycle= 1 E= -127.256117710989  delta_E= 2.84e-14  |g|= 3.12e-10  |ddm|= 4.31e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.66885262607215  E_coul = 54.4127349150832
  HOMO = -0.605077568862846  LUMO = 5.35539867771788
  mo_energy =
[-3.28080386e+01 -1.79842009e+00 -6.05077569e-01 -6.05077569e-01
 -6.05077569e-01  5.35539868e+00  5.35539868e+00  5.35539868e+00
  3.27288347e+01  2.87360128e+02  2.09374604e+03]
E1 = -181.668852626551  E_coul = 54.41273491556212
Extra cycle  E= -127.256117710989  delta_E= 5.68e-14  |g|= 5.62e-11  |ddm|= 7.52e-11
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [9.54711123e-01 1.24996393e+03 1.99922574e+02 4.40588028e+01
 1.19139109e+01 5.30694237e+00 8.96112928e-01]
grad_E = [ 1.78788102e-02 -5.07755474e-05  8.19685330e-04 -3.52371488e-03
  4.42866665e-03 -1.76796460e-03  4.03059538e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.950196068284       1
[INPUT] 0    0    [1    /1   ]  1310.89704179        1
[INPUT] 0    0    [1    /1   ]  201.776078041        1
[INPUT] 0    0    [1    /1   ]  44.61747893          1
[INPUT] 0    0    [1    /1   ]  12.0069410814        1
[INPUT] 1    0    [1    /1   ]  5.36581059601        1
[INPUT] 1    0    [1    /1   ]  0.90319394447        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9501960682841408, 1.0]], [0, [1310.8970417913954, 1.0]], [0, [201.77607804149295, 1.0]], [0, [44.617478930001795, 1.0]], [0, [12.006941081409144, 1.0]], [1, [5.365810596005199, 1.0]], [1, [0.9031939444702993, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95019607]
bas 1, expnt(s) = [1310.89704179]
bas 2, expnt(s) = [201.77607804]
bas 3, expnt(s) = [44.61747893]
bas 4, expnt(s) = [12.00694108]
bas 5, expnt(s) = [5.3658106]
bas 6, expnt(s) = [0.90319394]
CPU time:       219.32
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.50196068e-01 2.43150376e+00 1.31089704e+03 5.50416522e+02
 2.01776078e+02 1.35259345e+02 4.46174789e+01 4.36157952e+01
 1.20069411e+01 1.62963112e+01 5.36581060e+00 2.38247617e+01
 9.03193944e-01 2.56868390e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82558576798785
cond(S) = 21.89744721030307
E1 = -181.30765314120967  E_coul = 54.36590904527038
init E= -126.941744095939
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649547717260243  LUMO = 5.38780788423755
  mo_energy =
[-3.26631366e+01 -1.83804591e+00 -6.49547717e-01 -6.49547717e-01
 -6.49547717e-01  5.38780788e+00  5.38780788e+00  5.38780788e+00
  3.33081770e+01  2.91226419e+02  2.17531302e+03]
E1 = -181.6287722451615  E_coul = 54.37074321837233
cycle= 1 E= -127.258029026789  delta_E= -0.316  |g|= 0.0918  |ddm|= 0.307
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100873
diis-c [-0.01017546  1.        ]
  HOMO = -0.607629232660567  LUMO = 5.4131929125848
  mo_energy =
[-3.28204688e+01 -1.80042130e+00 -6.07629233e-01 -6.07629233e-01
 -6.07629233e-01  5.41319291e+00  5.41319291e+00  5.41319291e+00
  3.32122644e+01  2.91041763e+02  2.17507275e+03]
E1 = -181.72270942587812  E_coul = 54.46445340386418
cycle= 2 E= -127.258256022014  delta_E= -0.000227  |g|= 0.0108  |ddm|= 0.0146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0131385
diis-c [-6.55029346e-05  9.33271513e-02  9.06672849e-01]
  HOMO = -0.602457606127619  LUMO = 5.42162490130145
  mo_energy =
[-3.27994430e+01 -1.79446341e+00 -6.02457606e-01 -6.02457606e-01
 -6.02457606e-01  5.42162490e+00  5.42162490e+00  5.42162490e+00
  3.32301145e+01  2.91065988e+02  2.17510011e+03]
E1 = -181.70810195463764  E_coul = 54.44983956022543
cycle= 3 E= -127.258262394412  delta_E= -6.37e-06  |g|= 0.000731  |ddm|= 0.0023
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000858516
diis-c [-1.01650168e-08 -3.71590239e-03  3.85830493e-02  9.65132853e-01]
  HOMO = -0.602778133119647  LUMO = 5.42111755799435
  mo_energy =
[-3.28006188e+01 -1.79482929e+00 -6.02778133e-01 -6.02778133e-01
 -6.02778133e-01  5.42111756e+00  5.42111756e+00  5.42111756e+00
  3.32291018e+01  2.91064880e+02  2.17509907e+03]
E1 = -181.70897379266523  E_coul = 54.450711372601
cycle= 4 E= -127.258262420064  delta_E= -2.57e-08  |g|= 2.19e-06  |ddm|= 0.000136
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.53708e-06
diis-c [-2.49261486e-13  5.18533615e-05 -7.45605432e-04 -1.43523259e-02
  1.01504608e+00]
  HOMO = -0.602777353399562  LUMO = 5.4211187683127
  mo_energy =
[-3.28006161e+01 -1.79482830e+00 -6.02777353e-01 -6.02777353e-01
 -6.02777353e-01  5.42111877e+00  5.42111877e+00  5.42111877e+00
  3.32291045e+01  2.91064883e+02  2.17509907e+03]
E1 = -181.70897188756427  E_coul = 54.450709467499884
cycle= 5 E= -127.258262420064  delta_E= -1.71e-13  |g|= 2.17e-08  |ddm|= 3.15e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.70897188756427  E_coul = 54.450709467499884
  HOMO = -0.602777354000219  LUMO = 5.4211187665944
  mo_energy =
[-3.28006161e+01 -1.79482829e+00 -6.02777354e-01 -6.02777354e-01
 -6.02777354e-01  5.42111877e+00  5.42111877e+00  5.42111877e+00
  3.32291045e+01  2.91064883e+02  2.17509907e+03]
E1 = -181.70897189646476  E_coul = 54.450709476400405
Extra cycle  E= -127.258262420064  delta_E= 4.26e-14  |g|= 1.46e-09  |ddm|= 2.51e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [9.50196068e-01 1.31089704e+03 2.01776078e+02 4.46174789e+01
 1.20069411e+01 5.36581060e+00 9.03193944e-01]
E = -127.25826242006436
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.950196068284       1
[INPUT] 0    0    [1    /1   ]  1310.89704179        1
[INPUT] 0    0    [1    /1   ]  201.776078041        1
[INPUT] 0    0    [1    /1   ]  44.61747893          1
[INPUT] 0    0    [1    /1   ]  12.0069410814        1
[INPUT] 1    0    [1    /1   ]  5.36581059601        1
[INPUT] 1    0    [1    /1   ]  0.90319394447        1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9501960682841408, 1.0]], [0, [1310.8970417913954, 1.0]], [0, [201.77607804149295, 1.0]], [0, [44.617478930001795, 1.0]], [0, [12.006941081409144, 1.0]], [1, [5.365810596005199, 1.0]], [1, [0.9031939444702993, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95019607]
bas 1, expnt(s) = [1310.89704179]
bas 2, expnt(s) = [201.77607804]
bas 3, expnt(s) = [44.61747893]
bas 4, expnt(s) = [12.00694108]
bas 5, expnt(s) = [5.3658106]
bas 6, expnt(s) = [0.90319394]
CPU time:       220.12
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.50196068e-01 2.43150376e+00 1.31089704e+03 5.50416522e+02
 2.01776078e+02 1.35259345e+02 4.46174789e+01 4.36157952e+01
 1.20069411e+01 1.62963112e+01 5.36581060e+00 2.38247617e+01
 9.03193944e-01 2.56868390e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82558576798785
cond(S) = 21.89744721030307
E1 = -181.30765314120967  E_coul = 54.36590904527038
init E= -126.941744095939
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649547717260243  LUMO = 5.38780788423755
  mo_energy =
[-3.26631366e+01 -1.83804591e+00 -6.49547717e-01 -6.49547717e-01
 -6.49547717e-01  5.38780788e+00  5.38780788e+00  5.38780788e+00
  3.33081770e+01  2.91226419e+02  2.17531302e+03]
E1 = -181.6287722451615  E_coul = 54.37074321837233
cycle= 1 E= -127.258029026789  delta_E= -0.316  |g|= 0.0918  |ddm|= 0.307
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100873
diis-c [-0.01017546  1.        ]
  HOMO = -0.607629232660567  LUMO = 5.4131929125848
  mo_energy =
[-3.28204688e+01 -1.80042130e+00 -6.07629233e-01 -6.07629233e-01
 -6.07629233e-01  5.41319291e+00  5.41319291e+00  5.41319291e+00
  3.32122644e+01  2.91041763e+02  2.17507275e+03]
E1 = -181.72270942587812  E_coul = 54.46445340386418
cycle= 2 E= -127.258256022014  delta_E= -0.000227  |g|= 0.0108  |ddm|= 0.0146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0131385
diis-c [-6.55029346e-05  9.33271513e-02  9.06672849e-01]
  HOMO = -0.602457606127619  LUMO = 5.42162490130145
  mo_energy =
[-3.27994430e+01 -1.79446341e+00 -6.02457606e-01 -6.02457606e-01
 -6.02457606e-01  5.42162490e+00  5.42162490e+00  5.42162490e+00
  3.32301145e+01  2.91065988e+02  2.17510011e+03]
E1 = -181.70810195463764  E_coul = 54.44983956022543
cycle= 3 E= -127.258262394412  delta_E= -6.37e-06  |g|= 0.000731  |ddm|= 0.0023
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000858516
diis-c [-1.01650168e-08 -3.71590239e-03  3.85830493e-02  9.65132853e-01]
  HOMO = -0.602778133119647  LUMO = 5.42111755799435
  mo_energy =
[-3.28006188e+01 -1.79482929e+00 -6.02778133e-01 -6.02778133e-01
 -6.02778133e-01  5.42111756e+00  5.42111756e+00  5.42111756e+00
  3.32291018e+01  2.91064880e+02  2.17509907e+03]
E1 = -181.70897379266523  E_coul = 54.450711372601
cycle= 4 E= -127.258262420064  delta_E= -2.57e-08  |g|= 2.19e-06  |ddm|= 0.000136
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.53708e-06
diis-c [-2.49261486e-13  5.18533615e-05 -7.45605432e-04 -1.43523259e-02
  1.01504608e+00]
  HOMO = -0.602777353399562  LUMO = 5.4211187683127
  mo_energy =
[-3.28006161e+01 -1.79482830e+00 -6.02777353e-01 -6.02777353e-01
 -6.02777353e-01  5.42111877e+00  5.42111877e+00  5.42111877e+00
  3.32291045e+01  2.91064883e+02  2.17509907e+03]
E1 = -181.70897188756427  E_coul = 54.450709467499884
cycle= 5 E= -127.258262420064  delta_E= -1.71e-13  |g|= 2.17e-08  |ddm|= 3.15e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.70897188756427  E_coul = 54.450709467499884
  HOMO = -0.602777354000219  LUMO = 5.4211187665944
  mo_energy =
[-3.28006161e+01 -1.79482829e+00 -6.02777354e-01 -6.02777354e-01
 -6.02777354e-01  5.42111877e+00  5.42111877e+00  5.42111877e+00
  3.32291045e+01  2.91064883e+02  2.17509907e+03]
E1 = -181.70897189646476  E_coul = 54.450709476400405
Extra cycle  E= -127.258262420064  delta_E= 4.26e-14  |g|= 1.46e-09  |ddm|= 2.51e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.89744721030307
E1 = -181.70897189646476  E_coul = 54.450709476400405
init E= -127.258262420064
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.602777353415775  LUMO = 5.42111876750345
  mo_energy =
[-3.28006161e+01 -1.79482829e+00 -6.02777353e-01 -6.02777353e-01
 -6.02777353e-01  5.42111877e+00  5.42111877e+00  5.42111877e+00
  3.32291045e+01  2.91064883e+02  2.17509907e+03]
E1 = -181.70897189508844  E_coul = 54.45070947502409
cycle= 1 E= -127.258262420064  delta_E= 1.42e-14  |g|= 1.56e-10  |ddm|= 2.27e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.70897189508844  E_coul = 54.45070947502409
  HOMO = -0.602777353499765  LUMO = 5.42111876736662
  mo_energy =
[-3.28006161e+01 -1.79482829e+00 -6.02777353e-01 -6.02777353e-01
 -6.02777353e-01  5.42111877e+00  5.42111877e+00  5.42111877e+00
  3.32291045e+01  2.91064883e+02  2.17509907e+03]
E1 = -181.70897189533147  E_coul = 54.450709475267224
Extra cycle  E= -127.258262420064  delta_E= 8.53e-14  |g|= 2.87e-11  |ddm|= 3.83e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [9.50196068e-01 1.31089704e+03 2.01776078e+02 4.46174789e+01
 1.20069411e+01 5.36581060e+00 9.03193944e-01]
grad_E = [ 2.46056396e-03 -2.06763990e-05  4.45000127e-04 -1.89065031e-03
  2.55392615e-03  3.65359479e-03  2.75618993e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.948396153585       1
[INPUT] 0    0    [1    /1   ]  1330.63937925        1
[INPUT] 0    0    [1    /1   ]  201.459940591        1
[INPUT] 0    0    [1    /1   ]  44.8131859715        1
[INPUT] 0    0    [1    /1   ]  12.0377829425        1
[INPUT] 1    0    [1    /1   ]  5.37065329029        1
[INPUT] 1    0    [1    /1   ]  0.903849825498       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.948396153585013, 1.0]], [0, [1330.639379251717, 1.0]], [0, [201.4599405911283, 1.0]], [0, [44.81318597152098, 1.0]], [0, [12.037782942519746, 1.0]], [1, [5.370653290287393, 1.0]], [1, [0.9038498254975655, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94839615]
bas 1, expnt(s) = [1330.63937925]
bas 2, expnt(s) = [201.45994059]
bas 3, expnt(s) = [44.81318597]
bas 4, expnt(s) = [12.03778294]
bas 5, expnt(s) = [5.37065329]
bas 6, expnt(s) = [0.90384983]
CPU time:       223.23
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.48396154e-01 2.42804853e+00 1.33063938e+03 5.56621918e+02
 2.01459941e+02 1.35100374e+02 4.48131860e+01 4.37592016e+01
 1.20377829e+01 1.63276960e+01 5.37065329e+00 2.38516423e+01
 9.03849825e-01 2.57101577e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825495478684086
cond(S) = 21.864681131115837
E1 = -181.29987812995859  E_coul = 54.36131502032824
init E= -126.93856310963
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649995416328054  LUMO = 5.39263853993803
  mo_energy =
[-3.26640967e+01 -1.83832835e+00 -6.49995416e-01 -6.49995416e-01
 -6.49995416e-01  5.39263854e+00  5.39263854e+00  5.39263854e+00
  3.34804251e+01  2.91633571e+02  2.19885070e+03]
E1 = -181.6268835820396  E_coul = 54.36829780687512
cycle= 1 E= -127.258585775164  delta_E= -0.32  |g|= 0.0909  |ddm|= 0.308
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101653
diis-c [-0.01033327  1.        ]
  HOMO = -0.60789640594004  LUMO = 5.41814887434976
  mo_energy =
[-3.28213561e+01 -1.80023346e+00 -6.07896406e-01 -6.07896406e-01
 -6.07896406e-01  5.41814887e+00  5.41814887e+00  5.41814887e+00
  3.33845889e+01  2.91448673e+02  2.19861031e+03]
E1 = -181.72081966580234  E_coul = 54.46200710086193
cycle= 2 E= -127.25881256494  delta_E= -0.000227  |g|= 0.0108  |ddm|= 0.0146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0131313
diis-c [-6.67713857e-05  9.21043379e-02  9.07895662e-01]
  HOMO = -0.602714854944932  LUMO = 5.4265984793992
  mo_energy =
[-3.28003115e+01 -1.79426725e+00 -6.02714855e-01 -6.02714855e-01
 -6.02714855e-01  5.42659848e+00  5.42659848e+00  5.42659848e+00
  3.34024949e+01  2.91472896e+02  2.19863766e+03]
E1 = -181.70621812000857  E_coul = 54.447399196412
cycle= 3 E= -127.258818923597  delta_E= -6.36e-06  |g|= 0.00074  |ddm|= 0.00229
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000873628
diis-c [-1.12876267e-08 -3.60196692e-03  4.03303938e-02  9.63271573e-01]
  HOMO = -0.603040690849993  LUMO = 5.42608181202165
  mo_energy =
[-3.28015125e+01 -1.79463828e+00 -6.03040691e-01 -6.03040691e-01
 -6.03040691e-01  5.42608181e+00  5.42608181e+00  5.42608181e+00
  3.34014618e+01  2.91471756e+02  2.19863658e+03]
E1 = -181.70710589109777  E_coul = 54.44828694088829
cycle= 4 E= -127.258818950209  delta_E= -2.66e-08  |g|= 2.25e-06  |ddm|= 0.000139
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.61125e-06
diis-c [-2.57661523e-13  4.90674735e-05 -8.01587811e-04 -1.47445012e-02
  1.01549702e+00]
  HOMO = -0.603039937149943  LUMO = 5.426082988102
  mo_energy =
[-3.28015098e+01 -1.79463731e+00 -6.03039937e-01 -6.03039937e-01
 -6.03039937e-01  5.42608299e+00  5.42608299e+00  5.42608299e+00
  3.34014646e+01  2.91471759e+02  2.19863659e+03]
E1 = -181.70710406237959  E_coul = 54.44828511216988
cycle= 5 E= -127.25881895021  delta_E= -2.27e-13  |g|= 2.33e-08  |ddm|= 3.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.70710406237959  E_coul = 54.44828511216988
  HOMO = -0.603039935744517  LUMO = 5.42608298942344
  mo_energy =
[-3.28015098e+01 -1.79463730e+00 -6.03039936e-01 -6.03039936e-01
 -6.03039936e-01  5.42608299e+00  5.42608299e+00  5.42608299e+00
  3.34014646e+01  2.91471759e+02  2.19863659e+03]
E1 = -181.70710406626512  E_coul = 54.448285116055445
Extra cycle  E= -127.25881895021  delta_E= 2.84e-14  |g|= 1.03e-09  |ddm|= 2.19e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.48396154e-01 1.33063938e+03 2.01459941e+02 4.48131860e+01
 1.20377829e+01 5.37065329e+00 9.03849825e-01]
E = -127.25881895020967
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.948396153585       1
[INPUT] 0    0    [1    /1   ]  1330.63937925        1
[INPUT] 0    0    [1    /1   ]  201.459940591        1
[INPUT] 0    0    [1    /1   ]  44.8131859715        1
[INPUT] 0    0    [1    /1   ]  12.0377829425        1
[INPUT] 1    0    [1    /1   ]  5.37065329029        1
[INPUT] 1    0    [1    /1   ]  0.903849825498       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.948396153585013, 1.0]], [0, [1330.639379251717, 1.0]], [0, [201.4599405911283, 1.0]], [0, [44.81318597152098, 1.0]], [0, [12.037782942519746, 1.0]], [1, [5.370653290287393, 1.0]], [1, [0.9038498254975655, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94839615]
bas 1, expnt(s) = [1330.63937925]
bas 2, expnt(s) = [201.45994059]
bas 3, expnt(s) = [44.81318597]
bas 4, expnt(s) = [12.03778294]
bas 5, expnt(s) = [5.37065329]
bas 6, expnt(s) = [0.90384983]
CPU time:       224.15
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.48396154e-01 2.42804853e+00 1.33063938e+03 5.56621918e+02
 2.01459941e+02 1.35100374e+02 4.48131860e+01 4.37592016e+01
 1.20377829e+01 1.63276960e+01 5.37065329e+00 2.38516423e+01
 9.03849825e-01 2.57101577e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825495478684086
cond(S) = 21.864681131115837
E1 = -181.29987812995859  E_coul = 54.36131502032824
init E= -126.93856310963
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649995416328054  LUMO = 5.39263853993803
  mo_energy =
[-3.26640967e+01 -1.83832835e+00 -6.49995416e-01 -6.49995416e-01
 -6.49995416e-01  5.39263854e+00  5.39263854e+00  5.39263854e+00
  3.34804251e+01  2.91633571e+02  2.19885070e+03]
E1 = -181.6268835820396  E_coul = 54.36829780687512
cycle= 1 E= -127.258585775164  delta_E= -0.32  |g|= 0.0909  |ddm|= 0.308
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101653
diis-c [-0.01033327  1.        ]
  HOMO = -0.60789640594004  LUMO = 5.41814887434976
  mo_energy =
[-3.28213561e+01 -1.80023346e+00 -6.07896406e-01 -6.07896406e-01
 -6.07896406e-01  5.41814887e+00  5.41814887e+00  5.41814887e+00
  3.33845889e+01  2.91448673e+02  2.19861031e+03]
E1 = -181.72081966580234  E_coul = 54.46200710086193
cycle= 2 E= -127.25881256494  delta_E= -0.000227  |g|= 0.0108  |ddm|= 0.0146
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0131313
diis-c [-6.67713857e-05  9.21043379e-02  9.07895662e-01]
  HOMO = -0.602714854944932  LUMO = 5.4265984793992
  mo_energy =
[-3.28003115e+01 -1.79426725e+00 -6.02714855e-01 -6.02714855e-01
 -6.02714855e-01  5.42659848e+00  5.42659848e+00  5.42659848e+00
  3.34024949e+01  2.91472896e+02  2.19863766e+03]
E1 = -181.70621812000857  E_coul = 54.447399196412
cycle= 3 E= -127.258818923597  delta_E= -6.36e-06  |g|= 0.00074  |ddm|= 0.00229
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000873628
diis-c [-1.12876267e-08 -3.60196692e-03  4.03303938e-02  9.63271573e-01]
  HOMO = -0.603040690849993  LUMO = 5.42608181202165
  mo_energy =
[-3.28015125e+01 -1.79463828e+00 -6.03040691e-01 -6.03040691e-01
 -6.03040691e-01  5.42608181e+00  5.42608181e+00  5.42608181e+00
  3.34014618e+01  2.91471756e+02  2.19863658e+03]
E1 = -181.70710589109777  E_coul = 54.44828694088829
cycle= 4 E= -127.258818950209  delta_E= -2.66e-08  |g|= 2.25e-06  |ddm|= 0.000139
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.61125e-06
diis-c [-2.57661523e-13  4.90674735e-05 -8.01587811e-04 -1.47445012e-02
  1.01549702e+00]
  HOMO = -0.603039937149943  LUMO = 5.426082988102
  mo_energy =
[-3.28015098e+01 -1.79463731e+00 -6.03039937e-01 -6.03039937e-01
 -6.03039937e-01  5.42608299e+00  5.42608299e+00  5.42608299e+00
  3.34014646e+01  2.91471759e+02  2.19863659e+03]
E1 = -181.70710406237959  E_coul = 54.44828511216988
cycle= 5 E= -127.25881895021  delta_E= -2.27e-13  |g|= 2.33e-08  |ddm|= 3.08e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.70710406237959  E_coul = 54.44828511216988
  HOMO = -0.603039935744517  LUMO = 5.42608298942344
  mo_energy =
[-3.28015098e+01 -1.79463730e+00 -6.03039936e-01 -6.03039936e-01
 -6.03039936e-01  5.42608299e+00  5.42608299e+00  5.42608299e+00
  3.34014646e+01  2.91471759e+02  2.19863659e+03]
E1 = -181.70710406626512  E_coul = 54.448285116055445
Extra cycle  E= -127.25881895021  delta_E= 2.84e-14  |g|= 1.03e-09  |ddm|= 2.19e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.864681131115837
E1 = -181.70710406626512  E_coul = 54.448285116055445
init E= -127.25881895021
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.603039935466033  LUMO = 5.42608298983474
  mo_energy =
[-3.28015098e+01 -1.79463730e+00 -6.03039935e-01 -6.03039935e-01
 -6.03039935e-01  5.42608299e+00  5.42608299e+00  5.42608299e+00
  3.34014646e+01  2.91471759e+02  2.19863659e+03]
E1 = -181.7071040657564  E_coul = 54.44828511554673
cycle= 1 E= -127.25881895021  delta_E=    0  |g|= 5.93e-11  |ddm|= 1.08e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.7071040657564  E_coul = 54.44828511554673
  HOMO = -0.603039935496285  LUMO = 5.42608298978461
  mo_energy =
[-3.28015098e+01 -1.79463730e+00 -6.03039935e-01 -6.03039935e-01
 -6.03039935e-01  5.42608299e+00  5.42608299e+00  5.42608299e+00
  3.34014646e+01  2.91471759e+02  2.19863659e+03]
E1 = -181.7071040658499  E_coul = 54.44828511564015
Extra cycle  E= -127.25881895021  delta_E= -8.53e-14  |g|= 1.11e-11  |ddm|= 1.49e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [9.48396154e-01 1.33063938e+03 2.01459941e+02 4.48131860e+01
 1.20377829e+01 5.37065329e+00 9.03849825e-01]
grad_E = [-4.70728138e-03 -6.96215497e-06  2.09328120e-04 -7.25658096e-04
  8.12385119e-04  4.01909467e-03  2.71712275e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.948513905463       1
[INPUT] 0    0    [1    /1   ]  1330.57560423        1
[INPUT] 0    0    [1    /1   ]  199.883541294        1
[INPUT] 0    0    [1    /1   ]  44.7428128192        1
[INPUT] 0    0    [1    /1   ]  12.0325276308        1
[INPUT] 1    0    [1    /1   ]  5.35376730323        1
[INPUT] 1    0    [1    /1   ]  0.901861806821       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9485139054629177, 1.0]], [0, [1330.5756042317794, 1.0]], [0, [199.8835412942068, 1.0]], [0, [44.742812819215864, 1.0]], [0, [12.032527630786095, 1.0]], [1, [5.353767303233498, 1.0]], [1, [0.9018618068208245, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94851391]
bas 1, expnt(s) = [1330.57560423]
bas 2, expnt(s) = [199.88354129]
bas 3, expnt(s) = [44.74281282]
bas 4, expnt(s) = [12.03252763]
bas 5, expnt(s) = [5.3537673]
bas 6, expnt(s) = [0.90186181]
CPU time:       227.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.48513905e-01 2.42827462e+00 1.33057560e+03 5.56601909e+02
 1.99883541e+02 1.34306738e+02 4.47428128e+01 4.37076530e+01
 1.20325276e+01 1.63223496e+01 5.35376730e+00 2.37579386e+01
 9.01861807e-01 2.56394903e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826300953273602
cond(S) = 21.992530889611903
E1 = -181.29762283374524  E_coul = 54.35931464861886
init E= -126.938308185126
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64996704935625  LUMO = 5.37457307564408
  mo_energy =
[-3.26653715e+01 -1.83825773e+00 -6.49967049e-01 -6.49967049e-01
 -6.49967049e-01  5.37457308e+00  5.37457308e+00  5.37457308e+00
  3.34404943e+01  2.89973276e+02  2.19348571e+03]
E1 = -181.6096842619862  E_coul = 54.35086633647726
cycle= 1 E= -127.258817925509  delta_E= -0.321  |g|= 0.0914  |ddm|= 0.309
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103343
diis-c [-0.01067974  1.        ]
  HOMO = -0.609073446810705  LUMO = 5.39863052120465
  mo_energy =
[-3.28253597e+01 -1.80153641e+00 -6.09073447e-01 -6.09073447e-01
 -6.09073447e-01  5.39863052e+00  5.39863052e+00  5.39863052e+00
  3.33421034e+01  2.89785784e+02  2.19324290e+03]
E1 = -181.70600649284697  E_coul = 54.44695223647953
cycle= 2 E= -127.259054256367  delta_E= -0.000236  |g|= 0.0111  |ddm|= 0.015
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0134548
diis-c [-6.86627565e-05  9.33049239e-02  9.06695076e-01]
  HOMO = -0.603761576894394  LUMO = 5.40726710097525
  mo_energy =
[-3.28038367e+01 -1.79541754e+00 -6.03761577e-01 -6.03761577e-01
 -6.03761577e-01  5.40726710e+00  5.40726710e+00  5.40726710e+00
  3.33604205e+01  2.89810487e+02  2.19327078e+03]
E1 = -181.69101342246086  E_coul = 54.43195246533097
cycle= 3 E= -127.25906095713  delta_E= -6.7e-06  |g|= 0.000746  |ddm|= 0.00236
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000881451
diis-c [-1.18076089e-08 -3.52481303e-03  3.99772458e-02  9.63547567e-01]
  HOMO = -0.604090392351541  LUMO = 5.40674696667209
  mo_energy =
[-3.28050483e+01 -1.79579202e+00 -6.04090392e-01 -6.04090392e-01
 -6.04090392e-01  5.40674697e+00  5.40674697e+00  5.40674697e+00
  3.33593786e+01  2.89809334e+02  2.19326968e+03]
E1 = -181.69191195472615  E_coul = 54.432850970396025
cycle= 4 E= -127.25906098433  delta_E= -2.72e-08  |g|= 2.25e-06  |ddm|= 0.00014
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.6216e-06
diis-c [-2.61742259e-13  4.72274912e-05 -8.10782021e-04 -1.50842421e-02
  1.01584780e+00]
  HOMO = -0.604089679721534  LUMO = 5.4067480794007
  mo_energy =
[-3.28050458e+01 -1.79579109e+00 -6.04089680e-01 -6.04089680e-01
 -6.04089680e-01  5.40674808e+00  5.40674808e+00  5.40674808e+00
  3.33593812e+01  2.89809337e+02  2.19326968e+03]
E1 = -181.69191022499268  E_coul = 54.432849240662506
cycle= 5 E= -127.25906098433  delta_E= -5.68e-14  |g|= 2.43e-08  |ddm|= 2.96e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.69191022499268  E_coul = 54.432849240662506
  HOMO = -0.604089677157889  LUMO = 5.40674808250254
  mo_energy =
[-3.28050458e+01 -1.79579108e+00 -6.04089677e-01 -6.04089677e-01
 -6.04089677e-01  5.40674808e+00  5.40674808e+00  5.40674808e+00
  3.33593812e+01  2.89809337e+02  2.19326968e+03]
E1 = -181.69191022591727  E_coul = 54.432849241587
Extra cycle  E= -127.25906098433  delta_E= -8.53e-14  |g|= 8.48e-10  |ddm|= 2.11e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.48513905e-01 1.33057560e+03 1.99883541e+02 4.47428128e+01
 1.20325276e+01 5.35376730e+00 9.01861807e-01]
E = -127.25906098433026
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.948513905463       1
[INPUT] 0    0    [1    /1   ]  1330.57560423        1
[INPUT] 0    0    [1    /1   ]  199.883541294        1
[INPUT] 0    0    [1    /1   ]  44.7428128192        1
[INPUT] 0    0    [1    /1   ]  12.0325276308        1
[INPUT] 1    0    [1    /1   ]  5.35376730323        1
[INPUT] 1    0    [1    /1   ]  0.901861806821       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9485139054629177, 1.0]], [0, [1330.5756042317794, 1.0]], [0, [199.8835412942068, 1.0]], [0, [44.742812819215864, 1.0]], [0, [12.032527630786095, 1.0]], [1, [5.353767303233498, 1.0]], [1, [0.9018618068208245, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94851391]
bas 1, expnt(s) = [1330.57560423]
bas 2, expnt(s) = [199.88354129]
bas 3, expnt(s) = [44.74281282]
bas 4, expnt(s) = [12.03252763]
bas 5, expnt(s) = [5.3537673]
bas 6, expnt(s) = [0.90186181]
CPU time:       228.22
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.48513905e-01 2.42827462e+00 1.33057560e+03 5.56601909e+02
 1.99883541e+02 1.34306738e+02 4.47428128e+01 4.37076530e+01
 1.20325276e+01 1.63223496e+01 5.35376730e+00 2.37579386e+01
 9.01861807e-01 2.56394903e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826300953273602
cond(S) = 21.992530889611903
E1 = -181.29762283374524  E_coul = 54.35931464861886
init E= -126.938308185126
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64996704935625  LUMO = 5.37457307564408
  mo_energy =
[-3.26653715e+01 -1.83825773e+00 -6.49967049e-01 -6.49967049e-01
 -6.49967049e-01  5.37457308e+00  5.37457308e+00  5.37457308e+00
  3.34404943e+01  2.89973276e+02  2.19348571e+03]
E1 = -181.6096842619862  E_coul = 54.35086633647726
cycle= 1 E= -127.258817925509  delta_E= -0.321  |g|= 0.0914  |ddm|= 0.309
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103343
diis-c [-0.01067974  1.        ]
  HOMO = -0.609073446810705  LUMO = 5.39863052120465
  mo_energy =
[-3.28253597e+01 -1.80153641e+00 -6.09073447e-01 -6.09073447e-01
 -6.09073447e-01  5.39863052e+00  5.39863052e+00  5.39863052e+00
  3.33421034e+01  2.89785784e+02  2.19324290e+03]
E1 = -181.70600649284697  E_coul = 54.44695223647953
cycle= 2 E= -127.259054256367  delta_E= -0.000236  |g|= 0.0111  |ddm|= 0.015
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0134548
diis-c [-6.86627565e-05  9.33049239e-02  9.06695076e-01]
  HOMO = -0.603761576894394  LUMO = 5.40726710097525
  mo_energy =
[-3.28038367e+01 -1.79541754e+00 -6.03761577e-01 -6.03761577e-01
 -6.03761577e-01  5.40726710e+00  5.40726710e+00  5.40726710e+00
  3.33604205e+01  2.89810487e+02  2.19327078e+03]
E1 = -181.69101342246086  E_coul = 54.43195246533097
cycle= 3 E= -127.25906095713  delta_E= -6.7e-06  |g|= 0.000746  |ddm|= 0.00236
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000881451
diis-c [-1.18076089e-08 -3.52481303e-03  3.99772458e-02  9.63547567e-01]
  HOMO = -0.604090392351541  LUMO = 5.40674696667209
  mo_energy =
[-3.28050483e+01 -1.79579202e+00 -6.04090392e-01 -6.04090392e-01
 -6.04090392e-01  5.40674697e+00  5.40674697e+00  5.40674697e+00
  3.33593786e+01  2.89809334e+02  2.19326968e+03]
E1 = -181.69191195472615  E_coul = 54.432850970396025
cycle= 4 E= -127.25906098433  delta_E= -2.72e-08  |g|= 2.25e-06  |ddm|= 0.00014
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.6216e-06
diis-c [-2.61742259e-13  4.72274912e-05 -8.10782021e-04 -1.50842421e-02
  1.01584780e+00]
  HOMO = -0.604089679721534  LUMO = 5.4067480794007
  mo_energy =
[-3.28050458e+01 -1.79579109e+00 -6.04089680e-01 -6.04089680e-01
 -6.04089680e-01  5.40674808e+00  5.40674808e+00  5.40674808e+00
  3.33593812e+01  2.89809337e+02  2.19326968e+03]
E1 = -181.69191022499268  E_coul = 54.432849240662506
cycle= 5 E= -127.25906098433  delta_E= -5.68e-14  |g|= 2.43e-08  |ddm|= 2.96e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.69191022499268  E_coul = 54.432849240662506
  HOMO = -0.604089677157889  LUMO = 5.40674808250254
  mo_energy =
[-3.28050458e+01 -1.79579108e+00 -6.04089677e-01 -6.04089677e-01
 -6.04089677e-01  5.40674808e+00  5.40674808e+00  5.40674808e+00
  3.33593812e+01  2.89809337e+02  2.19326968e+03]
E1 = -181.69191022591727  E_coul = 54.432849241587
Extra cycle  E= -127.25906098433  delta_E= -8.53e-14  |g|= 8.48e-10  |ddm|= 2.11e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 21.992530889611903
E1 = -181.69191022591727  E_coul = 54.432849241587
init E= -127.25906098433
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.604089677060393  LUMO = 5.4067480826193
  mo_energy =
[-3.28050458e+01 -1.79579108e+00 -6.04089677e-01 -6.04089677e-01
 -6.04089677e-01  5.40674808e+00  5.40674808e+00  5.40674808e+00
  3.33593812e+01  2.89809337e+02  2.19326968e+03]
E1 = -181.69191022591932  E_coul = 54.43284924158906
cycle= 1 E= -127.25906098433  delta_E=    0  |g|= 2.92e-11  |ddm|= 7.48e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.69191022591932  E_coul = 54.43284924158906
  HOMO = -0.604089677058998  LUMO = 5.40674808262026
  mo_energy =
[-3.28050458e+01 -1.79579108e+00 -6.04089677e-01 -6.04089677e-01
 -6.04089677e-01  5.40674808e+00  5.40674808e+00  5.40674808e+00
  3.33593812e+01  2.89809337e+02  2.19326968e+03]
E1 = -181.6919102259247  E_coul = 54.432849241594475
Extra cycle  E= -127.25906098433  delta_E= 5.68e-14  |g|= 1.46e-12  |ddm|= 2.84e-12
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [9.48513905e-01 1.33057560e+03 1.99883541e+02 4.47428128e+01
 1.20325276e+01 5.35376730e+00 9.01861807e-01]
grad_E = [-5.08608168e-03  5.59576422e-07  5.41188655e-05 -4.75422963e-05
 -1.28456560e-04  2.45595618e-03  1.43658860e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949405429396       1
[INPUT] 0    0    [1    /1   ]  1317.69481006        1
[INPUT] 0    0    [1    /1   ]  197.803106412        1
[INPUT] 0    0    [1    /1   ]  44.5017366023        1
[INPUT] 0    0    [1    /1   ]  12.0019125352        1
[INPUT] 1    0    [1    /1   ]  5.33322591534        1
[INPUT] 1    0    [1    /1   ]  0.899410181611       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9494054293961264, 1.0]], [0, [1317.6948100575053, 1.0]], [0, [197.80310641231392, 1.0]], [0, [44.50173660233292, 1.0]], [0, [12.001912535160086, 1.0]], [1, [5.3332259153434025, 1.0]], [1, [0.8994101816106348, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94940543]
bas 1, expnt(s) = [1317.69481006]
bas 2, expnt(s) = [197.80310641]
bas 3, expnt(s) = [44.5017366]
bas 4, expnt(s) = [12.00191254]
bas 5, expnt(s) = [5.33322592]
bas 6, expnt(s) = [0.89941018]
CPU time:       231.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49405429e-01 2.42998620e+00 1.31769481e+03 5.52555811e+02
 1.97803106e+02 1.33256946e+02 4.45017366e+01 4.35309097e+01
 1.20019125e+01 1.62911922e+01 5.33322592e+00 2.36440500e+01
 8.99410182e-01 2.55523967e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827219915636913
cond(S) = 22.194918845981384
E1 = -181.2990234991612  E_coul = 54.35920196654253
init E= -126.939821532619
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649728837522813  LUMO = 5.35279978624648
  mo_energy =
[-3.26664065e+01 -1.83804213e+00 -6.49728838e-01 -6.49728838e-01
 -6.49728838e-01  5.35279979e+00  5.35279979e+00  5.35279979e+00
  3.32558917e+01  2.87259813e+02  2.17041253e+03]
E1 = -181.59165465930707  E_coul = 54.332743420691756
cycle= 1 E= -127.258911238615  delta_E= -0.319  |g|= 0.0924  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104888
diis-c [-0.01100148  1.        ]
  HOMO = -0.610246198875539  LUMO = 5.37519581010016
  mo_energy =
[-3.28294575e+01 -1.80303538e+00 -6.10246199e-01 -6.10246199e-01
 -6.10246199e-01  5.37519581e+00  5.37519581e+00  5.37519581e+00
  3.31547561e+01  2.87069579e+02  2.17016707e+03]
E1 = -181.6906849734059  E_coul = 54.43152621949906
cycle= 2 E= -127.259158753907  delta_E= -0.000248  |g|= 0.0114  |ddm|= 0.0154
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138277
diis-c [-7.01697236e-05  9.52067480e-02  9.04793252e-01]
  HOMO = -0.604791531443169  LUMO = 5.38403552283268
  mo_energy =
[-3.28074018e+01 -1.79674798e+00 -6.04791531e-01 -6.04791531e-01
 -6.04791531e-01  5.38403552e+00  5.38403552e+00  5.38403552e+00
  3.31735033e+01  2.87094820e+02  2.17019553e+03]
E1 = -181.67524265630482  E_coul = 54.4160767935505
cycle= 3 E= -127.259165862754  delta_E= -7.11e-06  |g|= 0.000748  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000882837
diis-c [-1.18333725e-08 -3.49521718e-03  3.87642755e-02  9.64730942e-01]
  HOMO = -0.605121001565458  LUMO = 5.38351615335145
  mo_energy =
[-3.28086128e+01 -1.79712363e+00 -6.05121002e-01 -6.05121002e-01
 -6.05121002e-01  5.38351615e+00  5.38351615e+00  5.38351615e+00
  3.31724620e+01  2.87093670e+02  2.17019444e+03]
E1 = -181.6761453473452  E_coul = 54.41697945721359
cycle= 4 E= -127.259165890132  delta_E= -2.74e-08  |g|= 2.23e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.59929e-06
diis-c [-2.60375813e-13  4.66609543e-05 -7.96544281e-04 -1.53259427e-02
  1.01607583e+00]
  HOMO = -0.605120322192077  LUMO = 5.38351721243555
  mo_energy =
[-3.28086104e+01 -1.79712274e+00 -6.05120322e-01 -6.05120322e-01
 -6.05120322e-01  5.38351721e+00  5.38351721e+00  5.38351721e+00
  3.31724646e+01  2.87093673e+02  2.17019445e+03]
E1 = -181.67614369141012  E_coul = 54.41697780127838
cycle= 5 E= -127.259165890132  delta_E= -1.28e-13  |g|= 2.47e-08  |ddm|= 2.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67614369141012  E_coul = 54.41697780127838
  HOMO = -0.605120319255852  LUMO = 5.38351721611811
  mo_energy =
[-3.28086104e+01 -1.79712273e+00 -6.05120319e-01 -6.05120319e-01
 -6.05120319e-01  5.38351722e+00  5.38351722e+00  5.38351722e+00
  3.31724646e+01  2.87093673e+02  2.17019445e+03]
E1 = -181.67614369137237  E_coul = 54.41697780124064
Extra cycle  E= -127.259165890132  delta_E= 1.42e-14  |g|= 8.17e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.49405429e-01 1.31769481e+03 1.97803106e+02 4.45017366e+01
 1.20019125e+01 5.33322592e+00 8.99410182e-01]
E = -127.25916589013173
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949405429396       1
[INPUT] 0    0    [1    /1   ]  1317.69481006        1
[INPUT] 0    0    [1    /1   ]  197.803106412        1
[INPUT] 0    0    [1    /1   ]  44.5017366023        1
[INPUT] 0    0    [1    /1   ]  12.0019125352        1
[INPUT] 1    0    [1    /1   ]  5.33322591534        1
[INPUT] 1    0    [1    /1   ]  0.899410181611       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9494054293961264, 1.0]], [0, [1317.6948100575053, 1.0]], [0, [197.80310641231392, 1.0]], [0, [44.50173660233292, 1.0]], [0, [12.001912535160086, 1.0]], [1, [5.3332259153434025, 1.0]], [1, [0.8994101816106348, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94940543]
bas 1, expnt(s) = [1317.69481006]
bas 2, expnt(s) = [197.80310641]
bas 3, expnt(s) = [44.5017366]
bas 4, expnt(s) = [12.00191254]
bas 5, expnt(s) = [5.33322592]
bas 6, expnt(s) = [0.89941018]
CPU time:       232.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49405429e-01 2.42998620e+00 1.31769481e+03 5.52555811e+02
 1.97803106e+02 1.33256946e+02 4.45017366e+01 4.35309097e+01
 1.20019125e+01 1.62911922e+01 5.33322592e+00 2.36440500e+01
 8.99410182e-01 2.55523967e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827219915636913
cond(S) = 22.194918845981384
E1 = -181.2990234991612  E_coul = 54.35920196654253
init E= -126.939821532619
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649728837522813  LUMO = 5.35279978624648
  mo_energy =
[-3.26664065e+01 -1.83804213e+00 -6.49728838e-01 -6.49728838e-01
 -6.49728838e-01  5.35279979e+00  5.35279979e+00  5.35279979e+00
  3.32558917e+01  2.87259813e+02  2.17041253e+03]
E1 = -181.59165465930707  E_coul = 54.332743420691756
cycle= 1 E= -127.258911238615  delta_E= -0.319  |g|= 0.0924  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104888
diis-c [-0.01100148  1.        ]
  HOMO = -0.610246198875539  LUMO = 5.37519581010016
  mo_energy =
[-3.28294575e+01 -1.80303538e+00 -6.10246199e-01 -6.10246199e-01
 -6.10246199e-01  5.37519581e+00  5.37519581e+00  5.37519581e+00
  3.31547561e+01  2.87069579e+02  2.17016707e+03]
E1 = -181.6906849734059  E_coul = 54.43152621949906
cycle= 2 E= -127.259158753907  delta_E= -0.000248  |g|= 0.0114  |ddm|= 0.0154
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138277
diis-c [-7.01697236e-05  9.52067480e-02  9.04793252e-01]
  HOMO = -0.604791531443169  LUMO = 5.38403552283268
  mo_energy =
[-3.28074018e+01 -1.79674798e+00 -6.04791531e-01 -6.04791531e-01
 -6.04791531e-01  5.38403552e+00  5.38403552e+00  5.38403552e+00
  3.31735033e+01  2.87094820e+02  2.17019553e+03]
E1 = -181.67524265630482  E_coul = 54.4160767935505
cycle= 3 E= -127.259165862754  delta_E= -7.11e-06  |g|= 0.000748  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000882837
diis-c [-1.18333725e-08 -3.49521718e-03  3.87642755e-02  9.64730942e-01]
  HOMO = -0.605121001565458  LUMO = 5.38351615335145
  mo_energy =
[-3.28086128e+01 -1.79712363e+00 -6.05121002e-01 -6.05121002e-01
 -6.05121002e-01  5.38351615e+00  5.38351615e+00  5.38351615e+00
  3.31724620e+01  2.87093670e+02  2.17019444e+03]
E1 = -181.6761453473452  E_coul = 54.41697945721359
cycle= 4 E= -127.259165890132  delta_E= -2.74e-08  |g|= 2.23e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.59929e-06
diis-c [-2.60375813e-13  4.66609543e-05 -7.96544281e-04 -1.53259427e-02
  1.01607583e+00]
  HOMO = -0.605120322192077  LUMO = 5.38351721243555
  mo_energy =
[-3.28086104e+01 -1.79712274e+00 -6.05120322e-01 -6.05120322e-01
 -6.05120322e-01  5.38351721e+00  5.38351721e+00  5.38351721e+00
  3.31724646e+01  2.87093673e+02  2.17019445e+03]
E1 = -181.67614369141012  E_coul = 54.41697780127838
cycle= 5 E= -127.259165890132  delta_E= -1.28e-13  |g|= 2.47e-08  |ddm|= 2.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67614369141012  E_coul = 54.41697780127838
  HOMO = -0.605120319255852  LUMO = 5.38351721611811
  mo_energy =
[-3.28086104e+01 -1.79712273e+00 -6.05120319e-01 -6.05120319e-01
 -6.05120319e-01  5.38351722e+00  5.38351722e+00  5.38351722e+00
  3.31724646e+01  2.87093673e+02  2.17019445e+03]
E1 = -181.67614369137237  E_coul = 54.41697780124064
Extra cycle  E= -127.259165890132  delta_E= 1.42e-14  |g|= 8.17e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.194918845981384
E1 = -181.67614369137237  E_coul = 54.41697780124064
init E= -127.259165890132
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.605120319217085  LUMO = 5.38351721613953
  mo_energy =
[-3.28086104e+01 -1.79712273e+00 -6.05120319e-01 -6.05120319e-01
 -6.05120319e-01  5.38351722e+00  5.38351722e+00  5.38351722e+00
  3.31724646e+01  2.87093673e+02  2.17019445e+03]
E1 = -181.67614369154253  E_coul = 54.4169778014107
cycle= 1 E= -127.259165890132  delta_E= -1.14e-13  |g|= 3.96e-11  |ddm|= 8.09e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67614369154253  E_coul = 54.4169778014107
  HOMO = -0.605120319205264  LUMO = 5.38351721615723
  mo_energy =
[-3.28086104e+01 -1.79712273e+00 -6.05120319e-01 -6.05120319e-01
 -6.05120319e-01  5.38351722e+00  5.38351722e+00  5.38351722e+00
  3.31724646e+01  2.87093673e+02  2.17019445e+03]
E1 = -181.6761436915188  E_coul = 54.41697780138705
Extra cycle  E= -127.259165890132  delta_E= 8.53e-14  |g|= 2.65e-12  |ddm|= 4.57e-12
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [9.49405429e-01 1.31769481e+03 1.97803106e+02 4.45017366e+01
 1.20019125e+01 5.33322592e+00 8.99410182e-01]
grad_E = [-2.31268704e-03  2.84172073e-06 -1.69700497e-05  1.76786905e-04
 -3.76064425e-04  5.56261756e-04  1.54980874e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949995845057       1
[INPUT] 0    0    [1    /1   ]  1304.7700545         1
[INPUT] 0    0    [1    /1   ]  196.464580621        1
[INPUT] 0    0    [1    /1   ]  44.2980857683        1
[INPUT] 0    0    [1    /1   ]  11.9745290386        1
[INPUT] 1    0    [1    /1   ]  5.32452116265        1
[INPUT] 1    0    [1    /1   ]  0.898360710389       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499958450570867, 1.0]], [0, [1304.7700545014275, 1.0]], [0, [196.46458062093043, 1.0]], [0, [44.29808576829398, 1.0]], [0, [11.974529038617804, 1.0]], [1, [5.32452116264598, 1.0]], [1, [0.8983607103893209, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94999585]
bas 1, expnt(s) = [1304.7700545]
bas 2, expnt(s) = [196.46458062]
bas 3, expnt(s) = [44.29808577]
bas 4, expnt(s) = [11.97452904]
bas 5, expnt(s) = [5.32452116]
bas 6, expnt(s) = [0.89836071]
CPU time:       235.37
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49995845e-01 2.43111948e+00 1.30477005e+03 5.48485953e+02
 1.96464581e+02 1.32580064e+02 4.42980858e+01 4.33814180e+01
 1.19745290e+01 1.62633068e+01 5.32452116e+00 2.35958208e+01
 8.98360710e-01 2.55151326e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82759561128124
cond(S) = 22.339571787471204
E1 = -181.30118084055368  E_coul = 54.35995556510478
init E= -126.941225275449
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649559699771912  LUMO = 5.34364128560047
  mo_energy =
[-3.26666906e+01 -1.83790158e+00 -6.49559700e-01 -6.49559700e-01
 -6.49559700e-01  5.34364129e+00  5.34364129e+00  5.34364129e+00
  3.30933235e+01  2.85344768e+02  2.14980737e+03]
E1 = -181.5848355604718  E_coul = 54.32590107688226
cycle= 1 E= -127.25893448359  delta_E= -0.318  |g|= 0.093  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105424
diis-c [-0.01111423  1.        ]
  HOMO = -0.610673209023292  LUMO = 5.36534228290733
  mo_energy =
[-3.28310012e+01 -1.80364648e+00 -6.10673209e-01 -6.10673209e-01
 -6.10673209e-01  5.36534228e+00  5.36534228e+00  5.36534228e+00
  3.29911793e+01  2.85153505e+02  2.14956086e+03]
E1 = -181.68501680494333  E_coul = 54.425829915301115
cycle= 2 E= -127.259186889642  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139901
diis-c [-7.05614184e-05  9.62149305e-02  9.03785070e-01]
  HOMO = -0.605159878367862  LUMO = 5.3742655932387
  mo_energy =
[-3.28087223e+01 -1.79728975e+00 -6.05159878e-01 -6.05159878e-01
 -6.05159878e-01  5.37426559e+00  5.37426559e+00  5.37426559e+00
  3.30100908e+01  2.85178969e+02  2.14958957e+03]
E1 = -181.66938147726484  E_coul = 54.41018729759864
cycle= 3 E= -127.259194179666  delta_E= -7.29e-06  |g|= 0.000747  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000880732
diis-c [-1.16500550e-08 -3.50620369e-03  3.79383251e-02  9.65567879e-01]
  HOMO = -0.605488586147571  LUMO = 5.37374828818796
  mo_energy =
[-3.28099284e+01 -1.79766481e+00 -6.05488586e-01 -6.05488586e-01
 -6.05488586e-01  5.37374829e+00  5.37374829e+00  5.37374829e+00
  3.30090540e+01  2.85177826e+02  2.14958849e+03]
E1 = -181.67028286719798  E_coul = 54.41108866026543
cycle= 4 E= -127.259194206933  delta_E= -2.73e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.57866e-06
diis-c [-2.57175794e-13  4.70069115e-05 -7.82058663e-04 -1.53819955e-02
  1.01611705e+00]
  HOMO = -0.60548791443481  LUMO = 5.37374933367314
  mo_energy =
[-3.28099259e+01 -1.79766393e+00 -6.05487914e-01 -6.05487914e-01
 -6.05487914e-01  5.37374933e+00  5.37374933e+00  5.37374933e+00
  3.30090565e+01  2.85177829e+02  2.14958849e+03]
E1 = -181.67028122410335  E_coul = 54.4110870171707
cycle= 5 E= -127.259194206933  delta_E= -8.53e-14  |g|= 2.46e-08  |ddm|= 2.84e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67028122410335  E_coul = 54.4110870171707
  HOMO = -0.60548791166496  LUMO = 5.37374933710748
  mo_energy =
[-3.28099259e+01 -1.79766393e+00 -6.05487912e-01 -6.05487912e-01
 -6.05487912e-01  5.37374934e+00  5.37374934e+00  5.37374934e+00
  3.30090565e+01  2.85177829e+02  2.14958849e+03]
E1 = -181.6702812245086  E_coul = 54.4110870175759
Extra cycle  E= -127.259194206933  delta_E= -5.68e-14  |g|= 8.37e-10  |ddm|= 2.14e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.49995845e-01 1.30477005e+03 1.96464581e+02 4.42980858e+01
 1.19745290e+01 5.32452116e+00 8.98360710e-01]
E = -127.2591942069327
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949995845057       1
[INPUT] 0    0    [1    /1   ]  1304.7700545         1
[INPUT] 0    0    [1    /1   ]  196.464580621        1
[INPUT] 0    0    [1    /1   ]  44.2980857683        1
[INPUT] 0    0    [1    /1   ]  11.9745290386        1
[INPUT] 1    0    [1    /1   ]  5.32452116265        1
[INPUT] 1    0    [1    /1   ]  0.898360710389       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499958450570867, 1.0]], [0, [1304.7700545014275, 1.0]], [0, [196.46458062093043, 1.0]], [0, [44.29808576829398, 1.0]], [0, [11.974529038617804, 1.0]], [1, [5.32452116264598, 1.0]], [1, [0.8983607103893209, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94999585]
bas 1, expnt(s) = [1304.7700545]
bas 2, expnt(s) = [196.46458062]
bas 3, expnt(s) = [44.29808577]
bas 4, expnt(s) = [11.97452904]
bas 5, expnt(s) = [5.32452116]
bas 6, expnt(s) = [0.89836071]
CPU time:       236.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49995845e-01 2.43111948e+00 1.30477005e+03 5.48485953e+02
 1.96464581e+02 1.32580064e+02 4.42980858e+01 4.33814180e+01
 1.19745290e+01 1.62633068e+01 5.32452116e+00 2.35958208e+01
 8.98360710e-01 2.55151326e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82759561128124
cond(S) = 22.339571787471204
E1 = -181.30118084055368  E_coul = 54.35995556510478
init E= -126.941225275449
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.649559699771912  LUMO = 5.34364128560047
  mo_energy =
[-3.26666906e+01 -1.83790158e+00 -6.49559700e-01 -6.49559700e-01
 -6.49559700e-01  5.34364129e+00  5.34364129e+00  5.34364129e+00
  3.30933235e+01  2.85344768e+02  2.14980737e+03]
E1 = -181.5848355604718  E_coul = 54.32590107688226
cycle= 1 E= -127.25893448359  delta_E= -0.318  |g|= 0.093  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105424
diis-c [-0.01111423  1.        ]
  HOMO = -0.610673209023292  LUMO = 5.36534228290733
  mo_energy =
[-3.28310012e+01 -1.80364648e+00 -6.10673209e-01 -6.10673209e-01
 -6.10673209e-01  5.36534228e+00  5.36534228e+00  5.36534228e+00
  3.29911793e+01  2.85153505e+02  2.14956086e+03]
E1 = -181.68501680494333  E_coul = 54.425829915301115
cycle= 2 E= -127.259186889642  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0139901
diis-c [-7.05614184e-05  9.62149305e-02  9.03785070e-01]
  HOMO = -0.605159878367862  LUMO = 5.3742655932387
  mo_energy =
[-3.28087223e+01 -1.79728975e+00 -6.05159878e-01 -6.05159878e-01
 -6.05159878e-01  5.37426559e+00  5.37426559e+00  5.37426559e+00
  3.30100908e+01  2.85178969e+02  2.14958957e+03]
E1 = -181.66938147726484  E_coul = 54.41018729759864
cycle= 3 E= -127.259194179666  delta_E= -7.29e-06  |g|= 0.000747  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000880732
diis-c [-1.16500550e-08 -3.50620369e-03  3.79383251e-02  9.65567879e-01]
  HOMO = -0.605488586147571  LUMO = 5.37374828818796
  mo_energy =
[-3.28099284e+01 -1.79766481e+00 -6.05488586e-01 -6.05488586e-01
 -6.05488586e-01  5.37374829e+00  5.37374829e+00  5.37374829e+00
  3.30090540e+01  2.85177826e+02  2.14958849e+03]
E1 = -181.67028286719798  E_coul = 54.41108866026543
cycle= 4 E= -127.259194206933  delta_E= -2.73e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.57866e-06
diis-c [-2.57175794e-13  4.70069115e-05 -7.82058663e-04 -1.53819955e-02
  1.01611705e+00]
  HOMO = -0.60548791443481  LUMO = 5.37374933367314
  mo_energy =
[-3.28099259e+01 -1.79766393e+00 -6.05487914e-01 -6.05487914e-01
 -6.05487914e-01  5.37374933e+00  5.37374933e+00  5.37374933e+00
  3.30090565e+01  2.85177829e+02  2.14958849e+03]
E1 = -181.67028122410335  E_coul = 54.4110870171707
cycle= 5 E= -127.259194206933  delta_E= -8.53e-14  |g|= 2.46e-08  |ddm|= 2.84e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67028122410335  E_coul = 54.4110870171707
  HOMO = -0.60548791166496  LUMO = 5.37374933710748
  mo_energy =
[-3.28099259e+01 -1.79766393e+00 -6.05487912e-01 -6.05487912e-01
 -6.05487912e-01  5.37374934e+00  5.37374934e+00  5.37374934e+00
  3.30090565e+01  2.85177829e+02  2.14958849e+03]
E1 = -181.6702812245086  E_coul = 54.4110870175759
Extra cycle  E= -127.259194206933  delta_E= -5.68e-14  |g|= 8.37e-10  |ddm|= 2.14e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.339571787471204
E1 = -181.6702812245086  E_coul = 54.4110870175759
init E= -127.259194206933
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605487911598819  LUMO = 5.37374933717281
  mo_energy =
[-3.28099259e+01 -1.79766392e+00 -6.05487912e-01 -6.05487912e-01
 -6.05487912e-01  5.37374934e+00  5.37374934e+00  5.37374934e+00
  3.30090565e+01  2.85177829e+02  2.14958849e+03]
E1 = -181.67028122460323  E_coul = 54.411087017670496
cycle= 1 E= -127.259194206933  delta_E= -2.84e-14  |g|= 3.45e-11  |ddm|= 7.85e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67028122460323  E_coul = 54.411087017670496
  HOMO = -0.605487911591662  LUMO = 5.37374933718299
  mo_energy =
[-3.28099259e+01 -1.79766392e+00 -6.05487912e-01 -6.05487912e-01
 -6.05487912e-01  5.37374934e+00  5.37374934e+00  5.37374934e+00
  3.30090565e+01  2.85177829e+02  2.14958849e+03]
E1 = -181.67028122459266  E_coul = 54.411087017660044
Extra cycle  E= -127.259194206933  delta_E= 1.14e-13  |g|= 1.54e-12  |ddm|= 3.22e-12
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [9.49995845e-01 1.30477005e+03 1.96464581e+02 4.42980858e+01
 1.19745290e+01 5.32452116e+00 8.98360710e-01]
grad_E = [-1.13306388e-04  1.44907700e-06 -1.45786963e-05  9.08964834e-05
 -1.78159335e-04 -2.48311817e-04 -3.18677922e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.950049728419       1
[INPUT] 0    0    [1    /1   ]  1299.4296282         1
[INPUT] 0    0    [1    /1   ]  196.033543411        1
[INPUT] 0    0    [1    /1   ]  44.2206908192        1
[INPUT] 0    0    [1    /1   ]  11.9637012358        1
[INPUT] 1    0    [1    /1   ]  5.32523164086        1
[INPUT] 1    0    [1    /1   ]  0.898444206483       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9500497284189287, 1.0]], [0, [1299.429628204975, 1.0]], [0, [196.0335434109378, 1.0]], [0, [44.22069081918878, 1.0]], [0, [11.963701235845999, 1.0]], [1, [5.325231640863228, 1.0]], [1, [0.8984442064833235, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95004973]
bas 1, expnt(s) = [1299.4296282]
bas 2, expnt(s) = [196.03354341]
bas 3, expnt(s) = [44.22069082]
bas 4, expnt(s) = [11.96370124]
bas 5, expnt(s) = [5.32523164]
bas 6, expnt(s) = [0.89844421]
CPU time:       239.54
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.50049728e-01 2.43122290e+00 1.29942963e+03 5.46801375e+02
 1.96033543e+02 1.32361846e+02 4.42206908e+01 4.33245606e+01
 1.19637012e+01 1.62522762e+01 5.32523164e+00 2.35997565e+01
 8.98444206e-01 2.55180970e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827561353933346
cond(S) = 22.389158897240428
E1 = -181.30204027644976  E_coul = 54.36041413992252
init E= -126.941626136527
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649532022367215  LUMO = 5.34443971211547
  mo_energy =
[-3.26665730e+01 -1.83787569e+00 -6.49532022e-01 -6.49532022e-01
 -6.49532022e-01  5.34443971e+00  5.34443971e+00  5.34443971e+00
  3.30294149e+01  2.84685973e+02  2.14171151e+03]
E1 = -181.58580645414384  E_coul = 54.326867910963074
cycle= 1 E= -127.258938543181  delta_E= -0.317  |g|= 0.093  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105351
diis-c [-0.01109885  1.        ]
  HOMO = -0.610605743948015  LUMO = 5.36618531484875
  mo_energy =
[-3.28307906e+01 -1.80357802e+00 -6.10605744e-01 -6.10605744e-01
 -6.10605744e-01  5.36618531e+00  5.36618531e+00  5.36618531e+00
  3.29274682e+01  2.84494860e+02  2.14146510e+03]
E1 = -181.68593773558322  E_coul = 54.426746955027106
cycle= 2 E= -127.259190780556  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139864
diis-c [-7.04341832e-05  9.62840012e-02  9.03715999e-01]
  HOMO = -0.605096043504238  LUMO = 5.37510425768368
  mo_energy =
[-3.28085222e+01 -1.79722584e+00 -6.05096044e-01 -6.05096044e-01
 -6.05096044e-01  5.37510426e+00  5.37510426e+00  5.37510426e+00
  3.29463596e+01  2.84520310e+02  2.14149380e+03]
E1 = -181.67030951489178  E_coul = 54.41111144967339
cycle= 3 E= -127.259198065218  delta_E= -7.28e-06  |g|= 0.000747  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879668
diis-c [-1.15775683e-08 -3.51895739e-03  3.78037297e-02  9.65715228e-01]
  HOMO = -0.605424291596468  LUMO = 5.37458766636589
  mo_energy =
[-3.28097263e+01 -1.79760039e+00 -6.05424292e-01 -6.05424292e-01
 -6.05424292e-01  5.37458767e+00  5.37458767e+00  5.37458767e+00
  3.29453248e+01  2.84519169e+02  2.14149272e+03]
E1 = -181.67120952937736  E_coul = 54.412011436973714
cycle= 4 E= -127.259198092404  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.57767e-06
diis-c [-2.56661932e-13  4.73361279e-05 -7.79006519e-04 -1.53681165e-02
  1.01609979e+00]
  HOMO = -0.605423615266157  LUMO = 5.3745887186969
  mo_energy =
[-3.28097238e+01 -1.79759951e+00 -6.05423615e-01 -6.05423615e-01
 -6.05423615e-01  5.37458872e+00  5.37458872e+00  5.37458872e+00
  3.29453273e+01  2.84519172e+02  2.14149273e+03]
E1 = -181.67120787379548  E_coul = 54.41200978139161
cycle= 5 E= -127.259198092404  delta_E= -2.13e-13  |g|= 2.45e-08  |ddm|= 2.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67120787379548  E_coul = 54.41200978139161
  HOMO = -0.605423612650632  LUMO = 5.37458872189344
  mo_energy =
[-3.28097238e+01 -1.79759950e+00 -6.05423613e-01 -6.05423613e-01
 -6.05423613e-01  5.37458872e+00  5.37458872e+00  5.37458872e+00
  3.29453273e+01  2.84519172e+02  2.14149273e+03]
E1 = -181.67120787462537  E_coul = 54.41200978222149
Extra cycle  E= -127.259198092404  delta_E= -1.42e-14  |g|= 8.58e-10  |ddm|= 2.15e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.50049728e-01 1.29942963e+03 1.96033543e+02 4.42206908e+01
 1.19637012e+01 5.32523164e+00 8.98444206e-01]
E = -127.25919809240388
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.950049728419       1
[INPUT] 0    0    [1    /1   ]  1299.4296282         1
[INPUT] 0    0    [1    /1   ]  196.033543411        1
[INPUT] 0    0    [1    /1   ]  44.2206908192        1
[INPUT] 0    0    [1    /1   ]  11.9637012358        1
[INPUT] 1    0    [1    /1   ]  5.32523164086        1
[INPUT] 1    0    [1    /1   ]  0.898444206483       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9500497284189287, 1.0]], [0, [1299.429628204975, 1.0]], [0, [196.0335434109378, 1.0]], [0, [44.22069081918878, 1.0]], [0, [11.963701235845999, 1.0]], [1, [5.325231640863228, 1.0]], [1, [0.8984442064833235, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.95004973]
bas 1, expnt(s) = [1299.4296282]
bas 2, expnt(s) = [196.03354341]
bas 3, expnt(s) = [44.22069082]
bas 4, expnt(s) = [11.96370124]
bas 5, expnt(s) = [5.32523164]
bas 6, expnt(s) = [0.89844421]
CPU time:       240.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.50049728e-01 2.43122290e+00 1.29942963e+03 5.46801375e+02
 1.96033543e+02 1.32361846e+02 4.42206908e+01 4.33245606e+01
 1.19637012e+01 1.62522762e+01 5.32523164e+00 2.35997565e+01
 8.98444206e-01 2.55180970e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827561353933346
cond(S) = 22.389158897240428
E1 = -181.30204027644976  E_coul = 54.36041413992252
init E= -126.941626136527
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649532022367215  LUMO = 5.34443971211547
  mo_energy =
[-3.26665730e+01 -1.83787569e+00 -6.49532022e-01 -6.49532022e-01
 -6.49532022e-01  5.34443971e+00  5.34443971e+00  5.34443971e+00
  3.30294149e+01  2.84685973e+02  2.14171151e+03]
E1 = -181.58580645414384  E_coul = 54.326867910963074
cycle= 1 E= -127.258938543181  delta_E= -0.317  |g|= 0.093  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105351
diis-c [-0.01109885  1.        ]
  HOMO = -0.610605743948015  LUMO = 5.36618531484875
  mo_energy =
[-3.28307906e+01 -1.80357802e+00 -6.10605744e-01 -6.10605744e-01
 -6.10605744e-01  5.36618531e+00  5.36618531e+00  5.36618531e+00
  3.29274682e+01  2.84494860e+02  2.14146510e+03]
E1 = -181.68593773558322  E_coul = 54.426746955027106
cycle= 2 E= -127.259190780556  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139864
diis-c [-7.04341832e-05  9.62840012e-02  9.03715999e-01]
  HOMO = -0.605096043504238  LUMO = 5.37510425768368
  mo_energy =
[-3.28085222e+01 -1.79722584e+00 -6.05096044e-01 -6.05096044e-01
 -6.05096044e-01  5.37510426e+00  5.37510426e+00  5.37510426e+00
  3.29463596e+01  2.84520310e+02  2.14149380e+03]
E1 = -181.67030951489178  E_coul = 54.41111144967339
cycle= 3 E= -127.259198065218  delta_E= -7.28e-06  |g|= 0.000747  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879668
diis-c [-1.15775683e-08 -3.51895739e-03  3.78037297e-02  9.65715228e-01]
  HOMO = -0.605424291596468  LUMO = 5.37458766636589
  mo_energy =
[-3.28097263e+01 -1.79760039e+00 -6.05424292e-01 -6.05424292e-01
 -6.05424292e-01  5.37458767e+00  5.37458767e+00  5.37458767e+00
  3.29453248e+01  2.84519169e+02  2.14149272e+03]
E1 = -181.67120952937736  E_coul = 54.412011436973714
cycle= 4 E= -127.259198092404  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.57767e-06
diis-c [-2.56661932e-13  4.73361279e-05 -7.79006519e-04 -1.53681165e-02
  1.01609979e+00]
  HOMO = -0.605423615266157  LUMO = 5.3745887186969
  mo_energy =
[-3.28097238e+01 -1.79759951e+00 -6.05423615e-01 -6.05423615e-01
 -6.05423615e-01  5.37458872e+00  5.37458872e+00  5.37458872e+00
  3.29453273e+01  2.84519172e+02  2.14149273e+03]
E1 = -181.67120787379548  E_coul = 54.41200978139161
cycle= 5 E= -127.259198092404  delta_E= -2.13e-13  |g|= 2.45e-08  |ddm|= 2.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67120787379548  E_coul = 54.41200978139161
  HOMO = -0.605423612650632  LUMO = 5.37458872189344
  mo_energy =
[-3.28097238e+01 -1.79759950e+00 -6.05423613e-01 -6.05423613e-01
 -6.05423613e-01  5.37458872e+00  5.37458872e+00  5.37458872e+00
  3.29453273e+01  2.84519172e+02  2.14149273e+03]
E1 = -181.67120787462537  E_coul = 54.41200978222149
Extra cycle  E= -127.259198092404  delta_E= -1.42e-14  |g|= 8.58e-10  |ddm|= 2.15e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.389158897240428
E1 = -181.67120787462537  E_coul = 54.41200978222149
init E= -127.259198092404
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.605423612558284  LUMO = 5.37458872200083
  mo_energy =
[-3.28097238e+01 -1.79759950e+00 -6.05423613e-01 -6.05423613e-01
 -6.05423613e-01  5.37458872e+00  5.37458872e+00  5.37458872e+00
  3.29453273e+01  2.84519172e+02  2.14149273e+03]
E1 = -181.67120787464717  E_coul = 54.412009782243224
cycle= 1 E= -127.259198092404  delta_E= -7.11e-14  |g|= 3.09e-11  |ddm|= 7.74e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67120787464717  E_coul = 54.412009782243224
  HOMO = -0.605423612555636  LUMO = 5.37458872200377
  mo_energy =
[-3.28097238e+01 -1.79759950e+00 -6.05423613e-01 -6.05423613e-01
 -6.05423613e-01  5.37458872e+00  5.37458872e+00  5.37458872e+00
  3.29453273e+01  2.84519172e+02  2.14149273e+03]
E1 = -181.6712078746495  E_coul = 54.412009782245526
Extra cycle  E= -127.259198092404  delta_E= -2.84e-14  |g|= 1.26e-12  |ddm|= 2.85e-12
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [9.50049728e-01 1.29942963e+03 1.96033543e+02 4.42206908e+01
 1.19637012e+01 5.32523164e+00 8.98444206e-01]
grad_E = [ 2.90725853e-04  2.33035367e-07 -1.31516699e-06  6.14438488e-06
 -2.76808136e-05 -1.82373276e-04 -2.25022836e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949981893129       1
[INPUT] 0    0    [1    /1   ]  1298.56535938        1
[INPUT] 0    0    [1    /1   ]  195.975667672        1
[INPUT] 0    0    [1    /1   ]  44.2116056152        1
[INPUT] 0    0    [1    /1   ]  11.9626650175        1
[INPUT] 1    0    [1    /1   ]  5.32673083605        1
[INPUT] 1    0    [1    /1   ]  0.898628722061       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499818931287961, 1.0]], [0, [1298.565359377903, 1.0]], [0, [195.97566767157414, 1.0]], [0, [44.21160561522906, 1.0]], [0, [11.962665017545834, 1.0]], [1, [5.326730836049523, 1.0]], [1, [0.8986287220606652, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94998189]
bas 1, expnt(s) = [1298.56535938]
bas 2, expnt(s) = [195.97566767]
bas 3, expnt(s) = [44.21160562]
bas 4, expnt(s) = [11.96266502]
bas 5, expnt(s) = [5.32673084]
bas 6, expnt(s) = [0.89862872]
CPU time:       243.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49981893e-01 2.43109270e+00 1.29856536e+03 5.46528588e+02
 1.95975668e+02 1.32332537e+02 4.42116056e+01 4.33178846e+01
 1.19626650e+01 1.62512204e+01 5.32673084e+00 2.36080618e+01
 8.98628722e-01 2.55246480e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827494554713393
cond(S) = 22.39714510970133
E1 = -181.30209322458109  E_coul = 54.36049946715557
init E= -126.941593757426
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649543807183509  LUMO = 5.3460546230065
  mo_energy =
[-3.26664864e+01 -1.83788494e+00 -6.49543807e-01 -6.49543807e-01
 -6.49543807e-01  5.34605462e+00  5.34605462e+00  5.34605462e+00
  3.30221528e+01  2.84602728e+02  2.14045344e+03]
E1 = -181.5871906354654  E_coul = 54.32825101042228
cycle= 1 E= -127.258939625043  delta_E= -0.317  |g|= 0.0929  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105254
diis-c [-0.01107841  1.        ]
  HOMO = -0.610516541182751  LUMO = 5.36791766065795
  mo_energy =
[-3.28304831e+01 -1.80346164e+00 -6.10516541e-01 -6.10516541e-01
 -6.10516541e-01  5.36791766e+00  5.36791766e+00  5.36791766e+00
  3.29204404e+01  2.84411837e+02  2.14020724e+03]
E1 = -181.68713944077678  E_coul = 54.42794834029949
cycle= 2 E= -127.259191100477  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139622
diis-c [-7.03462385e-05  9.61591297e-02  9.03840870e-01]
  HOMO = -0.605016498844491  LUMO = 5.37682316656096
  mo_energy =
[-3.28082501e+01 -1.79712102e+00 -6.05016499e-01 -6.05016499e-01
 -6.05016499e-01  5.37682317e+00  5.37682317e+00  5.37682317e+00
  3.29393000e+01  2.84437250e+02  2.14023590e+03]
E1 = -181.6715410000658  E_coul = 54.41234264270126
cycle= 3 E= -127.259198357365  delta_E= -7.26e-06  |g|= 0.000747  |ddm|= 0.00245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879753
diis-c [-1.15810257e-08 -3.52192558e-03  3.78823053e-02  9.65639620e-01]
  HOMO = -0.605344746709372  LUMO = 5.37630644809945
  mo_energy =
[-3.28094544e+01 -1.79749553e+00 -6.05344747e-01 -6.05344747e-01
 -6.05344747e-01  5.37630645e+00  5.37630645e+00  5.37630645e+00
  3.29382652e+01  2.84436109e+02  2.14023482e+03]
E1 = -181.67244087361212  E_coul = 54.413242489065276
cycle= 4 E= -127.259198384547  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.58105e-06
diis-c [-2.57052642e-13  4.74097693e-05 -7.80354668e-04 -1.53593041e-02
  1.01609225e+00]
  HOMO = -0.60534406766461  LUMO = 5.37630750481868
  mo_energy =
[-3.28094519e+01 -1.79749464e+00 -6.05344068e-01 -6.05344068e-01
 -6.05344068e-01  5.37630750e+00  5.37630750e+00  5.37630750e+00
  3.29382678e+01  2.84436112e+02  2.14023482e+03]
E1 = -181.67243921173485  E_coul = 54.413240827188
cycle= 5 E= -127.259198384547  delta_E= -2.84e-14  |g|= 2.45e-08  |ddm|= 2.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67243921173485  E_coul = 54.413240827188
  HOMO = -0.605344065076111  LUMO = 5.37630750797147
  mo_energy =
[-3.28094519e+01 -1.79749463e+00 -6.05344065e-01 -6.05344065e-01
 -6.05344065e-01  5.37630751e+00  5.37630751e+00  5.37630751e+00
  3.29382678e+01  2.84436112e+02  2.14023482e+03]
E1 = -181.67243921264605  E_coul = 54.4132408280992
Extra cycle  E= -127.259198384547  delta_E=    0  |g|= 8.63e-10  |ddm|= 2.16e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.49981893e-01 1.29856536e+03 1.95975668e+02 4.42116056e+01
 1.19626650e+01 5.32673084e+00 8.98628722e-01]
E = -127.25919838454686
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949981893129       1
[INPUT] 0    0    [1    /1   ]  1298.56535938        1
[INPUT] 0    0    [1    /1   ]  195.975667672        1
[INPUT] 0    0    [1    /1   ]  44.2116056152        1
[INPUT] 0    0    [1    /1   ]  11.9626650175        1
[INPUT] 1    0    [1    /1   ]  5.32673083605        1
[INPUT] 1    0    [1    /1   ]  0.898628722061       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499818931287961, 1.0]], [0, [1298.565359377903, 1.0]], [0, [195.97566767157414, 1.0]], [0, [44.21160561522906, 1.0]], [0, [11.962665017545834, 1.0]], [1, [5.326730836049523, 1.0]], [1, [0.8986287220606652, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94998189]
bas 1, expnt(s) = [1298.56535938]
bas 2, expnt(s) = [195.97566767]
bas 3, expnt(s) = [44.21160562]
bas 4, expnt(s) = [11.96266502]
bas 5, expnt(s) = [5.32673084]
bas 6, expnt(s) = [0.89862872]
CPU time:       244.49
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49981893e-01 2.43109270e+00 1.29856536e+03 5.46528588e+02
 1.95975668e+02 1.32332537e+02 4.42116056e+01 4.33178846e+01
 1.19626650e+01 1.62512204e+01 5.32673084e+00 2.36080618e+01
 8.98628722e-01 2.55246480e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827494554713393
cond(S) = 22.39714510970133
E1 = -181.30209322458109  E_coul = 54.36049946715557
init E= -126.941593757426
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649543807183509  LUMO = 5.3460546230065
  mo_energy =
[-3.26664864e+01 -1.83788494e+00 -6.49543807e-01 -6.49543807e-01
 -6.49543807e-01  5.34605462e+00  5.34605462e+00  5.34605462e+00
  3.30221528e+01  2.84602728e+02  2.14045344e+03]
E1 = -181.5871906354654  E_coul = 54.32825101042228
cycle= 1 E= -127.258939625043  delta_E= -0.317  |g|= 0.0929  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105254
diis-c [-0.01107841  1.        ]
  HOMO = -0.610516541182751  LUMO = 5.36791766065795
  mo_energy =
[-3.28304831e+01 -1.80346164e+00 -6.10516541e-01 -6.10516541e-01
 -6.10516541e-01  5.36791766e+00  5.36791766e+00  5.36791766e+00
  3.29204404e+01  2.84411837e+02  2.14020724e+03]
E1 = -181.68713944077678  E_coul = 54.42794834029949
cycle= 2 E= -127.259191100477  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139622
diis-c [-7.03462385e-05  9.61591297e-02  9.03840870e-01]
  HOMO = -0.605016498844491  LUMO = 5.37682316656096
  mo_energy =
[-3.28082501e+01 -1.79712102e+00 -6.05016499e-01 -6.05016499e-01
 -6.05016499e-01  5.37682317e+00  5.37682317e+00  5.37682317e+00
  3.29393000e+01  2.84437250e+02  2.14023590e+03]
E1 = -181.6715410000658  E_coul = 54.41234264270126
cycle= 3 E= -127.259198357365  delta_E= -7.26e-06  |g|= 0.000747  |ddm|= 0.00245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879753
diis-c [-1.15810257e-08 -3.52192558e-03  3.78823053e-02  9.65639620e-01]
  HOMO = -0.605344746709372  LUMO = 5.37630644809945
  mo_energy =
[-3.28094544e+01 -1.79749553e+00 -6.05344747e-01 -6.05344747e-01
 -6.05344747e-01  5.37630645e+00  5.37630645e+00  5.37630645e+00
  3.29382652e+01  2.84436109e+02  2.14023482e+03]
E1 = -181.67244087361212  E_coul = 54.413242489065276
cycle= 4 E= -127.259198384547  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.58105e-06
diis-c [-2.57052642e-13  4.74097693e-05 -7.80354668e-04 -1.53593041e-02
  1.01609225e+00]
  HOMO = -0.60534406766461  LUMO = 5.37630750481868
  mo_energy =
[-3.28094519e+01 -1.79749464e+00 -6.05344068e-01 -6.05344068e-01
 -6.05344068e-01  5.37630750e+00  5.37630750e+00  5.37630750e+00
  3.29382678e+01  2.84436112e+02  2.14023482e+03]
E1 = -181.67243921173485  E_coul = 54.413240827188
cycle= 5 E= -127.259198384547  delta_E= -2.84e-14  |g|= 2.45e-08  |ddm|= 2.86e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67243921173485  E_coul = 54.413240827188
  HOMO = -0.605344065076111  LUMO = 5.37630750797147
  mo_energy =
[-3.28094519e+01 -1.79749463e+00 -6.05344065e-01 -6.05344065e-01
 -6.05344065e-01  5.37630751e+00  5.37630751e+00  5.37630751e+00
  3.29382678e+01  2.84436112e+02  2.14023482e+03]
E1 = -181.67243921264605  E_coul = 54.4132408280992
Extra cycle  E= -127.259198384547  delta_E=    0  |g|= 8.63e-10  |ddm|= 2.16e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.39714510970133
E1 = -181.67243921264605  E_coul = 54.4132408280992
init E= -127.259198384547
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605344064978716  LUMO = 5.37630750808694
  mo_energy =
[-3.28094519e+01 -1.79749463e+00 -6.05344065e-01 -6.05344065e-01
 -6.05344065e-01  5.37630751e+00  5.37630751e+00  5.37630751e+00
  3.29382678e+01  2.84436112e+02  2.14023482e+03]
E1 = -181.67243921265384  E_coul = 54.41324082810701
cycle= 1 E= -127.259198384547  delta_E= 2.84e-14  |g|= 3.03e-11  |ddm|= 7.75e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67243921265384  E_coul = 54.41324082810701
  HOMO = -0.605344064976928  LUMO = 5.3763075080885
  mo_energy =
[-3.28094519e+01 -1.79749463e+00 -6.05344065e-01 -6.05344065e-01
 -6.05344065e-01  5.37630751e+00  5.37630751e+00  5.37630751e+00
  3.29382678e+01  2.84436112e+02  2.14023482e+03]
E1 = -181.67243921265853  E_coul = 54.413240828111746
Extra cycle  E= -127.259198384547  delta_E= 5.68e-14  |g|= 1.42e-12  |ddm|= 2.92e-12
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [9.49981893e-01 1.29856536e+03 1.95975668e+02 4.42116056e+01
 1.19626650e+01 5.32673084e+00 8.98628722e-01]
grad_E = [ 1.32926233e-04  1.28758861e-09  9.66093784e-07 -6.90899722e-06
  6.31137209e-06 -4.97061610e-05 -6.94722401e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949945767685       1
[INPUT] 0    0    [1    /1   ]  1298.44876861        1
[INPUT] 0    0    [1    /1   ]  195.967894182        1
[INPUT] 0    0    [1    /1   ]  44.2123264765        1
[INPUT] 0    0    [1    /1   ]  11.9628759153        1
[INPUT] 1    0    [1    /1   ]  5.3272854691         1
[INPUT] 1    0    [1    /1   ]  0.898698306639       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499457676845169, 1.0]], [0, [1298.4487686085376, 1.0]], [0, [195.96789418170724, 1.0]], [0, [44.21232647654697, 1.0]], [0, [11.962875915323368, 1.0]], [1, [5.327285469096225, 1.0]], [1, [0.8986983066385188, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94994577]
bas 1, expnt(s) = [1298.44876861]
bas 2, expnt(s) = [195.96789418]
bas 3, expnt(s) = [44.21232648]
bas 4, expnt(s) = [11.96287592]
bas 5, expnt(s) = [5.32728547]
bas 6, expnt(s) = [0.89869831]
CPU time:       247.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49945768e-01 2.43102337e+00 1.29844877e+03 5.46491786e+02
 1.95967894e+02 1.32328600e+02 4.42123265e+01 4.33184143e+01
 1.19628759e+01 1.62514353e+01 5.32728547e+00 2.36111345e+01
 8.98698307e-01 2.55271186e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.8274701992788
cond(S) = 22.398732257329332
E1 = -181.3020400704449  E_coul = 54.360491688582066
init E= -126.941548381863
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649551318615225  LUMO = 5.34665213584703
  mo_energy =
[-3.26664623e+01 -1.83789064e+00 -6.49551319e-01 -6.49551319e-01
 -6.49551319e-01  5.34665214e+00  5.34665214e+00  5.34665214e+00
  3.30228768e+01  2.84598464e+02  2.14029158e+03]
E1 = -181.58766947682219  E_coul = 54.328729526503956
cycle= 1 E= -127.258939950318  delta_E= -0.317  |g|= 0.0929  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105222
diis-c [-0.01107165  1.        ]
  HOMO = -0.610486236400601  LUMO = 5.36855906573243
  mo_energy =
[-3.28303775e+01 -1.80341888e+00 -6.10486236e-01 -6.10486236e-01
 -6.10486236e-01  5.36855907e+00  5.36855907e+00  5.36855907e+00
  3.29212464e+01  2.84407652e+02  2.14004546e+03]
E1 = -181.68755007767814  E_coul = 54.42835893958222
cycle= 2 E= -127.259191138096  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.013953
diis-c [-7.03204119e-05  9.61048759e-02  9.03895124e-01]
  HOMO = -0.604989725663242  LUMO = 5.37745962039284
  mo_energy =
[-3.28081577e+01 -1.79708250e+00 -6.04989726e-01 -6.04989726e-01
 -6.04989726e-01  5.37745962e+00  5.37745962e+00  5.37745962e+00
  3.29400949e+01  2.84433051e+02  2.14007410e+03]
E1 = -181.67196286224254  E_coul = 54.41276447778623
cycle= 3 E= -127.259198384456  delta_E= -7.25e-06  |g|= 0.000747  |ddm|= 0.00245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879867
diis-c [-1.15900941e-08 -3.52214083e-03  3.79230566e-02  9.65599084e-01]
  HOMO = -0.605318004828927  LUMO = 5.37694280153343
  mo_energy =
[-3.28093622e+01 -1.79745702e+00 -6.05318005e-01 -6.05318005e-01
 -6.05318005e-01  5.37694280e+00  5.37694280e+00  5.37694280e+00
  3.29390599e+01  2.84431910e+02  2.14007302e+03]
E1 = -181.67286277883466  E_coul = 54.413664367191544
cycle= 4 E= -127.259198411643  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.58298e-06
diis-c [-2.57308483e-13  4.74148140e-05 -7.81193080e-04 -1.53578162e-02
  1.01609159e+00]
  HOMO = -0.605317324908579  LUMO = 5.37694385970907
  mo_energy =
[-3.28093598e+01 -1.79745613e+00 -6.05317325e-01 -6.05317325e-01
 -6.05317325e-01  5.37694386e+00  5.37694386e+00  5.37694386e+00
  3.29390625e+01  2.84431913e+02  2.14007303e+03]
E1 = -181.6728611150566  E_coul = 54.41366270341338
cycle= 5 E= -127.259198411643  delta_E= -1.14e-13  |g|= 2.45e-08  |ddm|= 2.87e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6728611150566  E_coul = 54.41366270341338
  HOMO = -0.605317322316998  LUMO = 5.37694386286555
  mo_energy =
[-3.28093598e+01 -1.79745613e+00 -6.05317322e-01 -6.05317322e-01
 -6.05317322e-01  5.37694386e+00  5.37694386e+00  5.37694386e+00
  3.29390625e+01  2.84431912e+02  2.14007303e+03]
E1 = -181.6728611159637  E_coul = 54.413662704320494
Extra cycle  E= -127.259198411643  delta_E= 1.42e-14  |g|= 8.63e-10  |ddm|= 2.16e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.49945768e-01 1.29844877e+03 1.95967894e+02 4.42123265e+01
 1.19628759e+01 5.32728547e+00 8.98698307e-01]
E = -127.25919841164321
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949945767685       1
[INPUT] 0    0    [1    /1   ]  1298.44876861        1
[INPUT] 0    0    [1    /1   ]  195.967894182        1
[INPUT] 0    0    [1    /1   ]  44.2123264765        1
[INPUT] 0    0    [1    /1   ]  11.9628759153        1
[INPUT] 1    0    [1    /1   ]  5.3272854691         1
[INPUT] 1    0    [1    /1   ]  0.898698306639       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499457676845169, 1.0]], [0, [1298.4487686085376, 1.0]], [0, [195.96789418170724, 1.0]], [0, [44.21232647654697, 1.0]], [0, [11.962875915323368, 1.0]], [1, [5.327285469096225, 1.0]], [1, [0.8986983066385188, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94994577]
bas 1, expnt(s) = [1298.44876861]
bas 2, expnt(s) = [195.96789418]
bas 3, expnt(s) = [44.21232648]
bas 4, expnt(s) = [11.96287592]
bas 5, expnt(s) = [5.32728547]
bas 6, expnt(s) = [0.89869831]
CPU time:       248.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49945768e-01 2.43102337e+00 1.29844877e+03 5.46491786e+02
 1.95967894e+02 1.32328600e+02 4.42123265e+01 4.33184143e+01
 1.19628759e+01 1.62514353e+01 5.32728547e+00 2.36111345e+01
 8.98698307e-01 2.55271186e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.8274701992788
cond(S) = 22.398732257329332
E1 = -181.3020400704449  E_coul = 54.360491688582066
init E= -126.941548381863
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649551318615225  LUMO = 5.34665213584703
  mo_energy =
[-3.26664623e+01 -1.83789064e+00 -6.49551319e-01 -6.49551319e-01
 -6.49551319e-01  5.34665214e+00  5.34665214e+00  5.34665214e+00
  3.30228768e+01  2.84598464e+02  2.14029158e+03]
E1 = -181.58766947682219  E_coul = 54.328729526503956
cycle= 1 E= -127.258939950318  delta_E= -0.317  |g|= 0.0929  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105222
diis-c [-0.01107165  1.        ]
  HOMO = -0.610486236400601  LUMO = 5.36855906573243
  mo_energy =
[-3.28303775e+01 -1.80341888e+00 -6.10486236e-01 -6.10486236e-01
 -6.10486236e-01  5.36855907e+00  5.36855907e+00  5.36855907e+00
  3.29212464e+01  2.84407652e+02  2.14004546e+03]
E1 = -181.68755007767814  E_coul = 54.42835893958222
cycle= 2 E= -127.259191138096  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.013953
diis-c [-7.03204119e-05  9.61048759e-02  9.03895124e-01]
  HOMO = -0.604989725663242  LUMO = 5.37745962039284
  mo_energy =
[-3.28081577e+01 -1.79708250e+00 -6.04989726e-01 -6.04989726e-01
 -6.04989726e-01  5.37745962e+00  5.37745962e+00  5.37745962e+00
  3.29400949e+01  2.84433051e+02  2.14007410e+03]
E1 = -181.67196286224254  E_coul = 54.41276447778623
cycle= 3 E= -127.259198384456  delta_E= -7.25e-06  |g|= 0.000747  |ddm|= 0.00245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879867
diis-c [-1.15900941e-08 -3.52214083e-03  3.79230566e-02  9.65599084e-01]
  HOMO = -0.605318004828927  LUMO = 5.37694280153343
  mo_energy =
[-3.28093622e+01 -1.79745702e+00 -6.05318005e-01 -6.05318005e-01
 -6.05318005e-01  5.37694280e+00  5.37694280e+00  5.37694280e+00
  3.29390599e+01  2.84431910e+02  2.14007302e+03]
E1 = -181.67286277883466  E_coul = 54.413664367191544
cycle= 4 E= -127.259198411643  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=2.58298e-06
diis-c [-2.57308483e-13  4.74148140e-05 -7.81193080e-04 -1.53578162e-02
  1.01609159e+00]
  HOMO = -0.605317324908579  LUMO = 5.37694385970907
  mo_energy =
[-3.28093598e+01 -1.79745613e+00 -6.05317325e-01 -6.05317325e-01
 -6.05317325e-01  5.37694386e+00  5.37694386e+00  5.37694386e+00
  3.29390625e+01  2.84431913e+02  2.14007303e+03]
E1 = -181.6728611150566  E_coul = 54.41366270341338
cycle= 5 E= -127.259198411643  delta_E= -1.14e-13  |g|= 2.45e-08  |ddm|= 2.87e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6728611150566  E_coul = 54.41366270341338
  HOMO = -0.605317322316998  LUMO = 5.37694386286555
  mo_energy =
[-3.28093598e+01 -1.79745613e+00 -6.05317322e-01 -6.05317322e-01
 -6.05317322e-01  5.37694386e+00  5.37694386e+00  5.37694386e+00
  3.29390625e+01  2.84431912e+02  2.14007303e+03]
E1 = -181.6728611159637  E_coul = 54.413662704320494
Extra cycle  E= -127.259198411643  delta_E= 1.42e-14  |g|= 8.63e-10  |ddm|= 2.16e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.398732257329332
E1 = -181.6728611159637  E_coul = 54.413662704320494
init E= -127.259198411643
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605317322219838  LUMO = 5.37694386298063
  mo_energy =
[-3.28093598e+01 -1.79745612e+00 -6.05317322e-01 -6.05317322e-01
 -6.05317322e-01  5.37694386e+00  5.37694386e+00  5.37694386e+00
  3.29390625e+01  2.84431912e+02  2.14007303e+03]
E1 = -181.67286111597235  E_coul = 54.413662704329134
cycle= 1 E= -127.259198411643  delta_E=    0  |g|= 3.05e-11  |ddm|= 7.75e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67286111597235  E_coul = 54.413662704329134
  HOMO = -0.605317322217996  LUMO = 5.37694386298227
  mo_energy =
[-3.28093598e+01 -1.79745612e+00 -6.05317322e-01 -6.05317322e-01
 -6.05317322e-01  5.37694386e+00  5.37694386e+00  5.37694386e+00
  3.29390625e+01  2.84431912e+02  2.14007303e+03]
E1 = -181.672861115977  E_coul = 54.41366270433374
Extra cycle  E= -127.259198411643  delta_E= -5.68e-14  |g|= 1.52e-12  |ddm|= 2.92e-12
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [9.49945768e-01 1.29844877e+03 1.95967894e+02 4.42123265e+01
 1.19628759e+01 5.32728547e+00 8.98698307e-01]
grad_E = [ 2.41620409e-05 -8.24124069e-09  3.94978488e-07 -2.88348966e-06
  4.46793103e-06 -2.22496035e-06 -4.70039275e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949939894293       1
[INPUT] 0    0    [1    /1   ]  1298.44577446        1
[INPUT] 0    0    [1    /1   ]  195.967741336        1
[INPUT] 0    0    [1    /1   ]  44.2130368465        1
[INPUT] 0    0    [1    /1   ]  11.9629915723        1
[INPUT] 1    0    [1    /1   ]  5.32732605274        1
[INPUT] 1    0    [1    /1   ]  0.898703738215       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499398942930367, 1.0]], [0, [1298.4457744638726, 1.0]], [0, [195.9677413362171, 1.0]], [0, [44.213036846502206, 1.0]], [0, [11.962991572315653, 1.0]], [1, [5.327326052740591, 1.0]], [1, [0.8987037382151711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94993989]
bas 1, expnt(s) = [1298.44577446]
bas 2, expnt(s) = [195.96774134]
bas 3, expnt(s) = [44.21303685]
bas 4, expnt(s) = [11.96299157]
bas 5, expnt(s) = [5.32732605]
bas 6, expnt(s) = [0.89870374]
CPU time:       252.04
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49939894e-01 2.43101209e+00 1.29844577e+03 5.46490840e+02
 1.95967741e+02 1.32328523e+02 4.42130368e+01 4.33189363e+01
 1.19629916e+01 1.62515531e+01 5.32732605e+00 2.36113593e+01
 8.98703738e-01 2.55273115e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827468580759508
cond(S) = 22.39893775544625
E1 = -181.30201898497194  E_coul = 54.36048103948874
init E= -126.941537945483
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649552693816693  LUMO = 5.34669583540668
  mo_energy =
[-3.26664626e+01 -1.83789160e+00 -6.49552694e-01 -6.49552694e-01
 -6.49552694e-01  5.34669584e+00  5.34669584e+00  5.34669584e+00
  3.30234837e+01  2.84600816e+02  2.14029029e+03]
E1 = -181.58769401745366  E_coul = 54.32875404540242
cycle= 1 E= -127.258939972051  delta_E= -0.317  |g|= 0.0929  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10522
diis-c [-0.01107134  1.        ]
  HOMO = -0.610484879889766  LUMO = 5.36860586625925
  mo_energy =
[-3.28303723e+01 -1.80341589e+00 -6.10484880e-01 -6.10484880e-01
 -6.10484880e-01  5.36860587e+00  5.36860587e+00  5.36860587e+00
  3.29218583e+01  2.84410009e+02  2.14004417e+03]
E1 = -181.68756999770554  E_coul = 54.42837885784856
cycle= 2 E= -127.259191139857  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139523
diis-c [-7.03193391e-05  9.61001795e-02  9.03899821e-01]
  HOMO = -0.604988594559689  LUMO = 5.37750610097306
  mo_energy =
[-3.28081534e+01 -1.79707978e+00 -6.04988595e-01 -6.04988595e-01
 -6.04988595e-01  5.37750610e+00  5.37750610e+00  5.37750610e+00
  3.29407062e+01  2.84435406e+02  2.14007281e+03]
E1 = -181.67198357804546  E_coul = 54.412785192573544
cycle= 3 E= -127.259198385472  delta_E= -7.25e-06  |g|= 0.000747  |ddm|= 0.00245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879884
diis-c [-1.15924847e-08 -3.52201815e-03  3.79272503e-02  9.65594768e-01]
  HOMO = -0.60531687870961  LUMO = 5.3769892698694
  mo_energy =
[-3.28093579e+01 -1.79745430e+00 -6.05316879e-01 -6.05316879e-01
 -6.05316879e-01  5.37698927e+00  5.37698927e+00  5.37698927e+00
  3.29396712e+01  2.84434265e+02  2.14007173e+03]
E1 = -181.67288350765335  E_coul = 54.41368509499374
cycle= 4 E= -127.25919841266  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.58335e-06
diis-c [-2.57357712e-13  4.74117461e-05 -7.81312408e-04 -1.53581170e-02
  1.01609202e+00]
  HOMO = -0.605316198702119  LUMO = 5.3769903281908
  mo_energy =
[-3.28093555e+01 -1.79745342e+00 -6.05316199e-01 -6.05316199e-01
 -6.05316199e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.67288184370497  E_coul = 54.413683431045165
cycle= 5 E= -127.25919841266  delta_E= -1.85e-13  |g|= 2.45e-08  |ddm|= 2.87e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67288184370497  E_coul = 54.413683431045165
  HOMO = -0.605316196107818  LUMO = 5.37699033135132
  mo_energy =
[-3.28093555e+01 -1.79745341e+00 -6.05316196e-01 -6.05316196e-01
 -6.05316196e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.6728818446054  E_coul = 54.413683431945636
Extra cycle  E= -127.25919841266  delta_E= 2.84e-14  |g|= 8.63e-10  |ddm|= 2.16e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [9.49939894e-01 1.29844577e+03 1.95967741e+02 4.42130368e+01
 1.19629916e+01 5.32732605e+00 8.98703738e-01]
E = -127.25919841265977
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949939894293       1
[INPUT] 0    0    [1    /1   ]  1298.44577446        1
[INPUT] 0    0    [1    /1   ]  195.967741336        1
[INPUT] 0    0    [1    /1   ]  44.2130368465        1
[INPUT] 0    0    [1    /1   ]  11.9629915723        1
[INPUT] 1    0    [1    /1   ]  5.32732605274        1
[INPUT] 1    0    [1    /1   ]  0.898703738215       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499398942930367, 1.0]], [0, [1298.4457744638726, 1.0]], [0, [195.9677413362171, 1.0]], [0, [44.213036846502206, 1.0]], [0, [11.962991572315653, 1.0]], [1, [5.327326052740591, 1.0]], [1, [0.8987037382151711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94993989]
bas 1, expnt(s) = [1298.44577446]
bas 2, expnt(s) = [195.96774134]
bas 3, expnt(s) = [44.21303685]
bas 4, expnt(s) = [11.96299157]
bas 5, expnt(s) = [5.32732605]
bas 6, expnt(s) = [0.89870374]
CPU time:       252.96
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49939894e-01 2.43101209e+00 1.29844577e+03 5.46490840e+02
 1.95967741e+02 1.32328523e+02 4.42130368e+01 4.33189363e+01
 1.19629916e+01 1.62515531e+01 5.32732605e+00 2.36113593e+01
 8.98703738e-01 2.55273115e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827468580759508
cond(S) = 22.39893775544625
E1 = -181.30201898497194  E_coul = 54.36048103948874
init E= -126.941537945483
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.649552693816693  LUMO = 5.34669583540668
  mo_energy =
[-3.26664626e+01 -1.83789160e+00 -6.49552694e-01 -6.49552694e-01
 -6.49552694e-01  5.34669584e+00  5.34669584e+00  5.34669584e+00
  3.30234837e+01  2.84600816e+02  2.14029029e+03]
E1 = -181.58769401745366  E_coul = 54.32875404540242
cycle= 1 E= -127.258939972051  delta_E= -0.317  |g|= 0.0929  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10522
diis-c [-0.01107134  1.        ]
  HOMO = -0.610484879889766  LUMO = 5.36860586625925
  mo_energy =
[-3.28303723e+01 -1.80341589e+00 -6.10484880e-01 -6.10484880e-01
 -6.10484880e-01  5.36860587e+00  5.36860587e+00  5.36860587e+00
  3.29218583e+01  2.84410009e+02  2.14004417e+03]
E1 = -181.68756999770554  E_coul = 54.42837885784856
cycle= 2 E= -127.259191139857  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139523
diis-c [-7.03193391e-05  9.61001795e-02  9.03899821e-01]
  HOMO = -0.604988594559689  LUMO = 5.37750610097306
  mo_energy =
[-3.28081534e+01 -1.79707978e+00 -6.04988595e-01 -6.04988595e-01
 -6.04988595e-01  5.37750610e+00  5.37750610e+00  5.37750610e+00
  3.29407062e+01  2.84435406e+02  2.14007281e+03]
E1 = -181.67198357804546  E_coul = 54.412785192573544
cycle= 3 E= -127.259198385472  delta_E= -7.25e-06  |g|= 0.000747  |ddm|= 0.00245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879884
diis-c [-1.15924847e-08 -3.52201815e-03  3.79272503e-02  9.65594768e-01]
  HOMO = -0.60531687870961  LUMO = 5.3769892698694
  mo_energy =
[-3.28093579e+01 -1.79745430e+00 -6.05316879e-01 -6.05316879e-01
 -6.05316879e-01  5.37698927e+00  5.37698927e+00  5.37698927e+00
  3.29396712e+01  2.84434265e+02  2.14007173e+03]
E1 = -181.67288350765335  E_coul = 54.41368509499374
cycle= 4 E= -127.25919841266  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.58335e-06
diis-c [-2.57357712e-13  4.74117461e-05 -7.81312408e-04 -1.53581170e-02
  1.01609202e+00]
  HOMO = -0.605316198702119  LUMO = 5.3769903281908
  mo_energy =
[-3.28093555e+01 -1.79745342e+00 -6.05316199e-01 -6.05316199e-01
 -6.05316199e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.67288184370497  E_coul = 54.413683431045165
cycle= 5 E= -127.25919841266  delta_E= -1.85e-13  |g|= 2.45e-08  |ddm|= 2.87e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67288184370497  E_coul = 54.413683431045165
  HOMO = -0.605316196107818  LUMO = 5.37699033135132
  mo_energy =
[-3.28093555e+01 -1.79745341e+00 -6.05316196e-01 -6.05316196e-01
 -6.05316196e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.6728818446054  E_coul = 54.413683431945636
Extra cycle  E= -127.25919841266  delta_E= 2.84e-14  |g|= 8.63e-10  |ddm|= 2.16e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 22.39893775544625
E1 = -181.6728818446054  E_coul = 54.413683431945636
init E= -127.25919841266
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605316196011062  LUMO = 5.37699033146574
  mo_energy =
[-3.28093555e+01 -1.79745341e+00 -6.05316196e-01 -6.05316196e-01
 -6.05316196e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.67288184461526  E_coul = 54.413683431955434
cycle= 1 E= -127.25919841266  delta_E= -5.68e-14  |g|= 3.03e-11  |ddm|= 7.75e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67288184461526  E_coul = 54.413683431955434
  HOMO = -0.605316196009151  LUMO = 5.37699033146751
  mo_energy =
[-3.28093555e+01 -1.79745341e+00 -6.05316196e-01 -6.05316196e-01
 -6.05316196e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.67288184461955  E_coul = 54.41368343195977
Extra cycle  E= -127.25919841266  delta_E= 4.26e-14  |g|= 1.56e-12  |ddm|= 2.92e-12
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [9.49939894e-01 1.29844577e+03 1.95967741e+02 4.42130368e+01
 1.19629916e+01 5.32732605e+00 8.98703738e-01]
grad_E = [ 2.43569572e-06 -5.72961441e-10  5.43562426e-08 -4.86132706e-07
  9.93631080e-07  8.55160927e-07  1.57476406e-06]
 message: Optimization terminated successfully
 success: True
  status: 0
     fun: -127.25919841265977
       x: [ 9.499e-01  1.298e+03  1.960e+02  4.421e+01  1.196e+01
            5.327e+00  8.987e-01]
     nit: 71
     jac: [ 2.436e-06 -5.730e-10  5.436e-08 -4.861e-07  9.936e-07
            8.552e-07  1.575e-06]
    nfev: 77
    njev: 71
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]

basis = "5s2p"
exps = np.zeros((7, 2))
exps[1:, 0] = basis_sets["4s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["4s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:35:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  0.949939894293       1
[INPUT] 0    0    [1    /1   ]  1298.44577446        1
[INPUT] 0    0    [1    /1   ]  195.967741336        1
[INPUT] 0    0    [1    /1   ]  44.2130368465        1
[INPUT] 0    0    [1    /1   ]  11.9629915723        1
[INPUT] 1    0    [1    /1   ]  5.32732605274        1
[INPUT] 1    0    [1    /1   ]  0.898703738215       1

nuclear repulsion = 0
number of shells = 7
number of NR pGTOs = 11
number of NR cGTOs = 11
basis = {'Ne': [[0, [0.9499398942930367, 1.0]], [0, [1298.4457744638726, 1.0]], [0, [195.9677413362171, 1.0]], [0, [44.213036846502206, 1.0]], [0, [11.962991572315653, 1.0]], [1, [5.327326052740591, 1.0]], [1, [0.8987037382151711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [0.94993989]
bas 1, expnt(s) = [1298.44577446]
bas 2, expnt(s) = [195.96774134]
bas 3, expnt(s) = [44.21303685]
bas 4, expnt(s) = [11.96299157]
bas 5, expnt(s) = [5.32732605]
bas 6, expnt(s) = [0.89870374]
CPU time:       256.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  1  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 9.49939894e-01 2.43101209e+00 1.29844577e+03 5.46490840e+02
 1.95967741e+02 1.32328523e+02 4.42130368e+01 4.33189363e+01
 1.19629916e+01 1.62515531e+01 5.32732605e+00 2.36113593e+01
 8.98703738e-01 2.55273115e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827468580759508
cond(S) = 22.39893775544625
E1 = -181.30201898497194  E_coul = 54.36048103948874
init E= -126.941537945483
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649552693816693  LUMO = 5.34669583540668
  mo_energy =
[-3.26664626e+01 -1.83789160e+00 -6.49552694e-01 -6.49552694e-01
 -6.49552694e-01  5.34669584e+00  5.34669584e+00  5.34669584e+00
  3.30234837e+01  2.84600816e+02  2.14029029e+03]
E1 = -181.58769401745366  E_coul = 54.32875404540242
cycle= 1 E= -127.258939972051  delta_E= -0.317  |g|= 0.0929  |ddm|= 0.31
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10522
diis-c [-0.01107134  1.        ]
  HOMO = -0.610484879889766  LUMO = 5.36860586625925
  mo_energy =
[-3.28303723e+01 -1.80341589e+00 -6.10484880e-01 -6.10484880e-01
 -6.10484880e-01  5.36860587e+00  5.36860587e+00  5.36860587e+00
  3.29218583e+01  2.84410009e+02  2.14004417e+03]
E1 = -181.68756999770554  E_coul = 54.42837885784856
cycle= 2 E= -127.259191139857  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0139523
diis-c [-7.03193391e-05  9.61001795e-02  9.03899821e-01]
  HOMO = -0.604988594559689  LUMO = 5.37750610097306
  mo_energy =
[-3.28081534e+01 -1.79707978e+00 -6.04988595e-01 -6.04988595e-01
 -6.04988595e-01  5.37750610e+00  5.37750610e+00  5.37750610e+00
  3.29407062e+01  2.84435406e+02  2.14007281e+03]
E1 = -181.67198357804546  E_coul = 54.412785192573544
cycle= 3 E= -127.259198385472  delta_E= -7.25e-06  |g|= 0.000747  |ddm|= 0.00245
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.000879884
diis-c [-1.15924847e-08 -3.52201815e-03  3.79272503e-02  9.65594768e-01]
  HOMO = -0.60531687870961  LUMO = 5.3769892698694
  mo_energy =
[-3.28093579e+01 -1.79745430e+00 -6.05316879e-01 -6.05316879e-01
 -6.05316879e-01  5.37698927e+00  5.37698927e+00  5.37698927e+00
  3.29396712e+01  2.84434265e+02  2.14007173e+03]
E1 = -181.67288350765335  E_coul = 54.41368509499374
cycle= 4 E= -127.25919841266  delta_E= -2.72e-08  |g|= 2.21e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.58335e-06
diis-c [-2.57357712e-13  4.74117461e-05 -7.81312408e-04 -1.53581170e-02
  1.01609202e+00]
  HOMO = -0.605316198702119  LUMO = 5.3769903281908
  mo_energy =
[-3.28093555e+01 -1.79745342e+00 -6.05316199e-01 -6.05316199e-01
 -6.05316199e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.67288184370497  E_coul = 54.413683431045165
cycle= 5 E= -127.25919841266  delta_E= -1.85e-13  |g|= 2.45e-08  |ddm|= 2.87e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67288184370497  E_coul = 54.413683431045165
  HOMO = -0.605316196107818  LUMO = 5.37699033135132
  mo_energy =
[-3.28093555e+01 -1.79745341e+00 -6.05316196e-01 -6.05316196e-01
 -6.05316196e-01  5.37699033e+00  5.37699033e+00  5.37699033e+00
  3.29396738e+01  2.84434268e+02  2.14007174e+03]
E1 = -181.6728818446054  E_coul = 54.413683431945636
Extra cycle  E= -127.25919841266  delta_E= 2.84e-14  |g|= 8.63e-10  |ddm|= 2.16e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [9.49939894e-01 1.29844577e+03 1.95967741e+02 4.42130368e+01
 1.19629916e+01 5.32732605e+00 8.98703738e-01]
E = -127.25919841265977
E = -127.25919841265977
exp = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
