#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6686617         1
[INPUT] 0    0    [1    /1   ]  0.949939894293       1
[INPUT] 0    0    [1    /1   ]  1298.44577446        1
[INPUT] 0    0    [1    /1   ]  195.967741336        1
[INPUT] 0    0    [1    /1   ]  44.2130368465        1
[INPUT] 0    0    [1    /1   ]  11.9629915723        1
[INPUT] 1    0    [1    /1   ]  5.32732605274        1
[INPUT] 1    0    [1    /1   ]  0.898703738215       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6686616958089, 1.0]], [0, [0.9499398942930367, 1.0]], [0, [1298.4457744638726, 1.0]], [0, [195.9677413362171, 1.0]], [0, [44.213036846502206, 1.0]], [0, [11.962991572315653, 1.0]], [1, [5.327326052740591, 1.0]], [1, [0.8987037382151711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6686617]
bas 1, expnt(s) = [0.94993989]
bas 2, expnt(s) = [1298.44577446]
bas 3, expnt(s) = [195.96774134]
bas 4, expnt(s) = [44.21303685]
bas 5, expnt(s) = [11.96299157]
bas 6, expnt(s) = [5.32732605]
bas 7, expnt(s) = [0.89870374]
CPU time:         1.48
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766866e+03 7.40715328e+02 9.49939894e-01 2.43101209e+00
 1.29844577e+03 5.46490840e+02 1.95967741e+02 1.32328523e+02
 4.42130368e+01 4.33189363e+01 1.19629916e+01 1.62515531e+01
 5.32732605e+00 2.36113593e+01 8.98703738e-01 2.55273115e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82748000357977
cond(S) = 150.16193241890338
E1 = -181.27810167166314  E_coul = 54.36133457266917
init E= -126.916767098994
    CPU time for initialize scf      0.15 sec, wall time      0.15 sec
  HOMO = -0.649480285859295  LUMO = 5.34680527891875
  mo_energy =
[-3.26680675e+01 -1.83786360e+00 -6.49480286e-01 -6.49480286e-01
 -6.49480286e-01  5.34680528e+00  5.34680528e+00  5.34680528e+00
  3.29896345e+01  2.80812180e+02  1.78574156e+03  6.57481318e+03]
E1 = -181.59054683749636  E_coul = 54.32805847662543
cycle= 1 E= -127.262488360871  delta_E= -0.346  |g|= 0.093  |ddm|= 0.319
    CPU time for cycle= 1      0.30 sec, wall time      0.31 sec
diis-norm(errvec)=0.114574
diis-c [-0.01312727  1.        ]
  HOMO = -0.610537566358848  LUMO = 5.36846677126795
  mo_energy =
[-3.28322973e+01 -1.80345634e+00 -6.10537566e-01 -6.10537566e-01
 -6.10537566e-01  5.36846677e+00  5.36846677e+00  5.36846677e+00
  3.28875672e+01  2.80622226e+02  1.78550338e+03  6.57454930e+03]
E1 = -181.6910516433499  E_coul = 54.4283097381766
cycle= 2 E= -127.262741905173  delta_E= -0.000254  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.09 sec, wall time      0.09 sec
diis-norm(errvec)=0.014169
diis-c [-9.87246259e-05  8.13021099e-02  9.18697890e-01]
  HOMO = -0.604914467382118  LUMO = 5.37757057761761
  mo_energy =
[-3.28095800e+01 -1.79697367e+00 -6.04914467e-01 -6.04914467e-01
 -6.04914467e-01  5.37757058e+00  5.37757058e+00  5.37757058e+00
  3.29068327e+01  2.80648094e+02  1.78553231e+03  6.57457912e+03]
E1 = -181.6751098276028  E_coul = 54.41236060328287
cycle= 3 E= -127.26274922432  delta_E= -7.32e-06  |g|= 0.000943  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112277
diis-c [-1.71523499e-08 -2.86382161e-03  5.72677367e-02  9.45596085e-01]
  HOMO = -0.605334818347209  LUMO = 5.37690442746116
  mo_energy =
[-3.28111582e+01 -1.79745422e+00 -6.05334818e-01 -6.05334818e-01
 -6.05334818e-01  5.37690443e+00  5.37690443e+00  5.37690443e+00
  3.29054814e+01  2.80646522e+02  1.78553074e+03  6.57457756e+03]
E1 = -181.67627167418067  E_coul = 54.413522404571815
cycle= 4 E= -127.262749269609  delta_E= -4.53e-08  |g|= 2.57e-06  |ddm|= 0.000182
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.08486e-06
diis-c [-3.13733160e-13  3.91392580e-05 -1.26089960e-03 -1.81643053e-02
  1.01938607e+00]
  HOMO = -0.605334492567936  LUMO = 5.37690498593949
  mo_energy =
[-3.28111567e+01 -1.79745372e+00 -6.05334493e-01 -6.05334493e-01
 -6.05334493e-01  5.37690499e+00  5.37690499e+00  5.37690499e+00
  3.29054832e+01  2.80646525e+02  1.78553075e+03  6.57457757e+03]
E1 = -181.67627087925896  E_coul = 54.41352160964998
cycle= 5 E= -127.262749269609  delta_E= -1.14e-13  |g|= 3.03e-08  |ddm|= 1.98e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67627087925896  E_coul = 54.41352160964998
  HOMO = -0.605334485354269  LUMO = 5.37690499596951
  mo_energy =
[-3.28111567e+01 -1.79745370e+00 -6.05334485e-01 -6.05334485e-01
 -6.05334485e-01  5.37690500e+00  5.37690500e+00  5.37690500e+00
  3.29054832e+01  2.80646525e+02  1.78553075e+03  6.57457757e+03]
E1 = -181.67627086815563  E_coul = 54.41352159854657
Extra cycle  E= -127.262749269609  delta_E= -8.53e-14  |g|= 1.34e-09  |ddm|= 2.78e-09
    CPU time for scf_cycle      0.58 sec, wall time      0.59 sec
exp = [1.94766866e+03 9.49939894e-01 1.29844577e+03 1.95967741e+02
 4.42130368e+01 1.19629916e+01 5.32732605e+00 8.98703738e-01]
E = -127.26274926960906
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.6686617         1
[INPUT] 0    0    [1    /1   ]  0.949939894293       1
[INPUT] 0    0    [1    /1   ]  1298.44577446        1
[INPUT] 0    0    [1    /1   ]  195.967741336        1
[INPUT] 0    0    [1    /1   ]  44.2130368465        1
[INPUT] 0    0    [1    /1   ]  11.9629915723        1
[INPUT] 1    0    [1    /1   ]  5.32732605274        1
[INPUT] 1    0    [1    /1   ]  0.898703738215       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6686616958089, 1.0]], [0, [0.9499398942930367, 1.0]], [0, [1298.4457744638726, 1.0]], [0, [195.9677413362171, 1.0]], [0, [44.213036846502206, 1.0]], [0, [11.962991572315653, 1.0]], [1, [5.327326052740591, 1.0]], [1, [0.8987037382151711, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.6686617]
bas 1, expnt(s) = [0.94993989]
bas 2, expnt(s) = [1298.44577446]
bas 3, expnt(s) = [195.96774134]
bas 4, expnt(s) = [44.21303685]
bas 5, expnt(s) = [11.96299157]
bas 6, expnt(s) = [5.32732605]
bas 7, expnt(s) = [0.89870374]
CPU time:         2.26
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766866e+03 7.40715328e+02 9.49939894e-01 2.43101209e+00
 1.29844577e+03 5.46490840e+02 1.95967741e+02 1.32328523e+02
 4.42130368e+01 4.33189363e+01 1.19629916e+01 1.62515531e+01
 5.32732605e+00 2.36113593e+01 8.98703738e-01 2.55273115e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82748000357977
cond(S) = 150.16193241890338
E1 = -181.27810167166314  E_coul = 54.36133457266917
init E= -126.916767098994
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649480285859295  LUMO = 5.34680527891875
  mo_energy =
[-3.26680675e+01 -1.83786360e+00 -6.49480286e-01 -6.49480286e-01
 -6.49480286e-01  5.34680528e+00  5.34680528e+00  5.34680528e+00
  3.29896345e+01  2.80812180e+02  1.78574156e+03  6.57481318e+03]
E1 = -181.59054683749636  E_coul = 54.32805847662543
cycle= 1 E= -127.262488360871  delta_E= -0.346  |g|= 0.093  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114574
diis-c [-0.01312727  1.        ]
  HOMO = -0.610537566358848  LUMO = 5.36846677126795
  mo_energy =
[-3.28322973e+01 -1.80345634e+00 -6.10537566e-01 -6.10537566e-01
 -6.10537566e-01  5.36846677e+00  5.36846677e+00  5.36846677e+00
  3.28875672e+01  2.80622226e+02  1.78550338e+03  6.57454930e+03]
E1 = -181.6910516433499  E_coul = 54.4283097381766
cycle= 2 E= -127.262741905173  delta_E= -0.000254  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.014169
diis-c [-9.87246259e-05  8.13021099e-02  9.18697890e-01]
  HOMO = -0.604914467382118  LUMO = 5.37757057761761
  mo_energy =
[-3.28095800e+01 -1.79697367e+00 -6.04914467e-01 -6.04914467e-01
 -6.04914467e-01  5.37757058e+00  5.37757058e+00  5.37757058e+00
  3.29068327e+01  2.80648094e+02  1.78553231e+03  6.57457912e+03]
E1 = -181.6751098276028  E_coul = 54.41236060328287
cycle= 3 E= -127.26274922432  delta_E= -7.32e-06  |g|= 0.000943  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112277
diis-c [-1.71523499e-08 -2.86382161e-03  5.72677367e-02  9.45596085e-01]
  HOMO = -0.605334818347209  LUMO = 5.37690442746116
  mo_energy =
[-3.28111582e+01 -1.79745422e+00 -6.05334818e-01 -6.05334818e-01
 -6.05334818e-01  5.37690443e+00  5.37690443e+00  5.37690443e+00
  3.29054814e+01  2.80646522e+02  1.78553074e+03  6.57457756e+03]
E1 = -181.67627167418067  E_coul = 54.413522404571815
cycle= 4 E= -127.262749269609  delta_E= -4.53e-08  |g|= 2.57e-06  |ddm|= 0.000182
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.08486e-06
diis-c [-3.13733160e-13  3.91392580e-05 -1.26089960e-03 -1.81643053e-02
  1.01938607e+00]
  HOMO = -0.605334492567936  LUMO = 5.37690498593949
  mo_energy =
[-3.28111567e+01 -1.79745372e+00 -6.05334493e-01 -6.05334493e-01
 -6.05334493e-01  5.37690499e+00  5.37690499e+00  5.37690499e+00
  3.29054832e+01  2.80646525e+02  1.78553075e+03  6.57457757e+03]
E1 = -181.67627087925896  E_coul = 54.41352160964998
cycle= 5 E= -127.262749269609  delta_E= -1.14e-13  |g|= 3.03e-08  |ddm|= 1.98e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67627087925896  E_coul = 54.41352160964998
  HOMO = -0.605334485354269  LUMO = 5.37690499596951
  mo_energy =
[-3.28111567e+01 -1.79745370e+00 -6.05334485e-01 -6.05334485e-01
 -6.05334485e-01  5.37690500e+00  5.37690500e+00  5.37690500e+00
  3.29054832e+01  2.80646525e+02  1.78553075e+03  6.57457757e+03]
E1 = -181.67627086815563  E_coul = 54.41352159854657
Extra cycle  E= -127.262749269609  delta_E= -8.53e-14  |g|= 1.34e-09  |ddm|= 2.78e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.16193241890338
E1 = -181.67627086815563  E_coul = 54.41352159854657
init E= -127.262749269609
    CPU time for initialize scf      0.32 sec, wall time      0.32 sec
  HOMO = -0.60533448599389  LUMO = 5.37690499489539
  mo_energy =
[-3.28111567e+01 -1.79745370e+00 -6.05334486e-01 -6.05334486e-01
 -6.05334486e-01  5.37690499e+00  5.37690499e+00  5.37690499e+00
  3.29054832e+01  2.80646525e+02  1.78553075e+03  6.57457757e+03]
E1 = -181.6762708702543  E_coul = 54.413521600645296
cycle= 1 E= -127.262749269609  delta_E= 4.26e-14  |g|= 2.55e-10  |ddm|= 3.41e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6762708702543  E_coul = 54.413521600645296
  HOMO = -0.605334485862473  LUMO = 5.37690499510494
  mo_energy =
[-3.28111567e+01 -1.79745370e+00 -6.05334486e-01 -6.05334486e-01
 -6.05334486e-01  5.37690500e+00  5.37690500e+00  5.37690500e+00
  3.29054832e+01  2.80646525e+02  1.78553075e+03  6.57457757e+03]
E1 = -181.6762708698959  E_coul = 54.4135216002869
Extra cycle  E= -127.262749269609  delta_E= 2.84e-14  |g|= 4.17e-11  |ddm|= 5.62e-11
    CPU time for scf_cycle      1.15 sec, wall time      1.15 sec
exp = [1.94766866e+03 9.49939894e-01 1.29844577e+03 1.95967741e+02
 4.42130368e+01 1.19629916e+01 5.32732605e+00 8.98703738e-01]
grad_E = [-9.39412879e-06  1.19753292e-04  5.86126384e-05 -4.36149053e-04
  1.10105715e-03 -1.60035665e-03 -1.46042447e-05 -4.66053152e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66867109        1
[INPUT] 0    0    [1    /1   ]  0.949820141001       1
[INPUT] 0    0    [1    /1   ]  1298.44571585        1
[INPUT] 0    0    [1    /1   ]  195.968177485        1
[INPUT] 0    0    [1    /1   ]  44.2119357894        1
[INPUT] 0    0    [1    /1   ]  11.964591929         1
[INPUT] 1    0    [1    /1   ]  5.32734065699        1
[INPUT] 1    0    [1    /1   ]  0.89875034353        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6686710899376, 1.0]], [0, [0.9498201410012134, 1.0]], [0, [1298.4457158512341, 1.0]], [0, [195.96817748527056, 1.0]], [0, [44.2119357893529, 1.0]], [0, [11.964591928962777, 1.0]], [1, [5.327340656985245, 1.0]], [1, [0.8987503435304048, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66867109]
bas 1, expnt(s) = [0.94982014]
bas 2, expnt(s) = [1298.44571585]
bas 3, expnt(s) = [195.96817749]
bas 4, expnt(s) = [44.21193579]
bas 5, expnt(s) = [11.96459193]
bas 6, expnt(s) = [5.32734066]
bas 7, expnt(s) = [0.89875034]
CPU time:         7.81
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766867e+03 7.40715330e+02 9.49820141e-01 2.43078224e+00
 1.29844572e+03 5.46490822e+02 1.95968177e+02 1.32328744e+02
 4.42119358e+01 4.33181272e+01 1.19645919e+01 1.62531836e+01
 5.32734066e+00 2.36114402e+01 8.98750344e-01 2.55289663e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827473423437176
cond(S) = 150.16329331776524
E1 = -181.27771492490868  E_coul = 54.36105931111349
init E= -126.916655613795
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649499034078917  LUMO = 5.34695260178988
  mo_energy =
[-3.26681197e+01 -1.83789288e+00 -6.49499034e-01 -6.49499034e-01
 -6.49499034e-01  5.34695260e+00  5.34695260e+00  5.34695260e+00
  3.29923463e+01  2.80814918e+02  1.78574397e+03  6.57481551e+03]
E1 = -181.59081199228604  E_coul = 54.32831940503946
cycle= 1 E= -127.262492587247  delta_E= -0.346  |g|= 0.093  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114529
diis-c [-0.01311698  1.        ]
  HOMO = -0.610523694233001  LUMO = 5.36866752988403
  mo_energy =
[-3.28322312e+01 -1.80343548e+00 -6.10523694e-01 -6.10523694e-01
 -6.10523694e-01  5.36866753e+00  5.36866753e+00  5.36866753e+00
  3.28903933e+01  2.80625116e+02  1.78550593e+03  6.57455178e+03]
E1 = -181.69122344936915  E_coul = 54.42847770227177
cycle= 2 E= -127.262745747097  delta_E= -0.000253  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141556
diis-c [-9.87043027e-05  8.11996611e-02  9.18800339e-01]
  HOMO = -0.604905190523833  LUMO = 5.37776380832267
  mo_energy =
[-3.28095320e+01 -1.79695848e+00 -6.04905191e-01 -6.04905191e-01
 -6.04905191e-01  5.37776381e+00  5.37776381e+00  5.37776381e+00
  3.29096440e+01  2.80650965e+02  1.78553484e+03  6.57458159e+03]
E1 = -181.67529608313453  E_coul = 54.41254303133975
cycle= 3 E= -127.262753051795  delta_E= -7.3e-06  |g|= 0.000944  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112319
diis-c [-1.71874120e-08 -2.86660312e-03  5.73450205e-02  9.45521583e-01]
  HOMO = -0.605325724096339  LUMO = 5.37709736871198
  mo_energy =
[-3.28111111e+01 -1.79743919e+00 -6.05325724e-01 -6.05325724e-01
 -6.05325724e-01  5.37709737e+00  5.37709737e+00  5.37709737e+00
  3.29082921e+01  2.80649392e+02  1.78553327e+03  6.57458002e+03]
E1 = -181.67645837931363  E_coul = 54.41370528219361
cycle= 4 E= -127.26275309712  delta_E= -4.53e-08  |g|= 2.57e-06  |ddm|= 0.000182
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.08791e-06
diis-c [-3.14711262e-13  3.92175205e-05 -1.26256446e-03 -1.81614943e-02
  1.01938484e+00]
  HOMO = -0.605325396037082  LUMO = 5.37709793058337
  mo_energy =
[-3.28111095e+01 -1.79743868e+00 -6.05325396e-01 -6.05325396e-01
 -6.05325396e-01  5.37709793e+00  5.37709793e+00  5.37709793e+00
  3.29082939e+01  2.80649395e+02  1.78553328e+03  6.57458003e+03]
E1 = -181.67645757955606  E_coul = 54.41370448243596
cycle= 5 E= -127.26275309712  delta_E= -7.11e-14  |g|= 3.03e-08  |ddm|= 1.98e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67645757955606  E_coul = 54.41370448243596
  HOMO = -0.605325388842074  LUMO = 5.37709794058229
  mo_energy =
[-3.28111095e+01 -1.79743867e+00 -6.05325389e-01 -6.05325389e-01
 -6.05325389e-01  5.37709794e+00  5.37709794e+00  5.37709794e+00
  3.29082939e+01  2.80649395e+02  1.78553328e+03  6.57458003e+03]
E1 = -181.67645756851536  E_coul = 54.41370447139528
Extra cycle  E= -127.26275309712  delta_E= 1.42e-14  |g|= 1.33e-09  |ddm|= 2.78e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94766867e+03 9.49820141e-01 1.29844572e+03 1.95968177e+02
 4.42119358e+01 1.19645919e+01 5.32734066e+00 8.98750344e-01]
E = -127.26275309712008
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66867109        1
[INPUT] 0    0    [1    /1   ]  0.949820141001       1
[INPUT] 0    0    [1    /1   ]  1298.44571585        1
[INPUT] 0    0    [1    /1   ]  195.968177485        1
[INPUT] 0    0    [1    /1   ]  44.2119357894        1
[INPUT] 0    0    [1    /1   ]  11.964591929         1
[INPUT] 1    0    [1    /1   ]  5.32734065699        1
[INPUT] 1    0    [1    /1   ]  0.89875034353        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6686710899376, 1.0]], [0, [0.9498201410012134, 1.0]], [0, [1298.4457158512341, 1.0]], [0, [195.96817748527056, 1.0]], [0, [44.2119357893529, 1.0]], [0, [11.964591928962777, 1.0]], [1, [5.327340656985245, 1.0]], [1, [0.8987503435304048, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66867109]
bas 1, expnt(s) = [0.94982014]
bas 2, expnt(s) = [1298.44571585]
bas 3, expnt(s) = [195.96817749]
bas 4, expnt(s) = [44.21193579]
bas 5, expnt(s) = [11.96459193]
bas 6, expnt(s) = [5.32734066]
bas 7, expnt(s) = [0.89875034]
CPU time:         7.94
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766867e+03 7.40715330e+02 9.49820141e-01 2.43078224e+00
 1.29844572e+03 5.46490822e+02 1.95968177e+02 1.32328744e+02
 4.42119358e+01 4.33181272e+01 1.19645919e+01 1.62531836e+01
 5.32734066e+00 2.36114402e+01 8.98750344e-01 2.55289663e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827473423437176
cond(S) = 150.16329331776524
E1 = -181.27771492490868  E_coul = 54.36105931111349
init E= -126.916655613795
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649499034078917  LUMO = 5.34695260178988
  mo_energy =
[-3.26681197e+01 -1.83789288e+00 -6.49499034e-01 -6.49499034e-01
 -6.49499034e-01  5.34695260e+00  5.34695260e+00  5.34695260e+00
  3.29923463e+01  2.80814918e+02  1.78574397e+03  6.57481551e+03]
E1 = -181.59081199228604  E_coul = 54.32831940503946
cycle= 1 E= -127.262492587247  delta_E= -0.346  |g|= 0.093  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114529
diis-c [-0.01311698  1.        ]
  HOMO = -0.610523694233001  LUMO = 5.36866752988403
  mo_energy =
[-3.28322312e+01 -1.80343548e+00 -6.10523694e-01 -6.10523694e-01
 -6.10523694e-01  5.36866753e+00  5.36866753e+00  5.36866753e+00
  3.28903933e+01  2.80625116e+02  1.78550593e+03  6.57455178e+03]
E1 = -181.69122344936915  E_coul = 54.42847770227177
cycle= 2 E= -127.262745747097  delta_E= -0.000253  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141556
diis-c [-9.87043027e-05  8.11996611e-02  9.18800339e-01]
  HOMO = -0.604905190523833  LUMO = 5.37776380832267
  mo_energy =
[-3.28095320e+01 -1.79695848e+00 -6.04905191e-01 -6.04905191e-01
 -6.04905191e-01  5.37776381e+00  5.37776381e+00  5.37776381e+00
  3.29096440e+01  2.80650965e+02  1.78553484e+03  6.57458159e+03]
E1 = -181.67529608313453  E_coul = 54.41254303133975
cycle= 3 E= -127.262753051795  delta_E= -7.3e-06  |g|= 0.000944  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112319
diis-c [-1.71874120e-08 -2.86660312e-03  5.73450205e-02  9.45521583e-01]
  HOMO = -0.605325724096339  LUMO = 5.37709736871198
  mo_energy =
[-3.28111111e+01 -1.79743919e+00 -6.05325724e-01 -6.05325724e-01
 -6.05325724e-01  5.37709737e+00  5.37709737e+00  5.37709737e+00
  3.29082921e+01  2.80649392e+02  1.78553327e+03  6.57458002e+03]
E1 = -181.67645837931363  E_coul = 54.41370528219361
cycle= 4 E= -127.26275309712  delta_E= -4.53e-08  |g|= 2.57e-06  |ddm|= 0.000182
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.08791e-06
diis-c [-3.14711262e-13  3.92175205e-05 -1.26256446e-03 -1.81614943e-02
  1.01938484e+00]
  HOMO = -0.605325396037082  LUMO = 5.37709793058337
  mo_energy =
[-3.28111095e+01 -1.79743868e+00 -6.05325396e-01 -6.05325396e-01
 -6.05325396e-01  5.37709793e+00  5.37709793e+00  5.37709793e+00
  3.29082939e+01  2.80649395e+02  1.78553328e+03  6.57458003e+03]
E1 = -181.67645757955606  E_coul = 54.41370448243596
cycle= 5 E= -127.26275309712  delta_E= -7.11e-14  |g|= 3.03e-08  |ddm|= 1.98e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67645757955606  E_coul = 54.41370448243596
  HOMO = -0.605325388842074  LUMO = 5.37709794058229
  mo_energy =
[-3.28111095e+01 -1.79743867e+00 -6.05325389e-01 -6.05325389e-01
 -6.05325389e-01  5.37709794e+00  5.37709794e+00  5.37709794e+00
  3.29082939e+01  2.80649395e+02  1.78553328e+03  6.57458003e+03]
E1 = -181.67645756851536  E_coul = 54.41370447139528
Extra cycle  E= -127.26275309712  delta_E= 1.42e-14  |g|= 1.33e-09  |ddm|= 2.78e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.16329331776524
E1 = -181.67645756851536  E_coul = 54.41370447139528
init E= -127.26275309712
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.605325389477771  LUMO = 5.37709793951445
  mo_energy =
[-3.28111095e+01 -1.79743867e+00 -6.05325389e-01 -6.05325389e-01
 -6.05325389e-01  5.37709794e+00  5.37709794e+00  5.37709794e+00
  3.29082939e+01  2.80649395e+02  1.78553328e+03  6.57458003e+03]
E1 = -181.67645757060356  E_coul = 54.41370447348333
cycle= 1 E= -127.26275309712  delta_E= -1.42e-13  |g|= 2.54e-10  |ddm|= 3.39e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67645757060356  E_coul = 54.41370447348333
  HOMO = -0.605325389347014  LUMO = 5.37709793972294
  mo_energy =
[-3.28111095e+01 -1.79743867e+00 -6.05325389e-01 -6.05325389e-01
 -6.05325389e-01  5.37709794e+00  5.37709794e+00  5.37709794e+00
  3.29082939e+01  2.80649395e+02  1.78553328e+03  6.57458003e+03]
E1 = -181.676457570247  E_coul = 54.41370447312677
Extra cycle  E= -127.26275309712  delta_E= -1.42e-14  |g|= 4.14e-11  |ddm|= 5.6e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766867e+03 9.49820141e-01 1.29844572e+03 1.95968177e+02
 4.42119358e+01 1.19645919e+01 5.32734066e+00 8.98750344e-01]
grad_E = [-9.39801872e-06 -3.38776538e-04  5.85905534e-05 -4.33864900e-04
  1.06949607e-03 -1.47478975e-03 -6.98632845e-05  4.26518272e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66874005        1
[INPUT] 0    0    [1    /1   ]  0.951233910646       1
[INPUT] 0    0    [1    /1   ]  1298.4452858         1
[INPUT] 0    0    [1    /1   ]  195.971366999        1
[INPUT] 0    0    [1    /1   ]  44.2040128435        1
[INPUT] 0    0    [1    /1   ]  11.9757092468        1
[INPUT] 1    0    [1    /1   ]  5.32772413397        1
[INPUT] 1    0    [1    /1   ]  0.896726765933       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6687400536903, 1.0]], [0, [0.9512339106461981, 1.0]], [0, [1298.4452857985648, 1.0]], [0, [195.9713669991767, 1.0]], [0, [44.20401284350738, 1.0]], [0, [11.975709246817361, 1.0]], [1, [5.327724133967416, 1.0]], [1, [0.8967267659329282, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66874005]
bas 1, expnt(s) = [0.95123391]
bas 2, expnt(s) = [1298.4452858]
bas 3, expnt(s) = [195.971367]
bas 4, expnt(s) = [44.20401284]
bas 5, expnt(s) = [11.97570925]
bas 6, expnt(s) = [5.32772413]
bas 7, expnt(s) = [0.89672677]
CPU time:        10.44
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766874e+03 7.40715350e+02 9.51233911e-01 2.43349533e+00
 1.29844529e+03 5.46490686e+02 1.95971367e+02 1.32330359e+02
 4.42040128e+01 4.33123050e+01 1.19757092e+01 1.62645090e+01
 5.32772413e+00 2.36135648e+01 8.96726766e-01 2.54571369e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.828143433167737
cond(S) = 150.17917106049904
E1 = -181.2818480968718  E_coul = 54.363887467729356
init E= -126.917960629142
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.6494605708294  LUMO = 5.34024208351899
  mo_energy =
[-3.26667705e+01 -1.83796882e+00 -6.49460571e-01 -6.49460571e-01
 -6.49460571e-01  5.34024208e+00  5.34024208e+00  5.34024208e+00
  3.30223157e+01  2.80842326e+02  1.78576788e+03  6.57483855e+03]
E1 = -181.568677212792  E_coul = 54.30620961869616
cycle= 1 E= -127.262467594096  delta_E= -0.345  |g|= 0.0954  |ddm|= 0.32
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.116918
diis-c [-0.01366983  1.        ]
  HOMO = -0.612225148475958  LUMO = 5.35939980927729
  mo_energy =
[-3.28358619e+01 -1.80575428e+00 -6.12225148e-01 -6.12225148e-01
 -6.12225148e-01  5.35939981e+00  5.35939981e+00  5.35939981e+00
  3.29155593e+01  2.80647807e+02  1.78552529e+03  6.57457037e+03]
E1 = -181.67312177532403  E_coul = 54.41038217882796
cycle= 2 E= -127.262739596496  delta_E= -0.000272  |g|= 0.0121  |ddm|= 0.0162
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0147409
diis-c [-1.02519291e-04  8.42291958e-02  9.15770804e-01]
  HOMO = -0.606401365919956  LUMO = 5.36883458094845
  mo_energy =
[-3.28123360e+01 -1.79903200e+00 -6.06401366e-01 -6.06401366e-01
 -6.06401366e-01  5.36883458e+00  5.36883458e+00  5.36883458e+00
  3.29355073e+01  2.80674555e+02  1.78555517e+03  6.57460116e+03]
E1 = -181.65655779934897  E_coul = 54.39381026633615
cycle= 3 E= -127.262747533013  delta_E= -7.94e-06  |g|= 0.000946  |ddm|= 0.0026
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00112433
diis-c [-1.64282184e-08 -2.87419927e-03  5.46548845e-02  9.48219315e-01]
  HOMO = -0.606821721738272  LUMO = 5.36816844559087
  mo_energy =
[-3.28139110e+01 -1.79951367e+00 -6.06821722e-01 -6.06821722e-01
 -6.06821722e-01  5.36816845e+00  5.36816845e+00  5.36816845e+00
  3.29341567e+01  2.80672992e+02  1.78555361e+03  6.57459962e+03]
E1 = -181.65772156588284  E_coul = 54.39497398747347
cycle= 4 E= -127.262747578409  delta_E= -4.54e-08  |g|= 2.48e-06  |ddm|= 0.000182
    CPU time for cycle= 4      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=2.97677e-06
diis-c [-2.97647791e-13  3.88457761e-05 -1.18846079e-03 -1.80277646e-02
  1.01917738e+00]
  HOMO = -0.606821442957373  LUMO = 5.3681689305481
  mo_energy =
[-3.28139096e+01 -1.79951324e+00 -6.06821443e-01 -6.06821443e-01
 -6.06821443e-01  5.36816893e+00  5.36816893e+00  5.36816893e+00
  3.29341583e+01  2.80672995e+02  1.78555362e+03  6.57459962e+03]
E1 = -181.65772087234672  E_coul = 54.39497329393734
cycle= 5 E= -127.262747578409  delta_E=    0  |g|= 2.92e-08  |ddm|= 1.81e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.65772087234672  E_coul = 54.39497329393734
  HOMO = -0.606821436097437  LUMO = 5.36816894009629
  mo_energy =
[-3.28139096e+01 -1.79951323e+00 -6.06821436e-01 -6.06821436e-01
 -6.06821436e-01  5.36816894e+00  5.36816894e+00  5.36816894e+00
  3.29341583e+01  2.80672995e+02  1.78555362e+03  6.57459962e+03]
E1 = -181.65772086189284  E_coul = 54.39497328348348
Extra cycle  E= -127.262747578409  delta_E= 1.42e-14  |g|= 1.27e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [1.94766874e+03 9.51233911e-01 1.29844529e+03 1.95971367e+02
 4.42040128e+01 1.19757092e+01 5.32772413e+00 8.96726766e-01]
E = -127.26274757840936
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66869983        1
[INPUT] 0    0    [1    /1   ]  0.950409404256       1
[INPUT] 0    0    [1    /1   ]  1298.4455366         1
[INPUT] 0    0    [1    /1   ]  195.969506884        1
[INPUT] 0    0    [1    /1   ]  44.2086334827        1
[INPUT] 0    0    [1    /1   ]  11.969225659         1
[INPUT] 1    0    [1    /1   ]  5.32750049129        1
[INPUT] 1    0    [1    /1   ]  0.897906910567       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6686998342282, 1.0]], [0, [0.9504094042562496, 1.0]], [0, [1298.4455366040445, 1.0]], [0, [195.96950688384194, 1.0]], [0, [44.208633482732466, 1.0]], [0, [11.969225659025877, 1.0]], [1, [5.3275004912945665, 1.0]], [1, [0.8979069105665288, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66869983]
bas 1, expnt(s) = [0.9504094]
bas 2, expnt(s) = [1298.4455366]
bas 3, expnt(s) = [195.96950688]
bas 4, expnt(s) = [44.20863348]
bas 5, expnt(s) = [11.96922566]
bas 6, expnt(s) = [5.32750049]
bas 7, expnt(s) = [0.89790691]
CPU time:        10.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766870e+03 7.40715338e+02 9.50409404e-01 2.43191319e+00
 1.29844554e+03 5.46490765e+02 1.95969507e+02 1.32329417e+02
 4.42086335e+01 4.33157005e+01 1.19692257e+01 1.62579044e+01
 5.32750049e+00 2.36123257e+01 8.97906911e-01 2.54990227e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82775409321605
cond(S) = 150.16991048897802
E1 = -181.27947019001448  E_coul = 54.36225139173133
init E= -126.917218798283
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649482528813266  LUMO = 5.34415773617999
  mo_energy =
[-3.26675566e+01 -1.83792385e+00 -6.49482529e-01 -6.49482529e-01
 -6.49482529e-01  5.34415774e+00  5.34415774e+00  5.34415774e+00
  3.30048409e+01  2.80826343e+02  1.78575393e+03  6.57482511e+03]
E1 = -181.58160551736313  E_coul = 54.31911517844688
cycle= 1 E= -127.262490338916  delta_E= -0.345  |g|= 0.094  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.115519
diis-c [-0.01334459  1.        ]
  HOMO = -0.611233055459513  LUMO = 5.36480647808781
  mo_energy =
[-3.28337431e+01 -1.80440120e+00 -6.11233055e-01 -6.11233055e-01
 -6.11233055e-01  5.36480648e+00  5.36480648e+00  5.36480648e+00
  3.29008861e+01  2.80634576e+02  1.78551400e+03  6.57455953e+03]
E1 = -181.68369499882263  E_coul = 54.42094374654328
cycle= 2 E= -127.262751252279  delta_E= -0.000261  |g|= 0.0118  |ddm|= 0.0158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0143989
diis-c [-1.00301478e-04  8.24798899e-02  9.17520110e-01]
  HOMO = -0.60552905757845  LUMO = 5.37404366696734
  mo_energy =
[-3.28106997e+01 -1.79782215e+00 -6.05529058e-01 -6.05529058e-01
 -6.05529058e-01  5.37404367e+00  5.37404367e+00  5.37404367e+00
  3.29204272e+01  2.80660799e+02  1.78554331e+03  6.57458975e+03]
E1 = -181.66750295593607  E_coul = 54.40474413948224
cycle= 3 E= -127.262758816454  delta_E= -7.56e-06  |g|= 0.000945  |ddm|= 0.00254
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112377
diis-c [-1.68684887e-08 -2.86965282e-03  5.62091324e-02  9.46660520e-01]
  HOMO = -0.605949556134842  LUMO = 5.37337729070796
  mo_energy =
[-3.28122772e+01 -1.79830330e+00 -6.05949556e-01 -6.05949556e-01
 -6.05949556e-01  5.37337729e+00  5.37337729e+00  5.37337729e+00
  3.29190757e+01  2.80659230e+02  1.78554175e+03  6.57458819e+03]
E1 = -181.66866597777533  E_coul = 54.40590711595758
cycle= 4 E= -127.262758861818  delta_E= -4.54e-08  |g|= 2.53e-06  |ddm|= 0.000182
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04108e-06
diis-c [-3.07659268e-13  3.90685665e-05 -1.23129500e-03 -1.81094632e-02
  1.01930169e+00]
  HOMO = -0.605949248991177  LUMO = 5.37337781996543
  mo_energy =
[-3.28122757e+01 -1.79830283e+00 -6.05949249e-01 -6.05949249e-01
 -6.05949249e-01  5.37337782e+00  5.37337782e+00  5.37337782e+00
  3.29190774e+01  2.80659233e+02  1.78554176e+03  6.57458819e+03]
E1 = -181.66866522323173  E_coul = 54.405906361413955
cycle= 5 E= -127.262758861818  delta_E= -1.42e-14  |g|= 2.99e-08  |ddm|= 1.91e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66866522323173  E_coul = 54.405906361413955
  HOMO = -0.605949241934621  LUMO = 5.37337782977798
  mo_energy =
[-3.28122757e+01 -1.79830282e+00 -6.05949242e-01 -6.05949242e-01
 -6.05949242e-01  5.37337783e+00  5.37337783e+00  5.37337783e+00
  3.29190774e+01  2.80659233e+02  1.78554176e+03  6.57458819e+03]
E1 = -181.6686652124336  E_coul = 54.40590635061587
Extra cycle  E= -127.262758861818  delta_E= 4.26e-14  |g|= 1.3e-09  |ddm|= 2.74e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.94766870e+03 9.50409404e-01 1.29844554e+03 1.95969507e+02
 4.42086335e+01 1.19692257e+01 5.32750049e+00 8.97906911e-01]
E = -127.26275886181773
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66869983        1
[INPUT] 0    0    [1    /1   ]  0.950409404256       1
[INPUT] 0    0    [1    /1   ]  1298.4455366         1
[INPUT] 0    0    [1    /1   ]  195.969506884        1
[INPUT] 0    0    [1    /1   ]  44.2086334827        1
[INPUT] 0    0    [1    /1   ]  11.969225659         1
[INPUT] 1    0    [1    /1   ]  5.32750049129        1
[INPUT] 1    0    [1    /1   ]  0.897906910567       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6686998342282, 1.0]], [0, [0.9504094042562496, 1.0]], [0, [1298.4455366040445, 1.0]], [0, [195.96950688384194, 1.0]], [0, [44.208633482732466, 1.0]], [0, [11.969225659025877, 1.0]], [1, [5.3275004912945665, 1.0]], [1, [0.8979069105665288, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66869983]
bas 1, expnt(s) = [0.9504094]
bas 2, expnt(s) = [1298.4455366]
bas 3, expnt(s) = [195.96950688]
bas 4, expnt(s) = [44.20863348]
bas 5, expnt(s) = [11.96922566]
bas 6, expnt(s) = [5.32750049]
bas 7, expnt(s) = [0.89790691]
CPU time:        10.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766870e+03 7.40715338e+02 9.50409404e-01 2.43191319e+00
 1.29844554e+03 5.46490765e+02 1.95969507e+02 1.32329417e+02
 4.42086335e+01 4.33157005e+01 1.19692257e+01 1.62579044e+01
 5.32750049e+00 2.36123257e+01 8.97906911e-01 2.54990227e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82775409321605
cond(S) = 150.16991048897802
E1 = -181.27947019001448  E_coul = 54.36225139173133
init E= -126.917218798283
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649482528813266  LUMO = 5.34415773617999
  mo_energy =
[-3.26675566e+01 -1.83792385e+00 -6.49482529e-01 -6.49482529e-01
 -6.49482529e-01  5.34415774e+00  5.34415774e+00  5.34415774e+00
  3.30048409e+01  2.80826343e+02  1.78575393e+03  6.57482511e+03]
E1 = -181.58160551736313  E_coul = 54.31911517844688
cycle= 1 E= -127.262490338916  delta_E= -0.345  |g|= 0.094  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.115519
diis-c [-0.01334459  1.        ]
  HOMO = -0.611233055459513  LUMO = 5.36480647808781
  mo_energy =
[-3.28337431e+01 -1.80440120e+00 -6.11233055e-01 -6.11233055e-01
 -6.11233055e-01  5.36480648e+00  5.36480648e+00  5.36480648e+00
  3.29008861e+01  2.80634576e+02  1.78551400e+03  6.57455953e+03]
E1 = -181.68369499882263  E_coul = 54.42094374654328
cycle= 2 E= -127.262751252279  delta_E= -0.000261  |g|= 0.0118  |ddm|= 0.0158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0143989
diis-c [-1.00301478e-04  8.24798899e-02  9.17520110e-01]
  HOMO = -0.60552905757845  LUMO = 5.37404366696734
  mo_energy =
[-3.28106997e+01 -1.79782215e+00 -6.05529058e-01 -6.05529058e-01
 -6.05529058e-01  5.37404367e+00  5.37404367e+00  5.37404367e+00
  3.29204272e+01  2.80660799e+02  1.78554331e+03  6.57458975e+03]
E1 = -181.66750295593607  E_coul = 54.40474413948224
cycle= 3 E= -127.262758816454  delta_E= -7.56e-06  |g|= 0.000945  |ddm|= 0.00254
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112377
diis-c [-1.68684887e-08 -2.86965282e-03  5.62091324e-02  9.46660520e-01]
  HOMO = -0.605949556134842  LUMO = 5.37337729070796
  mo_energy =
[-3.28122772e+01 -1.79830330e+00 -6.05949556e-01 -6.05949556e-01
 -6.05949556e-01  5.37337729e+00  5.37337729e+00  5.37337729e+00
  3.29190757e+01  2.80659230e+02  1.78554175e+03  6.57458819e+03]
E1 = -181.66866597777533  E_coul = 54.40590711595758
cycle= 4 E= -127.262758861818  delta_E= -4.54e-08  |g|= 2.53e-06  |ddm|= 0.000182
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04108e-06
diis-c [-3.07659268e-13  3.90685665e-05 -1.23129500e-03 -1.81094632e-02
  1.01930169e+00]
  HOMO = -0.605949248991177  LUMO = 5.37337781996543
  mo_energy =
[-3.28122757e+01 -1.79830283e+00 -6.05949249e-01 -6.05949249e-01
 -6.05949249e-01  5.37337782e+00  5.37337782e+00  5.37337782e+00
  3.29190774e+01  2.80659233e+02  1.78554176e+03  6.57458819e+03]
E1 = -181.66866522323173  E_coul = 54.405906361413955
cycle= 5 E= -127.262758861818  delta_E= -1.42e-14  |g|= 2.99e-08  |ddm|= 1.91e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66866522323173  E_coul = 54.405906361413955
  HOMO = -0.605949241934621  LUMO = 5.37337782977798
  mo_energy =
[-3.28122757e+01 -1.79830282e+00 -6.05949242e-01 -6.05949242e-01
 -6.05949242e-01  5.37337783e+00  5.37337783e+00  5.37337783e+00
  3.29190774e+01  2.80659233e+02  1.78554176e+03  6.57458819e+03]
E1 = -181.6686652124336  E_coul = 54.40590635061587
Extra cycle  E= -127.262758861818  delta_E= 4.26e-14  |g|= 1.3e-09  |ddm|= 2.74e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.16991048897802
E1 = -181.6686652124336  E_coul = 54.40590635061587
init E= -127.262758861818
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605949242555876  LUMO = 5.37337782873372
  mo_energy =
[-3.28122757e+01 -1.79830282e+00 -6.05949243e-01 -6.05949243e-01
 -6.05949243e-01  5.37337783e+00  5.37337783e+00  5.37337783e+00
  3.29190774e+01  2.80659233e+02  1.78554176e+03  6.57458819e+03]
E1 = -181.66866521447986  E_coul = 54.405906352661916
cycle= 1 E= -127.262758861818  delta_E= -2.13e-13  |g|= 2.49e-10  |ddm|= 3.32e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.66866521447986  E_coul = 54.405906352661916
  HOMO = -0.605949242427765  LUMO = 5.37337782893805
  mo_energy =
[-3.28122757e+01 -1.79830282e+00 -6.05949242e-01 -6.05949242e-01
 -6.05949242e-01  5.37337783e+00  5.37337783e+00  5.37337783e+00
  3.29190774e+01  2.80659233e+02  1.78554176e+03  6.57458819e+03]
E1 = -181.66866521413  E_coul = 54.405906352312165
Extra cycle  E= -127.262758861818  delta_E= 1.28e-13  |g|= 4.06e-11  |ddm|= 5.49e-11
    CPU time for scf_cycle      0.13 sec, wall time      0.13 sec
exp = [1.94766870e+03 9.50409404e-01 1.29844554e+03 1.95969507e+02
 4.42086335e+01 1.19692257e+01 5.32750049e+00 8.97906911e-01]
grad_E = [-9.40977985e-06  1.34128834e-03  5.85294545e-05 -4.27339755e-04
  9.78888614e-04 -1.12679375e-03  1.10549858e-03 -9.55851188e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66890322        1
[INPUT] 0    0    [1    /1   ]  0.954774978598       1
[INPUT] 0    0    [1    /1   ]  1298.44426864        1
[INPUT] 0    0    [1    /1   ]  195.978896059        1
[INPUT] 0    0    [1    /1   ]  44.1854906139        1
[INPUT] 0    0    [1    /1   ]  12.0011455533        1
[INPUT] 1    0    [1    /1   ]  5.32768177257        1
[INPUT] 1    0    [1    /1   ]  0.899991039426       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6689032182414, 1.0]], [0, [0.9547749785975894, 1.0]], [0, [1298.444268641169, 1.0]], [0, [195.9788960586897, 1.0]], [0, [44.18549061394157, 1.0]], [0, [12.001145553252467, 1.0]], [1, [5.327681772573645, 1.0]], [1, [0.8999910394257608, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66890322]
bas 1, expnt(s) = [0.95477498]
bas 2, expnt(s) = [1298.44426864]
bas 3, expnt(s) = [195.97889606]
bas 4, expnt(s) = [44.18549061]
bas 5, expnt(s) = [12.00114555]
bas 6, expnt(s) = [5.32768177]
bas 7, expnt(s) = [0.89999104]
CPU time:        13.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766890e+03 7.40715396e+02 9.54774979e-01 2.44028638e+00
 1.29844427e+03 5.46490365e+02 1.95978896e+02 1.32334172e+02
 4.41854906e+01 4.32986928e+01 1.20011456e+01 1.62904114e+01
 5.32768177e+00 2.36133301e+01 8.99991039e-01 2.55730262e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826416764112079
cond(S) = 150.216247832395
E1 = -181.30066028529976  E_coul = 54.37569457993083
init E= -126.924965705369
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648108835849654  LUMO = 5.35358170373257
  mo_energy =
[-3.26655860e+01 -1.83722447e+00 -6.48108836e-01 -6.48108836e-01
 -6.48108836e-01  5.35358170e+00  5.35358170e+00  5.35358170e+00
  3.30912772e+01  2.80902508e+02  1.78581980e+03  6.57488850e+03]
E1 = -181.63385056175676  E_coul = 54.37136798711867
cycle= 1 E= -127.262482574638  delta_E= -0.338  |g|= 0.0916  |ddm|= 0.313
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11175
diis-c [-0.0124881  1.       ]
  HOMO = -0.60715236081101  LUMO = 5.37827163456861
  mo_energy =
[-3.28230092e+01 -1.80122703e+00 -6.07152361e-01 -6.07152361e-01
 -6.07152361e-01  5.37827163e+00  5.37827163e+00  5.37827163e+00
  3.29940912e+01  2.80721168e+02  1.78559141e+03  6.57463487e+03]
E1 = -181.72865325554702  E_coul = 54.46594236311262
cycle= 2 E= -127.262710892434  delta_E= -0.000228  |g|= 0.0109  |ddm|= 0.0147
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0133547
diis-c [-9.46854090e-05  7.59237056e-02  9.24076294e-01]
  HOMO = -0.601829329832328  LUMO = 5.38690053229502
  mo_energy =
[-3.28014087e+01 -1.79508270e+00 -6.01829330e-01 -6.01829330e-01
 -6.01829330e-01  5.38690053e+00  5.38690053e+00  5.38690053e+00
  3.30123692e+01  2.80745881e+02  1.78561915e+03  6.57466350e+03]
E1 = -181.71355234317213  E_coul = 54.4508349581403
cycle= 3 E= -127.262717385032  delta_E= -6.49e-06  |g|= 0.000958  |ddm|= 0.00238
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113528
diis-c [-1.44375926e-08 -2.89913772e-03  6.21916437e-02  9.40707494e-01]
  HOMO = -0.602256654139955  LUMO = 5.38622308416423
  mo_energy =
[-3.28030123e+01 -1.79557395e+00 -6.02256654e-01 -6.02256654e-01
 -6.02256654e-01  5.38622308e+00  5.38622308e+00  5.38622308e+00
  3.30109915e+01  2.80744281e+02  1.78561755e+03  6.57466191e+03]
E1 = -181.7147280878963  E_coul = 54.45201065643703
cycle= 4 E= -127.262717431459  delta_E= -4.64e-08  |g|= 2.27e-06  |ddm|= 0.000184
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.71801e-06
diis-c [-2.51323102e-13  3.74205184e-05 -1.27133514e-03 -1.69994101e-02
  1.01823332e+00]
  HOMO = -0.602256406391053  LUMO = 5.38622353052621
  mo_energy =
[-3.28030110e+01 -1.79557357e+00 -6.02256406e-01 -6.02256406e-01
 -6.02256406e-01  5.38622353e+00  5.38622353e+00  5.38622353e+00
  3.30109929e+01  2.80744284e+02  1.78561756e+03  6.57466191e+03]
E1 = -181.7147274214528  E_coul = 54.452009989993535
cycle= 5 E= -127.262717431459  delta_E=    0  |g|= 2.65e-08  |ddm|= 1.62e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.7147274214528  E_coul = 54.452009989993535
  HOMO = -0.602256400323096  LUMO = 5.38622353889689
  mo_energy =
[-3.28030110e+01 -1.79557356e+00 -6.02256400e-01 -6.02256400e-01
 -6.02256400e-01  5.38622354e+00  5.38622354e+00  5.38622354e+00
  3.30109929e+01  2.80744284e+02  1.78561756e+03  6.57466191e+03]
E1 = -181.71472741250366  E_coul = 54.452009981044405
Extra cycle  E= -127.262717431459  delta_E=    0  |g|= 1.11e-09  |ddm|= 2.4e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766890e+03 9.54774979e-01 1.29844427e+03 1.95978896e+02
 4.41854906e+01 1.20011456e+01 5.32768177e+00 8.99991039e-01]
E = -127.26271743145927
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66876582        1
[INPUT] 0    0    [1    /1   ]  0.951825840575       1
[INPUT] 0    0    [1    /1   ]  1298.44512521        1
[INPUT] 0    0    [1    /1   ]  195.972553257        1
[INPUT] 0    0    [1    /1   ]  44.2011246426        1
[INPUT] 0    0    [1    /1   ]  11.9795822568        1
[INPUT] 1    0    [1    /1   ]  5.32755930907        1
[INPUT] 1    0    [1    /1   ]  0.898583118455       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6687658233698, 1.0]], [0, [0.9518258405749257, 1.0]], [0, [1298.4451252060182, 1.0]], [0, [195.9725532569459, 1.0]], [0, [44.201124642586656, 1.0]], [0, [11.97958225679188, 1.0]], [1, [5.3275593090737425, 1.0]], [1, [0.8985831184553884, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66876582]
bas 1, expnt(s) = [0.95182584]
bas 2, expnt(s) = [1298.44512521]
bas 3, expnt(s) = [195.97255326]
bas 4, expnt(s) = [44.20112464]
bas 5, expnt(s) = [11.97958226]
bas 6, expnt(s) = [5.32755931]
bas 7, expnt(s) = [0.89858312]
CPU time:        13.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766877e+03 7.40715357e+02 9.51825841e-01 2.43463097e+00
 1.29844513e+03 5.46490636e+02 1.95972553e+02 1.32330960e+02
 4.42011246e+01 4.33101825e+01 1.19795823e+01 1.62684539e+01
 5.32755931e+00 2.36126516e+01 8.98583118e-01 2.55230289e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82732340262244
cond(S) = 150.18493924491736
E1 = -181.28646997277426  E_coul = 54.36664681077972
init E= -126.919823161995
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649034318302289  LUMO = 5.34722000185252
  mo_energy =
[-3.26669176e+01 -1.83769966e+00 -6.49034318e-01 -6.49034318e-01
 -6.49034318e-01  5.34722000e+00  5.34722000e+00  5.34722000e+00
  3.30329037e+01  2.80851061e+02  1.78577531e+03  6.57484568e+03]
E1 = -181.5985944855901  E_coul = 54.33608052688473
cycle= 1 E= -127.262513958705  delta_E= -0.343  |g|= 0.0932  |ddm|= 0.317
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114273
diis-c [-0.01305834  1.        ]
  HOMO = -0.609908920554434  LUMO = 5.36917747646624
  mo_energy =
[-3.28302627e+01 -1.80337653e+00 -6.09908921e-01 -6.09908921e-01
 -6.09908921e-01  5.36917748e+00  5.36917748e+00  5.36917748e+00
  3.29311416e+01  2.80662675e+02  1.78553912e+03  6.57458397e+03]
E1 = -181.6983169441462  E_coul = 54.43555293184942
cycle= 2 E= -127.262764012297  delta_E= -0.00025  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140589
diis-c [-9.85347929e-05  8.04204649e-02  9.19579535e-01]
  HOMO = -0.604328457617585  LUMO = 5.37821738835173
  mo_energy =
[-3.28076873e+01 -1.79693823e+00 -6.04328458e-01 -6.04328458e-01
 -6.04328458e-01  5.37821739e+00  5.37821739e+00  5.37821739e+00
  3.29502731e+01  2.80688408e+02  1.78556792e+03  6.57461367e+03]
E1 = -181.6824796145866  E_coul = 54.419708395758676
cycle= 3 E= -127.262771218828  delta_E= -7.21e-06  |g|= 0.000949  |ddm|= 0.00249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112794
diis-c [-1.60494996e-08 -2.87867739e-03  5.80926957e-02  9.44785982e-01]
  HOMO = -0.604751352645715  LUMO = 5.37754713692409
  mo_energy =
[-3.28092739e+01 -1.79742288e+00 -6.04751353e-01 -6.04751353e-01
 -6.04751353e-01  5.37754714e+00  5.37754714e+00  5.37754714e+00
  3.29489125e+01  2.80686829e+02  1.78556634e+03  6.57461210e+03]
E1 = -181.68364722608501  E_coul = 54.42087596151361
cycle= 4 E= -127.262771264571  delta_E= -4.57e-08  |g|= 2.44e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.93462e-06
diis-c [-2.89660535e-13  3.85831724e-05 -1.24548663e-03 -1.77643022e-02
  1.01897121e+00]
  HOMO = -0.604751065340483  LUMO = 5.37754763856099
  mo_energy =
[-3.28092724e+01 -1.79742244e+00 -6.04751065e-01 -6.04751065e-01
 -6.04751065e-01  5.37754764e+00  5.37754764e+00  5.37754764e+00
  3.29489141e+01  2.80686832e+02  1.78556635e+03  6.57461211e+03]
E1 = -181.68364650124025  E_coul = 54.42087523666885
cycle= 5 E= -127.262771264571  delta_E=    0  |g|= 2.88e-08  |ddm|= 1.81e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68364650124025  E_coul = 54.42087523666885
  HOMO = -0.604751058597003  LUMO = 5.37754764791475
  mo_energy =
[-3.28092724e+01 -1.79742243e+00 -6.04751059e-01 -6.04751059e-01
 -6.04751059e-01  5.37754765e+00  5.37754765e+00  5.37754765e+00
  3.29489142e+01  2.80686832e+02  1.78556635e+03  6.57461211e+03]
E1 = -181.68364649103887  E_coul = 54.42087522646743
Extra cycle  E= -127.262771264571  delta_E= -4.26e-14  |g|= 1.24e-09  |ddm|= 2.63e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94766877e+03 9.51825841e-01 1.29844513e+03 1.95972553e+02
 4.42011246e+01 1.19795823e+01 5.32755931e+00 8.98583118e-01]
E = -127.26277126457144
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66876582        1
[INPUT] 0    0    [1    /1   ]  0.951825840575       1
[INPUT] 0    0    [1    /1   ]  1298.44512521        1
[INPUT] 0    0    [1    /1   ]  195.972553257        1
[INPUT] 0    0    [1    /1   ]  44.2011246426        1
[INPUT] 0    0    [1    /1   ]  11.9795822568        1
[INPUT] 1    0    [1    /1   ]  5.32755930907        1
[INPUT] 1    0    [1    /1   ]  0.898583118455       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6687658233698, 1.0]], [0, [0.9518258405749257, 1.0]], [0, [1298.4451252060182, 1.0]], [0, [195.9725532569459, 1.0]], [0, [44.201124642586656, 1.0]], [0, [11.97958225679188, 1.0]], [1, [5.3275593090737425, 1.0]], [1, [0.8985831184553884, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66876582]
bas 1, expnt(s) = [0.95182584]
bas 2, expnt(s) = [1298.44512521]
bas 3, expnt(s) = [195.97255326]
bas 4, expnt(s) = [44.20112464]
bas 5, expnt(s) = [11.97958226]
bas 6, expnt(s) = [5.32755931]
bas 7, expnt(s) = [0.89858312]
CPU time:        13.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766877e+03 7.40715357e+02 9.51825841e-01 2.43463097e+00
 1.29844513e+03 5.46490636e+02 1.95972553e+02 1.32330960e+02
 4.42011246e+01 4.33101825e+01 1.19795823e+01 1.62684539e+01
 5.32755931e+00 2.36126516e+01 8.98583118e-01 2.55230289e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82732340262244
cond(S) = 150.18493924491736
E1 = -181.28646997277426  E_coul = 54.36664681077972
init E= -126.919823161995
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649034318302289  LUMO = 5.34722000185252
  mo_energy =
[-3.26669176e+01 -1.83769966e+00 -6.49034318e-01 -6.49034318e-01
 -6.49034318e-01  5.34722000e+00  5.34722000e+00  5.34722000e+00
  3.30329037e+01  2.80851061e+02  1.78577531e+03  6.57484568e+03]
E1 = -181.5985944855901  E_coul = 54.33608052688473
cycle= 1 E= -127.262513958705  delta_E= -0.343  |g|= 0.0932  |ddm|= 0.317
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114273
diis-c [-0.01305834  1.        ]
  HOMO = -0.609908920554434  LUMO = 5.36917747646624
  mo_energy =
[-3.28302627e+01 -1.80337653e+00 -6.09908921e-01 -6.09908921e-01
 -6.09908921e-01  5.36917748e+00  5.36917748e+00  5.36917748e+00
  3.29311416e+01  2.80662675e+02  1.78553912e+03  6.57458397e+03]
E1 = -181.6983169441462  E_coul = 54.43555293184942
cycle= 2 E= -127.262764012297  delta_E= -0.00025  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140589
diis-c [-9.85347929e-05  8.04204649e-02  9.19579535e-01]
  HOMO = -0.604328457617585  LUMO = 5.37821738835173
  mo_energy =
[-3.28076873e+01 -1.79693823e+00 -6.04328458e-01 -6.04328458e-01
 -6.04328458e-01  5.37821739e+00  5.37821739e+00  5.37821739e+00
  3.29502731e+01  2.80688408e+02  1.78556792e+03  6.57461367e+03]
E1 = -181.6824796145866  E_coul = 54.419708395758676
cycle= 3 E= -127.262771218828  delta_E= -7.21e-06  |g|= 0.000949  |ddm|= 0.00249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112794
diis-c [-1.60494996e-08 -2.87867739e-03  5.80926957e-02  9.44785982e-01]
  HOMO = -0.604751352645715  LUMO = 5.37754713692409
  mo_energy =
[-3.28092739e+01 -1.79742288e+00 -6.04751353e-01 -6.04751353e-01
 -6.04751353e-01  5.37754714e+00  5.37754714e+00  5.37754714e+00
  3.29489125e+01  2.80686829e+02  1.78556634e+03  6.57461210e+03]
E1 = -181.68364722608501  E_coul = 54.42087596151361
cycle= 4 E= -127.262771264571  delta_E= -4.57e-08  |g|= 2.44e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.93462e-06
diis-c [-2.89660535e-13  3.85831724e-05 -1.24548663e-03 -1.77643022e-02
  1.01897121e+00]
  HOMO = -0.604751065340483  LUMO = 5.37754763856099
  mo_energy =
[-3.28092724e+01 -1.79742244e+00 -6.04751065e-01 -6.04751065e-01
 -6.04751065e-01  5.37754764e+00  5.37754764e+00  5.37754764e+00
  3.29489141e+01  2.80686832e+02  1.78556635e+03  6.57461211e+03]
E1 = -181.68364650124025  E_coul = 54.42087523666885
cycle= 5 E= -127.262771264571  delta_E=    0  |g|= 2.88e-08  |ddm|= 1.81e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68364650124025  E_coul = 54.42087523666885
  HOMO = -0.604751058597003  LUMO = 5.37754764791475
  mo_energy =
[-3.28092724e+01 -1.79742243e+00 -6.04751059e-01 -6.04751059e-01
 -6.04751059e-01  5.37754765e+00  5.37754765e+00  5.37754765e+00
  3.29489142e+01  2.80686832e+02  1.78556635e+03  6.57461211e+03]
E1 = -181.68364649103887  E_coul = 54.42087522646743
Extra cycle  E= -127.262771264571  delta_E= -4.26e-14  |g|= 1.24e-09  |ddm|= 2.63e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.18493924491736
E1 = -181.68364649103887  E_coul = 54.42087522646743
init E= -127.262771264571
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604751059182954  LUMO = 5.37754764692889
  mo_energy =
[-3.28092724e+01 -1.79742243e+00 -6.04751059e-01 -6.04751059e-01
 -6.04751059e-01  5.37754765e+00  5.37754765e+00  5.37754765e+00
  3.29489142e+01  2.80686832e+02  1.78556635e+03  6.57461211e+03]
E1 = -181.683646492974  E_coul = 54.420875228402586
cycle= 1 E= -127.262771264571  delta_E= 4.26e-14  |g|= 2.36e-10  |ddm|= 3.15e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.683646492974  E_coul = 54.420875228402586
  HOMO = -0.604751059061771  LUMO = 5.37754764712213
  mo_energy =
[-3.28092724e+01 -1.79742243e+00 -6.04751059e-01 -6.04751059e-01
 -6.04751059e-01  5.37754765e+00  5.37754765e+00  5.37754765e+00
  3.29489142e+01  2.80686832e+02  1.78556635e+03  6.57461211e+03]
E1 = -181.68364649264373  E_coul = 54.42087522807236
Extra cycle  E= -127.262771264571  delta_E= 2.84e-14  |g|= 3.85e-11  |ddm|= 5.18e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766877e+03 9.51825841e-01 1.29844513e+03 1.95972553e+02
 4.42011246e+01 1.19795823e+01 5.32755931e+00 8.98583118e-01]
grad_E = [-9.43652688e-06  7.46942075e-03  5.83901936e-05 -4.12514298e-04
  7.71536149e-04 -3.23893183e-04  1.66549810e-04 -1.92931770e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66890351        1
[INPUT] 0    0    [1    /1   ]  0.948272436592       1
[INPUT] 0    0    [1    /1   ]  1298.44426737        1
[INPUT] 0    0    [1    /1   ]  195.97888038         1
[INPUT] 0    0    [1    /1   ]  44.1858382387        1
[INPUT] 0    0    [1    /1   ]  11.9997240781        1
[INPUT] 1    0    [1    /1   ]  5.32765343674        1
[INPUT] 1    0    [1    /1   ]  0.898839208998       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.66890351063, 1.0]], [0, [0.9482724365915915, 1.0]], [0, [1298.444267372416, 1.0]], [0, [195.9788803804247, 1.0]], [0, [44.185838238650554, 1.0]], [0, [11.999724078069677, 1.0]], [1, [5.327653436739575, 1.0]], [1, [0.898839208998173, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66890351]
bas 1, expnt(s) = [0.94827244]
bas 2, expnt(s) = [1298.44426737]
bas 3, expnt(s) = [195.97888038]
bas 4, expnt(s) = [44.18583824]
bas 5, expnt(s) = [11.99972408]
bas 6, expnt(s) = [5.32765344]
bas 7, expnt(s) = [0.89883921]
CPU time:        16.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766890e+03 7.40715397e+02 9.48272437e-01 2.42781097e+00
 1.29844427e+03 5.46490365e+02 1.95978880e+02 1.32334164e+02
 4.41858382e+01 4.32989483e+01 1.19997241e+01 1.62889642e+01
 5.32765344e+00 2.36131731e+01 8.98839209e-01 2.55321216e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827594351389799
cond(S) = 150.19552050436167
E1 = -181.272591970499  E_coul = 54.35739987415873
init E= -126.91519209634
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649798888251718  LUMO = 5.34709707735977
  mo_energy =
[-3.26684777e+01 -1.83845062e+00 -6.49798888e-01 -6.49798888e-01
 -6.49798888e-01  5.34709708e+00  5.34709708e+00  5.34709708e+00
  3.30562469e+01  2.80874658e+02  1.78579692e+03  6.57486728e+03]
E1 = -181.5879954340655  E_coul = 54.325481292476624
cycle= 1 E= -127.262514141589  delta_E= -0.347  |g|= 0.0937  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114563
diis-c [-0.01312468  1.        ]
  HOMO = -0.610857570052138  LUMO = 5.36887008907783
  mo_energy =
[-3.28321832e+01 -1.80391121e+00 -6.10857570e-01 -6.10857570e-01
 -6.10857570e-01  5.36887009e+00  5.36887009e+00  5.36887009e+00
  3.29546474e+01  2.80686048e+02  1.78556014e+03  6.57460488e+03]
E1 = -181.68811565165004  E_coul = 54.42534885414209
cycle= 2 E= -127.262766797508  delta_E= -0.000253  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141156
diis-c [-9.97652565e-05  8.03722494e-02  9.19627751e-01]
  HOMO = -0.605251005252094  LUMO = 5.37794784394181
  mo_energy =
[-3.28095234e+01 -1.79745138e+00 -6.05251005e-01 -6.05251005e-01
 -6.05251005e-01  5.37794784e+00  5.37794784e+00  5.37794784e+00
  3.29738747e+01  2.80711869e+02  1.78558901e+03  6.57463465e+03]
E1 = -181.67222725041805  E_coul = 54.4094531947351
cycle= 3 E= -127.262774055683  delta_E= -7.26e-06  |g|= 0.000952  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113227
diis-c [-1.74554070e-08 -2.92168835e-03  5.78372520e-02  9.45084436e-01]
  HOMO = -0.605675215545201  LUMO = 5.37727558809812
  mo_energy =
[-3.28111165e+01 -1.79793594e+00 -6.05675216e-01 -6.05675216e-01
 -6.05675216e-01  5.37727559e+00  5.37727559e+00  5.37727559e+00
  3.29725106e+01  2.80710283e+02  1.78558743e+03  6.57463307e+03]
E1 = -181.6733993349679  E_coul = 54.41062523318508
cycle= 4 E= -127.262774101783  delta_E= -4.61e-08  |g|= 2.56e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.08895e-06
diis-c [-3.24302979e-13  4.05239991e-05 -1.26444222e-03 -1.80397151e-02
  1.01926363e+00]
  HOMO = -0.605674868077591  LUMO = 5.3772761774568
  mo_energy =
[-3.28111149e+01 -1.79793541e+00 -6.05674868e-01 -6.05674868e-01
 -6.05674868e-01  5.37727618e+00  5.37727618e+00  5.37727618e+00
  3.29725124e+01  2.80710286e+02  1.78558744e+03  6.57463308e+03]
E1 = -181.67339849438594  E_coul = 54.410624392603076
cycle= 5 E= -127.262774101783  delta_E= -2.84e-14  |g|= 2.99e-08  |ddm|= 2.03e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67339849438594  E_coul = 54.410624392603076
  HOMO = -0.605674861392963  LUMO = 5.37727618665482
  mo_energy =
[-3.28111149e+01 -1.79793540e+00 -6.05674861e-01 -6.05674861e-01
 -6.05674861e-01  5.37727619e+00  5.37727619e+00  5.37727619e+00
  3.29725125e+01  2.80710286e+02  1.78558744e+03  6.57463308e+03]
E1 = -181.67339848480245  E_coul = 54.410624383019666
Extra cycle  E= -127.262774101783  delta_E= 8.53e-14  |g|= 1.2e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94766890e+03 9.48272437e-01 1.29844427e+03 1.95978880e+02
 4.41858382e+01 1.19997241e+01 5.32765344e+00 8.98839209e-01]
E = -127.26277410178278
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66883903        1
[INPUT] 0    0    [1    /1   ]  0.949936411671       1
[INPUT] 0    0    [1    /1   ]  1298.44466908        1
[INPUT] 0    0    [1    /1   ]  195.975917538        1
[INPUT] 0    0    [1    /1   ]  44.1929965002        1
[INPUT] 0    0    [1    /1   ]  11.9902921393        1
[INPUT] 1    0    [1    /1   ]  5.32760935898        1
[INPUT] 1    0    [1    /1   ]  0.898719287851       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6688390349411, 1.0]], [0, [0.9499364116707574, 1.0]], [0, [1298.444669075612, 1.0]], [0, [195.97591753807947, 1.0]], [0, [44.19299650022707, 1.0]], [0, [11.99029213933925, 1.0]], [1, [5.327609358978943, 1.0]], [1, [0.8987192878512383, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66883903]
bas 1, expnt(s) = [0.94993641]
bas 2, expnt(s) = [1298.44466908]
bas 3, expnt(s) = [195.97591754]
bas 4, expnt(s) = [44.1929965]
bas 5, expnt(s) = [11.99029214]
bas 6, expnt(s) = [5.32760936]
bas 7, expnt(s) = [0.89871929]
CPU time:        16.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766884e+03 7.40715378e+02 9.49936412e-01 2.43100541e+00
 1.29844467e+03 5.46490492e+02 1.95975918e+02 1.32332664e+02
 4.41929965e+01 4.33042091e+01 1.19902921e+01 1.62793608e+01
 5.32760936e+00 2.36129289e+01 8.98719288e-01 2.55278636e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827469001475304
cond(S) = 150.19056245927158
E1 = -181.27915211793172  E_coul = 54.36175253053113
init E= -126.917399587401
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649438667359592  LUMO = 5.34715747717612
  mo_energy =
[-3.26677462e+01 -1.83810091e+00 -6.49438667e-01 -6.49438667e-01
 -6.49438667e-01  5.34715748e+00  5.34715748e+00  5.34715748e+00
  3.30453237e+01  2.80863611e+02  1.78578680e+03  6.57485717e+03]
E1 = -181.59297645400616  E_coul = 54.330451257921936
cycle= 1 E= -127.262525196084  delta_E= -0.345  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114426
diis-c [-0.01309335  1.        ]
  HOMO = -0.610412653619863  LUMO = 5.36901505577337
  mo_energy =
[-3.28312853e+01 -1.80366371e+00 -6.10412654e-01 -6.10412654e-01
 -6.10412654e-01  5.36901506e+00  5.36901506e+00  5.36901506e+00
  3.29436453e+01  2.80675104e+02  1.78555029e+03  6.57459509e+03]
E1 = -181.6929124004326  E_coul = 54.43013576787177
cycle= 2 E= -127.262776632561  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140893
diis-c [-9.91835457e-05  8.03998618e-02  9.19600138e-01]
  HOMO = -0.604818230770089  LUMO = 5.37807522382194
  mo_energy =
[-3.28086648e+01 -1.79721385e+00 -6.04818231e-01 -6.04818231e-01
 -6.04818231e-01  5.37807522e+00  5.37807522e+00  5.37807522e+00
  3.29628280e+01  2.80700884e+02  1.78557913e+03  6.57462483e+03]
E1 = -181.6770476884707  E_coul = 54.4142638216618
cycle= 3 E= -127.262783866809  delta_E= -7.23e-06  |g|= 0.000951  |ddm|= 0.00249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113018
diis-c [-1.67909930e-08 -2.90138557e-03  5.79525151e-02  9.44948871e-01]
  HOMO = -0.605241801883285  LUMO = 5.37740394407047
  mo_energy =
[-3.28102547e+01 -1.79769842e+00 -6.05241802e-01 -6.05241802e-01
 -6.05241802e-01  5.37740394e+00  5.37740394e+00  5.37740394e+00
  3.29614656e+01  2.80699301e+02  1.78557756e+03  6.57462325e+03]
E1 = -181.67821761423505  E_coul = 54.41543370149851
cycle= 4 E= -127.262783912737  delta_E= -4.59e-08  |g|= 2.5e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01683e-06
diis-c [-3.08344325e-13  3.96327670e-05 -1.25600307e-03 -1.79188069e-02
  1.01913518e+00]
  HOMO = -0.605241482542478  LUMO = 5.37740449242718
  mo_energy =
[-3.28102532e+01 -1.79769793e+00 -6.05241483e-01 -6.05241483e-01
 -6.05241483e-01  5.37740449e+00  5.37740449e+00  5.37740449e+00
  3.29614673e+01  2.80699304e+02  1.78557756e+03  6.57462326e+03]
E1 = -181.67821682791762  E_coul = 54.4154329151809
cycle= 5 E= -127.262783912737  delta_E= -1.71e-13  |g|= 2.94e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67821682791762  E_coul = 54.4154329151809
  HOMO = -0.605241475825048  LUMO = 5.37740450170513
  mo_energy =
[-3.28102531e+01 -1.79769792e+00 -6.05241476e-01 -6.05241476e-01
 -6.05241476e-01  5.37740450e+00  5.37740450e+00  5.37740450e+00
  3.29614674e+01  2.80699304e+02  1.78557756e+03  6.57462326e+03]
E1 = -181.67821681803787  E_coul = 54.415432905301216
Extra cycle  E= -127.262783912737  delta_E= 7.11e-14  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94766884e+03 9.49936412e-01 1.29844467e+03 1.95975918e+02
 4.41929965e+01 1.19902921e+01 5.32760936e+00 8.98719288e-01]
E = -127.26278391273665
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66883903        1
[INPUT] 0    0    [1    /1   ]  0.949936411671       1
[INPUT] 0    0    [1    /1   ]  1298.44466908        1
[INPUT] 0    0    [1    /1   ]  195.975917538        1
[INPUT] 0    0    [1    /1   ]  44.1929965002        1
[INPUT] 0    0    [1    /1   ]  11.9902921393        1
[INPUT] 1    0    [1    /1   ]  5.32760935898        1
[INPUT] 1    0    [1    /1   ]  0.898719287851       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6688390349411, 1.0]], [0, [0.9499364116707574, 1.0]], [0, [1298.444669075612, 1.0]], [0, [195.97591753807947, 1.0]], [0, [44.19299650022707, 1.0]], [0, [11.99029213933925, 1.0]], [1, [5.327609358978943, 1.0]], [1, [0.8987192878512383, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66883903]
bas 1, expnt(s) = [0.94993641]
bas 2, expnt(s) = [1298.44466908]
bas 3, expnt(s) = [195.97591754]
bas 4, expnt(s) = [44.1929965]
bas 5, expnt(s) = [11.99029214]
bas 6, expnt(s) = [5.32760936]
bas 7, expnt(s) = [0.89871929]
CPU time:        16.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766884e+03 7.40715378e+02 9.49936412e-01 2.43100541e+00
 1.29844467e+03 5.46490492e+02 1.95975918e+02 1.32332664e+02
 4.41929965e+01 4.33042091e+01 1.19902921e+01 1.62793608e+01
 5.32760936e+00 2.36129289e+01 8.98719288e-01 2.55278636e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827469001475304
cond(S) = 150.19056245927158
E1 = -181.27915211793172  E_coul = 54.36175253053113
init E= -126.917399587401
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649438667359592  LUMO = 5.34715747717612
  mo_energy =
[-3.26677462e+01 -1.83810091e+00 -6.49438667e-01 -6.49438667e-01
 -6.49438667e-01  5.34715748e+00  5.34715748e+00  5.34715748e+00
  3.30453237e+01  2.80863611e+02  1.78578680e+03  6.57485717e+03]
E1 = -181.59297645400616  E_coul = 54.330451257921936
cycle= 1 E= -127.262525196084  delta_E= -0.345  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114426
diis-c [-0.01309335  1.        ]
  HOMO = -0.610412653619863  LUMO = 5.36901505577337
  mo_energy =
[-3.28312853e+01 -1.80366371e+00 -6.10412654e-01 -6.10412654e-01
 -6.10412654e-01  5.36901506e+00  5.36901506e+00  5.36901506e+00
  3.29436453e+01  2.80675104e+02  1.78555029e+03  6.57459509e+03]
E1 = -181.6929124004326  E_coul = 54.43013576787177
cycle= 2 E= -127.262776632561  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140893
diis-c [-9.91835457e-05  8.03998618e-02  9.19600138e-01]
  HOMO = -0.604818230770089  LUMO = 5.37807522382194
  mo_energy =
[-3.28086648e+01 -1.79721385e+00 -6.04818231e-01 -6.04818231e-01
 -6.04818231e-01  5.37807522e+00  5.37807522e+00  5.37807522e+00
  3.29628280e+01  2.80700884e+02  1.78557913e+03  6.57462483e+03]
E1 = -181.6770476884707  E_coul = 54.4142638216618
cycle= 3 E= -127.262783866809  delta_E= -7.23e-06  |g|= 0.000951  |ddm|= 0.00249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113018
diis-c [-1.67909930e-08 -2.90138557e-03  5.79525151e-02  9.44948871e-01]
  HOMO = -0.605241801883285  LUMO = 5.37740394407047
  mo_energy =
[-3.28102547e+01 -1.79769842e+00 -6.05241802e-01 -6.05241802e-01
 -6.05241802e-01  5.37740394e+00  5.37740394e+00  5.37740394e+00
  3.29614656e+01  2.80699301e+02  1.78557756e+03  6.57462325e+03]
E1 = -181.67821761423505  E_coul = 54.41543370149851
cycle= 4 E= -127.262783912737  delta_E= -4.59e-08  |g|= 2.5e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01683e-06
diis-c [-3.08344325e-13  3.96327670e-05 -1.25600307e-03 -1.79188069e-02
  1.01913518e+00]
  HOMO = -0.605241482542478  LUMO = 5.37740449242718
  mo_energy =
[-3.28102532e+01 -1.79769793e+00 -6.05241483e-01 -6.05241483e-01
 -6.05241483e-01  5.37740449e+00  5.37740449e+00  5.37740449e+00
  3.29614673e+01  2.80699304e+02  1.78557756e+03  6.57462326e+03]
E1 = -181.67821682791762  E_coul = 54.4154329151809
cycle= 5 E= -127.262783912737  delta_E= -1.71e-13  |g|= 2.94e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67821682791762  E_coul = 54.4154329151809
  HOMO = -0.605241475825048  LUMO = 5.37740450170513
  mo_energy =
[-3.28102531e+01 -1.79769792e+00 -6.05241476e-01 -6.05241476e-01
 -6.05241476e-01  5.37740450e+00  5.37740450e+00  5.37740450e+00
  3.29614674e+01  2.80699304e+02  1.78557756e+03  6.57462326e+03]
E1 = -181.67821681803787  E_coul = 54.415432905301216
Extra cycle  E= -127.262783912737  delta_E= 7.11e-14  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.19056245927158
E1 = -181.67821681803787  E_coul = 54.415432905301216
init E= -127.262783912737
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.605241476389916  LUMO = 5.37740450075198
  mo_energy =
[-3.28102532e+01 -1.79769792e+00 -6.05241476e-01 -6.05241476e-01
 -6.05241476e-01  5.37740450e+00  5.37740450e+00  5.37740450e+00
  3.29614674e+01  2.80699304e+02  1.78557756e+03  6.57462326e+03]
E1 = -181.67821681992146  E_coul = 54.41543290718478
cycle= 1 E= -127.262783912737  delta_E= -2.84e-14  |g|= 2.3e-10  |ddm|= 3.08e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67821681992146  E_coul = 54.41543290718478
  HOMO = -0.605241476271861  LUMO = 5.37740450094012
  mo_energy =
[-3.28102532e+01 -1.79769792e+00 -6.05241476e-01 -6.05241476e-01
 -6.05241476e-01  5.37740450e+00  5.37740450e+00  5.37740450e+00
  3.29614674e+01  2.80699304e+02  1.78557756e+03  6.57462326e+03]
E1 = -181.67821681960044  E_coul = 54.41543290686375
Extra cycle  E= -127.262783912737  delta_E= -1.42e-14  |g|= 3.73e-11  |ddm|= 5.04e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766884e+03 9.49936412e-01 1.29844467e+03 1.95975918e+02
 4.41929965e+01 1.19902921e+01 5.32760936e+00 8.98719288e-01]
grad_E = [-9.46282447e-06 -1.02685580e-04  5.82343126e-05 -3.96637093e-04
  5.57372986e-04  5.30558925e-04  5.46043448e-05  6.33517257e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66885077        1
[INPUT] 0    0    [1    /1   ]  0.949939157779       1
[INPUT] 0    0    [1    /1   ]  1298.44459666        1
[INPUT] 0    0    [1    /1   ]  195.976418914        1
[INPUT] 0    0    [1    /1   ]  44.192184232         1
[INPUT] 0    0    [1    /1   ]  11.9901034166        1
[INPUT] 1    0    [1    /1   ]  5.32755026019        1
[INPUT] 1    0    [1    /1   ]  0.898711342169       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6688507732465, 1.0]], [0, [0.9499391577792832, 1.0]], [0, [1298.4445966610836, 1.0]], [0, [195.9764189144352, 1.0]], [0, [44.1921842320296, 1.0]], [0, [11.990103416628404, 1.0]], [1, [5.327550260187581, 1.0]], [1, [0.8987113421694257, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66885077]
bas 1, expnt(s) = [0.94993916]
bas 2, expnt(s) = [1298.44459666]
bas 3, expnt(s) = [195.97641891]
bas 4, expnt(s) = [44.19218423]
bas 5, expnt(s) = [11.99010342]
bas 6, expnt(s) = [5.32755026]
bas 7, expnt(s) = [0.89871134]
CPU time:        19.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766885e+03 7.40715382e+02 9.49939158e-01 2.43101068e+00
 1.29844460e+03 5.46490469e+02 1.95976419e+02 1.32332918e+02
 4.41921842e+01 4.33036122e+01 1.19901034e+01 1.62791686e+01
 5.32755026e+00 2.36126015e+01 8.98711342e-01 2.55275815e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827471989462381
cond(S) = 150.18996985466828
E1 = -181.2791600109168  E_coul = 54.36175098096202
init E= -126.917409029955
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649438155187939  LUMO = 5.34709144885269
  mo_energy =
[-3.26677497e+01 -1.83810011e+00 -6.49438155e-01 -6.49438155e-01
 -6.49438155e-01  5.34709145e+00  5.34709145e+00  5.34709145e+00
  3.30444746e+01  2.80860980e+02  1.78578480e+03  6.57485548e+03]
E1 = -181.59291054408772  E_coul = 54.33038463421124
cycle= 1 E= -127.262525909876  delta_E= -0.345  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11443
diis-c [-0.01309411  1.        ]
  HOMO = -0.610417057905332  LUMO = 5.36894302172617
  mo_energy =
[-3.28313007e+01 -1.80366887e+00 -6.10417058e-01 -6.10417058e-01
 -6.10417058e-01  5.36894302e+00  5.36894302e+00  5.36894302e+00
  3.29427865e+01  2.80672460e+02  1.78554828e+03  6.57459338e+03]
E1 = -181.6928565174262  E_coul = 54.430079127390364
cycle= 2 E= -127.262777390036  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140907
diis-c [-9.91901512e-05  8.04100421e-02  9.19589958e-01]
  HOMO = -0.604822121997147  LUMO = 5.37800393832707
  mo_energy =
[-3.28086781e+01 -1.79721841e+00 -6.04822122e-01 -6.04822122e-01
 -6.04822122e-01  5.37800394e+00  5.37800394e+00  5.37800394e+00
  3.29619708e+01  2.80698242e+02  1.78557713e+03  6.57462313e+03]
E1 = -181.67699017168854  E_coul = 54.414205545844474
cycle= 3 E= -127.262784625844  delta_E= -7.24e-06  |g|= 0.000951  |ddm|= 0.00249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113016
diis-c [-1.67899908e-08 -2.90149152e-03  5.79435931e-02  9.44957898e-01]
  HOMO = -0.605245684277407  LUMO = 5.37733267985975
  mo_energy =
[-3.28102680e+01 -1.79770297e+00 -6.05245684e-01 -6.05245684e-01
 -6.05245684e-01  5.37733268e+00  5.37733268e+00  5.37733268e+00
  3.29606084e+01  2.80696659e+02  1.78557555e+03  6.57462155e+03]
E1 = -181.6781600829388  E_coul = 54.41537541116866
cycle= 4 E= -127.26278467177  delta_E= -4.59e-08  |g|= 2.5e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01671e-06
diis-c [-3.08355312e-13  3.96352393e-05 -1.25582210e-03 -1.79190795e-02
  1.01913527e+00]
  HOMO = -0.605245364978626  LUMO = 5.37733322813949
  mo_energy =
[-3.28102665e+01 -1.79770248e+00 -6.05245365e-01 -6.05245365e-01
 -6.05245365e-01  5.37733323e+00  5.37733323e+00  5.37733323e+00
  3.29606101e+01  2.80696662e+02  1.78557555e+03  6.57462156e+03]
E1 = -181.6781592967109  E_coul = 54.41537462494054
cycle= 5 E= -127.26278467177  delta_E= -2.27e-13  |g|= 2.94e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6781592967109  E_coul = 54.41537462494054
  HOMO = -0.605245358262317  LUMO = 5.37733323741568
  mo_energy =
[-3.28102665e+01 -1.79770247e+00 -6.05245358e-01 -6.05245358e-01
 -6.05245358e-01  5.37733324e+00  5.37733324e+00  5.37733324e+00
  3.29606102e+01  2.80696662e+02  1.78557555e+03  6.57462156e+03]
E1 = -181.6781592868344  E_coul = 54.41537461506406
Extra cycle  E= -127.26278467177  delta_E= 2.84e-14  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94766885e+03 9.49939158e-01 1.29844460e+03 1.95976419e+02
 4.41921842e+01 1.19901034e+01 5.32755026e+00 8.98711342e-01]
E = -127.26278467177033
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66885077        1
[INPUT] 0    0    [1    /1   ]  0.949939157779       1
[INPUT] 0    0    [1    /1   ]  1298.44459666        1
[INPUT] 0    0    [1    /1   ]  195.976418914        1
[INPUT] 0    0    [1    /1   ]  44.192184232         1
[INPUT] 0    0    [1    /1   ]  11.9901034166        1
[INPUT] 1    0    [1    /1   ]  5.32755026019        1
[INPUT] 1    0    [1    /1   ]  0.898711342169       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6688507732465, 1.0]], [0, [0.9499391577792832, 1.0]], [0, [1298.4445966610836, 1.0]], [0, [195.9764189144352, 1.0]], [0, [44.1921842320296, 1.0]], [0, [11.990103416628404, 1.0]], [1, [5.327550260187581, 1.0]], [1, [0.8987113421694257, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66885077]
bas 1, expnt(s) = [0.94993916]
bas 2, expnt(s) = [1298.44459666]
bas 3, expnt(s) = [195.97641891]
bas 4, expnt(s) = [44.19218423]
bas 5, expnt(s) = [11.99010342]
bas 6, expnt(s) = [5.32755026]
bas 7, expnt(s) = [0.89871134]
CPU time:        19.49
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766885e+03 7.40715382e+02 9.49939158e-01 2.43101068e+00
 1.29844460e+03 5.46490469e+02 1.95976419e+02 1.32332918e+02
 4.41921842e+01 4.33036122e+01 1.19901034e+01 1.62791686e+01
 5.32755026e+00 2.36126015e+01 8.98711342e-01 2.55275815e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827471989462381
cond(S) = 150.18996985466828
E1 = -181.2791600109168  E_coul = 54.36175098096202
init E= -126.917409029955
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649438155187939  LUMO = 5.34709144885269
  mo_energy =
[-3.26677497e+01 -1.83810011e+00 -6.49438155e-01 -6.49438155e-01
 -6.49438155e-01  5.34709145e+00  5.34709145e+00  5.34709145e+00
  3.30444746e+01  2.80860980e+02  1.78578480e+03  6.57485548e+03]
E1 = -181.59291054408772  E_coul = 54.33038463421124
cycle= 1 E= -127.262525909876  delta_E= -0.345  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11443
diis-c [-0.01309411  1.        ]
  HOMO = -0.610417057905332  LUMO = 5.36894302172617
  mo_energy =
[-3.28313007e+01 -1.80366887e+00 -6.10417058e-01 -6.10417058e-01
 -6.10417058e-01  5.36894302e+00  5.36894302e+00  5.36894302e+00
  3.29427865e+01  2.80672460e+02  1.78554828e+03  6.57459338e+03]
E1 = -181.6928565174262  E_coul = 54.430079127390364
cycle= 2 E= -127.262777390036  delta_E= -0.000251  |g|= 0.0115  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140907
diis-c [-9.91901512e-05  8.04100421e-02  9.19589958e-01]
  HOMO = -0.604822121997147  LUMO = 5.37800393832707
  mo_energy =
[-3.28086781e+01 -1.79721841e+00 -6.04822122e-01 -6.04822122e-01
 -6.04822122e-01  5.37800394e+00  5.37800394e+00  5.37800394e+00
  3.29619708e+01  2.80698242e+02  1.78557713e+03  6.57462313e+03]
E1 = -181.67699017168854  E_coul = 54.414205545844474
cycle= 3 E= -127.262784625844  delta_E= -7.24e-06  |g|= 0.000951  |ddm|= 0.00249
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113016
diis-c [-1.67899908e-08 -2.90149152e-03  5.79435931e-02  9.44957898e-01]
  HOMO = -0.605245684277407  LUMO = 5.37733267985975
  mo_energy =
[-3.28102680e+01 -1.79770297e+00 -6.05245684e-01 -6.05245684e-01
 -6.05245684e-01  5.37733268e+00  5.37733268e+00  5.37733268e+00
  3.29606084e+01  2.80696659e+02  1.78557555e+03  6.57462155e+03]
E1 = -181.6781600829388  E_coul = 54.41537541116866
cycle= 4 E= -127.26278467177  delta_E= -4.59e-08  |g|= 2.5e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01671e-06
diis-c [-3.08355312e-13  3.96352393e-05 -1.25582210e-03 -1.79190795e-02
  1.01913527e+00]
  HOMO = -0.605245364978626  LUMO = 5.37733322813949
  mo_energy =
[-3.28102665e+01 -1.79770248e+00 -6.05245365e-01 -6.05245365e-01
 -6.05245365e-01  5.37733323e+00  5.37733323e+00  5.37733323e+00
  3.29606101e+01  2.80696662e+02  1.78557555e+03  6.57462156e+03]
E1 = -181.6781592967109  E_coul = 54.41537462494054
cycle= 5 E= -127.26278467177  delta_E= -2.27e-13  |g|= 2.94e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6781592967109  E_coul = 54.41537462494054
  HOMO = -0.605245358262317  LUMO = 5.37733323741568
  mo_energy =
[-3.28102665e+01 -1.79770247e+00 -6.05245358e-01 -6.05245358e-01
 -6.05245358e-01  5.37733324e+00  5.37733324e+00  5.37733324e+00
  3.29606102e+01  2.80696662e+02  1.78557555e+03  6.57462156e+03]
E1 = -181.6781592868344  E_coul = 54.41537461506406
Extra cycle  E= -127.26278467177  delta_E= 2.84e-14  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.18996985466828
E1 = -181.6781592868344  E_coul = 54.41537461506406
init E= -127.26278467177
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605245358826987  LUMO = 5.37733323646285
  mo_energy =
[-3.28102665e+01 -1.79770247e+00 -6.05245359e-01 -6.05245359e-01
 -6.05245359e-01  5.37733324e+00  5.37733324e+00  5.37733324e+00
  3.29606102e+01  2.80696662e+02  1.78557555e+03  6.57462156e+03]
E1 = -181.67815928871732  E_coul = 54.41537461694703
cycle= 1 E= -127.26278467177  delta_E= 2.84e-14  |g|= 2.3e-10  |ddm|= 3.07e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67815928871732  E_coul = 54.41537461694703
  HOMO = -0.605245358708967  LUMO = 5.37733323665094
  mo_energy =
[-3.28102665e+01 -1.79770247e+00 -6.05245359e-01 -6.05245359e-01
 -6.05245359e-01  5.37733324e+00  5.37733324e+00  5.37733324e+00
  3.29606102e+01  2.80696662e+02  1.78557555e+03  6.57462156e+03]
E1 = -181.6781592883963  E_coul = 54.41537461662603
Extra cycle  E= -127.26278467177  delta_E= 2.84e-14  |g|= 3.73e-11  |ddm|= 5.04e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766885e+03 9.49939158e-01 1.29844460e+03 1.95976419e+02
 4.41921842e+01 1.19901034e+01 5.32755026e+00 8.98711342e-01]
grad_E = [-9.46362736e-06 -9.43790620e-05  5.82299406e-05 -3.96300129e-04
  5.55402525e-04  5.31040626e-04  5.02973230e-05  4.87227133e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66890879        1
[INPUT] 0    0    [1    /1   ]  0.949941123819       1
[INPUT] 0    0    [1    /1   ]  1298.44423883        1
[INPUT] 0    0    [1    /1   ]  195.978892892        1
[INPUT] 0    0    [1    /1   ]  44.188209318         1
[INPUT] 0    0    [1    /1   ]  11.989052818         1
[INPUT] 1    0    [1    /1   ]  5.32728287209        1
[INPUT] 1    0    [1    /1   ]  0.898681294802       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6689087917734, 1.0]], [0, [0.9499411238190172, 1.0]], [0, [1298.4442388303635, 1.0]], [0, [195.9788928915871, 1.0]], [0, [44.188209317998144, 1.0]], [0, [11.989052817965396, 1.0]], [1, [5.3272828720881105, 1.0]], [1, [0.898681294801999, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66890879]
bas 1, expnt(s) = [0.94994112]
bas 2, expnt(s) = [1298.44423883]
bas 3, expnt(s) = [195.97889289]
bas 4, expnt(s) = [44.18820932]
bas 5, expnt(s) = [11.98905282]
bas 6, expnt(s) = [5.32728287]
bas 7, expnt(s) = [0.89868129]
CPU time:        22.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766891e+03 7.40715398e+02 9.49941124e-01 2.43101445e+00
 1.29844424e+03 5.46490356e+02 1.95978893e+02 1.32334170e+02
 4.41882093e+01 4.33006909e+01 1.19890528e+01 1.62780988e+01
 5.32728287e+00 2.36111201e+01 8.98681295e-01 2.55265146e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827484260783606
cond(S) = 150.18686467004636
E1 = -181.27915749041065  E_coul = 54.3617177398291
init E= -126.917439750582
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649437561460151  LUMO = 5.34681047358294
  mo_energy =
[-3.26677736e+01 -1.83809649e+00 -6.49437561e-01 -6.49437561e-01
 -6.49437561e-01  5.34681047e+00  5.34681047e+00  5.34681047e+00
  3.30399581e+01  2.80847601e+02  1.78577464e+03  6.57484685e+03]
E1 = -181.5926396637767  E_coul = 54.33011016708951
cycle= 1 E= -127.262529496687  delta_E= -0.345  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114439
diis-c [-0.01309632  1.        ]
  HOMO = -0.610434883287363  LUMO = 5.3686402809405
  mo_energy =
[-3.28313691e+01 -1.80368603e+00 -6.10434883e-01 -6.10434883e-01
 -6.10434883e-01  5.36864028e+00  5.36864028e+00  5.36864028e+00
  3.29382379e+01  2.80659028e+02  1.78553805e+03  6.57458469e+03]
E1 = -181.69262409950605  E_coul = 54.429842956913475
cycle= 2 E= -127.262781142593  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140961
diis-c [-9.92094893e-05  8.04530908e-02  9.19546909e-01]
  HOMO = -0.604837975952983  LUMO = 5.37770398647824
  mo_energy =
[-3.28087394e+01 -1.79723329e+00 -6.04837976e-01 -6.04837976e-01
 -6.04837976e-01  5.37770399e+00  5.37770399e+00  5.37770399e+00
  3.29574278e+01  2.80684818e+02  1.78556691e+03  6.57461444e+03]
E1 = -181.6767515312605  E_coul = 54.41396314686465
cycle= 3 E= -127.262788384396  delta_E= -7.24e-06  |g|= 0.000951  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113001
diis-c [-1.67916002e-08 -2.90193569e-03  5.79054409e-02  9.44996495e-01]
  HOMO = -0.605261480945807  LUMO = 5.37703285210646
  mo_energy =
[-3.28103290e+01 -1.79771778e+00 -6.05261481e-01 -6.05261481e-01
 -6.05261481e-01  5.37703285e+00  5.37703285e+00  5.37703285e+00
  3.29560658e+01  2.80683235e+02  1.78556533e+03  6.57461286e+03]
E1 = -181.6779213292272  E_coul = 54.415132898915886
cycle= 4 E= -127.262788430311  delta_E= -4.59e-08  |g|= 2.5e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01703e-06
diis-c [-3.08547529e-13  3.96493314e-05 -1.25521137e-03 -1.79219384e-02
  1.01913750e+00]
  HOMO = -0.605261161547081  LUMO = 5.37703340047669
  mo_energy =
[-3.28103274e+01 -1.79771730e+00 -6.05261162e-01 -6.05261162e-01
 -6.05261162e-01  5.37703340e+00  5.37703340e+00  5.37703340e+00
  3.29560675e+01  2.80683238e+02  1.78556533e+03  6.57461287e+03]
E1 = -181.67792054282074  E_coul = 54.415132112509355
cycle= 5 E= -127.262788430311  delta_E= -8.53e-14  |g|= 2.94e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67792054282074  E_coul = 54.415132112509355
  HOMO = -0.60526115483336  LUMO = 5.37703340974831
  mo_energy =
[-3.28103274e+01 -1.79771729e+00 -6.05261155e-01 -6.05261155e-01
 -6.05261155e-01  5.37703341e+00  5.37703341e+00  5.37703341e+00
  3.29560675e+01  2.80683238e+02  1.78556533e+03  6.57461287e+03]
E1 = -181.67792053295418  E_coul = 54.41513210264273
Extra cycle  E= -127.262788430311  delta_E= -5.68e-14  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94766891e+03 9.49941124e-01 1.29844424e+03 1.95978893e+02
 4.41882093e+01 1.19890528e+01 5.32728287e+00 8.98681295e-01]
E = -127.26278843031145
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66890879        1
[INPUT] 0    0    [1    /1   ]  0.949941123819       1
[INPUT] 0    0    [1    /1   ]  1298.44423883        1
[INPUT] 0    0    [1    /1   ]  195.978892892        1
[INPUT] 0    0    [1    /1   ]  44.188209318         1
[INPUT] 0    0    [1    /1   ]  11.989052818         1
[INPUT] 1    0    [1    /1   ]  5.32728287209        1
[INPUT] 1    0    [1    /1   ]  0.898681294802       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6689087917734, 1.0]], [0, [0.9499411238190172, 1.0]], [0, [1298.4442388303635, 1.0]], [0, [195.9788928915871, 1.0]], [0, [44.188209317998144, 1.0]], [0, [11.989052817965396, 1.0]], [1, [5.3272828720881105, 1.0]], [1, [0.898681294801999, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66890879]
bas 1, expnt(s) = [0.94994112]
bas 2, expnt(s) = [1298.44423883]
bas 3, expnt(s) = [195.97889289]
bas 4, expnt(s) = [44.18820932]
bas 5, expnt(s) = [11.98905282]
bas 6, expnt(s) = [5.32728287]
bas 7, expnt(s) = [0.89868129]
CPU time:        22.20
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766891e+03 7.40715398e+02 9.49941124e-01 2.43101445e+00
 1.29844424e+03 5.46490356e+02 1.95978893e+02 1.32334170e+02
 4.41882093e+01 4.33006909e+01 1.19890528e+01 1.62780988e+01
 5.32728287e+00 2.36111201e+01 8.98681295e-01 2.55265146e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827484260783606
cond(S) = 150.18686467004636
E1 = -181.27915749041065  E_coul = 54.3617177398291
init E= -126.917439750582
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649437561460151  LUMO = 5.34681047358294
  mo_energy =
[-3.26677736e+01 -1.83809649e+00 -6.49437561e-01 -6.49437561e-01
 -6.49437561e-01  5.34681047e+00  5.34681047e+00  5.34681047e+00
  3.30399581e+01  2.80847601e+02  1.78577464e+03  6.57484685e+03]
E1 = -181.5926396637767  E_coul = 54.33011016708951
cycle= 1 E= -127.262529496687  delta_E= -0.345  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114439
diis-c [-0.01309632  1.        ]
  HOMO = -0.610434883287363  LUMO = 5.3686402809405
  mo_energy =
[-3.28313691e+01 -1.80368603e+00 -6.10434883e-01 -6.10434883e-01
 -6.10434883e-01  5.36864028e+00  5.36864028e+00  5.36864028e+00
  3.29382379e+01  2.80659028e+02  1.78553805e+03  6.57458469e+03]
E1 = -181.69262409950605  E_coul = 54.429842956913475
cycle= 2 E= -127.262781142593  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0155
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140961
diis-c [-9.92094893e-05  8.04530908e-02  9.19546909e-01]
  HOMO = -0.604837975952983  LUMO = 5.37770398647824
  mo_energy =
[-3.28087394e+01 -1.79723329e+00 -6.04837976e-01 -6.04837976e-01
 -6.04837976e-01  5.37770399e+00  5.37770399e+00  5.37770399e+00
  3.29574278e+01  2.80684818e+02  1.78556691e+03  6.57461444e+03]
E1 = -181.6767515312605  E_coul = 54.41396314686465
cycle= 3 E= -127.262788384396  delta_E= -7.24e-06  |g|= 0.000951  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00113001
diis-c [-1.67916002e-08 -2.90193569e-03  5.79054409e-02  9.44996495e-01]
  HOMO = -0.605261480945807  LUMO = 5.37703285210646
  mo_energy =
[-3.28103290e+01 -1.79771778e+00 -6.05261481e-01 -6.05261481e-01
 -6.05261481e-01  5.37703285e+00  5.37703285e+00  5.37703285e+00
  3.29560658e+01  2.80683235e+02  1.78556533e+03  6.57461286e+03]
E1 = -181.6779213292272  E_coul = 54.415132898915886
cycle= 4 E= -127.262788430311  delta_E= -4.59e-08  |g|= 2.5e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01703e-06
diis-c [-3.08547529e-13  3.96493314e-05 -1.25521137e-03 -1.79219384e-02
  1.01913750e+00]
  HOMO = -0.605261161547081  LUMO = 5.37703340047669
  mo_energy =
[-3.28103274e+01 -1.79771730e+00 -6.05261162e-01 -6.05261162e-01
 -6.05261162e-01  5.37703340e+00  5.37703340e+00  5.37703340e+00
  3.29560675e+01  2.80683238e+02  1.78556533e+03  6.57461287e+03]
E1 = -181.67792054282074  E_coul = 54.415132112509355
cycle= 5 E= -127.262788430311  delta_E= -8.53e-14  |g|= 2.94e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67792054282074  E_coul = 54.415132112509355
  HOMO = -0.60526115483336  LUMO = 5.37703340974831
  mo_energy =
[-3.28103274e+01 -1.79771729e+00 -6.05261155e-01 -6.05261155e-01
 -6.05261155e-01  5.37703341e+00  5.37703341e+00  5.37703341e+00
  3.29560675e+01  2.80683238e+02  1.78556533e+03  6.57461287e+03]
E1 = -181.67792053295418  E_coul = 54.41513210264273
Extra cycle  E= -127.262788430311  delta_E= -5.68e-14  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.18686467004636
E1 = -181.67792053295418  E_coul = 54.41513210264273
init E= -127.262788430311
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.6052611553974  LUMO = 5.37703340879651
  mo_energy =
[-3.28103274e+01 -1.79771729e+00 -6.05261155e-01 -6.05261155e-01
 -6.05261155e-01  5.37703341e+00  5.37703341e+00  5.37703341e+00
  3.29560675e+01  2.80683238e+02  1.78556533e+03  6.57461287e+03]
E1 = -181.67792053483544  E_coul = 54.41513210452414
cycle= 1 E= -127.262788430311  delta_E= 1.42e-13  |g|= 2.3e-10  |ddm|= 3.07e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67792053483544  E_coul = 54.41513210452414
  HOMO = -0.605261155279476  LUMO = 5.37703340898444
  mo_energy =
[-3.28103274e+01 -1.79771729e+00 -6.05261155e-01 -6.05261155e-01
 -6.05261155e-01  5.37703341e+00  5.37703341e+00  5.37703341e+00
  3.29560675e+01  2.80683238e+02  1.78556533e+03  6.57461287e+03]
E1 = -181.67792053451487  E_coul = 54.415132104203465
Extra cycle  E= -127.262788430311  delta_E= -9.95e-14  |g|= 3.73e-11  |ddm|= 5.03e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94766891e+03 9.49941124e-01 1.29844424e+03 1.95978893e+02
 4.41882093e+01 1.19890528e+01 5.32728287e+00 8.98681295e-01]
grad_E = [-9.46736003e-06 -9.26985286e-05  5.82095612e-05 -3.94772247e-04
  5.47698686e-04  5.25222462e-04  2.29990855e-05  4.48841886e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66919604        1
[INPUT] 0    0    [1    /1   ]  0.949948718862       1
[INPUT] 0    0    [1    /1   ]  1298.44246747        1
[INPUT] 0    0    [1    /1   ]  195.991132396        1
[INPUT] 0    0    [1    /1   ]  44.1685762752        1
[INPUT] 0    0    [1    /1   ]  11.9838551466        1
[INPUT] 1    0    [1    /1   ]  5.3260951828         1
[INPUT] 1    0    [1    /1   ]  0.898548082016       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6691960366684, 1.0]], [0, [0.9499487188621765, 1.0]], [0, [1298.4424674670263, 1.0]], [0, [195.99113239596306, 1.0]], [0, [44.1685762751874, 1.0]], [0, [11.983855146640442, 1.0]], [1, [5.326095182801982, 1.0]], [1, [0.8985480820157057, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66919604]
bas 1, expnt(s) = [0.94994872]
bas 2, expnt(s) = [1298.44246747]
bas 3, expnt(s) = [195.9911324]
bas 4, expnt(s) = [44.16857628]
bas 5, expnt(s) = [11.98385515]
bas 6, expnt(s) = [5.32609518]
bas 7, expnt(s) = [0.89854808]
CPU time:        24.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766920e+03 7.40715480e+02 9.49948719e-01 2.43102903e+00
 1.29844247e+03 5.46489797e+02 1.95991132e+02 1.32340369e+02
 4.41685763e+01 4.32862611e+01 1.19838551e+01 1.62728056e+01
 5.32609518e+00 2.36045403e+01 8.98548082e-01 2.55217849e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82753894130739
cond(S) = 150.17151674561558
E1 = -181.27915494406673  E_coul = 54.36156848003988
init E= -126.917586464027
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649435116115757  LUMO = 5.3455627203719
  mo_energy =
[-3.26678821e+01 -1.83807887e+00 -6.49435116e-01 -6.49435116e-01
 -6.49435116e-01  5.34556272e+00  5.34556272e+00  5.34556272e+00
  3.30176284e+01  2.80781504e+02  1.78572447e+03  6.57480428e+03]
E1 = -181.59142260843072  E_coul = 54.32887600793564
cycle= 1 E= -127.262546600495  delta_E= -0.345  |g|= 0.0936  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11448
diis-c [-0.01310566  1.        ]
  HOMO = -0.610514929173882  LUMO = 5.36729464321414
  mo_energy =
[-3.28316801e+01 -1.80376100e+00 -6.10514929e-01 -6.10514929e-01
 -6.10514929e-01  5.36729464e+00  5.36729464e+00  5.36729464e+00
  3.29157672e+01  2.80592685e+02  1.78548758e+03  6.57454181e+03]
E1 = -181.6915818650915  E_coul = 54.42878286350598
cycle= 2 E= -127.262799001586  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141207
diis-c [-9.92911837e-05  8.06535998e-02  9.19346400e-01]
  HOMO = -0.604909096777255  LUMO = 5.37637100611181
  mo_energy =
[-3.28090174e+01 -1.79729795e+00 -6.04909097e-01 -6.04909097e-01
 -6.04909097e-01  5.37637101e+00  5.37637101e+00  5.37637101e+00
  3.29349827e+01  2.80618509e+02  1.78551647e+03  6.57457159e+03]
E1 = -181.67568107071116  E_coul = 54.41287479999246
cycle= 3 E= -127.262806270719  delta_E= -7.27e-06  |g|= 0.00095  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112925
diis-c [-1.67998682e-08 -2.90416738e-03  5.77260388e-02  9.45178129e-01]
  HOMO = -0.605332310714635  LUMO = 5.37570048261269
  mo_energy =
[-3.28106056e+01 -1.79778210e+00 -6.05332311e-01 -6.05332311e-01
 -6.05332311e-01  5.37570048e+00  5.37570048e+00  5.37570048e+00
  3.29336220e+01  2.80616929e+02  1.78551489e+03  6.57457002e+03]
E1 = -181.676850269383  E_coul = 54.414043952803404
cycle= 4 E= -127.26280631658  delta_E= -4.59e-08  |g|= 2.51e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01858e-06
diis-c [-3.09503409e-13  3.97193419e-05 -1.25235876e-03 -1.79354636e-02
  1.01914810e+00]
  HOMO = -0.605331990749477  LUMO = 5.37570103155788
  mo_energy =
[-3.28106040e+01 -1.79778161e+00 -6.05331991e-01 -6.05331991e-01
 -6.05331991e-01  5.37570103e+00  5.37570103e+00  5.37570103e+00
  3.29336237e+01  2.80616932e+02  1.78551490e+03  6.57457003e+03]
E1 = -181.67684948191697  E_coul = 54.41404316533745
cycle= 5 E= -127.26280631658  delta_E= 8.53e-14  |g|= 2.95e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67684948191697  E_coul = 54.41404316533745
  HOMO = -0.605331984048869  LUMO = 5.37570104080656
  mo_energy =
[-3.28106040e+01 -1.79778160e+00 -6.05331984e-01 -6.05331984e-01
 -6.05331984e-01  5.37570104e+00  5.37570104e+00  5.37570104e+00
  3.29336237e+01  2.80616932e+02  1.78551490e+03  6.57457003e+03]
E1 = -181.67684947210017  E_coul = 54.41404315552047
Extra cycle  E= -127.26280631658  delta_E= -1.99e-13  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.94766920e+03 9.49948719e-01 1.29844247e+03 1.95991132e+02
 4.41685763e+01 1.19838551e+01 5.32609518e+00 8.98548082e-01]
E = -127.26280631657971
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.66919604        1
[INPUT] 0    0    [1    /1   ]  0.949948718862       1
[INPUT] 0    0    [1    /1   ]  1298.44246747        1
[INPUT] 0    0    [1    /1   ]  195.991132396        1
[INPUT] 0    0    [1    /1   ]  44.1685762752        1
[INPUT] 0    0    [1    /1   ]  11.9838551466        1
[INPUT] 1    0    [1    /1   ]  5.3260951828         1
[INPUT] 1    0    [1    /1   ]  0.898548082016       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6691960366684, 1.0]], [0, [0.9499487188621765, 1.0]], [0, [1298.4424674670263, 1.0]], [0, [195.99113239596306, 1.0]], [0, [44.1685762751874, 1.0]], [0, [11.983855146640442, 1.0]], [1, [5.326095182801982, 1.0]], [1, [0.8985480820157057, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.66919604]
bas 1, expnt(s) = [0.94994872]
bas 2, expnt(s) = [1298.44246747]
bas 3, expnt(s) = [195.9911324]
bas 4, expnt(s) = [44.16857628]
bas 5, expnt(s) = [11.98385515]
bas 6, expnt(s) = [5.32609518]
bas 7, expnt(s) = [0.89854808]
CPU time:        24.97
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94766920e+03 7.40715480e+02 9.49948719e-01 2.43102903e+00
 1.29844247e+03 5.46489797e+02 1.95991132e+02 1.32340369e+02
 4.41685763e+01 4.32862611e+01 1.19838551e+01 1.62728056e+01
 5.32609518e+00 2.36045403e+01 8.98548082e-01 2.55217849e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82753894130739
cond(S) = 150.17151674561558
E1 = -181.27915494406673  E_coul = 54.36156848003988
init E= -126.917586464027
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649435116115757  LUMO = 5.3455627203719
  mo_energy =
[-3.26678821e+01 -1.83807887e+00 -6.49435116e-01 -6.49435116e-01
 -6.49435116e-01  5.34556272e+00  5.34556272e+00  5.34556272e+00
  3.30176284e+01  2.80781504e+02  1.78572447e+03  6.57480428e+03]
E1 = -181.59142260843072  E_coul = 54.32887600793564
cycle= 1 E= -127.262546600495  delta_E= -0.345  |g|= 0.0936  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11448
diis-c [-0.01310566  1.        ]
  HOMO = -0.610514929173882  LUMO = 5.36729464321414
  mo_energy =
[-3.28316801e+01 -1.80376100e+00 -6.10514929e-01 -6.10514929e-01
 -6.10514929e-01  5.36729464e+00  5.36729464e+00  5.36729464e+00
  3.29157672e+01  2.80592685e+02  1.78548758e+03  6.57454181e+03]
E1 = -181.6915818650915  E_coul = 54.42878286350598
cycle= 2 E= -127.262799001586  delta_E= -0.000252  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141207
diis-c [-9.92911837e-05  8.06535998e-02  9.19346400e-01]
  HOMO = -0.604909096777255  LUMO = 5.37637100611181
  mo_energy =
[-3.28090174e+01 -1.79729795e+00 -6.04909097e-01 -6.04909097e-01
 -6.04909097e-01  5.37637101e+00  5.37637101e+00  5.37637101e+00
  3.29349827e+01  2.80618509e+02  1.78551647e+03  6.57457159e+03]
E1 = -181.67568107071116  E_coul = 54.41287479999246
cycle= 3 E= -127.262806270719  delta_E= -7.27e-06  |g|= 0.00095  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112925
diis-c [-1.67998682e-08 -2.90416738e-03  5.77260388e-02  9.45178129e-01]
  HOMO = -0.605332310714635  LUMO = 5.37570048261269
  mo_energy =
[-3.28106056e+01 -1.79778210e+00 -6.05332311e-01 -6.05332311e-01
 -6.05332311e-01  5.37570048e+00  5.37570048e+00  5.37570048e+00
  3.29336220e+01  2.80616929e+02  1.78551489e+03  6.57457002e+03]
E1 = -181.676850269383  E_coul = 54.414043952803404
cycle= 4 E= -127.26280631658  delta_E= -4.59e-08  |g|= 2.51e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01858e-06
diis-c [-3.09503409e-13  3.97193419e-05 -1.25235876e-03 -1.79354636e-02
  1.01914810e+00]
  HOMO = -0.605331990749477  LUMO = 5.37570103155788
  mo_energy =
[-3.28106040e+01 -1.79778161e+00 -6.05331991e-01 -6.05331991e-01
 -6.05331991e-01  5.37570103e+00  5.37570103e+00  5.37570103e+00
  3.29336237e+01  2.80616932e+02  1.78551490e+03  6.57457003e+03]
E1 = -181.67684948191697  E_coul = 54.41404316533745
cycle= 5 E= -127.26280631658  delta_E= 8.53e-14  |g|= 2.95e-08  |ddm|= 1.93e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67684948191697  E_coul = 54.41404316533745
  HOMO = -0.605331984048869  LUMO = 5.37570104080656
  mo_energy =
[-3.28106040e+01 -1.79778160e+00 -6.05331984e-01 -6.05331984e-01
 -6.05331984e-01  5.37570104e+00  5.37570104e+00  5.37570104e+00
  3.29336237e+01  2.80616932e+02  1.78551490e+03  6.57457003e+03]
E1 = -181.67684947210017  E_coul = 54.41404315552047
Extra cycle  E= -127.26280631658  delta_E= -1.99e-13  |g|= 1.22e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.17151674561558
E1 = -181.67684947210017  E_coul = 54.41404315552047
init E= -127.26280631658
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605331984609766  LUMO = 5.37570103985988
  mo_energy =
[-3.28106040e+01 -1.79778160e+00 -6.05331985e-01 -6.05331985e-01
 -6.05331985e-01  5.37570104e+00  5.37570104e+00  5.37570104e+00
  3.29336237e+01  2.80616932e+02  1.78551490e+03  6.57457003e+03]
E1 = -181.6768494739739  E_coul = 54.41404315739425
cycle= 1 E= -127.26280631658  delta_E= 5.68e-14  |g|= 2.29e-10  |ddm|= 3.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6768494739739  E_coul = 54.41404315739425
  HOMO = -0.605331984492306  LUMO = 5.37570104004702
  mo_energy =
[-3.28106040e+01 -1.79778160e+00 -6.05331984e-01 -6.05331984e-01
 -6.05331984e-01  5.37570104e+00  5.37570104e+00  5.37570104e+00
  3.29336237e+01  2.80616932e+02  1.78551490e+03  6.57457003e+03]
E1 = -181.67684947365447  E_coul = 54.41404315707487
Extra cycle  E= -127.26280631658  delta_E= 5.68e-14  |g|= 3.72e-11  |ddm|= 5.01e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [1.94766920e+03 9.49948719e-01 1.29844247e+03 1.95991132e+02
 4.41685763e+01 1.19838551e+01 5.32609518e+00 8.98548082e-01]
grad_E = [-9.48578453e-06 -8.49106013e-05  5.81088794e-05 -3.87219179e-04
  5.09630831e-04  4.96325359e-04 -9.86786713e-05  2.84131372e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67055145        1
[INPUT] 0    0    [1    /1   ]  0.949975246569       1
[INPUT] 0    0    [1    /1   ]  1298.43411014        1
[INPUT] 0    0    [1    /1   ]  196.048841796        1
[INPUT] 0    0    [1    /1   ]  44.0761657086        1
[INPUT] 0    0    [1    /1   ]  11.9593510168        1
[INPUT] 1    0    [1    /1   ]  5.32110365715        1
[INPUT] 1    0    [1    /1   ]  0.897989121323       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6705514468933, 1.0]], [0, [0.9499752465686658, 1.0]], [0, [1298.4341101403577, 1.0]], [0, [196.04884179629508, 1.0]], [0, [44.07616570856982, 1.0]], [0, [11.959351016824217, 1.0]], [1, [5.321103657145593, 1.0]], [1, [0.8979891213229183, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67055145]
bas 1, expnt(s) = [0.94997525]
bas 2, expnt(s) = [1298.43411014]
bas 3, expnt(s) = [196.0488418]
bas 4, expnt(s) = [44.07616571]
bas 5, expnt(s) = [11.95935102]
bas 6, expnt(s) = [5.32110366]
bas 7, expnt(s) = [0.89798912]
CPU time:        27.54
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767055e+03 7.40715867e+02 9.49975247e-01 2.43107995e+00
 1.29843411e+03 5.46487158e+02 1.96048842e+02 1.32369593e+02
 4.40761657e+01 4.32183199e+01 1.19593510e+01 1.62478438e+01
 5.32110366e+00 2.35768913e+01 8.97989121e-01 2.55019410e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827769520043677
cond(S) = 150.09927311753393
E1 = -181.27917217732227  E_coul = 54.36093223767684
init E= -126.918239939645
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64942565929139  LUMO = 5.34031989488613
  mo_energy =
[-3.26683452e+01 -1.83799734e+00 -6.49425659e-01 -6.49425659e-01
 -6.49425659e-01  5.34031989e+00  5.34031989e+00  5.34031989e+00
  3.29124687e+01  2.80470224e+02  1.78548855e+03  6.57460419e+03]
E1 = -181.58622496407284  E_coul = 54.32361245775408
cycle= 1 E= -127.262612506319  delta_E= -0.344  |g|= 0.0938  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114643
diis-c [-0.01314297  1.        ]
  HOMO = -0.610855593066505  LUMO = 5.36163460186003
  mo_energy =
[-3.28330158e+01 -1.80407008e+00 -6.10855593e-01 -6.10855593e-01
 -6.10855593e-01  5.36163460e+00  5.36163460e+00  5.36163460e+00
  3.28100233e+01  2.80280325e+02  1.78525031e+03  6.57434032e+03]
E1 = -181.68713918655632  E_coul = 54.4242709995482
cycle= 2 E= -127.262868187008  delta_E= -0.000256  |g|= 0.0117  |ddm|= 0.0157
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142272
diis-c [-9.96077129e-05  8.15406003e-02  9.18459400e-01]
  HOMO = -0.605211412626022  LUMO = 5.37076546349531
  mo_energy =
[-3.28102111e+01 -1.79756284e+00 -6.05211413e-01 -6.05211413e-01
 -6.05211413e-01  5.37076546e+00  5.37076546e+00  5.37076546e+00
  3.28293469e+01  2.80306300e+02  1.78527936e+03  6.57437026e+03]
E1 = -181.6711167191626  E_coul = 54.4082411440942
cycle= 3 E= -127.262875575068  delta_E= -7.39e-06  |g|= 0.000947  |ddm|= 0.00252
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112559
diis-c [-1.68394970e-08 -2.91493192e-03  5.69235808e-02  9.45991351e-01]
  HOMO = -0.605633203647443  LUMO = 5.3700978309602
  mo_energy =
[-3.28117927e+01 -1.79804531e+00 -6.05633204e-01 -6.05633204e-01
 -6.05633204e-01  5.37009783e+00  5.37009783e+00  5.37009783e+00
  3.28279927e+01  2.80304727e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.67228286855843  E_coul = 54.40940724790042
cycle= 4 E= -127.262875620658  delta_E= -4.56e-08  |g|= 2.51e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.02584e-06
diis-c [-3.14048382e-13  4.00506821e-05 -1.23959720e-03 -1.79955353e-02
  1.01919508e+00]
  HOMO = -0.60563288069856  LUMO = 5.37009838316123
  mo_energy =
[-3.28117912e+01 -1.79804481e+00 -6.05632881e-01 -6.05632881e-01
 -6.05632881e-01  5.37009838e+00  5.37009838e+00  5.37009838e+00
  3.28279944e+01  2.80304730e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.67228207531173  E_coul = 54.409406454653634
cycle= 5 E= -127.262875620658  delta_E= -8.53e-14  |g|= 2.96e-08  |ddm|= 1.95e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67228207531173  E_coul = 54.409406454653634
  HOMO = -0.605632874061443  LUMO = 5.37009839229977
  mo_energy =
[-3.28117912e+01 -1.79804480e+00 -6.05632874e-01 -6.05632874e-01
 -6.05632874e-01  5.37009839e+00  5.37009839e+00  5.37009839e+00
  3.28279944e+01  2.80304730e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.6722820657352  E_coul = 54.40940644507723
Extra cycle  E= -127.262875620658  delta_E= 1.14e-13  |g|= 1.2e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767055e+03 9.49975247e-01 1.29843411e+03 1.96048842e+02
 4.40761657e+01 1.19593510e+01 5.32110366e+00 8.97989121e-01]
E = -127.26287562065798
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67055145        1
[INPUT] 0    0    [1    /1   ]  0.949975246569       1
[INPUT] 0    0    [1    /1   ]  1298.43411014        1
[INPUT] 0    0    [1    /1   ]  196.048841796        1
[INPUT] 0    0    [1    /1   ]  44.0761657086        1
[INPUT] 0    0    [1    /1   ]  11.9593510168        1
[INPUT] 1    0    [1    /1   ]  5.32110365715        1
[INPUT] 1    0    [1    /1   ]  0.897989121323       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6705514468933, 1.0]], [0, [0.9499752465686658, 1.0]], [0, [1298.4341101403577, 1.0]], [0, [196.04884179629508, 1.0]], [0, [44.07616570856982, 1.0]], [0, [11.959351016824217, 1.0]], [1, [5.321103657145593, 1.0]], [1, [0.8979891213229183, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67055145]
bas 1, expnt(s) = [0.94997525]
bas 2, expnt(s) = [1298.43411014]
bas 3, expnt(s) = [196.0488418]
bas 4, expnt(s) = [44.07616571]
bas 5, expnt(s) = [11.95935102]
bas 6, expnt(s) = [5.32110366]
bas 7, expnt(s) = [0.89798912]
CPU time:        27.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767055e+03 7.40715867e+02 9.49975247e-01 2.43107995e+00
 1.29843411e+03 5.46487158e+02 1.96048842e+02 1.32369593e+02
 4.40761657e+01 4.32183199e+01 1.19593510e+01 1.62478438e+01
 5.32110366e+00 2.35768913e+01 8.97989121e-01 2.55019410e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827769520043677
cond(S) = 150.09927311753393
E1 = -181.27917217732227  E_coul = 54.36093223767684
init E= -126.918239939645
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64942565929139  LUMO = 5.34031989488613
  mo_energy =
[-3.26683452e+01 -1.83799734e+00 -6.49425659e-01 -6.49425659e-01
 -6.49425659e-01  5.34031989e+00  5.34031989e+00  5.34031989e+00
  3.29124687e+01  2.80470224e+02  1.78548855e+03  6.57460419e+03]
E1 = -181.58622496407284  E_coul = 54.32361245775408
cycle= 1 E= -127.262612506319  delta_E= -0.344  |g|= 0.0938  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114643
diis-c [-0.01314297  1.        ]
  HOMO = -0.610855593066505  LUMO = 5.36163460186003
  mo_energy =
[-3.28330158e+01 -1.80407008e+00 -6.10855593e-01 -6.10855593e-01
 -6.10855593e-01  5.36163460e+00  5.36163460e+00  5.36163460e+00
  3.28100233e+01  2.80280325e+02  1.78525031e+03  6.57434032e+03]
E1 = -181.68713918655632  E_coul = 54.4242709995482
cycle= 2 E= -127.262868187008  delta_E= -0.000256  |g|= 0.0117  |ddm|= 0.0157
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142272
diis-c [-9.96077129e-05  8.15406003e-02  9.18459400e-01]
  HOMO = -0.605211412626022  LUMO = 5.37076546349531
  mo_energy =
[-3.28102111e+01 -1.79756284e+00 -6.05211413e-01 -6.05211413e-01
 -6.05211413e-01  5.37076546e+00  5.37076546e+00  5.37076546e+00
  3.28293469e+01  2.80306300e+02  1.78527936e+03  6.57437026e+03]
E1 = -181.6711167191626  E_coul = 54.4082411440942
cycle= 3 E= -127.262875575068  delta_E= -7.39e-06  |g|= 0.000947  |ddm|= 0.00252
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00112559
diis-c [-1.68394970e-08 -2.91493192e-03  5.69235808e-02  9.45991351e-01]
  HOMO = -0.605633203647443  LUMO = 5.3700978309602
  mo_energy =
[-3.28117927e+01 -1.79804531e+00 -6.05633204e-01 -6.05633204e-01
 -6.05633204e-01  5.37009783e+00  5.37009783e+00  5.37009783e+00
  3.28279927e+01  2.80304727e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.67228286855843  E_coul = 54.40940724790042
cycle= 4 E= -127.262875620658  delta_E= -4.56e-08  |g|= 2.51e-06  |ddm|= 0.000183
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.02584e-06
diis-c [-3.14048382e-13  4.00506821e-05 -1.23959720e-03 -1.79955353e-02
  1.01919508e+00]
  HOMO = -0.60563288069856  LUMO = 5.37009838316123
  mo_energy =
[-3.28117912e+01 -1.79804481e+00 -6.05632881e-01 -6.05632881e-01
 -6.05632881e-01  5.37009838e+00  5.37009838e+00  5.37009838e+00
  3.28279944e+01  2.80304730e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.67228207531173  E_coul = 54.409406454653634
cycle= 5 E= -127.262875620658  delta_E= -8.53e-14  |g|= 2.96e-08  |ddm|= 1.95e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67228207531173  E_coul = 54.409406454653634
  HOMO = -0.605632874061443  LUMO = 5.37009839229977
  mo_energy =
[-3.28117912e+01 -1.79804480e+00 -6.05632874e-01 -6.05632874e-01
 -6.05632874e-01  5.37009839e+00  5.37009839e+00  5.37009839e+00
  3.28279944e+01  2.80304730e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.6722820657352  E_coul = 54.40940644507723
Extra cycle  E= -127.262875620658  delta_E= 1.14e-13  |g|= 1.2e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.09927311753393
E1 = -181.6722820657352  E_coul = 54.40940644507723
init E= -127.262875620658
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605632874607098  LUMO = 5.37009839137783
  mo_energy =
[-3.28117912e+01 -1.79804480e+00 -6.05632875e-01 -6.05632875e-01
 -6.05632875e-01  5.37009839e+00  5.37009839e+00  5.37009839e+00
  3.28279944e+01  2.80304730e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.67228206757153  E_coul = 54.40940644691336
cycle= 1 E= -127.262875620658  delta_E= -1.99e-13  |g|= 2.25e-10  |ddm|= 3.01e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67228206757153  E_coul = 54.40940644691336
  HOMO = -0.60563287449193  LUMO = 5.37009839156112
  mo_energy =
[-3.28117912e+01 -1.79804480e+00 -6.05632874e-01 -6.05632874e-01
 -6.05632874e-01  5.37009839e+00  5.37009839e+00  5.37009839e+00
  3.28279944e+01  2.80304730e+02  1.78527779e+03  6.57436870e+03]
E1 = -181.6722820672584  E_coul = 54.4094064466003
Extra cycle  E= -127.262875620658  delta_E= 7.11e-14  |g|= 3.64e-11  |ddm|= 4.92e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94767055e+03 9.49975247e-01 1.29843411e+03 1.96048842e+02
 4.40761657e+01 1.19593510e+01 5.32110366e+00 8.97989121e-01]
grad_E = [-9.57228358e-06 -4.95862291e-05  5.76345624e-05 -3.51454770e-04
  3.28677496e-04  3.61995381e-04 -6.12555820e-04 -3.92455044e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67373802        1
[INPUT] 0    0    [1    /1   ]  0.950009924611       1
[INPUT] 0    0    [1    /1   ]  1298.41446582        1
[INPUT] 0    0    [1    /1   ]  196.184366198        1
[INPUT] 0    0    [1    /1   ]  43.8597102744        1
[INPUT] 0    0    [1    /1   ]  11.9016769332        1
[INPUT] 1    0    [1    /1   ]  5.3111898683         1
[INPUT] 1    0    [1    /1   ]  0.896881240748       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.673738019999, 1.0]], [0, [0.9500099246107276, 1.0]], [0, [1298.4144658176153, 1.0]], [0, [196.18436619778186, 1.0]], [0, [43.85971027441226, 1.0]], [0, [11.901676933186277, 1.0]], [1, [5.311189868297198, 1.0]], [1, [0.8968812407477494, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67373802]
bas 1, expnt(s) = [0.95000992]
bas 2, expnt(s) = [1298.41446582]
bas 3, expnt(s) = [196.1843662]
bas 4, expnt(s) = [43.85971027]
bas 5, expnt(s) = [11.90167693]
bas 6, expnt(s) = [5.31118987]
bas 7, expnt(s) = [0.89688124]
CPU time:        30.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767374e+03 7.40716776e+02 9.50009925e-01 2.43114651e+00
 1.29841447e+03 5.46480958e+02 1.96184366e+02 1.32438216e+02
 4.38597103e+01 4.30590400e+01 1.19016769e+01 1.61890417e+01
 5.31118987e+00 2.35219963e+01 8.96881241e-01 2.54626188e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.828229792050259
cond(S) = 149.93002575632417
E1 = -181.2792298407263  E_coul = 54.359635244728906
init E= -126.919594595997
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649409553466851  LUMO = 5.32991003138229
  mo_energy =
[-3.26692654e+01 -1.83781007e+00 -6.49409553e-01 -6.49409553e-01
 -6.49409553e-01  5.32991003e+00  5.32991003e+00  5.32991003e+00
  3.26657803e+01  2.79739604e+02  1.78493631e+03  6.57413621e+03]
E1 = -181.5755664681367  E_coul = 54.31289303836812
cycle= 1 E= -127.262673429769  delta_E= -0.343  |g|= 0.0945  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114941
diis-c [-0.01321147  1.        ]
  HOMO = -0.611546522395098  LUMO = 5.35037674359263
  mo_energy =
[-3.28357434e+01 -1.80466410e+00 -6.11546522e-01 -6.11546522e-01
 -6.11546522e-01  5.35037674e+00  5.35037674e+00  5.35037674e+00
  3.25622055e+01  2.79547406e+02  1.78469512e+03  6.57386927e+03]
E1 = -181.6780497893403  E_coul = 54.41511377951353
cycle= 2 E= -127.262936009827  delta_E= -0.000263  |g|= 0.0119  |ddm|= 0.0159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0144501
diis-c [-1.00125596e-04  8.34469808e-02  9.16553019e-01]
  HOMO = -0.605823341618493  LUMO = 5.35962016687211
  mo_energy =
[-3.28126459e+01 -1.79806614e+00 -6.05823342e-01 -6.05823342e-01
 -6.05823342e-01  5.35962017e+00  5.35962017e+00  5.35962017e+00
  3.25817472e+01  2.79573690e+02  1.78472449e+03  6.57389955e+03]
E1 = -181.66177504986402  E_coul = 54.398831400503425
cycle= 3 E= -127.262943649361  delta_E= -7.64e-06  |g|= 0.00094  |ddm|= 0.00256
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111655
diis-c [-1.69338982e-08 -2.94117178e-03  5.51687016e-02  9.47772470e-01]
  HOMO = -0.606241578508667  LUMO = 5.35895944940513
  mo_energy =
[-3.28142115e+01 -1.79854439e+00 -6.06241579e-01 -6.06241579e-01
 -6.06241579e-01  5.35895945e+00  5.35895945e+00  5.35895945e+00
  3.25804086e+01  2.79572137e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.6629331899133  E_coul = 54.39998949565089
cycle= 4 E= -127.262943694262  delta_E= -4.49e-08  |g|= 2.52e-06  |ddm|= 0.000181
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04249e-06
diis-c [-3.24946247e-13  4.08426773e-05 -1.21153106e-03 -1.81256118e-02
  1.01929630e+00]
  HOMO = -0.606241247612989  LUMO = 5.35896001083928
  mo_energy =
[-3.28142099e+01 -1.79854388e+00 -6.06241248e-01 -6.06241248e-01
 -6.06241248e-01  5.35896001e+00  5.35896001e+00  5.35896001e+00
  3.25804104e+01  2.79572140e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.66293238072586  E_coul = 54.39998868646334
cycle= 5 E= -127.262943694263  delta_E= -1.14e-13  |g|= 2.99e-08  |ddm|= 1.99e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66293238072586  E_coul = 54.39998868646334
  HOMO = -0.606241241135333  LUMO = 5.35896001970582
  mo_energy =
[-3.28142099e+01 -1.79854387e+00 -6.06241241e-01 -6.06241241e-01
 -6.06241241e-01  5.35896002e+00  5.35896002e+00  5.35896002e+00
  3.25804104e+01  2.79572140e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.6629323717497  E_coul = 54.3999886774871
Extra cycle  E= -127.262943694263  delta_E= -5.68e-14  |g|= 1.16e-09  |ddm|= 2.66e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767374e+03 9.50009925e-01 1.29841447e+03 1.96184366e+02
 4.38597103e+01 1.19016769e+01 5.31118987e+00 8.96881241e-01]
E = -127.26294369426259
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67373802        1
[INPUT] 0    0    [1    /1   ]  0.950009924611       1
[INPUT] 0    0    [1    /1   ]  1298.41446582        1
[INPUT] 0    0    [1    /1   ]  196.184366198        1
[INPUT] 0    0    [1    /1   ]  43.8597102744        1
[INPUT] 0    0    [1    /1   ]  11.9016769332        1
[INPUT] 1    0    [1    /1   ]  5.3111898683         1
[INPUT] 1    0    [1    /1   ]  0.896881240748       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.673738019999, 1.0]], [0, [0.9500099246107276, 1.0]], [0, [1298.4144658176153, 1.0]], [0, [196.18436619778186, 1.0]], [0, [43.85971027441226, 1.0]], [0, [11.901676933186277, 1.0]], [1, [5.311189868297198, 1.0]], [1, [0.8968812407477494, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67373802]
bas 1, expnt(s) = [0.95000992]
bas 2, expnt(s) = [1298.41446582]
bas 3, expnt(s) = [196.1843662]
bas 4, expnt(s) = [43.85971027]
bas 5, expnt(s) = [11.90167693]
bas 6, expnt(s) = [5.31118987]
bas 7, expnt(s) = [0.89688124]
CPU time:        30.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767374e+03 7.40716776e+02 9.50009925e-01 2.43114651e+00
 1.29841447e+03 5.46480958e+02 1.96184366e+02 1.32438216e+02
 4.38597103e+01 4.30590400e+01 1.19016769e+01 1.61890417e+01
 5.31118987e+00 2.35219963e+01 8.96881241e-01 2.54626188e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.828229792050259
cond(S) = 149.93002575632417
E1 = -181.2792298407263  E_coul = 54.359635244728906
init E= -126.919594595997
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649409553466851  LUMO = 5.32991003138229
  mo_energy =
[-3.26692654e+01 -1.83781007e+00 -6.49409553e-01 -6.49409553e-01
 -6.49409553e-01  5.32991003e+00  5.32991003e+00  5.32991003e+00
  3.26657803e+01  2.79739604e+02  1.78493631e+03  6.57413621e+03]
E1 = -181.5755664681367  E_coul = 54.31289303836812
cycle= 1 E= -127.262673429769  delta_E= -0.343  |g|= 0.0945  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114941
diis-c [-0.01321147  1.        ]
  HOMO = -0.611546522395098  LUMO = 5.35037674359263
  mo_energy =
[-3.28357434e+01 -1.80466410e+00 -6.11546522e-01 -6.11546522e-01
 -6.11546522e-01  5.35037674e+00  5.35037674e+00  5.35037674e+00
  3.25622055e+01  2.79547406e+02  1.78469512e+03  6.57386927e+03]
E1 = -181.6780497893403  E_coul = 54.41511377951353
cycle= 2 E= -127.262936009827  delta_E= -0.000263  |g|= 0.0119  |ddm|= 0.0159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0144501
diis-c [-1.00125596e-04  8.34469808e-02  9.16553019e-01]
  HOMO = -0.605823341618493  LUMO = 5.35962016687211
  mo_energy =
[-3.28126459e+01 -1.79806614e+00 -6.05823342e-01 -6.05823342e-01
 -6.05823342e-01  5.35962017e+00  5.35962017e+00  5.35962017e+00
  3.25817472e+01  2.79573690e+02  1.78472449e+03  6.57389955e+03]
E1 = -181.66177504986402  E_coul = 54.398831400503425
cycle= 3 E= -127.262943649361  delta_E= -7.64e-06  |g|= 0.00094  |ddm|= 0.00256
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111655
diis-c [-1.69338982e-08 -2.94117178e-03  5.51687016e-02  9.47772470e-01]
  HOMO = -0.606241578508667  LUMO = 5.35895944940513
  mo_energy =
[-3.28142115e+01 -1.79854439e+00 -6.06241579e-01 -6.06241579e-01
 -6.06241579e-01  5.35895945e+00  5.35895945e+00  5.35895945e+00
  3.25804086e+01  2.79572137e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.6629331899133  E_coul = 54.39998949565089
cycle= 4 E= -127.262943694262  delta_E= -4.49e-08  |g|= 2.52e-06  |ddm|= 0.000181
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04249e-06
diis-c [-3.24946247e-13  4.08426773e-05 -1.21153106e-03 -1.81256118e-02
  1.01929630e+00]
  HOMO = -0.606241247612989  LUMO = 5.35896001083928
  mo_energy =
[-3.28142099e+01 -1.79854388e+00 -6.06241248e-01 -6.06241248e-01
 -6.06241248e-01  5.35896001e+00  5.35896001e+00  5.35896001e+00
  3.25804104e+01  2.79572140e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.66293238072586  E_coul = 54.39998868646334
cycle= 5 E= -127.262943694263  delta_E= -1.14e-13  |g|= 2.99e-08  |ddm|= 1.99e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66293238072586  E_coul = 54.39998868646334
  HOMO = -0.606241241135333  LUMO = 5.35896001970582
  mo_energy =
[-3.28142099e+01 -1.79854387e+00 -6.06241241e-01 -6.06241241e-01
 -6.06241241e-01  5.35896002e+00  5.35896002e+00  5.35896002e+00
  3.25804104e+01  2.79572140e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.6629323717497  E_coul = 54.3999886774871
Extra cycle  E= -127.262943694263  delta_E= -5.68e-14  |g|= 1.16e-09  |ddm|= 2.66e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.93002575632417
E1 = -181.6629323717497  E_coul = 54.3999886774871
init E= -127.262943694263
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.606241241642955  LUMO = 5.35896001884507
  mo_energy =
[-3.28142099e+01 -1.79854387e+00 -6.06241242e-01 -6.06241242e-01
 -6.06241242e-01  5.35896002e+00  5.35896002e+00  5.35896002e+00
  3.25804104e+01  2.79572140e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.6629323734904  E_coul = 54.39998867922798
cycle= 1 E= -127.262943694262  delta_E= 1.71e-13  |g|= 2.14e-10  |ddm|= 2.87e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6629323734904  E_coul = 54.39998867922798
  HOMO = -0.606241241533614  LUMO = 5.35896001901872
  mo_energy =
[-3.28142099e+01 -1.79854387e+00 -6.06241242e-01 -6.06241242e-01
 -6.06241242e-01  5.35896002e+00  5.35896002e+00  5.35896002e+00
  3.25804104e+01  2.79572140e+02  1.78472295e+03  6.57389801e+03]
E1 = -181.66293237319357  E_coul = 54.39998867893111
Extra cycle  E= -127.262943694262  delta_E= -4.26e-14  |g|= 3.45e-11  |ddm|= 4.66e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [1.94767374e+03 9.50009925e-01 1.29841447e+03 1.96184366e+02
 4.38597103e+01 1.19016769e+01 5.31118987e+00 8.96881241e-01]
grad_E = [-9.77321071e-06  3.02756966e-05  5.65223411e-05 -2.66389634e-04
 -1.05593654e-04  5.26127971e-05 -1.64240621e-03 -1.71219800e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67380922        1
[INPUT] 0    0    [1    /1   ]  0.94998532004        1
[INPUT] 0    0    [1    /1   ]  1298.41403074        1
[INPUT] 0    0    [1    /1   ]  196.187238266        1
[INPUT] 0    0    [1    /1   ]  43.8557347654        1
[INPUT] 0    0    [1    /1   ]  11.9001489704        1
[INPUT] 1    0    [1    /1   ]  5.31261920175        1
[INPUT] 1    0    [1    /1   ]  0.89704297414        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6738092211965, 1.0]], [0, [0.9499853200403158, 1.0]], [0, [1298.414030735589, 1.0]], [0, [196.1872382658154, 1.0]], [0, [43.8557347653972, 1.0]], [0, [11.900148970403738, 1.0]], [1, [5.312619201749926, 1.0]], [1, [0.8970429741397934, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67380922]
bas 1, expnt(s) = [0.94998532]
bas 2, expnt(s) = [1298.41403074]
bas 3, expnt(s) = [196.18723827]
bas 4, expnt(s) = [43.85573477]
bas 5, expnt(s) = [11.90014897]
bas 6, expnt(s) = [5.3126192]
bas 7, expnt(s) = [0.89704297]
CPU time:        33.30
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767381e+03 7.40716796e+02 9.49985320e-01 2.43109928e+00
 1.29841403e+03 5.46480820e+02 1.96187238e+02 1.32439670e+02
 4.38557348e+01 4.30561128e+01 1.19001490e+01 1.61874829e+01
 5.31261920e+00 2.35299092e+01 8.97042974e-01 2.54683585e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.828167785451166
cond(S) = 149.92629108282136
E1 = -181.2793605640614  E_coul = 54.359794839646746
init E= -126.919565724415
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64941612632077  LUMO = 5.33140444350929
  mo_energy =
[-3.26691719e+01 -1.83780659e+00 -6.49416126e-01 -6.49416126e-01
 -6.49416126e-01  5.33140444e+00  5.33140444e+00  5.33140444e+00
  3.26600899e+01  2.79724794e+02  1.78492581e+03  6.57412748e+03]
E1 = -181.5767896742556  E_coul = 54.314112911219965
cycle= 1 E= -127.262676763036  delta_E= -0.343  |g|= 0.0944  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114867
diis-c [-0.0131945  1.       ]
  HOMO = -0.611466691300289  LUMO = 5.35196560461254
  mo_energy =
[-3.28354824e+01 -1.80455593e+00 -6.11466691e-01 -6.11466691e-01
 -6.11466691e-01  5.35196560e+00  5.35196560e+00  5.35196560e+00
  3.25566955e+01  2.79532737e+02  1.78468474e+03  6.57386065e+03]
E1 = -181.67912952666342  E_coul = 54.416190800979805
cycle= 2 E= -127.262938725684  delta_E= -0.000262  |g|= 0.0118  |ddm|= 0.0159
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0144312
diis-c [-9.99766984e-05  8.33560559e-02  9.16643944e-01]
  HOMO = -0.605751299644456  LUMO = 5.36119862189588
  mo_energy =
[-3.28124131e+01 -1.79796724e+00 -6.05751300e-01 -6.05751300e-01
 -6.05751300e-01  5.36119862e+00  5.36119862e+00  5.36119862e+00
  3.25762120e+01  2.79558991e+02  1.78471408e+03  6.57389089e+03]
E1 = -181.66287904283658  E_coul = 54.39993270007128
cycle= 3 E= -127.262946342765  delta_E= -7.62e-06  |g|= 0.00094  |ddm|= 0.00255
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111621
diis-c [-1.69441075e-08 -2.94168416e-03  5.52291646e-02  9.47712520e-01]
  HOMO = -0.60616936126477  LUMO = 5.36053802756497
  mo_energy =
[-3.28139783e+01 -1.79844526e+00 -6.06169361e-01 -6.06169361e-01
 -6.06169361e-01  5.36053803e+00  5.36053803e+00  5.36053803e+00
  3.25748739e+01  2.79557439e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.66403653959665  E_coul = 54.40109015197126
cycle= 4 E= -127.262946387625  delta_E= -4.49e-08  |g|= 2.53e-06  |ddm|= 0.000181
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04374e-06
diis-c [-3.25276675e-13  4.08473835e-05 -1.21283589e-03 -1.81219735e-02
  1.01929396e+00]
  HOMO = -0.606169029301208  LUMO = 5.36053859079073
  mo_energy =
[-3.28139767e+01 -1.79844475e+00 -6.06169029e-01 -6.06169029e-01
 -6.06169029e-01  5.36053859e+00  5.36053859e+00  5.36053859e+00
  3.25748756e+01  2.79557442e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.66403572796017  E_coul = 54.40108934033455
cycle= 5 E= -127.262946387626  delta_E= -2.27e-13  |g|= 2.99e-08  |ddm|= 1.99e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66403572796017  E_coul = 54.40108934033455
  HOMO = -0.606169022821025  LUMO = 5.36053859966123
  mo_energy =
[-3.28139767e+01 -1.79844474e+00 -6.06169023e-01 -6.06169023e-01
 -6.06169023e-01  5.36053860e+00  5.36053860e+00  5.36053860e+00
  3.25748757e+01  2.79557442e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.6640357189858  E_coul = 54.401089331360204
Extra cycle  E= -127.262946387626  delta_E= 2.84e-14  |g|= 1.17e-09  |ddm|= 2.66e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767381e+03 9.49985320e-01 1.29841403e+03 1.96187238e+02
 4.38557348e+01 1.19001490e+01 5.31261920e+00 8.97042974e-01]
E = -127.26294638762559
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67380922        1
[INPUT] 0    0    [1    /1   ]  0.94998532004        1
[INPUT] 0    0    [1    /1   ]  1298.41403074        1
[INPUT] 0    0    [1    /1   ]  196.187238266        1
[INPUT] 0    0    [1    /1   ]  43.8557347654        1
[INPUT] 0    0    [1    /1   ]  11.9001489704        1
[INPUT] 1    0    [1    /1   ]  5.31261920175        1
[INPUT] 1    0    [1    /1   ]  0.89704297414        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6738092211965, 1.0]], [0, [0.9499853200403158, 1.0]], [0, [1298.414030735589, 1.0]], [0, [196.1872382658154, 1.0]], [0, [43.8557347653972, 1.0]], [0, [11.900148970403738, 1.0]], [1, [5.312619201749926, 1.0]], [1, [0.8970429741397934, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67380922]
bas 1, expnt(s) = [0.94998532]
bas 2, expnt(s) = [1298.41403074]
bas 3, expnt(s) = [196.18723827]
bas 4, expnt(s) = [43.85573477]
bas 5, expnt(s) = [11.90014897]
bas 6, expnt(s) = [5.3126192]
bas 7, expnt(s) = [0.89704297]
CPU time:        33.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767381e+03 7.40716796e+02 9.49985320e-01 2.43109928e+00
 1.29841403e+03 5.46480820e+02 1.96187238e+02 1.32439670e+02
 4.38557348e+01 4.30561128e+01 1.19001490e+01 1.61874829e+01
 5.31261920e+00 2.35299092e+01 8.97042974e-01 2.54683585e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.828167785451166
cond(S) = 149.92629108282136
E1 = -181.2793605640614  E_coul = 54.359794839646746
init E= -126.919565724415
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64941612632077  LUMO = 5.33140444350929
  mo_energy =
[-3.26691719e+01 -1.83780659e+00 -6.49416126e-01 -6.49416126e-01
 -6.49416126e-01  5.33140444e+00  5.33140444e+00  5.33140444e+00
  3.26600899e+01  2.79724794e+02  1.78492581e+03  6.57412748e+03]
E1 = -181.5767896742556  E_coul = 54.314112911219965
cycle= 1 E= -127.262676763036  delta_E= -0.343  |g|= 0.0944  |ddm|= 0.319
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.114867
diis-c [-0.0131945  1.       ]
  HOMO = -0.611466691300289  LUMO = 5.35196560461254
  mo_energy =
[-3.28354824e+01 -1.80455593e+00 -6.11466691e-01 -6.11466691e-01
 -6.11466691e-01  5.35196560e+00  5.35196560e+00  5.35196560e+00
  3.25566955e+01  2.79532737e+02  1.78468474e+03  6.57386065e+03]
E1 = -181.67912952666342  E_coul = 54.416190800979805
cycle= 2 E= -127.262938725684  delta_E= -0.000262  |g|= 0.0118  |ddm|= 0.0159
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0144312
diis-c [-9.99766984e-05  8.33560559e-02  9.16643944e-01]
  HOMO = -0.605751299644456  LUMO = 5.36119862189588
  mo_energy =
[-3.28124131e+01 -1.79796724e+00 -6.05751300e-01 -6.05751300e-01
 -6.05751300e-01  5.36119862e+00  5.36119862e+00  5.36119862e+00
  3.25762120e+01  2.79558991e+02  1.78471408e+03  6.57389089e+03]
E1 = -181.66287904283658  E_coul = 54.39993270007128
cycle= 3 E= -127.262946342765  delta_E= -7.62e-06  |g|= 0.00094  |ddm|= 0.00255
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111621
diis-c [-1.69441075e-08 -2.94168416e-03  5.52291646e-02  9.47712520e-01]
  HOMO = -0.60616936126477  LUMO = 5.36053802756497
  mo_energy =
[-3.28139783e+01 -1.79844526e+00 -6.06169361e-01 -6.06169361e-01
 -6.06169361e-01  5.36053803e+00  5.36053803e+00  5.36053803e+00
  3.25748739e+01  2.79557439e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.66403653959665  E_coul = 54.40109015197126
cycle= 4 E= -127.262946387625  delta_E= -4.49e-08  |g|= 2.53e-06  |ddm|= 0.000181
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04374e-06
diis-c [-3.25276675e-13  4.08473835e-05 -1.21283589e-03 -1.81219735e-02
  1.01929396e+00]
  HOMO = -0.606169029301208  LUMO = 5.36053859079073
  mo_energy =
[-3.28139767e+01 -1.79844475e+00 -6.06169029e-01 -6.06169029e-01
 -6.06169029e-01  5.36053859e+00  5.36053859e+00  5.36053859e+00
  3.25748756e+01  2.79557442e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.66403572796017  E_coul = 54.40108934033455
cycle= 5 E= -127.262946387626  delta_E= -2.27e-13  |g|= 2.99e-08  |ddm|= 1.99e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.66403572796017  E_coul = 54.40108934033455
  HOMO = -0.606169022821025  LUMO = 5.36053859966123
  mo_energy =
[-3.28139767e+01 -1.79844474e+00 -6.06169023e-01 -6.06169023e-01
 -6.06169023e-01  5.36053860e+00  5.36053860e+00  5.36053860e+00
  3.25748757e+01  2.79557442e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.6640357189858  E_coul = 54.401089331360204
Extra cycle  E= -127.262946387626  delta_E= 2.84e-14  |g|= 1.17e-09  |ddm|= 2.66e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.92629108282136
E1 = -181.6640357189858  E_coul = 54.401089331360204
init E= -127.262946387626
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.606169023328475  LUMO = 5.36053859880052
  mo_energy =
[-3.28139767e+01 -1.79844474e+00 -6.06169023e-01 -6.06169023e-01
 -6.06169023e-01  5.36053860e+00  5.36053860e+00  5.36053860e+00
  3.25748757e+01  2.79557442e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.66403572072645  E_coul = 54.401089333100856
cycle= 1 E= -127.262946387626  delta_E=    0  |g|= 2.15e-10  |ddm|= 2.87e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.66403572072645  E_coul = 54.401089333100856
  HOMO = -0.606169023219151  LUMO = 5.36053859897416
  mo_energy =
[-3.28139767e+01 -1.79844474e+00 -6.06169023e-01 -6.06169023e-01
 -6.06169023e-01  5.36053860e+00  5.36053860e+00  5.36053860e+00
  3.25748757e+01  2.79557442e+02  1.78471254e+03  6.57388936e+03]
E1 = -181.6640357204295  E_coul = 54.40108933280395
Extra cycle  E= -127.262946387626  delta_E= 4.26e-14  |g|= 3.46e-11  |ddm|= 4.66e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94767381e+03 9.49985320e-01 1.29841403e+03 1.96187238e+02
 4.38557348e+01 1.19001490e+01 5.31261920e+00 8.97042974e-01]
grad_E = [-9.77636135e-06  2.86552212e-05  5.65046089e-05 -2.65201593e-04
 -1.07133135e-04  1.95178979e-05 -1.49662595e-03 -1.79523864e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67404971        1
[INPUT] 0    0    [1    /1   ]  0.949869749489       1
[INPUT] 0    0    [1    /1   ]  1298.41256736        1
[INPUT] 0    0    [1    /1   ]  196.196699182        1
[INPUT] 0    0    [1    /1   ]  43.8433530117        1
[INPUT] 0    0    [1    /1   ]  11.8964269315        1
[INPUT] 1    0    [1    /1   ]  5.31961455807        1
[INPUT] 1    0    [1    /1   ]  0.897842204991       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.674049706587, 1.0]], [0, [0.9498697494893725, 1.0]], [0, [1298.4125673572323, 1.0]], [0, [196.19669918228283, 1.0]], [0, [43.84335301166207, 1.0]], [0, [11.89642693153635, 1.0]], [1, [5.3196145580736625, 1.0]], [1, [0.8978422049914137, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67404971]
bas 1, expnt(s) = [0.94986975]
bas 2, expnt(s) = [1298.41256736]
bas 3, expnt(s) = [196.19669918]
bas 4, expnt(s) = [43.84335301]
bas 5, expnt(s) = [11.89642693]
bas 6, expnt(s) = [5.31961456]
bas 7, expnt(s) = [0.8978422]
CPU time:        36.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767405e+03 7.40716864e+02 9.49869749e-01 2.43087746e+00
 1.29841257e+03 5.46480358e+02 1.96196699e+02 1.32444460e+02
 4.38433530e+01 4.30469955e+01 1.18964269e+01 1.61836855e+01
 5.31961456e+00 2.35686442e+01 8.97842205e-01 2.54967258e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827859289061099
cond(S) = 149.91611390982067
E1 = -181.28001883539523  E_coul = 54.36060308065116
init E= -126.919415754744
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649443390179464  LUMO = 5.33875806751768
  mo_energy =
[-3.26686929e+01 -1.83780871e+00 -6.49443390e-01 -6.49443390e-01
 -6.49443390e-01  5.33875807e+00  5.33875807e+00  5.33875807e+00
  3.26447960e+01  2.79683079e+02  1.78489822e+03  6.57410527e+03]
E1 = -181.58309127460672  E_coul = 54.32040183671902
cycle= 1 E= -127.262689437888  delta_E= -0.343  |g|= 0.0941  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114494
diis-c [-0.01310882  1.        ]
  HOMO = -0.611054937326168  LUMO = 5.35981097958518
  mo_energy =
[-3.28341005e+01 -1.80403299e+00 -6.11054937e-01 -6.11054937e-01
 -6.11054937e-01  5.35981098e+00  5.35981098e+00  5.35981098e+00
  3.25423229e+01  2.79491861e+02  1.78465791e+03  6.57383918e+03]
E1 = -181.68465979894435  E_coul = 54.42171170343321
cycle= 2 E= -127.262948095511  delta_E= -0.000259  |g|= 0.0118  |ddm|= 0.0158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0143284
diis-c [-9.92769874e-05  8.28018813e-02  9.17198119e-01]
  HOMO = -0.605381025322796  LUMO = 5.36898767861444
  mo_energy =
[-3.28111818e+01 -1.79749346e+00 -6.05381025e-01 -6.05381025e-01
 -6.05381025e-01  5.36898768e+00  5.36898768e+00  5.36898768e+00
  3.25617066e+01  2.79517958e+02  1.78468709e+03  6.57386926e+03]
E1 = -181.66853787436375  E_coul = 54.40558228202321
cycle= 3 E= -127.262955592341  delta_E= -7.5e-06  |g|= 0.000939  |ddm|= 0.00253
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111534
diis-c [-1.69686039e-08 -2.94521905e-03  5.56231283e-02  9.47322091e-01]
  HOMO = -0.605798579655986  LUMO = 5.36832712642634
  mo_energy =
[-3.28127461e+01 -1.79797078e+00 -6.05798580e-01 -6.05798580e-01
 -6.05798580e-01  5.36832713e+00  5.36832713e+00  5.36832713e+00
  3.25603697e+01  2.79516406e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.6696931140702  E_coul = 54.40673747700395
cycle= 4 E= -127.262955637066  delta_E= -4.47e-08  |g|= 2.53e-06  |ddm|= 0.000181
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.0453e-06
diis-c [-3.26119461e-13  4.08703227e-05 -1.21994863e-03 -1.80867590e-02
  1.01926584e+00]
  HOMO = -0.60579824321984  LUMO = 5.36832769733522
  mo_energy =
[-3.28127445e+01 -1.79797027e+00 -6.05798243e-01 -6.05798243e-01
 -6.05798243e-01  5.36832770e+00  5.36832770e+00  5.36832770e+00
  3.25603715e+01  2.79516409e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.6696922917437  E_coul = 54.40673665467739
cycle= 5 E= -127.262955637066  delta_E= -5.68e-14  |g|= 3e-08  |ddm|= 2e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6696922917437  E_coul = 54.40673665467739
  HOMO = -0.605798236749725  LUMO = 5.36832770619216
  mo_energy =
[-3.28127445e+01 -1.79797026e+00 -6.05798237e-01 -6.05798237e-01
 -6.05798237e-01  5.36832771e+00  5.36832771e+00  5.36832771e+00
  3.25603715e+01  2.79516409e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.66969228282545  E_coul = 54.406736645759146
Extra cycle  E= -127.262955637066  delta_E=    0  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.94767405e+03 9.49869749e-01 1.29841257e+03 1.96196699e+02
 4.38433530e+01 1.18964269e+01 5.31961456e+00 8.97842205e-01]
E = -127.26295563706631
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67404971        1
[INPUT] 0    0    [1    /1   ]  0.949869749489       1
[INPUT] 0    0    [1    /1   ]  1298.41256736        1
[INPUT] 0    0    [1    /1   ]  196.196699182        1
[INPUT] 0    0    [1    /1   ]  43.8433530117        1
[INPUT] 0    0    [1    /1   ]  11.8964269315        1
[INPUT] 1    0    [1    /1   ]  5.31961455807        1
[INPUT] 1    0    [1    /1   ]  0.897842204991       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.674049706587, 1.0]], [0, [0.9498697494893725, 1.0]], [0, [1298.4125673572323, 1.0]], [0, [196.19669918228283, 1.0]], [0, [43.84335301166207, 1.0]], [0, [11.89642693153635, 1.0]], [1, [5.3196145580736625, 1.0]], [1, [0.8978422049914137, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67404971]
bas 1, expnt(s) = [0.94986975]
bas 2, expnt(s) = [1298.41256736]
bas 3, expnt(s) = [196.19669918]
bas 4, expnt(s) = [43.84335301]
bas 5, expnt(s) = [11.89642693]
bas 6, expnt(s) = [5.31961456]
bas 7, expnt(s) = [0.8978422]
CPU time:        36.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767405e+03 7.40716864e+02 9.49869749e-01 2.43087746e+00
 1.29841257e+03 5.46480358e+02 1.96196699e+02 1.32444460e+02
 4.38433530e+01 4.30469955e+01 1.18964269e+01 1.61836855e+01
 5.31961456e+00 2.35686442e+01 8.97842205e-01 2.54967258e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827859289061099
cond(S) = 149.91611390982067
E1 = -181.28001883539523  E_coul = 54.36060308065116
init E= -126.919415754744
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649443390179464  LUMO = 5.33875806751768
  mo_energy =
[-3.26686929e+01 -1.83780871e+00 -6.49443390e-01 -6.49443390e-01
 -6.49443390e-01  5.33875807e+00  5.33875807e+00  5.33875807e+00
  3.26447960e+01  2.79683079e+02  1.78489822e+03  6.57410527e+03]
E1 = -181.58309127460672  E_coul = 54.32040183671902
cycle= 1 E= -127.262689437888  delta_E= -0.343  |g|= 0.0941  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114494
diis-c [-0.01310882  1.        ]
  HOMO = -0.611054937326168  LUMO = 5.35981097958518
  mo_energy =
[-3.28341005e+01 -1.80403299e+00 -6.11054937e-01 -6.11054937e-01
 -6.11054937e-01  5.35981098e+00  5.35981098e+00  5.35981098e+00
  3.25423229e+01  2.79491861e+02  1.78465791e+03  6.57383918e+03]
E1 = -181.68465979894435  E_coul = 54.42171170343321
cycle= 2 E= -127.262948095511  delta_E= -0.000259  |g|= 0.0118  |ddm|= 0.0158
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0143284
diis-c [-9.92769874e-05  8.28018813e-02  9.17198119e-01]
  HOMO = -0.605381025322796  LUMO = 5.36898767861444
  mo_energy =
[-3.28111818e+01 -1.79749346e+00 -6.05381025e-01 -6.05381025e-01
 -6.05381025e-01  5.36898768e+00  5.36898768e+00  5.36898768e+00
  3.25617066e+01  2.79517958e+02  1.78468709e+03  6.57386926e+03]
E1 = -181.66853787436375  E_coul = 54.40558228202321
cycle= 3 E= -127.262955592341  delta_E= -7.5e-06  |g|= 0.000939  |ddm|= 0.00253
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111534
diis-c [-1.69686039e-08 -2.94521905e-03  5.56231283e-02  9.47322091e-01]
  HOMO = -0.605798579655986  LUMO = 5.36832712642634
  mo_energy =
[-3.28127461e+01 -1.79797078e+00 -6.05798580e-01 -6.05798580e-01
 -6.05798580e-01  5.36832713e+00  5.36832713e+00  5.36832713e+00
  3.25603697e+01  2.79516406e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.6696931140702  E_coul = 54.40673747700395
cycle= 4 E= -127.262955637066  delta_E= -4.47e-08  |g|= 2.53e-06  |ddm|= 0.000181
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.0453e-06
diis-c [-3.26119461e-13  4.08703227e-05 -1.21994863e-03 -1.80867590e-02
  1.01926584e+00]
  HOMO = -0.60579824321984  LUMO = 5.36832769733522
  mo_energy =
[-3.28127445e+01 -1.79797027e+00 -6.05798243e-01 -6.05798243e-01
 -6.05798243e-01  5.36832770e+00  5.36832770e+00  5.36832770e+00
  3.25603715e+01  2.79516409e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.6696922917437  E_coul = 54.40673665467739
cycle= 5 E= -127.262955637066  delta_E= -5.68e-14  |g|= 3e-08  |ddm|= 2e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6696922917437  E_coul = 54.40673665467739
  HOMO = -0.605798236749725  LUMO = 5.36832770619216
  mo_energy =
[-3.28127445e+01 -1.79797026e+00 -6.05798237e-01 -6.05798237e-01
 -6.05798237e-01  5.36832771e+00  5.36832771e+00  5.36832771e+00
  3.25603715e+01  2.79516409e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.66969228282545  E_coul = 54.406736645759146
Extra cycle  E= -127.262955637066  delta_E=    0  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.91611390982067
E1 = -181.66969228282545  E_coul = 54.406736645759146
init E= -127.262955637066
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605798237253512  LUMO = 5.36832770533618
  mo_energy =
[-3.28127445e+01 -1.79797026e+00 -6.05798237e-01 -6.05798237e-01
 -6.05798237e-01  5.36832771e+00  5.36832771e+00  5.36832771e+00
  3.25603715e+01  2.79516409e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.66969228455525  E_coul = 54.40673664748896
cycle= 1 E= -127.262955637066  delta_E= 2.84e-14  |g|= 2.13e-10  |ddm|= 2.86e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.66969228455525  E_coul = 54.40673664748896
  HOMO = -0.605798237144875  LUMO = 5.3683277055089
  mo_energy =
[-3.28127445e+01 -1.79797026e+00 -6.05798237e-01 -6.05798237e-01
 -6.05798237e-01  5.36832771e+00  5.36832771e+00  5.36832771e+00
  3.25603715e+01  2.79516409e+02  1.78468555e+03  6.57386773e+03]
E1 = -181.66969228426072  E_coul = 54.40673664719435
Extra cycle  E= -127.262955637066  delta_E= -8.53e-14  |g|= 3.42e-11  |ddm|= 4.63e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94767405e+03 9.49869749e-01 1.29841257e+03 1.96196699e+02
 4.38433530e+01 1.18964269e+01 5.31961456e+00 8.97842205e-01]
grad_E = [-9.78800073e-06  1.47301297e-05  5.64387219e-05 -2.60364368e-04
 -1.29381441e-04 -9.76336515e-06 -7.94843224e-04 -9.19904598e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67434723        1
[INPUT] 0    0    [1    /1   ]  0.949730500157       1
[INPUT] 0    0    [1    /1   ]  1298.41076058        1
[INPUT] 0    0    [1    /1   ]  196.208258616        1
[INPUT] 0    0    [1    /1   ]  43.8287549979        1
[INPUT] 0    0    [1    /1   ]  11.8921198065        1
[INPUT] 1    0    [1    /1   ]  5.32809544887        1
[INPUT] 1    0    [1    /1   ]  0.898810353493       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6743472253806, 1.0]], [0, [0.949730500156511, 1.0]], [0, [1298.410760575497, 1.0]], [0, [196.20825861640395, 1.0]], [0, [43.8287549978623, 1.0]], [0, [11.892119806507113, 1.0]], [1, [5.328095448866151, 1.0]], [1, [0.898810353492983, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67434723]
bas 1, expnt(s) = [0.9497305]
bas 2, expnt(s) = [1298.41076058]
bas 3, expnt(s) = [196.20825862]
bas 4, expnt(s) = [43.828755]
bas 5, expnt(s) = [11.89211981]
bas 6, expnt(s) = [5.32809545]
bas 7, expnt(s) = [0.89881035]
CPU time:        39.44
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767435e+03 7.40716949e+02 9.49730500e-01 2.43061018e+00
 1.29841076e+03 5.46479788e+02 1.96208259e+02 1.32450312e+02
 4.38287550e+01 4.30362454e+01 1.18921198e+01 1.61792908e+01
 5.32809545e+00 2.36156220e+01 8.98810353e-01 2.55310970e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82748450719007
cond(S) = 149.90432074973424
E1 = -181.2807989289648  E_coul = 54.36157288842254
init E= -126.919226040542
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649475775792974  LUMO = 5.34767542144235
  mo_energy =
[-3.26681140e+01 -1.83781309e+00 -6.49475776e-01 -6.49475776e-01
 -6.49475776e-01  5.34767542e+00  5.34767542e+00  5.34767542e+00
  3.26269542e+01  2.79634542e+02  1.78486716e+03  6.57408063e+03]
E1 = -181.59072212798867  E_coul = 54.328024496562705
cycle= 1 E= -127.262697631426  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114042
diis-c [-0.01300559  1.        ]
  HOMO = -0.610554632183343  LUMO = 5.36932627457072
  mo_energy =
[-3.28324238e+01 -1.80340093e+00 -6.10554632e-01 -6.10554632e-01
 -6.10554632e-01  5.36932627e+00  5.36932627e+00  5.36932627e+00
  3.25255983e+01  2.79444348e+02  1.78462779e+03  6.57381546e+03]
E1 = -181.69135526748124  E_coul = 54.4284029589801
cycle= 2 E= -127.262952308501  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142036
diis-c [-9.84292878e-05  8.21202094e-02  9.17879791e-01]
  HOMO = -0.60493101874562  LUMO = 5.37843449109451
  mo_energy =
[-3.28096879e+01 -1.79692098e+00 -6.04931019e-01 -6.04931019e-01
 -6.04931019e-01  5.37843449e+00  5.37843449e+00  5.37843449e+00
  3.25448211e+01  2.79470255e+02  1.78465677e+03  6.57384534e+03]
E1 = -181.67538899914635  E_coul = 54.41242933827806
cycle= 3 E= -127.262959660868  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111428
diis-c [-1.69962821e-08 -2.94957222e-03  5.61092263e-02  9.46840346e-01]
  HOMO = -0.605347961908082  LUMO = 5.37777398622243
  mo_energy =
[-3.28112512e+01 -1.79739745e+00 -6.05347962e-01 -6.05347962e-01
 -6.05347962e-01  5.37777399e+00  5.37777399e+00  5.37777399e+00
  3.25434855e+01  2.79468703e+02  1.78465522e+03  6.57384380e+03]
E1 = -181.67654151220586  E_coul = 54.413581806773834
cycle= 4 E= -127.262959705432  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04696e-06
diis-c [-3.27096782e-13  4.08978442e-05 -1.22863908e-03 -1.80425641e-02
  1.01923031e+00]
  HOMO = -0.605347620020793  LUMO = 5.37777456651003
  mo_energy =
[-3.28112496e+01 -1.79739693e+00 -6.05347620e-01 -6.05347620e-01
 -6.05347620e-01  5.37777457e+00  5.37777457e+00  5.37777457e+00
  3.25434873e+01  2.79468706e+02  1.78465523e+03  6.57384380e+03]
E1 = -181.67654067681462  E_coul = 54.413580971382515
cycle= 5 E= -127.262959705432  delta_E= -8.53e-14  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67654067681462  E_coul = 54.413580971382515
  HOMO = -0.605347613564372  LUMO = 5.37777457534833
  mo_energy =
[-3.28112496e+01 -1.79739692e+00 -6.05347614e-01 -6.05347614e-01
 -6.05347614e-01  5.37777458e+00  5.37777458e+00  5.37777458e+00
  3.25434873e+01  2.79468706e+02  1.78465523e+03  6.57384380e+03]
E1 = -181.67654066796737  E_coul = 54.413580962535256
Extra cycle  E= -127.262959705432  delta_E=    0  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767435e+03 9.49730500e-01 1.29841076e+03 1.96208259e+02
 4.38287550e+01 1.18921198e+01 5.32809545e+00 8.98810353e-01]
E = -127.26295970543211
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67434723        1
[INPUT] 0    0    [1    /1   ]  0.949730500157       1
[INPUT] 0    0    [1    /1   ]  1298.41076058        1
[INPUT] 0    0    [1    /1   ]  196.208258616        1
[INPUT] 0    0    [1    /1   ]  43.8287549979        1
[INPUT] 0    0    [1    /1   ]  11.8921198065        1
[INPUT] 1    0    [1    /1   ]  5.32809544887        1
[INPUT] 1    0    [1    /1   ]  0.898810353493       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6743472253806, 1.0]], [0, [0.949730500156511, 1.0]], [0, [1298.410760575497, 1.0]], [0, [196.20825861640395, 1.0]], [0, [43.8287549978623, 1.0]], [0, [11.892119806507113, 1.0]], [1, [5.328095448866151, 1.0]], [1, [0.898810353492983, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67434723]
bas 1, expnt(s) = [0.9497305]
bas 2, expnt(s) = [1298.41076058]
bas 3, expnt(s) = [196.20825862]
bas 4, expnt(s) = [43.828755]
bas 5, expnt(s) = [11.89211981]
bas 6, expnt(s) = [5.32809545]
bas 7, expnt(s) = [0.89881035]
CPU time:        39.72
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767435e+03 7.40716949e+02 9.49730500e-01 2.43061018e+00
 1.29841076e+03 5.46479788e+02 1.96208259e+02 1.32450312e+02
 4.38287550e+01 4.30362454e+01 1.18921198e+01 1.61792908e+01
 5.32809545e+00 2.36156220e+01 8.98810353e-01 2.55310970e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82748450719007
cond(S) = 149.90432074973424
E1 = -181.2807989289648  E_coul = 54.36157288842254
init E= -126.919226040542
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649475775792974  LUMO = 5.34767542144235
  mo_energy =
[-3.26681140e+01 -1.83781309e+00 -6.49475776e-01 -6.49475776e-01
 -6.49475776e-01  5.34767542e+00  5.34767542e+00  5.34767542e+00
  3.26269542e+01  2.79634542e+02  1.78486716e+03  6.57408063e+03]
E1 = -181.59072212798867  E_coul = 54.328024496562705
cycle= 1 E= -127.262697631426  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114042
diis-c [-0.01300559  1.        ]
  HOMO = -0.610554632183343  LUMO = 5.36932627457072
  mo_energy =
[-3.28324238e+01 -1.80340093e+00 -6.10554632e-01 -6.10554632e-01
 -6.10554632e-01  5.36932627e+00  5.36932627e+00  5.36932627e+00
  3.25255983e+01  2.79444348e+02  1.78462779e+03  6.57381546e+03]
E1 = -181.69135526748124  E_coul = 54.4284029589801
cycle= 2 E= -127.262952308501  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142036
diis-c [-9.84292878e-05  8.21202094e-02  9.17879791e-01]
  HOMO = -0.60493101874562  LUMO = 5.37843449109451
  mo_energy =
[-3.28096879e+01 -1.79692098e+00 -6.04931019e-01 -6.04931019e-01
 -6.04931019e-01  5.37843449e+00  5.37843449e+00  5.37843449e+00
  3.25448211e+01  2.79470255e+02  1.78465677e+03  6.57384534e+03]
E1 = -181.67538899914635  E_coul = 54.41242933827806
cycle= 3 E= -127.262959660868  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111428
diis-c [-1.69962821e-08 -2.94957222e-03  5.61092263e-02  9.46840346e-01]
  HOMO = -0.605347961908082  LUMO = 5.37777398622243
  mo_energy =
[-3.28112512e+01 -1.79739745e+00 -6.05347962e-01 -6.05347962e-01
 -6.05347962e-01  5.37777399e+00  5.37777399e+00  5.37777399e+00
  3.25434855e+01  2.79468703e+02  1.78465522e+03  6.57384380e+03]
E1 = -181.67654151220586  E_coul = 54.413581806773834
cycle= 4 E= -127.262959705432  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04696e-06
diis-c [-3.27096782e-13  4.08978442e-05 -1.22863908e-03 -1.80425641e-02
  1.01923031e+00]
  HOMO = -0.605347620020793  LUMO = 5.37777456651003
  mo_energy =
[-3.28112496e+01 -1.79739693e+00 -6.05347620e-01 -6.05347620e-01
 -6.05347620e-01  5.37777457e+00  5.37777457e+00  5.37777457e+00
  3.25434873e+01  2.79468706e+02  1.78465523e+03  6.57384380e+03]
E1 = -181.67654067681462  E_coul = 54.413580971382515
cycle= 5 E= -127.262959705432  delta_E= -8.53e-14  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67654067681462  E_coul = 54.413580971382515
  HOMO = -0.605347613564372  LUMO = 5.37777457534833
  mo_energy =
[-3.28112496e+01 -1.79739692e+00 -6.05347614e-01 -6.05347614e-01
 -6.05347614e-01  5.37777458e+00  5.37777458e+00  5.37777458e+00
  3.25434873e+01  2.79468706e+02  1.78465523e+03  6.57384380e+03]
E1 = -181.67654066796737  E_coul = 54.413580962535256
Extra cycle  E= -127.262959705432  delta_E=    0  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.90432074973424
E1 = -181.67654066796737  E_coul = 54.413580962535256
init E= -127.262959705432
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605347614063536  LUMO = 5.37777457449839
  mo_energy =
[-3.28112496e+01 -1.79739692e+00 -6.05347614e-01 -6.05347614e-01
 -6.05347614e-01  5.37777457e+00  5.37777457e+00  5.37777457e+00
  3.25434873e+01  2.79468706e+02  1.78465523e+03  6.57384380e+03]
E1 = -181.67654066968367  E_coul = 54.4135809642515
cycle= 1 E= -127.262959705432  delta_E= -5.68e-14  |g|= 2.12e-10  |ddm|= 2.84e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67654066968367  E_coul = 54.4135809642515
  HOMO = -0.605347613955761  LUMO = 5.37777457466994
  mo_energy =
[-3.28112496e+01 -1.79739692e+00 -6.05347614e-01 -6.05347614e-01
 -6.05347614e-01  5.37777457e+00  5.37777457e+00  5.37777457e+00
  3.25434873e+01  2.79468706e+02  1.78465523e+03  6.57384380e+03]
E1 = -181.67654066939184  E_coul = 54.413580963959646
Extra cycle  E= -127.262959705432  delta_E= -2.84e-14  |g|= 3.42e-11  |ddm|= 4.58e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.11 sec
exp = [1.94767435e+03 9.49730500e-01 1.29841076e+03 1.96208259e+02
 4.38287550e+01 1.18921198e+01 5.32809545e+00 8.98810353e-01]
grad_E = [-9.80202030e-06 -1.90495415e-06  5.63593778e-05 -2.54524885e-04
 -1.57278807e-04 -3.80293730e-05  5.20909289e-05  1.96622540e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67436258        1
[INPUT] 0    0    [1    /1   ]  0.949728760177       1
[INPUT] 0    0    [1    /1   ]  1298.41067064        1
[INPUT] 0    0    [1    /1   ]  196.208723674        1
[INPUT] 0    0    [1    /1   ]  43.8286658895        1
[INPUT] 0    0    [1    /1   ]  11.8920840347        1
[INPUT] 1    0    [1    /1   ]  5.32823498701        1
[INPUT] 1    0    [1    /1   ]  0.898825101347       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6743625774523, 1.0]], [0, [0.9497287601769485, 1.0]], [0, [1298.4106706392934, 1.0]], [0, [196.20872367443138, 1.0]], [0, [43.82866588949405, 1.0]], [0, [11.892084034724702, 1.0]], [1, [5.328234987011673, 1.0]], [1, [0.8988251013465373, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67436258]
bas 1, expnt(s) = [0.94972876]
bas 2, expnt(s) = [1298.41067064]
bas 3, expnt(s) = [196.20872367]
bas 4, expnt(s) = [43.82866589]
bas 5, expnt(s) = [11.89208403]
bas 6, expnt(s) = [5.32823499]
bas 7, expnt(s) = [0.8988251]
CPU time:        42.47
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767436e+03 7.40716954e+02 9.49728760e-01 2.43060684e+00
 1.29841067e+03 5.46479760e+02 1.96208724e+02 1.32450548e+02
 4.38286659e+01 4.30361797e+01 1.18920840e+01 1.61792543e+01
 5.32823499e+00 2.36163950e+01 8.98825101e-01 2.55316206e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827478745150819
cond(S) = 149.90432998978838
E1 = -181.28081193910398  E_coul = 54.361589340420196
init E= -126.919222598684
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649476362372198  LUMO = 5.34781801055301
  mo_energy =
[-3.26681040e+01 -1.83781331e+00 -6.49476362e-01 -6.49476362e-01
 -6.49476362e-01  5.34781801e+00  5.34781801e+00  5.34781801e+00
  3.26268210e+01  2.79634545e+02  1.78486810e+03  6.57408171e+03]
E1 = -181.59083395258827  E_coul = 54.32813616465812
cycle= 1 E= -127.26269778793  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114036
diis-c [-0.01300423  1.        ]
  HOMO = -0.610547456290878  LUMO = 5.36947724328367
  mo_energy =
[-3.28323985e+01 -1.80339195e+00 -6.10547456e-01 -6.10547456e-01
 -6.10547456e-01  5.36947724e+00  5.36947724e+00  5.36947724e+00
  3.25254805e+01  2.79444365e+02  1.78462874e+03  6.57381655e+03]
E1 = -181.6914539809516  E_coul = 54.428501570803476
cycle= 2 E= -127.262952410148  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142019
diis-c [-9.84174501e-05  8.21105624e-02  9.17889438e-01]
  HOMO = -0.60492455290099  LUMO = 5.37858452344054
  mo_energy =
[-3.28096651e+01 -1.79691283e+00 -6.04924553e-01 -6.04924553e-01
 -6.04924553e-01  5.37858452e+00  5.37858452e+00  5.37858452e+00
  3.25447011e+01  2.79470269e+02  1.78465772e+03  6.57384643e+03]
E1 = -181.6754899182212  E_coul = 54.41253015772512
cycle= 3 E= -127.262959760496  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111426
diis-c [-1.69964122e-08 -2.94963242e-03  5.61158659e-02  9.46833767e-01]
  HOMO = -0.605341486088798  LUMO = 5.3779240192224
  mo_energy =
[-3.28112285e+01 -1.79738930e+00 -6.05341486e-01 -6.05341486e-01
 -6.05341486e-01  5.37792402e+00  5.37792402e+00  5.37792402e+00
  3.25433656e+01  2.79468717e+02  1.78465617e+03  6.57384489e+03]
E1 = -181.67664238764854  E_coul = 54.41368258259123
cycle= 4 E= -127.262959805057  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04693e-06
diis-c [-3.27099745e-13  4.08976014e-05 -1.22874270e-03 -1.80417293e-02
  1.01922957e+00]
  HOMO = -0.605341144135259  LUMO = 5.37792459962775
  mo_energy =
[-3.28112269e+01 -1.79738878e+00 -6.05341144e-01 -6.05341144e-01
 -6.05341144e-01  5.37792460e+00  5.37792460e+00  5.37792460e+00
  3.25433673e+01  2.79468720e+02  1.78465618e+03  6.57384489e+03]
E1 = -181.6766415520946  E_coul = 54.413681747037245
cycle= 5 E= -127.262959805057  delta_E= -4.26e-14  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6766415520946  E_coul = 54.413681747037245
  HOMO = -0.605341137679053  LUMO = 5.37792460846581
  mo_energy =
[-3.28112268e+01 -1.79738877e+00 -6.05341138e-01 -6.05341138e-01
 -6.05341138e-01  5.37792461e+00  5.37792461e+00  5.37792461e+00
  3.25433674e+01  2.79468720e+02  1.78465618e+03  6.57384489e+03]
E1 = -181.67664154324808  E_coul = 54.413681738190796
Extra cycle  E= -127.262959805057  delta_E= 7.11e-14  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767436e+03 9.49728760e-01 1.29841067e+03 1.96208724e+02
 4.38286659e+01 1.18920840e+01 5.32823499e+00 8.98825101e-01]
E = -127.26295980505728
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67436258        1
[INPUT] 0    0    [1    /1   ]  0.949728760177       1
[INPUT] 0    0    [1    /1   ]  1298.41067064        1
[INPUT] 0    0    [1    /1   ]  196.208723674        1
[INPUT] 0    0    [1    /1   ]  43.8286658895        1
[INPUT] 0    0    [1    /1   ]  11.8920840347        1
[INPUT] 1    0    [1    /1   ]  5.32823498701        1
[INPUT] 1    0    [1    /1   ]  0.898825101347       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6743625774523, 1.0]], [0, [0.9497287601769485, 1.0]], [0, [1298.4106706392934, 1.0]], [0, [196.20872367443138, 1.0]], [0, [43.82866588949405, 1.0]], [0, [11.892084034724702, 1.0]], [1, [5.328234987011673, 1.0]], [1, [0.8988251013465373, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67436258]
bas 1, expnt(s) = [0.94972876]
bas 2, expnt(s) = [1298.41067064]
bas 3, expnt(s) = [196.20872367]
bas 4, expnt(s) = [43.82866589]
bas 5, expnt(s) = [11.89208403]
bas 6, expnt(s) = [5.32823499]
bas 7, expnt(s) = [0.8988251]
CPU time:        42.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767436e+03 7.40716954e+02 9.49728760e-01 2.43060684e+00
 1.29841067e+03 5.46479760e+02 1.96208724e+02 1.32450548e+02
 4.38286659e+01 4.30361797e+01 1.18920840e+01 1.61792543e+01
 5.32823499e+00 2.36163950e+01 8.98825101e-01 2.55316206e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827478745150819
cond(S) = 149.90432998978838
E1 = -181.28081193910398  E_coul = 54.361589340420196
init E= -126.919222598684
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649476362372198  LUMO = 5.34781801055301
  mo_energy =
[-3.26681040e+01 -1.83781331e+00 -6.49476362e-01 -6.49476362e-01
 -6.49476362e-01  5.34781801e+00  5.34781801e+00  5.34781801e+00
  3.26268210e+01  2.79634545e+02  1.78486810e+03  6.57408171e+03]
E1 = -181.59083395258827  E_coul = 54.32813616465812
cycle= 1 E= -127.26269778793  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114036
diis-c [-0.01300423  1.        ]
  HOMO = -0.610547456290878  LUMO = 5.36947724328367
  mo_energy =
[-3.28323985e+01 -1.80339195e+00 -6.10547456e-01 -6.10547456e-01
 -6.10547456e-01  5.36947724e+00  5.36947724e+00  5.36947724e+00
  3.25254805e+01  2.79444365e+02  1.78462874e+03  6.57381655e+03]
E1 = -181.6914539809516  E_coul = 54.428501570803476
cycle= 2 E= -127.262952410148  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142019
diis-c [-9.84174501e-05  8.21105624e-02  9.17889438e-01]
  HOMO = -0.60492455290099  LUMO = 5.37858452344054
  mo_energy =
[-3.28096651e+01 -1.79691283e+00 -6.04924553e-01 -6.04924553e-01
 -6.04924553e-01  5.37858452e+00  5.37858452e+00  5.37858452e+00
  3.25447011e+01  2.79470269e+02  1.78465772e+03  6.57384643e+03]
E1 = -181.6754899182212  E_coul = 54.41253015772512
cycle= 3 E= -127.262959760496  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111426
diis-c [-1.69964122e-08 -2.94963242e-03  5.61158659e-02  9.46833767e-01]
  HOMO = -0.605341486088798  LUMO = 5.3779240192224
  mo_energy =
[-3.28112285e+01 -1.79738930e+00 -6.05341486e-01 -6.05341486e-01
 -6.05341486e-01  5.37792402e+00  5.37792402e+00  5.37792402e+00
  3.25433656e+01  2.79468717e+02  1.78465617e+03  6.57384489e+03]
E1 = -181.67664238764854  E_coul = 54.41368258259123
cycle= 4 E= -127.262959805057  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04693e-06
diis-c [-3.27099745e-13  4.08976014e-05 -1.22874270e-03 -1.80417293e-02
  1.01922957e+00]
  HOMO = -0.605341144135259  LUMO = 5.37792459962775
  mo_energy =
[-3.28112269e+01 -1.79738878e+00 -6.05341144e-01 -6.05341144e-01
 -6.05341144e-01  5.37792460e+00  5.37792460e+00  5.37792460e+00
  3.25433673e+01  2.79468720e+02  1.78465618e+03  6.57384489e+03]
E1 = -181.6766415520946  E_coul = 54.413681747037245
cycle= 5 E= -127.262959805057  delta_E= -4.26e-14  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6766415520946  E_coul = 54.413681747037245
  HOMO = -0.605341137679053  LUMO = 5.37792460846581
  mo_energy =
[-3.28112268e+01 -1.79738877e+00 -6.05341138e-01 -6.05341138e-01
 -6.05341138e-01  5.37792461e+00  5.37792461e+00  5.37792461e+00
  3.25433674e+01  2.79468720e+02  1.78465618e+03  6.57384489e+03]
E1 = -181.67664154324808  E_coul = 54.413681738190796
Extra cycle  E= -127.262959805057  delta_E= 7.11e-14  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.90432998978838
E1 = -181.67664154324808  E_coul = 54.413681738190796
init E= -127.262959805057
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605341138178163  LUMO = 5.37792460761593
  mo_energy =
[-3.28112268e+01 -1.79738877e+00 -6.05341138e-01 -6.05341138e-01
 -6.05341138e-01  5.37792461e+00  5.37792461e+00  5.37792461e+00
  3.25433674e+01  2.79468720e+02  1.78465618e+03  6.57384489e+03]
E1 = -181.67664154496418  E_coul = 54.41368173990686
cycle= 1 E= -127.262959805057  delta_E= -4.26e-14  |g|= 2.12e-10  |ddm|= 2.84e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67664154496418  E_coul = 54.41368173990686
  HOMO = -0.605341138070401  LUMO = 5.37792460778748
  mo_energy =
[-3.28112268e+01 -1.79738877e+00 -6.05341138e-01 -6.05341138e-01
 -6.05341138e-01  5.37792461e+00  5.37792461e+00  5.37792461e+00
  3.25433674e+01  2.79468720e+02  1.78465618e+03  6.57384489e+03]
E1 = -181.6766415446724  E_coul = 54.41368173961501
Extra cycle  E= -127.262959805057  delta_E= -7.11e-14  |g|= 3.4e-11  |ddm|= 4.58e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94767436e+03 9.49728760e-01 1.29841067e+03 1.96208724e+02
 4.38286659e+01 1.18920840e+01 5.32823499e+00 8.98825101e-01]
grad_E = [-9.80226948e-06 -1.23573994e-06  5.63580702e-05 -2.54455111e-04
 -1.57562707e-04 -3.82918828e-05  6.75751651e-05  7.77322923e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67442812        1
[INPUT] 0    0    [1    /1   ]  0.94972821838        1
[INPUT] 0    0    [1    /1   ]  1298.41028983        1
[INPUT] 0    0    [1    /1   ]  196.210582793        1
[INPUT] 0    0    [1    /1   ]  43.8289233082        1
[INPUT] 0    0    [1    /1   ]  11.8921159614        1
[INPUT] 1    0    [1    /1   ]  5.32829292293        1
[INPUT] 1    0    [1    /1   ]  0.898831161934       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6744281242884, 1.0]], [0, [0.9497282183804566, 1.0]], [0, [1298.4102898256936, 1.0]], [0, [196.21058279338837, 1.0]], [0, [43.8289233081513, 1.0]], [0, [11.892115961446883, 1.0]], [1, [5.328292922933121, 1.0]], [1, [0.8988311619342693, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67442812]
bas 1, expnt(s) = [0.94972822]
bas 2, expnt(s) = [1298.41028983]
bas 3, expnt(s) = [196.21058279]
bas 4, expnt(s) = [43.82892331]
bas 5, expnt(s) = [11.89211596]
bas 6, expnt(s) = [5.32829292]
bas 7, expnt(s) = [0.89883116]
CPU time:        45.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767443e+03 7.40716972e+02 9.49728218e-01 2.43060580e+00
 1.29841029e+03 5.46479639e+02 1.96210583e+02 1.32451489e+02
 4.38289233e+01 4.30363693e+01 1.18921160e+01 1.61792869e+01
 5.32829292e+00 2.36167160e+01 8.98831162e-01 2.55318358e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827476338877352
cond(S) = 149.90497520716548
E1 = -181.28081726408055  E_coul = 54.361595948636136
init E= -126.919221315444
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64947661904735  LUMO = 5.34787699166424
  mo_energy =
[-3.26681000e+01 -1.83781351e+00 -6.49476619e-01 -6.49476619e-01
 -6.49476619e-01  5.34787699e+00  5.34787699e+00  5.34787699e+00
  3.26270167e+01  2.79636968e+02  1.78487454e+03  6.57408855e+03]
E1 = -181.5908814445591  E_coul = 54.32818309865361
cycle= 1 E= -127.262698345905  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114033
diis-c [-0.01300354  1.        ]
  HOMO = -0.610544438681756  LUMO = 5.36953979766003
  mo_energy =
[-3.28323879e+01 -1.80338833e+00 -6.10544439e-01 -6.10544439e-01
 -6.10544439e-01  5.36953980e+00  5.36953980e+00  5.36953980e+00
  3.25256823e+01  2.79446795e+02  1.78463519e+03  6.57382340e+03]
E1 = -181.69149568856665  E_coul = 54.428542744763384
cycle= 2 E= -127.262952943803  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142011
diis-c [-9.84113818e-05  8.21067436e-02  9.17893256e-01]
  HOMO = -0.604921850561172  LUMO = 5.37864665571887
  mo_energy =
[-3.28096557e+01 -1.79690958e+00 -6.04921851e-01 -6.04921851e-01
 -6.04921851e-01  5.37864666e+00  5.37864666e+00  5.37864666e+00
  3.25449019e+01  2.79472698e+02  1.78466417e+03  6.57385328e+03]
E1 = -181.67553261091928  E_coul = 54.41257231766428
cycle= 3 E= -127.262960293255  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111425
diis-c [-1.69961041e-08 -2.94967294e-03  5.61182226e-02  9.46831450e-01]
  HOMO = -0.605338776505184  LUMO = 5.37798615675626
  mo_energy =
[-3.28112190e+01 -1.79738604e+00 -6.05338777e-01 -6.05338777e-01
 -6.05338777e-01  5.37798616e+00  5.37798616e+00  5.37798616e+00
  3.25435664e+01  2.79471145e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668505266602  E_coul = 54.41372471485161
cycle= 4 E= -127.262960337814  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04687e-06
diis-c [-3.27091710e-13  4.08974691e-05 -1.22876481e-03 -1.80411602e-02
  1.01922903e+00]
  HOMO = -0.605338434510611  LUMO = 5.3779867372296
  mo_energy =
[-3.28112174e+01 -1.79738552e+00 -6.05338435e-01 -6.05338435e-01
 -6.05338435e-01  5.37798674e+00  5.37798674e+00  5.37798674e+00
  3.25435681e+01  2.79471148e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668421700918  E_coul = 54.413723879194656
cycle= 5 E= -127.262960337815  delta_E= -1.14e-13  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67668421700918  E_coul = 54.413723879194656
  HOMO = -0.60533842805479  LUMO = 5.37798674606714
  mo_energy =
[-3.28112174e+01 -1.79738551e+00 -6.05338428e-01 -6.05338428e-01
 -6.05338428e-01  5.37798675e+00  5.37798675e+00  5.37798675e+00
  3.25435682e+01  2.79471148e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668420816355  E_coul = 54.41372387034914
Extra cycle  E= -127.262960337814  delta_E= 1.14e-13  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767443e+03 9.49728218e-01 1.29841029e+03 1.96210583e+02
 4.38289233e+01 1.18921160e+01 5.32829292e+00 8.98831162e-01]
E = -127.2629603378144
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67442812        1
[INPUT] 0    0    [1    /1   ]  0.94972821838        1
[INPUT] 0    0    [1    /1   ]  1298.41028983        1
[INPUT] 0    0    [1    /1   ]  196.210582793        1
[INPUT] 0    0    [1    /1   ]  43.8289233082        1
[INPUT] 0    0    [1    /1   ]  11.8921159614        1
[INPUT] 1    0    [1    /1   ]  5.32829292293        1
[INPUT] 1    0    [1    /1   ]  0.898831161934       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6744281242884, 1.0]], [0, [0.9497282183804566, 1.0]], [0, [1298.4102898256936, 1.0]], [0, [196.21058279338837, 1.0]], [0, [43.8289233081513, 1.0]], [0, [11.892115961446883, 1.0]], [1, [5.328292922933121, 1.0]], [1, [0.8988311619342693, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67442812]
bas 1, expnt(s) = [0.94972822]
bas 2, expnt(s) = [1298.41028983]
bas 3, expnt(s) = [196.21058279]
bas 4, expnt(s) = [43.82892331]
bas 5, expnt(s) = [11.89211596]
bas 6, expnt(s) = [5.32829292]
bas 7, expnt(s) = [0.89883116]
CPU time:        45.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767443e+03 7.40716972e+02 9.49728218e-01 2.43060580e+00
 1.29841029e+03 5.46479639e+02 1.96210583e+02 1.32451489e+02
 4.38289233e+01 4.30363693e+01 1.18921160e+01 1.61792869e+01
 5.32829292e+00 2.36167160e+01 8.98831162e-01 2.55318358e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827476338877352
cond(S) = 149.90497520716548
E1 = -181.28081726408055  E_coul = 54.361595948636136
init E= -126.919221315444
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64947661904735  LUMO = 5.34787699166424
  mo_energy =
[-3.26681000e+01 -1.83781351e+00 -6.49476619e-01 -6.49476619e-01
 -6.49476619e-01  5.34787699e+00  5.34787699e+00  5.34787699e+00
  3.26270167e+01  2.79636968e+02  1.78487454e+03  6.57408855e+03]
E1 = -181.5908814445591  E_coul = 54.32818309865361
cycle= 1 E= -127.262698345905  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114033
diis-c [-0.01300354  1.        ]
  HOMO = -0.610544438681756  LUMO = 5.36953979766003
  mo_energy =
[-3.28323879e+01 -1.80338833e+00 -6.10544439e-01 -6.10544439e-01
 -6.10544439e-01  5.36953980e+00  5.36953980e+00  5.36953980e+00
  3.25256823e+01  2.79446795e+02  1.78463519e+03  6.57382340e+03]
E1 = -181.69149568856665  E_coul = 54.428542744763384
cycle= 2 E= -127.262952943803  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142011
diis-c [-9.84113818e-05  8.21067436e-02  9.17893256e-01]
  HOMO = -0.604921850561172  LUMO = 5.37864665571887
  mo_energy =
[-3.28096557e+01 -1.79690958e+00 -6.04921851e-01 -6.04921851e-01
 -6.04921851e-01  5.37864666e+00  5.37864666e+00  5.37864666e+00
  3.25449019e+01  2.79472698e+02  1.78466417e+03  6.57385328e+03]
E1 = -181.67553261091928  E_coul = 54.41257231766428
cycle= 3 E= -127.262960293255  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111425
diis-c [-1.69961041e-08 -2.94967294e-03  5.61182226e-02  9.46831450e-01]
  HOMO = -0.605338776505184  LUMO = 5.37798615675626
  mo_energy =
[-3.28112190e+01 -1.79738604e+00 -6.05338777e-01 -6.05338777e-01
 -6.05338777e-01  5.37798616e+00  5.37798616e+00  5.37798616e+00
  3.25435664e+01  2.79471145e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668505266602  E_coul = 54.41372471485161
cycle= 4 E= -127.262960337814  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04687e-06
diis-c [-3.27091710e-13  4.08974691e-05 -1.22876481e-03 -1.80411602e-02
  1.01922903e+00]
  HOMO = -0.605338434510611  LUMO = 5.3779867372296
  mo_energy =
[-3.28112174e+01 -1.79738552e+00 -6.05338435e-01 -6.05338435e-01
 -6.05338435e-01  5.37798674e+00  5.37798674e+00  5.37798674e+00
  3.25435681e+01  2.79471148e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668421700918  E_coul = 54.413723879194656
cycle= 5 E= -127.262960337815  delta_E= -1.14e-13  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67668421700918  E_coul = 54.413723879194656
  HOMO = -0.60533842805479  LUMO = 5.37798674606714
  mo_energy =
[-3.28112174e+01 -1.79738551e+00 -6.05338428e-01 -6.05338428e-01
 -6.05338428e-01  5.37798675e+00  5.37798675e+00  5.37798675e+00
  3.25435682e+01  2.79471148e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668420816355  E_coul = 54.41372387034914
Extra cycle  E= -127.262960337814  delta_E= 1.14e-13  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.90497520716548
E1 = -181.67668420816355  E_coul = 54.41372387034914
init E= -127.262960337814
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605338428553843  LUMO = 5.37798674521735
  mo_energy =
[-3.28112174e+01 -1.79738551e+00 -6.05338429e-01 -6.05338429e-01
 -6.05338429e-01  5.37798675e+00  5.37798675e+00  5.37798675e+00
  3.25435681e+01  2.79471148e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668420987968  E_coul = 54.41372387206519
cycle= 1 E= -127.262960337814  delta_E= -8.53e-14  |g|= 2.12e-10  |ddm|= 2.84e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67668420987968  E_coul = 54.41372387206519
  HOMO = -0.605338428446082  LUMO = 5.37798674538889
  mo_energy =
[-3.28112174e+01 -1.79738551e+00 -6.05338428e-01 -6.05338428e-01
 -6.05338428e-01  5.37798675e+00  5.37798675e+00  5.37798675e+00
  3.25435681e+01  2.79471148e+02  1.78466262e+03  6.57385174e+03]
E1 = -181.67668420958768  E_coul = 54.41372387177327
Extra cycle  E= -127.262960337814  delta_E= 8.53e-14  |g|= 3.39e-11  |ddm|= 4.58e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94767443e+03 9.49728218e-01 1.29841029e+03 1.96210583e+02
 4.38289233e+01 1.18921160e+01 5.32829292e+00 8.98831162e-01]
grad_E = [-9.80288319e-06 -9.16281248e-07  5.63551702e-05 -2.54378486e-04
 -1.57679037e-04 -3.82831398e-05  7.40899367e-05  2.27566566e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67474972        1
[INPUT] 0    0    [1    /1   ]  0.94972881582        1
[INPUT] 0    0    [1    /1   ]  1298.40842299        1
[INPUT] 0    0    [1    /1   ]  196.219642628        1
[INPUT] 0    0    [1    /1   ]  43.8304965724        1
[INPUT] 0    0    [1    /1   ]  11.8923541439        1
[INPUT] 1    0    [1    /1   ]  5.32831427427        1
[INPUT] 1    0    [1    /1   ]  0.89883331421        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.674749718684, 1.0]], [0, [0.9497288158197565, 1.0]], [0, [1298.4084229936582, 1.0]], [0, [196.21964262752633, 1.0]], [0, [43.83049657243071, 1.0]], [0, [11.892354143882605, 1.0]], [1, [5.328314274271296, 1.0]], [1, [0.898833314209797, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67474972]
bas 1, expnt(s) = [0.94972882]
bas 2, expnt(s) = [1298.40842299]
bas 3, expnt(s) = [196.21964263]
bas 4, expnt(s) = [43.83049657]
bas 5, expnt(s) = [11.89235414]
bas 6, expnt(s) = [5.32831427]
bas 7, expnt(s) = [0.89883331]
CPU time:        48.71
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767475e+03 7.40717064e+02 9.49728816e-01 2.43060695e+00
 1.29840842e+03 5.46479050e+02 1.96219643e+02 1.32456076e+02
 4.38304966e+01 4.30375279e+01 1.18923541e+01 1.61795299e+01
 5.32831427e+00 2.36168343e+01 8.98833314e-01 2.55319123e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827475300480128
cond(S) = 149.90842378179462
E1 = -181.28081844760158  E_coul = 54.36159701253859
init E= -126.919221435063
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64947678204268  LUMO = 5.34789840857492
  mo_energy =
[-3.26680997e+01 -1.83781406e+00 -6.49476782e-01 -6.49476782e-01
 -6.49476782e-01  5.34789841e+00  5.34789841e+00  5.34789841e+00
  3.26283278e+01  2.79649997e+02  1.78490730e+03  6.57412320e+03]
E1 = -181.59090651874644  E_coul = 54.32820548643867
cycle= 1 E= -127.262701032308  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114029
diis-c [-0.01300261  1.        ]
  HOMO = -0.610542950240871  LUMO = 5.36956325945922
  mo_energy =
[-3.28323837e+01 -1.80338722e+00 -6.10542950e-01 -6.10542950e-01
 -6.10542950e-01  5.36956326e+00  5.36956326e+00  5.36956326e+00
  3.25269946e+01  2.79459828e+02  1.78466796e+03  6.57385806e+03]
E1 = -181.6915165727276  E_coul = 54.428560960950605
cycle= 2 E= -127.262955611777  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142005
diis-c [-9.84027807e-05  8.21061307e-02  9.17893869e-01]
  HOMO = -0.604920599080308  LUMO = 5.37866976450347
  mo_energy =
[-3.28096524e+01 -1.79690874e+00 -6.04920599e-01 -6.04920599e-01
 -6.04920599e-01  5.37866976e+00  5.37866976e+00  5.37866976e+00
  3.25462137e+01  2.79485730e+02  1.78469694e+03  6.57388793e+03]
E1 = -181.67555426377575  E_coul = 54.412591303220644
cycle= 3 E= -127.262962960555  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111419
diis-c [-1.69943090e-08 -2.94975808e-03  5.61172271e-02  9.46832531e-01]
  HOMO = -0.605337505980208  LUMO = 5.37800929376085
  mo_energy =
[-3.28112156e+01 -1.79738517e+00 -6.05337506e-01 -6.05337506e-01
 -6.05337506e-01  5.37800929e+00  5.37800929e+00  5.37800929e+00
  3.25448782e+01  2.79484178e+02  1.78469539e+03  6.57388639e+03]
E1 = -181.67670664502725  E_coul = 54.41374363991728
cycle= 4 E= -127.26296300511  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04659e-06
diis-c [-3.27047568e-13  4.08971891e-05 -1.22867548e-03 -1.80398760e-02
  1.01922765e+00]
  HOMO = -0.605337163895967  LUMO = 5.37800987436557
  mo_energy =
[-3.28112140e+01 -1.79738465e+00 -6.05337164e-01 -6.05337164e-01
 -6.05337164e-01  5.37800987e+00  5.37800987e+00  5.37800987e+00
  3.25448800e+01  2.79484180e+02  1.78469539e+03  6.57388640e+03]
E1 = -181.67670580914188  E_coul = 54.41374280403186
cycle= 5 E= -127.26296300511  delta_E= -2.84e-14  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67670580914188  E_coul = 54.41374280403186
  HOMO = -0.605337157441418  LUMO = 5.37800988320134
  mo_energy =
[-3.28112140e+01 -1.79738464e+00 -6.05337157e-01 -6.05337157e-01
 -6.05337157e-01  5.37800988e+00  5.37800988e+00  5.37800988e+00
  3.25448800e+01  2.79484180e+02  1.78469539e+03  6.57388640e+03]
E1 = -181.67670580029875  E_coul = 54.413742795188746
Extra cycle  E= -127.26296300511  delta_E=    0  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94767475e+03 9.49728816e-01 1.29840842e+03 1.96219643e+02
 4.38304966e+01 1.18923541e+01 5.32831427e+00 8.98833314e-01]
E = -127.26296300511001
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67474972        1
[INPUT] 0    0    [1    /1   ]  0.94972881582        1
[INPUT] 0    0    [1    /1   ]  1298.40842299        1
[INPUT] 0    0    [1    /1   ]  196.219642628        1
[INPUT] 0    0    [1    /1   ]  43.8304965724        1
[INPUT] 0    0    [1    /1   ]  11.8923541439        1
[INPUT] 1    0    [1    /1   ]  5.32831427427        1
[INPUT] 1    0    [1    /1   ]  0.89883331421        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.674749718684, 1.0]], [0, [0.9497288158197565, 1.0]], [0, [1298.4084229936582, 1.0]], [0, [196.21964262752633, 1.0]], [0, [43.83049657243071, 1.0]], [0, [11.892354143882605, 1.0]], [1, [5.328314274271296, 1.0]], [1, [0.898833314209797, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67474972]
bas 1, expnt(s) = [0.94972882]
bas 2, expnt(s) = [1298.40842299]
bas 3, expnt(s) = [196.21964263]
bas 4, expnt(s) = [43.83049657]
bas 5, expnt(s) = [11.89235414]
bas 6, expnt(s) = [5.32831427]
bas 7, expnt(s) = [0.89883331]
CPU time:        49.04
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767475e+03 7.40717064e+02 9.49728816e-01 2.43060695e+00
 1.29840842e+03 5.46479050e+02 1.96219643e+02 1.32456076e+02
 4.38304966e+01 4.30375279e+01 1.18923541e+01 1.61795299e+01
 5.32831427e+00 2.36168343e+01 8.98833314e-01 2.55319123e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827475300480128
cond(S) = 149.90842378179462
E1 = -181.28081844760158  E_coul = 54.36159701253859
init E= -126.919221435063
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64947678204268  LUMO = 5.34789840857492
  mo_energy =
[-3.26680997e+01 -1.83781406e+00 -6.49476782e-01 -6.49476782e-01
 -6.49476782e-01  5.34789841e+00  5.34789841e+00  5.34789841e+00
  3.26283278e+01  2.79649997e+02  1.78490730e+03  6.57412320e+03]
E1 = -181.59090651874644  E_coul = 54.32820548643867
cycle= 1 E= -127.262701032308  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114029
diis-c [-0.01300261  1.        ]
  HOMO = -0.610542950240871  LUMO = 5.36956325945922
  mo_energy =
[-3.28323837e+01 -1.80338722e+00 -6.10542950e-01 -6.10542950e-01
 -6.10542950e-01  5.36956326e+00  5.36956326e+00  5.36956326e+00
  3.25269946e+01  2.79459828e+02  1.78466796e+03  6.57385806e+03]
E1 = -181.6915165727276  E_coul = 54.428560960950605
cycle= 2 E= -127.262955611777  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0142005
diis-c [-9.84027807e-05  8.21061307e-02  9.17893869e-01]
  HOMO = -0.604920599080308  LUMO = 5.37866976450347
  mo_energy =
[-3.28096524e+01 -1.79690874e+00 -6.04920599e-01 -6.04920599e-01
 -6.04920599e-01  5.37866976e+00  5.37866976e+00  5.37866976e+00
  3.25462137e+01  2.79485730e+02  1.78469694e+03  6.57388793e+03]
E1 = -181.67555426377575  E_coul = 54.412591303220644
cycle= 3 E= -127.262962960555  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111419
diis-c [-1.69943090e-08 -2.94975808e-03  5.61172271e-02  9.46832531e-01]
  HOMO = -0.605337505980208  LUMO = 5.37800929376085
  mo_energy =
[-3.28112156e+01 -1.79738517e+00 -6.05337506e-01 -6.05337506e-01
 -6.05337506e-01  5.37800929e+00  5.37800929e+00  5.37800929e+00
  3.25448782e+01  2.79484178e+02  1.78469539e+03  6.57388639e+03]
E1 = -181.67670664502725  E_coul = 54.41374363991728
cycle= 4 E= -127.26296300511  delta_E= -4.46e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.04659e-06
diis-c [-3.27047568e-13  4.08971891e-05 -1.22867548e-03 -1.80398760e-02
  1.01922765e+00]
  HOMO = -0.605337163895967  LUMO = 5.37800987436557
  mo_energy =
[-3.28112140e+01 -1.79738465e+00 -6.05337164e-01 -6.05337164e-01
 -6.05337164e-01  5.37800987e+00  5.37800987e+00  5.37800987e+00
  3.25448800e+01  2.79484180e+02  1.78469539e+03  6.57388640e+03]
E1 = -181.67670580914188  E_coul = 54.41374280403186
cycle= 5 E= -127.26296300511  delta_E= -2.84e-14  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67670580914188  E_coul = 54.41374280403186
  HOMO = -0.605337157441418  LUMO = 5.37800988320134
  mo_energy =
[-3.28112140e+01 -1.79738464e+00 -6.05337157e-01 -6.05337157e-01
 -6.05337157e-01  5.37800988e+00  5.37800988e+00  5.37800988e+00
  3.25448800e+01  2.79484180e+02  1.78469539e+03  6.57388640e+03]
E1 = -181.67670580029875  E_coul = 54.413742795188746
Extra cycle  E= -127.26296300511  delta_E=    0  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.90842378179462
E1 = -181.67670580029875  E_coul = 54.413742795188746
init E= -127.26296300511
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605337157940329  LUMO = 5.37800988235178
  mo_energy =
[-3.28112140e+01 -1.79738464e+00 -6.05337158e-01 -6.05337158e-01
 -6.05337158e-01  5.37800988e+00  5.37800988e+00  5.37800988e+00
  3.25448800e+01  2.79484180e+02  1.78469539e+03  6.57388640e+03]
E1 = -181.67670580201423  E_coul = 54.413742796904195
cycle= 1 E= -127.26296300511  delta_E= -2.84e-14  |g|= 2.11e-10  |ddm|= 2.84e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67670580201423  E_coul = 54.413742796904195
  HOMO = -0.605337157832603  LUMO = 5.37800988252325
  mo_energy =
[-3.28112140e+01 -1.79738464e+00 -6.05337158e-01 -6.05337158e-01
 -6.05337158e-01  5.37800988e+00  5.37800988e+00  5.37800988e+00
  3.25448800e+01  2.79484180e+02  1.78469539e+03  6.57388640e+03]
E1 = -181.67670580172242  E_coul = 54.4137427966125
Extra cycle  E= -127.26296300511  delta_E= 1.14e-13  |g|= 3.41e-11  |ddm|= 4.58e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94767475e+03 9.49728816e-01 1.29840842e+03 1.96219643e+02
 4.38304966e+01 1.18923541e+01 5.32831427e+00 8.98833314e-01]
grad_E = [-9.80566221e-06 -7.88272054e-07  5.63423184e-05 -2.54118462e-04
 -1.57586284e-04 -3.82376379e-05  7.66044760e-05  9.79017045e-08]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:55 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67635366        1
[INPUT] 0    0    [1    /1   ]  0.949733104371       1
[INPUT] 0    0    [1    /1   ]  1298.39911298        1
[INPUT] 0    0    [1    /1   ]  196.26480262         1
[INPUT] 0    0    [1    /1   ]  43.8384638839        1
[INPUT] 0    0    [1    /1   ]  11.8935732991        1
[INPUT] 1    0    [1    /1   ]  5.32831468996        1
[INPUT] 1    0    [1    /1   ]  0.898832920557       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6763536596482, 1.0]], [0, [0.9497331043714958, 1.0]], [0, [1298.3991129780277, 1.0]], [0, [196.26480261998574, 1.0]], [0, [43.83846388388119, 1.0]], [0, [11.893573299078184, 1.0]], [1, [5.328314689963042, 1.0]], [1, [0.8988329205574462, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67635366]
bas 1, expnt(s) = [0.9497331]
bas 2, expnt(s) = [1298.39911298]
bas 3, expnt(s) = [196.26480262]
bas 4, expnt(s) = [43.83846388]
bas 5, expnt(s) = [11.8935733]
bas 6, expnt(s) = [5.32831469]
bas 7, expnt(s) = [0.89883292]
CPU time:        51.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767635e+03 7.40717522e+02 9.49733104e-01 2.43061518e+00
 1.29839911e+03 5.46476111e+02 1.96264803e+02 1.32478939e+02
 4.38384639e+01 4.30433952e+01 1.18935733e+01 1.61807739e+01
 5.32831469e+00 2.36168366e+01 8.98832921e-01 2.55318983e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827474466519517
cond(S) = 149.92573462482784
E1 = -181.28081423880724  E_coul = 54.361589661864706
init E= -126.919224576943
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.649477153541444  LUMO = 5.34789710912812
  mo_energy =
[-3.26681063e+01 -1.83781659e+00 -6.49477154e-01 -6.49477154e-01
 -6.49477154e-01  5.34789711e+00  5.34789711e+00  5.34789711e+00
  3.26350030e+01  2.79715420e+02  1.78507115e+03  6.57429643e+03]
E1 = -181.59094757677315  E_coul = 54.328233204613944
cycle= 1 E= -127.262714372159  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.02 sec, wall time      0.03 sec
diis-norm(errvec)=0.114013
diis-c [-0.01299896  1.        ]
  HOMO = -0.610540903502834  LUMO = 5.36956590436742
  mo_energy =
[-3.28323814e+01 -1.80338838e+00 -6.10540904e-01 -6.10540904e-01
 -6.10540904e-01  5.36956590e+00  5.36956590e+00  5.36956590e+00
  3.25336642e+01  2.79525259e+02  1.78483183e+03  6.57403131e+03]
E1 = -181.69154651105694  E_coul = 54.42857761055614
cycle= 2 E= -127.262968900501  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.02 sec, wall time      0.03 sec
diis-norm(errvec)=0.0141987
diis-c [-9.83684346e-05  8.21104089e-02  9.17889591e-01]
  HOMO = -0.604919204766623  LUMO = 5.37867134336668
  mo_energy =
[-3.28096528e+01 -1.79691061e+00 -6.04919205e-01 -6.04919205e-01
 -6.04919205e-01  5.37867134e+00  5.37867134e+00  5.37867134e+00
  3.25528820e+01  2.79551158e+02  1.78486080e+03  6.57406119e+03]
E1 = -181.6755863931766  E_coul = 54.41261014575258
cycle= 3 E= -127.262976247424  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.00111393
diis-c [-1.69852561e-08 -2.95013632e-03  5.61071783e-02  9.46842958e-01]
  HOMO = -0.605336023297194  LUMO = 5.37801101442136
  mo_energy =
[-3.28112156e+01 -1.79738694e+00 -6.05336023e-01 -6.05336023e-01
 -6.05336023e-01  5.37801101e+00  5.37801101e+00  5.37801101e+00
  3.25515468e+01  2.79549607e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673850301904  E_coul = 54.41376221106127
cycle= 4 E= -127.262976291958  delta_E= -4.45e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=3.0452e-06
diis-c [-3.26811008e-13  4.08947868e-05 -1.22813450e-03 -1.80337976e-02
  1.01922104e+00]
  HOMO = -0.605335680810537  LUMO = 5.37801159560012
  mo_energy =
[-3.28112140e+01 -1.79738642e+00 -6.05335681e-01 -6.05335681e-01
 -6.05335681e-01  5.37801160e+00  5.37801160e+00  5.37801160e+00
  3.25515485e+01  2.79549610e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673766610474  E_coul = 54.41376137414675
cycle= 5 E= -127.262976291958  delta_E= -2.13e-13  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.67673766610474  E_coul = 54.41376137414675
  HOMO = -0.605335674362201  LUMO = 5.37801160442724
  mo_energy =
[-3.28112140e+01 -1.79738641e+00 -6.05335674e-01 -6.05335674e-01
 -6.05335674e-01  5.37801160e+00  5.37801160e+00  5.37801160e+00
  3.25515486e+01  2.79549610e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673765727358  E_coul = 54.413761365315615
Extra cycle  E= -127.262976291958  delta_E= 2.84e-14  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.14 sec, wall time      0.16 sec
exp = [1.94767635e+03 9.49733104e-01 1.29839911e+03 1.96264803e+02
 4.38384639e+01 1.18935733e+01 5.32831469e+00 8.98832921e-01]
E = -127.26297629195795
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.67635366        1
[INPUT] 0    0    [1    /1   ]  0.949733104371       1
[INPUT] 0    0    [1    /1   ]  1298.39911298        1
[INPUT] 0    0    [1    /1   ]  196.26480262         1
[INPUT] 0    0    [1    /1   ]  43.8384638839        1
[INPUT] 0    0    [1    /1   ]  11.8935732991        1
[INPUT] 1    0    [1    /1   ]  5.32831468996        1
[INPUT] 1    0    [1    /1   ]  0.898832920557       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6763536596482, 1.0]], [0, [0.9497331043714958, 1.0]], [0, [1298.3991129780277, 1.0]], [0, [196.26480261998574, 1.0]], [0, [43.83846388388119, 1.0]], [0, [11.893573299078184, 1.0]], [1, [5.328314689963042, 1.0]], [1, [0.8988329205574462, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.67635366]
bas 1, expnt(s) = [0.9497331]
bas 2, expnt(s) = [1298.39911298]
bas 3, expnt(s) = [196.26480262]
bas 4, expnt(s) = [43.83846388]
bas 5, expnt(s) = [11.8935733]
bas 6, expnt(s) = [5.32831469]
bas 7, expnt(s) = [0.89883292]
CPU time:        52.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94767635e+03 7.40717522e+02 9.49733104e-01 2.43061518e+00
 1.29839911e+03 5.46476111e+02 1.96264803e+02 1.32478939e+02
 4.38384639e+01 4.30433952e+01 1.18935733e+01 1.61807739e+01
 5.32831469e+00 2.36168366e+01 8.98832921e-01 2.55318983e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827474466519517
cond(S) = 149.92573462482784
E1 = -181.28081423880724  E_coul = 54.361589661864706
init E= -126.919224576943
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649477153541444  LUMO = 5.34789710912812
  mo_energy =
[-3.26681063e+01 -1.83781659e+00 -6.49477154e-01 -6.49477154e-01
 -6.49477154e-01  5.34789711e+00  5.34789711e+00  5.34789711e+00
  3.26350030e+01  2.79715420e+02  1.78507115e+03  6.57429643e+03]
E1 = -181.59094757677315  E_coul = 54.328233204613944
cycle= 1 E= -127.262714372159  delta_E= -0.343  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.114013
diis-c [-0.01299896  1.        ]
  HOMO = -0.610540903502834  LUMO = 5.36956590436742
  mo_energy =
[-3.28323814e+01 -1.80338838e+00 -6.10540904e-01 -6.10540904e-01
 -6.10540904e-01  5.36956590e+00  5.36956590e+00  5.36956590e+00
  3.25336642e+01  2.79525259e+02  1.78483183e+03  6.57403131e+03]
E1 = -181.69154651105694  E_coul = 54.42857761055614
cycle= 2 E= -127.262968900501  delta_E= -0.000255  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141987
diis-c [-9.83684346e-05  8.21104089e-02  9.17889591e-01]
  HOMO = -0.604919204766623  LUMO = 5.37867134336668
  mo_energy =
[-3.28096528e+01 -1.79691061e+00 -6.04919205e-01 -6.04919205e-01
 -6.04919205e-01  5.37867134e+00  5.37867134e+00  5.37867134e+00
  3.25528820e+01  2.79551158e+02  1.78486080e+03  6.57406119e+03]
E1 = -181.6755863931766  E_coul = 54.41261014575258
cycle= 3 E= -127.262976247424  delta_E= -7.35e-06  |g|= 0.000938  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111393
diis-c [-1.69852561e-08 -2.95013632e-03  5.61071783e-02  9.46842958e-01]
  HOMO = -0.605336023297194  LUMO = 5.37801101442136
  mo_energy =
[-3.28112156e+01 -1.79738694e+00 -6.05336023e-01 -6.05336023e-01
 -6.05336023e-01  5.37801101e+00  5.37801101e+00  5.37801101e+00
  3.25515468e+01  2.79549607e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673850301904  E_coul = 54.41376221106127
cycle= 4 E= -127.262976291958  delta_E= -4.45e-08  |g|= 2.53e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.0452e-06
diis-c [-3.26811008e-13  4.08947868e-05 -1.22813450e-03 -1.80337976e-02
  1.01922104e+00]
  HOMO = -0.605335680810537  LUMO = 5.37801159560012
  mo_energy =
[-3.28112140e+01 -1.79738642e+00 -6.05335681e-01 -6.05335681e-01
 -6.05335681e-01  5.37801160e+00  5.37801160e+00  5.37801160e+00
  3.25515485e+01  2.79549610e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673766610474  E_coul = 54.41376137414675
cycle= 5 E= -127.262976291958  delta_E= -2.13e-13  |g|= 3e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67673766610474  E_coul = 54.41376137414675
  HOMO = -0.605335674362201  LUMO = 5.37801160442724
  mo_energy =
[-3.28112140e+01 -1.79738641e+00 -6.05335674e-01 -6.05335674e-01
 -6.05335674e-01  5.37801160e+00  5.37801160e+00  5.37801160e+00
  3.25515486e+01  2.79549610e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673765727358  E_coul = 54.413761365315615
Extra cycle  E= -127.262976291958  delta_E= 2.84e-14  |g|= 1.16e-09  |ddm|= 2.67e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.92573462482784
E1 = -181.67673765727358  E_coul = 54.413761365315615
init E= -127.262976291958
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.60533567486041  LUMO = 5.37801160357885
  mo_energy =
[-3.28112140e+01 -1.79738641e+00 -6.05335675e-01 -6.05335675e-01
 -6.05335675e-01  5.37801160e+00  5.37801160e+00  5.37801160e+00
  3.25515485e+01  2.79549610e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673765898672  E_coul = 54.413761367028776
cycle= 1 E= -127.262976291958  delta_E=    0  |g|= 2.12e-10  |ddm|= 2.83e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67673765898672  E_coul = 54.413761367028776
  HOMO = -0.605335674752829  LUMO = 5.3780116037501
  mo_energy =
[-3.28112140e+01 -1.79738641e+00 -6.05335675e-01 -6.05335675e-01
 -6.05335675e-01  5.37801160e+00  5.37801160e+00  5.37801160e+00
  3.25515485e+01  2.79549610e+02  1.78485926e+03  6.57405965e+03]
E1 = -181.67673765869537  E_coul = 54.4137613667374
Extra cycle  E= -127.262976291958  delta_E= -2.84e-14  |g|= 3.39e-11  |ddm|= 4.58e-11
    CPU time for scf_cycle      0.14 sec, wall time      0.15 sec
exp = [1.94767635e+03 9.49733104e-01 1.29839911e+03 1.96264803e+02
 4.38384639e+01 1.18935733e+01 5.32831469e+00 8.98832921e-01]
grad_E = [-9.81941889e-06 -7.28709971e-07  5.62788030e-05 -2.52868675e-04
 -1.56854039e-04 -3.80477303e-05  7.72626244e-05 -7.59603367e-07]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68433473        1
[INPUT] 0    0    [1    /1   ]  0.949754949816       1
[INPUT] 0    0    [1    /1   ]  1298.35278808        1
[INPUT] 0    0    [1    /1   ]  196.489497974        1
[INPUT] 0    0    [1    /1   ]  43.8781485246        1
[INPUT] 0    0    [1    /1   ]  11.8996500223        1
[INPUT] 1    0    [1    /1   ]  5.32827478802        1
[INPUT] 1    0    [1    /1   ]  0.898826559211       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6843347316064, 1.0]], [0, [0.9497549498162445, 1.0]], [0, [1298.352788078178, 1.0]], [0, [196.48949797414576, 1.0]], [0, [43.87814852463628, 1.0]], [0, [11.899650022301792, 1.0]], [1, [5.328274788022146, 1.0]], [1, [0.898826559211186, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68433473]
bas 1, expnt(s) = [0.94975495]
bas 2, expnt(s) = [1298.35278808]
bas 3, expnt(s) = [196.48949797]
bas 4, expnt(s) = [43.87814852]
bas 5, expnt(s) = [11.89965002]
bas 6, expnt(s) = [5.32827479]
bas 7, expnt(s) = [0.89882656]
CPU time:        55.22
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768433e+03 7.40719798e+02 9.49754950e-01 2.43065711e+00
 1.29835279e+03 5.46461488e+02 1.96489498e+02 1.32592675e+02
 4.38781485e+01 4.30726155e+01 1.18996500e+01 1.61869739e+01
 5.32827479e+00 2.36166156e+01 8.98826559e-01 2.55316724e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827472036264261
cond(S) = 150.01196112461892
E1 = -181.28078821337786  E_coul = 54.36154825498051
init E= -126.919239958397
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649478813648435  LUMO = 5.34784789487436
  mo_energy =
[-3.26681412e+01 -1.83782910e+00 -6.49478814e-01 -6.49478814e-01
 -6.49478814e-01  5.34784789e+00  5.34784789e+00  5.34784789e+00
  3.26682715e+01  2.80041096e+02  1.78588647e+03  6.57515851e+03]
E1 = -181.59111790050864  E_coul = 54.328338097610434
cycle= 1 E= -127.262779802898  delta_E= -0.344  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.113935
diis-c [-0.01298127  1.        ]
  HOMO = -0.610532835922928  LUMO = 5.36953383837347
  mo_energy =
[-3.28323773e+01 -1.80339685e+00 -6.10532836e-01 -6.10532836e-01
 -6.10532836e-01  5.36953384e+00  5.36953384e+00  5.36953384e+00
  3.25669001e+01  2.79850971e+02  1.78564727e+03  6.57489355e+03]
E1 = -181.69166538056933  E_coul = 54.4286312875315
cycle= 2 E= -127.263034093038  delta_E= -0.000254  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141902
diis-c [-9.82014805e-05  8.21343350e-02  9.17865665e-01]
  HOMO = -0.604914172022744  LUMO = 5.37863425128595
  mo_energy =
[-3.28096610e+01 -1.79692231e+00 -6.04914172e-01 -6.04914172e-01
 -6.04914172e-01  5.37863425e+00  5.37863425e+00  5.37863425e+00
  3.25861127e+01  2.79876860e+02  1.78567623e+03  6.57492341e+03]
E1 = -181.67571550589918  E_coul = 54.41267407456694
cycle= 3 E= -127.263041431332  delta_E= -7.34e-06  |g|= 0.000937  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111266
diis-c [-1.69402445e-08 -2.95198964e-03  5.60555152e-02  9.46896474e-01]
  HOMO = -0.605330555343694  LUMO = 5.37797462525034
  mo_energy =
[-3.28112221e+01 -1.79739817e+00 -6.05330555e-01 -6.05330555e-01
 -6.05330555e-01  5.37797463e+00  5.37797463e+00  5.37797463e+00
  3.25847786e+01  2.79875310e+02  1.78567468e+03  6.57492187e+03]
E1 = -181.67686628283693  E_coul = 54.41382480707324
cycle= 4 E= -127.263041475764  delta_E= -4.44e-08  |g|= 2.52e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.03836e-06
diis-c [-3.25644527e-13  4.08830153e-05 -1.22542579e-03 -1.80039134e-02
  1.01918846e+00]
  HOMO = -0.605330210882653  LUMO = 5.37797520923847
  mo_energy =
[-3.28112205e+01 -1.79739765e+00 -6.05330211e-01 -6.05330211e-01
 -6.05330211e-01  5.37797521e+00  5.37797521e+00  5.37797521e+00
  3.25847804e+01  2.79875313e+02  1.78567469e+03  6.57492188e+03]
E1 = -181.67686544087158  E_coul = 54.41382396510788
cycle= 5 E= -127.263041475764  delta_E= -1.42e-14  |g|= 2.99e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67686544087158  E_coul = 54.41382396510788
  HOMO = -0.605330204464962  LUMO = 5.37797521802292
  mo_energy =
[-3.28112205e+01 -1.79739764e+00 -6.05330204e-01 -6.05330204e-01
 -6.05330204e-01  5.37797522e+00  5.37797522e+00  5.37797522e+00
  3.25847804e+01  2.79875313e+02  1.78567469e+03  6.57492188e+03]
E1 = -181.6768654320982  E_coul = 54.41382395633451
Extra cycle  E= -127.263041475764  delta_E= 1.42e-14  |g|= 1.15e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94768433e+03 9.49754950e-01 1.29835279e+03 1.96489498e+02
 4.38781485e+01 1.18996500e+01 5.32827479e+00 8.98826559e-01]
E = -127.26304147576369
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:39:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.68433473        1
[INPUT] 0    0    [1    /1   ]  0.949754949816       1
[INPUT] 0    0    [1    /1   ]  1298.35278808        1
[INPUT] 0    0    [1    /1   ]  196.489497974        1
[INPUT] 0    0    [1    /1   ]  43.8781485246        1
[INPUT] 0    0    [1    /1   ]  11.8996500223        1
[INPUT] 1    0    [1    /1   ]  5.32827478802        1
[INPUT] 1    0    [1    /1   ]  0.898826559211       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.6843347316064, 1.0]], [0, [0.9497549498162445, 1.0]], [0, [1298.352788078178, 1.0]], [0, [196.48949797414576, 1.0]], [0, [43.87814852463628, 1.0]], [0, [11.899650022301792, 1.0]], [1, [5.328274788022146, 1.0]], [1, [0.898826559211186, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.68433473]
bas 1, expnt(s) = [0.94975495]
bas 2, expnt(s) = [1298.35278808]
bas 3, expnt(s) = [196.48949797]
bas 4, expnt(s) = [43.87814852]
bas 5, expnt(s) = [11.89965002]
bas 6, expnt(s) = [5.32827479]
bas 7, expnt(s) = [0.89882656]
CPU time:        55.58
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94768433e+03 7.40719798e+02 9.49754950e-01 2.43065711e+00
 1.29835279e+03 5.46461488e+02 1.96489498e+02 1.32592675e+02
 4.38781485e+01 4.30726155e+01 1.18996500e+01 1.61869739e+01
 5.32827479e+00 2.36166156e+01 8.98826559e-01 2.55316724e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827472036264261
cond(S) = 150.01196112461892
E1 = -181.28078821337786  E_coul = 54.36154825498051
init E= -126.919239958397
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649478813648435  LUMO = 5.34784789487436
  mo_energy =
[-3.26681412e+01 -1.83782910e+00 -6.49478814e-01 -6.49478814e-01
 -6.49478814e-01  5.34784789e+00  5.34784789e+00  5.34784789e+00
  3.26682715e+01  2.80041096e+02  1.78588647e+03  6.57515851e+03]
E1 = -181.59111790050864  E_coul = 54.328338097610434
cycle= 1 E= -127.262779802898  delta_E= -0.344  |g|= 0.0937  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.113935
diis-c [-0.01298127  1.        ]
  HOMO = -0.610532835922928  LUMO = 5.36953383837347
  mo_energy =
[-3.28323773e+01 -1.80339685e+00 -6.10532836e-01 -6.10532836e-01
 -6.10532836e-01  5.36953384e+00  5.36953384e+00  5.36953384e+00
  3.25669001e+01  2.79850971e+02  1.78564727e+03  6.57489355e+03]
E1 = -181.69166538056933  E_coul = 54.4286312875315
cycle= 2 E= -127.263034093038  delta_E= -0.000254  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141902
diis-c [-9.82014805e-05  8.21343350e-02  9.17865665e-01]
  HOMO = -0.604914172022744  LUMO = 5.37863425128595
  mo_energy =
[-3.28096610e+01 -1.79692231e+00 -6.04914172e-01 -6.04914172e-01
 -6.04914172e-01  5.37863425e+00  5.37863425e+00  5.37863425e+00
  3.25861127e+01  2.79876860e+02  1.78567623e+03  6.57492341e+03]
E1 = -181.67571550589918  E_coul = 54.41267407456694
cycle= 3 E= -127.263041431332  delta_E= -7.34e-06  |g|= 0.000937  |ddm|= 0.00251
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00111266
diis-c [-1.69402445e-08 -2.95198964e-03  5.60555152e-02  9.46896474e-01]
  HOMO = -0.605330555343694  LUMO = 5.37797462525034
  mo_energy =
[-3.28112221e+01 -1.79739817e+00 -6.05330555e-01 -6.05330555e-01
 -6.05330555e-01  5.37797463e+00  5.37797463e+00  5.37797463e+00
  3.25847786e+01  2.79875310e+02  1.78567468e+03  6.57492187e+03]
E1 = -181.67686628283693  E_coul = 54.41382480707324
cycle= 4 E= -127.263041475764  delta_E= -4.44e-08  |g|= 2.52e-06  |ddm|= 0.00018
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.03836e-06
diis-c [-3.25644527e-13  4.08830153e-05 -1.22542579e-03 -1.80039134e-02
  1.01918846e+00]
  HOMO = -0.605330210882653  LUMO = 5.37797520923847
  mo_energy =
[-3.28112205e+01 -1.79739765e+00 -6.05330211e-01 -6.05330211e-01
 -6.05330211e-01  5.37797521e+00  5.37797521e+00  5.37797521e+00
  3.25847804e+01  2.79875313e+02  1.78567469e+03  6.57492188e+03]
E1 = -181.67686544087158  E_coul = 54.41382396510788
cycle= 5 E= -127.263041475764  delta_E= -1.42e-14  |g|= 2.99e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67686544087158  E_coul = 54.41382396510788
  HOMO = -0.605330204464962  LUMO = 5.37797521802292
  mo_energy =
[-3.28112205e+01 -1.79739764e+00 -6.05330204e-01 -6.05330204e-01
 -6.05330204e-01  5.37797522e+00  5.37797522e+00  5.37797522e+00
  3.25847804e+01  2.79875313e+02  1.78567469e+03  6.57492188e+03]
E1 = -181.6768654320982  E_coul = 54.41382395633451
Extra cycle  E= -127.263041475764  delta_E= 1.42e-14  |g|= 1.15e-09  |ddm|= 2.65e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.01196112461892
E1 = -181.6768654320982  E_coul = 54.41382395633451
init E= -127.263041475764
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605330204959779  LUMO = 5.3779752171802
  mo_energy =
[-3.28112205e+01 -1.79739764e+00 -6.05330205e-01 -6.05330205e-01
 -6.05330205e-01  5.37797522e+00  5.37797522e+00  5.37797522e+00
  3.25847804e+01  2.79875313e+02  1.78567469e+03  6.57492188e+03]
E1 = -181.6768654338004  E_coul = 54.41382395803671
cycle= 1 E= -127.263041475764  delta_E=    0  |g|= 2.1e-10  |ddm|= 2.81e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6768654338004  E_coul = 54.41382395803671
  HOMO = -0.605330204852884  LUMO = 5.37797521735036
  mo_energy =
[-3.28112205e+01 -1.79739764e+00 -6.05330205e-01 -6.05330205e-01
 -6.05330205e-01  5.37797522e+00  5.37797522e+00  5.37797522e+00
  3.25847804e+01  2.79875313e+02  1.78567469e+03  6.57492188e+03]
E1 = -181.67686543351084  E_coul = 54.41382395774721
Extra cycle  E= -127.263041475764  delta_E= 5.68e-14  |g|= 3.37e-11  |ddm|= 4.55e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94768433e+03 9.49754950e-01 1.29835279e+03 1.96489498e+02
 4.38781485e+01 1.18996500e+01 5.32827479e+00 8.98826559e-01]
grad_E = [-9.88753989e-06 -5.53146595e-07  5.59639067e-05 -2.46697138e-04
 -1.53073436e-04 -3.70717605e-05  7.58341582e-05 -1.01865342e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.72330159        1
[INPUT] 0    0    [1    /1   ]  0.949861537748       1
[INPUT] 0    0    [1    /1   ]  1298.12661393        1
[INPUT] 0    0    [1    /1   ]  197.586536455        1
[INPUT] 0    0    [1    /1   ]  44.0717601619        1
[INPUT] 0    0    [1    /1   ]  11.9292802908        1
[INPUT] 1    0    [1    /1   ]  5.32806348943        1
[INPUT] 1    0    [1    /1   ]  0.898793779722       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.7233015889212, 1.0]], [0, [0.9498615377482224, 1.0]], [0, [1298.126613928213, 1.0]], [0, [197.58653645513087, 1.0]], [0, [44.07176016187165, 1.0]], [0, [11.929280290830253, 1.0]], [1, [5.328063489429951, 1.0]], [1, [0.8987937797224436, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.72330159]
bas 1, expnt(s) = [0.94986154]
bas 2, expnt(s) = [1298.12661393]
bas 3, expnt(s) = [197.58653646]
bas 4, expnt(s) = [44.07176016]
bas 5, expnt(s) = [11.92928029]
bas 6, expnt(s) = [5.32806349]
bas 7, expnt(s) = [0.89879378]
CPU time:        58.49
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94772330e+03 7.40730913e+02 9.49861538e-01 2.43086170e+00
 1.29812661e+03 5.46390091e+02 1.97586536e+02 1.33147506e+02
 4.40717602e+01 4.32150800e+01 1.19292803e+01 1.62171938e+01
 5.32806349e+00 2.36154449e+01 8.98793780e-01 2.55305085e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827460849382355
cond(S) = 150.4341414326895
E1 = -181.28063372530764  E_coul = 54.36134841364064
init E= -126.919285311667
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649486516128859  LUMO = 5.34759153502333
  mo_energy =
[-3.26683010e+01 -1.83789020e+00 -6.49486516e-01 -6.49486516e-01
 -6.49486516e-01  5.34759154e+00  5.34759154e+00  5.34759154e+00
  3.28307410e+01  2.81630559e+02  1.78986434e+03  6.57936730e+03]
E1 = -181.59191891508723  E_coul = 54.3288418272598
cycle= 1 E= -127.263077087827  delta_E= -0.344  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.113562
diis-c [-0.01289629  1.        ]
  HOMO = -0.610494012587382  LUMO = 5.36936016311847
  mo_energy =
[-3.28323473e+01 -1.80343932e+00 -6.10494013e-01 -6.10494013e-01
 -6.10494013e-01  5.36936016e+00  5.36936016e+00  5.36936016e+00
  3.27292107e+01  2.81440614e+02  1.78962571e+03  6.57910308e+03]
E1 = -181.6922168058064  E_coul = 54.42888658314092
cycle= 2 E= -127.263330222665  delta_E= -0.000253  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141489
diis-c [-9.74011514e-05  8.22458862e-02  9.17754114e-01]
  HOMO = -0.604890037184941  LUMO = 5.37843622550449
  mo_energy =
[-3.28096910e+01 -1.79698049e+00 -6.04890037e-01 -6.04890037e-01
 -6.04890037e-01  5.37843623e+00  5.37843623e+00  5.37843623e+00
  3.27483976e+01  2.81466448e+02  1.78965459e+03  6.57913287e+03]
E1 = -181.6763164737027  E_coul = 54.41297895451033
cycle= 3 E= -127.263337519192  delta_E= -7.3e-06  |g|= 0.000932  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00110655
diis-c [-1.67222242e-08 -2.96078280e-03  5.58109441e-02  9.47149839e-01]
  HOMO = -0.605304342020274  LUMO = 5.37777995775799
  mo_energy =
[-3.28112437e+01 -1.79745408e+00 -6.05304342e-01 -6.05304342e-01
 -6.05304342e-01  5.37777996e+00  5.37777996e+00  5.37777996e+00
  3.27470690e+01  2.81464908e+02  1.78965306e+03  6.57913134e+03]
E1 = -181.67746088187278  E_coul = 54.41412331873755
cycle= 4 E= -127.263337563135  delta_E= -4.39e-08  |g|= 2.49e-06  |ddm|= 0.000179
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.00541e-06
diis-c [-3.20021425e-13  4.08237816e-05 -1.21245242e-03 -1.78594881e-02
  1.01903112e+00]
  HOMO = -0.605303988167706  LUMO = 5.37778055510071
  mo_energy =
[-3.28112421e+01 -1.79745355e+00 -6.05303988e-01 -6.05303988e-01
 -6.05303988e-01  5.37778056e+00  5.37778056e+00  5.37778056e+00
  3.27470708e+01  2.81464911e+02  1.78965307e+03  6.57913134e+03]
E1 = -181.67746001586565  E_coul = 54.41412245273036
cycle= 5 E= -127.263337563135  delta_E= -5.68e-14  |g|= 2.94e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67746001586565  E_coul = 54.41412245273036
  HOMO = -0.605303981898051  LUMO = 5.37778056367893
  mo_energy =
[-3.28112421e+01 -1.79745354e+00 -6.05303982e-01 -6.05303982e-01
 -6.05303982e-01  5.37778056e+00  5.37778056e+00  5.37778056e+00
  3.27470708e+01  2.81464911e+02  1.78965307e+03  6.57913134e+03]
E1 = -181.6774600073704  E_coul = 54.41412244423503
Extra cycle  E= -127.263337563135  delta_E= -8.53e-14  |g|= 1.12e-09  |ddm|= 2.59e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94772330e+03 9.49861538e-01 1.29812661e+03 1.97586536e+02
 4.40717602e+01 1.19292803e+01 5.32806349e+00 8.98793780e-01]
E = -127.26333756313537
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.72330159        1
[INPUT] 0    0    [1    /1   ]  0.949861537748       1
[INPUT] 0    0    [1    /1   ]  1298.12661393        1
[INPUT] 0    0    [1    /1   ]  197.586536455        1
[INPUT] 0    0    [1    /1   ]  44.0717601619        1
[INPUT] 0    0    [1    /1   ]  11.9292802908        1
[INPUT] 1    0    [1    /1   ]  5.32806348943        1
[INPUT] 1    0    [1    /1   ]  0.898793779722       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.7233015889212, 1.0]], [0, [0.9498615377482224, 1.0]], [0, [1298.126613928213, 1.0]], [0, [197.58653645513087, 1.0]], [0, [44.07176016187165, 1.0]], [0, [11.929280290830253, 1.0]], [1, [5.328063489429951, 1.0]], [1, [0.8987937797224436, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.72330159]
bas 1, expnt(s) = [0.94986154]
bas 2, expnt(s) = [1298.12661393]
bas 3, expnt(s) = [197.58653646]
bas 4, expnt(s) = [44.07176016]
bas 5, expnt(s) = [11.92928029]
bas 6, expnt(s) = [5.32806349]
bas 7, expnt(s) = [0.89879378]
CPU time:        58.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94772330e+03 7.40730913e+02 9.49861538e-01 2.43086170e+00
 1.29812661e+03 5.46390091e+02 1.97586536e+02 1.33147506e+02
 4.40717602e+01 4.32150800e+01 1.19292803e+01 1.62171938e+01
 5.32806349e+00 2.36154449e+01 8.98793780e-01 2.55305085e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827460849382355
cond(S) = 150.4341414326895
E1 = -181.28063372530764  E_coul = 54.36134841364064
init E= -126.919285311667
    CPU time for initialize scf      0.03 sec, wall time      0.03 sec
  HOMO = -0.649486516128859  LUMO = 5.34759153502333
  mo_energy =
[-3.26683010e+01 -1.83789020e+00 -6.49486516e-01 -6.49486516e-01
 -6.49486516e-01  5.34759154e+00  5.34759154e+00  5.34759154e+00
  3.28307410e+01  2.81630559e+02  1.78986434e+03  6.57936730e+03]
E1 = -181.59191891508723  E_coul = 54.3288418272598
cycle= 1 E= -127.263077087827  delta_E= -0.344  |g|= 0.0935  |ddm|= 0.318
    CPU time for cycle= 1      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.113562
diis-c [-0.01289629  1.        ]
  HOMO = -0.610494012587382  LUMO = 5.36936016311847
  mo_energy =
[-3.28323473e+01 -1.80343932e+00 -6.10494013e-01 -6.10494013e-01
 -6.10494013e-01  5.36936016e+00  5.36936016e+00  5.36936016e+00
  3.27292107e+01  2.81440614e+02  1.78962571e+03  6.57910308e+03]
E1 = -181.6922168058064  E_coul = 54.42888658314092
cycle= 2 E= -127.263330222665  delta_E= -0.000253  |g|= 0.0116  |ddm|= 0.0156
    CPU time for cycle= 2      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=0.0141489
diis-c [-9.74011514e-05  8.22458862e-02  9.17754114e-01]
  HOMO = -0.604890037184941  LUMO = 5.37843622550449
  mo_energy =
[-3.28096910e+01 -1.79698049e+00 -6.04890037e-01 -6.04890037e-01
 -6.04890037e-01  5.37843623e+00  5.37843623e+00  5.37843623e+00
  3.27483976e+01  2.81466448e+02  1.78965459e+03  6.57913287e+03]
E1 = -181.6763164737027  E_coul = 54.41297895451033
cycle= 3 E= -127.263337519192  delta_E= -7.3e-06  |g|= 0.000932  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.00110655
diis-c [-1.67222242e-08 -2.96078280e-03  5.58109441e-02  9.47149839e-01]
  HOMO = -0.605304342020274  LUMO = 5.37777995775799
  mo_energy =
[-3.28112437e+01 -1.79745408e+00 -6.05304342e-01 -6.05304342e-01
 -6.05304342e-01  5.37777996e+00  5.37777996e+00  5.37777996e+00
  3.27470690e+01  2.81464908e+02  1.78965306e+03  6.57913134e+03]
E1 = -181.67746088187278  E_coul = 54.41412331873755
cycle= 4 E= -127.263337563135  delta_E= -4.39e-08  |g|= 2.49e-06  |ddm|= 0.000179
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.00541e-06
diis-c [-3.20021425e-13  4.08237816e-05 -1.21245242e-03 -1.78594881e-02
  1.01903112e+00]
  HOMO = -0.605303988167706  LUMO = 5.37778055510071
  mo_energy =
[-3.28112421e+01 -1.79745355e+00 -6.05303988e-01 -6.05303988e-01
 -6.05303988e-01  5.37778056e+00  5.37778056e+00  5.37778056e+00
  3.27470708e+01  2.81464911e+02  1.78965307e+03  6.57913134e+03]
E1 = -181.67746001586565  E_coul = 54.41412245273036
cycle= 5 E= -127.263337563135  delta_E= -5.68e-14  |g|= 2.94e-08  |ddm|= 2.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.67746001586565  E_coul = 54.41412245273036
  HOMO = -0.605303981898051  LUMO = 5.37778056367893
  mo_energy =
[-3.28112421e+01 -1.79745354e+00 -6.05303982e-01 -6.05303982e-01
 -6.05303982e-01  5.37778056e+00  5.37778056e+00  5.37778056e+00
  3.27470708e+01  2.81464911e+02  1.78965307e+03  6.57913134e+03]
E1 = -181.6774600073704  E_coul = 54.41412244423503
Extra cycle  E= -127.263337563135  delta_E= -8.53e-14  |g|= 1.12e-09  |ddm|= 2.59e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 150.4341414326895
E1 = -181.6774600073704  E_coul = 54.41412244423503
init E= -127.263337563135
    CPU time for initialize scf      0.07 sec, wall time      0.08 sec
  HOMO = -0.60530398237656  LUMO = 5.3777805628635
  mo_energy =
[-3.28112421e+01 -1.79745354e+00 -6.05303982e-01 -6.05303982e-01
 -6.05303982e-01  5.37778056e+00  5.37778056e+00  5.37778056e+00
  3.27470708e+01  2.81464911e+02  1.78965307e+03  6.57913134e+03]
E1 = -181.6774600090197  E_coul = 54.41412244588455
cycle= 1 E= -127.263337563135  delta_E= 1.99e-13  |g|= 2.04e-10  |ddm|= 2.73e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6774600090197  E_coul = 54.41412244588455
  HOMO = -0.605303982272964  LUMO = 5.3777805630284
  mo_energy =
[-3.28112421e+01 -1.79745354e+00 -6.05303982e-01 -6.05303982e-01
 -6.05303982e-01  5.37778056e+00  5.37778056e+00  5.37778056e+00
  3.27470708e+01  2.81464911e+02  1.78965307e+03  6.57913134e+03]
E1 = -181.6774600087395  E_coul = 54.4141224456042
Extra cycle  E= -127.263337563135  delta_E= -1.42e-13  |g|= 3.26e-11  |ddm|= 4.4e-11
    CPU time for scf_cycle      0.13 sec, wall time      0.14 sec
exp = [1.94772330e+03 9.49861538e-01 1.29812661e+03 1.97586536e+02
 4.40717602e+01 1.19292803e+01 5.32806349e+00 8.98793780e-01]
grad_E = [-1.02131988e-05  2.78259276e-06  5.44484553e-05 -2.17252184e-04
 -1.33885563e-04 -3.10405451e-05  6.69817381e-05  4.56052831e-07]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.89556478        1
[INPUT] 0    0    [1    /1   ]  0.950326399537       1
[INPUT] 0    0    [1    /1   ]  1297.12675149        1
[INPUT] 0    0    [1    /1   ]  202.436799542        1
[INPUT] 0    0    [1    /1   ]  44.9239381641        1
[INPUT] 0    0    [1    /1   ]  12.0592572761        1
[INPUT] 1    0    [1    /1   ]  5.32712524898        1
[INPUT] 1    0    [1    /1   ]  0.898648618766       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.8955647784583, 1.0]], [0, [0.9503263995365404, 1.0]], [0, [1297.1267514901451, 1.0]], [0, [202.4367995424682, 1.0]], [0, [44.923938164061724, 1.0]], [0, [12.059257276075314, 1.0]], [1, [5.327125248982898, 1.0]], [1, [0.8986486187664018, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.89556478]
bas 1, expnt(s) = [0.9503264]
bas 2, expnt(s) = [1297.12675149]
bas 3, expnt(s) = [202.43679954]
bas 4, expnt(s) = [44.92393816]
bas 5, expnt(s) = [12.05925728]
bas 6, expnt(s) = [5.32712525]
bas 7, expnt(s) = [0.89864862]
CPU time:        61.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94789556e+03 7.40780047e+02 9.50326400e-01 2.43175389e+00
 1.29712675e+03 5.46074424e+02 2.02436800e+02 1.35591393e+02
 4.49239382e+01 4.38402871e+01 1.20592573e+01 1.63495365e+01
 5.32712525e+00 2.36102468e+01 8.98648619e-01 2.55253544e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827411736159444
cond(S) = 152.3235544683121
E1 = -181.2794677347262  E_coul = 54.36054538951661
init E= -126.91892234521
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649514362277326  LUMO = 5.34646766979648
  mo_energy =
[-3.26687752e+01 -1.83816044e+00 -6.49514362e-01 -6.49514362e-01
 -6.49514362e-01  5.34646767e+00  5.34646767e+00  5.34646767e+00
  3.35486766e+01  2.88641750e+02  1.80739121e+03  6.59796683e+03]
E1 = -181.5951185745146  E_coul = 54.33114725230781
cycle= 1 E= -127.263971322207  delta_E= -0.345  |g|= 0.0929  |ddm|= 0.317
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.111998
diis-c [-0.0125436  1.       ]
  HOMO = -0.610318051241404  LUMO = 5.36859960512785
  mo_energy =
[-3.28319762e+01 -1.80362966e+00 -6.10318051e-01 -6.10318051e-01
 -6.10318051e-01  5.36859961e+00  5.36859961e+00  5.36859961e+00
  3.34464777e+01  2.88452649e+02  1.80715508e+03  6.59770586e+03]
E1 = -181.69431734596537  E_coul = 54.430097959419356
cycle= 2 E= -127.264219386546  delta_E= -0.000248  |g|= 0.0114  |ddm|= 0.0154
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139676
diis-c [-9.41153712e-05  8.26208852e-02  9.17379115e-01]
  HOMO = -0.604778033946936  LUMO = 5.37756970036727
  mo_energy =
[-3.28095806e+01 -1.79723923e+00 -6.04778034e-01 -6.04778034e-01
 -6.04778034e-01  5.37756970e+00  5.37756970e+00  5.37756970e+00
  3.34655505e+01  2.88478247e+02  1.80718364e+03  6.59773531e+03]
E1 = -181.6786316588603  E_coul = 54.414405157596384
cycle= 3 E= -127.264226501264  delta_E= -7.11e-06  |g|= 0.000911  |ddm|= 0.00247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00108186
diis-c [-1.57949925e-08 -2.99486838e-03  5.48881671e-02  9.48106701e-01]
  HOMO = -0.605183993407885  LUMO = 5.37692690837434
  mo_energy =
[-3.28110996e+01 -1.79770375e+00 -6.05183993e-01 -6.05183993e-01
 -6.05183993e-01  5.37692691e+00  5.37692691e+00  5.37692691e+00
  3.34642439e+01  2.88476744e+02  1.80718215e+03  6.59773383e+03]
E1 = -181.67975041074624  E_coul = 54.41552386747971
cycle= 4 E= -127.264226543267  delta_E= -4.2e-08  |g|= 2.36e-06  |ddm|= 0.000175
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.86922e-06
diis-c [-2.96701783e-13  4.05328676e-05 -1.16012592e-03 -1.72502913e-02
  1.01836988e+00]
  HOMO = -0.605183602648567  LUMO = 5.37692755806972
  mo_energy =
[-3.28110979e+01 -1.79770319e+00 -6.05183603e-01 -6.05183603e-01
 -6.05183603e-01  5.37692756e+00  5.37692756e+00  5.37692756e+00
  3.34642458e+01  2.88476747e+02  1.80718216e+03  6.59773383e+03]
E1 = -181.6797494499857  E_coul = 54.4155229067192
cycle= 5 E= -127.264226543267  delta_E=    0  |g|= 2.73e-08  |ddm|= 2.04e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6797494499857  E_coul = 54.4155229067192
  HOMO = -0.605183596999409  LUMO = 5.37692756578265
  mo_energy =
[-3.28110978e+01 -1.79770318e+00 -6.05183597e-01 -6.05183597e-01
 -6.05183597e-01  5.37692757e+00  5.37692757e+00  5.37692757e+00
  3.34642458e+01  2.88476747e+02  1.80718216e+03  6.59773383e+03]
E1 = -181.6797494426458  E_coul = 54.41552289937919
Extra cycle  E= -127.264226543267  delta_E= -8.53e-14  |g|= 9.94e-10  |ddm|= 2.34e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.94789556e+03 9.50326400e-01 1.29712675e+03 2.02436800e+02
 4.49239382e+01 1.20592573e+01 5.32712525e+00 8.98648619e-01]
E = -127.2642265432666
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1947.89556478        1
[INPUT] 0    0    [1    /1   ]  0.950326399537       1
[INPUT] 0    0    [1    /1   ]  1297.12675149        1
[INPUT] 0    0    [1    /1   ]  202.436799542        1
[INPUT] 0    0    [1    /1   ]  44.9239381641        1
[INPUT] 0    0    [1    /1   ]  12.0592572761        1
[INPUT] 1    0    [1    /1   ]  5.32712524898        1
[INPUT] 1    0    [1    /1   ]  0.898648618766       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1947.8955647784583, 1.0]], [0, [0.9503263995365404, 1.0]], [0, [1297.1267514901451, 1.0]], [0, [202.4367995424682, 1.0]], [0, [44.923938164061724, 1.0]], [0, [12.059257276075314, 1.0]], [1, [5.327125248982898, 1.0]], [1, [0.8986486187664018, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1947.89556478]
bas 1, expnt(s) = [0.9503264]
bas 2, expnt(s) = [1297.12675149]
bas 3, expnt(s) = [202.43679954]
bas 4, expnt(s) = [44.92393816]
bas 5, expnt(s) = [12.05925728]
bas 6, expnt(s) = [5.32712525]
bas 7, expnt(s) = [0.89864862]
CPU time:        62.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94789556e+03 7.40780047e+02 9.50326400e-01 2.43175389e+00
 1.29712675e+03 5.46074424e+02 2.02436800e+02 1.35591393e+02
 4.49239382e+01 4.38402871e+01 1.20592573e+01 1.63495365e+01
 5.32712525e+00 2.36102468e+01 8.98648619e-01 2.55253544e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827411736159444
cond(S) = 152.3235544683121
E1 = -181.2794677347262  E_coul = 54.36054538951661
init E= -126.91892234521
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649514362277326  LUMO = 5.34646766979648
  mo_energy =
[-3.26687752e+01 -1.83816044e+00 -6.49514362e-01 -6.49514362e-01
 -6.49514362e-01  5.34646767e+00  5.34646767e+00  5.34646767e+00
  3.35486766e+01  2.88641750e+02  1.80739121e+03  6.59796683e+03]
E1 = -181.5951185745146  E_coul = 54.33114725230781
cycle= 1 E= -127.263971322207  delta_E= -0.345  |g|= 0.0929  |ddm|= 0.317
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.111998
diis-c [-0.0125436  1.       ]
  HOMO = -0.610318051241404  LUMO = 5.36859960512785
  mo_energy =
[-3.28319762e+01 -1.80362966e+00 -6.10318051e-01 -6.10318051e-01
 -6.10318051e-01  5.36859961e+00  5.36859961e+00  5.36859961e+00
  3.34464777e+01  2.88452649e+02  1.80715508e+03  6.59770586e+03]
E1 = -181.69431734596537  E_coul = 54.430097959419356
cycle= 2 E= -127.264219386546  delta_E= -0.000248  |g|= 0.0114  |ddm|= 0.0154
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139676
diis-c [-9.41153712e-05  8.26208852e-02  9.17379115e-01]
  HOMO = -0.604778033946936  LUMO = 5.37756970036727
  mo_energy =
[-3.28095806e+01 -1.79723923e+00 -6.04778034e-01 -6.04778034e-01
 -6.04778034e-01  5.37756970e+00  5.37756970e+00  5.37756970e+00
  3.34655505e+01  2.88478247e+02  1.80718364e+03  6.59773531e+03]
E1 = -181.6786316588603  E_coul = 54.414405157596384
cycle= 3 E= -127.264226501264  delta_E= -7.11e-06  |g|= 0.000911  |ddm|= 0.00247
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00108186
diis-c [-1.57949925e-08 -2.99486838e-03  5.48881671e-02  9.48106701e-01]
  HOMO = -0.605183993407885  LUMO = 5.37692690837434
  mo_energy =
[-3.28110996e+01 -1.79770375e+00 -6.05183993e-01 -6.05183993e-01
 -6.05183993e-01  5.37692691e+00  5.37692691e+00  5.37692691e+00
  3.34642439e+01  2.88476744e+02  1.80718215e+03  6.59773383e+03]
E1 = -181.67975041074624  E_coul = 54.41552386747971
cycle= 4 E= -127.264226543267  delta_E= -4.2e-08  |g|= 2.36e-06  |ddm|= 0.000175
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.86922e-06
diis-c [-2.96701783e-13  4.05328676e-05 -1.16012592e-03 -1.72502913e-02
  1.01836988e+00]
  HOMO = -0.605183602648567  LUMO = 5.37692755806972
  mo_energy =
[-3.28110979e+01 -1.79770319e+00 -6.05183603e-01 -6.05183603e-01
 -6.05183603e-01  5.37692756e+00  5.37692756e+00  5.37692756e+00
  3.34642458e+01  2.88476747e+02  1.80718216e+03  6.59773383e+03]
E1 = -181.6797494499857  E_coul = 54.4155229067192
cycle= 5 E= -127.264226543267  delta_E=    0  |g|= 2.73e-08  |ddm|= 2.04e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6797494499857  E_coul = 54.4155229067192
  HOMO = -0.605183596999409  LUMO = 5.37692756578265
  mo_energy =
[-3.28110978e+01 -1.79770318e+00 -6.05183597e-01 -6.05183597e-01
 -6.05183597e-01  5.37692757e+00  5.37692757e+00  5.37692757e+00
  3.34642458e+01  2.88476747e+02  1.80718216e+03  6.59773383e+03]
E1 = -181.6797494426458  E_coul = 54.41552289937919
Extra cycle  E= -127.264226543267  delta_E= -8.53e-14  |g|= 9.94e-10  |ddm|= 2.34e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 152.3235544683121
E1 = -181.6797494426458  E_coul = 54.41552289937919
init E= -127.264226543267
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605183597410221  LUMO = 5.37692756508052
  mo_energy =
[-3.28110978e+01 -1.79770318e+00 -6.05183597e-01 -6.05183597e-01
 -6.05183597e-01  5.37692757e+00  5.37692757e+00  5.37692757e+00
  3.34642458e+01  2.88476747e+02  1.80718216e+03  6.59773383e+03]
E1 = -181.67974944407666  E_coul = 54.41552290081017
cycle= 1 E= -127.264226543266  delta_E= 1.14e-13  |g|= 1.77e-10  |ddm|= 2.38e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.67974944407666  E_coul = 54.41552290081017
  HOMO = -0.605183597320292  LUMO = 5.3769275652236
  mo_energy =
[-3.28110978e+01 -1.79770318e+00 -6.05183597e-01 -6.05183597e-01
 -6.05183597e-01  5.37692757e+00  5.37692757e+00  5.37692757e+00
  3.34642458e+01  2.88476747e+02  1.80718216e+03  6.59773383e+03]
E1 = -181.67974944383423  E_coul = 54.41552290056769
Extra cycle  E= -127.264226543267  delta_E= -5.68e-14  |g|= 2.82e-11  |ddm|= 3.81e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94789556e+03 9.50326400e-01 1.29712675e+03 2.02436800e+02
 4.49239382e+01 1.20592573e+01 5.32712525e+00 8.98648619e-01]
grad_E = [-1.15223844e-05  6.18749314e-05  4.81637556e-05 -9.95668688e-05
 -3.72558041e-05  1.99824343e-05  2.67985962e-05  2.89630115e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.04160963        1
[INPUT] 0    0    [1    /1   ]  0.950676115991       1
[INPUT] 0    0    [1    /1   ]  1296.27896861        1
[INPUT] 0    0    [1    /1   ]  206.553652144        1
[INPUT] 0    0    [1    /1   ]  45.620242356         1
[INPUT] 0    0    [1    /1   ]  12.1622937924        1
[INPUT] 1    0    [1    /1   ]  5.3263465114         1
[INPUT] 1    0    [1    /1   ]  0.898528540021       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.041609632757, 1.0]], [0, [0.9506761159914712, 1.0]], [0, [1296.2789686124434, 1.0]], [0, [206.5536521442691, 1.0]], [0, [45.6202423559507, 1.0]], [0, [12.16229379236582, 1.0]], [1, [5.326346511400276, 1.0]], [1, [0.8985285400205131, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.04160963]
bas 1, expnt(s) = [0.95067612]
bas 2, expnt(s) = [1296.27896861]
bas 3, expnt(s) = [206.55365214]
bas 4, expnt(s) = [45.62024236]
bas 5, expnt(s) = [12.16229379]
bas 6, expnt(s) = [5.32634651]
bas 7, expnt(s) = [0.89852854]
CPU time:        65.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94804161e+03 7.40821702e+02 9.50676116e-01 2.43242502e+00
 1.29627897e+03 5.45806723e+02 2.06553652e+02 1.37654269e+02
 4.56202424e+01 4.43489371e+01 1.21622938e+01 1.64541951e+01
 5.32634651e+00 2.36059326e+01 8.98528540e-01 2.55210911e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827374954552571
cond(S) = 153.93534467429723
E1 = -181.27786827482623  E_coul = 54.3598723916302
init E= -126.917995883196
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64953960758684  LUMO = 5.34553410768748
  mo_energy =
[-3.26689376e+01 -1.83837378e+00 -6.49539608e-01 -6.49539608e-01
 -6.49539608e-01  5.34553411e+00  5.34553411e+00  5.34553411e+00
  3.41315812e+01  2.94484305e+02  1.82209291e+03  6.61364936e+03]
E1 = -181.5971139857126  E_coul = 54.332879787913846
cycle= 1 E= -127.264234197799  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11077
diis-c [-0.01226989  1.        ]
  HOMO = -0.610185126283929  LUMO = 5.36794921242769
  mo_energy =
[-3.28314850e+01 -1.80378240e+00 -6.10185126e-01 -6.10185126e-01
 -6.10185126e-01  5.36794921e+00  5.36794921e+00  5.36794921e+00
  3.40288573e+01  2.94295841e+02  1.82185868e+03  6.61339088e+03]
E1 = -181.69544883144187  E_coul = 54.43097054003116
cycle= 2 E= -127.264478291411  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138254
diis-c [-9.15947127e-05  8.29148190e-02  9.17085181e-01]
  HOMO = -0.604695260599558  LUMO = 5.37683613647465
  mo_energy =
[-3.28092944e+01 -1.79744567e+00 -6.04695261e-01 -6.04695261e-01
 -6.04695261e-01  5.37683614e+00  5.37683614e+00  5.37683614e+00
  3.40478392e+01  2.94321252e+02  1.82188699e+03  6.61342006e+03]
E1 = -181.67993086761356  E_coul = 54.415445602305304
cycle= 3 E= -127.264485265308  delta_E= -6.97e-06  |g|= 0.000895  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106271
diis-c [-1.50848540e-08 -3.02007285e-03  5.41752143e-02  9.48844859e-01]
  HOMO = -0.6050947359892  LUMO = 5.37620380794408
  mo_energy =
[-3.28107873e+01 -1.79790315e+00 -6.05094736e-01 -6.05094736e-01
 -6.05094736e-01  5.37620381e+00  5.37620381e+00  5.37620381e+00
  3.40465498e+01  2.94319779e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.6810297721398  E_coul = 54.41654446630078
cycle= 4 E= -127.264485305839  delta_E= -4.05e-08  |g|= 2.27e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76903e-06
diis-c [-2.80000658e-13  4.03241484e-05 -1.12039711e-03 -1.67843243e-02
  1.01786440e+00]
  HOMO = -0.605094317791606  LUMO = 5.37620449641358
  mo_energy =
[-3.28107855e+01 -1.79790256e+00 -6.05094318e-01 -6.05094318e-01
 -6.05094318e-01  5.37620450e+00  5.37620450e+00  5.37620450e+00
  3.40465518e+01  2.94319782e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.6810287414218  E_coul = 54.41654343558265
cycle= 5 E= -127.264485305839  delta_E= -1.42e-13  |g|= 2.56e-08  |ddm|= 2.07e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6810287414218  E_coul = 54.41654343558265
  HOMO = -0.60509431263205  LUMO = 5.37620450343973
  mo_energy =
[-3.28107854e+01 -1.79790255e+00 -6.05094313e-01 -6.05094313e-01
 -6.05094313e-01  5.37620450e+00  5.37620450e+00  5.37620450e+00
  3.40465518e+01  2.94319782e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.68102873500646  E_coul = 54.416543429167255
Extra cycle  E= -127.264485305839  delta_E= -4.26e-14  |g|= 8.97e-10  |ddm|= 2.14e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94804161e+03 9.50676116e-01 1.29627897e+03 2.06553652e+02
 4.56202424e+01 1.21622938e+01 5.32634651e+00 8.98528540e-01]
E = -127.2644853058392
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.04160963        1
[INPUT] 0    0    [1    /1   ]  0.950676115991       1
[INPUT] 0    0    [1    /1   ]  1296.27896861        1
[INPUT] 0    0    [1    /1   ]  206.553652144        1
[INPUT] 0    0    [1    /1   ]  45.620242356         1
[INPUT] 0    0    [1    /1   ]  12.1622937924        1
[INPUT] 1    0    [1    /1   ]  5.3263465114         1
[INPUT] 1    0    [1    /1   ]  0.898528540021       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.041609632757, 1.0]], [0, [0.9506761159914712, 1.0]], [0, [1296.2789686124434, 1.0]], [0, [206.5536521442691, 1.0]], [0, [45.6202423559507, 1.0]], [0, [12.16229379236582, 1.0]], [1, [5.326346511400276, 1.0]], [1, [0.8985285400205131, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.04160963]
bas 1, expnt(s) = [0.95067612]
bas 2, expnt(s) = [1296.27896861]
bas 3, expnt(s) = [206.55365214]
bas 4, expnt(s) = [45.62024236]
bas 5, expnt(s) = [12.16229379]
bas 6, expnt(s) = [5.32634651]
bas 7, expnt(s) = [0.89852854]
CPU time:        65.89
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94804161e+03 7.40821702e+02 9.50676116e-01 2.43242502e+00
 1.29627897e+03 5.45806723e+02 2.06553652e+02 1.37654269e+02
 4.56202424e+01 4.43489371e+01 1.21622938e+01 1.64541951e+01
 5.32634651e+00 2.36059326e+01 8.98528540e-01 2.55210911e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827374954552571
cond(S) = 153.93534467429723
E1 = -181.27786827482623  E_coul = 54.3598723916302
init E= -126.917995883196
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64953960758684  LUMO = 5.34553410768748
  mo_energy =
[-3.26689376e+01 -1.83837378e+00 -6.49539608e-01 -6.49539608e-01
 -6.49539608e-01  5.34553411e+00  5.34553411e+00  5.34553411e+00
  3.41315812e+01  2.94484305e+02  1.82209291e+03  6.61364936e+03]
E1 = -181.5971139857126  E_coul = 54.332879787913846
cycle= 1 E= -127.264234197799  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11077
diis-c [-0.01226989  1.        ]
  HOMO = -0.610185126283929  LUMO = 5.36794921242769
  mo_energy =
[-3.28314850e+01 -1.80378240e+00 -6.10185126e-01 -6.10185126e-01
 -6.10185126e-01  5.36794921e+00  5.36794921e+00  5.36794921e+00
  3.40288573e+01  2.94295841e+02  1.82185868e+03  6.61339088e+03]
E1 = -181.69544883144187  E_coul = 54.43097054003116
cycle= 2 E= -127.264478291411  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138254
diis-c [-9.15947127e-05  8.29148190e-02  9.17085181e-01]
  HOMO = -0.604695260599558  LUMO = 5.37683613647465
  mo_energy =
[-3.28092944e+01 -1.79744567e+00 -6.04695261e-01 -6.04695261e-01
 -6.04695261e-01  5.37683614e+00  5.37683614e+00  5.37683614e+00
  3.40478392e+01  2.94321252e+02  1.82188699e+03  6.61342006e+03]
E1 = -181.67993086761356  E_coul = 54.415445602305304
cycle= 3 E= -127.264485265308  delta_E= -6.97e-06  |g|= 0.000895  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106271
diis-c [-1.50848540e-08 -3.02007285e-03  5.41752143e-02  9.48844859e-01]
  HOMO = -0.6050947359892  LUMO = 5.37620380794408
  mo_energy =
[-3.28107873e+01 -1.79790315e+00 -6.05094736e-01 -6.05094736e-01
 -6.05094736e-01  5.37620381e+00  5.37620381e+00  5.37620381e+00
  3.40465498e+01  2.94319779e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.6810297721398  E_coul = 54.41654446630078
cycle= 4 E= -127.264485305839  delta_E= -4.05e-08  |g|= 2.27e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76903e-06
diis-c [-2.80000658e-13  4.03241484e-05 -1.12039711e-03 -1.67843243e-02
  1.01786440e+00]
  HOMO = -0.605094317791606  LUMO = 5.37620449641358
  mo_energy =
[-3.28107855e+01 -1.79790256e+00 -6.05094318e-01 -6.05094318e-01
 -6.05094318e-01  5.37620450e+00  5.37620450e+00  5.37620450e+00
  3.40465518e+01  2.94319782e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.6810287414218  E_coul = 54.41654343558265
cycle= 5 E= -127.264485305839  delta_E= -1.42e-13  |g|= 2.56e-08  |ddm|= 2.07e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6810287414218  E_coul = 54.41654343558265
  HOMO = -0.60509431263205  LUMO = 5.37620450343973
  mo_energy =
[-3.28107854e+01 -1.79790255e+00 -6.05094313e-01 -6.05094313e-01
 -6.05094313e-01  5.37620450e+00  5.37620450e+00  5.37620450e+00
  3.40465518e+01  2.94319782e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.68102873500646  E_coul = 54.416543429167255
Extra cycle  E= -127.264485305839  delta_E= -4.26e-14  |g|= 8.97e-10  |ddm|= 2.14e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 153.93534467429723
E1 = -181.68102873500646  E_coul = 54.416543429167255
init E= -127.264485305839
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605094312988516  LUMO = 5.37620450282824
  mo_energy =
[-3.28107854e+01 -1.79790255e+00 -6.05094313e-01 -6.05094313e-01
 -6.05094313e-01  5.37620450e+00  5.37620450e+00  5.37620450e+00
  3.40465518e+01  2.94319782e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.68102873626412  E_coul = 54.41654343042495
cycle= 1 E= -127.264485305839  delta_E= 2.84e-14  |g|= 1.55e-10  |ddm|= 2.1e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68102873626412  E_coul = 54.41654343042495
  HOMO = -0.605094312909418  LUMO = 5.37620450295401
  mo_energy =
[-3.28107854e+01 -1.79790255e+00 -6.05094313e-01 -6.05094313e-01
 -6.05094313e-01  5.37620450e+00  5.37620450e+00  5.37620450e+00
  3.40465518e+01  2.94319782e+02  1.82188554e+03  6.61341862e+03]
E1 = -181.6810287360516  E_coul = 54.4165434302124
Extra cycle  E= -127.264485305839  delta_E= -1.42e-14  |g|= 2.47e-11  |ddm|= 3.34e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94804161e+03 9.50676116e-01 1.29627897e+03 2.06553652e+02
 4.56202424e+01 1.21622938e+01 5.32634651e+00 8.98528540e-01]
grad_E = [-1.24891962e-05  6.88331089e-05  4.32548795e-05 -7.83533304e-06
  2.84209668e-05  2.77734597e-05 -7.16761239e-06  3.69269981e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05833119        1
[INPUT] 0    0    [1    /1   ]  0.950686975485       1
[INPUT] 0    0    [1    /1   ]  1296.18184007        1
[INPUT] 0    0    [1    /1   ]  207.028293516        1
[INPUT] 0    0    [1    /1   ]  45.6814438805        1
[INPUT] 0    0    [1    /1   ]  12.1692670265        1
[INPUT] 1    0    [1    /1   ]  5.3263163303         1
[INPUT] 1    0    [1    /1   ]  0.898521836197       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0583311852238, 1.0]], [0, [0.9506869754853831, 1.0]], [0, [1296.1818400720997, 1.0]], [0, [207.02829351572822, 1.0]], [0, [45.681443880487706, 1.0]], [0, [12.169267026477797, 1.0]], [1, [5.326316330296799, 1.0]], [1, [0.8985218361970609, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05833119]
bas 1, expnt(s) = [0.95068698]
bas 2, expnt(s) = [1296.18184007]
bas 3, expnt(s) = [207.02829352]
bas 4, expnt(s) = [45.68144388]
bas 5, expnt(s) = [12.16926703]
bas 6, expnt(s) = [5.32631633]
bas 7, expnt(s) = [0.89852184]
CPU time:        68.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805833e+03 7.40826471e+02 9.50686975e-01 2.43244586e+00
 1.29618184e+03 5.45776050e+02 2.07028294e+02 1.37891438e+02
 4.56814439e+01 4.43935516e+01 1.21692670e+01 1.64612701e+01
 5.32631633e+00 2.36057654e+01 8.98521836e-01 2.55208531e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827372586211833
cond(S) = 154.10518817873017
E1 = -181.27762505094555  E_coul = 54.35973824090472
init E= -126.917886810041
    CPU time for initialize scf      0.02 sec, wall time      0.03 sec
  HOMO = -0.649549066727955  LUMO = 5.34547761989434
  mo_energy =
[-3.26689651e+01 -1.83838582e+00 -6.49549067e-01 -6.49549067e-01
 -6.49549067e-01  5.34547762e+00  5.34547762e+00  5.34547762e+00
  3.41773813e+01  2.95083750e+02  1.82370138e+03  6.61537888e+03]
E1 = -181.59711304679118  E_coul = 54.332875293468625
cycle= 1 E= -127.264237753323  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110628
diis-c [-0.01223855  1.        ]
  HOMO = -0.610183743922637  LUMO = 5.36791079220656
  mo_energy =
[-3.28314871e+01 -1.80378831e+00 -6.10183744e-01 -6.10183744e-01
 -6.10183744e-01  5.36791079e+00  5.36791079e+00  5.36791079e+00
  3.40746064e+01  2.94895257e+02  1.82346720e+03  6.61512049e+03]
E1 = -181.69539302061605  E_coul = 54.43091142527148
cycle= 2 E= -127.264481595345  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.02 sec
diis-norm(errvec)=0.0138162
diis-c [-9.12991982e-05  8.30270188e-02  9.16972981e-01]
  HOMO = -0.604697561751327  LUMO = 5.37679157428735
  mo_energy =
[-3.28093120e+01 -1.79745558e+00 -6.04697562e-01 -6.04697562e-01
 -6.04697562e-01  5.37679157e+00  5.37679157e+00  5.37679157e+00
  3.40935820e+01  2.94920656e+02  1.82349549e+03  6.61514966e+03]
E1 = -181.67988768955894  E_coul = 54.41539912933986
cycle= 3 E= -127.264488560219  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105996
diis-c [-1.50267473e-08 -3.02473102e-03  5.40117183e-02  9.49013013e-01]
  HOMO = -0.605096045192828  LUMO = 5.37616084534303
  mo_energy =
[-3.28108009e+01 -1.79791193e+00 -6.05096045e-01 -6.05096045e-01
 -6.05096045e-01  5.37616085e+00  5.37616085e+00  5.37616085e+00
  3.40922957e+01  2.94919186e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.6809836965094  E_coul = 54.416495095972465
cycle= 4 E= -127.264488600537  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.02 sec, wall time      0.02 sec
diis-norm(errvec)=2.7612e-06
diis-c [-2.79158648e-13  4.03612262e-05 -1.11512577e-03 -1.67421102e-02
  1.01781687e+00]
  HOMO = -0.60509562277821  LUMO = 5.37616153979769
  mo_energy =
[-3.28107991e+01 -1.79791133e+00 -6.05095623e-01 -6.05095623e-01
 -6.05095623e-01  5.37616154e+00  5.37616154e+00  5.37616154e+00
  3.40922976e+01  2.94919189e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.6809826556068  E_coul = 54.41649405506983
cycle= 5 E= -127.264488600537  delta_E= -4.26e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.02 sec, wall time      0.02 sec
E1 = -181.6809826556068  E_coul = 54.41649405506983
  HOMO = -0.605095617681181  LUMO = 5.37616154673307
  mo_energy =
[-3.28107991e+01 -1.79791132e+00 -6.05095618e-01 -6.05095618e-01
 -6.05095618e-01  5.37616155e+00  5.37616155e+00  5.37616155e+00
  3.40922976e+01  2.94919189e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.68098264933252  E_coul = 54.416494048795556
Extra cycle  E= -127.264488600537  delta_E= 1.42e-14  |g|= 8.86e-10  |ddm|= 2.13e-09
    CPU time for scf_cycle      0.11 sec, wall time      0.12 sec
exp = [1.94805833e+03 9.50686975e-01 1.29618184e+03 2.07028294e+02
 4.56814439e+01 1.21692670e+01 5.32631633e+00 8.98521836e-01]
E = -127.26448860053696
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05833119        1
[INPUT] 0    0    [1    /1   ]  0.950686975485       1
[INPUT] 0    0    [1    /1   ]  1296.18184007        1
[INPUT] 0    0    [1    /1   ]  207.028293516        1
[INPUT] 0    0    [1    /1   ]  45.6814438805        1
[INPUT] 0    0    [1    /1   ]  12.1692670265        1
[INPUT] 1    0    [1    /1   ]  5.3263163303         1
[INPUT] 1    0    [1    /1   ]  0.898521836197       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0583311852238, 1.0]], [0, [0.9506869754853831, 1.0]], [0, [1296.1818400720997, 1.0]], [0, [207.02829351572822, 1.0]], [0, [45.681443880487706, 1.0]], [0, [12.169267026477797, 1.0]], [1, [5.326316330296799, 1.0]], [1, [0.8985218361970609, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05833119]
bas 1, expnt(s) = [0.95068698]
bas 2, expnt(s) = [1296.18184007]
bas 3, expnt(s) = [207.02829352]
bas 4, expnt(s) = [45.68144388]
bas 5, expnt(s) = [12.16926703]
bas 6, expnt(s) = [5.32631633]
bas 7, expnt(s) = [0.89852184]
CPU time:        69.27
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805833e+03 7.40826471e+02 9.50686975e-01 2.43244586e+00
 1.29618184e+03 5.45776050e+02 2.07028294e+02 1.37891438e+02
 4.56814439e+01 4.43935516e+01 1.21692670e+01 1.64612701e+01
 5.32631633e+00 2.36057654e+01 8.98521836e-01 2.55208531e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827372586211833
cond(S) = 154.10518817873017
E1 = -181.27762505094555  E_coul = 54.35973824090472
init E= -126.917886810041
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549066727955  LUMO = 5.34547761989434
  mo_energy =
[-3.26689651e+01 -1.83838582e+00 -6.49549067e-01 -6.49549067e-01
 -6.49549067e-01  5.34547762e+00  5.34547762e+00  5.34547762e+00
  3.41773813e+01  2.95083750e+02  1.82370138e+03  6.61537888e+03]
E1 = -181.59711304679118  E_coul = 54.332875293468625
cycle= 1 E= -127.264237753323  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110628
diis-c [-0.01223855  1.        ]
  HOMO = -0.610183743922637  LUMO = 5.36791079220656
  mo_energy =
[-3.28314871e+01 -1.80378831e+00 -6.10183744e-01 -6.10183744e-01
 -6.10183744e-01  5.36791079e+00  5.36791079e+00  5.36791079e+00
  3.40746064e+01  2.94895257e+02  1.82346720e+03  6.61512049e+03]
E1 = -181.69539302061605  E_coul = 54.43091142527148
cycle= 2 E= -127.264481595345  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138162
diis-c [-9.12991982e-05  8.30270188e-02  9.16972981e-01]
  HOMO = -0.604697561751327  LUMO = 5.37679157428735
  mo_energy =
[-3.28093120e+01 -1.79745558e+00 -6.04697562e-01 -6.04697562e-01
 -6.04697562e-01  5.37679157e+00  5.37679157e+00  5.37679157e+00
  3.40935820e+01  2.94920656e+02  1.82349549e+03  6.61514966e+03]
E1 = -181.67988768955894  E_coul = 54.41539912933986
cycle= 3 E= -127.264488560219  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105996
diis-c [-1.50267473e-08 -3.02473102e-03  5.40117183e-02  9.49013013e-01]
  HOMO = -0.605096045192828  LUMO = 5.37616084534303
  mo_energy =
[-3.28108009e+01 -1.79791193e+00 -6.05096045e-01 -6.05096045e-01
 -6.05096045e-01  5.37616085e+00  5.37616085e+00  5.37616085e+00
  3.40922957e+01  2.94919186e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.6809836965094  E_coul = 54.416495095972465
cycle= 4 E= -127.264488600537  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7612e-06
diis-c [-2.79158648e-13  4.03612262e-05 -1.11512577e-03 -1.67421102e-02
  1.01781687e+00]
  HOMO = -0.60509562277821  LUMO = 5.37616153979769
  mo_energy =
[-3.28107991e+01 -1.79791133e+00 -6.05095623e-01 -6.05095623e-01
 -6.05095623e-01  5.37616154e+00  5.37616154e+00  5.37616154e+00
  3.40922976e+01  2.94919189e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.6809826556068  E_coul = 54.41649405506983
cycle= 5 E= -127.264488600537  delta_E= -4.26e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6809826556068  E_coul = 54.41649405506983
  HOMO = -0.605095617681181  LUMO = 5.37616154673307
  mo_energy =
[-3.28107991e+01 -1.79791132e+00 -6.05095618e-01 -6.05095618e-01
 -6.05095618e-01  5.37616155e+00  5.37616155e+00  5.37616155e+00
  3.40922976e+01  2.94919189e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.68098264933252  E_coul = 54.416494048795556
Extra cycle  E= -127.264488600537  delta_E= 1.42e-14  |g|= 8.86e-10  |ddm|= 2.13e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.10518817873017
E1 = -181.68098264933252  E_coul = 54.416494048795556
init E= -127.264488600537
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605095618029139  LUMO = 5.37616154613548
  mo_energy =
[-3.28107991e+01 -1.79791132e+00 -6.05095618e-01 -6.05095618e-01
 -6.05095618e-01  5.37616155e+00  5.37616155e+00  5.37616155e+00
  3.40922976e+01  2.94919189e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.68098265056503  E_coul = 54.41649405002799
cycle= 1 E= -127.264488600537  delta_E= -7.11e-14  |g|= 1.53e-10  |ddm|= 2.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68098265056503  E_coul = 54.41649405002799
  HOMO = -0.60509561795161  LUMO = 5.37616154625874
  mo_energy =
[-3.28107991e+01 -1.79791132e+00 -6.05095618e-01 -6.05095618e-01
 -6.05095618e-01  5.37616155e+00  5.37616155e+00  5.37616155e+00
  3.40922976e+01  2.94919189e+02  1.82349404e+03  6.61514822e+03]
E1 = -181.68098265035673  E_coul = 54.41649404981973
Extra cycle  E= -127.264488600537  delta_E= 4.26e-14  |g|= 2.42e-11  |ddm|= 3.27e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94805833e+03 9.50686975e-01 1.29618184e+03 2.07028294e+02
 4.56814439e+01 1.21692670e+01 5.32631633e+00 8.98521836e-01]
grad_E = [-1.26004245e-05  2.88308606e-06  4.26553648e-05  7.43830183e-06
  8.04597100e-06 -1.10448150e-05 -5.37715974e-06  3.59590049e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05946175        1
[INPUT] 0    0    [1    /1   ]  0.950687394309       1
[INPUT] 0    0    [1    /1   ]  1296.17529965        1
[INPUT] 0    0    [1    /1   ]  207.060184569        1
[INPUT] 0    0    [1    /1   ]  45.6846468896        1
[INPUT] 0    0    [1    /1   ]  12.1697278143        1
[INPUT] 1    0    [1    /1   ]  5.3263558139         1
[INPUT] 1    0    [1    /1   ]  0.89852583587        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0594617519316, 1.0]], [0, [0.9506873943092683, 1.0]], [0, [1296.1752996508185, 1.0]], [0, [207.06018456852908, 1.0]], [0, [45.68464688962789, 1.0]], [0, [12.169727814274864, 1.0]], [1, [5.326355813904988, 1.0]], [1, [0.8985258358704521, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05946175]
bas 1, expnt(s) = [0.95068739]
bas 2, expnt(s) = [1296.17529965]
bas 3, expnt(s) = [207.06018457]
bas 4, expnt(s) = [45.68464689]
bas 5, expnt(s) = [12.16972781]
bas 6, expnt(s) = [5.32635581]
bas 7, expnt(s) = [0.89852584]
CPU time:        72.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805946e+03 7.40826793e+02 9.50687394e-01 2.43244666e+00
 1.29617530e+03 5.45773984e+02 2.07060185e+02 1.37907369e+02
 4.56846469e+01 4.43958861e+01 1.21697278e+01 1.64617375e+01
 5.32635581e+00 2.36059842e+01 8.98525836e-01 2.55209951e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827370691103999
cond(S) = 154.11604565790554
E1 = -181.27762077524676  E_coul = 54.35973806791263
init E= -126.917882707334
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549494030563  LUMO = 5.34551724218039
  mo_energy =
[-3.26689619e+01 -1.83838763e+00 -6.49549494e-01 -6.49549494e-01
 -6.49549494e-01  5.34551724e+00  5.34551724e+00  5.34551724e+00
  3.41799855e+01  2.95121354e+02  1.82380620e+03  6.61549196e+03]
E1 = -181.5971594400329  E_coul = 54.33292162469955
cycle= 1 E= -127.264237815333  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110616
diis-c [-0.01223584  1.        ]
  HOMO = -0.610180778063817  LUMO = 5.36795510431355
  mo_energy =
[-3.28314742e+01 -1.80378690e+00 -6.10180778e-01 -6.10180778e-01
 -6.10180778e-01  5.36795510e+00  5.36795510e+00  5.36795510e+00
  3.40772151e+01  2.94932871e+02  1.82357204e+03  6.61523359e+03]
E1 = -181.69542919308725  E_coul = 54.43094757714211
cycle= 2 E= -127.264481615945  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138147
diis-c [-9.12796288e-05  8.30273646e-02  9.16972635e-01]
  HOMO = -0.604695190807131  LUMO = 5.37683499000429
  mo_energy =
[-3.28093014e+01 -1.79745485e+00 -6.04695191e-01 -6.04695191e-01
 -6.04695191e-01  5.37683499e+00  5.37683499e+00  5.37683499e+00
  3.40961892e+01  2.94958268e+02  1.82360033e+03  6.61526276e+03]
E1 = -181.6799256807119  E_coul = 54.41543710144053
cycle= 3 E= -127.264488579271  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105982
diis-c [-1.50209035e-08 -3.02536147e-03  5.40056718e-02  9.49019690e-01]
  HOMO = -0.605093622627946  LUMO = 5.37620434076073
  mo_energy =
[-3.28107901e+01 -1.79791113e+00 -6.05093623e-01 -6.05093623e-01
 -6.05093623e-01  5.37620434e+00  5.37620434e+00  5.37620434e+00
  3.40949030e+01  2.94956799e+02  1.82359888e+03  6.61526131e+03]
E1 = -181.68102152648763  E_coul = 54.4165329069101
cycle= 4 E= -127.264488619578  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76029e-06
diis-c [-2.79101390e-13  4.03694893e-05 -1.11476179e-03 -1.67378886e-02
  1.01781228e+00]
  HOMO = -0.605093199936478  LUMO = 5.37620503560665
  mo_energy =
[-3.28107883e+01 -1.79791054e+00 -6.05093200e-01 -6.05093200e-01
 -6.05093200e-01  5.37620504e+00  5.37620504e+00  5.37620504e+00
  3.40949049e+01  2.94956802e+02  1.82359888e+03  6.61526132e+03]
E1 = -181.6810204848927  E_coul = 54.41653186531508
cycle= 5 E= -127.264488619578  delta_E= -1.14e-13  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6810204848927  E_coul = 54.41653186531508
  HOMO = -0.605093194847401  LUMO = 5.37620504253017
  mo_energy =
[-3.28107883e+01 -1.79791053e+00 -6.05093195e-01 -6.05093195e-01
 -6.05093195e-01  5.37620504e+00  5.37620504e+00  5.37620504e+00
  3.40949049e+01  2.94956802e+02  1.82359888e+03  6.61526132e+03]
E1 = -181.68102047863798  E_coul = 54.416531859060356
Extra cycle  E= -127.264488619578  delta_E= 1.42e-14  |g|= 8.84e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94805946e+03 9.50687394e-01 1.29617530e+03 2.07060185e+02
 4.56846469e+01 1.21697278e+01 5.32635581e+00 8.98525836e-01]
E = -127.26448861957762
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05946175        1
[INPUT] 0    0    [1    /1   ]  0.950687394309       1
[INPUT] 0    0    [1    /1   ]  1296.17529965        1
[INPUT] 0    0    [1    /1   ]  207.060184569        1
[INPUT] 0    0    [1    /1   ]  45.6846468896        1
[INPUT] 0    0    [1    /1   ]  12.1697278143        1
[INPUT] 1    0    [1    /1   ]  5.3263558139         1
[INPUT] 1    0    [1    /1   ]  0.89852583587        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0594617519316, 1.0]], [0, [0.9506873943092683, 1.0]], [0, [1296.1752996508185, 1.0]], [0, [207.06018456852908, 1.0]], [0, [45.68464688962789, 1.0]], [0, [12.169727814274864, 1.0]], [1, [5.326355813904988, 1.0]], [1, [0.8985258358704521, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05946175]
bas 1, expnt(s) = [0.95068739]
bas 2, expnt(s) = [1296.17529965]
bas 3, expnt(s) = [207.06018457]
bas 4, expnt(s) = [45.68464689]
bas 5, expnt(s) = [12.16972781]
bas 6, expnt(s) = [5.32635581]
bas 7, expnt(s) = [0.89852584]
CPU time:        72.81
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805946e+03 7.40826793e+02 9.50687394e-01 2.43244666e+00
 1.29617530e+03 5.45773984e+02 2.07060185e+02 1.37907369e+02
 4.56846469e+01 4.43958861e+01 1.21697278e+01 1.64617375e+01
 5.32635581e+00 2.36059842e+01 8.98525836e-01 2.55209951e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827370691103999
cond(S) = 154.11604565790554
E1 = -181.27762077524676  E_coul = 54.35973806791263
init E= -126.917882707334
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549494030563  LUMO = 5.34551724218039
  mo_energy =
[-3.26689619e+01 -1.83838763e+00 -6.49549494e-01 -6.49549494e-01
 -6.49549494e-01  5.34551724e+00  5.34551724e+00  5.34551724e+00
  3.41799855e+01  2.95121354e+02  1.82380620e+03  6.61549196e+03]
E1 = -181.5971594400329  E_coul = 54.33292162469955
cycle= 1 E= -127.264237815333  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110616
diis-c [-0.01223584  1.        ]
  HOMO = -0.610180778063817  LUMO = 5.36795510431355
  mo_energy =
[-3.28314742e+01 -1.80378690e+00 -6.10180778e-01 -6.10180778e-01
 -6.10180778e-01  5.36795510e+00  5.36795510e+00  5.36795510e+00
  3.40772151e+01  2.94932871e+02  1.82357204e+03  6.61523359e+03]
E1 = -181.69542919308725  E_coul = 54.43094757714211
cycle= 2 E= -127.264481615945  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138147
diis-c [-9.12796288e-05  8.30273646e-02  9.16972635e-01]
  HOMO = -0.604695190807131  LUMO = 5.37683499000429
  mo_energy =
[-3.28093014e+01 -1.79745485e+00 -6.04695191e-01 -6.04695191e-01
 -6.04695191e-01  5.37683499e+00  5.37683499e+00  5.37683499e+00
  3.40961892e+01  2.94958268e+02  1.82360033e+03  6.61526276e+03]
E1 = -181.6799256807119  E_coul = 54.41543710144053
cycle= 3 E= -127.264488579271  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105982
diis-c [-1.50209035e-08 -3.02536147e-03  5.40056718e-02  9.49019690e-01]
  HOMO = -0.605093622627946  LUMO = 5.37620434076073
  mo_energy =
[-3.28107901e+01 -1.79791113e+00 -6.05093623e-01 -6.05093623e-01
 -6.05093623e-01  5.37620434e+00  5.37620434e+00  5.37620434e+00
  3.40949030e+01  2.94956799e+02  1.82359888e+03  6.61526131e+03]
E1 = -181.68102152648763  E_coul = 54.4165329069101
cycle= 4 E= -127.264488619578  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76029e-06
diis-c [-2.79101390e-13  4.03694893e-05 -1.11476179e-03 -1.67378886e-02
  1.01781228e+00]
  HOMO = -0.605093199936478  LUMO = 5.37620503560665
  mo_energy =
[-3.28107883e+01 -1.79791054e+00 -6.05093200e-01 -6.05093200e-01
 -6.05093200e-01  5.37620504e+00  5.37620504e+00  5.37620504e+00
  3.40949049e+01  2.94956802e+02  1.82359888e+03  6.61526132e+03]
E1 = -181.6810204848927  E_coul = 54.41653186531508
cycle= 5 E= -127.264488619578  delta_E= -1.14e-13  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6810204848927  E_coul = 54.41653186531508
  HOMO = -0.605093194847401  LUMO = 5.37620504253017
  mo_energy =
[-3.28107883e+01 -1.79791053e+00 -6.05093195e-01 -6.05093195e-01
 -6.05093195e-01  5.37620504e+00  5.37620504e+00  5.37620504e+00
  3.40949049e+01  2.94956802e+02  1.82359888e+03  6.61526132e+03]
E1 = -181.68102047863798  E_coul = 54.416531859060356
Extra cycle  E= -127.264488619578  delta_E= 1.42e-14  |g|= 8.84e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.11604565790554
E1 = -181.68102047863798  E_coul = 54.416531859060356
init E= -127.264488619578
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605093195194174  LUMO = 5.37620504193452
  mo_energy =
[-3.28107883e+01 -1.79791053e+00 -6.05093195e-01 -6.05093195e-01
 -6.05093195e-01  5.37620504e+00  5.37620504e+00  5.37620504e+00
  3.40949049e+01  2.94956802e+02  1.82359888e+03  6.61526132e+03]
E1 = -181.68102047986685  E_coul = 54.41653186028921
cycle= 1 E= -127.264488619578  delta_E= -1.42e-14  |g|= 1.52e-10  |ddm|= 2.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68102047986685  E_coul = 54.41653186028921
  HOMO = -0.605093195116867  LUMO = 5.37620504205743
  mo_energy =
[-3.28107883e+01 -1.79791053e+00 -6.05093195e-01 -6.05093195e-01
 -6.05093195e-01  5.37620504e+00  5.37620504e+00  5.37620504e+00
  3.40949049e+01  2.94956802e+02  1.82359888e+03  6.61526132e+03]
E1 = -181.68102047965922  E_coul = 54.41653186008156
Extra cycle  E= -127.264488619578  delta_E= -2.84e-14  |g|= 2.44e-11  |ddm|= 3.26e-11
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94805946e+03 9.50687394e-01 1.29617530e+03 2.07060185e+02
 4.56846469e+01 1.21697278e+01 5.32635581e+00 8.98525836e-01]
grad_E = [-1.26084834e-05 -4.02305560e-07  4.26105925e-05  8.92845590e-06
  1.77525748e-06 -2.51365790e-08 -6.25211339e-07  1.88328713e-07]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05954589        1
[INPUT] 0    0    [1    /1   ]  0.950687385625       1
[INPUT] 0    0    [1    /1   ]  1296.17484508        1
[INPUT] 0    0    [1    /1   ]  207.062186459        1
[INPUT] 0    0    [1    /1   ]  45.6847337126        1
[INPUT] 0    0    [1    /1   ]  12.1697335757        1
[INPUT] 1    0    [1    /1   ]  5.32636396488        1
[INPUT] 1    0    [1    /1   ]  0.898526713559       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0595458868345, 1.0]], [0, [0.9506873856252199, 1.0]], [0, [1296.1748450844025, 1.0]], [0, [207.0621864585167, 1.0]], [0, [45.68473371255278, 1.0]], [0, [12.169733575706868, 1.0]], [1, [5.326363964880723, 1.0]], [1, [0.8985267135587913, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05954589]
bas 1, expnt(s) = [0.95068739]
bas 2, expnt(s) = [1296.17484508]
bas 3, expnt(s) = [207.06218646]
bas 4, expnt(s) = [45.68473371]
bas 5, expnt(s) = [12.16973358]
bas 6, expnt(s) = [5.32636396]
bas 7, expnt(s) = [0.89852671]
CPU time:        75.90
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805955e+03 7.40826817e+02 9.50687386e-01 2.43244664e+00
 1.29617485e+03 5.45773841e+02 2.07062186e+02 1.37908369e+02
 4.56847337e+01 4.43959494e+01 1.21697336e+01 1.64617434e+01
 5.32636396e+00 2.36060293e+01 8.98526714e-01 2.55210263e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827370331341093
cond(S) = 154.1166000291373
E1 = -181.27762180064224  E_coul = 54.35973897606962
init E= -126.917882824573
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549523468559  LUMO = 5.34552563964847
  mo_energy =
[-3.26689613e+01 -1.83838769e+00 -6.49549523e-01 -6.49549523e-01
 -6.49549523e-01  5.34552564e+00  5.34552564e+00  5.34552564e+00
  3.41800353e+01  2.95123296e+02  1.82381228e+03  6.61549852e+03]
E1 = -181.59716713346867  E_coul = 54.332929311154544
cycle= 1 E= -127.264237822314  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110615
diis-c [-0.01223559  1.        ]
  HOMO = -0.61018027473529  LUMO = 5.36796414425162
  mo_energy =
[-3.28314724e+01 -1.80378638e+00 -6.10180275e-01 -6.10180275e-01
 -6.10180275e-01  5.36796414e+00  5.36796414e+00  5.36796414e+00
  3.40772660e+01  2.94934814e+02  1.82357812e+03  6.61524016e+03]
E1 = -181.69543575355505  E_coul = 54.43095413514506
cycle= 2 E= -127.26448161841  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138145
diis-c [-9.12778917e-05  8.30271790e-02  9.16972821e-01]
  HOMO = -0.604694752791157  LUMO = 5.37684393738033
  mo_energy =
[-3.28092998e+01 -1.79745440e+00 -6.04694753e-01 -6.04694753e-01
 -6.04694753e-01  5.37684394e+00  5.37684394e+00  5.37684394e+00
  3.40962399e+01  2.94960210e+02  1.82360641e+03  6.61526932e+03]
E1 = -181.6799324361671  E_coul = 54.41544385459816
cycle= 3 E= -127.264488581569  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0010598
diis-c [-1.50205106e-08 -3.02542019e-03  5.40053213e-02  9.49020099e-01]
  HOMO = -0.605093180306662  LUMO = 5.37621329430601
  mo_energy =
[-3.28107885e+01 -1.79791068e+00 -6.05093180e-01 -6.05093180e-01
 -6.05093180e-01  5.37621329e+00  5.37621329e+00  5.37621329e+00
  3.40949537e+01  2.94958741e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.68102826833885  E_coul = 54.41653964646468
cycle= 4 E= -127.264488621874  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76023e-06
diis-c [-2.79102927e-13  4.03704593e-05 -1.11473890e-03 -1.67376064e-02
  1.01781197e+00]
  HOMO = -0.605092757592152  LUMO = 5.3762139891854
  mo_energy =
[-3.28107867e+01 -1.79791009e+00 -6.05092758e-01 -6.05092758e-01
 -6.05092758e-01  5.37621399e+00  5.37621399e+00  5.37621399e+00
  3.40949557e+01  2.94958744e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.68102722668655  E_coul = 54.41653860481235
cycle= 5 E= -127.264488621874  delta_E= -2.84e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68102722668655  E_coul = 54.41653860481235
  HOMO = -0.605092752503739  LUMO = 5.37621399610792
  mo_energy =
[-3.28107867e+01 -1.79791008e+00 -6.05092753e-01 -6.05092753e-01
 -6.05092753e-01  5.37621400e+00  5.37621400e+00  5.37621400e+00
  3.40949557e+01  2.94958744e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.68102722043332  E_coul = 54.41653859855909
Extra cycle  E= -127.264488621874  delta_E= -2.84e-14  |g|= 8.83e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94805955e+03 9.50687386e-01 1.29617485e+03 2.07062186e+02
 4.56847337e+01 1.21697336e+01 5.32636396e+00 8.98526714e-01]
E = -127.26448862187422
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05954589        1
[INPUT] 0    0    [1    /1   ]  0.950687385625       1
[INPUT] 0    0    [1    /1   ]  1296.17484508        1
[INPUT] 0    0    [1    /1   ]  207.062186459        1
[INPUT] 0    0    [1    /1   ]  45.6847337126        1
[INPUT] 0    0    [1    /1   ]  12.1697335757        1
[INPUT] 1    0    [1    /1   ]  5.32636396488        1
[INPUT] 1    0    [1    /1   ]  0.898526713559       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0595458868345, 1.0]], [0, [0.9506873856252199, 1.0]], [0, [1296.1748450844025, 1.0]], [0, [207.0621864585167, 1.0]], [0, [45.68473371255278, 1.0]], [0, [12.169733575706868, 1.0]], [1, [5.326363964880723, 1.0]], [1, [0.8985267135587913, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05954589]
bas 1, expnt(s) = [0.95068739]
bas 2, expnt(s) = [1296.17484508]
bas 3, expnt(s) = [207.06218646]
bas 4, expnt(s) = [45.68473371]
bas 5, expnt(s) = [12.16973358]
bas 6, expnt(s) = [5.32636396]
bas 7, expnt(s) = [0.89852671]
CPU time:        76.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805955e+03 7.40826817e+02 9.50687386e-01 2.43244664e+00
 1.29617485e+03 5.45773841e+02 2.07062186e+02 1.37908369e+02
 4.56847337e+01 4.43959494e+01 1.21697336e+01 1.64617434e+01
 5.32636396e+00 2.36060293e+01 8.98526714e-01 2.55210263e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827370331341093
cond(S) = 154.1166000291373
E1 = -181.27762180064224  E_coul = 54.35973897606962
init E= -126.917882824573
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549523468559  LUMO = 5.34552563964847
  mo_energy =
[-3.26689613e+01 -1.83838769e+00 -6.49549523e-01 -6.49549523e-01
 -6.49549523e-01  5.34552564e+00  5.34552564e+00  5.34552564e+00
  3.41800353e+01  2.95123296e+02  1.82381228e+03  6.61549852e+03]
E1 = -181.59716713346867  E_coul = 54.332929311154544
cycle= 1 E= -127.264237822314  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110615
diis-c [-0.01223559  1.        ]
  HOMO = -0.61018027473529  LUMO = 5.36796414425162
  mo_energy =
[-3.28314724e+01 -1.80378638e+00 -6.10180275e-01 -6.10180275e-01
 -6.10180275e-01  5.36796414e+00  5.36796414e+00  5.36796414e+00
  3.40772660e+01  2.94934814e+02  1.82357812e+03  6.61524016e+03]
E1 = -181.69543575355505  E_coul = 54.43095413514506
cycle= 2 E= -127.26448161841  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138145
diis-c [-9.12778917e-05  8.30271790e-02  9.16972821e-01]
  HOMO = -0.604694752791157  LUMO = 5.37684393738033
  mo_energy =
[-3.28092998e+01 -1.79745440e+00 -6.04694753e-01 -6.04694753e-01
 -6.04694753e-01  5.37684394e+00  5.37684394e+00  5.37684394e+00
  3.40962399e+01  2.94960210e+02  1.82360641e+03  6.61526932e+03]
E1 = -181.6799324361671  E_coul = 54.41544385459816
cycle= 3 E= -127.264488581569  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0010598
diis-c [-1.50205106e-08 -3.02542019e-03  5.40053213e-02  9.49020099e-01]
  HOMO = -0.605093180306662  LUMO = 5.37621329430601
  mo_energy =
[-3.28107885e+01 -1.79791068e+00 -6.05093180e-01 -6.05093180e-01
 -6.05093180e-01  5.37621329e+00  5.37621329e+00  5.37621329e+00
  3.40949537e+01  2.94958741e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.68102826833885  E_coul = 54.41653964646468
cycle= 4 E= -127.264488621874  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76023e-06
diis-c [-2.79102927e-13  4.03704593e-05 -1.11473890e-03 -1.67376064e-02
  1.01781197e+00]
  HOMO = -0.605092757592152  LUMO = 5.3762139891854
  mo_energy =
[-3.28107867e+01 -1.79791009e+00 -6.05092758e-01 -6.05092758e-01
 -6.05092758e-01  5.37621399e+00  5.37621399e+00  5.37621399e+00
  3.40949557e+01  2.94958744e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.68102722668655  E_coul = 54.41653860481235
cycle= 5 E= -127.264488621874  delta_E= -2.84e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68102722668655  E_coul = 54.41653860481235
  HOMO = -0.605092752503739  LUMO = 5.37621399610792
  mo_energy =
[-3.28107867e+01 -1.79791008e+00 -6.05092753e-01 -6.05092753e-01
 -6.05092753e-01  5.37621400e+00  5.37621400e+00  5.37621400e+00
  3.40949557e+01  2.94958744e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.68102722043332  E_coul = 54.41653859855909
Extra cycle  E= -127.264488621874  delta_E= -2.84e-14  |g|= 8.83e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.1166000291373
E1 = -181.68102722043332  E_coul = 54.41653859855909
init E= -127.264488621874
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605092752850422  LUMO = 5.37621399551241
  mo_energy =
[-3.28107867e+01 -1.79791008e+00 -6.05092753e-01 -6.05092753e-01
 -6.05092753e-01  5.37621400e+00  5.37621400e+00  5.37621400e+00
  3.40949557e+01  2.94958744e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.68102722166213  E_coul = 54.41653859978785
cycle= 1 E= -127.264488621874  delta_E= -5.68e-14  |g|= 1.52e-10  |ddm|= 2.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68102722166213  E_coul = 54.41653859978785
  HOMO = -0.60509275277312  LUMO = 5.3762139956353
  mo_energy =
[-3.28107867e+01 -1.79791008e+00 -6.05092753e-01 -6.05092753e-01
 -6.05092753e-01  5.37621400e+00  5.37621400e+00  5.37621400e+00
  3.40949557e+01  2.94958744e+02  1.82360496e+03  6.61526788e+03]
E1 = -181.6810272214545  E_coul = 54.4165385995803
Extra cycle  E= -127.264488621874  delta_E= 5.68e-14  |g|= 2.43e-11  |ddm|= 3.26e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94805955e+03 9.50687386e-01 1.29617485e+03 2.07062186e+02
 4.56847337e+01 1.21697336e+01 5.32636396e+00 8.98526714e-01]
grad_E = [-1.26090498e-05 -2.15159368e-07  4.26073615e-05  9.06129777e-06
  1.10713391e-06  8.55284416e-07  2.65706111e-07 -1.95915064e-07]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05976224        1
[INPUT] 0    0    [1    /1   ]  0.950687335424       1
[INPUT] 0    0    [1    /1   ]  1296.17381324        1
[INPUT] 0    0    [1    /1   ]  207.065678307        1
[INPUT] 0    0    [1    /1   ]  45.6848480883        1
[INPUT] 0    0    [1    /1   ]  12.169739863         1
[INPUT] 1    0    [1    /1   ]  5.32638156506        1
[INPUT] 1    0    [1    /1   ]  0.89852860616        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.059762240817, 1.0]], [0, [0.950687335423563, 1.0]], [0, [1296.1738132404262, 1.0]], [0, [207.06567830655322, 1.0]], [0, [45.684848088305436, 1.0]], [0, [12.169739863025493, 1.0]], [1, [5.326381565056219, 1.0]], [1, [0.8985286061602352, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05976224]
bas 1, expnt(s) = [0.95068734]
bas 2, expnt(s) = [1296.17381324]
bas 3, expnt(s) = [207.06567831]
bas 4, expnt(s) = [45.68484809]
bas 5, expnt(s) = [12.16973986]
bas 6, expnt(s) = [5.32638157]
bas 7, expnt(s) = [0.89852861]
CPU time:        79.41
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805976e+03 7.40826879e+02 9.50687335e-01 2.43244655e+00
 1.29617381e+03 5.45773515e+02 2.07065678e+02 1.37910113e+02
 4.56848481e+01 4.43960327e+01 1.21697399e+01 1.64617498e+01
 5.32638157e+00 2.36061268e+01 8.98528606e-01 2.55210934e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82736956347376
cond(S) = 154.11739630978354
E1 = -181.27762419514414  E_coul = 54.3597410731676
init E= -126.917883121977
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549578420153  LUMO = 5.34554377677078
  mo_energy =
[-3.26689600e+01 -1.83838781e+00 -6.49549578e-01 -6.49549578e-01
 -6.49549578e-01  5.34554378e+00  5.34554378e+00  5.34554378e+00
  3.41800944e+01  2.95126560e+02  1.82382262e+03  6.61550942e+03]
E1 = -181.59718357867948  E_coul = 54.33294573216974
cycle= 1 E= -127.26423784651  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110612
diis-c [-0.01223512  1.        ]
  HOMO = -0.610179204931066  LUMO = 5.36798362649347
  mo_energy =
[-3.28314685e+01 -1.80378526e+00 -6.10179205e-01 -6.10179205e-01
 -6.10179205e-01  5.36798363e+00  5.36798363e+00  5.36798363e+00
  3.40773275e+01  2.94938081e+02  1.82358846e+03  6.61525105e+03]
E1 = -181.69544985560222  E_coul = 54.43096822231308
cycle= 2 E= -127.264481633289  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138142
diis-c [-9.12746624e-05  8.30265547e-02  9.16973445e-01]
  HOMO = -0.60469381684324  LUMO = 5.37686323138918
  mo_energy =
[-3.28092965e+01 -1.79745344e+00 -6.04693817e-01 -6.04693817e-01
 -6.04693817e-01  5.37686323e+00  5.37686323e+00  5.37686323e+00
  3.40963010e+01  2.94963476e+02  1.82361675e+03  6.61528022e+03]
E1 = -181.6799469368756  E_coul = 54.41545834077308
cycle= 3 E= -127.264488596103  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105979
diis-c [-1.50197815e-08 -3.02553311e-03  5.40048989e-02  9.49020634e-01]
  HOMO = -0.60509223690875  LUMO = 5.3762325986478
  mo_energy =
[-3.28107851e+01 -1.79790971e+00 -6.05092237e-01 -6.05092237e-01
 -6.05092237e-01  5.37623260e+00  5.37623260e+00  5.37623260e+00
  3.40950148e+01  2.94962007e+02  1.82361530e+03  6.61527877e+03]
E1 = -181.68104274504614  E_coul = 54.41655410863996
cycle= 4 E= -127.264488636406  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76012e-06
diis-c [-2.79101866e-13  4.03722443e-05 -1.11469795e-03 -1.67370391e-02
  1.01781136e+00]
  HOMO = -0.605091814152486  LUMO = 5.37623329358817
  mo_energy =
[-3.28107833e+01 -1.79790912e+00 -6.05091814e-01 -6.05091814e-01
 -6.05091814e-01  5.37623329e+00  5.37623329e+00  5.37623329e+00
  3.40950167e+01  2.94962010e+02  1.82361530e+03  6.61527878e+03]
E1 = -181.68104170328954  E_coul = 54.416553066883395
cycle= 5 E= -127.264488636406  delta_E= 4.26e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68104170328954  E_coul = 54.416553066883395
  HOMO = -0.605091809065347  LUMO = 5.37623330050877
  mo_energy =
[-3.28107832e+01 -1.79790911e+00 -6.05091809e-01 -6.05091809e-01
 -6.05091809e-01  5.37623330e+00  5.37623330e+00  5.37623330e+00
  3.40950168e+01  2.94962010e+02  1.82361530e+03  6.61527878e+03]
E1 = -181.6810416970397  E_coul = 54.416553060633504
Extra cycle  E= -127.264488636406  delta_E= -4.26e-14  |g|= 8.83e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94805976e+03 9.50687335e-01 1.29617381e+03 2.07065678e+02
 4.56848481e+01 1.21697399e+01 5.32638157e+00 8.98528606e-01]
E = -127.26448863640618
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "6s2p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:23 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.05976224        1
[INPUT] 0    0    [1    /1   ]  0.950687335424       1
[INPUT] 0    0    [1    /1   ]  1296.17381324        1
[INPUT] 0    0    [1    /1   ]  207.065678307        1
[INPUT] 0    0    [1    /1   ]  45.6848480883        1
[INPUT] 0    0    [1    /1   ]  12.169739863         1
[INPUT] 1    0    [1    /1   ]  5.32638156506        1
[INPUT] 1    0    [1    /1   ]  0.89852860616        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.059762240817, 1.0]], [0, [0.950687335423563, 1.0]], [0, [1296.1738132404262, 1.0]], [0, [207.06567830655322, 1.0]], [0, [45.684848088305436, 1.0]], [0, [12.169739863025493, 1.0]], [1, [5.326381565056219, 1.0]], [1, [0.8985286061602352, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.05976224]
bas 1, expnt(s) = [0.95068734]
bas 2, expnt(s) = [1296.17381324]
bas 3, expnt(s) = [207.06567831]
bas 4, expnt(s) = [45.68484809]
bas 5, expnt(s) = [12.16973986]
bas 6, expnt(s) = [5.32638157]
bas 7, expnt(s) = [0.89852861]
CPU time:        79.89
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94805976e+03 7.40826879e+02 9.50687335e-01 2.43244655e+00
 1.29617381e+03 5.45773515e+02 2.07065678e+02 1.37910113e+02
 4.56848481e+01 4.43960327e+01 1.21697399e+01 1.64617498e+01
 5.32638157e+00 2.36061268e+01 8.98528606e-01 2.55210934e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82736956347376
cond(S) = 154.11739630978354
E1 = -181.27762419514414  E_coul = 54.3597410731676
init E= -126.917883121977
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549578420153  LUMO = 5.34554377677078
  mo_energy =
[-3.26689600e+01 -1.83838781e+00 -6.49549578e-01 -6.49549578e-01
 -6.49549578e-01  5.34554378e+00  5.34554378e+00  5.34554378e+00
  3.41800944e+01  2.95126560e+02  1.82382262e+03  6.61550942e+03]
E1 = -181.59718357867948  E_coul = 54.33294573216974
cycle= 1 E= -127.26423784651  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110612
diis-c [-0.01223512  1.        ]
  HOMO = -0.610179204931066  LUMO = 5.36798362649347
  mo_energy =
[-3.28314685e+01 -1.80378526e+00 -6.10179205e-01 -6.10179205e-01
 -6.10179205e-01  5.36798363e+00  5.36798363e+00  5.36798363e+00
  3.40773275e+01  2.94938081e+02  1.82358846e+03  6.61525105e+03]
E1 = -181.69544985560222  E_coul = 54.43096822231308
cycle= 2 E= -127.264481633289  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138142
diis-c [-9.12746624e-05  8.30265547e-02  9.16973445e-01]
  HOMO = -0.60469381684324  LUMO = 5.37686323138918
  mo_energy =
[-3.28092965e+01 -1.79745344e+00 -6.04693817e-01 -6.04693817e-01
 -6.04693817e-01  5.37686323e+00  5.37686323e+00  5.37686323e+00
  3.40963010e+01  2.94963476e+02  1.82361675e+03  6.61528022e+03]
E1 = -181.6799469368756  E_coul = 54.41545834077308
cycle= 3 E= -127.264488596103  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105979
diis-c [-1.50197815e-08 -3.02553311e-03  5.40048989e-02  9.49020634e-01]
  HOMO = -0.60509223690875  LUMO = 5.3762325986478
  mo_energy =
[-3.28107851e+01 -1.79790971e+00 -6.05092237e-01 -6.05092237e-01
 -6.05092237e-01  5.37623260e+00  5.37623260e+00  5.37623260e+00
  3.40950148e+01  2.94962007e+02  1.82361530e+03  6.61527877e+03]
E1 = -181.68104274504614  E_coul = 54.41655410863996
cycle= 4 E= -127.264488636406  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.76012e-06
diis-c [-2.79101866e-13  4.03722443e-05 -1.11469795e-03 -1.67370391e-02
  1.01781136e+00]
  HOMO = -0.605091814152486  LUMO = 5.37623329358817
  mo_energy =
[-3.28107833e+01 -1.79790912e+00 -6.05091814e-01 -6.05091814e-01
 -6.05091814e-01  5.37623329e+00  5.37623329e+00  5.37623329e+00
  3.40950167e+01  2.94962010e+02  1.82361530e+03  6.61527878e+03]
E1 = -181.68104170328954  E_coul = 54.416553066883395
cycle= 5 E= -127.264488636406  delta_E= 4.26e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68104170328954  E_coul = 54.416553066883395
  HOMO = -0.605091809065347  LUMO = 5.37623330050877
  mo_energy =
[-3.28107832e+01 -1.79790911e+00 -6.05091809e-01 -6.05091809e-01
 -6.05091809e-01  5.37623330e+00  5.37623330e+00  5.37623330e+00
  3.40950168e+01  2.94962010e+02  1.82361530e+03  6.61527878e+03]
E1 = -181.6810416970397  E_coul = 54.416553060633504
Extra cycle  E= -127.264488636406  delta_E= -4.26e-14  |g|= 8.83e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.11739630978354
E1 = -181.6810416970397  E_coul = 54.416553060633504
init E= -127.264488636406
    CPU time for initialize scf      0.06 sec, wall time      0.06 sec
  HOMO = -0.605091809411817  LUMO = 5.37623329991359
  mo_energy =
[-3.28107833e+01 -1.79790911e+00 -6.05091809e-01 -6.05091809e-01
 -6.05091809e-01  5.37623330e+00  5.37623330e+00  5.37623330e+00
  3.40950168e+01  2.94962010e+02  1.82361530e+03  6.61527878e+03]
E1 = -181.6810416982678  E_coul = 54.41655306186159
cycle= 1 E= -127.264488636406  delta_E= -1.42e-14  |g|= 1.52e-10  |ddm|= 2.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6810416982678  E_coul = 54.41655306186159
  HOMO = -0.605091809334562  LUMO = 5.37623330003642
  mo_energy =
[-3.28107833e+01 -1.79790911e+00 -6.05091809e-01 -6.05091809e-01
 -6.05091809e-01  5.37623330e+00  5.37623330e+00  5.37623330e+00
  3.40950168e+01  2.94962010e+02  1.82361530e+03  6.61527878e+03]
E1 = -181.68104169806043  E_coul = 54.41655306165424
Extra cycle  E= -127.264488636406  delta_E= 1.42e-14  |g|= 2.4e-11  |ddm|= 3.26e-11
    CPU time for scf_cycle      0.12 sec, wall time      0.12 sec
exp = [1.94805976e+03 9.50687335e-01 1.29617381e+03 2.07065678e+02
 4.56848481e+01 1.21697399e+01 5.32638157e+00 8.98528606e-01]
grad_E = [-1.26100757e-05  1.87943169e-07  4.26015653e-05  9.30958065e-06
 -2.07231089e-07  2.71525735e-06  2.19202275e-06 -1.07251034e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.0605084         1
[INPUT] 0    0    [1    /1   ]  0.950687224882       1
[INPUT] 0    0    [1    /1   ]  1296.17071238        1
[INPUT] 0    0    [1    /1   ]  207.072169262        1
[INPUT] 0    0    [1    /1   ]  45.6850404378        1
[INPUT] 0    0    [1    /1   ]  12.1697478863        1
[INPUT] 1    0    [1    /1   ]  5.32641598792        1
[INPUT] 1    0    [1    /1   ]  0.898532308039       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.060508399859, 1.0]], [0, [0.9506872248824704, 1.0]], [0, [1296.1707123838898, 1.0]], [0, [207.07216926174937, 1.0]], [0, [45.685040437777936, 1.0]], [0, [12.169747886276767, 1.0]], [1, [5.326415987921457, 1.0]], [1, [0.8985323080387915, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.0605084]
bas 1, expnt(s) = [0.95068722]
bas 2, expnt(s) = [1296.17071238]
bas 3, expnt(s) = [207.07216926]
bas 4, expnt(s) = [45.68504044]
bas 5, expnt(s) = [12.16974789]
bas 6, expnt(s) = [5.32641599]
bas 7, expnt(s) = [0.89853231]
CPU time:        83.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94806051e+03 7.40827092e+02 9.50687225e-01 2.43244634e+00
 1.29617071e+03 5.45772536e+02 2.07072169e+02 1.37913355e+02
 4.56850404e+01 4.43961729e+01 1.21697479e+01 1.64617579e+01
 5.32641599e+00 2.36063175e+01 8.98532308e-01 2.55212249e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827368065173253
cond(S) = 154.11815102930765
E1 = -181.2776289975859  E_coul = 54.35974521679711
init E= -126.917883780789
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64954968391756  LUMO = 5.34557925146149
  mo_energy =
[-3.26689574e+01 -1.83838805e+00 -6.49549684e-01 -6.49549684e-01
 -6.49549684e-01  5.34557925e+00  5.34557925e+00  5.34557925e+00
  3.41801849e+01  2.95132550e+02  1.82384115e+03  6.61552754e+03]
E1 = -181.59721563106496  E_coul = 54.3329776862822
cycle= 1 E= -127.264237944783  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110608
diis-c [-0.01223422  1.        ]
  HOMO = -0.610177123808063  LUMO = 5.36802170748264
  mo_energy =
[-3.28314610e+01 -1.80378306e+00 -6.10177124e-01 -6.10177124e-01
 -6.10177124e-01  5.36802171e+00  5.36802171e+00  5.36802171e+00
  3.40774227e+01  2.94944075e+02  1.82360699e+03  6.61526918e+03]
E1 = -181.6954773911649  E_coul = 54.430995677557156
cycle= 2 E= -127.264481713608  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138136
diis-c [-9.12684895e-05  8.30253182e-02  9.16974682e-01]
  HOMO = -0.604691993623471  LUMO = 5.37690095045562
  mo_energy =
[-3.28092899e+01 -1.79745155e+00 -6.04691994e-01 -6.04691994e-01
 -6.04691994e-01  5.37690095e+00  5.37690095e+00  5.37690095e+00
  3.40963953e+01  2.94969470e+02  1.82363528e+03  6.61529834e+03]
E1 = -181.67997524032222  E_coul = 54.41548656456662
cycle= 3 E= -127.264488675756  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105975
diis-c [-1.50184041e-08 -3.02574873e-03  5.40041303e-02  9.49021618e-01]
  HOMO = -0.605090399517337  LUMO = 5.37627033727439
  mo_energy =
[-3.28107784e+01 -1.79790781e+00 -6.05090400e-01 -6.05090400e-01
 -6.05090400e-01  5.37627034e+00  5.37627034e+00  5.37627034e+00
  3.40951092e+01  2.94968001e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.68107100278766  E_coul = 54.416582286731696
cycle= 4 E= -127.264488716056  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7599e-06
diis-c [-2.79101929e-13  4.03756471e-05 -1.11462102e-03 -1.67359614e-02
  1.01781021e+00]
  HOMO = -0.605089976681281  LUMO = 5.37627103233152
  mo_energy =
[-3.28107766e+01 -1.79790721e+00 -6.05089977e-01 -6.05089977e-01
 -6.05089977e-01  5.37627103e+00  5.37627103e+00  5.37627103e+00
  3.40951112e+01  2.94968004e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.6810699608319  E_coul = 54.416581244775855
cycle= 5 E= -127.264488716056  delta_E= -8.53e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6810699608319  E_coul = 54.416581244775855
  HOMO = -0.605089971596533  LUMO = 5.3762710392485
  mo_energy =
[-3.28107766e+01 -1.79790720e+00 -6.05089972e-01 -6.05089972e-01
 -6.05089972e-01  5.37627104e+00  5.37627104e+00  5.37627104e+00
  3.40951112e+01  2.94968004e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.6810699545884  E_coul = 54.41658123853228
Extra cycle  E= -127.264488716056  delta_E= -7.11e-14  |g|= 8.83e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94806051e+03 9.50687225e-01 1.29617071e+03 2.07072169e+02
 4.56850404e+01 1.21697479e+01 5.32641599e+00 8.98532308e-01]
E = -127.26448871605612
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.0605084         1
[INPUT] 0    0    [1    /1   ]  0.950687224882       1
[INPUT] 0    0    [1    /1   ]  1296.17071238        1
[INPUT] 0    0    [1    /1   ]  207.072169262        1
[INPUT] 0    0    [1    /1   ]  45.6850404378        1
[INPUT] 0    0    [1    /1   ]  12.1697478863        1
[INPUT] 1    0    [1    /1   ]  5.32641598792        1
[INPUT] 1    0    [1    /1   ]  0.898532308039       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.060508399859, 1.0]], [0, [0.9506872248824704, 1.0]], [0, [1296.1707123838898, 1.0]], [0, [207.07216926174937, 1.0]], [0, [45.685040437777936, 1.0]], [0, [12.169747886276767, 1.0]], [1, [5.326415987921457, 1.0]], [1, [0.8985323080387915, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.0605084]
bas 1, expnt(s) = [0.95068722]
bas 2, expnt(s) = [1296.17071238]
bas 3, expnt(s) = [207.07216926]
bas 4, expnt(s) = [45.68504044]
bas 5, expnt(s) = [12.16974789]
bas 6, expnt(s) = [5.32641599]
bas 7, expnt(s) = [0.89853231]
CPU time:        83.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94806051e+03 7.40827092e+02 9.50687225e-01 2.43244634e+00
 1.29617071e+03 5.45772536e+02 2.07072169e+02 1.37913355e+02
 4.56850404e+01 4.43961729e+01 1.21697479e+01 1.64617579e+01
 5.32641599e+00 2.36063175e+01 8.98532308e-01 2.55212249e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827368065173253
cond(S) = 154.11815102930765
E1 = -181.2776289975859  E_coul = 54.35974521679711
init E= -126.917883780789
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64954968391756  LUMO = 5.34557925146149
  mo_energy =
[-3.26689574e+01 -1.83838805e+00 -6.49549684e-01 -6.49549684e-01
 -6.49549684e-01  5.34557925e+00  5.34557925e+00  5.34557925e+00
  3.41801849e+01  2.95132550e+02  1.82384115e+03  6.61552754e+03]
E1 = -181.59721563106496  E_coul = 54.3329776862822
cycle= 1 E= -127.264237944783  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110608
diis-c [-0.01223422  1.        ]
  HOMO = -0.610177123808063  LUMO = 5.36802170748264
  mo_energy =
[-3.28314610e+01 -1.80378306e+00 -6.10177124e-01 -6.10177124e-01
 -6.10177124e-01  5.36802171e+00  5.36802171e+00  5.36802171e+00
  3.40774227e+01  2.94944075e+02  1.82360699e+03  6.61526918e+03]
E1 = -181.6954773911649  E_coul = 54.430995677557156
cycle= 2 E= -127.264481713608  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138136
diis-c [-9.12684895e-05  8.30253182e-02  9.16974682e-01]
  HOMO = -0.604691993623471  LUMO = 5.37690095045562
  mo_energy =
[-3.28092899e+01 -1.79745155e+00 -6.04691994e-01 -6.04691994e-01
 -6.04691994e-01  5.37690095e+00  5.37690095e+00  5.37690095e+00
  3.40963953e+01  2.94969470e+02  1.82363528e+03  6.61529834e+03]
E1 = -181.67997524032222  E_coul = 54.41548656456662
cycle= 3 E= -127.264488675756  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105975
diis-c [-1.50184041e-08 -3.02574873e-03  5.40041303e-02  9.49021618e-01]
  HOMO = -0.605090399517337  LUMO = 5.37627033727439
  mo_energy =
[-3.28107784e+01 -1.79790781e+00 -6.05090400e-01 -6.05090400e-01
 -6.05090400e-01  5.37627034e+00  5.37627034e+00  5.37627034e+00
  3.40951092e+01  2.94968001e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.68107100278766  E_coul = 54.416582286731696
cycle= 4 E= -127.264488716056  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7599e-06
diis-c [-2.79101929e-13  4.03756471e-05 -1.11462102e-03 -1.67359614e-02
  1.01781021e+00]
  HOMO = -0.605089976681281  LUMO = 5.37627103233152
  mo_energy =
[-3.28107766e+01 -1.79790721e+00 -6.05089977e-01 -6.05089977e-01
 -6.05089977e-01  5.37627103e+00  5.37627103e+00  5.37627103e+00
  3.40951112e+01  2.94968004e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.6810699608319  E_coul = 54.416581244775855
cycle= 5 E= -127.264488716056  delta_E= -8.53e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6810699608319  E_coul = 54.416581244775855
  HOMO = -0.605089971596533  LUMO = 5.3762710392485
  mo_energy =
[-3.28107766e+01 -1.79790720e+00 -6.05089972e-01 -6.05089972e-01
 -6.05089972e-01  5.37627104e+00  5.37627104e+00  5.37627104e+00
  3.40951112e+01  2.94968004e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.6810699545884  E_coul = 54.41658123853228
Extra cycle  E= -127.264488716056  delta_E= -7.11e-14  |g|= 8.83e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.11815102930765
E1 = -181.6810699545884  E_coul = 54.41658123853228
init E= -127.264488716056
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605089971942615  LUMO = 5.37627103865394
  mo_energy =
[-3.28107766e+01 -1.79790720e+00 -6.05089972e-01 -6.05089972e-01
 -6.05089972e-01  5.37627104e+00  5.37627104e+00  5.37627104e+00
  3.40951112e+01  2.94968004e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.68106995581525  E_coul = 54.41658123975929
cycle= 1 E= -127.264488716056  delta_E= 1.71e-13  |g|= 1.52e-10  |ddm|= 2.06e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68106995581525  E_coul = 54.41658123975929
  HOMO = -0.605089971865425  LUMO = 5.37627103877667
  mo_energy =
[-3.28107766e+01 -1.79790720e+00 -6.05089972e-01 -6.05089972e-01
 -6.05089972e-01  5.37627104e+00  5.37627104e+00  5.37627104e+00
  3.40951112e+01  2.94968004e+02  1.82363383e+03  6.61529690e+03]
E1 = -181.68106995560822  E_coul = 54.41658123955203
Extra cycle  E= -127.264488716056  delta_E= -2.42e-13  |g|= 2.4e-11  |ddm|= 3.26e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94806051e+03 9.50687225e-01 1.29617071e+03 2.07072169e+02
 4.56850404e+01 1.21697479e+01 5.32641599e+00 8.98532308e-01]
grad_E = [-1.26120671e-05  9.92077563e-07  4.25907417e-05  9.78049801e-06
 -2.71218569e-06  6.24661763e-06  5.95794110e-06 -2.80411840e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.06366118        1
[INPUT] 0    0    [1    /1   ]  0.950686989963       1
[INPUT] 0    0    [1    /1   ]  1296.1588469         1
[INPUT] 0    0    [1    /1   ]  207.084586984        1
[INPUT] 0    0    [1    /1   ]  45.6853797448        1
[INPUT] 0    0    [1    /1   ]  12.1697586196        1
[INPUT] 1    0    [1    /1   ]  5.32648383367        1
[INPUT] 1    0    [1    /1   ]  0.898539604658       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0636611806922, 1.0]], [0, [0.9506869899634363, 1.0]], [0, [1296.1588469030319, 1.0]], [0, [207.08458698391348, 1.0]], [0, [45.685379744818455, 1.0]], [0, [12.169758619629361, 1.0]], [1, [5.326483833667083, 1.0]], [1, [0.8985396046583035, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.06366118]
bas 1, expnt(s) = [0.95068699]
bas 2, expnt(s) = [1296.1588469]
bas 3, expnt(s) = [207.08458698]
bas 4, expnt(s) = [45.68537974]
bas 5, expnt(s) = [12.16975862]
bas 6, expnt(s) = [5.32648383]
bas 7, expnt(s) = [0.8985396]
CPU time:        86.91
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94806366e+03 7.40827991e+02 9.50686990e-01 2.43244589e+00
 1.29615885e+03 5.45768789e+02 2.07084587e+02 1.37919558e+02
 4.56853797e+01 4.43964202e+01 1.21697586e+01 1.64617688e+01
 5.32648383e+00 2.36066934e+01 8.98539605e-01 2.55214839e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827365116579355
cond(S) = 154.11601875154372
E1 = -181.27763887094957  E_coul = 54.359753440786875
init E= -126.917885430163
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549888530455  LUMO = 5.34564917507938
  mo_energy =
[-3.26689524e+01 -1.83838850e+00 -6.49549889e-01 -6.49549889e-01
 -6.49549889e-01  5.34564918e+00  5.34564918e+00  5.34564918e+00
  3.41803313e+01  2.95143881e+02  1.82387342e+03  6.61555180e+03]
E1 = -181.5972789487384  E_coul = 54.33304054865582
cycle= 1 E= -127.264238400083  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1106
diis-c [-0.01223246  1.        ]
  HOMO = -0.61017303205028  LUMO = 5.36809674630308
  mo_energy =
[-3.28314464e+01 -1.80377874e+00 -6.10173032e-01 -6.10173032e-01
 -6.10173032e-01  5.36809675e+00  5.36809675e+00  5.36809675e+00
  3.40775783e+01  2.94955414e+02  1.82363927e+03  6.61529345e+03]
E1 = -181.69553186399648  E_coul = 54.43104973022322
cycle= 2 E= -127.264482133773  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138124
diis-c [-9.12563360e-05  8.30229593e-02  9.16977041e-01]
  HOMO = -0.604688407397941  LUMO = 5.37697528046443
  mo_energy =
[-3.28092771e+01 -1.79744782e+00 -6.04688407e-01 -6.04688407e-01
 -6.04688407e-01  5.37697528e+00  5.37697528e+00  5.37697528e+00
  3.40965493e+01  2.94980807e+02  1.82366755e+03  6.61532261e+03]
E1 = -181.68003121731724  E_coul = 54.415542122698625
cycle= 3 E= -127.264489094619  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105967
diis-c [-1.50157018e-08 -3.02617536e-03  5.40025388e-02  9.49023637e-01]
  HOMO = -0.605086785195319  LUMO = 5.37634470610781
  mo_energy =
[-3.28107655e+01 -1.79790405e+00 -6.05086785e-01 -6.05086785e-01
 -6.05086785e-01  5.37634471e+00  5.37634471e+00  5.37634471e+00
  3.40952633e+01  2.94979339e+02  1.82366610e+03  6.61532116e+03]
E1 = -181.6811268893279  E_coul = 54.416637754415156
cycle= 4 E= -127.264489134913  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75947e-06
diis-c [-2.79104826e-13  4.03824566e-05 -1.11446933e-03 -1.67338577e-02
  1.01780794e+00]
  HOMO = -0.605086362199946  LUMO = 5.37634540139823
  mo_energy =
[-3.28107637e+01 -1.79790345e+00 -6.05086362e-01 -6.05086362e-01
 -6.05086362e-01  5.37634540e+00  5.37634540e+00  5.37634540e+00
  3.40952652e+01  2.94979341e+02  1.82366611e+03  6.61532117e+03]
E1 = -181.6811258469741  E_coul = 54.416636712061326
cycle= 5 E= -127.264489134913  delta_E= -2.84e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6811258469741  E_coul = 54.416636712061326
  HOMO = -0.605086357119976  LUMO = 5.37634540830798
  mo_energy =
[-3.28107637e+01 -1.79790344e+00 -6.05086357e-01 -6.05086357e-01
 -6.05086357e-01  5.37634541e+00  5.37634541e+00  5.37634541e+00
  3.40952653e+01  2.94979341e+02  1.82366611e+03  6.61532117e+03]
E1 = -181.68112584074314  E_coul = 54.416636705830285
Extra cycle  E= -127.264489134913  delta_E= -5.68e-14  |g|= 8.82e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94806366e+03 9.50686990e-01 1.29615885e+03 2.07084587e+02
 4.56853797e+01 1.21697586e+01 5.32648383e+00 8.98539605e-01]
E = -127.26448913491285
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.06366118        1
[INPUT] 0    0    [1    /1   ]  0.950686989963       1
[INPUT] 0    0    [1    /1   ]  1296.1588469         1
[INPUT] 0    0    [1    /1   ]  207.084586984        1
[INPUT] 0    0    [1    /1   ]  45.6853797448        1
[INPUT] 0    0    [1    /1   ]  12.1697586196        1
[INPUT] 1    0    [1    /1   ]  5.32648383367        1
[INPUT] 1    0    [1    /1   ]  0.898539604658       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0636611806922, 1.0]], [0, [0.9506869899634363, 1.0]], [0, [1296.1588469030319, 1.0]], [0, [207.08458698391348, 1.0]], [0, [45.685379744818455, 1.0]], [0, [12.169758619629361, 1.0]], [1, [5.326483833667083, 1.0]], [1, [0.8985396046583035, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.06366118]
bas 1, expnt(s) = [0.95068699]
bas 2, expnt(s) = [1296.1588469]
bas 3, expnt(s) = [207.08458698]
bas 4, expnt(s) = [45.68537974]
bas 5, expnt(s) = [12.16975862]
bas 6, expnt(s) = [5.32648383]
bas 7, expnt(s) = [0.8985396]
CPU time:        87.42
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94806366e+03 7.40827991e+02 9.50686990e-01 2.43244589e+00
 1.29615885e+03 5.45768789e+02 2.07084587e+02 1.37919558e+02
 4.56853797e+01 4.43964202e+01 1.21697586e+01 1.64617688e+01
 5.32648383e+00 2.36066934e+01 8.98539605e-01 2.55214839e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827365116579355
cond(S) = 154.11601875154372
E1 = -181.27763887094957  E_coul = 54.359753440786875
init E= -126.917885430163
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649549888530455  LUMO = 5.34564917507938
  mo_energy =
[-3.26689524e+01 -1.83838850e+00 -6.49549889e-01 -6.49549889e-01
 -6.49549889e-01  5.34564918e+00  5.34564918e+00  5.34564918e+00
  3.41803313e+01  2.95143881e+02  1.82387342e+03  6.61555180e+03]
E1 = -181.5972789487384  E_coul = 54.33304054865582
cycle= 1 E= -127.264238400083  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1106
diis-c [-0.01223246  1.        ]
  HOMO = -0.61017303205028  LUMO = 5.36809674630308
  mo_energy =
[-3.28314464e+01 -1.80377874e+00 -6.10173032e-01 -6.10173032e-01
 -6.10173032e-01  5.36809675e+00  5.36809675e+00  5.36809675e+00
  3.40775783e+01  2.94955414e+02  1.82363927e+03  6.61529345e+03]
E1 = -181.69553186399648  E_coul = 54.43104973022322
cycle= 2 E= -127.264482133773  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138124
diis-c [-9.12563360e-05  8.30229593e-02  9.16977041e-01]
  HOMO = -0.604688407397941  LUMO = 5.37697528046443
  mo_energy =
[-3.28092771e+01 -1.79744782e+00 -6.04688407e-01 -6.04688407e-01
 -6.04688407e-01  5.37697528e+00  5.37697528e+00  5.37697528e+00
  3.40965493e+01  2.94980807e+02  1.82366755e+03  6.61532261e+03]
E1 = -181.68003121731724  E_coul = 54.415542122698625
cycle= 3 E= -127.264489094619  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105967
diis-c [-1.50157018e-08 -3.02617536e-03  5.40025388e-02  9.49023637e-01]
  HOMO = -0.605086785195319  LUMO = 5.37634470610781
  mo_energy =
[-3.28107655e+01 -1.79790405e+00 -6.05086785e-01 -6.05086785e-01
 -6.05086785e-01  5.37634471e+00  5.37634471e+00  5.37634471e+00
  3.40952633e+01  2.94979339e+02  1.82366610e+03  6.61532116e+03]
E1 = -181.6811268893279  E_coul = 54.416637754415156
cycle= 4 E= -127.264489134913  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000172
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75947e-06
diis-c [-2.79104826e-13  4.03824566e-05 -1.11446933e-03 -1.67338577e-02
  1.01780794e+00]
  HOMO = -0.605086362199946  LUMO = 5.37634540139823
  mo_energy =
[-3.28107637e+01 -1.79790345e+00 -6.05086362e-01 -6.05086362e-01
 -6.05086362e-01  5.37634540e+00  5.37634540e+00  5.37634540e+00
  3.40952652e+01  2.94979341e+02  1.82366611e+03  6.61532117e+03]
E1 = -181.6811258469741  E_coul = 54.416636712061326
cycle= 5 E= -127.264489134913  delta_E= -2.84e-14  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6811258469741  E_coul = 54.416636712061326
  HOMO = -0.605086357119976  LUMO = 5.37634540830798
  mo_energy =
[-3.28107637e+01 -1.79790344e+00 -6.05086357e-01 -6.05086357e-01
 -6.05086357e-01  5.37634541e+00  5.37634541e+00  5.37634541e+00
  3.40952653e+01  2.94979341e+02  1.82366611e+03  6.61532117e+03]
E1 = -181.68112584074314  E_coul = 54.416636705830285
Extra cycle  E= -127.264489134913  delta_E= -5.68e-14  |g|= 8.82e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.11601875154372
E1 = -181.68112584074314  E_coul = 54.416636705830285
init E= -127.264489134913
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605086357465292  LUMO = 5.37634540771467
  mo_energy =
[-3.28107637e+01 -1.79790344e+00 -6.05086357e-01 -6.05086357e-01
 -6.05086357e-01  5.37634541e+00  5.37634541e+00  5.37634541e+00
  3.40952653e+01  2.94979341e+02  1.82366611e+03  6.61532117e+03]
E1 = -181.6811258419679  E_coul = 54.416636707055055
cycle= 1 E= -127.264489134913  delta_E=    0  |g|= 1.52e-10  |ddm|= 2.05e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6811258419679  E_coul = 54.416636707055055
  HOMO = -0.60508635738824  LUMO = 5.37634540783717
  mo_energy =
[-3.28107637e+01 -1.79790344e+00 -6.05086357e-01 -6.05086357e-01
 -6.05086357e-01  5.37634541e+00  5.37634541e+00  5.37634541e+00
  3.40952653e+01  2.94979341e+02  1.82366611e+03  6.61532117e+03]
E1 = -181.68112584176097  E_coul = 54.416636706848166
Extra cycle  E= -127.264489134913  delta_E= 4.26e-14  |g|= 2.39e-11  |ddm|= 3.25e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94806366e+03 9.50686990e-01 1.29615885e+03 2.07084587e+02
 4.56853797e+01 1.21697586e+01 5.32648383e+00 8.98539605e-01]
grad_E = [-1.26162627e-05  2.57351147e-06  4.25700659e-05  1.07024859e-05
 -7.62178914e-06  1.31765524e-05  1.33792207e-05 -6.22904932e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.07845725        1
[INPUT] 0    0    [1    /1   ]  0.950686452244       1
[INPUT] 0    0    [1    /1   ]  1296.10601869        1
[INPUT] 0    0    [1    /1   ]  207.108191527        1
[INPUT] 0    0    [1    /1   ]  45.6858971384        1
[INPUT] 0    0    [1    /1   ]  12.1697576959        1
[INPUT] 1    0    [1    /1   ]  5.32662035915        1
[INPUT] 1    0    [1    /1   ]  0.898554292923       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0784572503708, 1.0]], [0, [0.9506864522439294, 1.0]], [0, [1296.106018689302, 1.0]], [0, [207.10819152656563, 1.0]], [0, [45.68589713838225, 1.0]], [0, [12.16975769593338, 1.0]], [1, [5.3266203591510415, 1.0]], [1, [0.8985542929233301, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.07845725]
bas 1, expnt(s) = [0.95068645]
bas 2, expnt(s) = [1296.10601869]
bas 3, expnt(s) = [207.10819153]
bas 4, expnt(s) = [45.68589714]
bas 5, expnt(s) = [12.1697577]
bas 6, expnt(s) = [5.32662036]
bas 7, expnt(s) = [0.89855429]
CPU time:        90.42
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94807846e+03 7.40832211e+02 9.50686452e-01 2.43244485e+00
 1.29610602e+03 5.45752105e+02 2.07108192e+02 1.37931348e+02
 4.56858971e+01 4.43967973e+01 1.21697577e+01 1.64617678e+01
 5.32662036e+00 2.36074497e+01 8.98554293e-01 2.55220054e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827359199832665
cond(S) = 154.09373747646964
E1 = -181.2776607824115  E_coul = 54.35977022782675
init E= -126.917890554585
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649550285685061  LUMO = 5.34578991470409
  mo_energy =
[-3.26689430e+01 -1.83838941e+00 -6.49550286e-01 -6.49550286e-01
 -6.49550286e-01  5.34578991e+00  5.34578991e+00  5.34578991e+00
  3.41804875e+01  2.95164828e+02  1.82391866e+03  6.61554486e+03]
E1 = -181.5974073012811  E_coul = 54.33316666491814
cycle= 1 E= -127.264240636363  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110584
diis-c [-0.0122289  1.       ]
  HOMO = -0.610164832347444  LUMO = 5.36824770317227
  mo_energy =
[-3.28314177e+01 -1.80377007e+00 -6.10164832e-01 -6.10164832e-01
 -6.10164832e-01  5.36824770e+00  5.36824770e+00  5.36824770e+00
  3.40777532e+01  2.94976380e+02  1.82368453e+03  6.61528653e+03]
E1 = -181.69564262707917  E_coul = 54.43115832677388
cycle= 2 E= -127.264484300305  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138101
diis-c [-9.12316413e-05  8.30187236e-02  9.16981276e-01]
  HOMO = -0.604681216345436  LUMO = 5.37712482517589
  mo_energy =
[-3.28092520e+01 -1.79744033e+00 -6.04681216e-01 -6.04681216e-01
 -6.04681216e-01  5.37712483e+00  5.37712483e+00  5.37712483e+00
  3.40967211e+01  2.95001769e+02  1.82371281e+03  6.61531568e+03]
E1 = -181.6801449762663  E_coul = 54.41565371770191
cycle= 3 E= -127.264491258564  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105952
diis-c [-1.50102354e-08 -3.02705367e-03  5.39987517e-02  9.49028302e-01]
  HOMO = -0.605079535718842  LUMO = 5.37649433203364
  mo_energy =
[-3.28107402e+01 -1.79789649e+00 -6.05079536e-01 -6.05079536e-01
 -6.05079536e-01  5.37649433e+00  5.37649433e+00  5.37649433e+00
  3.40954352e+01  2.95000301e+02  1.82371136e+03  6.61531424e+03]
E1 = -181.68124046127346  E_coul = 54.41674916242804
cycle= 4 E= -127.264491298845  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75862e-06
diis-c [-2.79106957e-13  4.03962870e-05 -1.11415197e-03 -1.67295593e-02
  1.01780331e+00]
  HOMO = -0.605079112388663  LUMO = 5.37649502781489
  mo_energy =
[-3.28107384e+01 -1.79789589e+00 -6.05079112e-01 -6.05079112e-01
 -6.05079112e-01  5.37649503e+00  5.37649503e+00  5.37649503e+00
  3.40954372e+01  2.95000304e+02  1.82371137e+03  6.61531424e+03]
E1 = -181.6812394180821  E_coul = 54.4167481192365
cycle= 5 E= -127.264491298846  delta_E= -1.71e-13  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6812394180821  E_coul = 54.4167481192365
  HOMO = -0.605079107318255  LUMO = 5.37649503471019
  mo_energy =
[-3.28107384e+01 -1.79789588e+00 -6.05079107e-01 -6.05079107e-01
 -6.05079107e-01  5.37649503e+00  5.37649503e+00  5.37649503e+00
  3.40954372e+01  2.95000304e+02  1.82371137e+03  6.61531424e+03]
E1 = -181.6812394118761  E_coul = 54.41674811303061
Extra cycle  E= -127.264491298845  delta_E= 9.95e-14  |g|= 8.8e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94807846e+03 9.50686452e-01 1.29610602e+03 2.07108192e+02
 4.56858971e+01 1.21697577e+01 5.32662036e+00 8.98554293e-01]
E = -127.2644912988455
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.07845725        1
[INPUT] 0    0    [1    /1   ]  0.950686452244       1
[INPUT] 0    0    [1    /1   ]  1296.10601869        1
[INPUT] 0    0    [1    /1   ]  207.108191527        1
[INPUT] 0    0    [1    /1   ]  45.6858971384        1
[INPUT] 0    0    [1    /1   ]  12.1697576959        1
[INPUT] 1    0    [1    /1   ]  5.32662035915        1
[INPUT] 1    0    [1    /1   ]  0.898554292923       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.0784572503708, 1.0]], [0, [0.9506864522439294, 1.0]], [0, [1296.106018689302, 1.0]], [0, [207.10819152656563, 1.0]], [0, [45.68589713838225, 1.0]], [0, [12.16975769593338, 1.0]], [1, [5.3266203591510415, 1.0]], [1, [0.8985542929233301, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.07845725]
bas 1, expnt(s) = [0.95068645]
bas 2, expnt(s) = [1296.10601869]
bas 3, expnt(s) = [207.10819153]
bas 4, expnt(s) = [45.68589714]
bas 5, expnt(s) = [12.1697577]
bas 6, expnt(s) = [5.32662036]
bas 7, expnt(s) = [0.89855429]
CPU time:        90.94
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94807846e+03 7.40832211e+02 9.50686452e-01 2.43244485e+00
 1.29610602e+03 5.45752105e+02 2.07108192e+02 1.37931348e+02
 4.56858971e+01 4.43967973e+01 1.21697577e+01 1.64617678e+01
 5.32662036e+00 2.36074497e+01 8.98554293e-01 2.55220054e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827359199832665
cond(S) = 154.09373747646964
E1 = -181.2776607824115  E_coul = 54.35977022782675
init E= -126.917890554585
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649550285685061  LUMO = 5.34578991470409
  mo_energy =
[-3.26689430e+01 -1.83838941e+00 -6.49550286e-01 -6.49550286e-01
 -6.49550286e-01  5.34578991e+00  5.34578991e+00  5.34578991e+00
  3.41804875e+01  2.95164828e+02  1.82391866e+03  6.61554486e+03]
E1 = -181.5974073012811  E_coul = 54.33316666491814
cycle= 1 E= -127.264240636363  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110584
diis-c [-0.0122289  1.       ]
  HOMO = -0.610164832347444  LUMO = 5.36824770317227
  mo_energy =
[-3.28314177e+01 -1.80377007e+00 -6.10164832e-01 -6.10164832e-01
 -6.10164832e-01  5.36824770e+00  5.36824770e+00  5.36824770e+00
  3.40777532e+01  2.94976380e+02  1.82368453e+03  6.61528653e+03]
E1 = -181.69564262707917  E_coul = 54.43115832677388
cycle= 2 E= -127.264484300305  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138101
diis-c [-9.12316413e-05  8.30187236e-02  9.16981276e-01]
  HOMO = -0.604681216345436  LUMO = 5.37712482517589
  mo_energy =
[-3.28092520e+01 -1.79744033e+00 -6.04681216e-01 -6.04681216e-01
 -6.04681216e-01  5.37712483e+00  5.37712483e+00  5.37712483e+00
  3.40967211e+01  2.95001769e+02  1.82371281e+03  6.61531568e+03]
E1 = -181.6801449762663  E_coul = 54.41565371770191
cycle= 3 E= -127.264491258564  delta_E= -6.96e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105952
diis-c [-1.50102354e-08 -3.02705367e-03  5.39987517e-02  9.49028302e-01]
  HOMO = -0.605079535718842  LUMO = 5.37649433203364
  mo_energy =
[-3.28107402e+01 -1.79789649e+00 -6.05079536e-01 -6.05079536e-01
 -6.05079536e-01  5.37649433e+00  5.37649433e+00  5.37649433e+00
  3.40954352e+01  2.95000301e+02  1.82371136e+03  6.61531424e+03]
E1 = -181.68124046127346  E_coul = 54.41674916242804
cycle= 4 E= -127.264491298845  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75862e-06
diis-c [-2.79106957e-13  4.03962870e-05 -1.11415197e-03 -1.67295593e-02
  1.01780331e+00]
  HOMO = -0.605079112388663  LUMO = 5.37649502781489
  mo_energy =
[-3.28107384e+01 -1.79789589e+00 -6.05079112e-01 -6.05079112e-01
 -6.05079112e-01  5.37649503e+00  5.37649503e+00  5.37649503e+00
  3.40954372e+01  2.95000304e+02  1.82371137e+03  6.61531424e+03]
E1 = -181.6812394180821  E_coul = 54.4167481192365
cycle= 5 E= -127.264491298846  delta_E= -1.71e-13  |g|= 2.55e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6812394180821  E_coul = 54.4167481192365
  HOMO = -0.605079107318255  LUMO = 5.37649503471019
  mo_energy =
[-3.28107384e+01 -1.79789588e+00 -6.05079107e-01 -6.05079107e-01
 -6.05079107e-01  5.37649503e+00  5.37649503e+00  5.37649503e+00
  3.40954372e+01  2.95000304e+02  1.82371137e+03  6.61531424e+03]
E1 = -181.6812394118761  E_coul = 54.41674811303061
Extra cycle  E= -127.264491298845  delta_E= 9.95e-14  |g|= 8.8e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.09373747646964
E1 = -181.6812394118761  E_coul = 54.41674811303061
init E= -127.264491298845
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605079107662025  LUMO = 5.37649503411935
  mo_energy =
[-3.28107384e+01 -1.79789588e+00 -6.05079108e-01 -6.05079108e-01
 -6.05079108e-01  5.37649503e+00  5.37649503e+00  5.37649503e+00
  3.40954372e+01  2.95000304e+02  1.82371137e+03  6.61531424e+03]
E1 = -181.68123941309662  E_coul = 54.416748114251085
cycle= 1 E= -127.264491298846  delta_E= -4.26e-14  |g|= 1.51e-10  |ddm|= 2.05e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68123941309662  E_coul = 54.416748114251085
  HOMO = -0.605079107585239  LUMO = 5.37649503424142
  mo_energy =
[-3.28107384e+01 -1.79789588e+00 -6.05079108e-01 -6.05079108e-01
 -6.05079108e-01  5.37649503e+00  5.37649503e+00  5.37649503e+00
  3.40954372e+01  2.95000304e+02  1.82371137e+03  6.61531424e+03]
E1 = -181.68123941289036  E_coul = 54.41674811404484
Extra cycle  E= -127.264491298846  delta_E= 2.84e-14  |g|= 2.41e-11  |ddm|= 3.24e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94807846e+03 9.50686452e-01 1.29610602e+03 2.07108192e+02
 4.56858971e+01 1.21697577e+01 5.32662036e+00 8.98554293e-01]
grad_E = [-1.26261956e-05  5.75314958e-06  4.25309926e-05  1.25549761e-05
 -1.74839560e-05  2.70970624e-05  2.83042974e-05 -1.31225982e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.15111306        1
[INPUT] 0    0    [1    /1   ]  0.950685028326       1
[INPUT] 0    0    [1    /1   ]  1295.85271856        1
[INPUT] 0    0    [1    /1   ]  207.149922926        1
[INPUT] 0    0    [1    /1   ]  45.6861410907        1
[INPUT] 0    0    [1    /1   ]  12.1696439765        1
[INPUT] 1    0    [1    /1   ]  5.32690080529        1
[INPUT] 1    0    [1    /1   ]  0.898584493195       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.1511130568144, 1.0]], [0, [0.9506850283258654, 1.0]], [0, [1295.8527185622518, 1.0]], [0, [207.1499229259168, 1.0]], [0, [45.68614109069736, 1.0]], [0, [12.169643976471276, 1.0]], [1, [5.3269008052913485, 1.0]], [1, [0.8985844931949655, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.15111306]
bas 1, expnt(s) = [0.95068503]
bas 2, expnt(s) = [1295.85271856]
bas 3, expnt(s) = [207.14992293]
bas 4, expnt(s) = [45.68614109]
bas 5, expnt(s) = [12.16964398]
bas 6, expnt(s) = [5.32690081]
bas 7, expnt(s) = [0.89858449]
CPU time:        93.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94815111e+03 7.40852934e+02 9.50685028e-01 2.43244212e+00
 1.29585272e+03 5.45672110e+02 2.07149923e+02 1.37952192e+02
 4.56861411e+01 4.43969751e+01 1.21696440e+01 1.64616525e+01
 5.32690081e+00 2.36090034e+01 8.98584493e-01 2.55230777e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827347127629594
cond(S) = 153.95818612368177
E1 = -181.27771608377554  E_coul = 54.35980589456656
init E= -126.917910189209
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649551028607991  LUMO = 5.34607918674468
  mo_energy =
[-3.26689266e+01 -1.83839119e+00 -6.49551029e-01 -6.49551029e-01
 -6.49551029e-01  5.34607919e+00  5.34607919e+00  5.34607919e+00
  3.41801223e+01  2.95198755e+02  1.82391362e+03  6.61525237e+03]
E1 = -181.5976757820728  E_coul = 54.3334239224668
cycle= 1 E= -127.264251859606  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110551
diis-c [-0.01222153  1.        ]
  HOMO = -0.610148152744617  LUMO = 5.36855759575354
  mo_energy =
[-3.28313624e+01 -1.80375232e+00 -6.10148153e-01 -6.10148153e-01
 -6.10148153e-01  5.36855760e+00  5.36855760e+00  5.36855760e+00
  3.40774269e+01  2.95010343e+02  1.82367952e+03  6.61499408e+03]
E1 = -181.6958759880857  E_coul = 54.43138060318637
cycle= 2 E= -127.264495384899  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138055
diis-c [-9.11796200e-05  8.30126157e-02  9.16987384e-01]
  HOMO = -0.604666567683071  LUMO = 5.37743188450003
  mo_energy =
[-3.28092039e+01 -1.79742497e+00 -6.04666568e-01 -6.04666568e-01
 -6.04666568e-01  5.37743188e+00  5.37743188e+00  5.37743188e+00
  3.40963884e+01  2.95035726e+02  1.82370779e+03  6.61502322e+03]
E1 = -181.68038434265335  E_coul = 54.4158820046377
cycle= 3 E= -127.264502338016  delta_E= -6.95e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105918
diis-c [-1.49988318e-08 -3.02896195e-03  5.39879774e-02  9.49040985e-01]
  HOMO = -0.605064757264085  LUMO = 5.37680157419916
  mo_energy =
[-3.28106917e+01 -1.79788098e+00 -6.05064757e-01 -6.05064757e-01
 -6.05064757e-01  5.37680157e+00  5.37680157e+00  5.37680157e+00
  3.40951030e+01  2.95034258e+02  1.82370634e+03  6.61502178e+03]
E1 = -181.6814794175646  E_coul = 54.41697703929667
cycle= 4 E= -127.264502378268  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75692e-06
diis-c [-2.79133950e-13  4.04266492e-05 -1.11345017e-03 -1.67206609e-02
  1.01779368e+00]
  HOMO = -0.605064333171972  LUMO = 5.37680227109987
  mo_energy =
[-3.28106898e+01 -1.79788038e+00 -6.05064333e-01 -6.05064333e-01
 -6.05064333e-01  5.37680227e+00  5.37680227e+00  5.37680227e+00
  3.40951049e+01  2.95034261e+02  1.82370635e+03  6.61502179e+03]
E1 = -181.68147837246187  E_coul = 54.41697599419376
cycle= 5 E= -127.264502378268  delta_E= -1.85e-13  |g|= 2.54e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68147837246187  E_coul = 54.41697599419376
  HOMO = -0.605064328121772  LUMO = 5.37680227796456
  mo_energy =
[-3.28106898e+01 -1.79788037e+00 -6.05064328e-01 -6.05064328e-01
 -6.05064328e-01  5.37680228e+00  5.37680228e+00  5.37680228e+00
  3.40951049e+01  2.95034261e+02  1.82370635e+03  6.61502179e+03]
E1 = -181.68147836630914  E_coul = 54.41697598804102
Extra cycle  E= -127.264502378268  delta_E= -1.42e-14  |g|= 8.77e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.94815111e+03 9.50685028e-01 1.29585272e+03 2.07149923e+02
 4.56861411e+01 1.21696440e+01 5.32690081e+00 8.98584493e-01]
E = -127.26450237826812
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.15111306        1
[INPUT] 0    0    [1    /1   ]  0.950685028326       1
[INPUT] 0    0    [1    /1   ]  1295.85271856        1
[INPUT] 0    0    [1    /1   ]  207.149922926        1
[INPUT] 0    0    [1    /1   ]  45.6861410907        1
[INPUT] 0    0    [1    /1   ]  12.1696439765        1
[INPUT] 1    0    [1    /1   ]  5.32690080529        1
[INPUT] 1    0    [1    /1   ]  0.898584493195       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.1511130568144, 1.0]], [0, [0.9506850283258654, 1.0]], [0, [1295.8527185622518, 1.0]], [0, [207.1499229259168, 1.0]], [0, [45.68614109069736, 1.0]], [0, [12.169643976471276, 1.0]], [1, [5.3269008052913485, 1.0]], [1, [0.8985844931949655, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.15111306]
bas 1, expnt(s) = [0.95068503]
bas 2, expnt(s) = [1295.85271856]
bas 3, expnt(s) = [207.14992293]
bas 4, expnt(s) = [45.68614109]
bas 5, expnt(s) = [12.16964398]
bas 6, expnt(s) = [5.32690081]
bas 7, expnt(s) = [0.89858449]
CPU time:        94.48
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94815111e+03 7.40852934e+02 9.50685028e-01 2.43244212e+00
 1.29585272e+03 5.45672110e+02 2.07149923e+02 1.37952192e+02
 4.56861411e+01 4.43969751e+01 1.21696440e+01 1.64616525e+01
 5.32690081e+00 2.36090034e+01 8.98584493e-01 2.55230777e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827347127629594
cond(S) = 153.95818612368177
E1 = -181.27771608377554  E_coul = 54.35980589456656
init E= -126.917910189209
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649551028607991  LUMO = 5.34607918674468
  mo_energy =
[-3.26689266e+01 -1.83839119e+00 -6.49551029e-01 -6.49551029e-01
 -6.49551029e-01  5.34607919e+00  5.34607919e+00  5.34607919e+00
  3.41801223e+01  2.95198755e+02  1.82391362e+03  6.61525237e+03]
E1 = -181.5976757820728  E_coul = 54.3334239224668
cycle= 1 E= -127.264251859606  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110551
diis-c [-0.01222153  1.        ]
  HOMO = -0.610148152744617  LUMO = 5.36855759575354
  mo_energy =
[-3.28313624e+01 -1.80375232e+00 -6.10148153e-01 -6.10148153e-01
 -6.10148153e-01  5.36855760e+00  5.36855760e+00  5.36855760e+00
  3.40774269e+01  2.95010343e+02  1.82367952e+03  6.61499408e+03]
E1 = -181.6958759880857  E_coul = 54.43138060318637
cycle= 2 E= -127.264495384899  delta_E= -0.000244  |g|= 0.0113  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138055
diis-c [-9.11796200e-05  8.30126157e-02  9.16987384e-01]
  HOMO = -0.604666567683071  LUMO = 5.37743188450003
  mo_energy =
[-3.28092039e+01 -1.79742497e+00 -6.04666568e-01 -6.04666568e-01
 -6.04666568e-01  5.37743188e+00  5.37743188e+00  5.37743188e+00
  3.40963884e+01  2.95035726e+02  1.82370779e+03  6.61502322e+03]
E1 = -181.68038434265335  E_coul = 54.4158820046377
cycle= 3 E= -127.264502338016  delta_E= -6.95e-06  |g|= 0.000892  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105918
diis-c [-1.49988318e-08 -3.02896195e-03  5.39879774e-02  9.49040985e-01]
  HOMO = -0.605064757264085  LUMO = 5.37680157419916
  mo_energy =
[-3.28106917e+01 -1.79788098e+00 -6.05064757e-01 -6.05064757e-01
 -6.05064757e-01  5.37680157e+00  5.37680157e+00  5.37680157e+00
  3.40951030e+01  2.95034258e+02  1.82370634e+03  6.61502178e+03]
E1 = -181.6814794175646  E_coul = 54.41697703929667
cycle= 4 E= -127.264502378268  delta_E= -4.03e-08  |g|= 2.26e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75692e-06
diis-c [-2.79133950e-13  4.04266492e-05 -1.11345017e-03 -1.67206609e-02
  1.01779368e+00]
  HOMO = -0.605064333171972  LUMO = 5.37680227109987
  mo_energy =
[-3.28106898e+01 -1.79788038e+00 -6.05064333e-01 -6.05064333e-01
 -6.05064333e-01  5.37680227e+00  5.37680227e+00  5.37680227e+00
  3.40951049e+01  2.95034261e+02  1.82370635e+03  6.61502179e+03]
E1 = -181.68147837246187  E_coul = 54.41697599419376
cycle= 5 E= -127.264502378268  delta_E= -1.85e-13  |g|= 2.54e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68147837246187  E_coul = 54.41697599419376
  HOMO = -0.605064328121772  LUMO = 5.37680227796456
  mo_energy =
[-3.28106898e+01 -1.79788037e+00 -6.05064328e-01 -6.05064328e-01
 -6.05064328e-01  5.37680228e+00  5.37680228e+00  5.37680228e+00
  3.40951049e+01  2.95034261e+02  1.82370635e+03  6.61502179e+03]
E1 = -181.68147836630914  E_coul = 54.41697598804102
Extra cycle  E= -127.264502378268  delta_E= -1.42e-14  |g|= 8.77e-10  |ddm|= 2.12e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 153.95818612368177
E1 = -181.68147836630914  E_coul = 54.41697598804102
init E= -127.264502378268
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605064328462272  LUMO = 5.37680227737895
  mo_energy =
[-3.28106898e+01 -1.79788037e+00 -6.05064328e-01 -6.05064328e-01
 -6.05064328e-01  5.37680228e+00  5.37680228e+00  5.37680228e+00
  3.40951049e+01  2.95034261e+02  1.82370635e+03  6.61502179e+03]
E1 = -181.68147836752033  E_coul = 54.416975989252236
cycle= 1 E= -127.264502378268  delta_E= 2.84e-14  |g|= 1.5e-10  |ddm|= 2.03e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68147836752033  E_coul = 54.416975989252236
  HOMO = -0.605064328386062  LUMO = 5.37680227750012
  mo_energy =
[-3.28106898e+01 -1.79788037e+00 -6.05064328e-01 -6.05064328e-01
 -6.05064328e-01  5.37680228e+00  5.37680228e+00  5.37680228e+00
  3.40951049e+01  2.95034261e+02  1.82370635e+03  6.61502179e+03]
E1 = -181.68147836731566  E_coul = 54.41697598904769
Extra cycle  E= -127.264502378268  delta_E= 1.28e-13  |g|= 2.36e-11  |ddm|= 3.21e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94815111e+03 9.50685028e-01 1.29585272e+03 2.07149923e+02
 4.56861411e+01 1.21696440e+01 5.32690081e+00 8.98584493e-01]
grad_E = [-1.26540908e-05  1.22724697e-05  4.24630814e-05  1.63575778e-05
 -3.77102952e-05  5.56495309e-05  5.89191077e-05 -2.72668681e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.51435773        1
[INPUT] 0    0    [1    /1   ]  0.95068044337        1
[INPUT] 0    0    [1    /1   ]  1294.59910571        1
[INPUT] 0    0    [1    /1   ]  207.203598381        1
[INPUT] 0    0    [1    /1   ]  45.6825468641        1
[INPUT] 0    0    [1    /1   ]  12.1688444415        1
[INPUT] 1    0    [1    /1   ]  5.32748869336        1
[INPUT] 1    0    [1    /1   ]  0.898647943728       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.514357733325, 1.0]], [0, [0.9506804433695828, 1.0]], [0, [1294.5991057143656, 1.0]], [0, [207.20359838132063, 1.0]], [0, [45.6825468641265, 1.0]], [0, [12.168844441481072, 1.0]], [1, [5.3274886933646135, 1.0]], [1, [0.8986479437284322, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.51435773]
bas 1, expnt(s) = [0.95068044]
bas 2, expnt(s) = [1294.59910571]
bas 3, expnt(s) = [207.20359838]
bas 4, expnt(s) = [45.68254686]
bas 5, expnt(s) = [12.16884444]
bas 6, expnt(s) = [5.32748869]
bas 7, expnt(s) = [0.89864794]
CPU time:        97.54
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94851436e+03 7.40956534e+02 9.50680443e-01 2.43243332e+00
 1.29459911e+03 5.45276149e+02 2.07203598e+02 1.37979000e+02
 4.56825469e+01 4.43943555e+01 1.21688444e+01 1.64608413e+01
 5.32748869e+00 2.36122604e+01 8.98647944e-01 2.55253305e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827322230797488
cond(S) = 153.22903314530708
E1 = -181.2778837325795  E_coul = 54.35988660078968
init E= -126.91799713179
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649552220617249  LUMO = 5.34668642968466
  mo_energy =
[-3.26689076e+01 -1.83839457e+00 -6.49552221e-01 -6.49552221e-01
 -6.49552221e-01  5.34668643e+00  5.34668643e+00  5.34668643e+00
  3.41759157e+01  2.95224293e+02  1.82341316e+03  6.61324938e+03]
E1 = -181.59826284412327  E_coul = 54.333954197155464
cycle= 1 E= -127.264308646968  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11048
diis-c [-0.01220575  1.        ]
  HOMO = -0.61011400708685  LUMO = 5.36920622812381
  mo_energy =
[-3.28312647e+01 -1.80371549e+00 -6.10114007e-01 -6.10114007e-01
 -6.10114007e-01  5.36920623e+00  5.36920623e+00  5.36920623e+00
  3.40733052e+01  2.95035958e+02  1.82317914e+03  6.61299117e+03]
E1 = -181.69639448688199  E_coul = 54.4318425821759
cycle= 2 E= -127.264551904706  delta_E= -0.000243  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0137966
diis-c [-9.10640689e-05  8.30128161e-02  9.16987184e-01]
  HOMO = -0.604636474752792  LUMO = 5.37807491511764
  mo_energy =
[-3.28091207e+01 -1.79739294e+00 -6.04636475e-01 -6.04636475e-01
 -6.04636475e-01  5.37807492e+00  5.37807492e+00  5.37807492e+00
  3.40922533e+01  2.95061327e+02  1.82320740e+03  6.61302030e+03]
E1 = -181.68091468776873  E_coul = 54.416355839881476
cycle= 3 E= -127.264558847887  delta_E= -6.94e-06  |g|= 0.000891  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105836
diis-c [-1.49740394e-08 -3.03348578e-03  5.39503624e-02  9.49083123e-01]
  HOMO = -0.60503434324724  LUMO = 5.37744506835741
  mo_energy =
[-3.28106072e+01 -1.79784858e+00 -6.05034343e-01 -6.05034343e-01
 -6.05034343e-01  5.37744507e+00  5.37744507e+00  5.37744507e+00
  3.40909690e+01  2.95059860e+02  1.82320595e+03  6.61301886e+03]
E1 = -181.6820087728905  E_coul = 54.41744988482066
cycle= 4 E= -127.26455888807  delta_E= -4.02e-08  |g|= 2.25e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75355e-06
diis-c [-2.79280747e-13  4.04997127e-05 -1.11172070e-03 -1.67015122e-02
  1.01777273e+00]
  HOMO = -0.605033917184675  LUMO = 5.37744576816453
  mo_energy =
[-3.28106053e+01 -1.79784798e+00 -6.05033917e-01 -6.05033917e-01
 -6.05033917e-01  5.37744577e+00  5.37744577e+00  5.37744577e+00
  3.40909710e+01  2.95059863e+02  1.82320595e+03  6.61301887e+03]
E1 = -181.68200772281963  E_coul = 54.4174488347496
cycle= 5 E= -127.26455888807  delta_E= -1.99e-13  |g|= 2.54e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68200772281963  E_coul = 54.4174488347496
  HOMO = -0.60503391217944  LUMO = 5.37744577496094
  mo_energy =
[-3.28106053e+01 -1.79784797e+00 -6.05033912e-01 -6.05033912e-01
 -6.05033912e-01  5.37744577e+00  5.37744577e+00  5.37744577e+00
  3.40909710e+01  2.95059863e+02  1.82320595e+03  6.61301887e+03]
E1 = -181.6820077167873  E_coul = 54.41744882871731
Extra cycle  E= -127.26455888807  delta_E= 5.68e-14  |g|= 8.69e-10  |ddm|= 2.11e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [1.94851436e+03 9.50680443e-01 1.29459911e+03 2.07203598e+02
 4.56825469e+01 1.21688444e+01 5.32748869e+00 8.98647944e-01]
E = -127.26455888806998
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1948.51435773        1
[INPUT] 0    0    [1    /1   ]  0.95068044337        1
[INPUT] 0    0    [1    /1   ]  1294.59910571        1
[INPUT] 0    0    [1    /1   ]  207.203598381        1
[INPUT] 0    0    [1    /1   ]  45.6825468641        1
[INPUT] 0    0    [1    /1   ]  12.1688444415        1
[INPUT] 1    0    [1    /1   ]  5.32748869336        1
[INPUT] 1    0    [1    /1   ]  0.898647943728       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1948.514357733325, 1.0]], [0, [0.9506804433695828, 1.0]], [0, [1294.5991057143656, 1.0]], [0, [207.20359838132063, 1.0]], [0, [45.6825468641265, 1.0]], [0, [12.168844441481072, 1.0]], [1, [5.3274886933646135, 1.0]], [1, [0.8986479437284322, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1948.51435773]
bas 1, expnt(s) = [0.95068044]
bas 2, expnt(s) = [1294.59910571]
bas 3, expnt(s) = [207.20359838]
bas 4, expnt(s) = [45.68254686]
bas 5, expnt(s) = [12.16884444]
bas 6, expnt(s) = [5.32748869]
bas 7, expnt(s) = [0.89864794]
CPU time:        98.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.94851436e+03 7.40956534e+02 9.50680443e-01 2.43243332e+00
 1.29459911e+03 5.45276149e+02 2.07203598e+02 1.37979000e+02
 4.56825469e+01 4.43943555e+01 1.21688444e+01 1.64608413e+01
 5.32748869e+00 2.36122604e+01 8.98647944e-01 2.55253305e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827322230797488
cond(S) = 153.22903314530708
E1 = -181.2778837325795  E_coul = 54.35988660078968
init E= -126.91799713179
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649552220617249  LUMO = 5.34668642968466
  mo_energy =
[-3.26689076e+01 -1.83839457e+00 -6.49552221e-01 -6.49552221e-01
 -6.49552221e-01  5.34668643e+00  5.34668643e+00  5.34668643e+00
  3.41759157e+01  2.95224293e+02  1.82341316e+03  6.61324938e+03]
E1 = -181.59826284412327  E_coul = 54.333954197155464
cycle= 1 E= -127.264308646968  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11048
diis-c [-0.01220575  1.        ]
  HOMO = -0.61011400708685  LUMO = 5.36920622812381
  mo_energy =
[-3.28312647e+01 -1.80371549e+00 -6.10114007e-01 -6.10114007e-01
 -6.10114007e-01  5.36920623e+00  5.36920623e+00  5.36920623e+00
  3.40733052e+01  2.95035958e+02  1.82317914e+03  6.61299117e+03]
E1 = -181.69639448688199  E_coul = 54.4318425821759
cycle= 2 E= -127.264551904706  delta_E= -0.000243  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0137966
diis-c [-9.10640689e-05  8.30128161e-02  9.16987184e-01]
  HOMO = -0.604636474752792  LUMO = 5.37807491511764
  mo_energy =
[-3.28091207e+01 -1.79739294e+00 -6.04636475e-01 -6.04636475e-01
 -6.04636475e-01  5.37807492e+00  5.37807492e+00  5.37807492e+00
  3.40922533e+01  2.95061327e+02  1.82320740e+03  6.61302030e+03]
E1 = -181.68091468776873  E_coul = 54.416355839881476
cycle= 3 E= -127.264558847887  delta_E= -6.94e-06  |g|= 0.000891  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105836
diis-c [-1.49740394e-08 -3.03348578e-03  5.39503624e-02  9.49083123e-01]
  HOMO = -0.60503434324724  LUMO = 5.37744506835741
  mo_energy =
[-3.28106072e+01 -1.79784858e+00 -6.05034343e-01 -6.05034343e-01
 -6.05034343e-01  5.37744507e+00  5.37744507e+00  5.37744507e+00
  3.40909690e+01  2.95059860e+02  1.82320595e+03  6.61301886e+03]
E1 = -181.6820087728905  E_coul = 54.41744988482066
cycle= 4 E= -127.26455888807  delta_E= -4.02e-08  |g|= 2.25e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.75355e-06
diis-c [-2.79280747e-13  4.04997127e-05 -1.11172070e-03 -1.67015122e-02
  1.01777273e+00]
  HOMO = -0.605033917184675  LUMO = 5.37744576816453
  mo_energy =
[-3.28106053e+01 -1.79784798e+00 -6.05033917e-01 -6.05033917e-01
 -6.05033917e-01  5.37744577e+00  5.37744577e+00  5.37744577e+00
  3.40909710e+01  2.95059863e+02  1.82320595e+03  6.61301887e+03]
E1 = -181.68200772281963  E_coul = 54.4174488347496
cycle= 5 E= -127.26455888807  delta_E= -1.99e-13  |g|= 2.54e-08  |ddm|= 2.08e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68200772281963  E_coul = 54.4174488347496
  HOMO = -0.60503391217944  LUMO = 5.37744577496094
  mo_energy =
[-3.28106053e+01 -1.79784797e+00 -6.05033912e-01 -6.05033912e-01
 -6.05033912e-01  5.37744577e+00  5.37744577e+00  5.37744577e+00
  3.40909710e+01  2.95059863e+02  1.82320595e+03  6.61301887e+03]
E1 = -181.6820077167873  E_coul = 54.41744882871731
Extra cycle  E= -127.26455888807  delta_E= 5.68e-14  |g|= 8.69e-10  |ddm|= 2.11e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 153.22903314530708
E1 = -181.6820077167873  E_coul = 54.41744882871731
init E= -127.26455888807
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.605033912512523  LUMO = 5.37744577438722
  mo_energy =
[-3.28106053e+01 -1.79784797e+00 -6.05033913e-01 -6.05033913e-01
 -6.05033913e-01  5.37744577e+00  5.37744577e+00  5.37744577e+00
  3.40909710e+01  2.95059863e+02  1.82320595e+03  6.61301887e+03]
E1 = -181.68200771797765  E_coul = 54.417448829907634
cycle= 1 E= -127.26455888807  delta_E= -2.84e-14  |g|= 1.48e-10  |ddm|= 2e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68200771797765  E_coul = 54.417448829907634
  HOMO = -0.605033912437608  LUMO = 5.37744577450631
  mo_energy =
[-3.28106053e+01 -1.79784797e+00 -6.05033912e-01 -6.05033912e-01
 -6.05033912e-01  5.37744577e+00  5.37744577e+00  5.37744577e+00
  3.40909710e+01  2.95059863e+02  1.82320595e+03  6.61301887e+03]
E1 = -181.68200771777666  E_coul = 54.4174488297067
Extra cycle  E= -127.26455888807  delta_E= 5.68e-14  |g|= 2.36e-11  |ddm|= 3.16e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.94851436e+03 9.50680443e-01 1.29459911e+03 2.07203598e+02
 4.56825469e+01 1.21688444e+01 5.32748869e+00 8.98647944e-01]
grad_E = [-1.27498644e-05  2.58808453e-05  4.23820175e-05  2.43227974e-05
 -7.99836960e-05  1.15336346e-04  1.22877276e-04 -5.68190847e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1950.34559555        1
[INPUT] 0    0    [1    /1   ]  0.950662554595       1
[INPUT] 0    0    [1    /1   ]  1288.30593321        1
[INPUT] 0    0    [1    /1   ]  207.150054704        1
[INPUT] 0    0    [1    /1   ]  45.6542516225        1
[INPUT] 0    0    [1    /1   ]  12.1643118659        1
[INPUT] 1    0    [1    /1   ]  5.32875477394        1
[INPUT] 1    0    [1    /1   ]  0.898785310999       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1950.3455955544107, 1.0]], [0, [0.9506625545949972, 1.0]], [0, [1288.3059332117002, 1.0]], [0, [207.1500547044152, 1.0]], [0, [45.654251622489504, 1.0]], [0, [12.164311865931182, 1.0]], [1, [5.3287547739398, 1.0]], [1, [0.8987853109993915, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1950.34559555]
bas 1, expnt(s) = [0.95066255]
bas 2, expnt(s) = [1288.30593321]
bas 3, expnt(s) = [207.1500547]
bas 4, expnt(s) = [45.65425162]
bas 5, expnt(s) = [12.16431187]
bas 6, expnt(s) = [5.32875477]
bas 7, expnt(s) = [0.89878531]
CPU time:       101.11
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.95034560e+03 7.41478742e+02 9.50662555e-01 2.43239899e+00
 1.28830593e+03 5.43286958e+02 2.07150055e+02 1.37952258e+02
 4.56542516e+01 4.43737309e+01 1.21643119e+01 1.64562427e+01
 5.32875477e+00 2.36192749e+01 8.98785311e-01 2.55302078e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827270663384216
cond(S) = 149.5261577704493
E1 = -181.2785054793569  E_coul = 54.3600902748841
init E= -126.918415204473
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649552950435953  LUMO = 5.34799849386863
  mo_energy =
[-3.26689431e+01 -1.83840014e+00 -6.49552950e-01 -6.49552950e-01
 -6.49552950e-01  5.34799849e+00  5.34799849e+00  5.34799849e+00
  3.41496266e+01  2.95051133e+02  1.81988360e+03  6.60200040e+03]
E1 = -181.59965039980338  E_coul = 54.33505164436209
cycle= 1 E= -127.264598755441  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110318
diis-c [-0.01217006  1.        ]
  HOMO = -0.610044546273867  LUMO = 5.37059827462877
  mo_energy =
[-3.28311465e+01 -1.80363816e+00 -6.10044546e-01 -6.10044546e-01
 -6.10044546e-01  5.37059827e+00  5.37059827e+00  5.37059827e+00
  3.40472148e+01  2.94862968e+02  1.81964976e+03  6.60174236e+03]
E1 = -181.697659566355  E_coul = 54.43281801454695
cycle= 2 E= -127.264841551808  delta_E= -0.000243  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0137821
diis-c [-9.07820324e-05  8.30786897e-02  9.16921310e-01]
  HOMO = -0.604574726539912  LUMO = 5.37945657393558
  mo_energy =
[-3.28090292e+01 -1.79732488e+00 -6.04574727e-01 -6.04574727e-01
 -6.04574727e-01  5.37945657e+00  5.37945657e+00  5.37945657e+00
  3.40661353e+01  2.94888308e+02  1.81967799e+03  6.60177147e+03]
E1 = -181.68220158775617  E_coul = 54.41735310996136
cycle= 3 E= -127.264848477795  delta_E= -6.93e-06  |g|= 0.000889  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105602
diis-c [-1.49161255e-08 -3.04588192e-03  5.37935479e-02  9.49252334e-01]
  HOMO = -0.604971656599052  LUMO = 5.37882813001804
  mo_energy =
[-3.28105120e+01 -1.79777943e+00 -6.04971657e-01 -6.04971657e-01
 -6.04971657e-01  5.37882813e+00  5.37882813e+00  5.37882813e+00
  3.40648544e+01  2.94886846e+02  1.81967654e+03  6.60177003e+03]
E1 = -181.6832928849529  E_coul = 54.41844436717408
cycle= 4 E= -127.264848517779  delta_E= -4e-08  |g|= 2.25e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7474e-06
diis-c [-2.80056982e-13  4.07044935e-05 -1.10669198e-03 -1.66576007e-02
  1.01772359e+00]
  HOMO = -0.604971224385378  LUMO = 5.37882883894709
  mo_energy =
[-3.28105101e+01 -1.79777882e+00 -6.04971224e-01 -6.04971224e-01
 -6.04971224e-01  5.37882884e+00  5.37882884e+00  5.37882884e+00
  3.40648564e+01  2.94886849e+02  1.81967655e+03  6.60177004e+03]
E1 = -181.68329181926595  E_coul = 54.41844330148719
cycle= 5 E= -127.264848517779  delta_E= 4.26e-14  |g|= 2.53e-08  |ddm|= 2.1e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68329181926595  E_coul = 54.41844330148719
  HOMO = -0.604971219490661  LUMO = 5.37882884557469
  mo_energy =
[-3.28105101e+01 -1.79777881e+00 -6.04971219e-01 -6.04971219e-01
 -6.04971219e-01  5.37882885e+00  5.37882885e+00  5.37882885e+00
  3.40648564e+01  2.94886849e+02  1.81967655e+03  6.60177004e+03]
E1 = -181.68329181353755  E_coul = 54.41844329575877
Extra cycle  E= -127.264848517779  delta_E= -1.42e-14  |g|= 8.51e-10  |ddm|= 2.09e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [1.95034560e+03 9.50662555e-01 1.28830593e+03 2.07150055e+02
 4.56542516e+01 1.21643119e+01 5.32875477e+00 8.98785311e-01]
E = -127.26484851777877
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1950.34559555        1
[INPUT] 0    0    [1    /1   ]  0.950662554595       1
[INPUT] 0    0    [1    /1   ]  1288.30593321        1
[INPUT] 0    0    [1    /1   ]  207.150054704        1
[INPUT] 0    0    [1    /1   ]  45.6542516225        1
[INPUT] 0    0    [1    /1   ]  12.1643118659        1
[INPUT] 1    0    [1    /1   ]  5.32875477394        1
[INPUT] 1    0    [1    /1   ]  0.898785310999       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1950.3455955544107, 1.0]], [0, [0.9506625545949972, 1.0]], [0, [1288.3059332117002, 1.0]], [0, [207.1500547044152, 1.0]], [0, [45.654251622489504, 1.0]], [0, [12.164311865931182, 1.0]], [1, [5.3287547739398, 1.0]], [1, [0.8987853109993915, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1950.34559555]
bas 1, expnt(s) = [0.95066255]
bas 2, expnt(s) = [1288.30593321]
bas 3, expnt(s) = [207.1500547]
bas 4, expnt(s) = [45.65425162]
bas 5, expnt(s) = [12.16431187]
bas 6, expnt(s) = [5.32875477]
bas 7, expnt(s) = [0.89878531]
CPU time:       101.69
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.95034560e+03 7.41478742e+02 9.50662555e-01 2.43239899e+00
 1.28830593e+03 5.43286958e+02 2.07150055e+02 1.37952258e+02
 4.56542516e+01 4.43737309e+01 1.21643119e+01 1.64562427e+01
 5.32875477e+00 2.36192749e+01 8.98785311e-01 2.55302078e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.827270663384216
cond(S) = 149.5261577704493
E1 = -181.2785054793569  E_coul = 54.3600902748841
init E= -126.918415204473
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649552950435953  LUMO = 5.34799849386863
  mo_energy =
[-3.26689431e+01 -1.83840014e+00 -6.49552950e-01 -6.49552950e-01
 -6.49552950e-01  5.34799849e+00  5.34799849e+00  5.34799849e+00
  3.41496266e+01  2.95051133e+02  1.81988360e+03  6.60200040e+03]
E1 = -181.59965039980338  E_coul = 54.33505164436209
cycle= 1 E= -127.264598755441  delta_E= -0.346  |g|= 0.0925  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110318
diis-c [-0.01217006  1.        ]
  HOMO = -0.610044546273867  LUMO = 5.37059827462877
  mo_energy =
[-3.28311465e+01 -1.80363816e+00 -6.10044546e-01 -6.10044546e-01
 -6.10044546e-01  5.37059827e+00  5.37059827e+00  5.37059827e+00
  3.40472148e+01  2.94862968e+02  1.81964976e+03  6.60174236e+03]
E1 = -181.697659566355  E_coul = 54.43281801454695
cycle= 2 E= -127.264841551808  delta_E= -0.000243  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0137821
diis-c [-9.07820324e-05  8.30786897e-02  9.16921310e-01]
  HOMO = -0.604574726539912  LUMO = 5.37945657393558
  mo_energy =
[-3.28090292e+01 -1.79732488e+00 -6.04574727e-01 -6.04574727e-01
 -6.04574727e-01  5.37945657e+00  5.37945657e+00  5.37945657e+00
  3.40661353e+01  2.94888308e+02  1.81967799e+03  6.60177147e+03]
E1 = -181.68220158775617  E_coul = 54.41735310996136
cycle= 3 E= -127.264848477795  delta_E= -6.93e-06  |g|= 0.000889  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105602
diis-c [-1.49161255e-08 -3.04588192e-03  5.37935479e-02  9.49252334e-01]
  HOMO = -0.604971656599052  LUMO = 5.37882813001804
  mo_energy =
[-3.28105120e+01 -1.79777943e+00 -6.04971657e-01 -6.04971657e-01
 -6.04971657e-01  5.37882813e+00  5.37882813e+00  5.37882813e+00
  3.40648544e+01  2.94886846e+02  1.81967654e+03  6.60177003e+03]
E1 = -181.6832928849529  E_coul = 54.41844436717408
cycle= 4 E= -127.264848517779  delta_E= -4e-08  |g|= 2.25e-06  |ddm|= 0.000171
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7474e-06
diis-c [-2.80056982e-13  4.07044935e-05 -1.10669198e-03 -1.66576007e-02
  1.01772359e+00]
  HOMO = -0.604971224385378  LUMO = 5.37882883894709
  mo_energy =
[-3.28105101e+01 -1.79777882e+00 -6.04971224e-01 -6.04971224e-01
 -6.04971224e-01  5.37882884e+00  5.37882884e+00  5.37882884e+00
  3.40648564e+01  2.94886849e+02  1.81967655e+03  6.60177004e+03]
E1 = -181.68329181926595  E_coul = 54.41844330148719
cycle= 5 E= -127.264848517779  delta_E= 4.26e-14  |g|= 2.53e-08  |ddm|= 2.1e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.68329181926595  E_coul = 54.41844330148719
  HOMO = -0.604971219490661  LUMO = 5.37882884557469
  mo_energy =
[-3.28105101e+01 -1.79777881e+00 -6.04971219e-01 -6.04971219e-01
 -6.04971219e-01  5.37882885e+00  5.37882885e+00  5.37882885e+00
  3.40648564e+01  2.94886849e+02  1.81967655e+03  6.60177004e+03]
E1 = -181.68329181353755  E_coul = 54.41844329575877
Extra cycle  E= -127.264848517779  delta_E= -1.42e-14  |g|= 8.51e-10  |ddm|= 2.09e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 149.5261577704493
E1 = -181.68329181353755  E_coul = 54.41844329575877
init E= -127.264848517779
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604971219804984  LUMO = 5.37882884503098
  mo_energy =
[-3.28105101e+01 -1.79777881e+00 -6.04971220e-01 -6.04971220e-01
 -6.04971220e-01  5.37882885e+00  5.37882885e+00  5.37882885e+00
  3.40648564e+01  2.94886849e+02  1.81967655e+03  6.60177004e+03]
E1 = -181.68329181467564  E_coul = 54.41844329689679
cycle= 1 E= -127.264848517779  delta_E= -8.53e-14  |g|= 1.42e-10  |ddm|= 1.93e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.68329181467564  E_coul = 54.41844329689679
  HOMO = -0.604971219733311  LUMO = 5.3788288451449
  mo_energy =
[-3.28105101e+01 -1.79777881e+00 -6.04971220e-01 -6.04971220e-01
 -6.04971220e-01  5.37882885e+00  5.37882885e+00  5.37882885e+00
  3.40648564e+01  2.94886849e+02  1.81967655e+03  6.60177004e+03]
E1 = -181.68329181448382  E_coul = 54.41844329670509
Extra cycle  E= -127.264848517779  delta_E= 1.28e-13  |g|= 2.21e-11  |ddm|= 3.01e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [1.95034560e+03 9.50662555e-01 1.28830593e+03 2.07150055e+02
 4.56542516e+01 1.21643119e+01 5.32875477e+00 8.98785311e-01]
grad_E = [-1.31406163e-05  5.48559466e-05  4.25095856e-05  4.15172802e-05
 -1.70627860e-04  2.43422685e-04  2.59532558e-04 -1.19894041e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1959.69153906        1
[INPUT] 0    0    [1    /1   ]  0.950581455291       1
[INPUT] 0    0    [1    /1   ]  1256.2450858         1
[INPUT] 0    0    [1    /1   ]  206.183783458        1
[INPUT] 0    0    [1    /1   ]  45.4868060423        1
[INPUT] 0    0    [1    /1   ]  12.1398819055        1
[INPUT] 1    0    [1    /1   ]  5.33165826138        1
[INPUT] 1    0    [1    /1   ]  0.899103935392       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1959.6915390601337, 1.0]], [0, [0.9505814552908975, 1.0]], [0, [1256.2450858045963, 1.0]], [0, [206.18378345809433, 1.0]], [0, [45.48680604233, 1.0]], [0, [12.139881905516447, 1.0]], [1, [5.331658261384577, 1.0]], [1, [0.8991039353923769, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1959.69153906]
bas 1, expnt(s) = [0.95058146]
bas 2, expnt(s) = [1256.2450858]
bas 3, expnt(s) = [206.18378346]
bas 4, expnt(s) = [45.48680604]
bas 5, expnt(s) = [12.13988191]
bas 6, expnt(s) = [5.33165826]
bas 7, expnt(s) = [0.89910394]
CPU time:       104.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.95969154e+03 7.44141992e+02 9.50581455e-01 2.43224337e+00
 1.25624509e+03 5.33114882e+02 2.06183783e+02 1.37469357e+02
 4.54868060e+01 4.42516131e+01 1.21398819e+01 1.64314493e+01
 5.33165826e+00 2.36353628e+01 8.99103935e-01 2.55415216e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82716263278278
cond(S) = 132.47615631685105
E1 = -181.281282935407  E_coul = 54.36071013816041
init E= -126.920572797247
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649545141247323  LUMO = 5.3510295869084
  mo_energy =
[-3.26694252e+01 -1.83840630e+00 -6.49545141e-01 -6.49545141e-01
 -6.49545141e-01  5.35102959e+00  5.35102959e+00  5.35102959e+00
  3.40033288e+01  2.93514597e+02  1.79939881e+03  6.54160379e+03]
E1 = -181.60350308274985  E_coul = 54.33735927388252
cycle= 1 E= -127.266143808867  delta_E= -0.346  |g|= 0.0926  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1099
diis-c [-0.01207794  1.        ]
  HOMO = -0.609904956549542  LUMO = 5.37376802063582
  mo_energy =
[-3.28313493e+01 -1.80347251e+00 -6.09904957e-01 -6.09904957e-01
 -6.09904957e-01  5.37376802e+00  5.37376802e+00  5.37376802e+00
  3.39014563e+01  2.93326846e+02  1.79916547e+03  6.54134617e+03]
E1 = -181.70135426594987  E_coul = 54.43496815749321
cycle= 2 E= -127.266386108457  delta_E= -0.000242  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0137707
diis-c [-8.99427584e-05  8.35703688e-02  9.16429631e-01]
  HOMO = -0.604448001511715  LUMO = 5.38261048751446
  mo_energy =
[-3.28092735e+01 -1.79717548e+00 -6.04448002e-01 -6.04448002e-01
 -6.04448002e-01  5.38261049e+00  5.38261049e+00  5.38261049e+00
  3.39203179e+01  2.93352134e+02  1.79919365e+03  6.54137524e+03]
E1 = -181.68592853622712  E_coul = 54.41953552067932
cycle= 3 E= -127.266393015548  delta_E= -6.91e-06  |g|= 0.000883  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00104758
diis-c [-1.47555024e-08 -3.08860622e-03  5.30343468e-02  9.50054259e-01]
  HOMO = -0.604841461917958  LUMO = 5.38198742082042
  mo_energy =
[-3.28107423e+01 -1.79762594e+00 -6.04841462e-01 -6.04841462e-01
 -6.04841462e-01  5.38198742e+00  5.38198742e+00  5.38198742e+00
  3.39190501e+01  2.93350688e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.6870099163766  E_coul = 54.42061686155751
cycle= 4 E= -127.266393054819  delta_E= -3.93e-08  |g|= 2.24e-06  |ddm|= 0.000169
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.73926e-06
diis-c [-2.84544114e-13  4.14179222e-05 -1.08800405e-03 -1.65357467e-02
  1.01758233e+00]
  HOMO = -0.6048410050343  LUMO = 5.38198816654008
  mo_energy =
[-3.28107404e+01 -1.79762531e+00 -6.04841005e-01 -6.04841005e-01
 -6.04841005e-01  5.38198817e+00  5.38198817e+00  5.38198817e+00
  3.39190521e+01  2.93350691e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.6870087875815  E_coul = 54.420615732762286
cycle= 5 E= -127.266393054819  delta_E= -1.14e-13  |g|= 2.51e-08  |ddm|= 2.18e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6870087875815  E_coul = 54.420615732762286
  HOMO = -0.604841000475361  LUMO = 5.38198817265045
  mo_energy =
[-3.28107404e+01 -1.79762530e+00 -6.04841000e-01 -6.04841000e-01
 -6.04841000e-01  5.38198817e+00  5.38198817e+00  5.38198817e+00
  3.39190521e+01  2.93350691e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.68700878280998  E_coul = 54.42061572799091
Extra cycle  E= -127.266393054819  delta_E= 1.42e-13  |g|= 8.06e-10  |ddm|= 2.07e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [1.95969154e+03 9.50581455e-01 1.25624509e+03 2.06183783e+02
 4.54868060e+01 1.21398819e+01 5.33165826e+00 8.99103935e-01]
E = -127.26639305481908
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  1959.69153906        1
[INPUT] 0    0    [1    /1   ]  0.950581455291       1
[INPUT] 0    0    [1    /1   ]  1256.2450858         1
[INPUT] 0    0    [1    /1   ]  206.183783458        1
[INPUT] 0    0    [1    /1   ]  45.4868060423        1
[INPUT] 0    0    [1    /1   ]  12.1398819055        1
[INPUT] 1    0    [1    /1   ]  5.33165826138        1
[INPUT] 1    0    [1    /1   ]  0.899103935392       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [1959.6915390601337, 1.0]], [0, [0.9505814552908975, 1.0]], [0, [1256.2450858045963, 1.0]], [0, [206.18378345809433, 1.0]], [0, [45.48680604233, 1.0]], [0, [12.139881905516447, 1.0]], [1, [5.331658261384577, 1.0]], [1, [0.8991039353923769, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [1959.69153906]
bas 1, expnt(s) = [0.95058146]
bas 2, expnt(s) = [1256.2450858]
bas 3, expnt(s) = [206.18378346]
bas 4, expnt(s) = [45.48680604]
bas 5, expnt(s) = [12.13988191]
bas 6, expnt(s) = [5.33165826]
bas 7, expnt(s) = [0.89910394]
CPU time:       105.27
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 1.95969154e+03 7.44141992e+02 9.50581455e-01 2.43224337e+00
 1.25624509e+03 5.33114882e+02 2.06183783e+02 1.37469357e+02
 4.54868060e+01 4.42516131e+01 1.21398819e+01 1.64314493e+01
 5.33165826e+00 2.36353628e+01 8.99103935e-01 2.55415216e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82716263278278
cond(S) = 132.47615631685105
E1 = -181.281282935407  E_coul = 54.36071013816041
init E= -126.920572797247
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649545141247323  LUMO = 5.3510295869084
  mo_energy =
[-3.26694252e+01 -1.83840630e+00 -6.49545141e-01 -6.49545141e-01
 -6.49545141e-01  5.35102959e+00  5.35102959e+00  5.35102959e+00
  3.40033288e+01  2.93514597e+02  1.79939881e+03  6.54160379e+03]
E1 = -181.60350308274985  E_coul = 54.33735927388252
cycle= 1 E= -127.266143808867  delta_E= -0.346  |g|= 0.0926  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1099
diis-c [-0.01207794  1.        ]
  HOMO = -0.609904956549542  LUMO = 5.37376802063582
  mo_energy =
[-3.28313493e+01 -1.80347251e+00 -6.09904957e-01 -6.09904957e-01
 -6.09904957e-01  5.37376802e+00  5.37376802e+00  5.37376802e+00
  3.39014563e+01  2.93326846e+02  1.79916547e+03  6.54134617e+03]
E1 = -181.70135426594987  E_coul = 54.43496815749321
cycle= 2 E= -127.266386108457  delta_E= -0.000242  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0137707
diis-c [-8.99427584e-05  8.35703688e-02  9.16429631e-01]
  HOMO = -0.604448001511715  LUMO = 5.38261048751446
  mo_energy =
[-3.28092735e+01 -1.79717548e+00 -6.04448002e-01 -6.04448002e-01
 -6.04448002e-01  5.38261049e+00  5.38261049e+00  5.38261049e+00
  3.39203179e+01  2.93352134e+02  1.79919365e+03  6.54137524e+03]
E1 = -181.68592853622712  E_coul = 54.41953552067932
cycle= 3 E= -127.266393015548  delta_E= -6.91e-06  |g|= 0.000883  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00104758
diis-c [-1.47555024e-08 -3.08860622e-03  5.30343468e-02  9.50054259e-01]
  HOMO = -0.604841461917958  LUMO = 5.38198742082042
  mo_energy =
[-3.28107423e+01 -1.79762594e+00 -6.04841462e-01 -6.04841462e-01
 -6.04841462e-01  5.38198742e+00  5.38198742e+00  5.38198742e+00
  3.39190501e+01  2.93350688e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.6870099163766  E_coul = 54.42061686155751
cycle= 4 E= -127.266393054819  delta_E= -3.93e-08  |g|= 2.24e-06  |ddm|= 0.000169
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.73926e-06
diis-c [-2.84544114e-13  4.14179222e-05 -1.08800405e-03 -1.65357467e-02
  1.01758233e+00]
  HOMO = -0.6048410050343  LUMO = 5.38198816654008
  mo_energy =
[-3.28107404e+01 -1.79762531e+00 -6.04841005e-01 -6.04841005e-01
 -6.04841005e-01  5.38198817e+00  5.38198817e+00  5.38198817e+00
  3.39190521e+01  2.93350691e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.6870087875815  E_coul = 54.420615732762286
cycle= 5 E= -127.266393054819  delta_E= -1.14e-13  |g|= 2.51e-08  |ddm|= 2.18e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.6870087875815  E_coul = 54.420615732762286
  HOMO = -0.604841000475361  LUMO = 5.38198817265045
  mo_energy =
[-3.28107404e+01 -1.79762530e+00 -6.04841000e-01 -6.04841000e-01
 -6.04841000e-01  5.38198817e+00  5.38198817e+00  5.38198817e+00
  3.39190521e+01  2.93350691e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.68700878280998  E_coul = 54.42061572799091
Extra cycle  E= -127.266393054819  delta_E= 1.42e-13  |g|= 8.06e-10  |ddm|= 2.07e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 132.47615631685105
E1 = -181.68700878280998  E_coul = 54.42061572799091
init E= -127.266393054819
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604841000730395  LUMO = 5.38198817220153
  mo_energy =
[-3.28107404e+01 -1.79762530e+00 -6.04841001e-01 -6.04841001e-01
 -6.04841001e-01  5.38198817e+00  5.38198817e+00  5.38198817e+00
  3.39190521e+01  2.93350691e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.6870087837852  E_coul = 54.420615728966034
cycle= 1 E= -127.266393054819  delta_E= -8.53e-14  |g|= 1.23e-10  |ddm|= 1.69e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.6870087837852  E_coul = 54.420615728966034
  HOMO = -0.604841000668806  LUMO = 5.38198817229928
  mo_energy =
[-3.28107404e+01 -1.79762530e+00 -6.04841001e-01 -6.04841001e-01
 -6.04841001e-01  5.38198817e+00  5.38198817e+00  5.38198817e+00
  3.39190521e+01  2.93350691e+02  1.79919223e+03  6.54137383e+03]
E1 = -181.68700878362156  E_coul = 54.42061572880249
Extra cycle  E= -127.266393054819  delta_E= 8.53e-14  |g|= 1.9e-11  |ddm|= 2.57e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [1.95969154e+03 9.50581455e-01 1.25624509e+03 2.06183783e+02
 4.54868060e+01 1.21398819e+01 5.33165826e+00 8.99103935e-01]
grad_E = [-1.49343418e-05  1.18555579e-04  4.42599391e-05  8.27808997e-05
 -3.81381033e-04  5.42980564e-04  5.67575684e-04 -2.59986680e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2009.96683513        1
[INPUT] 0    0    [1    /1   ]  0.950150180728       1
[INPUT] 0    0    [1    /1   ]  1083.91850658        1
[INPUT] 0    0    [1    /1   ]  199.283489203        1
[INPUT] 0    0    [1    /1   ]  44.5033923446        1
[INPUT] 0    0    [1    /1   ]  12.0007246659        1
[INPUT] 1    0    [1    /1   ]  5.33996588725        1
[INPUT] 1    0    [1    /1   ]  0.90003323319        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2009.9668351349683, 1.0]], [0, [0.9501501807283846, 1.0]], [0, [1083.9185065811312, 1.0]], [0, [199.2834892034827, 1.0]], [0, [44.503392344641014, 1.0]], [0, [12.000724665931818, 1.0]], [1, [5.339965887246737, 1.0]], [1, [0.9000332331904954, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2009.96683513]
bas 1, expnt(s) = [0.95015018]
bas 2, expnt(s) = [1083.91850658]
bas 3, expnt(s) = [199.2834892]
bas 4, expnt(s) = [44.50339234]
bas 5, expnt(s) = [12.00072467]
bas 6, expnt(s) = [5.33996589]
bas 7, expnt(s) = [0.90003323]
CPU time:       108.37
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.00996684e+03 7.58414614e+02 9.50150181e-01 2.43141569e+00
 1.08391851e+03 4.77268199e+02 1.99283489e+02 1.34004232e+02
 4.45033923e+01 4.35321244e+01 1.20007247e+01 1.62899829e+01
 5.33996589e+00 2.36814067e+01 9.00033233e-01 2.55745249e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826903847870625
cond(S) = 78.69740606624566
E1 = -181.29739691128512  E_coul = 54.36336508071591
init E= -126.934031830569
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649464815370036  LUMO = 5.35983415058489
  mo_energy =
[-3.26733574e+01 -1.83845334e+00 -6.49464815e-01 -6.49464815e-01
 -6.49464815e-01  5.35983415e+00  5.35983415e+00  5.35983415e+00
  3.31599279e+01  2.83473401e+02  1.67375214e+03  6.19371914e+03]
E1 = -181.61961720375433  E_coul = 54.34336777884636
cycle= 1 E= -127.276249424908  delta_E= -0.342  |g|= 0.0931  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.108222
diis-c [-0.01171198  1.        ]
  HOMO = -0.609581292476703  LUMO = 5.38277879160514
  mo_energy =
[-3.28347253e+01 -1.80311665e+00 -6.09581292e-01 -6.09581292e-01
 -6.09581292e-01  5.38277879e+00  5.38277879e+00  5.38277879e+00
  3.30601301e+01  2.83287234e+02  1.67352125e+03  6.19346340e+03]
E1 = -181.71753435858392  E_coul = 54.44104161021198
cycle= 2 E= -127.276492748372  delta_E= -0.000243  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138372
diis-c [-8.56961494e-05  8.70766766e-02  9.12923323e-01]
  HOMO = -0.604145157509734  LUMO = 5.39160324510062
  mo_energy =
[-3.28126975e+01 -1.79685056e+00 -6.04145158e-01 -6.04145158e-01
 -6.04145158e-01  5.39160325e+00  5.39160325e+00  5.39160325e+00
  3.30788165e+01  2.83312399e+02  1.67354933e+03  6.19349245e+03]
E1 = -181.70213272152273  E_coul = 54.42563302997258
cycle= 3 E= -127.27649969155  delta_E= -6.94e-06  |g|= 0.000845  |ddm|= 0.00242
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00100107
diis-c [-1.40088981e-08 -3.31539805e-03  4.82311209e-02  9.55084277e-01]
  HOMO = -0.604519479656187  LUMO = 5.39101069808269
  mo_energy =
[-3.28140884e+01 -1.79727854e+00 -6.04519480e-01 -6.04519480e-01
 -6.04519480e-01  5.39101070e+00  5.39101070e+00  5.39101070e+00
  3.30776217e+01  2.83311044e+02  1.67354800e+03  6.19349114e+03]
E1 = -181.7031604224099  E_coul = 54.42666069537567
cycle= 4 E= -127.276499727034  delta_E= -3.55e-08  |g|= 2.28e-06  |ddm|= 0.000161
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7801e-06
diis-c [-3.27528744e-13  4.48656192e-05 -9.79802534e-04 -1.58235368e-02
  1.01675847e+00]
  HOMO = -0.604518863357487  LUMO = 5.39101168323611
  mo_energy =
[-3.28140860e+01 -1.79727773e+00 -6.04518863e-01 -6.04518863e-01
 -6.04518863e-01  5.39101168e+00  5.39101168e+00  5.39101168e+00
  3.30776242e+01  2.83311048e+02  1.67354801e+03  6.19349114e+03]
E1 = -181.7031588807802  E_coul = 54.42665915374598
cycle= 5 E= -127.276499727034  delta_E= 1.42e-14  |g|= 2.46e-08  |ddm|= 2.72e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.7031588807802  E_coul = 54.42665915374598
  HOMO = -0.60451886063498  LUMO = 5.3910116864978
  mo_energy =
[-3.28140860e+01 -1.79727772e+00 -6.04518861e-01 -6.04518861e-01
 -6.04518861e-01  5.39101169e+00  5.39101169e+00  5.39101169e+00
  3.30776242e+01  2.83311048e+02  1.67354801e+03  6.19349114e+03]
E1 = -181.70315888129443  E_coul = 54.426659154260065
Extra cycle  E= -127.276499727034  delta_E= -1.56e-13  |g|= 8.43e-10  |ddm|= 2.15e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.00996684e+03 9.50150181e-01 1.08391851e+03 1.99283489e+02
 4.45033923e+01 1.20007247e+01 5.33996589e+00 9.00033233e-01]
E = -127.27649972703436
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2009.96683513        1
[INPUT] 0    0    [1    /1   ]  0.950150180728       1
[INPUT] 0    0    [1    /1   ]  1083.91850658        1
[INPUT] 0    0    [1    /1   ]  199.283489203        1
[INPUT] 0    0    [1    /1   ]  44.5033923446        1
[INPUT] 0    0    [1    /1   ]  12.0007246659        1
[INPUT] 1    0    [1    /1   ]  5.33996588725        1
[INPUT] 1    0    [1    /1   ]  0.90003323319        1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2009.9668351349683, 1.0]], [0, [0.9501501807283846, 1.0]], [0, [1083.9185065811312, 1.0]], [0, [199.2834892034827, 1.0]], [0, [44.503392344641014, 1.0]], [0, [12.000724665931818, 1.0]], [1, [5.339965887246737, 1.0]], [1, [0.9000332331904954, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2009.96683513]
bas 1, expnt(s) = [0.95015018]
bas 2, expnt(s) = [1083.91850658]
bas 3, expnt(s) = [199.2834892]
bas 4, expnt(s) = [44.50339234]
bas 5, expnt(s) = [12.00072467]
bas 6, expnt(s) = [5.33996589]
bas 7, expnt(s) = [0.90003323]
CPU time:       108.95
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.00996684e+03 7.58414614e+02 9.50150181e-01 2.43141569e+00
 1.08391851e+03 4.77268199e+02 1.99283489e+02 1.34004232e+02
 4.45033923e+01 4.35321244e+01 1.20007247e+01 1.62899829e+01
 5.33996589e+00 2.36814067e+01 9.00033233e-01 2.55745249e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826903847870625
cond(S) = 78.69740606624566
E1 = -181.29739691128512  E_coul = 54.36336508071591
init E= -126.934031830569
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649464815370036  LUMO = 5.35983415058489
  mo_energy =
[-3.26733574e+01 -1.83845334e+00 -6.49464815e-01 -6.49464815e-01
 -6.49464815e-01  5.35983415e+00  5.35983415e+00  5.35983415e+00
  3.31599279e+01  2.83473401e+02  1.67375214e+03  6.19371914e+03]
E1 = -181.61961720375433  E_coul = 54.34336777884636
cycle= 1 E= -127.276249424908  delta_E= -0.342  |g|= 0.0931  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.108222
diis-c [-0.01171198  1.        ]
  HOMO = -0.609581292476703  LUMO = 5.38277879160514
  mo_energy =
[-3.28347253e+01 -1.80311665e+00 -6.09581292e-01 -6.09581292e-01
 -6.09581292e-01  5.38277879e+00  5.38277879e+00  5.38277879e+00
  3.30601301e+01  2.83287234e+02  1.67352125e+03  6.19346340e+03]
E1 = -181.71753435858392  E_coul = 54.44104161021198
cycle= 2 E= -127.276492748372  delta_E= -0.000243  |g|= 0.0113  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0138372
diis-c [-8.56961494e-05  8.70766766e-02  9.12923323e-01]
  HOMO = -0.604145157509734  LUMO = 5.39160324510062
  mo_energy =
[-3.28126975e+01 -1.79685056e+00 -6.04145158e-01 -6.04145158e-01
 -6.04145158e-01  5.39160325e+00  5.39160325e+00  5.39160325e+00
  3.30788165e+01  2.83312399e+02  1.67354933e+03  6.19349245e+03]
E1 = -181.70213272152273  E_coul = 54.42563302997258
cycle= 3 E= -127.27649969155  delta_E= -6.94e-06  |g|= 0.000845  |ddm|= 0.00242
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00100107
diis-c [-1.40088981e-08 -3.31539805e-03  4.82311209e-02  9.55084277e-01]
  HOMO = -0.604519479656187  LUMO = 5.39101069808269
  mo_energy =
[-3.28140884e+01 -1.79727854e+00 -6.04519480e-01 -6.04519480e-01
 -6.04519480e-01  5.39101070e+00  5.39101070e+00  5.39101070e+00
  3.30776217e+01  2.83311044e+02  1.67354800e+03  6.19349114e+03]
E1 = -181.7031604224099  E_coul = 54.42666069537567
cycle= 4 E= -127.276499727034  delta_E= -3.55e-08  |g|= 2.28e-06  |ddm|= 0.000161
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.7801e-06
diis-c [-3.27528744e-13  4.48656192e-05 -9.79802534e-04 -1.58235368e-02
  1.01675847e+00]
  HOMO = -0.604518863357487  LUMO = 5.39101168323611
  mo_energy =
[-3.28140860e+01 -1.79727773e+00 -6.04518863e-01 -6.04518863e-01
 -6.04518863e-01  5.39101168e+00  5.39101168e+00  5.39101168e+00
  3.30776242e+01  2.83311048e+02  1.67354801e+03  6.19349114e+03]
E1 = -181.7031588807802  E_coul = 54.42665915374598
cycle= 5 E= -127.276499727034  delta_E= 1.42e-14  |g|= 2.46e-08  |ddm|= 2.72e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.7031588807802  E_coul = 54.42665915374598
  HOMO = -0.60451886063498  LUMO = 5.3910116864978
  mo_energy =
[-3.28140860e+01 -1.79727772e+00 -6.04518861e-01 -6.04518861e-01
 -6.04518861e-01  5.39101169e+00  5.39101169e+00  5.39101169e+00
  3.30776242e+01  2.83311048e+02  1.67354801e+03  6.19349114e+03]
E1 = -181.70315888129443  E_coul = 54.426659154260065
Extra cycle  E= -127.276499727034  delta_E= -1.56e-13  |g|= 8.43e-10  |ddm|= 2.15e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 78.69740606624566
E1 = -181.70315888129443  E_coul = 54.426659154260065
init E= -127.276499727034
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604518860562582  LUMO = 5.39101168657361
  mo_energy =
[-3.28140860e+01 -1.79727772e+00 -6.04518861e-01 -6.04518861e-01
 -6.04518861e-01  5.39101169e+00  5.39101169e+00  5.39101169e+00
  3.30776242e+01  2.83311048e+02  1.67354801e+03  6.19349114e+03]
E1 = -181.70315888137043  E_coul = 54.42665915433607
cycle= 1 E= -127.276499727034  delta_E= 1.42e-14  |g|= 3.37e-11  |ddm|= 7.8e-11
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.70315888137043  E_coul = 54.42665915433607
  HOMO = -0.604518860556589  LUMO = 5.39101168658194
  mo_energy =
[-3.28140860e+01 -1.79727772e+00 -6.04518861e-01 -6.04518861e-01
 -6.04518861e-01  5.39101169e+00  5.39101169e+00  5.39101169e+00
  3.30776242e+01  2.83311048e+02  1.67354801e+03  6.19349114e+03]
E1 = -181.70315888136318  E_coul = 54.42665915432878
Extra cycle  E= -127.276499727034  delta_E= -5.68e-14  |g|= 2.43e-12  |ddm|= 3.05e-12
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.00996684e+03 9.50150181e-01 1.08391851e+03 1.99283489e+02
 4.45033923e+01 1.20007247e+01 5.33996589e+00 9.00033233e-01]
grad_E = [-2.38709295e-05  2.63534043e-04  5.47230109e-05  2.63759548e-04
 -1.15734990e-03  1.69031568e-03  1.42422151e-03 -5.81744171e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2326.43257486        1
[INPUT] 0    0    [1    /1   ]  0.946956508134       1
[INPUT] 0    0    [1    /1   ]  1.00021679827e-09      1
[INPUT] 0    0    [1    /1   ]  146.028429369        1
[INPUT] 0    0    [1    /1   ]  37.1964072683        1
[INPUT] 0    0    [1    /1   ]  10.9689125816        1
[INPUT] 1    0    [1    /1   ]  5.38480407641        1
[INPUT] 1    0    [1    /1   ]  0.905115355964       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2326.4325748626493, 1.0]], [0, [0.9469565081343402, 1.0]], [0, [1.0002167982747778e-09, 1.0]], [0, [146.02842936883326, 1.0]], [0, [37.196407268309734, 1.0]], [0, [10.968912581600538, 1.0]], [1, [5.38480407640912, 1.0]], [1, [0.9051153559638502, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2326.43257486]
bas 1, expnt(s) = [0.94695651]
bas 2, expnt(s) = [1.0002168e-09]
bas 3, expnt(s) = [146.02842937]
bas 4, expnt(s) = [37.19640727]
bas 5, expnt(s) = [10.96891258]
bas 6, expnt(s) = [5.38480408]
bas 7, expnt(s) = [0.90511536]
CPU time:       111.87
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32643257e+03 8.46316634e+02 9.46956508e-01 2.42528371e+00
 1.00021680e-09 4.49350917e-07 1.46028429e+02 1.06131202e+02
 3.71964073e+01 3.80531637e+01 1.09689126e+01 1.52278190e+01
 5.38480408e+00 2.39302246e+01 9.05115356e-01 2.57551634e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825335601537281
cond(S) = 24.87112738757725
E1 = -180.3752325884905  E_coul = 54.372926158957384
init E= -126.002306429533
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649312439105894  LUMO = -8.81348319719105e-06
  mo_energy =
[-3.24432505e+01 -1.82351183e+00 -6.49312439e-01 -6.49312439e-01
 -6.49312439e-01 -8.81348320e-06  5.40707840e+00  5.40707840e+00
  5.40707840e+00  2.79411915e+01  2.15552590e+02  3.22689905e+03]
E1 = -181.1027023158773  E_coul = 54.30798854696221
cycle= 1 E= -126.794713768915  delta_E= -0.792  |g|= 0.156  |ddm|= 0.339
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265973
diis-c [-0.07074188  1.        ]
  HOMO = -0.610256154534823  LUMO = 1.50063154235438e-09
  mo_energy =
[-3.26259732e+01 -1.78681288e+00 -6.10256155e-01 -6.10256155e-01
 -6.10256155e-01  1.50063154e-09  5.42517525e+00  5.42517525e+00
  5.42517525e+00  2.78415969e+01  2.15330783e+02  3.22653651e+03]
E1 = -181.21743009659926  E_coul = 54.42239747043105
cycle= 2 E= -126.795032626168  delta_E= -0.000319  |g|= 0.0137  |ddm|= 0.0178
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0162098
diis-c [-2.34783822e-04  1.95296937e-02  9.80470306e-01]
  HOMO = -0.603361615481225  LUMO = 1.50061576025425e-09
  mo_energy =
[-3.25984559e+01 -1.77890020e+00 -6.03361615e-01 -6.03361615e-01
 -6.03361615e-01  1.50061576e-09  5.43639299e+00  5.43639299e+00
  5.43639299e+00  2.78640196e+01  2.15360809e+02  3.22657120e+03]
E1 = -181.1978212000815  E_coul = 54.40277901950397
cycle= 3 E= -126.795042180578  delta_E= -9.55e-06  |g|= 0.00208  |ddm|= 0.00308
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00248785
diis-c [-3.12086404e-08 -5.14196928e-04  1.30640428e-01  8.69873769e-01]
  HOMO = -0.604276674626097  LUMO = 1.50063055595954e-09
  mo_energy =
[-3.26020571e+01 -1.77993878e+00 -6.04276675e-01 -6.04276675e-01
 -6.04276675e-01  1.50063056e-09  5.43491135e+00  5.43491135e+00
  5.43491135e+00  2.78610985e+01  2.15356981e+02  3.22656694e+03]
E1 = -181.20042514730306  E_coul = 54.405382738194255
cycle= 4 E= -126.795042409109  delta_E= -2.29e-07  |g|= 5.7e-06  |ddm|= 0.000408
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.76401e-06
diis-c [-1.15203101e-12  1.54218491e-05 -4.84166657e-03 -3.28067607e-02
  1.03763301e+00]
  HOMO = -0.604277144859116  LUMO = 1.50062234049946e-09
  mo_energy =
[-3.26020588e+01 -1.77993881e+00 -6.04277145e-01 -6.04277145e-01
 -6.04277145e-01  1.50062234e-09  5.43491069e+00  5.43491069e+00
  5.43491069e+00  2.78610985e+01  2.15356981e+02  3.22656694e+03]
E1 = -181.20042714642284  E_coul = 54.40538473731346
cycle= 5 E= -126.795042409109  delta_E= -5.68e-13  |g|= 7.8e-08  |ddm|= 6.17e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.20042714642284  E_coul = 54.40538473731346
  HOMO = -0.604277113236154  LUMO = 1.5006270034408e-09
  mo_energy =
[-3.26020587e+01 -1.77993877e+00 -6.04277113e-01 -6.04277113e-01
 -6.04277113e-01  1.50062700e-09  5.43491074e+00  5.43491074e+00
  5.43491074e+00  2.78610986e+01  2.15356981e+02  3.22656694e+03]
E1 = -181.20042707334494  E_coul = 54.40538466423554
Extra cycle  E= -126.795042409109  delta_E= -1.42e-14  |g|= 8.39e-09  |ddm|= 1.23e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.32643257e+03 9.46956508e-01 1.00021680e-09 1.46028429e+02
 3.71964073e+01 1.09689126e+01 5.38480408e+00 9.05115356e-01]
E = -126.7950424091094
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2041.61340911        1
[INPUT] 0    0    [1    /1   ]  0.949830813469       1
[INPUT] 0    0    [1    /1   ]  975.526655923        1
[INPUT] 0    0    [1    /1   ]  193.95798322         1
[INPUT] 0    0    [1    /1   ]  43.772693837         1
[INPUT] 0    0    [1    /1   ]  11.8975434575        1
[INPUT] 1    0    [1    /1   ]  5.34444970616        1
[INPUT] 1    0    [1    /1   ]  0.900541445468       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2041.6134091077363, 1.0]], [0, [0.9498308134689802, 1.0]], [0, [975.526655923118, 1.0]], [0, [193.95798322001775, 1.0]], [0, [43.772693837007886, 1.0]], [0, [11.89754345749869, 1.0]], [1, [5.344449706162975, 1.0]], [1, [0.9005414454678309, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2041.61340911]
bas 1, expnt(s) = [0.94983081]
bas 2, expnt(s) = [975.52665592]
bas 3, expnt(s) = [193.95798322]
bas 4, expnt(s) = [43.77269384]
bas 5, expnt(s) = [11.89754346]
bas 6, expnt(s) = [5.34444971]
bas 7, expnt(s) = [0.90054145]
CPU time:       112.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.04161341e+03 7.67352931e+02 9.49830813e-01 2.43080273e+00
 9.75526656e+02 4.41005880e+02 1.93957983e+02 1.31309386e+02
 4.37726938e+01 4.29949532e+01 1.18975435e+01 1.61848247e+01
 5.34444971e+00 2.37062650e+01 9.00541445e-01 2.55925773e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826784792976204
cond(S) = 62.82198873532445
E1 = -181.30950218638048  E_coul = 54.36523591980414
init E= -126.944266266576
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649390931350693  LUMO = 5.36465296710897
  mo_energy =
[-3.26765880e+01 -1.83851799e+00 -6.49390931e-01 -6.49390931e-01
 -6.49390931e-01  5.36465297e+00  5.36465297e+00  5.36465297e+00
  3.25366271e+01  2.75872548e+02  1.58220588e+03  5.95540539e+03]
E1 = -181.63084420825874  E_coul = 54.34659188640838
cycle= 1 E= -127.28425232185  delta_E= -0.34  |g|= 0.0937  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.107242
diis-c [-0.0115008  1.       ]
  HOMO = -0.609425226076653  LUMO = 5.38764650221195
  mo_energy =
[-3.28377008e+01 -1.80299951e+00 -6.09425226e-01 -6.09425226e-01
 -6.09425226e-01  5.38764650e+00  5.38764650e+00  5.38764650e+00
  3.24382265e+01  2.75687519e+02  1.58197688e+03  5.95515108e+03]
E1 = -181.7289623226816  E_coul = 54.444465297877514
cycle= 2 E= -127.284497024804  delta_E= -0.000245  |g|= 0.0114  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139083
diis-c [-8.25412719e-05  8.97111215e-02  9.10288878e-01]
  HOMO = -0.603995904993506  LUMO = 5.3964692282021
  mo_energy =
[-3.28156775e+01 -1.79674629e+00 -6.03995905e-01 -6.03995905e-01
 -6.03995905e-01  5.39646923e+00  5.39646923e+00  5.39646923e+00
  3.24568066e+01  2.75712617e+02  1.58200491e+03  5.95518015e+03]
E1 = -181.71355021040335  E_coul = 54.42904619180738
cycle= 3 E= -127.284504018596  delta_E= -6.99e-06  |g|= 0.000819  |ddm|= 0.00242
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000968146
diis-c [-1.35795902e-08 -3.48356584e-03  4.46372724e-02  9.58846293e-01]
  HOMO = -0.604356677374442  LUMO = 5.39589851221086
  mo_energy =
[-3.28170127e+01 -1.79715842e+00 -6.04356677e-01 -6.04356677e-01
 -6.04356677e-01  5.39589851e+00  5.39589851e+00  5.39589851e+00
  3.24556636e+01  2.75711327e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453992768406  E_coul = 54.430035876177286
cycle= 4 E= -127.284504051507  delta_E= -3.29e-08  |g|= 2.4e-06  |ddm|= 0.000155
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.90011e-06
diis-c [-3.85788633e-13  4.68230482e-05 -8.98690759e-04 -1.51145788e-02
  1.01596645e+00]
  HOMO = -0.604355919089243  LUMO = 5.3958997128235
  mo_energy =
[-3.28170098e+01 -1.79715744e+00 -6.04355919e-01 -6.04355919e-01
 -6.04355919e-01  5.39589971e+00  5.39589971e+00  5.39589971e+00
  3.24556665e+01  2.75711331e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453801299612  E_coul = 54.43003396148914
cycle= 5 E= -127.284504051507  delta_E= -2.13e-13  |g|= 2.46e-08  |ddm|= 3.25e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.71453801299612  E_coul = 54.43003396148914
  HOMO = -0.604355917853334  LUMO = 5.39589971376125
  mo_energy =
[-3.28170099e+01 -1.79715744e+00 -6.04355918e-01 -6.04355918e-01
 -6.04355918e-01  5.39589971e+00  5.39589971e+00  5.39589971e+00
  3.24556665e+01  2.75711331e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453801780999  E_coul = 54.430033966302965
Extra cycle  E= -127.284504051507  delta_E= -2.84e-14  |g|= 1.17e-09  |ddm|= 2.44e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.04161341e+03 9.49830813e-01 9.75526656e+02 1.93957983e+02
 4.37726938e+01 1.18975435e+01 5.34444971e+00 9.00541445e-01]
E = -127.28450405150701
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:40:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2041.61340911        1
[INPUT] 0    0    [1    /1   ]  0.949830813469       1
[INPUT] 0    0    [1    /1   ]  975.526655923        1
[INPUT] 0    0    [1    /1   ]  193.95798322         1
[INPUT] 0    0    [1    /1   ]  43.772693837         1
[INPUT] 0    0    [1    /1   ]  11.8975434575        1
[INPUT] 1    0    [1    /1   ]  5.34444970616        1
[INPUT] 1    0    [1    /1   ]  0.900541445468       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2041.6134091077363, 1.0]], [0, [0.9498308134689802, 1.0]], [0, [975.526655923118, 1.0]], [0, [193.95798322001775, 1.0]], [0, [43.772693837007886, 1.0]], [0, [11.89754345749869, 1.0]], [1, [5.344449706162975, 1.0]], [1, [0.9005414454678309, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2041.61340911]
bas 1, expnt(s) = [0.94983081]
bas 2, expnt(s) = [975.52665592]
bas 3, expnt(s) = [193.95798322]
bas 4, expnt(s) = [43.77269384]
bas 5, expnt(s) = [11.89754346]
bas 6, expnt(s) = [5.34444971]
bas 7, expnt(s) = [0.90054145]
CPU time:       113.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.04161341e+03 7.67352931e+02 9.49830813e-01 2.43080273e+00
 9.75526656e+02 4.41005880e+02 1.93957983e+02 1.31309386e+02
 4.37726938e+01 4.29949532e+01 1.18975435e+01 1.61848247e+01
 5.34444971e+00 2.37062650e+01 9.00541445e-01 2.55925773e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826784792976204
cond(S) = 62.82198873532445
E1 = -181.30950218638048  E_coul = 54.36523591980414
init E= -126.944266266576
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649390931350693  LUMO = 5.36465296710897
  mo_energy =
[-3.26765880e+01 -1.83851799e+00 -6.49390931e-01 -6.49390931e-01
 -6.49390931e-01  5.36465297e+00  5.36465297e+00  5.36465297e+00
  3.25366271e+01  2.75872548e+02  1.58220588e+03  5.95540539e+03]
E1 = -181.63084420825874  E_coul = 54.34659188640838
cycle= 1 E= -127.28425232185  delta_E= -0.34  |g|= 0.0937  |ddm|= 0.315
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.107242
diis-c [-0.0115008  1.       ]
  HOMO = -0.609425226076653  LUMO = 5.38764650221195
  mo_energy =
[-3.28377008e+01 -1.80299951e+00 -6.09425226e-01 -6.09425226e-01
 -6.09425226e-01  5.38764650e+00  5.38764650e+00  5.38764650e+00
  3.24382265e+01  2.75687519e+02  1.58197688e+03  5.95515108e+03]
E1 = -181.7289623226816  E_coul = 54.444465297877514
cycle= 2 E= -127.284497024804  delta_E= -0.000245  |g|= 0.0114  |ddm|= 0.0152
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139083
diis-c [-8.25412719e-05  8.97111215e-02  9.10288878e-01]
  HOMO = -0.603995904993506  LUMO = 5.3964692282021
  mo_energy =
[-3.28156775e+01 -1.79674629e+00 -6.03995905e-01 -6.03995905e-01
 -6.03995905e-01  5.39646923e+00  5.39646923e+00  5.39646923e+00
  3.24568066e+01  2.75712617e+02  1.58200491e+03  5.95518015e+03]
E1 = -181.71355021040335  E_coul = 54.42904619180738
cycle= 3 E= -127.284504018596  delta_E= -6.99e-06  |g|= 0.000819  |ddm|= 0.00242
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000968146
diis-c [-1.35795902e-08 -3.48356584e-03  4.46372724e-02  9.58846293e-01]
  HOMO = -0.604356677374442  LUMO = 5.39589851221086
  mo_energy =
[-3.28170127e+01 -1.79715842e+00 -6.04356677e-01 -6.04356677e-01
 -6.04356677e-01  5.39589851e+00  5.39589851e+00  5.39589851e+00
  3.24556636e+01  2.75711327e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453992768406  E_coul = 54.430035876177286
cycle= 4 E= -127.284504051507  delta_E= -3.29e-08  |g|= 2.4e-06  |ddm|= 0.000155
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.90011e-06
diis-c [-3.85788633e-13  4.68230482e-05 -8.98690759e-04 -1.51145788e-02
  1.01596645e+00]
  HOMO = -0.604355919089243  LUMO = 5.3958997128235
  mo_energy =
[-3.28170098e+01 -1.79715744e+00 -6.04355919e-01 -6.04355919e-01
 -6.04355919e-01  5.39589971e+00  5.39589971e+00  5.39589971e+00
  3.24556665e+01  2.75711331e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453801299612  E_coul = 54.43003396148914
cycle= 5 E= -127.284504051507  delta_E= -2.13e-13  |g|= 2.46e-08  |ddm|= 3.25e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.71453801299612  E_coul = 54.43003396148914
  HOMO = -0.604355917853334  LUMO = 5.39589971376125
  mo_energy =
[-3.28170099e+01 -1.79715744e+00 -6.04355918e-01 -6.04355918e-01
 -6.04355918e-01  5.39589971e+00  5.39589971e+00  5.39589971e+00
  3.24556665e+01  2.75711331e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453801780999  E_coul = 54.430033966302965
Extra cycle  E= -127.284504051507  delta_E= -2.84e-14  |g|= 1.17e-09  |ddm|= 2.44e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 62.82198873532445
E1 = -181.71453801780999  E_coul = 54.430033966302965
init E= -127.284504051507
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604355917514724  LUMO = 5.39589971426469
  mo_energy =
[-3.28170099e+01 -1.79715744e+00 -6.04355918e-01 -6.04355918e-01
 -6.04355918e-01  5.39589971e+00  5.39589971e+00  5.39589971e+00
  3.24556665e+01  2.75711331e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453801715293  E_coul = 54.43003396564592
cycle= 1 E= -127.284504051507  delta_E=    0  |g|= 7.57e-11  |ddm|= 1.32e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.71453801715293  E_coul = 54.43003396564592
  HOMO = -0.604355917554032  LUMO = 5.3958997142
  mo_energy =
[-3.28170099e+01 -1.79715744e+00 -6.04355918e-01 -6.04355918e-01
 -6.04355918e-01  5.39589971e+00  5.39589971e+00  5.39589971e+00
  3.24556665e+01  2.75711331e+02  1.58200366e+03  5.95517892e+03]
E1 = -181.71453801727353  E_coul = 54.43003396576651
Extra cycle  E= -127.284504051507  delta_E=    0  |g|= 1.46e-11  |ddm|= 1.92e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.04161341e+03 9.49830813e-01 9.75526656e+02 1.93957983e+02
 4.37726938e+01 1.18975435e+01 5.34444971e+00 9.00541445e-01]
grad_E = [-2.86950213e-05  3.44907172e-04  5.95669054e-05  4.11023761e-04
 -1.72087349e-03  2.54678277e-03  1.87722072e-03 -6.90815566e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2326.65428685        1
[INPUT] 0    0    [1    /1   ]  0.946404372019       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  136.89137735         1
[INPUT] 0    0    [1    /1   ]  36.0504537128        1
[INPUT] 0    0    [1    /1   ]  10.8058468853        1
[INPUT] 1    0    [1    /1   ]  5.3829995178         1
[INPUT] 1    0    [1    /1   ]  0.904957991509       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2326.6542868483534, 1.0]], [0, [0.9464043720187598, 1.0]], [0, [1e-09, 1.0]], [0, [136.89137734955398, 1.0]], [0, [36.050453712787494, 1.0]], [0, [10.8058468853051, 1.0]], [1, [5.382999517797884, 1.0]], [1, [0.9049579915092264, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2326.65428685]
bas 1, expnt(s) = [0.94640437]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [136.89137735]
bas 4, expnt(s) = [36.05045371]
bas 5, expnt(s) = [10.80584689]
bas 6, expnt(s) = [5.38299952]
bas 7, expnt(s) = [0.90495799]
CPU time:       116.00
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32665429e+03 8.46377125e+02 9.46404372e-01 2.42422306e+00
 1.00000000e-09 4.49277867e-07 1.36891377e+02 1.01110695e+02
 3.60504537e+01 3.71704720e+01 1.08058469e+01 1.50577170e+01
 5.38299952e+00 2.39202007e+01 9.04957992e-01 2.57495662e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825423947432839
cond(S) = 26.37554005603884
E1 = -180.1180979614591  E_coul = 54.372072680323534
init E= -125.746025281136
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649289289666789  LUMO = -8.8080699702388e-06
  mo_energy =
[-3.23877427e+01 -1.82015989e+00 -6.49289290e-01 -6.49289290e-01
 -6.49289290e-01 -8.80806997e-06  5.40532656e+00  5.40532656e+00
  5.40532656e+00  2.71356428e+01  2.03894716e+02  3.19478390e+03]
E1 = -180.96672448639438  E_coul = 54.2905746502019
cycle= 1 E= -126.676149836192  delta_E= -0.93  |g|= 0.171  |ddm|= 0.347
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.298969
diis-c [-0.08938237  1.        ]
  HOMO = -0.610969169572857  LUMO = 1.50030679058627e-09
  mo_energy =
[-3.25762084e+01 -1.78387728e+00 -6.10969170e-01 -6.10969170e-01
 -6.10969170e-01  1.50030679e-09  5.42182633e+00  5.42182633e+00
  5.42182633e+00  2.70353164e+01  2.03666111e+02  3.19439590e+03]
E1 = -181.08573690475515  E_coul = 54.409245843147765
cycle= 2 E= -126.676491061607  delta_E= -0.000341  |g|= 0.0143  |ddm|= 0.0185
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0168669
diis-c [-2.60404123e-04  1.61747029e-02  9.83825297e-01]
  HOMO = -0.603779716253229  LUMO = 1.50028904349801e-09
  mo_energy =
[-3.25476197e+01 -1.77563011e+00 -6.03779716e-01 -6.03779716e-01
 -6.03779716e-01  1.50028904e-09  5.43350915e+00  5.43350915e+00
  5.43350915e+00  2.70584475e+01  2.03697004e+02  3.19443161e+03]
E1 = -181.0652560670001  E_coul = 54.388754688993
cycle= 3 E= -126.676501378007  delta_E= -1.03e-05  |g|= 0.00223  |ddm|= 0.00322
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00266482
diis-c [-2.96950287e-08 -4.43726126e-04  1.34447252e-01  8.65996474e-01]
  HOMO = -0.604756406441291  LUMO = 1.50029761608033e-09
  mo_energy =
[-3.25514683e+01 -1.77673682e+00 -6.04756406e-01 -6.04756406e-01
 -6.04756406e-01  1.50029762e-09  5.43192737e+00  5.43192737e+00
  5.43192737e+00  2.70553547e+01  2.03692922e+02  3.19442703e+03]
E1 = -181.06804827420981  E_coul = 54.391546633734585
cycle= 4 E= -126.676501640475  delta_E= -2.62e-07  |g|= 5.9e-06  |ddm|= 0.000438
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.92363e-06
diis-c [-1.27805063e-12  1.59098277e-05 -5.31322401e-03 -3.47736134e-02
  1.04007093e+00]
  HOMO = -0.604756744042687  LUMO = 1.50029695019332e-09
  mo_energy =
[-3.25514700e+01 -1.77673660e+00 -6.04756744e-01 -6.04756744e-01
 -6.04756744e-01  1.50029695e-09  5.43192687e+00  5.43192687e+00
  5.43192687e+00  2.70553551e+01  2.03692922e+02  3.19442703e+03]
E1 = -181.06805021588477  E_coul = 54.39154857540875
cycle= 5 E= -126.676501640476  delta_E= -7.82e-13  |g|= 8.17e-08  |ddm|= 7.02e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.06805021588477  E_coul = 54.39154857540875
  HOMO = -0.604756709883925  LUMO = 1.50028651410893e-09
  mo_energy =
[-3.25514698e+01 -1.77673655e+00 -6.04756710e-01 -6.04756710e-01
 -6.04756710e-01  1.50028651e-09  5.43192692e+00  5.43192692e+00
  5.43192692e+00  2.70553552e+01  2.03692922e+02  3.19442703e+03]
E1 = -181.06805013511598  E_coul = 54.39154849463988
Extra cycle  E= -126.676501640476  delta_E= -8.53e-14  |g|= 9.33e-09  |ddm|= 1.35e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.32665429e+03 9.46404372e-01 1.00000000e-09 1.36891377e+02
 3.60504537e+01 1.08058469e+01 5.38299952e+00 9.04957992e-01]
E = -126.6765016404761
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2070.11749688        1
[INPUT] 0    0    [1    /1   ]  0.949488169324       1
[INPUT] 0    0    [1    /1   ]  877.973990331        1
[INPUT] 0    0    [1    /1   ]  188.251322633        1
[INPUT] 0    0    [1    /1   ]  43.0004698246        1
[INPUT] 0    0    [1    /1   ]  11.7883738003        1
[INPUT] 1    0    [1    /1   ]  5.34830468733        1
[INPUT] 1    0    [1    /1   ]  0.900983100072       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2070.117496881798, 1.0]], [0, [0.9494881693239582, 1.0]], [0, [877.9739903309062, 1.0]], [0, [188.25132263297138, 1.0]], [0, [43.00046982458585, 1.0]], [0, [11.78837380027933, 1.0]], [1, [5.348304687326466, 1.0]], [1, [0.9009831000719705, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2070.11749688]
bas 1, expnt(s) = [0.94948817]
bas 2, expnt(s) = [877.97399033]
bas 3, expnt(s) = [188.25132263]
bas 4, expnt(s) = [43.00046982]
bas 5, expnt(s) = [11.7883738]
bas 6, expnt(s) = [5.34830469]
bas 7, expnt(s) = [0.9009831]
CPU time:       116.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.07011750e+03 7.75374066e+02 9.49488169e-01 2.43014503e+00
 8.77973990e+02 4.07498732e+02 1.88251323e+02 1.28401043e+02
 4.30004698e+01 4.24248118e+01 1.17883738e+01 1.60733147e+01
 5.34830469e+00 2.37276413e+01 9.00983100e-01 2.56082676e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826697893727689
cond(S) = 54.81301316586537
E1 = -181.3218554558383  E_coul = 54.36719634520288
init E= -126.954659110635
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649302414033217  LUMO = 5.36884965039809
  mo_energy =
[-3.26799661e+01 -1.83860126e+00 -6.49302414e-01 -6.49302414e-01
 -6.49302414e-01  5.36884965e+00  5.36884965e+00  5.36884965e+00
  3.18812034e+01  2.67829129e+02  1.49035381e+03  5.72617049e+03]
E1 = -181.6419815424215  E_coul = 54.34939033979012
cycle= 1 E= -127.292591202631  delta_E= -0.338  |g|= 0.0943  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10653
diis-c [-0.01134862  1.        ]
  HOMO = -0.609301304384148  LUMO = 5.39184137545719
  mo_energy =
[-3.28408904e+01 -1.80295299e+00 -6.09301304e-01 -6.09301304e-01
 -6.09301304e-01  5.39184138e+00  5.39184138e+00  5.39184138e+00
  3.17842171e+01  2.67645285e+02  1.49012679e+03  5.72591762e+03]
E1 = -181.74038671432317  E_coul = 54.44754904471592
cycle= 2 E= -127.292837669607  delta_E= -0.000246  |g|= 0.0114  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139944
diis-c [-7.95069521e-05  9.22328054e-02  9.07767195e-01]
  HOMO = -0.60387333322237  LUMO = 5.40067060343627
  mo_energy =
[-3.28188500e+01 -1.79670666e+00 -6.03873333e-01 -6.03873333e-01
 -6.03873333e-01  5.40067060e+00  5.40067060e+00  5.40067060e+00
  3.18027002e+01  2.67670330e+02  1.49015479e+03  5.72594673e+03]
E1 = -181.72494419406183  E_coul = 54.432099464974826
cycle= 3 E= -127.292844729087  delta_E= -7.06e-06  |g|= 0.000796  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000938415
diis-c [-1.33647653e-08 -3.64732796e-03  4.11899656e-02  9.62457362e-01]
  HOMO = -0.604221753655079  LUMO = 5.40011989876607
  mo_energy =
[-3.28201340e+01 -1.79710434e+00 -6.04221754e-01 -6.04221754e-01
 -6.04221754e-01  5.40011990e+00  5.40011990e+00  5.40011990e+00
  3.18016050e+01  2.67669100e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.7258992723079  E_coul = 54.43305451257683
cycle= 4 E= -127.292844759731  delta_E= -3.06e-08  |g|= 2.6e-06  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.11885e-06
diis-c [-4.75726267e-13  4.78364306e-05 -8.20514186e-04 -1.42074890e-02
  1.01498017e+00]
  HOMO = -0.604220833111195  LUMO = 5.40012134809698
  mo_energy =
[-3.28201306e+01 -1.79710318e+00 -6.04220833e-01 -6.04220833e-01
 -6.04220833e-01  5.40012135e+00  5.40012135e+00  5.40012135e+00
  3.18016083e+01  2.67669104e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.72589692509726  E_coul = 54.43305216536594
cycle= 5 E= -127.292844759731  delta_E= -2.27e-13  |g|= 2.52e-08  |ddm|= 3.88e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.72589692509726  E_coul = 54.43305216536594
  HOMO = -0.604220833287367  LUMO = 5.40012134680206
  mo_energy =
[-3.28201306e+01 -1.79710318e+00 -6.04220833e-01 -6.04220833e-01
 -6.04220833e-01  5.40012135e+00  5.40012135e+00  5.40012135e+00
  3.18016083e+01  2.67669104e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.72589693409404  E_coul = 54.433052174362686
Extra cycle  E= -127.292844759731  delta_E= -4.26e-14  |g|= 1.59e-09  |ddm|= 2.88e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [2.07011750e+03 9.49488169e-01 8.77973990e+02 1.88251323e+02
 4.30004698e+01 1.17883738e+01 5.34830469e+00 9.00983100e-01]
E = -127.29284475973135
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2070.11749688        1
[INPUT] 0    0    [1    /1   ]  0.949488169324       1
[INPUT] 0    0    [1    /1   ]  877.973990331        1
[INPUT] 0    0    [1    /1   ]  188.251322633        1
[INPUT] 0    0    [1    /1   ]  43.0004698246        1
[INPUT] 0    0    [1    /1   ]  11.7883738003        1
[INPUT] 1    0    [1    /1   ]  5.34830468733        1
[INPUT] 1    0    [1    /1   ]  0.900983100072       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2070.117496881798, 1.0]], [0, [0.9494881693239582, 1.0]], [0, [877.9739903309062, 1.0]], [0, [188.25132263297138, 1.0]], [0, [43.00046982458585, 1.0]], [0, [11.78837380027933, 1.0]], [1, [5.348304687326466, 1.0]], [1, [0.9009831000719705, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2070.11749688]
bas 1, expnt(s) = [0.94948817]
bas 2, expnt(s) = [877.97399033]
bas 3, expnt(s) = [188.25132263]
bas 4, expnt(s) = [43.00046982]
bas 5, expnt(s) = [11.7883738]
bas 6, expnt(s) = [5.34830469]
bas 7, expnt(s) = [0.9009831]
CPU time:       117.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.07011750e+03 7.75374066e+02 9.49488169e-01 2.43014503e+00
 8.77973990e+02 4.07498732e+02 1.88251323e+02 1.28401043e+02
 4.30004698e+01 4.24248118e+01 1.17883738e+01 1.60733147e+01
 5.34830469e+00 2.37276413e+01 9.00983100e-01 2.56082676e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826697893727689
cond(S) = 54.81301316586537
E1 = -181.3218554558383  E_coul = 54.36719634520288
init E= -126.954659110635
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649302414033217  LUMO = 5.36884965039809
  mo_energy =
[-3.26799661e+01 -1.83860126e+00 -6.49302414e-01 -6.49302414e-01
 -6.49302414e-01  5.36884965e+00  5.36884965e+00  5.36884965e+00
  3.18812034e+01  2.67829129e+02  1.49035381e+03  5.72617049e+03]
E1 = -181.6419815424215  E_coul = 54.34939033979012
cycle= 1 E= -127.292591202631  delta_E= -0.338  |g|= 0.0943  |ddm|= 0.316
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10653
diis-c [-0.01134862  1.        ]
  HOMO = -0.609301304384148  LUMO = 5.39184137545719
  mo_energy =
[-3.28408904e+01 -1.80295299e+00 -6.09301304e-01 -6.09301304e-01
 -6.09301304e-01  5.39184138e+00  5.39184138e+00  5.39184138e+00
  3.17842171e+01  2.67645285e+02  1.49012679e+03  5.72591762e+03]
E1 = -181.74038671432317  E_coul = 54.44754904471592
cycle= 2 E= -127.292837669607  delta_E= -0.000246  |g|= 0.0114  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0139944
diis-c [-7.95069521e-05  9.22328054e-02  9.07767195e-01]
  HOMO = -0.60387333322237  LUMO = 5.40067060343627
  mo_energy =
[-3.28188500e+01 -1.79670666e+00 -6.03873333e-01 -6.03873333e-01
 -6.03873333e-01  5.40067060e+00  5.40067060e+00  5.40067060e+00
  3.18027002e+01  2.67670330e+02  1.49015479e+03  5.72594673e+03]
E1 = -181.72494419406183  E_coul = 54.432099464974826
cycle= 3 E= -127.292844729087  delta_E= -7.06e-06  |g|= 0.000796  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000938415
diis-c [-1.33647653e-08 -3.64732796e-03  4.11899656e-02  9.62457362e-01]
  HOMO = -0.604221753655079  LUMO = 5.40011989876607
  mo_energy =
[-3.28201340e+01 -1.79710434e+00 -6.04221754e-01 -6.04221754e-01
 -6.04221754e-01  5.40011990e+00  5.40011990e+00  5.40011990e+00
  3.18016050e+01  2.67669100e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.7258992723079  E_coul = 54.43305451257683
cycle= 4 E= -127.292844759731  delta_E= -3.06e-08  |g|= 2.6e-06  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.11885e-06
diis-c [-4.75726267e-13  4.78364306e-05 -8.20514186e-04 -1.42074890e-02
  1.01498017e+00]
  HOMO = -0.604220833111195  LUMO = 5.40012134809698
  mo_energy =
[-3.28201306e+01 -1.79710318e+00 -6.04220833e-01 -6.04220833e-01
 -6.04220833e-01  5.40012135e+00  5.40012135e+00  5.40012135e+00
  3.18016083e+01  2.67669104e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.72589692509726  E_coul = 54.43305216536594
cycle= 5 E= -127.292844759731  delta_E= -2.27e-13  |g|= 2.52e-08  |ddm|= 3.88e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.72589692509726  E_coul = 54.43305216536594
  HOMO = -0.604220833287367  LUMO = 5.40012134680206
  mo_energy =
[-3.28201306e+01 -1.79710318e+00 -6.04220833e-01 -6.04220833e-01
 -6.04220833e-01  5.40012135e+00  5.40012135e+00  5.40012135e+00
  3.18016083e+01  2.67669104e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.72589693409404  E_coul = 54.433052174362686
Extra cycle  E= -127.292844759731  delta_E= -4.26e-14  |g|= 1.59e-09  |ddm|= 2.88e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 54.81301316586537
E1 = -181.72589693409404  E_coul = 54.433052174362686
init E= -127.292844759731
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.604220832689453  LUMO = 5.40012134772211
  mo_energy =
[-3.28201306e+01 -1.79710318e+00 -6.04220833e-01 -6.04220833e-01
 -6.04220833e-01  5.40012135e+00  5.40012135e+00  5.40012135e+00
  3.18016083e+01  2.67669104e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.7258969327244  E_coul = 54.433052172993094
cycle= 1 E= -127.292844759731  delta_E= 4.26e-14  |g|= 1.56e-10  |ddm|= 2.34e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.7258969327244  E_coul = 54.433052172993094
  HOMO = -0.604220832772755  LUMO = 5.40012134758636
  mo_energy =
[-3.28201306e+01 -1.79710318e+00 -6.04220833e-01 -6.04220833e-01
 -6.04220833e-01  5.40012135e+00  5.40012135e+00  5.40012135e+00
  3.18016083e+01  2.67669104e+02  1.49015361e+03  5.72594557e+03]
E1 = -181.72589693296968  E_coul = 54.43305217323843
Extra cycle  E= -127.292844759731  delta_E= 5.68e-14  |g|= 2.92e-11  |ddm|= 3.86e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.07011750e+03 9.49488169e-01 8.77973990e+02 1.88251323e+02
 4.30004698e+01 1.17883738e+01 5.34830469e+00 9.00983100e-01]
grad_E = [-3.20269110e-05  4.54006180e-04  6.06817262e-05  5.74113536e-04
 -2.31557987e-03  3.47032468e-03  2.25994415e-03 -7.26126677e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2326.80293342        1
[INPUT] 0    0    [1    /1   ]  0.945964183309       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  130.771636571        1
[INPUT] 0    0    [1    /1   ]  35.233855608         1
[INPUT] 0    0    [1    /1   ]  10.687665882         1
[INPUT] 1    0    [1    /1   ]  5.38485761061        1
[INPUT] 1    0    [1    /1   ]  0.905183282568       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2326.8029334230887, 1.0]], [0, [0.9459641833085238, 1.0]], [0, [1e-09, 1.0]], [0, [130.77163657076542, 1.0]], [0, [35.23385560795511, 1.0]], [0, [10.687665881965291, 1.0]], [1, [5.3848576106078445, 1.0]], [1, [0.9051832825683842, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2326.80293342]
bas 1, expnt(s) = [0.94596418]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [130.77163657]
bas 4, expnt(s) = [35.23385561]
bas 5, expnt(s) = [10.68766588]
bas 6, expnt(s) = [5.38485761]
bas 7, expnt(s) = [0.90518328]
CPU time:       120.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32680293e+03 8.46417680e+02 9.45964183e-01 2.42337735e+00
 1.00000000e-09 4.49277867e-07 1.30771637e+02 9.77012665e+01
 3.52338556e+01 3.65371907e+01 1.06876659e+01 1.49340354e+01
 5.38485761e+00 2.39305220e+01 9.05183283e-01 2.57575795e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.825337218822957
cond(S) = 27.52483136552227
E1 = -179.9121104086225  E_coul = 54.37140908449491
init E= -125.540701324128
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64929403259747  LUMO = -8.81244651793806e-06
  mo_energy =
[-3.23436439e+01 -1.81757632e+00 -6.49294033e-01 -6.49294033e-01
 -6.49294033e-01 -8.81244652e-06  5.40731345e+00  5.40731345e+00
  5.40731345e+00  2.65633382e+01  1.96002119e+02  3.17324909e+03]
E1 = -180.86228097229554  E_coul = 54.27999397020305
cycle= 1 E= -126.582287002092  delta_E= -1.04  |g|= 0.182  |ddm|= 0.353
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.323759
diis-c [-0.10482009  1.        ]
  HOMO = -0.611316324191791  LUMO = 1.50030364803596e-09
  mo_energy =
[-3.25360435e+01 -1.78136913e+00 -6.11316324e-01 -6.11316324e-01
 -6.11316324e-01  1.50030365e-09  5.42285181e+00  5.42285181e+00
  5.42285181e+00  2.64629661e+01  1.95769035e+02  3.17284172e+03]
E1 = -180.9841008319411  E_coul = 54.4014571378358
cycle= 2 E= -126.582643694105  delta_E= -0.000357  |g|= 0.0147  |ddm|= 0.0189
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0173071
diis-c [-2.78150094e-04  1.41013178e-02  9.85898682e-01]
  HOMO = -0.603933189498701  LUMO = 1.50030368796195e-09
  mo_energy =
[-3.25067538e+01 -1.77290316e+00 -6.03933189e-01 -6.03933189e-01
 -6.03933189e-01  1.50030369e-09  5.43484458e+00  5.43484458e+00
  5.43484458e+00  2.64865385e+01  1.95800475e+02  3.17287807e+03]
E1 = -180.9630487765985  E_coul = 54.38039424797777
cycle= 3 E= -126.582654528621  delta_E= -1.08e-05  |g|= 0.00232  |ddm|= 0.00331
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00278235
diis-c [-2.87306732e-08 -4.05982446e-04  1.36745212e-01  8.63660770e-01]
  HOMO = -0.60495025284472  LUMO = 1.50029182849812e-09
  mo_energy =
[-3.25107651e+01 -1.77405409e+00 -6.04950253e-01 -6.04950253e-01
 -6.04950253e-01  1.50029183e-09  5.43319642e+00  5.43319642e+00
  5.43319642e+00  2.64833374e+01  1.95796230e+02  3.17287328e+03]
E1 = -180.9659651569318  E_coul = 54.38331034211958
cycle= 4 E= -126.582654814812  delta_E= -2.86e-07  |g|= 6.16e-06  |ddm|= 0.000458
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.05756e-06
diis-c [-1.34443859e-12  1.63813615e-05 -5.67086516e-03 -3.63114084e-02
  1.04196589e+00]
  HOMO = -0.604950454180169  LUMO = 1.50029205083483e-09
  mo_energy =
[-3.25107666e+01 -1.77405363e+00 -6.04950454e-01 -6.04950454e-01
 -6.04950454e-01  1.50029205e-09  5.43319610e+00  5.43319610e+00
  5.43319610e+00  2.64833383e+01  1.95796230e+02  3.17287328e+03]
E1 = -180.96596696722236  E_coul = 54.38331215240931
cycle= 5 E= -126.582654814813  delta_E= -8.53e-13  |g|= 8.25e-08  |ddm|= 7.73e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.96596696722236  E_coul = 54.38331215240931
  HOMO = -0.604950418783604  LUMO = 1.50029760195915e-09
  mo_energy =
[-3.25107665e+01 -1.77405359e+00 -6.04950419e-01 -6.04950419e-01
 -6.04950419e-01  1.50029760e-09  5.43319615e+00  5.43319615e+00
  5.43319615e+00  2.64833384e+01  1.95796230e+02  3.17287328e+03]
E1 = -180.9659668819739  E_coul = 54.383312067161036
Extra cycle  E= -126.582654814813  delta_E= 1.71e-13  |g|= 9.9e-09  |ddm|= 1.42e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.32680293e+03 9.45964183e-01 1.00000000e-09 1.30771637e+02
 3.52338556e+01 1.06876659e+01 5.38485761e+00 9.05183283e-01]
E = -126.58265481481288
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2095.78604054        1
[INPUT] 0    0    [1    /1   ]  0.949135770722       1
[INPUT] 0    0    [1    /1   ]  790.176591298        1
[INPUT] 0    0    [1    /1   ]  182.503354027        1
[INPUT] 0    0    [1    /1   ]  42.2238084029        1
[INPUT] 0    0    [1    /1   ]  11.6783030084        1
[INPUT] 1    0    [1    /1   ]  5.35195997965        1
[INPUT] 1    0    [1    /1   ]  0.901403118322       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2095.786040535927, 1.0]], [0, [0.9491357707224147, 1.0]], [0, [790.1765912979156, 1.0]], [0, [182.5033540267508, 1.0]], [0, [42.22380840292278, 1.0]], [0, [11.678303008447926, 1.0]], [1, [5.351959979654604, 1.0]], [1, [0.9014031183216118, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2095.78604054]
bas 1, expnt(s) = [0.94913577]
bas 2, expnt(s) = [790.1765913]
bas 3, expnt(s) = [182.50335403]
bas 4, expnt(s) = [42.2238084]
bas 5, expnt(s) = [11.67830301]
bas 6, expnt(s) = [5.35195998]
bas 7, expnt(s) = [0.90140312]
CPU time:       120.72
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.09578604e+03 7.82573670e+02 9.49135771e-01 2.42946854e+00
 7.90176591e+02 3.76537421e+02 1.82503354e+02 1.25449277e+02
 4.22238084e+01 4.18488064e+01 1.16783030e+01 1.59606226e+01
 5.35195998e+00 2.37479138e+01 9.01403118e-01 2.56231909e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82662094111767
cond(S) = 51.20848859547162
E1 = -181.333725438176  E_coul = 54.369258269279364
init E= -126.964467168897
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649202307169393  LUMO = 5.37286148759522
  mo_energy =
[-3.26832341e+01 -1.83870783e+00 -6.49202307e-01 -6.49202307e-01
 -6.49202307e-01  5.37286149e+00  5.37286149e+00  5.37286149e+00
  3.12232682e+01  2.59751825e+02  1.40032610e+03  5.50790000e+03]
E1 = -181.65305631149178  E_coul = 54.35226225826137
cycle= 1 E= -127.30079405323  delta_E= -0.336  |g|= 0.0952  |ddm|= 0.317
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106069
diis-c [-0.01125056  1.        ]
  HOMO = -0.609173838721878  LUMO = 5.39585236240788
  mo_energy =
[-3.28439471e+01 -1.80294515e+00 -6.09173839e-01 -6.09173839e-01
 -6.09173839e-01  5.39585236e+00  5.39585236e+00  5.39585236e+00
  3.11277497e+01  2.59569271e+02  1.40010122e+03  5.50764864e+03]
E1 = -181.75172620085158  E_coul = 54.45068397471858
cycle= 2 E= -127.301042226133  delta_E= -0.000248  |g|= 0.0115  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140795
diis-c [-7.67127863e-05  9.44364506e-02  9.05563549e-01]
  HOMO = -0.60374671439754  LUMO = 5.40468895374804
  mo_energy =
[-3.28218866e+01 -1.79670533e+00 -6.03746714e-01 -6.03746714e-01
 -6.03746714e-01  5.40468895e+00  5.40468895e+00  5.40468895e+00
  3.11461331e+01  2.59594261e+02  1.40012918e+03  5.50767781e+03]
E1 = -181.7362490133897  E_coul = 54.43519966370038
cycle= 3 E= -127.301049349689  delta_E= -7.12e-06  |g|= 0.000777  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000913671
diis-c [-1.34747971e-08 -3.79700460e-03  3.81418633e-02  9.65655141e-01]
  HOMO = -0.604084714667534  LUMO = 5.40415519704389
  mo_energy =
[-3.28231270e+01 -1.79709087e+00 -6.04084715e-01 -6.04084715e-01
 -6.04084715e-01  5.40415520e+00  5.40415520e+00  5.40415520e+00
  3.11450789e+01  2.59593081e+02  1.40012805e+03  5.50767671e+03]
E1 = -181.73717473603068  E_coul = 54.43612535755783
cycle= 4 E= -127.301049378473  delta_E= -2.88e-08  |g|= 2.89e-06  |ddm|= 0.000145
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.43495e-06
diis-c [-6.02033011e-13  4.73269741e-05 -7.49169331e-04 -1.30540959e-02
  1.01375594e+00]
  HOMO = -0.604083616186426  LUMO = 5.40415692225277
  mo_energy =
[-3.28231231e+01 -1.79708950e+00 -6.04083616e-01 -6.04083616e-01
 -6.04083616e-01  5.40415692e+00  5.40415692e+00  5.40415692e+00
  3.11450827e+01  2.59593086e+02  1.40012806e+03  5.50767671e+03]
E1 = -181.737171906544  E_coul = 54.43612252807092
cycle= 5 E= -127.301049378473  delta_E= -2.42e-13  |g|= 2.63e-08  |ddm|= 4.6e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.737171906544  E_coul = 54.43612252807092
  HOMO = -0.604083617412121  LUMO = 5.40415691926048
  mo_energy =
[-3.28231231e+01 -1.79708950e+00 -6.04083617e-01 -6.04083617e-01
 -6.04083617e-01  5.40415692e+00  5.40415692e+00  5.40415692e+00
  3.11450827e+01  2.59593086e+02  1.40012806e+03  5.50767671e+03]
E1 = -181.737171918828  E_coul = 54.43612254035473
Extra cycle  E= -127.301049378473  delta_E= -1.85e-13  |g|= 1.98e-09  |ddm|= 3.34e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.09578604e+03 9.49135771e-01 7.90176591e+02 1.82503354e+02
 4.22238084e+01 1.16783030e+01 5.35195998e+00 9.01403118e-01]
E = -127.30104937847328
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2095.78604054        1
[INPUT] 0    0    [1    /1   ]  0.949135770722       1
[INPUT] 0    0    [1    /1   ]  790.176591298        1
[INPUT] 0    0    [1    /1   ]  182.503354027        1
[INPUT] 0    0    [1    /1   ]  42.2238084029        1
[INPUT] 0    0    [1    /1   ]  11.6783030084        1
[INPUT] 1    0    [1    /1   ]  5.35195997965        1
[INPUT] 1    0    [1    /1   ]  0.901403118322       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2095.786040535927, 1.0]], [0, [0.9491357707224147, 1.0]], [0, [790.1765912979156, 1.0]], [0, [182.5033540267508, 1.0]], [0, [42.22380840292278, 1.0]], [0, [11.678303008447926, 1.0]], [1, [5.351959979654604, 1.0]], [1, [0.9014031183216118, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2095.78604054]
bas 1, expnt(s) = [0.94913577]
bas 2, expnt(s) = [790.1765913]
bas 3, expnt(s) = [182.50335403]
bas 4, expnt(s) = [42.2238084]
bas 5, expnt(s) = [11.67830301]
bas 6, expnt(s) = [5.35195998]
bas 7, expnt(s) = [0.90140312]
CPU time:       121.30
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.09578604e+03 7.82573670e+02 9.49135771e-01 2.42946854e+00
 7.90176591e+02 3.76537421e+02 1.82503354e+02 1.25449277e+02
 4.22238084e+01 4.18488064e+01 1.16783030e+01 1.59606226e+01
 5.35195998e+00 2.37479138e+01 9.01403118e-01 2.56231909e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.82662094111767
cond(S) = 51.20848859547162
E1 = -181.333725438176  E_coul = 54.369258269279364
init E= -126.964467168897
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649202307169393  LUMO = 5.37286148759522
  mo_energy =
[-3.26832341e+01 -1.83870783e+00 -6.49202307e-01 -6.49202307e-01
 -6.49202307e-01  5.37286149e+00  5.37286149e+00  5.37286149e+00
  3.12232682e+01  2.59751825e+02  1.40032610e+03  5.50790000e+03]
E1 = -181.65305631149178  E_coul = 54.35226225826137
cycle= 1 E= -127.30079405323  delta_E= -0.336  |g|= 0.0952  |ddm|= 0.317
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106069
diis-c [-0.01125056  1.        ]
  HOMO = -0.609173838721878  LUMO = 5.39585236240788
  mo_energy =
[-3.28439471e+01 -1.80294515e+00 -6.09173839e-01 -6.09173839e-01
 -6.09173839e-01  5.39585236e+00  5.39585236e+00  5.39585236e+00
  3.11277497e+01  2.59569271e+02  1.40010122e+03  5.50764864e+03]
E1 = -181.75172620085158  E_coul = 54.45068397471858
cycle= 2 E= -127.301042226133  delta_E= -0.000248  |g|= 0.0115  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0140795
diis-c [-7.67127863e-05  9.44364506e-02  9.05563549e-01]
  HOMO = -0.60374671439754  LUMO = 5.40468895374804
  mo_energy =
[-3.28218866e+01 -1.79670533e+00 -6.03746714e-01 -6.03746714e-01
 -6.03746714e-01  5.40468895e+00  5.40468895e+00  5.40468895e+00
  3.11461331e+01  2.59594261e+02  1.40012918e+03  5.50767781e+03]
E1 = -181.7362490133897  E_coul = 54.43519966370038
cycle= 3 E= -127.301049349689  delta_E= -7.12e-06  |g|= 0.000777  |ddm|= 0.00243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000913671
diis-c [-1.34747971e-08 -3.79700460e-03  3.81418633e-02  9.65655141e-01]
  HOMO = -0.604084714667534  LUMO = 5.40415519704389
  mo_energy =
[-3.28231270e+01 -1.79709087e+00 -6.04084715e-01 -6.04084715e-01
 -6.04084715e-01  5.40415520e+00  5.40415520e+00  5.40415520e+00
  3.11450789e+01  2.59593081e+02  1.40012805e+03  5.50767671e+03]
E1 = -181.73717473603068  E_coul = 54.43612535755783
cycle= 4 E= -127.301049378473  delta_E= -2.88e-08  |g|= 2.89e-06  |ddm|= 0.000145
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.43495e-06
diis-c [-6.02033011e-13  4.73269741e-05 -7.49169331e-04 -1.30540959e-02
  1.01375594e+00]
  HOMO = -0.604083616186426  LUMO = 5.40415692225277
  mo_energy =
[-3.28231231e+01 -1.79708950e+00 -6.04083616e-01 -6.04083616e-01
 -6.04083616e-01  5.40415692e+00  5.40415692e+00  5.40415692e+00
  3.11450827e+01  2.59593086e+02  1.40012806e+03  5.50767671e+03]
E1 = -181.737171906544  E_coul = 54.43612252807092
cycle= 5 E= -127.301049378473  delta_E= -2.42e-13  |g|= 2.63e-08  |ddm|= 4.6e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.737171906544  E_coul = 54.43612252807092
  HOMO = -0.604083617412121  LUMO = 5.40415691926048
  mo_energy =
[-3.28231231e+01 -1.79708950e+00 -6.04083617e-01 -6.04083617e-01
 -6.04083617e-01  5.40415692e+00  5.40415692e+00  5.40415692e+00
  3.11450827e+01  2.59593086e+02  1.40012806e+03  5.50767671e+03]
E1 = -181.737171918828  E_coul = 54.43612254035473
Extra cycle  E= -127.301049378473  delta_E= -1.85e-13  |g|= 1.98e-09  |ddm|= 3.34e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 51.20848859547162
E1 = -181.737171918828  E_coul = 54.43612254035473
init E= -127.301049378473
    CPU time for initialize scf      0.04 sec, wall time      0.04 sec
  HOMO = -0.604083616609683  LUMO = 5.40415692050862
  mo_energy =
[-3.28231231e+01 -1.79708950e+00 -6.04083617e-01 -6.04083617e-01
 -6.04083617e-01  5.40415692e+00  5.40415692e+00  5.40415692e+00
  3.11450827e+01  2.59593086e+02  1.40012806e+03  5.50767671e+03]
E1 = -181.7371719169011  E_coul = 54.43612253842805
cycle= 1 E= -127.301049378473  delta_E= 2.27e-13  |g|= 2.21e-10  |ddm|= 3.19e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.7371719169011  E_coul = 54.43612253842805
  HOMO = -0.604083616727327  LUMO = 5.40415692031725
  mo_energy =
[-3.28231231e+01 -1.79708950e+00 -6.04083617e-01 -6.04083617e-01
 -6.04083617e-01  5.40415692e+00  5.40415692e+00  5.40415692e+00
  3.11450827e+01  2.59593086e+02  1.40012806e+03  5.50767671e+03]
E1 = -181.7371719172447  E_coul = 54.43612253877153
Extra cycle  E= -127.301049378473  delta_E= -1.14e-13  |g|= 4.08e-11  |ddm|= 5.4e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.09578604e+03 9.49135771e-01 7.90176591e+02 1.82503354e+02
 4.22238084e+01 1.16783030e+01 5.35195998e+00 9.01403118e-01]
grad_E = [-3.35978224e-05  6.25642098e-04  5.51921405e-05  7.64972665e-04
 -2.99710350e-03  4.54055098e-03  2.62063294e-03 -7.01936627e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2327.03030163        1
[INPUT] 0    0    [1    /1   ]  0.945120649601       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  121.422856907        1
[INPUT] 0    0    [1    /1   ]  33.8894569822        1
[INPUT] 0    0    [1    /1   ]  10.4894212339        1
[INPUT] 1    0    [1    /1   ]  5.39475161993        1
[INPUT] 1    0    [1    /1   ]  0.906288238056       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2327.0303016256257, 1.0]], [0, [0.9451206496010768, 1.0]], [0, [1e-09, 1.0]], [0, [121.42285690747886, 1.0]], [0, [33.889456982162685, 1.0]], [0, [10.489421233949187, 1.0]], [1, [5.394751619927314, 1.0]], [1, [0.906288238055703, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2327.03030163]
bas 1, expnt(s) = [0.94512065]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [121.42285691]
bas 4, expnt(s) = [33.88945698]
bas 5, expnt(s) = [10.48942123]
bas 6, expnt(s) = [5.39475162]
bas 7, expnt(s) = [0.90628824]
CPU time:       124.16
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32703030e+03 8.46479711e+02 9.45120650e-01 2.42175644e+00
 1.00000000e-09 4.49277867e-07 1.21422857e+02 9.24145514e+01
 3.38894570e+01 3.54865257e+01 1.04894212e+01 1.47257922e+01
 5.39475162e+00 2.39854964e+01 9.06288238e-01 2.57968882e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.824874638999448
cond(S) = 29.546803740243053
E1 = -179.53415545743218  E_coul = 54.37027134834294
init E= -125.163884109089
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.64934585261073  LUMO = -8.83578952228153e-06
  mo_energy =
[-3.22635356e+01 -1.81303323e+00 -6.49345853e-01 -6.49345853e-01
 -6.49345853e-01 -8.83578952e-06  5.41762710e+00  5.41762710e+00
  5.41762710e+00  2.56229377e+01  1.83759986e+02  3.14027948e+03]
E1 = -180.67946633665534  E_coul = 54.26702481747021
cycle= 1 E= -126.412441519185  delta_E= -1.25  |g|= 0.202  |ddm|= 0.363
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.366373
diis-c [-0.13422904  1.        ]
  HOMO = -0.61152874129281  LUMO = 1.50030145746842e-09
  mo_energy =
[-3.24618852e+01 -1.77646626e+00 -6.11528741e-01 -6.11528741e-01
 -6.11528741e-01  1.50030146e-09  5.43199061e+00  5.43199061e+00
  5.43199061e+00  2.55235575e+01  1.83520579e+02  3.13983865e+03]
E1 = -180.80527807619478  E_coul = 54.39245640976673
cycle= 2 E= -126.412821666428  delta_E= -0.00038  |g|= 0.0153  |ddm|= 0.0196
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0179552
diis-c [-3.05286273e-04  1.11745864e-02  9.88825414e-01]
  HOMO = -0.603868396190894  LUMO = 1.50028932169935e-09
  mo_energy =
[-3.24315964e+01 -1.76768921e+00 -6.03868396e-01 -6.03868396e-01
 -6.03868396e-01  1.50028932e-09  5.44443905e+00  5.44443905e+00
  5.44443905e+00  2.55477073e+01  1.83552755e+02  3.13987588e+03]
E1 = -180.78341349560506  E_coul = 54.37058022994046
cycle= 3 E= -126.412833265665  delta_E= -1.16e-05  |g|= 0.00247  |ddm|= 0.00345
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00295546
diis-c [-2.76247593e-08 -3.61118250e-04  1.39879459e-01  8.60481659e-01]
  HOMO = -0.60494368569274  LUMO = 1.50030299143768e-09
  mo_energy =
[-3.24358441e+01 -1.76890299e+00 -6.04943686e-01 -6.04943686e-01
 -6.04943686e-01  1.50030299e-09  5.44269304e+00  5.44269304e+00
  5.44269304e+00  2.55443590e+01  1.83548279e+02  3.13987078e+03]
E1 = -180.78651033680765  E_coul = 54.373676748460156
cycle= 4 E= -126.412833588347  delta_E= -3.23e-07  |g|= 6.88e-06  |ddm|= 0.000486
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.37591e-06
diis-c [-1.37445671e-12  1.73554197e-05 -6.30521648e-03 -3.91277234e-02
  1.04541558e+00]
  HOMO = -0.604943589531395  LUMO = 1.50029566433857e-09
  mo_energy =
[-3.24358451e+01 -1.76890205e+00 -6.04943590e-01 -6.04943590e-01
 -6.04943590e-01  1.50029566e-09  5.44269311e+00  5.44269311e+00
  5.44269311e+00  2.55443607e+01  1.83548278e+02  3.13987078e+03]
E1 = -180.78651177095585  E_coul = 54.373678182607364
cycle= 5 E= -126.412833588348  delta_E= -9.95e-13  |g|= 7.91e-08  |ddm|= 9.22e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -180.78651177095585  E_coul = 54.373678182607364
  HOMO = -0.604943553767137  LUMO = 1.50028944709291e-09
  mo_energy =
[-3.24358450e+01 -1.76890200e+00 -6.04943554e-01 -6.04943554e-01
 -6.04943554e-01  1.50028945e-09  5.44269316e+00  5.44269316e+00
  5.44269316e+00  2.55443608e+01  1.83548278e+02  3.13987078e+03]
E1 = -180.78651168152342  E_coul = 54.37367809317485
Extra cycle  E= -126.412833588349  delta_E= -8.53e-14  |g|= 1.05e-08  |ddm|= 1.46e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.32703030e+03 9.45120650e-01 1.00000000e-09 1.21422857e+02
 3.38894570e+01 1.04894212e+01 5.39475162e+00 9.06288238e-01]
E = -126.41283358834858
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2118.91046664        1
[INPUT] 0    0    [1    /1   ]  0.94873425861        1
[INPUT] 0    0    [1    /1   ]  711.158932168        1
[INPUT] 0    0    [1    /1   ]  176.395304315        1
[INPUT] 0    0    [1    /1   ]  41.3903732608        1
[INPUT] 0    0    [1    /1   ]  11.559414831         1
[INPUT] 1    0    [1    /1   ]  5.35623914368        1
[INPUT] 1    0    [1    /1   ]  0.901891630295       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2118.910466644897, 1.0]], [0, [0.9487342586102809, 1.0]], [0, [711.158932168224, 1.0]], [0, [176.3953043148236, 1.0]], [0, [41.390373260846765, 1.0]], [0, [11.559414830998053, 1.0]], [1, [5.356239143681875, 1.0]], [1, [0.901891630295021, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2118.91046664]
bas 1, expnt(s) = [0.94873426]
bas 2, expnt(s) = [711.15893217]
bas 3, expnt(s) = [176.39530431]
bas 4, expnt(s) = [41.39037326]
bas 5, expnt(s) = [11.55941483]
bas 6, expnt(s) = [5.35623914]
bas 7, expnt(s) = [0.90189163]
CPU time:       124.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.11891047e+03 7.89040834e+02 9.48734259e-01 2.42869770e+00
 7.11158932e+02 3.47928517e+02 1.76395304e+02 1.22287000e+02
 4.13903733e+01 4.12277403e+01 1.15594148e+01 1.58386044e+01
 5.35623914e+00 2.37716508e+01 9.01891630e-01 2.56405501e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826525024632666
cond(S) = 50.17298268342846
E1 = -181.34499963663475  E_coul = 54.371597881346325
init E= -126.973401755288
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649088401825699  LUMO = 5.37754915471789
  mo_energy =
[-3.26861707e+01 -1.83882338e+00 -6.49088402e-01 -6.49088402e-01
 -6.49088402e-01  5.37754915e+00  5.37754915e+00  5.37754915e+00
  3.05206974e+01  2.51226025e+02  1.31176766e+03  5.29961252e+03]
E1 = -181.66428466938078  E_coul = 54.35573560207171
cycle= 1 E= -127.308549067309  delta_E= -0.335  |g|= 0.0962  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10594
diis-c [-0.01122329  1.        ]
  HOMO = -0.609009246600502  LUMO = 5.40056622151138
  mo_energy =
[-3.28466120e+01 -1.80291582e+00 -6.09009247e-01 -6.09009247e-01
 -6.09009247e-01  5.40056622e+00  5.40056622e+00  5.40056622e+00
  3.04268342e+01  2.51044908e+02  1.31154499e+03  5.29936264e+03]
E1 = -181.76318633755554  E_coul = 54.45438746969111
cycle= 2 E= -127.308798867864  delta_E= -0.00025  |g|= 0.0115  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141645
diis-c [-7.44641895e-05  9.61515389e-02  9.03848461e-01]
  HOMO = -0.603582163898414  LUMO = 5.40941285126024
  mo_energy =
[-3.28245255e+01 -1.79668225e+00 -6.03582164e-01 -6.03582164e-01
 -6.03582164e-01  5.40941285e+00  5.40941285e+00  5.40941285e+00
  3.04451100e+01  2.51069840e+02  1.31157292e+03  5.29939187e+03]
E1 = -181.74766789154015  E_coul = 54.43886183810428
cycle= 3 E= -127.308806053436  delta_E= -7.19e-06  |g|= 0.000764  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000896855
diis-c [-1.40747541e-08 -3.91789186e-03  3.57785782e-02  9.68139314e-01]
  HOMO = -0.603912720432793  LUMO = 5.40889120565535
  mo_energy =
[-3.28257342e+01 -1.79705910e+00 -6.03912720e-01 -6.03912720e-01
 -6.03912720e-01  5.40889121e+00  5.40889121e+00  5.40889121e+00
  3.04440868e+01  2.51068697e+02  1.31157183e+03  5.29939082e+03]
E1 = -181.74857256732727  E_coul = 54.43976648640703
cycle= 4 E= -127.30880608092  delta_E= -2.75e-08  |g|= 3.23e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.82668e-06
diis-c [-7.57788648e-13  4.50110660e-05 -6.93618516e-04 -1.17568935e-02
  1.01240550e+00]
  HOMO = -0.603911441165718  LUMO = 5.40889321566604
  mo_energy =
[-3.28257296e+01 -1.79705754e+00 -6.03911441e-01 -6.03911441e-01
 -6.03911441e-01  5.40889322e+00  5.40889322e+00  5.40889322e+00
  3.04440911e+01  2.51068702e+02  1.31157184e+03  5.29939082e+03]
E1 = -181.74856923639197  E_coul = 54.43976315547132
cycle= 5 E= -127.308806080921  delta_E= -3.98e-13  |g|= 2.8e-08  |ddm|= 5.37e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.74856923639197  E_coul = 54.43976315547132
  HOMO = -0.603911442676899  LUMO = 5.40889321213012
  mo_energy =
[-3.28257296e+01 -1.79705753e+00 -6.03911443e-01 -6.03911443e-01
 -6.03911443e-01  5.40889321e+00  5.40889321e+00  5.40889321e+00
  3.04440911e+01  2.51068702e+02  1.31157184e+03  5.29939082e+03]
E1 = -181.74856925000304  E_coul = 54.43976316908249
Extra cycle  E= -127.308806080921  delta_E= 8.53e-14  |g|= 2.18e-09  |ddm|= 3.66e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.11891047e+03 9.48734259e-01 7.11158932e+02 1.76395304e+02
 4.13903733e+01 1.15594148e+01 5.35623914e+00 9.01891630e-01]
E = -127.30880608092056
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2118.91046664        1
[INPUT] 0    0    [1    /1   ]  0.94873425861        1
[INPUT] 0    0    [1    /1   ]  711.158932168        1
[INPUT] 0    0    [1    /1   ]  176.395304315        1
[INPUT] 0    0    [1    /1   ]  41.3903732608        1
[INPUT] 0    0    [1    /1   ]  11.559414831         1
[INPUT] 1    0    [1    /1   ]  5.35623914368        1
[INPUT] 1    0    [1    /1   ]  0.901891630295       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2118.910466644897, 1.0]], [0, [0.9487342586102809, 1.0]], [0, [711.158932168224, 1.0]], [0, [176.3953043148236, 1.0]], [0, [41.390373260846765, 1.0]], [0, [11.559414830998053, 1.0]], [1, [5.356239143681875, 1.0]], [1, [0.901891630295021, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2118.91046664]
bas 1, expnt(s) = [0.94873426]
bas 2, expnt(s) = [711.15893217]
bas 3, expnt(s) = [176.39530431]
bas 4, expnt(s) = [41.39037326]
bas 5, expnt(s) = [11.55941483]
bas 6, expnt(s) = [5.35623914]
bas 7, expnt(s) = [0.90189163]
CPU time:       125.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.11891047e+03 7.89040834e+02 9.48734259e-01 2.42869770e+00
 7.11158932e+02 3.47928517e+02 1.76395304e+02 1.22287000e+02
 4.13903733e+01 4.12277403e+01 1.15594148e+01 1.58386044e+01
 5.35623914e+00 2.37716508e+01 9.01891630e-01 2.56405501e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826525024632666
cond(S) = 50.17298268342846
E1 = -181.34499963663475  E_coul = 54.371597881346325
init E= -126.973401755288
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.649088401825699  LUMO = 5.37754915471789
  mo_energy =
[-3.26861707e+01 -1.83882338e+00 -6.49088402e-01 -6.49088402e-01
 -6.49088402e-01  5.37754915e+00  5.37754915e+00  5.37754915e+00
  3.05206974e+01  2.51226025e+02  1.31176766e+03  5.29961252e+03]
E1 = -181.66428466938078  E_coul = 54.35573560207171
cycle= 1 E= -127.308549067309  delta_E= -0.335  |g|= 0.0962  |ddm|= 0.319
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10594
diis-c [-0.01122329  1.        ]
  HOMO = -0.609009246600502  LUMO = 5.40056622151138
  mo_energy =
[-3.28466120e+01 -1.80291582e+00 -6.09009247e-01 -6.09009247e-01
 -6.09009247e-01  5.40056622e+00  5.40056622e+00  5.40056622e+00
  3.04268342e+01  2.51044908e+02  1.31154499e+03  5.29936264e+03]
E1 = -181.76318633755554  E_coul = 54.45438746969111
cycle= 2 E= -127.308798867864  delta_E= -0.00025  |g|= 0.0115  |ddm|= 0.0153
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0141645
diis-c [-7.44641895e-05  9.61515389e-02  9.03848461e-01]
  HOMO = -0.603582163898414  LUMO = 5.40941285126024
  mo_energy =
[-3.28245255e+01 -1.79668225e+00 -6.03582164e-01 -6.03582164e-01
 -6.03582164e-01  5.40941285e+00  5.40941285e+00  5.40941285e+00
  3.04451100e+01  2.51069840e+02  1.31157292e+03  5.29939187e+03]
E1 = -181.74766789154015  E_coul = 54.43886183810428
cycle= 3 E= -127.308806053436  delta_E= -7.19e-06  |g|= 0.000764  |ddm|= 0.00244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000896855
diis-c [-1.40747541e-08 -3.91789186e-03  3.57785782e-02  9.68139314e-01]
  HOMO = -0.603912720432793  LUMO = 5.40889120565535
  mo_energy =
[-3.28257342e+01 -1.79705910e+00 -6.03912720e-01 -6.03912720e-01
 -6.03912720e-01  5.40889121e+00  5.40889121e+00  5.40889121e+00
  3.04440868e+01  2.51068697e+02  1.31157183e+03  5.29939082e+03]
E1 = -181.74857256732727  E_coul = 54.43976648640703
cycle= 4 E= -127.30880608092  delta_E= -2.75e-08  |g|= 3.23e-06  |ddm|= 0.000141
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.82668e-06
diis-c [-7.57788648e-13  4.50110660e-05 -6.93618516e-04 -1.17568935e-02
  1.01240550e+00]
  HOMO = -0.603911441165718  LUMO = 5.40889321566604
  mo_energy =
[-3.28257296e+01 -1.79705754e+00 -6.03911441e-01 -6.03911441e-01
 -6.03911441e-01  5.40889322e+00  5.40889322e+00  5.40889322e+00
  3.04440911e+01  2.51068702e+02  1.31157184e+03  5.29939082e+03]
E1 = -181.74856923639197  E_coul = 54.43976315547132
cycle= 5 E= -127.308806080921  delta_E= -3.98e-13  |g|= 2.8e-08  |ddm|= 5.37e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.74856923639197  E_coul = 54.43976315547132
  HOMO = -0.603911442676899  LUMO = 5.40889321213012
  mo_energy =
[-3.28257296e+01 -1.79705753e+00 -6.03911443e-01 -6.03911443e-01
 -6.03911443e-01  5.40889321e+00  5.40889321e+00  5.40889321e+00
  3.04440911e+01  2.51068702e+02  1.31157184e+03  5.29939082e+03]
E1 = -181.74856925000304  E_coul = 54.43976316908249
Extra cycle  E= -127.308806080921  delta_E= 8.53e-14  |g|= 2.18e-09  |ddm|= 3.66e-09
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 50.17298268342846
E1 = -181.74856925000304  E_coul = 54.43976316908249
init E= -127.308806080921
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.603911441789869  LUMO = 5.40889321351196
  mo_energy =
[-3.28257296e+01 -1.79705753e+00 -6.03911442e-01 -6.03911442e-01
 -6.03911442e-01  5.40889321e+00  5.40889321e+00  5.40889321e+00
  3.04440911e+01  2.51068702e+02  1.31157184e+03  5.29939082e+03]
E1 = -181.7485692478612  E_coul = 54.43976316694068
cycle= 1 E= -127.308806080921  delta_E= 2.84e-14  |g|= 2.46e-10  |ddm|= 3.56e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.7485692478612  E_coul = 54.43976316694068
  HOMO = -0.603911441920636  LUMO = 5.40889321329904
  mo_energy =
[-3.28257296e+01 -1.79705753e+00 -6.03911442e-01 -6.03911442e-01
 -6.03911442e-01  5.40889321e+00  5.40889321e+00  5.40889321e+00
  3.04440911e+01  2.51068702e+02  1.31157184e+03  5.29939082e+03]
E1 = -181.74856924824388  E_coul = 54.43976316732326
Extra cycle  E= -127.308806080921  delta_E= -8.53e-14  |g|= 4.58e-11  |ddm|= 6.01e-11
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.11891047e+03 9.48734259e-01 7.11158932e+02 1.76395304e+02
 4.13903733e+01 1.15594148e+01 5.35623914e+00 9.01891630e-01]
grad_E = [-3.32420454e-05  9.05005062e-04  4.11374903e-05  9.75842571e-04
 -3.76192812e-03  5.74754918e-03  3.04401033e-03 -6.62124517e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2327.81179159        1
[INPUT] 0    0    [1    /1   ]  0.942762605848       1
[INPUT] 0    0    [1    /1   ]  1.06319930637e-09      1
[INPUT] 0    0    [1    /1   ]  89.250814675         1
[INPUT] 0    0    [1    /1   ]  29.5837761306        1
[INPUT] 0    0    [1    /1   ]  9.866106815          1
[INPUT] 1    0    [1    /1   ]  5.40643572881        1
[INPUT] 1    0    [1    /1   ]  0.907682072998       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2327.811791585119, 1.0]], [0, [0.9427626058477504, 1.0]], [0, [1.0631993063725531e-09, 1.0]], [0, [89.25081467502889, 1.0]], [0, [29.58377613064367, 1.0]], [0, [9.866106814999945, 1.0]], [1, [5.406435728809378, 1.0]], [1, [0.9076820729984818, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2327.81179159]
bas 1, expnt(s) = [0.94276261]
bas 2, expnt(s) = [1.06319931e-09]
bas 3, expnt(s) = [89.25081468]
bas 4, expnt(s) = [29.58377613]
bas 5, expnt(s) = [9.86610681]
bas 6, expnt(s) = [5.40643573]
bas 7, expnt(s) = [0.90768207]
CPU time:       128.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32781179e+03 8.46692908e+02 9.42762606e-01 2.41722338e+00
 1.06319931e-09 4.70409450e-07 8.92508147e+01 7.33625073e+01
 2.95837761e+01 3.20483172e+01 9.86610681e+00 1.40645028e+01
 5.40643573e+00 2.40504495e+01 9.07682073e-01 2.58464910e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.823323082659854
cond(S) = 41.796579699568305
E1 = -177.15065209169813  E_coul = 54.33700862412184
init E= -122.813643467576
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.650623488538618  LUMO = -9.19140381099213e-06
  mo_energy =
[-3.18042623e+01 -1.78711605e+00 -6.50623489e-01 -6.50623489e-01
 -6.50623489e-01 -9.19140381e-06  5.42824403e+00  5.42824403e+00
  5.42824403e+00  2.28580617e+01  1.44137917e+02  3.03096046e+03]
E1 = -179.57316699732547  E_coul = 54.15422110138535
cycle= 1 E= -125.41894589594  delta_E= -2.61  |g|= 0.296  |ddm|= 0.426
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.579676
diis-c [-0.3360238  1.       ]
  HOMO = -0.614681076160791  LUMO = 1.59513668773684e-09
  mo_energy =
[-3.20384050e+01 -1.75023116e+00 -6.14681076e-01 -6.14681076e-01
 -6.14681076e-01  1.59513669e-09  5.43552479e+00  5.43552479e+00
  5.43552479e+00  2.27590297e+01  1.43867190e+02  3.03033612e+03]
E1 = -179.72029406582038  E_coul = 54.300821336704644
cycle= 2 E= -125.419472729116  delta_E= -0.000527  |g|= 0.0186  |ddm|= 0.0231
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.021372
diis-c [-4.50365240e-04  4.34764262e-03  9.95652357e-01]
  HOMO = -0.605573302089716  LUMO = 1.59513084965996e-09
  mo_energy =
[-3.20031317e+01 -1.73980273e+00 -6.05573302e-01 -6.05573302e-01
 -6.05573302e-01  1.59513085e-09  5.45025508e+00  5.45025508e+00
  5.45025508e+00  2.27864430e+01  1.43903136e+02  3.03037720e+03]
E1 = -179.69428609277077  E_coul = 54.27479726041011
cycle= 3 E= -125.419488832361  delta_E= -1.61e-05  |g|= 0.0031  |ddm|= 0.00415
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00371092
diis-c [-4.23250255e-08 -2.69165356e-04  1.47135236e-01  8.53133929e-01]
  HOMO = -0.606906244291062  LUMO = 1.59513093443896e-09
  mo_energy =
[-3.20084052e+01 -1.74129153e+00 -6.06906244e-01 -6.06906244e-01
 -6.06906244e-01  1.59513093e-09  5.44808445e+00  5.44808445e+00
  5.44808445e+00  2.27824606e+01  1.43897704e+02  3.03037076e+03]
E1 = -179.69819426726573  E_coul = 54.27870492323528
cycle= 4 E= -125.41948934403  delta_E= -5.12e-07  |g|= 1.61e-05  |ddm|= 0.000618
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.25745e-05
diis-c [-4.48666051e-12  2.00805986e-05 -8.24832244e-03 -4.62907039e-02
  1.05451895e+00]
  HOMO = -0.606903080867855  LUMO = 1.59513237893182e-09
  mo_energy =
[-3.20083989e+01 -1.74128609e+00 -6.06903081e-01 -6.06903081e-01
 -6.06903081e-01  1.59513238e-09  5.44808886e+00  5.44808886e+00
  5.44808886e+00  2.27824718e+01  1.43897708e+02  3.03037076e+03]
E1 = -179.6981900669353  E_coul = 54.27870072289991
cycle= 5 E= -125.419489344035  delta_E= -4.93e-12  |g|= 9.11e-08  |ddm|= 2.37e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -179.6981900669353  E_coul = 54.27870072289991
  HOMO = -0.606903094408535  LUMO = 1.59514037252614e-09
  mo_energy =
[-3.20083989e+01 -1.74128611e+00 -6.06903094e-01 -6.06903094e-01
 -6.06903094e-01  1.59514037e-09  5.44808883e+00  5.44808883e+00
  5.44808883e+00  2.27824717e+01  1.43897708e+02  3.03037076e+03]
E1 = -179.69819008667255  E_coul = 54.27870074263718
Extra cycle  E= -125.419489344035  delta_E=    0  |g|= 3.16e-09  |ddm|= 5.37e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.32781179e+03 9.42762606e-01 1.06319931e-09 8.92508147e+01
 2.95837761e+01 9.86610681e+00 5.40643573e+00 9.07682073e-01]
E = -125.41948934403538
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2139.80059914        1
[INPUT] 0    0    [1    /1   ]  0.948137093334       1
[INPUT] 0    0    [1    /1   ]  640.043038952        1
[INPUT] 0    0    [1    /1   ]  167.680855351        1
[INPUT] 0    0    [1    /1   ]  40.2097135478        1
[INPUT] 0    0    [1    /1   ]  11.3900840294        1
[INPUT] 1    0    [1    /1   ]  5.36125880219        1
[INPUT] 1    0    [1    /1   ]  0.902470674565       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2139.800599138919, 1.0]], [0, [0.9481370933340278, 1.0]], [0, [640.0430389515079, 1.0]], [0, [167.68085535084413, 1.0]], [0, [40.20971354782645, 1.0]], [0, [11.390084029398242, 1.0]], [1, [5.361258802194625, 1.0]], [1, [0.902470674565367, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2139.80059914]
bas 1, expnt(s) = [0.94813709]
bas 2, expnt(s) = [640.04303895]
bas 3, expnt(s) = [167.68085535]
bas 4, expnt(s) = [40.20971355]
bas 5, expnt(s) = [11.39008403]
bas 6, expnt(s) = [5.3612588]
bas 7, expnt(s) = [0.90247067]
CPU time:       128.99
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.13980060e+03 7.94867981e+02 9.48137093e-01 2.42755108e+00
 6.40043039e+02 3.21493286e+02 1.67680855e+02 1.17727422e+02
 4.02097135e+01 4.03425419e+01 1.13900840e+01 1.56642722e+01
 5.36125880e+00 2.37995014e+01 9.02470675e-01 2.56611293e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826437143518518
cond(S) = 50.416609818693864
E1 = -181.3592715503849  E_coul = 54.374847096424276
init E= -126.984424453961
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648920707742619  LUMO = 5.38312040868113
  mo_energy =
[-3.26892333e+01 -1.83891643e+00 -6.48920708e-01 -6.48920708e-01
 -6.48920708e-01  5.38312041e+00  5.38312041e+00  5.38312041e+00
  2.95495294e+01  2.39624659e+02  1.21781187e+03  5.09246669e+03]
E1 = -181.67640553890016  E_coul = 54.35932722843426
cycle= 1 E= -127.317078310466  delta_E= -0.333  |g|= 0.0972  |ddm|= 0.321
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106481
diis-c [-0.01133826  1.        ]
  HOMO = -0.608856493496332  LUMO = 5.4060377112017
  mo_energy =
[-3.28495726e+01 -1.80288432e+00 -6.08856493e-01 -6.08856493e-01
 -6.08856493e-01  5.40603771e+00  5.40603771e+00  5.40603771e+00
  2.94577528e+01  2.39445143e+02  1.21759127e+03  5.09221785e+03]
E1 = -181.77592628295005  E_coul = 54.45859490311662
cycle= 2 E= -127.317331379833  delta_E= -0.000253  |g|= 0.0116  |ddm|= 0.0154
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0143178
diis-c [-7.30589398e-05  9.76541402e-02  9.02345860e-01]
  HOMO = -0.603406869014398  LUMO = 5.41493298699517
  mo_energy =
[-3.28273669e+01 -1.79663353e+00 -6.03406869e-01 -6.03406869e-01
 -6.03406869e-01  5.41493299e+00  5.41493299e+00  5.41493299e+00
  2.94759425e+01  2.39470075e+02  1.21761927e+03  5.09224726e+03]
E1 = -181.7602842247394  E_coul = 54.442945527950826
cycle= 3 E= -127.317338696789  delta_E= -7.32e-06  |g|= 0.00076  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000889973
diis-c [-1.51502423e-08 -4.00234105e-03  3.40195958e-02  9.69982745e-01]
  HOMO = -0.603733333367651  LUMO = 5.41441801677959
  mo_energy =
[-3.28285576e+01 -1.79700547e+00 -6.03733333e-01 -6.03733333e-01
 -6.03733333e-01  5.41441802e+00  5.41441802e+00  5.41441802e+00
  2.94749411e+01  2.39468953e+02  1.21761820e+03  5.09224624e+03]
E1 = -181.76117790256714  E_coul = 54.44383917896456
cycle= 4 E= -127.317338723603  delta_E= -2.68e-08  |g|= 3.58e-06  |ddm|= 0.00014
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.25469e-06
diis-c [-9.03586629e-13  4.17937108e-05 -6.65547121e-04 -1.07191643e-02
  1.01134292e+00]
  HOMO = -0.603731889915785  LUMO = 5.41442029164384
  mo_energy =
[-3.28285523e+01 -1.79700371e+00 -6.03731890e-01 -6.03731890e-01
 -6.03731890e-01  5.41442029e+00  5.41442029e+00  5.41442029e+00
  2.94749459e+01  2.39468959e+02  1.21761821e+03  5.09224624e+03]
E1 = -181.76117409582866  E_coul = 54.443835372225536
cycle= 5 E= -127.317338723603  delta_E= -5.54e-13  |g|= 3.02e-08  |ddm|= 6.12e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.76117409582866  E_coul = 54.443835372225536
  HOMO = -0.603731890712071  LUMO = 5.41442028908785
  mo_energy =
[-3.28285523e+01 -1.79700371e+00 -6.03731891e-01 -6.03731891e-01
 -6.03731891e-01  5.41442029e+00  5.41442029e+00  5.41442029e+00
  2.94749459e+01  2.39468959e+02  1.21761821e+03  5.09224624e+03]
E1 = -181.76117410821374  E_coul = 54.443835384610594
Extra cycle  E= -127.317338723603  delta_E= -1.42e-14  |g|= 2.15e-09  |ddm|= 3.83e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.13980060e+03 9.48137093e-01 6.40043039e+02 1.67680855e+02
 4.02097135e+01 1.13900840e+01 5.36125880e+00 9.02470675e-01]
E = -127.31733872360314
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2139.80059914        1
[INPUT] 0    0    [1    /1   ]  0.948137093334       1
[INPUT] 0    0    [1    /1   ]  640.043038952        1
[INPUT] 0    0    [1    /1   ]  167.680855351        1
[INPUT] 0    0    [1    /1   ]  40.2097135478        1
[INPUT] 0    0    [1    /1   ]  11.3900840294        1
[INPUT] 1    0    [1    /1   ]  5.36125880219        1
[INPUT] 1    0    [1    /1   ]  0.902470674565       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2139.800599138919, 1.0]], [0, [0.9481370933340278, 1.0]], [0, [640.0430389515079, 1.0]], [0, [167.68085535084413, 1.0]], [0, [40.20971354782645, 1.0]], [0, [11.390084029398242, 1.0]], [1, [5.361258802194625, 1.0]], [1, [0.902470674565367, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2139.80059914]
bas 1, expnt(s) = [0.94813709]
bas 2, expnt(s) = [640.04303895]
bas 3, expnt(s) = [167.68085535]
bas 4, expnt(s) = [40.20971355]
bas 5, expnt(s) = [11.39008403]
bas 6, expnt(s) = [5.3612588]
bas 7, expnt(s) = [0.90247067]
CPU time:       129.67
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.13980060e+03 7.94867981e+02 9.48137093e-01 2.42755108e+00
 6.40043039e+02 3.21493286e+02 1.67680855e+02 1.17727422e+02
 4.02097135e+01 4.03425419e+01 1.13900840e+01 1.56642722e+01
 5.36125880e+00 2.37995014e+01 9.02470675e-01 2.56611293e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826437143518518
cond(S) = 50.416609818693864
E1 = -181.3592715503849  E_coul = 54.374847096424276
init E= -126.984424453961
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648920707742619  LUMO = 5.38312040868113
  mo_energy =
[-3.26892333e+01 -1.83891643e+00 -6.48920708e-01 -6.48920708e-01
 -6.48920708e-01  5.38312041e+00  5.38312041e+00  5.38312041e+00
  2.95495294e+01  2.39624659e+02  1.21781187e+03  5.09246669e+03]
E1 = -181.67640553890016  E_coul = 54.35932722843426
cycle= 1 E= -127.317078310466  delta_E= -0.333  |g|= 0.0972  |ddm|= 0.321
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106481
diis-c [-0.01133826  1.        ]
  HOMO = -0.608856493496332  LUMO = 5.4060377112017
  mo_energy =
[-3.28495726e+01 -1.80288432e+00 -6.08856493e-01 -6.08856493e-01
 -6.08856493e-01  5.40603771e+00  5.40603771e+00  5.40603771e+00
  2.94577528e+01  2.39445143e+02  1.21759127e+03  5.09221785e+03]
E1 = -181.77592628295005  E_coul = 54.45859490311662
cycle= 2 E= -127.317331379833  delta_E= -0.000253  |g|= 0.0116  |ddm|= 0.0154
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0143178
diis-c [-7.30589398e-05  9.76541402e-02  9.02345860e-01]
  HOMO = -0.603406869014398  LUMO = 5.41493298699517
  mo_energy =
[-3.28273669e+01 -1.79663353e+00 -6.03406869e-01 -6.03406869e-01
 -6.03406869e-01  5.41493299e+00  5.41493299e+00  5.41493299e+00
  2.94759425e+01  2.39470075e+02  1.21761927e+03  5.09224726e+03]
E1 = -181.7602842247394  E_coul = 54.442945527950826
cycle= 3 E= -127.317338696789  delta_E= -7.32e-06  |g|= 0.00076  |ddm|= 0.00246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000889973
diis-c [-1.51502423e-08 -4.00234105e-03  3.40195958e-02  9.69982745e-01]
  HOMO = -0.603733333367651  LUMO = 5.41441801677959
  mo_energy =
[-3.28285576e+01 -1.79700547e+00 -6.03733333e-01 -6.03733333e-01
 -6.03733333e-01  5.41441802e+00  5.41441802e+00  5.41441802e+00
  2.94749411e+01  2.39468953e+02  1.21761820e+03  5.09224624e+03]
E1 = -181.76117790256714  E_coul = 54.44383917896456
cycle= 4 E= -127.317338723603  delta_E= -2.68e-08  |g|= 3.58e-06  |ddm|= 0.00014
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.25469e-06
diis-c [-9.03586629e-13  4.17937108e-05 -6.65547121e-04 -1.07191643e-02
  1.01134292e+00]
  HOMO = -0.603731889915785  LUMO = 5.41442029164384
  mo_energy =
[-3.28285523e+01 -1.79700371e+00 -6.03731890e-01 -6.03731890e-01
 -6.03731890e-01  5.41442029e+00  5.41442029e+00  5.41442029e+00
  2.94749459e+01  2.39468959e+02  1.21761821e+03  5.09224624e+03]
E1 = -181.76117409582866  E_coul = 54.443835372225536
cycle= 5 E= -127.317338723603  delta_E= -5.54e-13  |g|= 3.02e-08  |ddm|= 6.12e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.76117409582866  E_coul = 54.443835372225536
  HOMO = -0.603731890712071  LUMO = 5.41442028908785
  mo_energy =
[-3.28285523e+01 -1.79700371e+00 -6.03731891e-01 -6.03731891e-01
 -6.03731891e-01  5.41442029e+00  5.41442029e+00  5.41442029e+00
  2.94749459e+01  2.39468959e+02  1.21761821e+03  5.09224624e+03]
E1 = -181.76117410821374  E_coul = 54.443835384610594
Extra cycle  E= -127.317338723603  delta_E= -1.42e-14  |g|= 2.15e-09  |ddm|= 3.83e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 50.416609818693864
E1 = -181.76117410821374  E_coul = 54.443835384610594
init E= -127.317338723603
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.603731889896249  LUMO = 5.41442029034937
  mo_energy =
[-3.28285523e+01 -1.79700371e+00 -6.03731890e-01 -6.03731890e-01
 -6.03731890e-01  5.41442029e+00  5.41442029e+00  5.41442029e+00
  2.94749459e+01  2.39468959e+02  1.21761821e+03  5.09224624e+03]
E1 = -181.761174106306  E_coul = 54.443835382702936
cycle= 1 E= -127.317338723603  delta_E= 8.53e-14  |g|= 2.19e-10  |ddm|= 3.3e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.761174106306  E_coul = 54.443835382702936
  HOMO = -0.603731890012276  LUMO = 5.41442029015975
  mo_energy =
[-3.28285523e+01 -1.79700371e+00 -6.03731890e-01 -6.03731890e-01
 -6.03731890e-01  5.41442029e+00  5.41442029e+00  5.41442029e+00
  2.94749459e+01  2.39468959e+02  1.21761821e+03  5.09224624e+03]
E1 = -181.76117410664997  E_coul = 54.4438353830469
Extra cycle  E= -127.317338723603  delta_E= -1.42e-14  |g|= 4.13e-11  |ddm|= 5.41e-11
    CPU time for scf_cycle      0.14 sec, wall time      0.15 sec
exp = [2.13980060e+03 9.48137093e-01 6.40043039e+02 1.67680855e+02
 4.02097135e+01 1.13900840e+01 5.36125880e+00 9.02470675e-01]
grad_E = [-3.17702600e-05  1.47818374e-03  2.31998389e-05  1.13833609e-03
 -4.30022285e-03  6.69845944e-03  3.52285409e-03 -5.68381938e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2328.81528703        1
[INPUT] 0    0    [1    /1   ]  0.940779051524       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  47.8820002259        1
[INPUT] 0    0    [1    /1   ]  24.5158773423        1
[INPUT] 0    0    [1    /1   ]  9.15599405547        1
[INPUT] 1    0    [1    /1   ]  5.39905845069        1
[INPUT] 1    0    [1    /1   ]  0.907078392395       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2328.815287029291, 1.0]], [0, [0.9407790515239004, 1.0]], [0, [1e-09, 1.0]], [0, [47.88200022587098, 1.0]], [0, [24.51587734228852, 1.0]], [0, [9.1559940554657, 1.0]], [1, [5.399058450688801, 1.0]], [1, [0.9070783923948509, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2328.81528703]
bas 1, expnt(s) = [0.94077905]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [47.88200023]
bas 4, expnt(s) = [24.51587734]
bas 5, expnt(s) = [9.15599406]
bas 6, expnt(s) = [5.39905845]
bas 7, expnt(s) = [0.90707839]
CPU time:       133.06
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32881529e+03 8.46966644e+02 9.40779052e-01 2.41340803e+00
 1.00000000e-09 4.49277867e-07 4.78820002e+01 4.59879698e+01
 2.45158773e+01 2.78356011e+01 9.15599406e+00 1.32982395e+01
 5.39905845e+00 2.40094344e+01 9.07078392e-01 2.58250053e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.814886992920242
cond(S) = 125.59232717381609
E1 = -168.12781398911642  E_coul = 54.073276174824684
init E= -114.054537814292
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.66266760647305  LUMO = -9.33979259507011e-06
  mo_energy =
[-3.03567924e+01 -1.70742827e+00 -6.62667606e-01 -6.62667606e-01
 -6.62667606e-01 -9.33979260e-06  5.40331960e+00  5.40331960e+00
  5.40331960e+00  1.99697846e+01  9.74666958e+01  2.90243618e+03]
E1 = -175.93141499914847  E_coul = 53.74392962772027
cycle= 1 E= -122.187485371428  delta_E= -8.13  |g|= 0.505  |ddm|= 0.713
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.09866
diis-c [-1.20705001  1.        ]
  HOMO = -0.625896259038429  LUMO = 1.50032674855653e-09
  mo_energy =
[-3.06808405e+01 -1.66382324e+00 -6.25896259e-01 -6.25896259e-01
 -6.25896259e-01  1.50032675e-09  5.39935568e+00  5.39935568e+00
  5.39935568e+00  1.98881769e+01  9.71678072e+01  2.90134615e+03]
E1 = -176.11800582006535  E_coul = 53.9295345836765
cycle= 2 E= -122.188471236389  delta_E= -0.000986  |g|= 0.0256  |ddm|= 0.0312
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0280064
diis-c [-7.83823999e-04 -6.67385715e-04  1.00066739e+00]
  HOMO = -0.613988011934764  LUMO = 1.50032538455373e-09
  mo_energy =
[-3.06373486e+01 -1.65011003e+00 -6.13988012e-01 -6.13988012e-01
 -6.13988012e-01  1.50032538e-09  5.41820806e+00  5.41820806e+00
  5.41820806e+00  1.99216869e+01  9.72094415e+01  2.90138905e+03]
E1 = -176.08461623295503  E_coul = 53.89611835670225
cycle= 3 E= -122.188497876253  delta_E= -2.66e-05  |g|= 0.0042  |ddm|= 0.00588
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00497007
diis-c [-5.44329376e-07 -3.13849468e-04  1.49495226e-01  8.50818624e-01]
  HOMO = -0.615766837292718  LUMO = 1.50032680497175e-09
  mo_energy =
[-3.06443264e+01 -1.65204198e+00 -6.15766837e-01 -6.15766837e-01
 -6.15766837e-01  1.50032680e-09  5.41531496e+00  5.41531496e+00
  5.41531496e+00  1.99167596e+01  9.72026625e+01  2.90138029e+03]
E1 = -176.08999032040956  E_coul = 53.90149148961169
cycle= 4 E= -122.188498830798  delta_E= -9.55e-07  |g|= 7.03e-05  |ddm|= 0.000881
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.75943e-05
diis-c [-1.21715094e-10  2.00099582e-05 -7.49077016e-03 -3.23472349e-02
  1.03981800e+00]
  HOMO = -0.615746660129433  LUMO = 1.50032880844382e-09
  mo_energy =
[-3.06442701e+01 -1.65201325e+00 -6.15746660e-01 -6.15746660e-01
 -6.15746660e-01  1.50032881e-09  5.41534397e+00  5.41534397e+00
  5.41534397e+00  1.99168220e+01  9.72027140e+01  2.90138029e+03]
E1 = -176.08994918829774  E_coul = 53.90145035738443
cycle= 5 E= -122.188498830913  delta_E= -1.15e-10  |g|= 6.04e-07  |ddm|= 1.37e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -176.08994918829774  E_coul = 53.90145035738443
  HOMO = -0.615746767591517  LUMO = 1.50032814233659e-09
  mo_energy =
[-3.06442706e+01 -1.65201329e+00 -6.15746768e-01 -6.15746768e-01
 -6.15746768e-01  1.50032814e-09  5.41534377e+00  5.41534377e+00
  5.41534377e+00  1.99168219e+01  9.72027135e+01  2.90138029e+03]
E1 = -176.0899496275707  E_coul = 53.90145079665746
Extra cycle  E= -122.188498830913  delta_E= 8.53e-14  |g|= 7.07e-08  |ddm|= 1.19e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.32881529e+03 9.40779052e-01 1.00000000e-09 4.78820002e+01
 2.45158773e+01 9.15599406e+00 5.39905845e+00 9.07078392e-01]
E = -122.18849883091323
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2158.70206793        1
[INPUT] 0    0    [1    /1   ]  0.947401289153       1
[INPUT] 0    0    [1    /1   ]  576.038735056        1
[INPUT] 0    0    [1    /1   ]  155.700969838        1
[INPUT] 0    0    [1    /1   ]  38.6403299273        1
[INPUT] 0    0    [1    /1   ]  11.166675032         1
[INPUT] 1    0    [1    /1   ]  5.36503876704        1
[INPUT] 1    0    [1    /1   ]  0.902931446348       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2158.7020679279563, 1.0]], [0, [0.9474012891530151, 1.0]], [0, [576.0387350564571, 1.0]], [0, [155.70096983834682, 1.0]], [0, [38.64032992727266, 1.0]], [0, [11.166675032004989, 1.0]], [1, [5.365038767044043, 1.0]], [1, [0.9029314463483153, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2158.70206793]
bas 1, expnt(s) = [0.94740129]
bas 2, expnt(s) = [576.03873506]
bas 3, expnt(s) = [155.70096984]
bas 4, expnt(s) = [38.64032993]
bas 5, expnt(s) = [11.16667503]
bas 6, expnt(s) = [5.36503877]
bas 7, expnt(s) = [0.90293145]
CPU time:       133.69
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.15870207e+03 8.00128159e+02 9.47401289e-01 2.42613801e+00
 5.76038735e+02 2.97066576e+02 1.55700970e+02 1.11361100e+02
 3.86403299e+01 3.91557587e+01 1.11666750e+01 1.54332692e+01
 5.36503877e+00 2.38204781e+01 9.02931446e-01 2.56775076e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826440746894555
cond(S) = 51.475501200168424
E1 = -181.37936537943963  E_coul = 54.379339919347345
init E= -127.000025460092
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648646804311901  LUMO = 5.38761815838616
  mo_energy =
[-3.26929236e+01 -1.83900826e+00 -6.48646804e-01 -6.48646804e-01
 -6.48646804e-01  5.38761816e+00  5.38761816e+00  5.38761816e+00
  2.82959124e+01  2.24465021e+02  1.11706779e+03  4.88405115e+03]
E1 = -181.6894671141526  E_coul = 54.362029506761246
cycle= 1 E= -127.327437607391  delta_E= -0.327  |g|= 0.0977  |ddm|= 0.324
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.107792
diis-c [-0.0116192  1.       ]
  HOMO = -0.60878631708021  LUMO = 5.4101610110495
  mo_energy =
[-3.28534838e+01 -1.80301583e+00 -6.08786317e-01 -6.08786317e-01
 -6.08786317e-01  5.41016101e+00  5.41016101e+00  5.41016101e+00
  2.82065281e+01  2.24287342e+02  1.11684932e+03  4.88380315e+03]
E1 = -181.79026138805293  E_coul = 54.462564888859866
cycle= 2 E= -127.327696499193  delta_E= -0.000259  |g|= 0.0118  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0145771
diis-c [-7.22810839e-05  9.92560916e-02  9.00743908e-01]
  HOMO = -0.603278215430953  LUMO = 5.41916242649154
  mo_energy =
[-3.28310175e+01 -1.79670913e+00 -6.03278215e-01 -6.03278215e-01
 -6.03278215e-01  5.41916243e+00  5.41916243e+00  5.41916243e+00
  2.82246783e+01  2.24312359e+02  1.11687752e+03  4.88383292e+03]
E1 = -181.77436731745848  E_coul = 54.44666325366126
cycle= 3 E= -127.327704063797  delta_E= -7.56e-06  |g|= 0.000761  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000891385
diis-c [-1.63115031e-08 -4.04819752e-03  3.26581635e-02  9.71390034e-01]
  HOMO = -0.603603236319752  LUMO = 5.41864997568671
  mo_energy =
[-3.28322005e+01 -1.79707918e+00 -6.03603236e-01 -6.03603236e-01
 -6.03603236e-01  5.41864998e+00  5.41864998e+00  5.41864998e+00
  2.82236922e+01  2.24311245e+02  1.11687647e+03  4.88383191e+03]
E1 = -181.77525842875067  E_coul = 54.447554338307
cycle= 4 E= -127.327704090444  delta_E= -2.66e-08  |g|= 3.88e-06  |ddm|= 0.000139
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.65789e-06
diis-c [-9.79933810e-13  3.85733911e-05 -6.64421709e-04 -1.01779705e-02
  1.01080382e+00]
  HOMO = -0.603601665215537  LUMO = 5.41865246387898
  mo_energy =
[-3.28321947e+01 -1.79707728e+00 -6.03601665e-01 -6.03601665e-01
 -6.03601665e-01  5.41865246e+00  5.41865246e+00  5.41865246e+00
  2.82236974e+01  2.24311252e+02  1.11687647e+03  4.88383192e+03]
E1 = -181.77525421699332  E_coul = 54.44755012654909
cycle= 5 E= -127.327704090444  delta_E= -5.54e-13  |g|= 3.27e-08  |ddm|= 6.77e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.77525421699332  E_coul = 54.44755012654909
  HOMO = -0.603601664385799  LUMO = 5.41865246373936
  mo_energy =
[-3.28321947e+01 -1.79707728e+00 -6.03601664e-01 -6.03601664e-01
 -6.03601664e-01  5.41865246e+00  5.41865246e+00  5.41865246e+00
  2.82236974e+01  2.24311252e+02  1.11687647e+03  4.88383192e+03]
E1 = -181.77525422559634  E_coul = 54.447550135151985
Extra cycle  E= -127.327704090444  delta_E= -1.28e-13  |g|= 1.91e-09  |ddm|= 3.92e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.15870207e+03 9.47401289e-01 5.76038735e+02 1.55700970e+02
 3.86403299e+01 1.11666750e+01 5.36503877e+00 9.02931446e-01]
E = -127.32770409044436
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2158.70206793        1
[INPUT] 0    0    [1    /1   ]  0.947401289153       1
[INPUT] 0    0    [1    /1   ]  576.038735056        1
[INPUT] 0    0    [1    /1   ]  155.700969838        1
[INPUT] 0    0    [1    /1   ]  38.6403299273        1
[INPUT] 0    0    [1    /1   ]  11.166675032         1
[INPUT] 1    0    [1    /1   ]  5.36503876704        1
[INPUT] 1    0    [1    /1   ]  0.902931446348       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2158.7020679279563, 1.0]], [0, [0.9474012891530151, 1.0]], [0, [576.0387350564571, 1.0]], [0, [155.70096983834682, 1.0]], [0, [38.64032992727266, 1.0]], [0, [11.166675032004989, 1.0]], [1, [5.365038767044043, 1.0]], [1, [0.9029314463483153, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2158.70206793]
bas 1, expnt(s) = [0.94740129]
bas 2, expnt(s) = [576.03873506]
bas 3, expnt(s) = [155.70096984]
bas 4, expnt(s) = [38.64032993]
bas 5, expnt(s) = [11.16667503]
bas 6, expnt(s) = [5.36503877]
bas 7, expnt(s) = [0.90293145]
CPU time:       134.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.15870207e+03 8.00128159e+02 9.47401289e-01 2.42613801e+00
 5.76038735e+02 2.97066576e+02 1.55700970e+02 1.11361100e+02
 3.86403299e+01 3.91557587e+01 1.11666750e+01 1.54332692e+01
 5.36503877e+00 2.38204781e+01 9.02931446e-01 2.56775076e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.826440746894555
cond(S) = 51.475501200168424
E1 = -181.37936537943963  E_coul = 54.379339919347345
init E= -127.000025460092
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.648646804311901  LUMO = 5.38761815838616
  mo_energy =
[-3.26929236e+01 -1.83900826e+00 -6.48646804e-01 -6.48646804e-01
 -6.48646804e-01  5.38761816e+00  5.38761816e+00  5.38761816e+00
  2.82959124e+01  2.24465021e+02  1.11706779e+03  4.88405115e+03]
E1 = -181.6894671141526  E_coul = 54.362029506761246
cycle= 1 E= -127.327437607391  delta_E= -0.327  |g|= 0.0977  |ddm|= 0.324
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.107792
diis-c [-0.0116192  1.       ]
  HOMO = -0.60878631708021  LUMO = 5.4101610110495
  mo_energy =
[-3.28534838e+01 -1.80301583e+00 -6.08786317e-01 -6.08786317e-01
 -6.08786317e-01  5.41016101e+00  5.41016101e+00  5.41016101e+00
  2.82065281e+01  2.24287342e+02  1.11684932e+03  4.88380315e+03]
E1 = -181.79026138805293  E_coul = 54.462564888859866
cycle= 2 E= -127.327696499193  delta_E= -0.000259  |g|= 0.0118  |ddm|= 0.0156
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0145771
diis-c [-7.22810839e-05  9.92560916e-02  9.00743908e-01]
  HOMO = -0.603278215430953  LUMO = 5.41916242649154
  mo_energy =
[-3.28310175e+01 -1.79670913e+00 -6.03278215e-01 -6.03278215e-01
 -6.03278215e-01  5.41916243e+00  5.41916243e+00  5.41916243e+00
  2.82246783e+01  2.24312359e+02  1.11687752e+03  4.88383292e+03]
E1 = -181.77436731745848  E_coul = 54.44666325366126
cycle= 3 E= -127.327704063797  delta_E= -7.56e-06  |g|= 0.000761  |ddm|= 0.0025
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000891385
diis-c [-1.63115031e-08 -4.04819752e-03  3.26581635e-02  9.71390034e-01]
  HOMO = -0.603603236319752  LUMO = 5.41864997568671
  mo_energy =
[-3.28322005e+01 -1.79707918e+00 -6.03603236e-01 -6.03603236e-01
 -6.03603236e-01  5.41864998e+00  5.41864998e+00  5.41864998e+00
  2.82236922e+01  2.24311245e+02  1.11687647e+03  4.88383191e+03]
E1 = -181.77525842875067  E_coul = 54.447554338307
cycle= 4 E= -127.327704090444  delta_E= -2.66e-08  |g|= 3.88e-06  |ddm|= 0.000139
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.65789e-06
diis-c [-9.79933810e-13  3.85733911e-05 -6.64421709e-04 -1.01779705e-02
  1.01080382e+00]
  HOMO = -0.603601665215537  LUMO = 5.41865246387898
  mo_energy =
[-3.28321947e+01 -1.79707728e+00 -6.03601665e-01 -6.03601665e-01
 -6.03601665e-01  5.41865246e+00  5.41865246e+00  5.41865246e+00
  2.82236974e+01  2.24311252e+02  1.11687647e+03  4.88383192e+03]
E1 = -181.77525421699332  E_coul = 54.44755012654909
cycle= 5 E= -127.327704090444  delta_E= -5.54e-13  |g|= 3.27e-08  |ddm|= 6.77e-07
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -181.77525421699332  E_coul = 54.44755012654909
  HOMO = -0.603601664385799  LUMO = 5.41865246373936
  mo_energy =
[-3.28321947e+01 -1.79707728e+00 -6.03601664e-01 -6.03601664e-01
 -6.03601664e-01  5.41865246e+00  5.41865246e+00  5.41865246e+00
  2.82236974e+01  2.24311252e+02  1.11687647e+03  4.88383192e+03]
E1 = -181.77525422559634  E_coul = 54.447550135151985
Extra cycle  E= -127.327704090444  delta_E= -1.28e-13  |g|= 1.91e-09  |ddm|= 3.92e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 51.475501200168424
E1 = -181.77525422559634  E_coul = 54.447550135151985
init E= -127.327704090444
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.603601663798239  LUMO = 5.41865246462445
  mo_energy =
[-3.28321947e+01 -1.79707728e+00 -6.03601664e-01 -6.03601664e-01
 -6.03601664e-01  5.41865246e+00  5.41865246e+00  5.41865246e+00
  2.82236974e+01  2.24311252e+02  1.11687647e+03  4.88383192e+03]
E1 = -181.77525422437364  E_coul = 54.4475501339294
cycle= 1 E= -127.327704090444  delta_E= 1.14e-13  |g|= 1.42e-10  |ddm|= 2.51e-10
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -181.77525422437364  E_coul = 54.4475501339294
  HOMO = -0.603601663871615  LUMO = 5.41865246450322
  mo_energy =
[-3.28321947e+01 -1.79707728e+00 -6.03601664e-01 -6.03601664e-01
 -6.03601664e-01  5.41865246e+00  5.41865246e+00  5.41865246e+00
  2.82236974e+01  2.24311252e+02  1.11687647e+03  4.88383192e+03]
E1 = -181.77525422460036  E_coul = 54.44755013415609
Extra cycle  E= -127.327704090444  delta_E= -2.84e-14  |g|= 2.76e-11  |ddm|= 3.6e-11
    CPU time for scf_cycle      0.11 sec, wall time      0.11 sec
exp = [2.15870207e+03 9.47401289e-01 5.76038735e+02 1.55700970e+02
 3.86403299e+01 1.11666750e+01 5.36503877e+00 9.02931446e-01]
grad_E = [-2.99737723e-05  2.82869981e-03  5.78154380e-06  1.19068371e-03
 -4.19928448e-03  6.93629420e-03  3.83322102e-03 -1.42739691e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]

basis = "5s3p"
exps = np.zeros((8, 2))
exps[1:, 0] = basis_sets["5s2p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["5s2p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MBP-Home', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 02:41:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2329.97438871        1
[INPUT] 0    0    [1    /1   ]  0.939899552907       1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  1e-09                1
[INPUT] 0    0    [1    /1   ]  19.4147495203        1
[INPUT] 0    0    [1    /1   ]  8.48232798968        1
[INPUT] 1    0    [1    /1   ]  5.38745179393        1
[INPUT] 1    0    [1    /1   ]  0.906069805242       1

nuclear repulsion = 0
number of shells = 8
number of NR pGTOs = 12
number of NR cGTOs = 12
basis = {'Ne': [[0, [2329.974388707987, 1.0]], [0, [0.939899552906775, 1.0]], [0, [1e-09, 1.0]], [0, [1e-09, 1.0]], [0, [19.41474952030832, 1.0]], [0, [8.482327989677756, 1.0]], [1, [5.387451793926071, 1.0]], [1, [0.9060698052419139, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2329.97438871]
bas 1, expnt(s) = [0.93989955]
bas 2, expnt(s) = [1.e-09]
bas 3, expnt(s) = [1.e-09]
bas 4, expnt(s) = [19.41474952]
bas 5, expnt(s) = [8.48232799]
bas 6, expnt(s) = [5.38745179]
bas 7, expnt(s) = [0.90606981]
CPU time:       137.55
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  1  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32997439e+03 8.47282789e+02 9.39899553e-01 2.41171568e+00
 1.00000000e-09 4.49277867e-07 1.00000000e-09 4.49277867e-07
 1.94147495e+01 2.33675870e+01 8.48232799e+00 1.25574460e+01
 5.38745179e+00 2.39449337e+01 9.06069805e-01 2.57891165e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 1.4179301951799296e+17
cond(S) = 3.879535406643261e+17

WARN: Singularity detected in overlap matrix (condition number = 3.88e+17). SCF may be inaccurate and hard to converge.

E1 = -6.948265826435487e+24  E_coul = 1.6646873629279476e+53
init E= 1.66468736292795e+53
    CPU time for initialize scf      0.27 sec, wall time      0.28 sec
