#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19154206        1
[INPUT] 0    0    [1    /1   ]  215.458444554        1
[INPUT] 0    0    [1    /1   ]  1429.46102804        1
[INPUT] 0    0    [1    /1   ]  0.567717378905       1
[INPUT] 0    0    [1    /1   ]  48.4585973054        1
[INPUT] 0    0    [1    /1   ]  13.0328336133        1
[INPUT] 0    0    [1    /1   ]  1.90224065621        1
[INPUT] 1    0    [1    /1   ]  2.77760426799        1
[INPUT] 1    0    [1    /1   ]  13.3319133077        1
[INPUT] 1    0    [1    /1   ]  0.600574707452       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1915420579808, 1.0]], [0, [215.45844455359133, 1.0]], [0, [1429.4610280386537, 1.0]], [0, [0.5677173789049907, 1.0]], [0, [48.45859730536646, 1.0]], [0, [13.032833613337074, 1.0]], [0, [1.9022406562127316, 1.0]], [1, [2.7776042679910673, 1.0]], [1, [13.33191330773249, 1.0]], [1, [0.6005747074522553, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19154206]
bas 1, expnt(s) = [215.45844455]
bas 2, expnt(s) = [1429.46102804]
bas 3, expnt(s) = [0.56771738]
bas 4, expnt(s) = [48.45859731]
bas 5, expnt(s) = [13.03283361]
bas 6, expnt(s) = [1.90224066]
bas 7, expnt(s) = [2.77760427]
bas 8, expnt(s) = [13.33191331]
bas 9, expnt(s) = [0.60057471]
CPU time:         1.60
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419154e+03 7.96090989e+02 2.15458445e+02 1.42081543e+02
 1.42946103e+03 5.87346336e+02 5.67717379e-01 1.65239612e+00
 4.84585973e+01 4.64026895e+01 1.30328336e+01 1.73298244e+01
 1.90224066e+00 4.09226848e+00 2.77760427e+00 1.04609796e+01
 1.33319133e+01 7.43190233e+01 6.00574707e-01 1.54238641e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965780864283118
cond(S) = 156.3037736824839
E1 = -183.1357068001988  E_coul = 55.011225952726235
init E= -128.124480847473
    CPU time for initialize scf      0.11 sec, wall time      0.12 sec
  HOMO = -0.742894181662367  LUMO = 2.6579662999474
  mo_energy =
[-3.25128659e+01 -1.85388050e+00 -7.42894182e-01 -7.42894182e-01
 -7.42894182e-01  2.65796630e+00  2.65796630e+00  2.65796630e+00
  2.70227650e+00  1.99606947e+01  1.99606947e+01  1.99606947e+01
  4.40511986e+01  3.19573371e+02  1.98496529e+03  7.27407799e+03]
E1 = -182.12816712336294  E_coul = 53.93308227017969
cycle= 1 E= -128.195084853183  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.26 sec, wall time      0.26 sec
diis-norm(errvec)=0.26244
diis-c [-0.06887479  1.        ]
  HOMO = -0.808034514213963  LUMO = 2.60365535373203
  mo_energy =
[-3.27871554e+01 -1.92110048e+00 -8.08034514e-01 -8.08034514e-01
 -8.08034514e-01  2.60365535e+00  2.60365535e+00  2.60365535e+00
  2.64961491e+00  1.97693873e+01  1.97693873e+01  1.97693873e+01
  4.38169092e+01  3.19262897e+02  1.98460413e+03  7.27369136e+03]
E1 = -182.59167552671238  E_coul = 54.39495188039686
cycle= 2 E= -128.196723646316  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.08 sec, wall time      0.08 sec
diis-norm(errvec)=0.10211
diis-c [-4.49390632e-04  2.76332839e-01  7.23667161e-01]
  HOMO = -0.785165543497528  LUMO = 2.6243675889914
  mo_energy =
[-3.27120876e+01 -1.89737750e+00 -7.85165543e-01 -7.85165543e-01
 -7.85165543e-01  2.62436759e+00  2.62436759e+00  2.62436759e+00
  2.66952697e+00  1.98257771e+01  1.98257771e+01  1.98257771e+01
  4.38829171e+01  3.19344753e+02  1.98469161e+03  7.27378034e+03]
E1 = -182.45885221330172  E_coul = 54.261822137763474
cycle= 3 E= -128.197030075538  delta_E= -0.000306  |g|= 0.00079  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00107387
diis-c [-6.10159379e-08 -3.47101164e-03  1.38525613e-03  1.00208576e+00]
  HOMO = -0.785443076283742  LUMO = 2.62415083719174
  mo_energy =
[-3.27128938e+01 -1.89771729e+00 -7.85443076e-01 -7.85443076e-01
 -7.85443076e-01  2.62415084e+00  2.62415084e+00  2.62415084e+00
  2.66926204e+00  1.98251504e+01  1.98251504e+01  1.98251504e+01
  4.38821717e+01  3.19344079e+02  1.98469105e+03  7.27377982e+03]
E1 = -182.46038268213164  E_coul = 54.263352562795326
cycle= 4 E= -128.197030119336  delta_E= -4.38e-08  |g|= 4.44e-05  |ddm|= 0.000277
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.0912e-05
diis-c [-1.98141129e-10  4.44343193e-04 -1.19884980e-03 -1.62638936e-01
  1.16339344e+00]
  HOMO = -0.78543029751615  LUMO = 2.62416195405862
  mo_energy =
[-3.27128609e+01 -1.89771482e+00 -7.85430298e-01 -7.85430298e-01
 -7.85430298e-01  2.62416195e+00  2.62416195e+00  2.62416195e+00
  2.66926345e+00  1.98251759e+01  1.98251759e+01  1.98251759e+01
  4.38821983e+01  3.19344125e+02  1.98469111e+03  7.27377988e+03]
E1 = -182.46032776344822  E_coul = 54.263297643887064
cycle= 5 E= -128.197030119561  delta_E= -2.25e-10  |g|= 1.59e-06  |ddm|= 2.23e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46032776344822  E_coul = 54.263297643887064
  HOMO = -0.785430161661336  LUMO = 2.62416208200367
  mo_energy =
[-3.27128607e+01 -1.89771508e+00 -7.85430162e-01 -7.85430162e-01
 -7.85430162e-01  2.62416208e+00  2.62416208e+00  2.62416208e+00
  2.66926323e+00  1.98251761e+01  1.98251761e+01  1.98251761e+01
  4.38821984e+01  3.19344125e+02  1.98469111e+03  7.27377988e+03]
E1 = -182.46032742465485  E_coul = 54.263297305093474
Extra cycle  E= -128.197030119561  delta_E= -1.99e-13  |g|= 3.02e-07  |ddm|= 9.17e-07
    CPU time for scf_cycle      0.49 sec, wall time      0.49 sec
exp = [2.14419154e+03 2.15458445e+02 1.42946103e+03 5.67717379e-01
 4.84585973e+01 1.30328336e+01 1.90224066e+00 2.77760427e+00
 1.33319133e+01 6.00574707e-01]
E = -128.19703011956136
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19154206        1
[INPUT] 0    0    [1    /1   ]  215.458444554        1
[INPUT] 0    0    [1    /1   ]  1429.46102804        1
[INPUT] 0    0    [1    /1   ]  0.567717378905       1
[INPUT] 0    0    [1    /1   ]  48.4585973054        1
[INPUT] 0    0    [1    /1   ]  13.0328336133        1
[INPUT] 0    0    [1    /1   ]  1.90224065621        1
[INPUT] 1    0    [1    /1   ]  2.77760426799        1
[INPUT] 1    0    [1    /1   ]  13.3319133077        1
[INPUT] 1    0    [1    /1   ]  0.600574707452       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1915420579808, 1.0]], [0, [215.45844455359133, 1.0]], [0, [1429.4610280386537, 1.0]], [0, [0.5677173789049907, 1.0]], [0, [48.45859730536646, 1.0]], [0, [13.032833613337074, 1.0]], [0, [1.9022406562127316, 1.0]], [1, [2.7776042679910673, 1.0]], [1, [13.33191330773249, 1.0]], [1, [0.6005747074522553, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19154206]
bas 1, expnt(s) = [215.45844455]
bas 2, expnt(s) = [1429.46102804]
bas 3, expnt(s) = [0.56771738]
bas 4, expnt(s) = [48.45859731]
bas 5, expnt(s) = [13.03283361]
bas 6, expnt(s) = [1.90224066]
bas 7, expnt(s) = [2.77760427]
bas 8, expnt(s) = [13.33191331]
bas 9, expnt(s) = [0.60057471]
CPU time:         2.26
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419154e+03 7.96090989e+02 2.15458445e+02 1.42081543e+02
 1.42946103e+03 5.87346336e+02 5.67717379e-01 1.65239612e+00
 4.84585973e+01 4.64026895e+01 1.30328336e+01 1.73298244e+01
 1.90224066e+00 4.09226848e+00 2.77760427e+00 1.04609796e+01
 1.33319133e+01 7.43190233e+01 6.00574707e-01 1.54238641e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965780864283118
cond(S) = 156.3037736824839
E1 = -183.1357068001988  E_coul = 55.011225952726235
init E= -128.124480847473
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742894181662367  LUMO = 2.6579662999474
  mo_energy =
[-3.25128659e+01 -1.85388050e+00 -7.42894182e-01 -7.42894182e-01
 -7.42894182e-01  2.65796630e+00  2.65796630e+00  2.65796630e+00
  2.70227650e+00  1.99606947e+01  1.99606947e+01  1.99606947e+01
  4.40511986e+01  3.19573371e+02  1.98496529e+03  7.27407799e+03]
E1 = -182.12816712336294  E_coul = 53.93308227017969
cycle= 1 E= -128.195084853183  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.26244
diis-c [-0.06887479  1.        ]
  HOMO = -0.808034514213963  LUMO = 2.60365535373203
  mo_energy =
[-3.27871554e+01 -1.92110048e+00 -8.08034514e-01 -8.08034514e-01
 -8.08034514e-01  2.60365535e+00  2.60365535e+00  2.60365535e+00
  2.64961491e+00  1.97693873e+01  1.97693873e+01  1.97693873e+01
  4.38169092e+01  3.19262897e+02  1.98460413e+03  7.27369136e+03]
E1 = -182.59167552671238  E_coul = 54.39495188039686
cycle= 2 E= -128.196723646316  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10211
diis-c [-4.49390632e-04  2.76332839e-01  7.23667161e-01]
  HOMO = -0.785165543497528  LUMO = 2.6243675889914
  mo_energy =
[-3.27120876e+01 -1.89737750e+00 -7.85165543e-01 -7.85165543e-01
 -7.85165543e-01  2.62436759e+00  2.62436759e+00  2.62436759e+00
  2.66952697e+00  1.98257771e+01  1.98257771e+01  1.98257771e+01
  4.38829171e+01  3.19344753e+02  1.98469161e+03  7.27378034e+03]
E1 = -182.45885221330172  E_coul = 54.261822137763474
cycle= 3 E= -128.197030075538  delta_E= -0.000306  |g|= 0.00079  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00107387
diis-c [-6.10159379e-08 -3.47101164e-03  1.38525613e-03  1.00208576e+00]
  HOMO = -0.785443076283742  LUMO = 2.62415083719174
  mo_energy =
[-3.27128938e+01 -1.89771729e+00 -7.85443076e-01 -7.85443076e-01
 -7.85443076e-01  2.62415084e+00  2.62415084e+00  2.62415084e+00
  2.66926204e+00  1.98251504e+01  1.98251504e+01  1.98251504e+01
  4.38821717e+01  3.19344079e+02  1.98469105e+03  7.27377982e+03]
E1 = -182.46038268213164  E_coul = 54.263352562795326
cycle= 4 E= -128.197030119336  delta_E= -4.38e-08  |g|= 4.44e-05  |ddm|= 0.000277
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.0912e-05
diis-c [-1.98141129e-10  4.44343193e-04 -1.19884980e-03 -1.62638936e-01
  1.16339344e+00]
  HOMO = -0.78543029751615  LUMO = 2.62416195405862
  mo_energy =
[-3.27128609e+01 -1.89771482e+00 -7.85430298e-01 -7.85430298e-01
 -7.85430298e-01  2.62416195e+00  2.62416195e+00  2.62416195e+00
  2.66926345e+00  1.98251759e+01  1.98251759e+01  1.98251759e+01
  4.38821983e+01  3.19344125e+02  1.98469111e+03  7.27377988e+03]
E1 = -182.46032776344822  E_coul = 54.263297643887064
cycle= 5 E= -128.197030119561  delta_E= -2.25e-10  |g|= 1.59e-06  |ddm|= 2.23e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46032776344822  E_coul = 54.263297643887064
  HOMO = -0.785430161661336  LUMO = 2.62416208200367
  mo_energy =
[-3.27128607e+01 -1.89771508e+00 -7.85430162e-01 -7.85430162e-01
 -7.85430162e-01  2.62416208e+00  2.62416208e+00  2.62416208e+00
  2.66926323e+00  1.98251761e+01  1.98251761e+01  1.98251761e+01
  4.38821984e+01  3.19344125e+02  1.98469111e+03  7.27377988e+03]
E1 = -182.46032742465485  E_coul = 54.263297305093474
Extra cycle  E= -128.197030119561  delta_E= -1.99e-13  |g|= 3.02e-07  |ddm|= 9.17e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.3037736824839
E1 = -182.46032742465485  E_coul = 54.263297305093474
init E= -128.197030119561
    CPU time for initialize scf      0.32 sec, wall time      0.38 sec
  HOMO = -0.785430168491077  LUMO = 2.62416207416457
  mo_energy =
[-3.27128607e+01 -1.89771516e+00 -7.85430168e-01 -7.85430168e-01
 -7.85430168e-01  2.62416207e+00  2.62416207e+00  2.62416207e+00
  2.66926315e+00  1.98251760e+01  1.98251760e+01  1.98251760e+01
  4.38821983e+01  3.19344125e+02  1.98469111e+03  7.27377988e+03]
E1 = -182.46032757183687  E_coul = 54.26329745227544
cycle= 1 E= -128.197030119561  delta_E= -5.68e-14  |g|= 5.59e-08  |ddm|= 1.77e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46032757183687  E_coul = 54.26329745227544
  HOMO = -0.785430155340098  LUMO = 2.62416208578757
  mo_energy =
[-3.27128607e+01 -1.89771516e+00 -7.85430155e-01 -7.85430155e-01
 -7.85430155e-01  2.62416209e+00  2.62416209e+00  2.62416209e+00
  2.66926315e+00  1.98251761e+01  1.98251761e+01  1.98251761e+01
  4.38821983e+01  3.19344125e+02  1.98469111e+03  7.27377988e+03]
E1 = -182.4603275162329  E_coul = 54.26329739667139
Extra cycle  E= -128.197030119562  delta_E= -8.53e-14  |g|= 1.29e-08  |ddm|= 2.86e-08
    CPU time for scf_cycle      1.03 sec, wall time      1.13 sec
exp = [2.14419154e+03 2.15458445e+02 1.42946103e+03 5.67717379e-01
 4.84585973e+01 1.30328336e+01 1.90224066e+00 2.77760427e+00
 1.33319133e+01 6.00574707e-01]
grad_E = [-7.42834696e-06 -3.47415849e-04  4.62779589e-05  3.93388885e-04
  8.93554498e-04 -1.29823923e-03  1.38084586e-04 -9.07373379e-06
  5.67611089e-07  3.12027359e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19154949        1
[INPUT] 0    0    [1    /1   ]  215.458791969        1
[INPUT] 0    0    [1    /1   ]  1429.46098176        1
[INPUT] 0    0    [1    /1   ]  0.56732399002        1
[INPUT] 0    0    [1    /1   ]  48.4577037509        1
[INPUT] 0    0    [1    /1   ]  13.0341318526        1
[INPUT] 0    0    [1    /1   ]  1.90210257163        1
[INPUT] 1    0    [1    /1   ]  2.77761334172        1
[INPUT] 1    0    [1    /1   ]  13.3319127401        1
[INPUT] 1    0    [1    /1   ]  0.600543504716       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.191549486328, 1.0]], [0, [215.45879196944054, 1.0]], [0, [1429.4609817606947, 1.0]], [0, [0.5673239900198472, 1.0]], [0, [48.45770375086883, 1.0]], [0, [13.034131852569432, 1.0]], [0, [1.9021025716267643, 1.0]], [1, [2.7776133417248565, 1.0]], [1, [13.331912740121401, 1.0]], [1, [0.600543504716358, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19154949]
bas 1, expnt(s) = [215.45879197]
bas 2, expnt(s) = [1429.46098176]
bas 3, expnt(s) = [0.56732399]
bas 4, expnt(s) = [48.45770375]
bas 5, expnt(s) = [13.03413185]
bas 6, expnt(s) = [1.90210257]
bas 7, expnt(s) = [2.77761334]
bas 8, expnt(s) = [13.33191274]
bas 9, expnt(s) = [0.6005435]
CPU time:         7.16
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419155e+03 7.96090991e+02 2.15458792e+02 1.42081715e+02
 1.42946098e+03 5.87346322e+02 5.67323990e-01 1.65153730e+00
 4.84577038e+01 4.64020478e+01 1.30341319e+01 1.73311191e+01
 1.90210257e+00 4.09204569e+00 2.77761334e+00 1.04610223e+01
 1.33319127e+01 7.43190194e+01 6.00543505e-01 1.54228624e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965790800493671
cond(S) = 156.30083931844777
E1 = -183.13574885493927  E_coul = 55.01128366282014
init E= -128.124465192119
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742894853371492  LUMO = 2.65786325270874
  mo_energy =
[-3.25128324e+01 -1.85388767e+00 -7.42894853e-01 -7.42894853e-01
 -7.42894853e-01  2.65786325e+00  2.65786325e+00  2.65786325e+00
  2.70070528e+00  1.99606564e+01  1.99606564e+01  1.99606564e+01
  4.40516362e+01  3.19574186e+02  1.98496612e+03  7.27407886e+03]
E1 = -182.12721160706758  E_coul = 53.93212747675877
cycle= 1 E= -128.195084130309  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262671
diis-c [-0.0689959  1.       ]
  HOMO = -0.808123760587482  LUMO = 2.6034746921383
  mo_energy =
[-3.27872898e+01 -1.92117770e+00 -8.08123761e-01 -8.08123761e-01
 -8.08123761e-01  2.60347469e+00  2.60347469e+00  2.60347469e+00
  2.64800099e+00  1.97691970e+01  1.97691970e+01  1.97691970e+01
  4.38171702e+01  3.19263577e+02  1.98460484e+03  7.27369210e+03]
E1 = -182.59114681481452  E_coul = 54.39442123173953
cycle= 2 E= -128.196725583075  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102203
diis-c [-4.49720516e-04  2.76343648e-01  7.23656352e-01]
  HOMO = -0.78523408815856  LUMO = 2.6242055280746
  mo_energy =
[-3.27121552e+01 -1.89743216e+00 -7.85234088e-01 -7.85234088e-01
 -7.85234088e-01  2.62420553e+00  2.62420553e+00  2.62420553e+00
  2.66792731e+00  1.98256375e+01  1.98256375e+01  1.98256375e+01
  4.38832385e+01  3.19345504e+02  1.98469239e+03  7.27378116e+03]
E1 = -182.45818655341503  E_coul = 54.26115394583734
cycle= 3 E= -128.197032607578  delta_E= -0.000307  |g|= 0.00079  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00107782
diis-c [-5.88377829e-08 -3.46038777e-03  1.45468825e-03  1.00200570e+00]
  HOMO = -0.785512500870565  LUMO = 2.62398807276753
  mo_energy =
[-3.27129633e+01 -1.89777147e+00 -7.85512501e-01 -7.85512501e-01
 -7.85512501e-01  2.62398807e+00  2.62398807e+00  2.62398807e+00
  2.66766292e+00  1.98250095e+01  1.98250095e+01  1.98250095e+01
  4.38824917e+01  3.19344828e+02  1.98469183e+03  7.27378063e+03]
E1 = -182.4597201810633  E_coul = 54.262687529738386
cycle= 4 E= -128.197032651325  delta_E= -4.37e-08  |g|= 4.34e-05  |ddm|= 0.000276
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.94104e-05
diis-c [-1.94993187e-10  4.39926337e-04 -1.18512924e-03 -1.60976782e-01
  1.16172199e+00]
  HOMO = -0.785499981034718  LUMO = 2.6239989627251
  mo_energy =
[-3.27129310e+01 -1.89776898e+00 -7.85499981e-01 -7.85499981e-01
 -7.85499981e-01  2.62399896e+00  2.62399896e+00  2.62399896e+00
  2.66766436e+00  1.98250345e+01  1.98250345e+01  1.98250345e+01
  4.38825177e+01  3.19344872e+02  1.98469188e+03  7.27378069e+03]
E1 = -182.45966632927622  E_coul = 54.26263367773677
cycle= 5 E= -128.197032651539  delta_E= -2.15e-10  |g|= 1.6e-06  |ddm|= 2.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45966632927622  E_coul = 54.26263367773677
  HOMO = -0.785499835818219  LUMO = 2.62399909904962
  mo_energy =
[-3.27129307e+01 -1.89776923e+00 -7.85499836e-01 -7.85499836e-01
 -7.85499836e-01  2.62399910e+00  2.62399910e+00  2.62399910e+00
  2.66766414e+00  1.98250347e+01  1.98250347e+01  1.98250347e+01
  4.38825179e+01  3.19344872e+02  1.98469188e+03  7.27378069e+03]
E1 = -182.4596659433308  E_coul = 54.26263329179128
Extra cycle  E= -128.19703265154  delta_E= -8.53e-14  |g|= 3.05e-07  |ddm|= 9.21e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419155e+03 2.15458792e+02 1.42946098e+03 5.67323990e-01
 4.84577038e+01 1.30341319e+01 1.90210257e+00 2.77761334e+00
 1.33319127e+01 6.00543505e-01]
E = -128.19703265153953
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19154949        1
[INPUT] 0    0    [1    /1   ]  215.458791969        1
[INPUT] 0    0    [1    /1   ]  1429.46098176        1
[INPUT] 0    0    [1    /1   ]  0.56732399002        1
[INPUT] 0    0    [1    /1   ]  48.4577037509        1
[INPUT] 0    0    [1    /1   ]  13.0341318526        1
[INPUT] 0    0    [1    /1   ]  1.90210257163        1
[INPUT] 1    0    [1    /1   ]  2.77761334172        1
[INPUT] 1    0    [1    /1   ]  13.3319127401        1
[INPUT] 1    0    [1    /1   ]  0.600543504716       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.191549486328, 1.0]], [0, [215.45879196944054, 1.0]], [0, [1429.4609817606947, 1.0]], [0, [0.5673239900198472, 1.0]], [0, [48.45770375086883, 1.0]], [0, [13.034131852569432, 1.0]], [0, [1.9021025716267643, 1.0]], [1, [2.7776133417248565, 1.0]], [1, [13.331912740121401, 1.0]], [1, [0.600543504716358, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19154949]
bas 1, expnt(s) = [215.45879197]
bas 2, expnt(s) = [1429.46098176]
bas 3, expnt(s) = [0.56732399]
bas 4, expnt(s) = [48.45770375]
bas 5, expnt(s) = [13.03413185]
bas 6, expnt(s) = [1.90210257]
bas 7, expnt(s) = [2.77761334]
bas 8, expnt(s) = [13.33191274]
bas 9, expnt(s) = [0.6005435]
CPU time:         7.30
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419155e+03 7.96090991e+02 2.15458792e+02 1.42081715e+02
 1.42946098e+03 5.87346322e+02 5.67323990e-01 1.65153730e+00
 4.84577038e+01 4.64020478e+01 1.30341319e+01 1.73311191e+01
 1.90210257e+00 4.09204569e+00 2.77761334e+00 1.04610223e+01
 1.33319127e+01 7.43190194e+01 6.00543505e-01 1.54228624e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965790800493671
cond(S) = 156.30083931844777
E1 = -183.13574885493927  E_coul = 55.01128366282014
init E= -128.124465192119
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742894853371492  LUMO = 2.65786325270874
  mo_energy =
[-3.25128324e+01 -1.85388767e+00 -7.42894853e-01 -7.42894853e-01
 -7.42894853e-01  2.65786325e+00  2.65786325e+00  2.65786325e+00
  2.70070528e+00  1.99606564e+01  1.99606564e+01  1.99606564e+01
  4.40516362e+01  3.19574186e+02  1.98496612e+03  7.27407886e+03]
E1 = -182.12721160706758  E_coul = 53.93212747675877
cycle= 1 E= -128.195084130309  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262671
diis-c [-0.0689959  1.       ]
  HOMO = -0.808123760587482  LUMO = 2.6034746921383
  mo_energy =
[-3.27872898e+01 -1.92117770e+00 -8.08123761e-01 -8.08123761e-01
 -8.08123761e-01  2.60347469e+00  2.60347469e+00  2.60347469e+00
  2.64800099e+00  1.97691970e+01  1.97691970e+01  1.97691970e+01
  4.38171702e+01  3.19263577e+02  1.98460484e+03  7.27369210e+03]
E1 = -182.59114681481452  E_coul = 54.39442123173953
cycle= 2 E= -128.196725583075  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102203
diis-c [-4.49720516e-04  2.76343648e-01  7.23656352e-01]
  HOMO = -0.78523408815856  LUMO = 2.6242055280746
  mo_energy =
[-3.27121552e+01 -1.89743216e+00 -7.85234088e-01 -7.85234088e-01
 -7.85234088e-01  2.62420553e+00  2.62420553e+00  2.62420553e+00
  2.66792731e+00  1.98256375e+01  1.98256375e+01  1.98256375e+01
  4.38832385e+01  3.19345504e+02  1.98469239e+03  7.27378116e+03]
E1 = -182.45818655341503  E_coul = 54.26115394583734
cycle= 3 E= -128.197032607578  delta_E= -0.000307  |g|= 0.00079  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00107782
diis-c [-5.88377829e-08 -3.46038777e-03  1.45468825e-03  1.00200570e+00]
  HOMO = -0.785512500870565  LUMO = 2.62398807276753
  mo_energy =
[-3.27129633e+01 -1.89777147e+00 -7.85512501e-01 -7.85512501e-01
 -7.85512501e-01  2.62398807e+00  2.62398807e+00  2.62398807e+00
  2.66766292e+00  1.98250095e+01  1.98250095e+01  1.98250095e+01
  4.38824917e+01  3.19344828e+02  1.98469183e+03  7.27378063e+03]
E1 = -182.4597201810633  E_coul = 54.262687529738386
cycle= 4 E= -128.197032651325  delta_E= -4.37e-08  |g|= 4.34e-05  |ddm|= 0.000276
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.94104e-05
diis-c [-1.94993187e-10  4.39926337e-04 -1.18512924e-03 -1.60976782e-01
  1.16172199e+00]
  HOMO = -0.785499981034718  LUMO = 2.6239989627251
  mo_energy =
[-3.27129310e+01 -1.89776898e+00 -7.85499981e-01 -7.85499981e-01
 -7.85499981e-01  2.62399896e+00  2.62399896e+00  2.62399896e+00
  2.66766436e+00  1.98250345e+01  1.98250345e+01  1.98250345e+01
  4.38825177e+01  3.19344872e+02  1.98469188e+03  7.27378069e+03]
E1 = -182.45966632927622  E_coul = 54.26263367773677
cycle= 5 E= -128.197032651539  delta_E= -2.15e-10  |g|= 1.6e-06  |ddm|= 2.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45966632927622  E_coul = 54.26263367773677
  HOMO = -0.785499835818219  LUMO = 2.62399909904962
  mo_energy =
[-3.27129307e+01 -1.89776923e+00 -7.85499836e-01 -7.85499836e-01
 -7.85499836e-01  2.62399910e+00  2.62399910e+00  2.62399910e+00
  2.66766414e+00  1.98250347e+01  1.98250347e+01  1.98250347e+01
  4.38825179e+01  3.19344872e+02  1.98469188e+03  7.27378069e+03]
E1 = -182.4596659433308  E_coul = 54.26263329179128
Extra cycle  E= -128.19703265154  delta_E= -8.53e-14  |g|= 3.05e-07  |ddm|= 9.21e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.30083931844777
E1 = -182.4596659433308  E_coul = 54.26263329179128
init E= -128.19703265154
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785499845730159  LUMO = 2.62399908841453
  mo_energy =
[-3.27129308e+01 -1.89776932e+00 -7.85499846e-01 -7.85499846e-01
 -7.85499846e-01  2.62399909e+00  2.62399909e+00  2.62399909e+00
  2.66766406e+00  1.98250346e+01  1.98250346e+01  1.98250346e+01
  4.38825178e+01  3.19344872e+02  1.98469188e+03  7.27378069e+03]
E1 = -182.45966610952172  E_coul = 54.26263345798185
cycle= 1 E= -128.19703265154  delta_E= -3.41e-13  |g|= 5.7e-08  |ddm|= 1.79e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45966610952172  E_coul = 54.26263345798185
  HOMO = -0.785499831255129  LUMO = 2.62399910123454
  mo_energy =
[-3.27129308e+01 -1.89776932e+00 -7.85499831e-01 -7.85499831e-01
 -7.85499831e-01  2.62399910e+00  2.62399910e+00  2.62399910e+00
  2.66766406e+00  1.98250347e+01  1.98250347e+01  1.98250347e+01
  4.38825178e+01  3.19344872e+02  1.98469188e+03  7.27378069e+03]
E1 = -182.45966604639798  E_coul = 54.262633394858184
Extra cycle  E= -128.19703265154  delta_E= 5.68e-14  |g|= 1.37e-08  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.14419155e+03 2.15458792e+02 1.42946098e+03 5.67323990e-01
 4.84577038e+01 1.30341319e+01 1.90210257e+00 2.77761334e+00
 1.33319127e+01 6.00543505e-01]
grad_E = [-7.43085278e-06 -3.45938620e-04  4.62640663e-05 -5.40856046e-04
  8.72084494e-04 -1.20401098e-03  3.08519383e-04  7.77121462e-05
 -3.47393724e-06 -3.72761909e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19165124        1
[INPUT] 0    0    [1    /1   ]  215.46354268         1
[INPUT] 0    0    [1    /1   ]  1429.46034802        1
[INPUT] 0    0    [1    /1   ]  0.566607486054       1
[INPUT] 0    0    [1    /1   ]  48.4455732637        1
[INPUT] 0    0    [1    /1   ]  13.0514409815        1
[INPUT] 0    0    [1    /1   ]  1.89935923522        1
[INPUT] 1    0    [1    /1   ]  2.77730368329        1
[INPUT] 1    0    [1    /1   ]  13.331925174         1
[INPUT] 1    0    [1    /1   ]  0.602135985226       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1916512351263, 1.0]], [0, [215.463542679888, 1.0]], [0, [1429.4603480220019, 1.0]], [0, [0.5666074860540894, 1.0]], [0, [48.445573263670866, 1.0]], [0, [13.051440981509188, 1.0]], [0, [1.8993592352210775, 1.0]], [1, [2.777303683286896, 1.0]], [1, [13.331925174042704, 1.0]], [1, [0.6021359852264007, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19165124]
bas 1, expnt(s) = [215.46354268]
bas 2, expnt(s) = [1429.46034802]
bas 3, expnt(s) = [0.56660749]
bas 4, expnt(s) = [48.44557326]
bas 5, expnt(s) = [13.05144098]
bas 6, expnt(s) = [1.89935924]
bas 7, expnt(s) = [2.77730368]
bas 8, expnt(s) = [13.33192517]
bas 9, expnt(s) = [0.60213599]
CPU time:         9.33
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419165e+03 7.96091019e+02 2.15463543e+02 1.42084064e+02
 1.42946035e+03 5.87346126e+02 5.66607486e-01 1.64997269e+00
 4.84455733e+01 4.63933356e+01 1.30514410e+01 1.73483778e+01
 1.89935924e+00 4.08761853e+00 2.77730368e+00 1.04595646e+01
 1.33319252e+01 7.43191060e+01 6.02135985e-01 1.54740010e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96551752879833
cond(S) = 156.2997824278499
E1 = -183.1367722066259  E_coul = 55.012482889302284
init E= -128.124289317324
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742754696017929  LUMO = 2.66326100111852
  mo_energy =
[-3.25126862e+01 -1.85379749e+00 -7.42754696e-01 -7.42754696e-01
 -7.42754696e-01  2.66326100e+00  2.66326100e+00  2.66326100e+00
  2.69551661e+00  1.99644742e+01  1.99644742e+01  1.99644742e+01
  4.40722969e+01  3.19595886e+02  1.98498591e+03  7.27409848e+03]
E1 = -182.14520152453542  E_coul = 53.950057770901736
cycle= 1 E= -128.195143753634  delta_E= -0.0709  |g|= 0.163  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259229
diis-c [-0.06719956  1.        ]
  HOMO = -0.806702871821456  LUMO = 2.61002641121193
  mo_energy =
[-3.27841338e+01 -1.91962291e+00 -8.06702872e-01 -8.06702872e-01
 -8.06702872e-01  2.61002641e+00  2.61002641e+00  2.61002641e+00
  2.64415975e+00  1.97757323e+01  1.97757323e+01  1.97757323e+01
  4.38406250e+01  3.19288572e+02  1.98462796e+03  7.27371511e+03]
E1 = -182.60216183861064  E_coul = 54.4054202381585
cycle= 2 E= -128.196741600452  delta_E= -0.0016  |g|= 0.0617  |ddm|= 0.0634
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100591
diis-c [-4.47688740e-04  2.75692377e-01  7.24307623e-01]
  HOMO = -0.78413798048625  LUMO = 2.63047001647404
  mo_energy =
[-3.27100491e+01 -1.89622074e+00 -7.84137980e-01 -7.84137980e-01
 -7.84137980e-01  2.63047002e+00  2.63047002e+00  2.63047002e+00
  2.66377592e+00  1.98313714e+01  1.98313714e+01  1.98313714e+01
  4.39057756e+01  3.19369383e+02  1.98471435e+03  7.27380298e+03]
E1 = -182.47138867484028  E_coul = 54.27434988425987
cycle= 3 E= -128.19703879058  delta_E= -0.000297  |g|= 0.000788  |ddm|= 0.018
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00108599
diis-c [-5.08425737e-08 -3.47372583e-03  1.68864218e-03  1.00178508e+00]
  HOMO = -0.784417773365534  LUMO = 2.63025056798125
  mo_energy =
[-3.27108613e+01 -1.89655506e+00 -7.84417773e-01 -7.84417773e-01
 -7.84417773e-01  2.63025057e+00  2.63025057e+00  2.63025057e+00
  2.66351570e+00  1.98307414e+01  1.98307414e+01  1.98307414e+01
  4.39050264e+01  3.19368707e+02  1.98471379e+03  7.27380245e+03]
E1 = -182.47292569424923  E_coul = 54.2758868606814
cycle= 4 E= -128.197038833568  delta_E= -4.3e-08  |g|= 3.92e-05  |ddm|= 0.000266
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.34049e-05
diis-c [-1.96209082e-10  4.06229875e-04 -1.12136926e-03 -1.46968017e-01
  1.14768316e+00]
  HOMO = -0.784406162210516  LUMO = 2.63026067920395
  mo_energy =
[-3.27108313e+01 -1.89655212e+00 -7.84406162e-01 -7.84406162e-01
 -7.84406162e-01  2.63026068e+00  2.63026068e+00  2.63026068e+00
  2.66351760e+00  1.98307647e+01  1.98307647e+01  1.98307647e+01
  4.39050508e+01  3.19368748e+02  1.98471384e+03  7.27380251e+03]
E1 = -182.47287545495388  E_coul = 54.27583662121611
cycle= 5 E= -128.197038833738  delta_E= -1.7e-10  |g|= 1.76e-06  |ddm|= 1.87e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.47287545495388  E_coul = 54.27583662121611
  HOMO = -0.784405963349536  LUMO = 2.63026086202403
  mo_energy =
[-3.27108309e+01 -1.89655236e+00 -7.84405963e-01 -7.84405963e-01
 -7.84405963e-01  2.63026086e+00  2.63026086e+00  2.63026086e+00
  2.66351738e+00  1.98307650e+01  1.98307650e+01  1.98307650e+01
  4.39050511e+01  3.19368749e+02  1.98471384e+03  7.27380251e+03]
E1 = -182.47287482214412  E_coul = 54.275835988405994
Extra cycle  E= -128.197038833738  delta_E= -3.69e-13  |g|= 3.44e-07  |ddm|= 1e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419165e+03 2.15463543e+02 1.42946035e+03 5.66607486e-01
 4.84455733e+01 1.30514410e+01 1.89935924e+00 2.77730368e+00
 1.33319252e+01 6.02135985e-01]
E = -128.19703883373813
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19165124        1
[INPUT] 0    0    [1    /1   ]  215.46354268         1
[INPUT] 0    0    [1    /1   ]  1429.46034802        1
[INPUT] 0    0    [1    /1   ]  0.566607486054       1
[INPUT] 0    0    [1    /1   ]  48.4455732637        1
[INPUT] 0    0    [1    /1   ]  13.0514409815        1
[INPUT] 0    0    [1    /1   ]  1.89935923522        1
[INPUT] 1    0    [1    /1   ]  2.77730368329        1
[INPUT] 1    0    [1    /1   ]  13.331925174         1
[INPUT] 1    0    [1    /1   ]  0.602135985226       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1916512351263, 1.0]], [0, [215.463542679888, 1.0]], [0, [1429.4603480220019, 1.0]], [0, [0.5666074860540894, 1.0]], [0, [48.445573263670866, 1.0]], [0, [13.051440981509188, 1.0]], [0, [1.8993592352210775, 1.0]], [1, [2.777303683286896, 1.0]], [1, [13.331925174042704, 1.0]], [1, [0.6021359852264007, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19165124]
bas 1, expnt(s) = [215.46354268]
bas 2, expnt(s) = [1429.46034802]
bas 3, expnt(s) = [0.56660749]
bas 4, expnt(s) = [48.44557326]
bas 5, expnt(s) = [13.05144098]
bas 6, expnt(s) = [1.89935924]
bas 7, expnt(s) = [2.77730368]
bas 8, expnt(s) = [13.33192517]
bas 9, expnt(s) = [0.60213599]
CPU time:         9.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419165e+03 7.96091019e+02 2.15463543e+02 1.42084064e+02
 1.42946035e+03 5.87346126e+02 5.66607486e-01 1.64997269e+00
 4.84455733e+01 4.63933356e+01 1.30514410e+01 1.73483778e+01
 1.89935924e+00 4.08761853e+00 2.77730368e+00 1.04595646e+01
 1.33319252e+01 7.43191060e+01 6.02135985e-01 1.54740010e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96551752879833
cond(S) = 156.2997824278499
E1 = -183.1367722066259  E_coul = 55.012482889302284
init E= -128.124289317324
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742754696017929  LUMO = 2.66326100111852
  mo_energy =
[-3.25126862e+01 -1.85379749e+00 -7.42754696e-01 -7.42754696e-01
 -7.42754696e-01  2.66326100e+00  2.66326100e+00  2.66326100e+00
  2.69551661e+00  1.99644742e+01  1.99644742e+01  1.99644742e+01
  4.40722969e+01  3.19595886e+02  1.98498591e+03  7.27409848e+03]
E1 = -182.14520152453542  E_coul = 53.950057770901736
cycle= 1 E= -128.195143753634  delta_E= -0.0709  |g|= 0.163  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259229
diis-c [-0.06719956  1.        ]
  HOMO = -0.806702871821456  LUMO = 2.61002641121193
  mo_energy =
[-3.27841338e+01 -1.91962291e+00 -8.06702872e-01 -8.06702872e-01
 -8.06702872e-01  2.61002641e+00  2.61002641e+00  2.61002641e+00
  2.64415975e+00  1.97757323e+01  1.97757323e+01  1.97757323e+01
  4.38406250e+01  3.19288572e+02  1.98462796e+03  7.27371511e+03]
E1 = -182.60216183861064  E_coul = 54.4054202381585
cycle= 2 E= -128.196741600452  delta_E= -0.0016  |g|= 0.0617  |ddm|= 0.0634
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100591
diis-c [-4.47688740e-04  2.75692377e-01  7.24307623e-01]
  HOMO = -0.78413798048625  LUMO = 2.63047001647404
  mo_energy =
[-3.27100491e+01 -1.89622074e+00 -7.84137980e-01 -7.84137980e-01
 -7.84137980e-01  2.63047002e+00  2.63047002e+00  2.63047002e+00
  2.66377592e+00  1.98313714e+01  1.98313714e+01  1.98313714e+01
  4.39057756e+01  3.19369383e+02  1.98471435e+03  7.27380298e+03]
E1 = -182.47138867484028  E_coul = 54.27434988425987
cycle= 3 E= -128.19703879058  delta_E= -0.000297  |g|= 0.000788  |ddm|= 0.018
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00108599
diis-c [-5.08425737e-08 -3.47372583e-03  1.68864218e-03  1.00178508e+00]
  HOMO = -0.784417773365534  LUMO = 2.63025056798125
  mo_energy =
[-3.27108613e+01 -1.89655506e+00 -7.84417773e-01 -7.84417773e-01
 -7.84417773e-01  2.63025057e+00  2.63025057e+00  2.63025057e+00
  2.66351570e+00  1.98307414e+01  1.98307414e+01  1.98307414e+01
  4.39050264e+01  3.19368707e+02  1.98471379e+03  7.27380245e+03]
E1 = -182.47292569424923  E_coul = 54.2758868606814
cycle= 4 E= -128.197038833568  delta_E= -4.3e-08  |g|= 3.92e-05  |ddm|= 0.000266
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.34049e-05
diis-c [-1.96209082e-10  4.06229875e-04 -1.12136926e-03 -1.46968017e-01
  1.14768316e+00]
  HOMO = -0.784406162210516  LUMO = 2.63026067920395
  mo_energy =
[-3.27108313e+01 -1.89655212e+00 -7.84406162e-01 -7.84406162e-01
 -7.84406162e-01  2.63026068e+00  2.63026068e+00  2.63026068e+00
  2.66351760e+00  1.98307647e+01  1.98307647e+01  1.98307647e+01
  4.39050508e+01  3.19368748e+02  1.98471384e+03  7.27380251e+03]
E1 = -182.47287545495388  E_coul = 54.27583662121611
cycle= 5 E= -128.197038833738  delta_E= -1.7e-10  |g|= 1.76e-06  |ddm|= 1.87e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.47287545495388  E_coul = 54.27583662121611
  HOMO = -0.784405963349536  LUMO = 2.63026086202403
  mo_energy =
[-3.27108309e+01 -1.89655236e+00 -7.84405963e-01 -7.84405963e-01
 -7.84405963e-01  2.63026086e+00  2.63026086e+00  2.63026086e+00
  2.66351738e+00  1.98307650e+01  1.98307650e+01  1.98307650e+01
  4.39050511e+01  3.19368749e+02  1.98471384e+03  7.27380251e+03]
E1 = -182.47287482214412  E_coul = 54.275835988405994
Extra cycle  E= -128.197038833738  delta_E= -3.69e-13  |g|= 3.44e-07  |ddm|= 1e-06
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.2997824278499
E1 = -182.47287482214412  E_coul = 54.275835988405994
init E= -128.197038833738
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.784405988345765  LUMO = 2.63026083761476
  mo_energy =
[-3.27108310e+01 -1.89655247e+00 -7.84405988e-01 -7.84405988e-01
 -7.84405988e-01  2.63026084e+00  2.63026084e+00  2.63026084e+00
  2.66351729e+00  1.98307649e+01  1.98307649e+01  1.98307649e+01
  4.39050510e+01  3.19368749e+02  1.98471384e+03  7.27380251e+03]
E1 = -182.47287508841012  E_coul = 54.27583625467174
cycle= 1 E= -128.197038833738  delta_E= -2.56e-13  |g|= 6.7e-08  |ddm|= 2.02e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.47287508841012  E_coul = 54.27583625467174
  HOMO = -0.784405966705501  LUMO = 2.63026085690427
  mo_energy =
[-3.27108309e+01 -1.89655246e+00 -7.84405967e-01 -7.84405967e-01
 -7.84405967e-01  2.63026086e+00  2.63026086e+00  2.63026086e+00
  2.66351729e+00  1.98307650e+01  1.98307650e+01  1.98307650e+01
  4.39050510e+01  3.19368749e+02  1.98471384e+03  7.27380251e+03]
E1 = -182.4728749862494  E_coul = 54.27583615251112
Extra cycle  E= -128.197038833738  delta_E= 1.14e-13  |g|= 1.84e-08  |ddm|= 3.15e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419165e+03 2.15463543e+02 1.42946035e+03 5.66607486e-01
 4.84455733e+01 1.30514410e+01 1.89935924e+00 2.77730368e+00
 1.33319252e+01 6.02135985e-01]
grad_E = [-7.46262152e-06 -3.27168594e-04  4.60859466e-05 -1.65055011e-03
  6.06915613e-04 -1.47027513e-04  5.86465210e-05 -4.15845329e-03
  1.87467790e-04  1.94290622e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19203132        1
[INPUT] 0    0    [1    /1   ]  215.481271975        1
[INPUT] 0    0    [1    /1   ]  1429.457981          1
[INPUT] 0    0    [1    /1   ]  0.567357280477       1
[INPUT] 0    0    [1    /1   ]  48.4004879758        1
[INPUT] 0    0    [1    /1   ]  13.1151720408        1
[INPUT] 0    0    [1    /1   ]  1.8887634821         1
[INPUT] 1    0    [1    /1   ]  2.77847973469        1
[INPUT] 1    0    [1    /1   ]  13.3318668548        1
[INPUT] 1    0    [1    /1   ]  0.597175110509       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.192031319448, 1.0]], [0, [215.48127197454284, 1.0]], [0, [1429.4579809970983, 1.0]], [0, [0.5673572804766316, 1.0]], [0, [48.40048797581802, 1.0]], [0, [13.115172040778413, 1.0]], [0, [1.8887634821021615, 1.0]], [1, [2.7784797346877212, 1.0]], [1, [13.331866854797306, 1.0]], [1, [0.5971751105090579, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19203132]
bas 1, expnt(s) = [215.48127197]
bas 2, expnt(s) = [1429.457981]
bas 3, expnt(s) = [0.56735728]
bas 4, expnt(s) = [48.40048798]
bas 5, expnt(s) = [13.11517204]
bas 6, expnt(s) = [1.88876348]
bas 7, expnt(s) = [2.77847973]
bas 8, expnt(s) = [13.33186685]
bas 9, expnt(s) = [0.59717511]
CPU time:        11.43
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419203e+03 7.96091125e+02 2.15481272e+02 1.42092833e+02
 1.42945798e+03 5.87345397e+02 5.67357280e-01 1.65160998e+00
 4.84004880e+01 4.63609503e+01 1.31151720e+01 1.74118741e+01
 1.88876348e+00 4.07050420e+00 2.77847973e+00 1.04651012e+01
 1.33318669e+01 7.43186996e+01 5.97175111e-01 1.53148066e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966334371883777
cond(S) = 156.324978397274
E1 = -183.1325522900907  E_coul = 55.008465277355015
init E= -128.124087012736
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743168473960393  LUMO = 2.64660469070579
  mo_energy =
[-3.25129740e+01 -1.85434179e+00 -7.43168474e-01 -7.43168474e-01
 -7.43168474e-01  2.64660469e+00  2.64660469e+00  2.64660469e+00
  2.68681895e+00  1.99532859e+01  1.99532859e+01  1.99532859e+01
  4.41595653e+01  3.19682222e+02  1.98506335e+03  7.27417479e+03]
E1 = -182.09398606047947  E_coul = 53.89916885002055
cycle= 1 E= -128.194817210459  delta_E= -0.0707  |g|= 0.169  |ddm|= 0.185
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.268053
diis-c [-0.07185232  1.        ]
  HOMO = -0.810895123712945  LUMO = 2.59001977844814
  mo_energy =
[-3.27919138e+01 -1.92465621e+00 -8.10895124e-01 -8.10895124e-01
 -8.10895124e-01  2.59001978e+00  2.59001978e+00  2.59001978e+00
  2.63180213e+00  1.97573933e+01  1.97573933e+01  1.97573933e+01
  4.39204561e+01  3.19368903e+02  1.98469977e+03  7.27378597e+03]
E1 = -182.5708312523054  E_coul = 54.374292586379035
cycle= 2 E= -128.196538665926  delta_E= -0.00172  |g|= 0.0645  |ddm|= 0.0663
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105203
diis-c [-4.74414477e-04  2.78103735e-01  7.21896265e-01]
  HOMO = -0.787418033023592  LUMO = 2.61127105324706
  mo_energy =
[-3.27149113e+01 -1.90030190e+00 -7.87418033e-01 -7.87418033e-01
 -7.87418033e-01  2.61127105e+00  2.61127105e+00  2.61127105e+00
  2.65214798e+00  1.98152681e+01  1.98152681e+01  1.98152681e+01
  4.39882180e+01  3.19452846e+02  1.98478946e+03  7.27387719e+03]
E1 = -182.43383170035017  E_coul = 54.23696729297719
cycle= 3 E= -128.196864407373  delta_E= -0.000326  |g|= 0.000792  |ddm|= 0.0188
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00100347
diis-c [-1.03416384e-07 -3.83724437e-03 -7.33518695e-04  1.00457076e+00]
  HOMO = -0.787677989660611  LUMO = 2.61107155004708
  mo_energy =
[-3.27156694e+01 -1.90064634e+00 -7.87677990e-01 -7.87677990e-01
 -7.87677990e-01  2.61107155e+00  2.61107155e+00  2.61107155e+00
  2.65188099e+00  1.98146777e+01  1.98146777e+01  1.98146777e+01
  4.39875096e+01  3.19452240e+02  1.98478898e+03  7.27387675e+03]
E1 = -182.43529417793746  E_coul = 54.23842972573961
cycle= 4 E= -128.196864452198  delta_E= -4.48e-08  |g|= 6.08e-05  |ddm|= 0.000307
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.53995e-05
diis-c [-2.30499450e-10  5.34966401e-04 -1.15605188e-03 -1.82716139e-01
  1.18333722e+00]
  HOMO = -0.787660990861835  LUMO = 2.61108629015994
  mo_energy =
[-3.27156260e+01 -1.90064417e+00 -7.87660991e-01 -7.87660991e-01
 -7.87660991e-01  2.61108629e+00  2.61108629e+00  2.61108629e+00
  2.65188185e+00  1.98147112e+01  1.98147112e+01  1.98147112e+01
  4.39875443e+01  3.19452299e+02  1.98478906e+03  7.27387684e+03]
E1 = -182.43522185033152  E_coul = 54.23835739769982
cycle= 5 E= -128.196864452632  delta_E= -4.34e-10  |g|= 1.42e-06  |ddm|= 3.23e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.43522185033152  E_coul = 54.23835739769982
  HOMO = -0.787660980137421  LUMO = 2.61108631351144
  mo_energy =
[-3.27156261e+01 -1.90064451e+00 -7.87660980e-01 -7.87660980e-01
 -7.87660980e-01  2.61108631e+00  2.61108631e+00  2.61108631e+00
  2.65188157e+00  1.98147111e+01  1.98147111e+01  1.98147111e+01
  4.39875441e+01  3.19452299e+02  1.98478906e+03  7.27387684e+03]
E1 = -182.43522211386755  E_coul = 54.23835766123565
Extra cycle  E= -128.196864452632  delta_E= -1.99e-13  |g|= 2.57e-07  |ddm|= 8.36e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419203e+03 2.15481272e+02 1.42945798e+03 5.67357280e-01
 4.84004880e+01 1.31151720e+01 1.88876348e+00 2.77847973e+00
 1.33318669e+01 5.97175111e-01]
E = -128.1968644526319
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19173777        1
[INPUT] 0    0    [1    /1   ]  215.467579217        1
[INPUT] 0    0    [1    /1   ]  1429.45980911        1
[INPUT] 0    0    [1    /1   ]  0.566778196356       1
[INPUT] 0    0    [1    /1   ]  48.4353084192        1
[INPUT] 0    0    [1    /1   ]  13.0659510233        1
[INPUT] 0    0    [1    /1   ]  1.89694683502        1
[INPUT] 1    0    [1    /1   ]  2.77757144213        1
[INPUT] 1    0    [1    /1   ]  13.3319118961        1
[INPUT] 1    0    [1    /1   ]  0.601006512406       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1917377712584, 1.0]], [0, [215.46757921730747, 1.0]], [0, [1429.4598091069022, 1.0]], [0, [0.5667781963560172, 1.0]], [0, [48.43530841924089, 1.0]], [0, [13.06595102325255, 1.0]], [0, [1.8969468350221674, 1.0]], [1, [2.77757144213343, 1.0]], [1, [13.331911896141868, 1.0]], [1, [0.6010065124064347, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19173777]
bas 1, expnt(s) = [215.46757922]
bas 2, expnt(s) = [1429.45980911]
bas 3, expnt(s) = [0.5667782]
bas 4, expnt(s) = [48.43530842]
bas 5, expnt(s) = [13.06595102]
bas 6, expnt(s) = [1.89694684]
bas 7, expnt(s) = [2.77757144]
bas 8, expnt(s) = [13.3319119]
bas 9, expnt(s) = [0.60100651]
CPU time:        11.57
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419174e+03 7.96091044e+02 2.15467579e+02 1.42086061e+02
 1.42945981e+03 5.87345960e+02 5.66778196e-01 1.65034551e+00
 4.84353084e+01 4.63859629e+01 1.30659510e+01 1.73628412e+01
 1.89694684e+00 4.08372411e+00 2.77757144e+00 1.04608251e+01
 1.33319119e+01 7.43190135e+01 6.01006512e-01 1.54377273e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965711060307946
cond(S) = 156.30550395257387
E1 = -183.13598729738305  E_coul = 55.01162155579624
init E= -128.124365741587
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742848496045401  LUMO = 2.65947950483781
  mo_energy =
[-3.25127583e+01 -1.85391731e+00 -7.42848496e-01 -7.42848496e-01
 -7.42848496e-01  2.65947950e+00  2.65947950e+00  2.65947950e+00
  2.69354724e+00  1.99619292e+01  1.99619292e+01  1.99619292e+01
  4.40922063e+01  3.19615554e+02  1.98500354e+03  7.27411585e+03]
E1 = -182.13363111158992  E_coul = 53.938504706508034
cycle= 1 E= -128.195126405082  delta_E= -0.0708  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261228
diis-c [-0.06824005  1.        ]
  HOMO = -0.807659063496758  LUMO = 2.60547847173047
  mo_energy =
[-3.27859140e+01 -1.92076622e+00 -8.07659063e-01 -8.07659063e-01
 -8.07659063e-01  2.60547847e+00  2.60547847e+00  2.60547847e+00
  2.64135325e+00  1.97715578e+01  1.97715578e+01  1.97715578e+01
  4.38588387e+01  3.19306869e+02  1.98464430e+03  7.27373123e+03]
E1 = -182.59509190466366  E_coul = 54.39834000751785
cycle= 2 E= -128.196751897146  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.064
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101634
diis-c [-4.53481521e-04  2.76252001e-01  7.23747999e-01]
  HOMO = -0.784887535009961  LUMO = 2.62610516451036
  mo_energy =
[-3.27111683e+01 -1.89714879e+00 -7.84887535e-01 -7.84887535e-01
 -7.84887535e-01  2.62610516e+00  2.62610516e+00  2.62610516e+00
  2.66113476e+00  1.98277032e+01  1.98277032e+01  1.98277032e+01
  4.39245807e+01  3.19388390e+02  1.98473144e+03  7.27381986e+03]
E1 = -182.46291588378804  E_coul = 54.265860464893244
cycle= 3 E= -128.197055418895  delta_E= -0.000304  |g|= 0.000786  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106457
diis-c [-6.07215665e-08 -3.55399514e-03  1.12273210e-03  1.00243126e+00]
  HOMO = -0.785162597779294  LUMO = 2.62589044655507
  mo_energy =
[-3.27119675e+01 -1.89748517e+00 -7.85162598e-01 -7.85162598e-01
 -7.85162598e-01  2.62589045e+00  2.62589045e+00  2.62589045e+00
  2.66087319e+00  1.98270827e+01  1.98270827e+01  1.98270827e+01
  4.39238414e+01  3.19387730e+02  1.98473090e+03  7.27381936e+03]
E1 = -182.46443494351877  E_coul = 54.26737948161669
cycle= 4 E= -128.197055461902  delta_E= -4.3e-08  |g|= 4.41e-05  |ddm|= 0.000275
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.06748e-05
diis-c [-2.11891456e-10  4.43646127e-04 -1.14726889e-03 -1.58045644e-01
  1.15874927e+00]
  HOMO = -0.78514975066153  LUMO = 2.62590162288836
  mo_energy =
[-3.27119345e+01 -1.89748239e+00 -7.85149751e-01 -7.85149751e-01
 -7.85149751e-01  2.62590162e+00  2.62590162e+00  2.62590162e+00
  2.66087487e+00  1.98271083e+01  1.98271083e+01  1.98271083e+01
  4.39238681e+01  3.19387776e+02  1.98473096e+03  7.27381942e+03]
E1 = -182.4643796754054  E_coul = 54.267324213283835
cycle= 5 E= -128.197055462122  delta_E= -2.2e-10  |g|= 1.7e-06  |ddm|= 2.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4643796754054  E_coul = 54.267324213283835
  HOMO = -0.785149602046106  LUMO = 2.62590176270247
  mo_energy =
[-3.27119342e+01 -1.89748267e+00 -7.85149602e-01 -7.85149602e-01
 -7.85149602e-01  2.62590176e+00  2.62590176e+00  2.62590176e+00
  2.66087463e+00  1.98271085e+01  1.98271085e+01  1.98271085e+01
  4.39238683e+01  3.19387776e+02  1.98473096e+03  7.27381942e+03]
E1 = -182.4643792895961  E_coul = 54.26732382747412
Extra cycle  E= -128.197055462122  delta_E= -4.26e-13  |g|= 3.23e-07  |ddm|= 9.79e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419174e+03 2.15467579e+02 1.42945981e+03 5.66778196e-01
 4.84353084e+01 1.30659510e+01 1.89694684e+00 2.77757144e+00
 1.33319119e+01 6.01006512e-01]
E = -128.197055462122
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19173777        1
[INPUT] 0    0    [1    /1   ]  215.467579217        1
[INPUT] 0    0    [1    /1   ]  1429.45980911        1
[INPUT] 0    0    [1    /1   ]  0.566778196356       1
[INPUT] 0    0    [1    /1   ]  48.4353084192        1
[INPUT] 0    0    [1    /1   ]  13.0659510233        1
[INPUT] 0    0    [1    /1   ]  1.89694683502        1
[INPUT] 1    0    [1    /1   ]  2.77757144213        1
[INPUT] 1    0    [1    /1   ]  13.3319118961        1
[INPUT] 1    0    [1    /1   ]  0.601006512406       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1917377712584, 1.0]], [0, [215.46757921730747, 1.0]], [0, [1429.4598091069022, 1.0]], [0, [0.5667781963560172, 1.0]], [0, [48.43530841924089, 1.0]], [0, [13.06595102325255, 1.0]], [0, [1.8969468350221674, 1.0]], [1, [2.77757144213343, 1.0]], [1, [13.331911896141868, 1.0]], [1, [0.6010065124064347, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19173777]
bas 1, expnt(s) = [215.46757922]
bas 2, expnt(s) = [1429.45980911]
bas 3, expnt(s) = [0.5667782]
bas 4, expnt(s) = [48.43530842]
bas 5, expnt(s) = [13.06595102]
bas 6, expnt(s) = [1.89694684]
bas 7, expnt(s) = [2.77757144]
bas 8, expnt(s) = [13.3319119]
bas 9, expnt(s) = [0.60100651]
CPU time:        11.73
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419174e+03 7.96091044e+02 2.15467579e+02 1.42086061e+02
 1.42945981e+03 5.87345960e+02 5.66778196e-01 1.65034551e+00
 4.84353084e+01 4.63859629e+01 1.30659510e+01 1.73628412e+01
 1.89694684e+00 4.08372411e+00 2.77757144e+00 1.04608251e+01
 1.33319119e+01 7.43190135e+01 6.01006512e-01 1.54377273e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965711060307946
cond(S) = 156.30550395257387
E1 = -183.13598729738305  E_coul = 55.01162155579624
init E= -128.124365741587
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742848496045401  LUMO = 2.65947950483781
  mo_energy =
[-3.25127583e+01 -1.85391731e+00 -7.42848496e-01 -7.42848496e-01
 -7.42848496e-01  2.65947950e+00  2.65947950e+00  2.65947950e+00
  2.69354724e+00  1.99619292e+01  1.99619292e+01  1.99619292e+01
  4.40922063e+01  3.19615554e+02  1.98500354e+03  7.27411585e+03]
E1 = -182.13363111158992  E_coul = 53.938504706508034
cycle= 1 E= -128.195126405082  delta_E= -0.0708  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261228
diis-c [-0.06824005  1.        ]
  HOMO = -0.807659063496758  LUMO = 2.60547847173047
  mo_energy =
[-3.27859140e+01 -1.92076622e+00 -8.07659063e-01 -8.07659063e-01
 -8.07659063e-01  2.60547847e+00  2.60547847e+00  2.60547847e+00
  2.64135325e+00  1.97715578e+01  1.97715578e+01  1.97715578e+01
  4.38588387e+01  3.19306869e+02  1.98464430e+03  7.27373123e+03]
E1 = -182.59509190466366  E_coul = 54.39834000751785
cycle= 2 E= -128.196751897146  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.064
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101634
diis-c [-4.53481521e-04  2.76252001e-01  7.23747999e-01]
  HOMO = -0.784887535009961  LUMO = 2.62610516451036
  mo_energy =
[-3.27111683e+01 -1.89714879e+00 -7.84887535e-01 -7.84887535e-01
 -7.84887535e-01  2.62610516e+00  2.62610516e+00  2.62610516e+00
  2.66113476e+00  1.98277032e+01  1.98277032e+01  1.98277032e+01
  4.39245807e+01  3.19388390e+02  1.98473144e+03  7.27381986e+03]
E1 = -182.46291588378804  E_coul = 54.265860464893244
cycle= 3 E= -128.197055418895  delta_E= -0.000304  |g|= 0.000786  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106457
diis-c [-6.07215665e-08 -3.55399514e-03  1.12273210e-03  1.00243126e+00]
  HOMO = -0.785162597779294  LUMO = 2.62589044655507
  mo_energy =
[-3.27119675e+01 -1.89748517e+00 -7.85162598e-01 -7.85162598e-01
 -7.85162598e-01  2.62589045e+00  2.62589045e+00  2.62589045e+00
  2.66087319e+00  1.98270827e+01  1.98270827e+01  1.98270827e+01
  4.39238414e+01  3.19387730e+02  1.98473090e+03  7.27381936e+03]
E1 = -182.46443494351877  E_coul = 54.26737948161669
cycle= 4 E= -128.197055461902  delta_E= -4.3e-08  |g|= 4.41e-05  |ddm|= 0.000275
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.06748e-05
diis-c [-2.11891456e-10  4.43646127e-04 -1.14726889e-03 -1.58045644e-01
  1.15874927e+00]
  HOMO = -0.78514975066153  LUMO = 2.62590162288836
  mo_energy =
[-3.27119345e+01 -1.89748239e+00 -7.85149751e-01 -7.85149751e-01
 -7.85149751e-01  2.62590162e+00  2.62590162e+00  2.62590162e+00
  2.66087487e+00  1.98271083e+01  1.98271083e+01  1.98271083e+01
  4.39238681e+01  3.19387776e+02  1.98473096e+03  7.27381942e+03]
E1 = -182.4643796754054  E_coul = 54.267324213283835
cycle= 5 E= -128.197055462122  delta_E= -2.2e-10  |g|= 1.7e-06  |ddm|= 2.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4643796754054  E_coul = 54.267324213283835
  HOMO = -0.785149602046106  LUMO = 2.62590176270247
  mo_energy =
[-3.27119342e+01 -1.89748267e+00 -7.85149602e-01 -7.85149602e-01
 -7.85149602e-01  2.62590176e+00  2.62590176e+00  2.62590176e+00
  2.66087463e+00  1.98271085e+01  1.98271085e+01  1.98271085e+01
  4.39238683e+01  3.19387776e+02  1.98473096e+03  7.27381942e+03]
E1 = -182.4643792895961  E_coul = 54.26732382747412
Extra cycle  E= -128.197055462122  delta_E= -4.26e-13  |g|= 3.23e-07  |ddm|= 9.79e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.30550395257387
E1 = -182.4643792895961  E_coul = 54.26732382747412
init E= -128.197055462122
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.78514961090091  LUMO = 2.62590175293762
  mo_energy =
[-3.27119342e+01 -1.89748276e+00 -7.85149611e-01 -7.85149611e-01
 -7.85149611e-01  2.62590175e+00  2.62590175e+00  2.62590175e+00
  2.66087455e+00  1.98271085e+01  1.98271085e+01  1.98271085e+01
  4.39238682e+01  3.19387776e+02  1.98473096e+03  7.27381942e+03]
E1 = -182.4643794569221  E_coul = 54.2673239948002
cycle= 1 E= -128.197055462122  delta_E= 8.53e-14  |g|= 6.01e-08  |ddm|= 1.89e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4643794569221  E_coul = 54.2673239948002
  HOMO = -0.785149596147318  LUMO = 2.62590176599516
  mo_energy =
[-3.27119342e+01 -1.89748275e+00 -7.85149596e-01 -7.85149596e-01
 -7.85149596e-01  2.62590177e+00  2.62590177e+00  2.62590177e+00
  2.66087455e+00  1.98271085e+01  1.98271085e+01  1.98271085e+01
  4.39238682e+01  3.19387776e+02  1.98473096e+03  7.27381942e+03]
E1 = -182.46437939368369  E_coul = 54.26732393156174
Extra cycle  E= -128.197055462122  delta_E= -2.84e-14  |g|= 1.42e-08  |ddm|= 3.05e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419174e+03 2.15467579e+02 1.42945981e+03 5.66778196e-01
 4.84353084e+01 1.30659510e+01 1.89694684e+00 2.77757144e+00
 1.33319119e+01 6.01006512e-01]
grad_E = [-7.48912094e-06 -3.11552786e-04  4.59388648e-05 -7.14107185e-04
  3.88157381e-04  7.07506037e-04 -5.50002999e-04 -1.08430967e-03
  4.67564335e-05  5.28282409e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.191711          1
[INPUT] 0    0    [1    /1   ]  215.466297174        1
[INPUT] 0    0    [1    /1   ]  1429.45997643        1
[INPUT] 0    0    [1    /1   ]  0.567214067094       1
[INPUT] 0    0    [1    /1   ]  48.4389260657        1
[INPUT] 0    0    [1    /1   ]  13.0597272304        1
[INPUT] 0    0    [1    /1   ]  1.89839173641        1
[INPUT] 1    0    [1    /1   ]  2.77761384994        1
[INPUT] 1    0    [1    /1   ]  13.3319125893        1
[INPUT] 1    0    [1    /1   ]  0.600545248754       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1917110032746, 1.0]], [0, [215.46629717371547, 1.0]], [0, [1429.4599764278887, 1.0]], [0, [0.5672140670936933, 1.0]], [0, [48.438926065698396, 1.0]], [0, [13.059727230437671, 1.0]], [0, [1.898391736410991, 1.0]], [1, [2.7776138499369147, 1.0]], [1, [13.3319125892816, 1.0]], [1, [0.6005452487543921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.191711]
bas 1, expnt(s) = [215.46629717]
bas 2, expnt(s) = [1429.45997643]
bas 3, expnt(s) = [0.56721407]
bas 4, expnt(s) = [48.43892607]
bas 5, expnt(s) = [13.05972723]
bas 6, expnt(s) = [1.89839174]
bas 7, expnt(s) = [2.77761385]
bas 8, expnt(s) = [13.33191259]
bas 9, expnt(s) = [0.60054525]
CPU time:        13.62
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419171e+03 7.96091036e+02 2.15466297e+02 1.42085427e+02
 1.42945998e+03 5.87346012e+02 5.67214067e-01 1.65129729e+00
 4.84389261e+01 4.63885613e+01 1.30597272e+01 1.73566379e+01
 1.89839174e+00 4.08605681e+00 2.77761385e+00 1.04610247e+01
 1.33319126e+01 7.43190183e+01 6.00545249e-01 1.54229184e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965786778505514
cond(S) = 156.30878355411303
E1 = -183.13570217082864  E_coul = 55.01125773967618
init E= -128.124444431152
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742888975507641  LUMO = 2.65788965932826
  mo_energy =
[-3.25128191e+01 -1.85393564e+00 -7.42888976e-01 -7.42888976e-01
 -7.42888976e-01  2.65788966e+00  2.65788966e+00  2.65788966e+00
  2.69662640e+00  1.99606735e+01  1.99606735e+01  1.99606735e+01
  4.40870949e+01  3.19608153e+02  1.98499686e+03  7.27410931e+03]
E1 = -182.12864044092723  E_coul = 53.93352558099195
cycle= 1 E= -128.195114859935  delta_E= -0.0707  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262178
diis-c [-0.06873733  1.        ]
  HOMO = -0.808047431706831  LUMO = 2.6035754080236
  mo_energy =
[-3.27868169e+01 -1.92119269e+00 -8.08047432e-01 -8.08047432e-01
 -8.08047432e-01  2.60357541e+00  2.60357541e+00  2.60357541e+00
  2.64402989e+00  1.97695453e+01  1.97695453e+01  1.97695453e+01
  4.38529541e+01  3.19298515e+02  1.98463665e+03  7.27372370e+03]
E1 = -182.5920278109442  E_coul = 54.395275335842555
cycle= 2 E= -128.196752475102  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102081
diis-c [-4.53847562e-04  2.76436890e-01  7.23563110e-01]
  HOMO = -0.785186574834491  LUMO = 2.62428069120829
  mo_energy =
[-3.27117814e+01 -1.89748068e+00 -7.85186575e-01 -7.85186575e-01
 -7.85186575e-01  2.62428069e+00  2.62428069e+00  2.62428069e+00
  2.66390449e+00  1.98259119e+01  1.98259119e+01  1.98259119e+01
  4.39189481e+01  3.19380343e+02  1.98472410e+03  7.27381266e+03]
E1 = -182.45924829889088  E_coul = 54.26218956575263
cycle= 3 E= -128.197058733138  delta_E= -0.000306  |g|= 0.000787  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106139
diis-c [-6.38872763e-08 -3.55224338e-03  1.03989127e-03  1.00251235e+00]
  HOMO = -0.785461030181695  LUMO = 2.62406671950971
  mo_energy =
[-3.27125790e+01 -1.89781869e+00 -7.85461030e-01 -7.85461030e-01
 -7.85461030e-01  2.62406672e+00  2.62406672e+00  2.62406672e+00
  2.66364145e+00  1.98252923e+01  1.98252923e+01  1.98252923e+01
  4.39182097e+01  3.19379684e+02  1.98472356e+03  7.27381216e+03]
E1 = -182.46076554616408  E_coul = 54.26370676974072
cycle= 4 E= -128.197058776423  delta_E= -4.33e-08  |g|= 4.56e-05  |ddm|= 0.000278
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.28262e-05
diis-c [-2.10707981e-10  4.53384876e-04 -1.16720927e-03 -1.62191653e-01
  1.16290548e+00]
  HOMO = -0.785447853787937  LUMO = 2.62407817874769
  mo_energy =
[-3.27125451e+01 -1.89781605e+00 -7.85447854e-01 -7.85447854e-01
 -7.85447854e-01  2.62407818e+00  2.62407818e+00  2.62407818e+00
  2.66364298e+00  1.98253186e+01  1.98253186e+01  1.98253186e+01
  4.39182371e+01  3.19379731e+02  1.98472362e+03  7.27381222e+03]
E1 = -182.4607089451261  E_coul = 54.26365016846625
cycle= 5 E= -128.19705877666  delta_E= -2.36e-10  |g|= 1.64e-06  |ddm|= 2.28e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4607089451261  E_coul = 54.26365016846625
  HOMO = -0.785447723071391  LUMO = 2.62407830298452
  mo_energy =
[-3.27125448e+01 -1.89781633e+00 -7.85447723e-01 -7.85447723e-01
 -7.85447723e-01  2.62407830e+00  2.62407830e+00  2.62407830e+00
  2.66364273e+00  1.98253187e+01  1.98253187e+01  1.98253187e+01
  4.39182372e+01  3.19379731e+02  1.98472362e+03  7.27381222e+03]
E1 = -182.46070864082083  E_coul = 54.26364986416055
Extra cycle  E= -128.19705877666  delta_E= -4.26e-13  |g|= 3.1e-07  |ddm|= 9.5e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419171e+03 2.15466297e+02 1.42945998e+03 5.67214067e-01
 4.84389261e+01 1.30597272e+01 1.89839174e+00 2.77761385e+00
 1.33319126e+01 6.00545249e-01]
E = -128.19705877666027
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:32 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.191711          1
[INPUT] 0    0    [1    /1   ]  215.466297174        1
[INPUT] 0    0    [1    /1   ]  1429.45997643        1
[INPUT] 0    0    [1    /1   ]  0.567214067094       1
[INPUT] 0    0    [1    /1   ]  48.4389260657        1
[INPUT] 0    0    [1    /1   ]  13.0597272304        1
[INPUT] 0    0    [1    /1   ]  1.89839173641        1
[INPUT] 1    0    [1    /1   ]  2.77761384994        1
[INPUT] 1    0    [1    /1   ]  13.3319125893        1
[INPUT] 1    0    [1    /1   ]  0.600545248754       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1917110032746, 1.0]], [0, [215.46629717371547, 1.0]], [0, [1429.4599764278887, 1.0]], [0, [0.5672140670936933, 1.0]], [0, [48.438926065698396, 1.0]], [0, [13.059727230437671, 1.0]], [0, [1.898391736410991, 1.0]], [1, [2.7776138499369147, 1.0]], [1, [13.3319125892816, 1.0]], [1, [0.6005452487543921, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.191711]
bas 1, expnt(s) = [215.46629717]
bas 2, expnt(s) = [1429.45997643]
bas 3, expnt(s) = [0.56721407]
bas 4, expnt(s) = [48.43892607]
bas 5, expnt(s) = [13.05972723]
bas 6, expnt(s) = [1.89839174]
bas 7, expnt(s) = [2.77761385]
bas 8, expnt(s) = [13.33191259]
bas 9, expnt(s) = [0.60054525]
CPU time:        13.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419171e+03 7.96091036e+02 2.15466297e+02 1.42085427e+02
 1.42945998e+03 5.87346012e+02 5.67214067e-01 1.65129729e+00
 4.84389261e+01 4.63885613e+01 1.30597272e+01 1.73566379e+01
 1.89839174e+00 4.08605681e+00 2.77761385e+00 1.04610247e+01
 1.33319126e+01 7.43190183e+01 6.00545249e-01 1.54229184e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965786778505514
cond(S) = 156.30878355411303
E1 = -183.13570217082864  E_coul = 55.01125773967618
init E= -128.124444431152
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742888975507641  LUMO = 2.65788965932826
  mo_energy =
[-3.25128191e+01 -1.85393564e+00 -7.42888976e-01 -7.42888976e-01
 -7.42888976e-01  2.65788966e+00  2.65788966e+00  2.65788966e+00
  2.69662640e+00  1.99606735e+01  1.99606735e+01  1.99606735e+01
  4.40870949e+01  3.19608153e+02  1.98499686e+03  7.27410931e+03]
E1 = -182.12864044092723  E_coul = 53.93352558099195
cycle= 1 E= -128.195114859935  delta_E= -0.0707  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262178
diis-c [-0.06873733  1.        ]
  HOMO = -0.808047431706831  LUMO = 2.6035754080236
  mo_energy =
[-3.27868169e+01 -1.92119269e+00 -8.08047432e-01 -8.08047432e-01
 -8.08047432e-01  2.60357541e+00  2.60357541e+00  2.60357541e+00
  2.64402989e+00  1.97695453e+01  1.97695453e+01  1.97695453e+01
  4.38529541e+01  3.19298515e+02  1.98463665e+03  7.27372370e+03]
E1 = -182.5920278109442  E_coul = 54.395275335842555
cycle= 2 E= -128.196752475102  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102081
diis-c [-4.53847562e-04  2.76436890e-01  7.23563110e-01]
  HOMO = -0.785186574834491  LUMO = 2.62428069120829
  mo_energy =
[-3.27117814e+01 -1.89748068e+00 -7.85186575e-01 -7.85186575e-01
 -7.85186575e-01  2.62428069e+00  2.62428069e+00  2.62428069e+00
  2.66390449e+00  1.98259119e+01  1.98259119e+01  1.98259119e+01
  4.39189481e+01  3.19380343e+02  1.98472410e+03  7.27381266e+03]
E1 = -182.45924829889088  E_coul = 54.26218956575263
cycle= 3 E= -128.197058733138  delta_E= -0.000306  |g|= 0.000787  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106139
diis-c [-6.38872763e-08 -3.55224338e-03  1.03989127e-03  1.00251235e+00]
  HOMO = -0.785461030181695  LUMO = 2.62406671950971
  mo_energy =
[-3.27125790e+01 -1.89781869e+00 -7.85461030e-01 -7.85461030e-01
 -7.85461030e-01  2.62406672e+00  2.62406672e+00  2.62406672e+00
  2.66364145e+00  1.98252923e+01  1.98252923e+01  1.98252923e+01
  4.39182097e+01  3.19379684e+02  1.98472356e+03  7.27381216e+03]
E1 = -182.46076554616408  E_coul = 54.26370676974072
cycle= 4 E= -128.197058776423  delta_E= -4.33e-08  |g|= 4.56e-05  |ddm|= 0.000278
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.28262e-05
diis-c [-2.10707981e-10  4.53384876e-04 -1.16720927e-03 -1.62191653e-01
  1.16290548e+00]
  HOMO = -0.785447853787937  LUMO = 2.62407817874769
  mo_energy =
[-3.27125451e+01 -1.89781605e+00 -7.85447854e-01 -7.85447854e-01
 -7.85447854e-01  2.62407818e+00  2.62407818e+00  2.62407818e+00
  2.66364298e+00  1.98253186e+01  1.98253186e+01  1.98253186e+01
  4.39182371e+01  3.19379731e+02  1.98472362e+03  7.27381222e+03]
E1 = -182.4607089451261  E_coul = 54.26365016846625
cycle= 5 E= -128.19705877666  delta_E= -2.36e-10  |g|= 1.64e-06  |ddm|= 2.28e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4607089451261  E_coul = 54.26365016846625
  HOMO = -0.785447723071391  LUMO = 2.62407830298452
  mo_energy =
[-3.27125448e+01 -1.89781633e+00 -7.85447723e-01 -7.85447723e-01
 -7.85447723e-01  2.62407830e+00  2.62407830e+00  2.62407830e+00
  2.66364273e+00  1.98253187e+01  1.98253187e+01  1.98253187e+01
  4.39182372e+01  3.19379731e+02  1.98472362e+03  7.27381222e+03]
E1 = -182.46070864082083  E_coul = 54.26364986416055
Extra cycle  E= -128.19705877666  delta_E= -4.26e-13  |g|= 3.1e-07  |ddm|= 9.5e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.30878355411303
E1 = -182.46070864082083  E_coul = 54.26364986416055
init E= -128.19705877666
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785447726989158  LUMO = 2.62407829773185
  mo_energy =
[-3.27125449e+01 -1.89781641e+00 -7.85447727e-01 -7.85447727e-01
 -7.85447727e-01  2.62407830e+00  2.62407830e+00  2.62407830e+00
  2.66364266e+00  1.98253187e+01  1.98253187e+01  1.98253187e+01
  4.39182371e+01  3.19379731e+02  1.98472362e+03  7.27381222e+03]
E1 = -182.46070877491616  E_coul = 54.26364999825601
cycle= 1 E= -128.19705877666  delta_E= 1.14e-13  |g|= 5.71e-08  |ddm|= 1.81e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46070877491616  E_coul = 54.26364999825601
  HOMO = -0.785447714622967  LUMO = 2.62407830863514
  mo_energy =
[-3.27125448e+01 -1.89781642e+00 -7.85447715e-01 -7.85447715e-01
 -7.85447715e-01  2.62407831e+00  2.62407831e+00  2.62407831e+00
  2.66364266e+00  1.98253187e+01  1.98253187e+01  1.98253187e+01
  4.39182372e+01  3.19379731e+02  1.98472362e+03  7.27381222e+03]
E1 = -182.4607087246601  E_coul = 54.26364994799996
Extra cycle  E= -128.19705877666  delta_E= 2.84e-14  |g|= 1.28e-08  |ddm|= 2.97e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419171e+03 2.15466297e+02 1.42945998e+03 5.67214067e-01
 4.84389261e+01 1.30597272e+01 1.89839174e+00 2.77761385e+00
 1.33319126e+01 6.00545249e-01]
grad_E = [-7.47836655e-06 -3.18030968e-04  4.59993161e-05 -1.30047641e-04
  4.81282807e-04  3.26237904e-04 -4.72681948e-04  9.68141053e-05
 -4.32935817e-06 -3.50570987e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19171974        1
[INPUT] 0    0    [1    /1   ]  215.46666731         1
[INPUT] 0    0    [1    /1   ]  1429.45992269        1
[INPUT] 0    0    [1    /1   ]  0.567360030263       1
[INPUT] 0    0    [1    /1   ]  48.4383846783        1
[INPUT] 0    0    [1    /1   ]  13.0592625227        1
[INPUT] 0    0    [1    /1   ]  1.89898749411        1
[INPUT] 1    0    [1    /1   ]  2.77759270552        1
[INPUT] 1    0    [1    /1   ]  13.3319137678        1
[INPUT] 1    0    [1    /1   ]  0.600506744022       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1917197442413, 1.0]], [0, [215.46666731041572, 1.0]], [0, [1429.4599226916143, 1.0]], [0, [0.5673600302630842, 1.0]], [0, [48.438384678329165, 1.0]], [0, [13.059262522733649, 1.0]], [0, [1.8989874941134695, 1.0]], [1, [2.777592705518873, 1.0]], [1, [13.331913767770681, 1.0]], [1, [0.6005067440224082, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19171974]
bas 1, expnt(s) = [215.46666731]
bas 2, expnt(s) = [1429.45992269]
bas 3, expnt(s) = [0.56736003]
bas 4, expnt(s) = [48.43838468]
bas 5, expnt(s) = [13.05926252]
bas 6, expnt(s) = [1.89898749]
bas 7, expnt(s) = [2.77759271]
bas 8, expnt(s) = [13.33191377]
bas 9, expnt(s) = [0.60050674]
CPU time:        15.70
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419172e+03 7.96091039e+02 2.15466667e+02 1.42085610e+02
 1.42945992e+03 5.87345995e+02 5.67360030e-01 1.65161598e+00
 4.84383847e+01 4.63881725e+01 1.30592625e+01 1.73561747e+01
 1.89898749e+00 4.08701849e+00 2.77759271e+00 1.04609252e+01
 1.33319138e+01 7.43190265e+01 6.00506744e-01 1.54216824e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965791502212504
cond(S) = 156.31142665139146
E1 = -183.13568754856007  E_coul = 55.011234292225595
init E= -128.124453256334
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742891848211228  LUMO = 2.65774435133781
  mo_energy =
[-3.25128273e+01 -1.85393215e+00 -7.42891848e-01 -7.42891848e-01
 -7.42891848e-01  2.65774435e+00  2.65774435e+00  2.65774435e+00
  2.69785288e+00  1.99604942e+01  1.99604942e+01  1.99604942e+01
  4.40888386e+01  3.19607722e+02  1.98499658e+03  7.27410915e+03]
E1 = -182.128296385743  E_coul = 53.9331817995408
cycle= 1 E= -128.195114586202  delta_E= -0.0707  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262245
diis-c [-0.06877222  1.        ]
  HOMO = -0.808073696083693  LUMO = 2.60340965666085
  mo_energy =
[-3.27868836e+01 -1.92121965e+00 -8.08073696e-01 -8.08073696e-01
 -8.08073696e-01  2.60340966e+00  2.60340966e+00  2.60340966e+00
  2.64520775e+00  1.97693134e+01  1.97693134e+01  1.97693134e+01
  4.38546432e+01  3.19298016e+02  1.98463630e+03  7.27372347e+03]
E1 = -182.59181825352647  E_coul = 54.39506517745242
cycle= 2 E= -128.196753076074  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102114
diis-c [-4.53885242e-04  2.76451525e-01  7.23548475e-01]
  HOMO = -0.785206805019976  LUMO = 2.62412007880786
  mo_energy =
[-3.27118277e+01 -1.89750109e+00 -7.85206805e-01 -7.85206805e-01
 -7.85206805e-01  2.62412008e+00  2.62412008e+00  2.62412008e+00
  2.66509417e+00  1.98256954e+01  1.98256954e+01  1.98256954e+01
  4.39206546e+01  3.19379866e+02  1.98472377e+03  7.27381246e+03]
E1 = -182.4589969725966  E_coul = 54.26193744327849
cycle= 3 E= -128.197059529318  delta_E= -0.000306  |g|= 0.000787  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0010609
diis-c [-6.42804105e-08 -3.55369254e-03  1.02635029e-03  1.00252734e+00]
  HOMO = -0.785481156551235  LUMO = 2.62390621566394
  mo_energy =
[-3.27126250e+01 -1.89783923e+00 -7.85481157e-01 -7.85481157e-01
 -7.85481157e-01  2.62390622e+00  2.62390622e+00  2.62390622e+00
  2.66483092e+00  1.98250760e+01  1.98250760e+01  1.98250760e+01
  4.39199165e+01  3.19379207e+02  1.98472324e+03  7.27381195e+03]
E1 = -182.46051380139244  E_coul = 54.263454228768005
cycle= 4 E= -128.197059572624  delta_E= -4.33e-08  |g|= 4.57e-05  |ddm|= 0.000278
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.30721e-05
diis-c [-2.10664123e-10  4.54328713e-04 -1.16887153e-03 -1.62553166e-01
  1.16326771e+00]
  HOMO = -0.785467942592818  LUMO = 2.62391770715985
  mo_energy =
[-3.27125910e+01 -1.89783661e+00 -7.85467943e-01 -7.85467943e-01
 -7.85467943e-01  2.62391771e+00  2.62391771e+00  2.62391771e+00
  2.66483243e+00  1.98251023e+01  1.98251023e+01  1.98251023e+01
  4.39199439e+01  3.19379254e+02  1.98472330e+03  7.27381202e+03]
E1 = -182.46045703720296  E_coul = 54.263397464340194
cycle= 5 E= -128.197059572863  delta_E= -2.38e-10  |g|= 1.64e-06  |ddm|= 2.29e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46045703720296  E_coul = 54.263397464340194
  HOMO = -0.785467813677345  LUMO = 2.62391782982784
  mo_energy =
[-3.27125907e+01 -1.89783689e+00 -7.85467814e-01 -7.85467814e-01
 -7.85467814e-01  2.62391783e+00  2.62391783e+00  2.62391783e+00
  2.66483219e+00  1.98251025e+01  1.98251025e+01  1.98251025e+01
  4.39199441e+01  3.19379254e+02  1.98472330e+03  7.27381202e+03]
E1 = -182.4604567407903  E_coul = 54.26339716792718
Extra cycle  E= -128.197059572863  delta_E= -3.41e-13  |g|= 3.09e-07  |ddm|= 9.48e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419172e+03 2.15466667e+02 1.42945992e+03 5.67360030e-01
 4.84383847e+01 1.30592625e+01 1.89898749e+00 2.77759271e+00
 1.33319138e+01 6.00506744e-01]
E = -128.1970595728631
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19171974        1
[INPUT] 0    0    [1    /1   ]  215.46666731         1
[INPUT] 0    0    [1    /1   ]  1429.45992269        1
[INPUT] 0    0    [1    /1   ]  0.567360030263       1
[INPUT] 0    0    [1    /1   ]  48.4383846783        1
[INPUT] 0    0    [1    /1   ]  13.0592625227        1
[INPUT] 0    0    [1    /1   ]  1.89898749411        1
[INPUT] 1    0    [1    /1   ]  2.77759270552        1
[INPUT] 1    0    [1    /1   ]  13.3319137678        1
[INPUT] 1    0    [1    /1   ]  0.600506744022       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1917197442413, 1.0]], [0, [215.46666731041572, 1.0]], [0, [1429.4599226916143, 1.0]], [0, [0.5673600302630842, 1.0]], [0, [48.438384678329165, 1.0]], [0, [13.059262522733649, 1.0]], [0, [1.8989874941134695, 1.0]], [1, [2.777592705518873, 1.0]], [1, [13.331913767770681, 1.0]], [1, [0.6005067440224082, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19171974]
bas 1, expnt(s) = [215.46666731]
bas 2, expnt(s) = [1429.45992269]
bas 3, expnt(s) = [0.56736003]
bas 4, expnt(s) = [48.43838468]
bas 5, expnt(s) = [13.05926252]
bas 6, expnt(s) = [1.89898749]
bas 7, expnt(s) = [2.77759271]
bas 8, expnt(s) = [13.33191377]
bas 9, expnt(s) = [0.60050674]
CPU time:        15.89
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419172e+03 7.96091039e+02 2.15466667e+02 1.42085610e+02
 1.42945992e+03 5.87345995e+02 5.67360030e-01 1.65161598e+00
 4.84383847e+01 4.63881725e+01 1.30592625e+01 1.73561747e+01
 1.89898749e+00 4.08701849e+00 2.77759271e+00 1.04609252e+01
 1.33319138e+01 7.43190265e+01 6.00506744e-01 1.54216824e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965791502212504
cond(S) = 156.31142665139146
E1 = -183.13568754856007  E_coul = 55.011234292225595
init E= -128.124453256334
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742891848211228  LUMO = 2.65774435133781
  mo_energy =
[-3.25128273e+01 -1.85393215e+00 -7.42891848e-01 -7.42891848e-01
 -7.42891848e-01  2.65774435e+00  2.65774435e+00  2.65774435e+00
  2.69785288e+00  1.99604942e+01  1.99604942e+01  1.99604942e+01
  4.40888386e+01  3.19607722e+02  1.98499658e+03  7.27410915e+03]
E1 = -182.128296385743  E_coul = 53.9331817995408
cycle= 1 E= -128.195114586202  delta_E= -0.0707  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262245
diis-c [-0.06877222  1.        ]
  HOMO = -0.808073696083693  LUMO = 2.60340965666085
  mo_energy =
[-3.27868836e+01 -1.92121965e+00 -8.08073696e-01 -8.08073696e-01
 -8.08073696e-01  2.60340966e+00  2.60340966e+00  2.60340966e+00
  2.64520775e+00  1.97693134e+01  1.97693134e+01  1.97693134e+01
  4.38546432e+01  3.19298016e+02  1.98463630e+03  7.27372347e+03]
E1 = -182.59181825352647  E_coul = 54.39506517745242
cycle= 2 E= -128.196753076074  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102114
diis-c [-4.53885242e-04  2.76451525e-01  7.23548475e-01]
  HOMO = -0.785206805019976  LUMO = 2.62412007880786
  mo_energy =
[-3.27118277e+01 -1.89750109e+00 -7.85206805e-01 -7.85206805e-01
 -7.85206805e-01  2.62412008e+00  2.62412008e+00  2.62412008e+00
  2.66509417e+00  1.98256954e+01  1.98256954e+01  1.98256954e+01
  4.39206546e+01  3.19379866e+02  1.98472377e+03  7.27381246e+03]
E1 = -182.4589969725966  E_coul = 54.26193744327849
cycle= 3 E= -128.197059529318  delta_E= -0.000306  |g|= 0.000787  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0010609
diis-c [-6.42804105e-08 -3.55369254e-03  1.02635029e-03  1.00252734e+00]
  HOMO = -0.785481156551235  LUMO = 2.62390621566394
  mo_energy =
[-3.27126250e+01 -1.89783923e+00 -7.85481157e-01 -7.85481157e-01
 -7.85481157e-01  2.62390622e+00  2.62390622e+00  2.62390622e+00
  2.66483092e+00  1.98250760e+01  1.98250760e+01  1.98250760e+01
  4.39199165e+01  3.19379207e+02  1.98472324e+03  7.27381195e+03]
E1 = -182.46051380139244  E_coul = 54.263454228768005
cycle= 4 E= -128.197059572624  delta_E= -4.33e-08  |g|= 4.57e-05  |ddm|= 0.000278
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.30721e-05
diis-c [-2.10664123e-10  4.54328713e-04 -1.16887153e-03 -1.62553166e-01
  1.16326771e+00]
  HOMO = -0.785467942592818  LUMO = 2.62391770715985
  mo_energy =
[-3.27125910e+01 -1.89783661e+00 -7.85467943e-01 -7.85467943e-01
 -7.85467943e-01  2.62391771e+00  2.62391771e+00  2.62391771e+00
  2.66483243e+00  1.98251023e+01  1.98251023e+01  1.98251023e+01
  4.39199439e+01  3.19379254e+02  1.98472330e+03  7.27381202e+03]
E1 = -182.46045703720296  E_coul = 54.263397464340194
cycle= 5 E= -128.197059572863  delta_E= -2.38e-10  |g|= 1.64e-06  |ddm|= 2.29e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46045703720296  E_coul = 54.263397464340194
  HOMO = -0.785467813677345  LUMO = 2.62391782982784
  mo_energy =
[-3.27125907e+01 -1.89783689e+00 -7.85467814e-01 -7.85467814e-01
 -7.85467814e-01  2.62391783e+00  2.62391783e+00  2.62391783e+00
  2.66483219e+00  1.98251025e+01  1.98251025e+01  1.98251025e+01
  4.39199441e+01  3.19379254e+02  1.98472330e+03  7.27381202e+03]
E1 = -182.4604567407903  E_coul = 54.26339716792718
Extra cycle  E= -128.197059572863  delta_E= -3.41e-13  |g|= 3.09e-07  |ddm|= 9.48e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.31142665139146
E1 = -182.4604567407903  E_coul = 54.26339716792718
init E= -128.197059572863
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785467817115814  LUMO = 2.62391782501309
  mo_energy =
[-3.27125908e+01 -1.89783697e+00 -7.85467817e-01 -7.85467817e-01
 -7.85467817e-01  2.62391783e+00  2.62391783e+00  2.62391783e+00
  2.66483212e+00  1.98251025e+01  1.98251025e+01  1.98251025e+01
  4.39199440e+01  3.19379254e+02  1.98472330e+03  7.27381202e+03]
E1 = -182.46045687160847  E_coul = 54.26339729874539
cycle= 1 E= -128.197059572863  delta_E= 2.84e-14  |g|= 5.69e-08  |ddm|= 1.81e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46045687160847  E_coul = 54.26339729874539
  HOMO = -0.785467804984914  LUMO = 2.62391783570401
  mo_energy =
[-3.27125907e+01 -1.89783697e+00 -7.85467805e-01 -7.85467805e-01
 -7.85467805e-01  2.62391784e+00  2.62391784e+00  2.62391784e+00
  2.66483212e+00  1.98251025e+01  1.98251025e+01  1.98251025e+01
  4.39199440e+01  3.19379254e+02  1.98472330e+03  7.27381202e+03]
E1 = -182.4604568226248  E_coul = 54.26339724976179
Extra cycle  E= -128.197059572863  delta_E= 8.53e-14  |g|= 1.26e-08  |ddm|= 2.96e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.14419172e+03 2.15466667e+02 1.42945992e+03 5.67360030e-01
 4.84383847e+01 1.30592625e+01 1.89898749e+00 2.77759271e+00
 1.33319138e+01 6.00506744e-01]
grad_E = [-7.47826262e-06 -3.18192309e-04  4.59999889e-05 -7.23359326e-05
  4.85720757e-04  2.99008341e-04 -4.42877819e-04  1.70679621e-04
 -6.39623581e-06 -7.63445642e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19178125        1
[INPUT] 0    0    [1    /1   ]  215.469327951        1
[INPUT] 0    0    [1    /1   ]  1429.45954354        1
[INPUT] 0    0    [1    /1   ]  0.568000587848       1
[INPUT] 0    0    [1    /1   ]  48.4338237939        1
[INPUT] 0    0    [1    /1   ]  13.0589681693        1
[INPUT] 0    0    [1    /1   ]  1.90177819113        1
[INPUT] 1    0    [1    /1   ]  2.77751422215        1
[INPUT] 1    0    [1    /1   ]  13.3319121191        1
[INPUT] 1    0    [1    /1   ]  0.600468990483       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.191781250116, 1.0]], [0, [215.469327951179, 1.0]], [0, [1429.4595435398173, 1.0]], [0, [0.5680005878477358, 1.0]], [0, [48.433823793898604, 1.0]], [0, [13.058968169329642, 1.0]], [0, [1.9017781911279268, 1.0]], [1, [2.7775142221505544, 1.0]], [1, [13.331912119055133, 1.0]], [1, [0.6004689904830975, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19178125]
bas 1, expnt(s) = [215.46932795]
bas 2, expnt(s) = [1429.45954354]
bas 3, expnt(s) = [0.56800059]
bas 4, expnt(s) = [48.43382379]
bas 5, expnt(s) = [13.05896817]
bas 6, expnt(s) = [1.90177819]
bas 7, expnt(s) = [2.77751422]
bas 8, expnt(s) = [13.33191212]
bas 9, expnt(s) = [0.60046899]
CPU time:        17.88
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419178e+03 7.96091056e+02 2.15469328e+02 1.42086926e+02
 1.42945954e+03 5.87345879e+02 5.68000588e-01 1.65301431e+00
 4.84338238e+01 4.63848965e+01 1.30589682e+01 1.73558813e+01
 1.90177819e+00 4.09152229e+00 2.77751422e+00 1.04605557e+01
 1.33319121e+01 7.43190151e+01 6.00468990e-01 1.54204704e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965788718365237
cond(S) = 156.324787588404
E1 = -183.13571484867919  E_coul = 55.011239403120996
init E= -128.124475445558
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74289289611716  LUMO = 2.65757305455694
  mo_energy =
[-3.25128501e+01 -1.85390615e+00 -7.42892896e-01 -7.42892896e-01
 -7.42892896e-01  2.65757305e+00  2.65757305e+00  2.65757305e+00
  2.70351407e+00  1.99601434e+01  1.99601434e+01  1.99601434e+01
  4.41002964e+01  3.19607527e+02  1.98499710e+03  7.27411038e+03]
E1 = -182.12821854916848  E_coul = 53.93310026365988
cycle= 1 E= -128.195118285509  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262269
diis-c [-0.06878502  1.        ]
  HOMO = -0.80807810506184  LUMO = 2.60323775749439
  mo_energy =
[-3.27869200e+01 -1.92121300e+00 -8.08078105e-01 -8.08078105e-01
 -8.08078105e-01  2.60323776e+00  2.60323776e+00  2.60323776e+00
  2.65074687e+00  1.97689476e+01  1.97689476e+01  1.97689476e+01
  4.38660837e+01  3.19297794e+02  1.98463678e+03  7.27372466e+03]
E1 = -182.59177943131863  E_coul = 54.39502225521424
cycle= 2 E= -128.196757176104  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102129
diis-c [-4.53960605e-04  2.76462881e-01  7.23537119e-01]
  HOMO = -0.785210498000011  LUMO = 2.62394827310582
  mo_energy =
[-3.27118565e+01 -1.89749270e+00 -7.85210498e-01 -7.85210498e-01
 -7.85210498e-01  2.62394827e+00  2.62394827e+00  2.62394827e+00
  2.67066470e+00  1.98253348e+01  1.98253348e+01  1.98253348e+01
  4.39320995e+01  3.19379653e+02  1.98472427e+03  7.27381365e+03]
E1 = -182.45894746100666  E_coul = 54.26188375371093
cycle= 3 E= -128.197063707296  delta_E= -0.000307  |g|= 0.000788  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105967
diis-c [-6.51668331e-08 -3.56165206e-03  9.87383124e-04  1.00257427e+00]
  HOMO = -0.785484580676544  LUMO = 2.62373465917382
  mo_energy =
[-3.27126530e+01 -1.89783107e+00 -7.85484581e-01 -7.85484581e-01
 -7.85484581e-01  2.62373466e+00  2.62373466e+00  2.62373466e+00
  2.67040083e+00  1.98247159e+01  1.98247159e+01  1.98247159e+01
  4.39313619e+01  3.19378996e+02  1.98472373e+03  7.27381315e+03]
E1 = -182.46046300437956  E_coul = 54.26339925375611
cycle= 4 E= -128.197063750623  delta_E= -4.33e-08  |g|= 4.61e-05  |ddm|= 0.000279
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.35799e-05
diis-c [-2.10786679e-10  4.56059617e-04 -1.17086986e-03 -1.63045244e-01
  1.16376005e+00]
  HOMO = -0.785471290541436  LUMO = 2.62374621614255
  mo_energy =
[-3.27126188e+01 -1.89782846e+00 -7.85471291e-01 -7.85471291e-01
 -7.85471291e-01  2.62374622e+00  2.62374622e+00  2.62374622e+00
  2.67040234e+00  1.98247424e+01  1.98247424e+01  1.98247424e+01
  4.39313895e+01  3.19379043e+02  1.98472379e+03  7.27381322e+03]
E1 = -182.46040587238284  E_coul = 54.26334212151761
cycle= 5 E= -128.197063750865  delta_E= -2.42e-10  |g|= 1.63e-06  |ddm|= 2.31e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46040587238284  E_coul = 54.26334212151761
  HOMO = -0.785471165119207  LUMO = 2.62374633576663
  mo_energy =
[-3.27126186e+01 -1.89782874e+00 -7.85471165e-01 -7.85471165e-01
 -7.85471165e-01  2.62374634e+00  2.62374634e+00  2.62374634e+00
  2.67040209e+00  1.98247426e+01  1.98247426e+01  1.98247426e+01
  4.39313896e+01  3.19379043e+02  1.98472379e+03  7.27381322e+03]
E1 = -182.46040559021932  E_coul = 54.26334183935369
Extra cycle  E= -128.197063750866  delta_E= -3.98e-13  |g|= 3.08e-07  |ddm|= 9.45e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419178e+03 2.15469328e+02 1.42945954e+03 5.68000588e-01
 4.84338238e+01 1.30589682e+01 1.90177819e+00 2.77751422e+00
 1.33319121e+01 6.00468990e-01]
E = -128.19706375086562
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19178125        1
[INPUT] 0    0    [1    /1   ]  215.469327951        1
[INPUT] 0    0    [1    /1   ]  1429.45954354        1
[INPUT] 0    0    [1    /1   ]  0.568000587848       1
[INPUT] 0    0    [1    /1   ]  48.4338237939        1
[INPUT] 0    0    [1    /1   ]  13.0589681693        1
[INPUT] 0    0    [1    /1   ]  1.90177819113        1
[INPUT] 1    0    [1    /1   ]  2.77751422215        1
[INPUT] 1    0    [1    /1   ]  13.3319121191        1
[INPUT] 1    0    [1    /1   ]  0.600468990483       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.191781250116, 1.0]], [0, [215.469327951179, 1.0]], [0, [1429.4595435398173, 1.0]], [0, [0.5680005878477358, 1.0]], [0, [48.433823793898604, 1.0]], [0, [13.058968169329642, 1.0]], [0, [1.9017781911279268, 1.0]], [1, [2.7775142221505544, 1.0]], [1, [13.331912119055133, 1.0]], [1, [0.6004689904830975, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19178125]
bas 1, expnt(s) = [215.46932795]
bas 2, expnt(s) = [1429.45954354]
bas 3, expnt(s) = [0.56800059]
bas 4, expnt(s) = [48.43382379]
bas 5, expnt(s) = [13.05896817]
bas 6, expnt(s) = [1.90177819]
bas 7, expnt(s) = [2.77751422]
bas 8, expnt(s) = [13.33191212]
bas 9, expnt(s) = [0.60046899]
CPU time:        18.07
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419178e+03 7.96091056e+02 2.15469328e+02 1.42086926e+02
 1.42945954e+03 5.87345879e+02 5.68000588e-01 1.65301431e+00
 4.84338238e+01 4.63848965e+01 1.30589682e+01 1.73558813e+01
 1.90177819e+00 4.09152229e+00 2.77751422e+00 1.04605557e+01
 1.33319121e+01 7.43190151e+01 6.00468990e-01 1.54204704e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965788718365237
cond(S) = 156.324787588404
E1 = -183.13571484867919  E_coul = 55.011239403120996
init E= -128.124475445558
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74289289611716  LUMO = 2.65757305455694
  mo_energy =
[-3.25128501e+01 -1.85390615e+00 -7.42892896e-01 -7.42892896e-01
 -7.42892896e-01  2.65757305e+00  2.65757305e+00  2.65757305e+00
  2.70351407e+00  1.99601434e+01  1.99601434e+01  1.99601434e+01
  4.41002964e+01  3.19607527e+02  1.98499710e+03  7.27411038e+03]
E1 = -182.12821854916848  E_coul = 53.93310026365988
cycle= 1 E= -128.195118285509  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262269
diis-c [-0.06878502  1.        ]
  HOMO = -0.80807810506184  LUMO = 2.60323775749439
  mo_energy =
[-3.27869200e+01 -1.92121300e+00 -8.08078105e-01 -8.08078105e-01
 -8.08078105e-01  2.60323776e+00  2.60323776e+00  2.60323776e+00
  2.65074687e+00  1.97689476e+01  1.97689476e+01  1.97689476e+01
  4.38660837e+01  3.19297794e+02  1.98463678e+03  7.27372466e+03]
E1 = -182.59177943131863  E_coul = 54.39502225521424
cycle= 2 E= -128.196757176104  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102129
diis-c [-4.53960605e-04  2.76462881e-01  7.23537119e-01]
  HOMO = -0.785210498000011  LUMO = 2.62394827310582
  mo_energy =
[-3.27118565e+01 -1.89749270e+00 -7.85210498e-01 -7.85210498e-01
 -7.85210498e-01  2.62394827e+00  2.62394827e+00  2.62394827e+00
  2.67066470e+00  1.98253348e+01  1.98253348e+01  1.98253348e+01
  4.39320995e+01  3.19379653e+02  1.98472427e+03  7.27381365e+03]
E1 = -182.45894746100666  E_coul = 54.26188375371093
cycle= 3 E= -128.197063707296  delta_E= -0.000307  |g|= 0.000788  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105967
diis-c [-6.51668331e-08 -3.56165206e-03  9.87383124e-04  1.00257427e+00]
  HOMO = -0.785484580676544  LUMO = 2.62373465917382
  mo_energy =
[-3.27126530e+01 -1.89783107e+00 -7.85484581e-01 -7.85484581e-01
 -7.85484581e-01  2.62373466e+00  2.62373466e+00  2.62373466e+00
  2.67040083e+00  1.98247159e+01  1.98247159e+01  1.98247159e+01
  4.39313619e+01  3.19378996e+02  1.98472373e+03  7.27381315e+03]
E1 = -182.46046300437956  E_coul = 54.26339925375611
cycle= 4 E= -128.197063750623  delta_E= -4.33e-08  |g|= 4.61e-05  |ddm|= 0.000279
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.35799e-05
diis-c [-2.10786679e-10  4.56059617e-04 -1.17086986e-03 -1.63045244e-01
  1.16376005e+00]
  HOMO = -0.785471290541436  LUMO = 2.62374621614255
  mo_energy =
[-3.27126188e+01 -1.89782846e+00 -7.85471291e-01 -7.85471291e-01
 -7.85471291e-01  2.62374622e+00  2.62374622e+00  2.62374622e+00
  2.67040234e+00  1.98247424e+01  1.98247424e+01  1.98247424e+01
  4.39313895e+01  3.19379043e+02  1.98472379e+03  7.27381322e+03]
E1 = -182.46040587238284  E_coul = 54.26334212151761
cycle= 5 E= -128.197063750865  delta_E= -2.42e-10  |g|= 1.63e-06  |ddm|= 2.31e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46040587238284  E_coul = 54.26334212151761
  HOMO = -0.785471165119207  LUMO = 2.62374633576663
  mo_energy =
[-3.27126186e+01 -1.89782874e+00 -7.85471165e-01 -7.85471165e-01
 -7.85471165e-01  2.62374634e+00  2.62374634e+00  2.62374634e+00
  2.67040209e+00  1.98247426e+01  1.98247426e+01  1.98247426e+01
  4.39313896e+01  3.19379043e+02  1.98472379e+03  7.27381322e+03]
E1 = -182.46040559021932  E_coul = 54.26334183935369
Extra cycle  E= -128.197063750866  delta_E= -3.98e-13  |g|= 3.08e-07  |ddm|= 9.45e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.324787588404
E1 = -182.46040559021932  E_coul = 54.26334183935369
init E= -128.197063750866
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785471167683742  LUMO = 2.62374633174958
  mo_energy =
[-3.27126186e+01 -1.89782882e+00 -7.85471168e-01 -7.85471168e-01
 -7.85471168e-01  2.62374633e+00  2.62374633e+00  2.62374633e+00
  2.67040202e+00  1.98247425e+01  1.98247425e+01  1.98247425e+01
  4.39313896e+01  3.19379043e+02  1.98472379e+03  7.27381322e+03]
E1 = -182.46040571491184  E_coul = 54.263341964046305
cycle= 1 E= -128.197063750866  delta_E= 8.53e-14  |g|= 5.65e-08  |ddm|= 1.8e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46040571491184  E_coul = 54.263341964046305
  HOMO = -0.785471155991334  LUMO = 2.62374634204471
  mo_energy =
[-3.27126186e+01 -1.89782883e+00 -7.85471156e-01 -7.85471156e-01
 -7.85471156e-01  2.62374634e+00  2.62374634e+00  2.62374634e+00
  2.67040202e+00  1.98247425e+01  1.98247425e+01  1.98247425e+01
  4.39313896e+01  3.19379043e+02  1.98472379e+03  7.27381322e+03]
E1 = -182.46040566827762  E_coul = 54.26334191741205
Extra cycle  E= -128.197063750866  delta_E= -2.84e-14  |g|= 1.24e-08  |ddm|= 2.95e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419178e+03 2.15469328e+02 1.42945954e+03 5.68000588e-01
 4.84338238e+01 1.30589682e+01 1.90177819e+00 2.77751422e+00
 1.33319121e+01 6.00468990e-01]
grad_E = [-7.48186356e-06 -3.16598858e-04  4.59802677e-05  4.57897475e-06
  4.75068069e-04  2.91012405e-04 -2.99946883e-04  1.84081159e-04
 -3.20490705e-06 -1.04190949e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19207598        1
[INPUT] 0    0    [1    /1   ]  215.482098142        1
[INPUT] 0    0    [1    /1   ]  1429.45772635        1
[INPUT] 0    0    [1    /1   ]  0.570711223566       1
[INPUT] 0    0    [1    /1   ]  48.4116374677        1
[INPUT] 0    0    [1    /1   ]  13.0590892723        1
[INPUT] 0    0    [1    /1   ]  1.91379091301        1
[INPUT] 1    0    [1    /1   ]  2.77734329753        1
[INPUT] 1    0    [1    /1   ]  13.3318769956        1
[INPUT] 1    0    [1    /1   ]  0.600460851711       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.192075979275, 1.0]], [0, [215.48209814230066, 1.0]], [0, [1429.4577263474737, 1.0]], [0, [0.5707112235664913, 1.0]], [0, [48.41163746772104, 1.0]], [0, [13.05908927234944, 1.0]], [0, [1.9137909130130104, 1.0]], [1, [2.7773432975301984, 1.0]], [1, [13.331876995636046, 1.0]], [1, [0.6004608517106006, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19207598]
bas 1, expnt(s) = [215.48209814]
bas 2, expnt(s) = [1429.45772635]
bas 3, expnt(s) = [0.57071122]
bas 4, expnt(s) = [48.41163747]
bas 5, expnt(s) = [13.05908927]
bas 6, expnt(s) = [1.91379091]
bas 7, expnt(s) = [2.7773433]
bas 8, expnt(s) = [13.331877]
bas 9, expnt(s) = [0.60046085]
CPU time:        19.99
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419208e+03 7.96091138e+02 2.15482098e+02 1.42093241e+02
 1.42945773e+03 5.87345319e+02 5.70711224e-01 1.65892722e+00
 4.84116375e+01 4.63689598e+01 1.30590893e+01 1.73560020e+01
 1.91379091e+00 4.11089033e+00 2.77734330e+00 1.04597511e+01
 1.33318770e+01 7.43187703e+01 6.00460852e-01 1.54202092e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965748655011769
cond(S) = 156.38263327853736
E1 = -183.13590280923106  E_coul = 55.01135666750134
init E= -128.12454614173
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742886082808166  LUMO = 2.65746145165781
  mo_energy =
[-3.25129372e+01 -1.85378437e+00 -7.42886083e-01 -7.42886083e-01
 -7.42886083e-01  2.65746145e+00  2.65746145e+00  2.65746145e+00
  2.72781067e+00  1.99595920e+01  1.99595920e+01  1.99595920e+01
  4.41514175e+01  3.19605471e+02  1.98499886e+03  7.27411558e+03]
E1 = -182.12940585574646  E_coul = 53.93427157715005
cycle= 1 E= -128.195134278596  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262091
diis-c [-0.06869165  1.        ]
  HOMO = -0.80797940990777  LUMO = 2.60321587782147
  mo_energy =
[-3.27867984e+01 -1.92105115e+00 -8.07979410e-01 -8.07979410e-01
 -8.07979410e-01  2.60321588e+00  2.60321588e+00  2.60321588e+00
  2.67462639e+00  1.97685636e+01  1.97685636e+01  1.97685636e+01
  4.39173759e+01  3.19295920e+02  1.98463866e+03  7.27372998e+03]
E1 = -182.59253304315905  E_coul = 54.39576189187512
cycle= 2 E= -128.196771151284  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102056
diis-c [-4.54128387e-04  2.76449834e-01  7.23550166e-01]
  HOMO = -0.785136722871402  LUMO = 2.62390344873897
  mo_energy =
[-3.27117918e+01 -1.89735282e+00 -7.85136723e-01 -7.85136723e-01
 -7.85136723e-01  2.62390345e+00  2.62390345e+00  2.62390345e+00
  2.69465438e+00  1.98249047e+01  1.98249047e+01  1.98249047e+01
  4.39833321e+01  3.19377723e+02  1.98472610e+03  7.27381893e+03]
E1 = -182.4598423889479  E_coul = 54.26276521814411
cycle= 3 E= -128.197077170804  delta_E= -0.000306  |g|= 0.000789  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105603
diis-c [-6.80637581e-08 -3.59615600e-03  8.52020176e-04  1.00274414e+00]
  HOMO = -0.785410010261933  LUMO = 2.62369050309429
  mo_energy =
[-3.27125858e+01 -1.89769189e+00 -7.85410010e-01 -7.85410010e-01
 -7.85410010e-01  2.62369050e+00  2.62369050e+00  2.62369050e+00
  2.69438806e+00  1.98242874e+01  1.98242874e+01  1.98242874e+01
  4.39825961e+01  3.19377069e+02  1.98472557e+03  7.27381843e+03]
E1 = -182.46135377745753  E_coul = 54.2642765632647
cycle= 4 E= -128.197077214193  delta_E= -4.34e-08  |g|= 4.71e-05  |ddm|= 0.00028
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.51339e-05
diis-c [-2.11286144e-10  4.61027857e-04 -1.17518366e-03 -1.64062465e-01
  1.16477662e+00]
  HOMO = -0.785396492527977  LUMO = 2.62370225643652
  mo_energy =
[-3.27125510e+01 -1.89768932e+00 -7.85396493e-01 -7.85396493e-01
 -7.85396493e-01  2.62370226e+00  2.62370226e+00  2.62370226e+00
  2.69438954e+00  1.98243144e+01  1.98243144e+01  1.98243144e+01
  4.39826242e+01  3.19377117e+02  1.98472563e+03  7.27381850e+03]
E1 = -182.46129546046527  E_coul = 54.26421824601969
cycle= 5 E= -128.197077214446  delta_E= -2.53e-10  |g|= 1.62e-06  |ddm|= 2.36e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46129546046527  E_coul = 54.26421824601969
  HOMO = -0.785396377762607  LUMO = 2.62370236676731
  mo_energy =
[-3.27125507e+01 -1.89768961e+00 -7.85396378e-01 -7.85396378e-01
 -7.85396378e-01  2.62370237e+00  2.62370237e+00  2.62370237e+00
  2.69438929e+00  1.98243146e+01  1.98243146e+01  1.98243146e+01
  4.39826243e+01  3.19377117e+02  1.98472563e+03  7.27381850e+03]
E1 = -182.46129521954788  E_coul = 54.26421800510211
Extra cycle  E= -128.197077214446  delta_E= -1.71e-13  |g|= 3.04e-07  |ddm|= 9.38e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419208e+03 2.15482098e+02 1.42945773e+03 5.70711224e-01
 4.84116375e+01 1.30590893e+01 1.91379091e+00 2.77734330e+00
 1.33318770e+01 6.00460852e-01]
E = -128.19707721444576
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19207598        1
[INPUT] 0    0    [1    /1   ]  215.482098142        1
[INPUT] 0    0    [1    /1   ]  1429.45772635        1
[INPUT] 0    0    [1    /1   ]  0.570711223566       1
[INPUT] 0    0    [1    /1   ]  48.4116374677        1
[INPUT] 0    0    [1    /1   ]  13.0590892723        1
[INPUT] 0    0    [1    /1   ]  1.91379091301        1
[INPUT] 1    0    [1    /1   ]  2.77734329753        1
[INPUT] 1    0    [1    /1   ]  13.3318769956        1
[INPUT] 1    0    [1    /1   ]  0.600460851711       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.192075979275, 1.0]], [0, [215.48209814230066, 1.0]], [0, [1429.4577263474737, 1.0]], [0, [0.5707112235664913, 1.0]], [0, [48.41163746772104, 1.0]], [0, [13.05908927234944, 1.0]], [0, [1.9137909130130104, 1.0]], [1, [2.7773432975301984, 1.0]], [1, [13.331876995636046, 1.0]], [1, [0.6004608517106006, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19207598]
bas 1, expnt(s) = [215.48209814]
bas 2, expnt(s) = [1429.45772635]
bas 3, expnt(s) = [0.57071122]
bas 4, expnt(s) = [48.41163747]
bas 5, expnt(s) = [13.05908927]
bas 6, expnt(s) = [1.91379091]
bas 7, expnt(s) = [2.7773433]
bas 8, expnt(s) = [13.331877]
bas 9, expnt(s) = [0.60046085]
CPU time:        20.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419208e+03 7.96091138e+02 2.15482098e+02 1.42093241e+02
 1.42945773e+03 5.87345319e+02 5.70711224e-01 1.65892722e+00
 4.84116375e+01 4.63689598e+01 1.30590893e+01 1.73560020e+01
 1.91379091e+00 4.11089033e+00 2.77734330e+00 1.04597511e+01
 1.33318770e+01 7.43187703e+01 6.00460852e-01 1.54202092e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965748655011769
cond(S) = 156.38263327853736
E1 = -183.13590280923106  E_coul = 55.01135666750134
init E= -128.12454614173
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742886082808166  LUMO = 2.65746145165781
  mo_energy =
[-3.25129372e+01 -1.85378437e+00 -7.42886083e-01 -7.42886083e-01
 -7.42886083e-01  2.65746145e+00  2.65746145e+00  2.65746145e+00
  2.72781067e+00  1.99595920e+01  1.99595920e+01  1.99595920e+01
  4.41514175e+01  3.19605471e+02  1.98499886e+03  7.27411558e+03]
E1 = -182.12940585574646  E_coul = 53.93427157715005
cycle= 1 E= -128.195134278596  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262091
diis-c [-0.06869165  1.        ]
  HOMO = -0.80797940990777  LUMO = 2.60321587782147
  mo_energy =
[-3.27867984e+01 -1.92105115e+00 -8.07979410e-01 -8.07979410e-01
 -8.07979410e-01  2.60321588e+00  2.60321588e+00  2.60321588e+00
  2.67462639e+00  1.97685636e+01  1.97685636e+01  1.97685636e+01
  4.39173759e+01  3.19295920e+02  1.98463866e+03  7.27372998e+03]
E1 = -182.59253304315905  E_coul = 54.39576189187512
cycle= 2 E= -128.196771151284  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102056
diis-c [-4.54128387e-04  2.76449834e-01  7.23550166e-01]
  HOMO = -0.785136722871402  LUMO = 2.62390344873897
  mo_energy =
[-3.27117918e+01 -1.89735282e+00 -7.85136723e-01 -7.85136723e-01
 -7.85136723e-01  2.62390345e+00  2.62390345e+00  2.62390345e+00
  2.69465438e+00  1.98249047e+01  1.98249047e+01  1.98249047e+01
  4.39833321e+01  3.19377723e+02  1.98472610e+03  7.27381893e+03]
E1 = -182.4598423889479  E_coul = 54.26276521814411
cycle= 3 E= -128.197077170804  delta_E= -0.000306  |g|= 0.000789  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105603
diis-c [-6.80637581e-08 -3.59615600e-03  8.52020176e-04  1.00274414e+00]
  HOMO = -0.785410010261933  LUMO = 2.62369050309429
  mo_energy =
[-3.27125858e+01 -1.89769189e+00 -7.85410010e-01 -7.85410010e-01
 -7.85410010e-01  2.62369050e+00  2.62369050e+00  2.62369050e+00
  2.69438806e+00  1.98242874e+01  1.98242874e+01  1.98242874e+01
  4.39825961e+01  3.19377069e+02  1.98472557e+03  7.27381843e+03]
E1 = -182.46135377745753  E_coul = 54.2642765632647
cycle= 4 E= -128.197077214193  delta_E= -4.34e-08  |g|= 4.71e-05  |ddm|= 0.00028
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.51339e-05
diis-c [-2.11286144e-10  4.61027857e-04 -1.17518366e-03 -1.64062465e-01
  1.16477662e+00]
  HOMO = -0.785396492527977  LUMO = 2.62370225643652
  mo_energy =
[-3.27125510e+01 -1.89768932e+00 -7.85396493e-01 -7.85396493e-01
 -7.85396493e-01  2.62370226e+00  2.62370226e+00  2.62370226e+00
  2.69438954e+00  1.98243144e+01  1.98243144e+01  1.98243144e+01
  4.39826242e+01  3.19377117e+02  1.98472563e+03  7.27381850e+03]
E1 = -182.46129546046527  E_coul = 54.26421824601969
cycle= 5 E= -128.197077214446  delta_E= -2.53e-10  |g|= 1.62e-06  |ddm|= 2.36e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46129546046527  E_coul = 54.26421824601969
  HOMO = -0.785396377762607  LUMO = 2.62370236676731
  mo_energy =
[-3.27125507e+01 -1.89768961e+00 -7.85396378e-01 -7.85396378e-01
 -7.85396378e-01  2.62370237e+00  2.62370237e+00  2.62370237e+00
  2.69438929e+00  1.98243146e+01  1.98243146e+01  1.98243146e+01
  4.39826243e+01  3.19377117e+02  1.98472563e+03  7.27381850e+03]
E1 = -182.46129521954788  E_coul = 54.26421800510211
Extra cycle  E= -128.197077214446  delta_E= -1.71e-13  |g|= 3.04e-07  |ddm|= 9.38e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.38263327853736
E1 = -182.46129521954788  E_coul = 54.26421800510211
init E= -128.197077214446
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785396377788958  LUMO = 2.62370236506668
  mo_energy =
[-3.27125508e+01 -1.89768968e+00 -7.85396378e-01 -7.85396378e-01
 -7.85396378e-01  2.62370237e+00  2.62370237e+00  2.62370237e+00
  2.69438922e+00  1.98243145e+01  1.98243145e+01  1.98243145e+01
  4.39826242e+01  3.19377117e+02  1.98472563e+03  7.27381850e+03]
E1 = -182.46129532606443  E_coul = 54.264218111618874
cycle= 1 E= -128.197077214446  delta_E= 1.99e-13  |g|= 5.55e-08  |ddm|= 1.76e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46129532606443  E_coul = 54.264218111618874
  HOMO = -0.785396367396708  LUMO = 2.62370237418891
  mo_energy =
[-3.27125508e+01 -1.89768969e+00 -7.85396367e-01 -7.85396367e-01
 -7.85396367e-01  2.62370237e+00  2.62370237e+00  2.62370237e+00
  2.69438922e+00  1.98243145e+01  1.98243145e+01  1.98243145e+01
  4.39826242e+01  3.19377117e+02  1.98472563e+03  7.27381850e+03]
E1 = -182.46129528633966  E_coul = 54.26421807189398
Extra cycle  E= -128.197077214446  delta_E= -1.42e-13  |g|= 1.18e-08  |ddm|= 2.93e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419208e+03 2.15482098e+02 1.42945773e+03 5.70711224e-01
 4.84116375e+01 1.30590893e+01 1.91379091e+00 2.77734330e+00
 1.33318770e+01 6.00460852e-01]
grad_E = [-7.50139412e-06 -3.07490166e-04  4.58727608e-05  1.98357262e-04
  4.01110295e-04  3.57729902e-04  3.00150416e-04  2.48042542e-05
  1.17741237e-05 -8.10334693e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19237316        1
[INPUT] 0    0    [1    /1   ]  215.49495568         1
[INPUT] 0    0    [1    /1   ]  1429.45589446        1
[INPUT] 0    0    [1    /1   ]  0.573092112103       1
[INPUT] 0    0    [1    /1   ]  48.3894016659        1
[INPUT] 0    0    [1    /1   ]  13.0591548205        1
[INPUT] 0    0    [1    /1   ]  1.92460227254        1
[INPUT] 1    0    [1    /1   ]  2.77739922947        1
[INPUT] 1    0    [1    /1   ]  13.3318134702        1
[INPUT] 1    0    [1    /1   ]  0.600535638079       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.19237316359, 1.0]], [0, [215.49495568034362, 1.0]], [0, [1429.4558944602484, 1.0]], [0, [0.573092112102505, 1.0]], [0, [48.389401665909446, 1.0]], [0, [13.059154820491242, 1.0]], [0, [1.9246022725350587, 1.0]], [1, [2.777399229465417, 1.0]], [1, [13.331813470200007, 1.0]], [1, [0.6005356380794765, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19237316]
bas 1, expnt(s) = [215.49495568]
bas 2, expnt(s) = [1429.45589446]
bas 3, expnt(s) = [0.57309211]
bas 4, expnt(s) = [48.38940167]
bas 5, expnt(s) = [13.05915482]
bas 6, expnt(s) = [1.92460227]
bas 7, expnt(s) = [2.77739923]
bas 8, expnt(s) = [13.33181347]
bas 9, expnt(s) = [0.60053564]
CPU time:        22.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419237e+03 7.96091220e+02 2.15494956e+02 1.42099600e+02
 1.42945589e+03 5.87344754e+02 5.73092112e-01 1.66411505e+00
 4.83894017e+01 4.63529857e+01 1.30591548e+01 1.73560674e+01
 1.92460227e+00 4.12829544e+00 2.77739923e+00 1.04600144e+01
 1.33318135e+01 7.43183277e+01 6.00535638e-01 1.54226099e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965697193031133
cond(S) = 156.43352739359824
E1 = -183.13608566261004  E_coul = 55.01149339484631
init E= -128.124592267764
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742875637079991  LUMO = 2.65775588595256
  mo_energy =
[-3.25130120e+01 -1.85367014e+00 -7.42875637e-01 -7.42875637e-01
 -7.42875637e-01  2.65775589e+00  2.65775589e+00  2.65775589e+00
  2.74952663e+00  1.99599659e+01  1.99599659e+01  1.99599659e+01
  4.41958792e+01  3.19597895e+02  1.98499627e+03  7.27411683e+03]
E1 = -182.13111040475033  E_coul = 53.93596654341802
cycle= 1 E= -128.195143861332  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261819
diis-c [-0.0685492  1.       ]
  HOMO = -0.807842191871155  LUMO = 2.60362655451946
  mo_energy =
[-3.27865685e+01 -1.92084697e+00 -8.07842192e-01 -8.07842192e-01
 -8.07842192e-01  2.60362655e+00  2.60362655e+00  2.60362655e+00
  2.69601878e+00  1.97691860e+01  1.97691860e+01  1.97691860e+01
  4.39621014e+01  3.19288634e+02  1.98463631e+03  7.27373146e+03]
E1 = -182.5935854911592  E_coul = 54.39680818008533
cycle= 2 E= -128.196777311074  delta_E= -0.00163  |g|= 0.0626  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101932
diis-c [-4.54127858e-04  2.76404753e-01  7.23595247e-01]
  HOMO = -0.785033995470529  LUMO = 2.62428441220666
  mo_energy =
[-3.27116509e+01 -1.89718108e+00 -7.85033995e-01 -7.85033995e-01
 -7.85033995e-01  2.62428441e+00  2.62428441e+00  2.62428441e+00
  2.71613391e+00  1.98254563e+01  1.98254563e+01  1.98254563e+01
  4.40279702e+01  3.19370346e+02  1.98472366e+03  7.27382032e+03]
E1 = -182.46110244893794  E_coul = 54.26401994370621
cycle= 3 E= -128.197082505232  delta_E= -0.000305  |g|= 0.00079  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105437
diis-c [-7.00307787e-08 -3.62498782e-03  7.60266935e-04  1.00286472e+00]
  HOMO = -0.785306943060051  LUMO = 2.62407168622377
  mo_energy =
[-3.27124437e+01 -1.89752076e+00 -7.85306943e-01 -7.85306943e-01
 -7.85306943e-01  2.62407169e+00  2.62407169e+00  2.62407169e+00
  2.71586541e+00  1.98248398e+01  1.98248398e+01  1.98248398e+01
  4.40272348e+01  3.19369695e+02  1.98472313e+03  7.27381982e+03]
E1 = -182.46261164328948  E_coul = 54.26552909459626
cycle= 4 E= -128.197082548693  delta_E= -4.35e-08  |g|= 4.77e-05  |ddm|= 0.000281
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.61075e-05
diis-c [-2.11140962e-10  4.64207315e-04 -1.17762090e-03 -1.64457249e-01
  1.16517066e+00]
  HOMO = -0.785293291630442  LUMO = 2.62408355577292
  mo_energy =
[-3.27124084e+01 -1.89751820e+00 -7.85293292e-01 -7.85293292e-01
 -7.85293292e-01  2.62408356e+00  2.62408356e+00  2.62408356e+00
  2.71586688e+00  1.98248671e+01  1.98248671e+01  1.98248671e+01
  4.40272632e+01  3.19369743e+02  1.98472320e+03  7.27381989e+03]
E1 = -182.46255255008052  E_coul = 54.26547000112833
cycle= 5 E= -128.197082548952  delta_E= -2.59e-10  |g|= 1.62e-06  |ddm|= 2.39e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46255255008052  E_coul = 54.26547000112833
  HOMO = -0.785293184214511  LUMO = 2.62408365969817
  mo_energy =
[-3.27124082e+01 -1.89751850e+00 -7.85293184e-01 -7.85293184e-01
 -7.85293184e-01  2.62408366e+00  2.62408366e+00  2.62408366e+00
  2.71586662e+00  1.98248672e+01  1.98248672e+01  1.98248672e+01
  4.40272633e+01  3.19369743e+02  1.98472320e+03  7.27381989e+03]
E1 = -182.46255233571318  E_coul = 54.26546978676054
Extra cycle  E= -128.197082548953  delta_E= -4.55e-13  |g|= 3.02e-07  |ddm|= 9.34e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419237e+03 2.15494956e+02 1.42945589e+03 5.73092112e-01
 4.83894017e+01 1.30591548e+01 1.92460227e+00 2.77739923e+00
 1.33318135e+01 6.00535638e-01]
E = -128.19708254895264
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19237316        1
[INPUT] 0    0    [1    /1   ]  215.49495568         1
[INPUT] 0    0    [1    /1   ]  1429.45589446        1
[INPUT] 0    0    [1    /1   ]  0.573092112103       1
[INPUT] 0    0    [1    /1   ]  48.3894016659        1
[INPUT] 0    0    [1    /1   ]  13.0591548205        1
[INPUT] 0    0    [1    /1   ]  1.92460227254        1
[INPUT] 1    0    [1    /1   ]  2.77739922947        1
[INPUT] 1    0    [1    /1   ]  13.3318134702        1
[INPUT] 1    0    [1    /1   ]  0.600535638079       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.19237316359, 1.0]], [0, [215.49495568034362, 1.0]], [0, [1429.4558944602484, 1.0]], [0, [0.573092112102505, 1.0]], [0, [48.389401665909446, 1.0]], [0, [13.059154820491242, 1.0]], [0, [1.9246022725350587, 1.0]], [1, [2.777399229465417, 1.0]], [1, [13.331813470200007, 1.0]], [1, [0.6005356380794765, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19237316]
bas 1, expnt(s) = [215.49495568]
bas 2, expnt(s) = [1429.45589446]
bas 3, expnt(s) = [0.57309211]
bas 4, expnt(s) = [48.38940167]
bas 5, expnt(s) = [13.05915482]
bas 6, expnt(s) = [1.92460227]
bas 7, expnt(s) = [2.77739923]
bas 8, expnt(s) = [13.33181347]
bas 9, expnt(s) = [0.60053564]
CPU time:        22.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419237e+03 7.96091220e+02 2.15494956e+02 1.42099600e+02
 1.42945589e+03 5.87344754e+02 5.73092112e-01 1.66411505e+00
 4.83894017e+01 4.63529857e+01 1.30591548e+01 1.73560674e+01
 1.92460227e+00 4.12829544e+00 2.77739923e+00 1.04600144e+01
 1.33318135e+01 7.43183277e+01 6.00535638e-01 1.54226099e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965697193031133
cond(S) = 156.43352739359824
E1 = -183.13608566261004  E_coul = 55.01149339484631
init E= -128.124592267764
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742875637079991  LUMO = 2.65775588595256
  mo_energy =
[-3.25130120e+01 -1.85367014e+00 -7.42875637e-01 -7.42875637e-01
 -7.42875637e-01  2.65775589e+00  2.65775589e+00  2.65775589e+00
  2.74952663e+00  1.99599659e+01  1.99599659e+01  1.99599659e+01
  4.41958792e+01  3.19597895e+02  1.98499627e+03  7.27411683e+03]
E1 = -182.13111040475033  E_coul = 53.93596654341802
cycle= 1 E= -128.195143861332  delta_E= -0.0706  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261819
diis-c [-0.0685492  1.       ]
  HOMO = -0.807842191871155  LUMO = 2.60362655451946
  mo_energy =
[-3.27865685e+01 -1.92084697e+00 -8.07842192e-01 -8.07842192e-01
 -8.07842192e-01  2.60362655e+00  2.60362655e+00  2.60362655e+00
  2.69601878e+00  1.97691860e+01  1.97691860e+01  1.97691860e+01
  4.39621014e+01  3.19288634e+02  1.98463631e+03  7.27373146e+03]
E1 = -182.5935854911592  E_coul = 54.39680818008533
cycle= 2 E= -128.196777311074  delta_E= -0.00163  |g|= 0.0626  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101932
diis-c [-4.54127858e-04  2.76404753e-01  7.23595247e-01]
  HOMO = -0.785033995470529  LUMO = 2.62428441220666
  mo_energy =
[-3.27116509e+01 -1.89718108e+00 -7.85033995e-01 -7.85033995e-01
 -7.85033995e-01  2.62428441e+00  2.62428441e+00  2.62428441e+00
  2.71613391e+00  1.98254563e+01  1.98254563e+01  1.98254563e+01
  4.40279702e+01  3.19370346e+02  1.98472366e+03  7.27382032e+03]
E1 = -182.46110244893794  E_coul = 54.26401994370621
cycle= 3 E= -128.197082505232  delta_E= -0.000305  |g|= 0.00079  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105437
diis-c [-7.00307787e-08 -3.62498782e-03  7.60266935e-04  1.00286472e+00]
  HOMO = -0.785306943060051  LUMO = 2.62407168622377
  mo_energy =
[-3.27124437e+01 -1.89752076e+00 -7.85306943e-01 -7.85306943e-01
 -7.85306943e-01  2.62407169e+00  2.62407169e+00  2.62407169e+00
  2.71586541e+00  1.98248398e+01  1.98248398e+01  1.98248398e+01
  4.40272348e+01  3.19369695e+02  1.98472313e+03  7.27381982e+03]
E1 = -182.46261164328948  E_coul = 54.26552909459626
cycle= 4 E= -128.197082548693  delta_E= -4.35e-08  |g|= 4.77e-05  |ddm|= 0.000281
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.61075e-05
diis-c [-2.11140962e-10  4.64207315e-04 -1.17762090e-03 -1.64457249e-01
  1.16517066e+00]
  HOMO = -0.785293291630442  LUMO = 2.62408355577292
  mo_energy =
[-3.27124084e+01 -1.89751820e+00 -7.85293292e-01 -7.85293292e-01
 -7.85293292e-01  2.62408356e+00  2.62408356e+00  2.62408356e+00
  2.71586688e+00  1.98248671e+01  1.98248671e+01  1.98248671e+01
  4.40272632e+01  3.19369743e+02  1.98472320e+03  7.27381989e+03]
E1 = -182.46255255008052  E_coul = 54.26547000112833
cycle= 5 E= -128.197082548952  delta_E= -2.59e-10  |g|= 1.62e-06  |ddm|= 2.39e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46255255008052  E_coul = 54.26547000112833
  HOMO = -0.785293184214511  LUMO = 2.62408365969817
  mo_energy =
[-3.27124082e+01 -1.89751850e+00 -7.85293184e-01 -7.85293184e-01
 -7.85293184e-01  2.62408366e+00  2.62408366e+00  2.62408366e+00
  2.71586662e+00  1.98248672e+01  1.98248672e+01  1.98248672e+01
  4.40272633e+01  3.19369743e+02  1.98472320e+03  7.27381989e+03]
E1 = -182.46255233571318  E_coul = 54.26546978676054
Extra cycle  E= -128.197082548953  delta_E= -4.55e-13  |g|= 3.02e-07  |ddm|= 9.34e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.43352739359824
E1 = -182.46255233571318  E_coul = 54.26546978676054
init E= -128.197082548953
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785293182629501  LUMO = 2.62408365947105
  mo_energy =
[-3.27124083e+01 -1.89751857e+00 -7.85293183e-01 -7.85293183e-01
 -7.85293183e-01  2.62408366e+00  2.62408366e+00  2.62408366e+00
  2.71586655e+00  1.98248672e+01  1.98248672e+01  1.98248672e+01
  4.40272632e+01  3.19369743e+02  1.98472320e+03  7.27381989e+03]
E1 = -182.46255243019482  E_coul = 54.265469881242375
cycle= 1 E= -128.197082548952  delta_E= 1.99e-13  |g|= 5.48e-08  |ddm|= 1.74e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46255243019482  E_coul = 54.265469881242375
  HOMO = -0.785293173102788  LUMO = 2.62408366781377
  mo_energy =
[-3.27124082e+01 -1.89751857e+00 -7.85293173e-01 -7.85293173e-01
 -7.85293173e-01  2.62408367e+00  2.62408367e+00  2.62408367e+00
  2.71586655e+00  1.98248672e+01  1.98248672e+01  1.98248672e+01
  4.40272632e+01  3.19369743e+02  1.98472320e+03  7.27381989e+03]
E1 = -182.46255239499428  E_coul = 54.26546984604185
Extra cycle  E= -128.197082548952  delta_E=    0  |g|= 1.14e-08  |ddm|= 2.91e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419237e+03 2.15494956e+02 1.42945589e+03 5.73092112e-01
 4.83894017e+01 1.30591548e+01 1.92460227e+00 2.77739923e+00
 1.33318135e+01 6.00535638e-01]
grad_E = [-7.52112210e-06 -2.98211212e-04  4.57638957e-05  2.89007455e-04
  3.24364982e-04  4.44907432e-04  8.33541604e-04 -1.14301972e-04
  1.52973747e-05 -1.44560251e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19245445        1
[INPUT] 0    0    [1    /1   ]  215.498441829        1
[INPUT] 0    0    [1    /1   ]  1429.45539408        1
[INPUT] 0    0    [1    /1   ]  0.573439604405       1
[INPUT] 0    0    [1    /1   ]  48.3835924767        1
[INPUT] 0    0    [1    /1   ]  13.0586320365        1
[INPUT] 0    0    [1    /1   ]  1.92637621805        1
[INPUT] 1    0    [1    /1   ]  2.77754858291        1
[INPUT] 1    0    [1    /1   ]  13.3317821108        1
[INPUT] 1    0    [1    /1   ]  0.600584563406       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1924544471017, 1.0]], [0, [215.49844182900424, 1.0]], [0, [1429.455394084395, 1.0]], [0, [0.5734396044051666, 1.0]], [0, [48.38359247671822, 1.0]], [0, [13.058632036461578, 1.0]], [0, [1.9263762180513793, 1.0]], [1, [2.7775485829120483, 1.0]], [1, [13.331782110786254, 1.0]], [1, [0.600584563406436, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19245445]
bas 1, expnt(s) = [215.49844183]
bas 2, expnt(s) = [1429.45539408]
bas 3, expnt(s) = [0.5734396]
bas 4, expnt(s) = [48.38359248]
bas 5, expnt(s) = [13.05863204]
bas 6, expnt(s) = [1.92637622]
bas 7, expnt(s) = [2.77754858]
bas 8, expnt(s) = [13.33178211]
bas 9, expnt(s) = [0.60058456]
CPU time:        24.20
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419245e+03 7.96091243e+02 2.15498442e+02 1.42101324e+02
 1.42945539e+03 5.87344600e+02 5.73439604e-01 1.66487176e+00
 4.83835925e+01 4.63488121e+01 1.30586320e+01 1.73555463e+01
 1.92637622e+00 4.13114896e+00 2.77754858e+00 1.04607175e+01
 1.33317821e+01 7.43181091e+01 6.00584563e-01 1.54241805e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965682324493837
cond(S) = 156.44028627885706
E1 = -183.13613225525492  E_coul = 55.01153011884241
init E= -128.124602136413
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742872324390414  LUMO = 2.65800452680037
  mo_energy =
[-3.25130223e+01 -1.85365073e+00 -7.42872324e-01 -7.42872324e-01
 -7.42872324e-01  2.65800453e+00  2.65800453e+00  2.65800453e+00
  2.75292576e+00  1.99605565e+01  1.99605565e+01  1.99605565e+01
  4.42005864e+01  3.19589449e+02  1.98499047e+03  7.27411249e+03]
E1 = -182.1315814205028  E_coul = 53.936434803501996
cycle= 1 E= -128.195146617001  delta_E= -0.0705  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261748
diis-c [-0.06851223  1.        ]
  HOMO = -0.807806628389045  LUMO = 2.60390185726191
  mo_energy =
[-3.27864928e+01 -1.92079574e+00 -8.07806628e-01 -8.07806628e-01
 -8.07806628e-01  2.60390186e+00  2.60390186e+00  2.60390186e+00
  2.69938242e+00  1.97698453e+01  1.97698453e+01  1.97698453e+01
  4.39668871e+01  3.19280272e+02  1.98463059e+03  7.27372719e+03]
E1 = -182.59387267107493  E_coul = 54.39709363201046
cycle= 2 E= -128.196779039064  delta_E= -0.00163  |g|= 0.0625  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101895
diis-c [-4.54020560e-04  2.76383896e-01  7.23616104e-01]
  HOMO = -0.78500757938787  LUMO = 2.62455281214758
  mo_energy =
[-3.27116003e+01 -1.89713876e+00 -7.85007579e-01 -7.85007579e-01
 -7.85007579e-01  2.62455281e+00  2.62455281e+00  2.62455281e+00
  2.71950815e+00  1.98260957e+01  1.98260957e+01  1.98260957e+01
  4.40327315e+01  3.19361958e+02  1.98471791e+03  7.27381602e+03]
E1 = -182.46144638240264  E_coul = 54.264362388848625
cycle= 3 E= -128.197083993554  delta_E= -0.000305  |g|= 0.00079  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105517
diis-c [-6.98878934e-08 -3.62728539e-03  7.66135090e-04  1.00286115e+00]
  HOMO = -0.785280727711184  LUMO = 2.62433987502093
  mo_energy =
[-3.27123935e+01 -1.89747855e+00 -7.85280728e-01 -7.85280728e-01
 -7.85280728e-01  2.62433988e+00  2.62433988e+00  2.62433988e+00
  2.71923928e+00  1.98254788e+01  1.98254788e+01  1.98254788e+01
  4.40319956e+01  3.19361306e+02  1.98471738e+03  7.27381553e+03]
E1 = -182.4629562754827  E_coul = 54.26587223844462
cycle= 4 E= -128.197084037038  delta_E= -4.35e-08  |g|= 4.76e-05  |ddm|= 0.000281
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.59861e-05
diis-c [-2.10502170e-10  4.64083415e-04 -1.17724180e-03 -1.64285638e-01
  1.16499880e+00]
  HOMO = -0.785267101930816  LUMO = 2.62435172292686
  mo_energy =
[-3.27123583e+01 -1.89747600e+00 -7.85267102e-01 -7.85267102e-01
 -7.85267102e-01  2.62435172e+00  2.62435172e+00  2.62435172e+00
  2.71924076e+00  1.98255061e+01  1.98255061e+01  1.98255061e+01
  4.40320240e+01  3.19361354e+02  1.98471744e+03  7.27381560e+03]
E1 = -182.4628972565484  E_coul = 54.26581321925236
cycle= 5 E= -128.197084037296  delta_E= -2.58e-10  |g|= 1.62e-06  |ddm|= 2.39e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4628972565484  E_coul = 54.26581321925236
  HOMO = -0.785266994498161  LUMO = 2.62435182688242
  mo_energy =
[-3.27123581e+01 -1.89747629e+00 -7.85266994e-01 -7.85266994e-01
 -7.85266994e-01  2.62435183e+00  2.62435183e+00  2.62435183e+00
  2.71924050e+00  1.98255062e+01  1.98255062e+01  1.98255062e+01
  4.40320240e+01  3.19361354e+02  1.98471744e+03  7.27381560e+03]
E1 = -182.46289704051173  E_coul = 54.26581300321521
Extra cycle  E= -128.197084037297  delta_E= -4.83e-13  |g|= 3.02e-07  |ddm|= 9.33e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419245e+03 2.15498442e+02 1.42945539e+03 5.73439604e-01
 4.83835925e+01 1.30586320e+01 1.92637622e+00 2.77754858e+00
 1.33317821e+01 6.00584563e-01]
E = -128.19708403729652
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19245445        1
[INPUT] 0    0    [1    /1   ]  215.498441829        1
[INPUT] 0    0    [1    /1   ]  1429.45539408        1
[INPUT] 0    0    [1    /1   ]  0.573439604405       1
[INPUT] 0    0    [1    /1   ]  48.3835924767        1
[INPUT] 0    0    [1    /1   ]  13.0586320365        1
[INPUT] 0    0    [1    /1   ]  1.92637621805        1
[INPUT] 1    0    [1    /1   ]  2.77754858291        1
[INPUT] 1    0    [1    /1   ]  13.3317821108        1
[INPUT] 1    0    [1    /1   ]  0.600584563406       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1924544471017, 1.0]], [0, [215.49844182900424, 1.0]], [0, [1429.455394084395, 1.0]], [0, [0.5734396044051666, 1.0]], [0, [48.38359247671822, 1.0]], [0, [13.058632036461578, 1.0]], [0, [1.9263762180513793, 1.0]], [1, [2.7775485829120483, 1.0]], [1, [13.331782110786254, 1.0]], [1, [0.600584563406436, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19245445]
bas 1, expnt(s) = [215.49844183]
bas 2, expnt(s) = [1429.45539408]
bas 3, expnt(s) = [0.5734396]
bas 4, expnt(s) = [48.38359248]
bas 5, expnt(s) = [13.05863204]
bas 6, expnt(s) = [1.92637622]
bas 7, expnt(s) = [2.77754858]
bas 8, expnt(s) = [13.33178211]
bas 9, expnt(s) = [0.60058456]
CPU time:        24.43
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419245e+03 7.96091243e+02 2.15498442e+02 1.42101324e+02
 1.42945539e+03 5.87344600e+02 5.73439604e-01 1.66487176e+00
 4.83835925e+01 4.63488121e+01 1.30586320e+01 1.73555463e+01
 1.92637622e+00 4.13114896e+00 2.77754858e+00 1.04607175e+01
 1.33317821e+01 7.43181091e+01 6.00584563e-01 1.54241805e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965682324493837
cond(S) = 156.44028627885706
E1 = -183.13613225525492  E_coul = 55.01153011884241
init E= -128.124602136413
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742872324390414  LUMO = 2.65800452680037
  mo_energy =
[-3.25130223e+01 -1.85365073e+00 -7.42872324e-01 -7.42872324e-01
 -7.42872324e-01  2.65800453e+00  2.65800453e+00  2.65800453e+00
  2.75292576e+00  1.99605565e+01  1.99605565e+01  1.99605565e+01
  4.42005864e+01  3.19589449e+02  1.98499047e+03  7.27411249e+03]
E1 = -182.1315814205028  E_coul = 53.936434803501996
cycle= 1 E= -128.195146617001  delta_E= -0.0705  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261748
diis-c [-0.06851223  1.        ]
  HOMO = -0.807806628389045  LUMO = 2.60390185726191
  mo_energy =
[-3.27864928e+01 -1.92079574e+00 -8.07806628e-01 -8.07806628e-01
 -8.07806628e-01  2.60390186e+00  2.60390186e+00  2.60390186e+00
  2.69938242e+00  1.97698453e+01  1.97698453e+01  1.97698453e+01
  4.39668871e+01  3.19280272e+02  1.98463059e+03  7.27372719e+03]
E1 = -182.59387267107493  E_coul = 54.39709363201046
cycle= 2 E= -128.196779039064  delta_E= -0.00163  |g|= 0.0625  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101895
diis-c [-4.54020560e-04  2.76383896e-01  7.23616104e-01]
  HOMO = -0.78500757938787  LUMO = 2.62455281214758
  mo_energy =
[-3.27116003e+01 -1.89713876e+00 -7.85007579e-01 -7.85007579e-01
 -7.85007579e-01  2.62455281e+00  2.62455281e+00  2.62455281e+00
  2.71950815e+00  1.98260957e+01  1.98260957e+01  1.98260957e+01
  4.40327315e+01  3.19361958e+02  1.98471791e+03  7.27381602e+03]
E1 = -182.46144638240264  E_coul = 54.264362388848625
cycle= 3 E= -128.197083993554  delta_E= -0.000305  |g|= 0.00079  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105517
diis-c [-6.98878934e-08 -3.62728539e-03  7.66135090e-04  1.00286115e+00]
  HOMO = -0.785280727711184  LUMO = 2.62433987502093
  mo_energy =
[-3.27123935e+01 -1.89747855e+00 -7.85280728e-01 -7.85280728e-01
 -7.85280728e-01  2.62433988e+00  2.62433988e+00  2.62433988e+00
  2.71923928e+00  1.98254788e+01  1.98254788e+01  1.98254788e+01
  4.40319956e+01  3.19361306e+02  1.98471738e+03  7.27381553e+03]
E1 = -182.4629562754827  E_coul = 54.26587223844462
cycle= 4 E= -128.197084037038  delta_E= -4.35e-08  |g|= 4.76e-05  |ddm|= 0.000281
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.59861e-05
diis-c [-2.10502170e-10  4.64083415e-04 -1.17724180e-03 -1.64285638e-01
  1.16499880e+00]
  HOMO = -0.785267101930816  LUMO = 2.62435172292686
  mo_energy =
[-3.27123583e+01 -1.89747600e+00 -7.85267102e-01 -7.85267102e-01
 -7.85267102e-01  2.62435172e+00  2.62435172e+00  2.62435172e+00
  2.71924076e+00  1.98255061e+01  1.98255061e+01  1.98255061e+01
  4.40320240e+01  3.19361354e+02  1.98471744e+03  7.27381560e+03]
E1 = -182.4628972565484  E_coul = 54.26581321925236
cycle= 5 E= -128.197084037296  delta_E= -2.58e-10  |g|= 1.62e-06  |ddm|= 2.39e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4628972565484  E_coul = 54.26581321925236
  HOMO = -0.785266994498161  LUMO = 2.62435182688242
  mo_energy =
[-3.27123581e+01 -1.89747629e+00 -7.85266994e-01 -7.85266994e-01
 -7.85266994e-01  2.62435183e+00  2.62435183e+00  2.62435183e+00
  2.71924050e+00  1.98255062e+01  1.98255062e+01  1.98255062e+01
  4.40320240e+01  3.19361354e+02  1.98471744e+03  7.27381560e+03]
E1 = -182.46289704051173  E_coul = 54.26581300321521
Extra cycle  E= -128.197084037297  delta_E= -4.83e-13  |g|= 3.02e-07  |ddm|= 9.33e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.44028627885706
E1 = -182.46289704051173  E_coul = 54.26581300321521
init E= -128.197084037297
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785266993046072  LUMO = 2.62435182653747
  mo_energy =
[-3.27123582e+01 -1.89747636e+00 -7.85266993e-01 -7.85266993e-01
 -7.85266993e-01  2.62435183e+00  2.62435183e+00  2.62435183e+00
  2.71924044e+00  1.98255062e+01  1.98255062e+01  1.98255062e+01
  4.40320240e+01  3.19361354e+02  1.98471744e+03  7.27381560e+03]
E1 = -182.46289713546142  E_coul = 54.26581309816506
cycle= 1 E= -128.197084037296  delta_E= 1.71e-13  |g|= 5.48e-08  |ddm|= 1.74e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46289713546142  E_coul = 54.26581309816506
  HOMO = -0.785266983492153  LUMO = 2.62435183490586
  mo_energy =
[-3.27123582e+01 -1.89747637e+00 -7.85266983e-01 -7.85266983e-01
 -7.85266983e-01  2.62435183e+00  2.62435183e+00  2.62435183e+00
  2.71924043e+00  1.98255062e+01  1.98255062e+01  1.98255062e+01
  4.40320240e+01  3.19361354e+02  1.98471744e+03  7.27381560e+03]
E1 = -182.4628971000418  E_coul = 54.26581306274534
Extra cycle  E= -128.197084037296  delta_E= -1.14e-13  |g|= 1.14e-08  |ddm|= 2.91e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419245e+03 2.15498442e+02 1.42945539e+03 5.73439604e-01
 4.83835925e+01 1.30586320e+01 1.92637622e+00 2.77754858e+00
 1.33317821e+01 6.00584563e-01]
grad_E = [-7.52591172e-06 -2.96021945e-04  4.57374768e-05  2.19848278e-04
  3.07793926e-04  4.61120396e-04  9.40216861e-04 -8.96677778e-05
  7.35742883e-06  5.32679252e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.1928502         1
[INPUT] 0    0    [1    /1   ]  215.51531054         1
[INPUT] 0    0    [1    /1   ]  1429.45296017        1
[INPUT] 0    0    [1    /1   ]  0.574314581875       1
[INPUT] 0    0    [1    /1   ]  48.3562365402        1
[INPUT] 0    0    [1    /1   ]  13.0542351201        1
[INPUT] 0    0    [1    /1   ]  1.93117785435        1
[INPUT] 1    0    [1    /1   ]  2.77840217193        1
[INPUT] 1    0    [1    /1   ]  13.3316292241        1
[INPUT] 1    0    [1    /1   ]  0.600824901756       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1928501958823, 1.0]], [0, [215.5153105399506, 1.0]], [0, [1429.4529601688437, 1.0]], [0, [0.5743145818749807, 1.0]], [0, [48.356236540219136, 1.0]], [0, [13.054235120112176, 1.0]], [0, [1.9311778543476945, 1.0]], [1, [2.7784021719349536, 1.0]], [1, [13.331629224118348, 1.0]], [1, [0.6008249017564198, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.1928502]
bas 1, expnt(s) = [215.51531054]
bas 2, expnt(s) = [1429.45296017]
bas 3, expnt(s) = [0.57431458]
bas 4, expnt(s) = [48.35623654]
bas 5, expnt(s) = [13.05423512]
bas 6, expnt(s) = [1.93117785]
bas 7, expnt(s) = [2.77840217]
bas 8, expnt(s) = [13.33162922]
bas 9, expnt(s) = [0.6008249]
CPU time:        26.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419285e+03 7.96091353e+02 2.15515311e+02 1.42109667e+02
 1.42945296e+03 5.87343850e+02 5.74314582e-01 1.66677665e+00
 4.83562365e+01 4.63291566e+01 1.30542351e+01 1.73511633e+01
 1.93117785e+00 4.13886946e+00 2.77840217e+00 1.04647361e+01
 1.33316292e+01 7.43170438e+01 6.00824902e-01 1.54318964e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965622630170165
cond(S) = 156.45139221473832
E1 = -183.13630984261846  E_coul = 55.01165132405444
init E= -128.124658518564
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742859246149926  LUMO = 2.65928614417513
  mo_energy =
[-3.25130536e+01 -1.85359671e+00 -7.42859246e-01 -7.42859246e-01
 -7.42859246e-01  2.65928614e+00  2.65928614e+00  2.65928614e+00
  2.76182834e+00  1.99638163e+01  1.99638163e+01  1.99638163e+01
  4.41998293e+01  3.19527938e+02  1.98494595e+03  7.27407639e+03]
E1 = -182.13348414110175  E_coul = 53.93832295114634
cycle= 1 E= -128.195161189955  delta_E= -0.0705  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261457
diis-c [-0.06835952  1.        ]
  HOMO = -0.80766494131048  LUMO = 2.60528389787742
  mo_energy =
[-3.27861711e+01 -1.92060177e+00 -8.07664941e-01 -8.07664941e-01
 -8.07664941e-01  2.60528390e+00  2.60528390e+00  2.60528390e+00
  2.70824270e+00  1.97733855e+01  1.97733855e+01  1.97733855e+01
  4.39664718e+01  3.19219102e+02  1.98458635e+03  7.27369138e+03]
E1 = -182.59501542622624  E_coul = 54.3982261887352
cycle= 2 E= -128.196789237491  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.064
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101739
diis-c [-4.53282112e-04  2.76293377e-01  7.23706623e-01]
  HOMO = -0.78490288535347  LUMO = 2.62590865729125
  mo_energy =
[-3.27113841e+01 -1.89698181e+00 -7.84902885e-01 -7.84902885e-01
 -7.84902885e-01  2.62590866e+00  2.62590866e+00  2.62590866e+00
  2.72838458e+00  1.98295533e+01  1.98295533e+01  1.98295533e+01
  4.40322125e+01  3.19300675e+02  1.98467356e+03  7.27378009e+03]
E1 = -182.46282173885518  E_coul = 54.26572854948145
cycle= 3 E= -128.197093189374  delta_E= -0.000304  |g|= 0.000791  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105934
diis-c [-6.86080587e-08 -3.62986431e-03  8.21146817e-04  1.00280872e+00]
  HOMO = -0.785177068468611  LUMO = 2.62569464592458
  mo_energy =
[-3.27121797e+01 -1.89732191e+00 -7.85177068e-01 -7.85177068e-01
 -7.85177068e-01  2.62569465e+00  2.62569465e+00  2.62569465e+00
  2.72811474e+00  1.98289344e+01  1.98289344e+01  1.98289344e+01
  4.40314746e+01  3.19300020e+02  1.98467302e+03  7.27377959e+03]
E1 = -182.4643354604551  E_coul = 54.26724222751527
cycle= 4 E= -128.19709323294  delta_E= -4.36e-08  |g|= 4.71e-05  |ddm|= 0.00028
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.51351e-05
diis-c [-2.07499221e-10  4.62929902e-04 -1.17498585e-03 -1.63445523e-01
  1.16415758e+00]
  HOMO = -0.785163599581325  LUMO = 2.62570636120993
  mo_energy =
[-3.27121448e+01 -1.89731935e+00 -7.85163600e-01 -7.85163600e-01
 -7.85163600e-01  2.62570636e+00  2.62570636e+00  2.62570636e+00
  2.72811623e+00  1.98289614e+01  1.98289614e+01  1.98289614e+01
  4.40315027e+01  3.19300068e+02  1.98467309e+03  7.27377966e+03]
E1 = -182.4642770210761  E_coul = 54.26718378788504
cycle= 5 E= -128.197093233191  delta_E= -2.51e-10  |g|= 1.62e-06  |ddm|= 2.35e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4642770210761  E_coul = 54.26718378788504
  HOMO = -0.785163490554312  LUMO = 2.62570646664017
  mo_energy =
[-3.27121446e+01 -1.89731964e+00 -7.85163491e-01 -7.85163491e-01
 -7.85163491e-01  2.62570647e+00  2.62570647e+00  2.62570647e+00
  2.72811598e+00  1.98289615e+01  1.98289615e+01  1.98289615e+01
  4.40315027e+01  3.19300068e+02  1.98467309e+03  7.27377966e+03]
E1 = -182.46427679295013  E_coul = 54.26718355975868
Extra cycle  E= -128.197093233191  delta_E= -3.98e-13  |g|= 3.02e-07  |ddm|= 9.31e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419285e+03 2.15515311e+02 1.42945296e+03 5.74314582e-01
 4.83562365e+01 1.30542351e+01 1.93117785e+00 2.77840217e+00
 1.33316292e+01 6.00824902e-01]
E = -128.19709323319145
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.1928502         1
[INPUT] 0    0    [1    /1   ]  215.51531054         1
[INPUT] 0    0    [1    /1   ]  1429.45296017        1
[INPUT] 0    0    [1    /1   ]  0.574314581875       1
[INPUT] 0    0    [1    /1   ]  48.3562365402        1
[INPUT] 0    0    [1    /1   ]  13.0542351201        1
[INPUT] 0    0    [1    /1   ]  1.93117785435        1
[INPUT] 1    0    [1    /1   ]  2.77840217193        1
[INPUT] 1    0    [1    /1   ]  13.3316292241        1
[INPUT] 1    0    [1    /1   ]  0.600824901756       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1928501958823, 1.0]], [0, [215.5153105399506, 1.0]], [0, [1429.4529601688437, 1.0]], [0, [0.5743145818749807, 1.0]], [0, [48.356236540219136, 1.0]], [0, [13.054235120112176, 1.0]], [0, [1.9311778543476945, 1.0]], [1, [2.7784021719349536, 1.0]], [1, [13.331629224118348, 1.0]], [1, [0.6008249017564198, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.1928502]
bas 1, expnt(s) = [215.51531054]
bas 2, expnt(s) = [1429.45296017]
bas 3, expnt(s) = [0.57431458]
bas 4, expnt(s) = [48.35623654]
bas 5, expnt(s) = [13.05423512]
bas 6, expnt(s) = [1.93117785]
bas 7, expnt(s) = [2.77840217]
bas 8, expnt(s) = [13.33162922]
bas 9, expnt(s) = [0.6008249]
CPU time:        26.59
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419285e+03 7.96091353e+02 2.15515311e+02 1.42109667e+02
 1.42945296e+03 5.87343850e+02 5.74314582e-01 1.66677665e+00
 4.83562365e+01 4.63291566e+01 1.30542351e+01 1.73511633e+01
 1.93117785e+00 4.13886946e+00 2.77840217e+00 1.04647361e+01
 1.33316292e+01 7.43170438e+01 6.00824902e-01 1.54318964e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965622630170165
cond(S) = 156.45139221473832
E1 = -183.13630984261846  E_coul = 55.01165132405444
init E= -128.124658518564
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742859246149926  LUMO = 2.65928614417513
  mo_energy =
[-3.25130536e+01 -1.85359671e+00 -7.42859246e-01 -7.42859246e-01
 -7.42859246e-01  2.65928614e+00  2.65928614e+00  2.65928614e+00
  2.76182834e+00  1.99638163e+01  1.99638163e+01  1.99638163e+01
  4.41998293e+01  3.19527938e+02  1.98494595e+03  7.27407639e+03]
E1 = -182.13348414110175  E_coul = 53.93832295114634
cycle= 1 E= -128.195161189955  delta_E= -0.0705  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261457
diis-c [-0.06835952  1.        ]
  HOMO = -0.80766494131048  LUMO = 2.60528389787742
  mo_energy =
[-3.27861711e+01 -1.92060177e+00 -8.07664941e-01 -8.07664941e-01
 -8.07664941e-01  2.60528390e+00  2.60528390e+00  2.60528390e+00
  2.70824270e+00  1.97733855e+01  1.97733855e+01  1.97733855e+01
  4.39664718e+01  3.19219102e+02  1.98458635e+03  7.27369138e+03]
E1 = -182.59501542622624  E_coul = 54.3982261887352
cycle= 2 E= -128.196789237491  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.064
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101739
diis-c [-4.53282112e-04  2.76293377e-01  7.23706623e-01]
  HOMO = -0.78490288535347  LUMO = 2.62590865729125
  mo_energy =
[-3.27113841e+01 -1.89698181e+00 -7.84902885e-01 -7.84902885e-01
 -7.84902885e-01  2.62590866e+00  2.62590866e+00  2.62590866e+00
  2.72838458e+00  1.98295533e+01  1.98295533e+01  1.98295533e+01
  4.40322125e+01  3.19300675e+02  1.98467356e+03  7.27378009e+03]
E1 = -182.46282173885518  E_coul = 54.26572854948145
cycle= 3 E= -128.197093189374  delta_E= -0.000304  |g|= 0.000791  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00105934
diis-c [-6.86080587e-08 -3.62986431e-03  8.21146817e-04  1.00280872e+00]
  HOMO = -0.785177068468611  LUMO = 2.62569464592458
  mo_energy =
[-3.27121797e+01 -1.89732191e+00 -7.85177068e-01 -7.85177068e-01
 -7.85177068e-01  2.62569465e+00  2.62569465e+00  2.62569465e+00
  2.72811474e+00  1.98289344e+01  1.98289344e+01  1.98289344e+01
  4.40314746e+01  3.19300020e+02  1.98467302e+03  7.27377959e+03]
E1 = -182.4643354604551  E_coul = 54.26724222751527
cycle= 4 E= -128.19709323294  delta_E= -4.36e-08  |g|= 4.71e-05  |ddm|= 0.00028
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.51351e-05
diis-c [-2.07499221e-10  4.62929902e-04 -1.17498585e-03 -1.63445523e-01
  1.16415758e+00]
  HOMO = -0.785163599581325  LUMO = 2.62570636120993
  mo_energy =
[-3.27121448e+01 -1.89731935e+00 -7.85163600e-01 -7.85163600e-01
 -7.85163600e-01  2.62570636e+00  2.62570636e+00  2.62570636e+00
  2.72811623e+00  1.98289614e+01  1.98289614e+01  1.98289614e+01
  4.40315027e+01  3.19300068e+02  1.98467309e+03  7.27377966e+03]
E1 = -182.4642770210761  E_coul = 54.26718378788504
cycle= 5 E= -128.197093233191  delta_E= -2.51e-10  |g|= 1.62e-06  |ddm|= 2.35e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4642770210761  E_coul = 54.26718378788504
  HOMO = -0.785163490554312  LUMO = 2.62570646664017
  mo_energy =
[-3.27121446e+01 -1.89731964e+00 -7.85163491e-01 -7.85163491e-01
 -7.85163491e-01  2.62570647e+00  2.62570647e+00  2.62570647e+00
  2.72811598e+00  1.98289615e+01  1.98289615e+01  1.98289615e+01
  4.40315027e+01  3.19300068e+02  1.98467309e+03  7.27377966e+03]
E1 = -182.46427679295013  E_coul = 54.26718355975868
Extra cycle  E= -128.197093233191  delta_E= -3.98e-13  |g|= 3.02e-07  |ddm|= 9.31e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.45139221473832
E1 = -182.46427679295013  E_coul = 54.26718355975868
init E= -128.197093233191
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785163489973725  LUMO = 2.62570646551477
  mo_energy =
[-3.27121446e+01 -1.89731972e+00 -7.85163490e-01 -7.85163490e-01
 -7.85163490e-01  2.62570647e+00  2.62570647e+00  2.62570647e+00
  2.72811591e+00  1.98289615e+01  1.98289615e+01  1.98289615e+01
  4.40315027e+01  3.19300068e+02  1.98467309e+03  7.27377966e+03]
E1 = -182.4642768922661  E_coul = 54.26718365907466
cycle= 1 E= -128.197093233191  delta_E= 2.84e-14  |g|= 5.48e-08  |ddm|= 1.74e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4642768922661  E_coul = 54.26718365907466
  HOMO = -0.785163480134112  LUMO = 2.62570647414649
  mo_energy =
[-3.27121446e+01 -1.89731972e+00 -7.85163480e-01 -7.85163480e-01
 -7.85163480e-01  2.62570647e+00  2.62570647e+00  2.62570647e+00
  2.72811590e+00  1.98289615e+01  1.98289615e+01  1.98289615e+01
  4.40315027e+01  3.19300068e+02  1.98467309e+03  7.27377966e+03]
E1 = -182.46427685504025  E_coul = 54.267183621848886
Extra cycle  E= -128.197093233191  delta_E= 5.68e-14  |g|= 1.15e-08  |ddm|= 2.9e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419285e+03 2.15515311e+02 1.42945296e+03 5.74314582e-01
 4.83562365e+01 1.30542351e+01 1.93117785e+00 2.77840217e+00
 1.33316292e+01 6.00824902e-01]
grad_E = [-7.54706434e-06 -2.86618489e-04  4.56209022e-05 -3.98273233e-05
  2.43495225e-04  5.02970638e-04  1.26110816e-03  1.52480733e-04
 -4.24129435e-05  7.60816957e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19400832        1
[INPUT] 0    0    [1    /1   ]  215.564447178        1
[INPUT] 0    0    [1    /1   ]  1429.44584257        1
[INPUT] 0    0    [1    /1   ]  0.575232034809       1
[INPUT] 0    0    [1    /1   ]  48.2781742813        1
[INPUT] 0    0    [1    /1   ]  13.0374656018        1
[INPUT] 0    0    [1    /1   ]  1.93732248267        1
[INPUT] 1    0    [1    /1   ]  2.78062183315        1
[INPUT] 1    0    [1    /1   ]  13.3312597258        1
[INPUT] 1    0    [1    /1   ]  0.601406757801       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.194008315591, 1.0]], [0, [215.56444717767656, 1.0]], [0, [1429.4458425748523, 1.0]], [0, [0.5752320348092017, 1.0]], [0, [48.27817428128312, 1.0]], [0, [13.037465601849968, 1.0]], [0, [1.9373224826749962, 1.0]], [1, [2.7806218331463928, 1.0]], [1, [13.331259725834643, 1.0]], [1, [0.6014067578012177, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19400832]
bas 1, expnt(s) = [215.56444718]
bas 2, expnt(s) = [1429.44584257]
bas 3, expnt(s) = [0.57523203]
bas 4, expnt(s) = [48.27817428]
bas 5, expnt(s) = [13.0374656]
bas 6, expnt(s) = [1.93732248]
bas 7, expnt(s) = [2.78062183]
bas 8, expnt(s) = [13.33125973]
bas 9, expnt(s) = [0.60140676]
CPU time:        28.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419401e+03 7.96091676e+02 2.15564447e+02 1.42133966e+02
 1.42944584e+03 5.87341656e+02 5.75232035e-01 1.66877322e+00
 4.82781743e+01 4.62730528e+01 1.30374656e+01 1.73344436e+01
 1.93732248e+00 4.14874234e+00 2.78062183e+00 1.04751874e+01
 1.33312597e+01 7.43144691e+01 6.01406758e-01 1.54505795e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965498062349898
cond(S) = 156.43931000492114
E1 = -183.1366902339442  E_coul = 55.01185414602587
init E= -128.124836087918
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742831952411096  LUMO = 2.66246514427815
  mo_energy =
[-3.25131061e+01 -1.85352429e+00 -7.42831952e-01 -7.42831952e-01
 -7.42831952e-01  2.66246514e+00  2.66246514e+00  2.66246514e+00
  2.77224735e+00  1.99721610e+01  1.99721610e+01  1.99721610e+01
  4.41488379e+01  3.19305862e+02  1.98478218e+03  7.27394001e+03]
E1 = -182.13746670747452  E_coul = 53.942269326831365
cycle= 1 E= -128.195197380643  delta_E= -0.0704  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260827
diis-c [-0.0680306  1.       ]
  HOMO = -0.807369726249381  LUMO = 2.60866209497362
  mo_energy =
[-3.27854812e+01 -1.92021385e+00 -8.07369726e-01 -8.07369726e-01
 -8.07369726e-01  2.60866209e+00  2.60866209e+00  2.60866209e+00
  2.71874911e+00  1.97823235e+01  1.97823235e+01  1.97823235e+01
  4.39162599e+01  3.18997718e+02  1.98442312e+03  7.27355552e+03]
E1 = -182.59737091838716  E_coul = 54.40055504194208
cycle= 2 E= -128.196815876445  delta_E= -0.00162  |g|= 0.0622  |ddm|= 0.0638
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101399
diis-c [-4.50840447e-04  2.76099516e-01  7.23900484e-01]
  HOMO = -0.784685763706357  LUMO = 2.62923435637726
  mo_energy =
[-3.27109229e+01 -1.89667357e+00 -7.84685764e-01 -7.84685764e-01
 -7.84685764e-01  2.62923436e+00  2.62923436e+00  2.62923436e+00
  2.73887869e+00  1.98383125e+01  1.98383125e+01  1.98383125e+01
  4.39817685e+01  3.19079043e+02  1.98451006e+03  7.27364396e+03]
E1 = -182.46567366670777  E_coul = 54.26855600160714
cycle= 3 E= -128.197117665101  delta_E= -0.000302  |g|= 0.000793  |ddm|= 0.0181
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106873
diis-c [-6.46605323e-08 -3.62597284e-03  9.74784734e-04  1.00265119e+00]
  HOMO = -0.78496225512954  LUMO = 2.62901793910611
  mo_energy =
[-3.27117234e+01 -1.89701381e+00 -7.84962255e-01 -7.84962255e-01
 -7.84962255e-01  2.62901794e+00  2.62901794e+00  2.62901794e+00
  2.73860785e+00  1.98376894e+01  1.98376894e+01  1.98376894e+01
  4.39810266e+01  3.19078381e+02  1.98450952e+03  7.27364345e+03]
E1 = -182.4671955277978  E_coul = 54.270077819054116
cycle= 4 E= -128.197117708744  delta_E= -4.36e-08  |g|= 4.54e-05  |ddm|= 0.000278
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.26469e-05
diis-c [-2.00377288e-10  4.59239420e-04 -1.16479750e-03 -1.61262958e-01
  1.16196852e+00]
  HOMO = -0.78494922050057  LUMO = 2.62902928566457
  mo_energy =
[-3.27116897e+01 -1.89701123e+00 -7.84949221e-01 -7.84949221e-01
 -7.84949221e-01  2.62902929e+00  2.62902929e+00  2.62902929e+00
  2.73860940e+00  1.98377156e+01  1.98377156e+01  1.98377156e+01
  4.39810538e+01  3.19078427e+02  1.98450958e+03  7.27364352e+03]
E1 = -182.46713884286837  E_coul = 54.270021133892094
cycle= 5 E= -128.197117708976  delta_E= -2.33e-10  |g|= 1.61e-06  |ddm|= 2.25e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46713884286837  E_coul = 54.270021133892094
  HOMO = -0.784949105092401  LUMO = 2.62902939693915
  mo_energy =
[-3.27116895e+01 -1.89701151e+00 -7.84949105e-01 -7.84949105e-01
 -7.84949105e-01  2.62902940e+00  2.62902940e+00  2.62902940e+00
  2.73860914e+00  1.98377157e+01  1.98377157e+01  1.98377157e+01
  4.39810539e+01  3.19078428e+02  1.98450958e+03  7.27364352e+03]
E1 = -182.46713857795692  E_coul = 54.27002086898023
Extra cycle  E= -128.197117708977  delta_E= -4.26e-13  |g|= 3.02e-07  |ddm|= 9.27e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419401e+03 2.15564447e+02 1.42944584e+03 5.75232035e-01
 4.82781743e+01 1.30374656e+01 1.93732248e+00 2.78062183e+00
 1.33312597e+01 6.01406758e-01]
E = -128.1971177089767
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19400832        1
[INPUT] 0    0    [1    /1   ]  215.564447178        1
[INPUT] 0    0    [1    /1   ]  1429.44584257        1
[INPUT] 0    0    [1    /1   ]  0.575232034809       1
[INPUT] 0    0    [1    /1   ]  48.2781742813        1
[INPUT] 0    0    [1    /1   ]  13.0374656018        1
[INPUT] 0    0    [1    /1   ]  1.93732248267        1
[INPUT] 1    0    [1    /1   ]  2.78062183315        1
[INPUT] 1    0    [1    /1   ]  13.3312597258        1
[INPUT] 1    0    [1    /1   ]  0.601406757801       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.194008315591, 1.0]], [0, [215.56444717767656, 1.0]], [0, [1429.4458425748523, 1.0]], [0, [0.5752320348092017, 1.0]], [0, [48.27817428128312, 1.0]], [0, [13.037465601849968, 1.0]], [0, [1.9373224826749962, 1.0]], [1, [2.7806218331463928, 1.0]], [1, [13.331259725834643, 1.0]], [1, [0.6014067578012177, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19400832]
bas 1, expnt(s) = [215.56444718]
bas 2, expnt(s) = [1429.44584257]
bas 3, expnt(s) = [0.57523203]
bas 4, expnt(s) = [48.27817428]
bas 5, expnt(s) = [13.0374656]
bas 6, expnt(s) = [1.93732248]
bas 7, expnt(s) = [2.78062183]
bas 8, expnt(s) = [13.33125973]
bas 9, expnt(s) = [0.60140676]
CPU time:        28.82
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419401e+03 7.96091676e+02 2.15564447e+02 1.42133966e+02
 1.42944584e+03 5.87341656e+02 5.75232035e-01 1.66877322e+00
 4.82781743e+01 4.62730528e+01 1.30374656e+01 1.73344436e+01
 1.93732248e+00 4.14874234e+00 2.78062183e+00 1.04751874e+01
 1.33312597e+01 7.43144691e+01 6.01406758e-01 1.54505795e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965498062349898
cond(S) = 156.43931000492114
E1 = -183.1366902339442  E_coul = 55.01185414602587
init E= -128.124836087918
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742831952411096  LUMO = 2.66246514427815
  mo_energy =
[-3.25131061e+01 -1.85352429e+00 -7.42831952e-01 -7.42831952e-01
 -7.42831952e-01  2.66246514e+00  2.66246514e+00  2.66246514e+00
  2.77224735e+00  1.99721610e+01  1.99721610e+01  1.99721610e+01
  4.41488379e+01  3.19305862e+02  1.98478218e+03  7.27394001e+03]
E1 = -182.13746670747452  E_coul = 53.942269326831365
cycle= 1 E= -128.195197380643  delta_E= -0.0704  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260827
diis-c [-0.0680306  1.       ]
  HOMO = -0.807369726249381  LUMO = 2.60866209497362
  mo_energy =
[-3.27854812e+01 -1.92021385e+00 -8.07369726e-01 -8.07369726e-01
 -8.07369726e-01  2.60866209e+00  2.60866209e+00  2.60866209e+00
  2.71874911e+00  1.97823235e+01  1.97823235e+01  1.97823235e+01
  4.39162599e+01  3.18997718e+02  1.98442312e+03  7.27355552e+03]
E1 = -182.59737091838716  E_coul = 54.40055504194208
cycle= 2 E= -128.196815876445  delta_E= -0.00162  |g|= 0.0622  |ddm|= 0.0638
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101399
diis-c [-4.50840447e-04  2.76099516e-01  7.23900484e-01]
  HOMO = -0.784685763706357  LUMO = 2.62923435637726
  mo_energy =
[-3.27109229e+01 -1.89667357e+00 -7.84685764e-01 -7.84685764e-01
 -7.84685764e-01  2.62923436e+00  2.62923436e+00  2.62923436e+00
  2.73887869e+00  1.98383125e+01  1.98383125e+01  1.98383125e+01
  4.39817685e+01  3.19079043e+02  1.98451006e+03  7.27364396e+03]
E1 = -182.46567366670777  E_coul = 54.26855600160714
cycle= 3 E= -128.197117665101  delta_E= -0.000302  |g|= 0.000793  |ddm|= 0.0181
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106873
diis-c [-6.46605323e-08 -3.62597284e-03  9.74784734e-04  1.00265119e+00]
  HOMO = -0.78496225512954  LUMO = 2.62901793910611
  mo_energy =
[-3.27117234e+01 -1.89701381e+00 -7.84962255e-01 -7.84962255e-01
 -7.84962255e-01  2.62901794e+00  2.62901794e+00  2.62901794e+00
  2.73860785e+00  1.98376894e+01  1.98376894e+01  1.98376894e+01
  4.39810266e+01  3.19078381e+02  1.98450952e+03  7.27364345e+03]
E1 = -182.4671955277978  E_coul = 54.270077819054116
cycle= 4 E= -128.197117708744  delta_E= -4.36e-08  |g|= 4.54e-05  |ddm|= 0.000278
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.26469e-05
diis-c [-2.00377288e-10  4.59239420e-04 -1.16479750e-03 -1.61262958e-01
  1.16196852e+00]
  HOMO = -0.78494922050057  LUMO = 2.62902928566457
  mo_energy =
[-3.27116897e+01 -1.89701123e+00 -7.84949221e-01 -7.84949221e-01
 -7.84949221e-01  2.62902929e+00  2.62902929e+00  2.62902929e+00
  2.73860940e+00  1.98377156e+01  1.98377156e+01  1.98377156e+01
  4.39810538e+01  3.19078427e+02  1.98450958e+03  7.27364352e+03]
E1 = -182.46713884286837  E_coul = 54.270021133892094
cycle= 5 E= -128.197117708976  delta_E= -2.33e-10  |g|= 1.61e-06  |ddm|= 2.25e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46713884286837  E_coul = 54.270021133892094
  HOMO = -0.784949105092401  LUMO = 2.62902939693915
  mo_energy =
[-3.27116895e+01 -1.89701151e+00 -7.84949105e-01 -7.84949105e-01
 -7.84949105e-01  2.62902940e+00  2.62902940e+00  2.62902940e+00
  2.73860914e+00  1.98377157e+01  1.98377157e+01  1.98377157e+01
  4.39810539e+01  3.19078428e+02  1.98450958e+03  7.27364352e+03]
E1 = -182.46713857795692  E_coul = 54.27002086898023
Extra cycle  E= -128.197117708977  delta_E= -4.26e-13  |g|= 3.02e-07  |ddm|= 9.27e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.43931000492114
E1 = -182.46713857795692  E_coul = 54.27002086898023
init E= -128.197117708977
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.784949107064521  LUMO = 2.62902939351557
  mo_energy =
[-3.27116895e+01 -1.89701159e+00 -7.84949107e-01 -7.84949107e-01
 -7.84949107e-01  2.62902939e+00  2.62902939e+00  2.62902939e+00
  2.73860907e+00  1.98377157e+01  1.98377157e+01  1.98377157e+01
  4.39810539e+01  3.19078428e+02  1.98450958e+03  7.27364352e+03]
E1 = -182.4671386915707  E_coul = 54.27002098259394
cycle= 1 E= -128.197117708977  delta_E= -8.53e-14  |g|= 5.5e-08  |ddm|= 1.74e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4671386915707  E_coul = 54.27002098259394
  HOMO = -0.784949096262908  LUMO = 2.62902940302967
  mo_energy =
[-3.27116895e+01 -1.89701159e+00 -7.84949096e-01 -7.84949096e-01
 -7.84949096e-01  2.62902940e+00  2.62902940e+00  2.62902940e+00
  2.73860907e+00  1.98377157e+01  1.98377157e+01  1.98377157e+01
  4.39810539e+01  3.19078428e+02  1.98450958e+03  7.27364352e+03]
E1 = -182.46713864862667  E_coul = 54.2700209396499
Extra cycle  E= -128.197117708977  delta_E=    0  |g|= 1.19e-08  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419401e+03 2.15564447e+02 1.42944584e+03 5.75232035e-01
 4.82781743e+01 1.30374656e+01 1.93732248e+00 2.78062183e+00
 1.33312597e+01 6.01406758e-01]
grad_E = [-7.60421601e-06 -2.61696755e-04  4.53055418e-05 -5.56285246e-04
  8.95843428e-05  5.44036075e-04  1.77899974e-03  8.90991378e-04
 -1.76515684e-04  2.14428673e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19539246        1
[INPUT] 0    0    [1    /1   ]  215.622873449        1
[INPUT] 0    0    [1    /1   ]  1429.43734255        1
[INPUT] 0    0    [1    /1   ]  0.574332491653       1
[INPUT] 0    0    [1    /1   ]  48.1874348651        1
[INPUT] 0    0    [1    /1   ]  13.0125900398        1
[INPUT] 0    0    [1    /1   ]  1.93499824352        1
[INPUT] 1    0    [1    /1   ]  2.78238886643        1
[INPUT] 1    0    [1    /1   ]  13.3309925888        1
[INPUT] 1    0    [1    /1   ]  0.601833528528       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.195392455451, 1.0]], [0, [215.6228734491002, 1.0]], [0, [1429.4373425544536, 1.0]], [0, [0.5743324916525157, 1.0]], [0, [48.187434865064084, 1.0]], [0, [13.01259003975819, 1.0]], [0, [1.9349982435172746, 1.0]], [1, [2.7823888664337244, 1.0]], [1, [13.330992588825811, 1.0]], [1, [0.6018335285275724, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19539246]
bas 1, expnt(s) = [215.62287345]
bas 2, expnt(s) = [1429.43734255]
bas 3, expnt(s) = [0.57433249]
bas 4, expnt(s) = [48.18743487]
bas 5, expnt(s) = [13.01259004]
bas 6, expnt(s) = [1.93499824]
bas 7, expnt(s) = [2.78238887]
bas 8, expnt(s) = [13.33099259]
bas 9, expnt(s) = [0.60183353]
CPU time:        30.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419539e+03 7.96092061e+02 2.15622873e+02 1.42162858e+02
 1.42943734e+03 5.87339037e+02 5.74332492e-01 1.66681563e+00
 4.81874349e+01 4.62078094e+01 1.30125900e+01 1.73096320e+01
 1.93499824e+00 4.14500879e+00 2.78238887e+00 1.04835091e+01
 1.33309926e+01 7.43126077e+01 6.01833529e-01 1.54642858e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965434515868965
cond(S) = 156.37035653516628
E1 = -183.1369788429805  E_coul = 55.01190116750725
init E= -128.125077675473
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742816384303714  LUMO = 2.66486395596052
  mo_energy =
[-3.25131173e+01 -1.85354434e+00 -7.42816384e-01 -7.42816384e-01
 -7.42816384e-01  2.66486396e+00  2.66486396e+00  2.66486396e+00
  2.76560054e+00  1.99786878e+01  1.99786878e+01  1.99786878e+01
  4.40282582e+01  3.18989075e+02  1.98454571e+03  7.27373961e+03]
E1 = -182.13952434502912  E_coul = 53.944290458364115
cycle= 1 E= -128.195233886665  delta_E= -0.0702  |g|= 0.164  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260473
diis-c [-0.0678461  1.       ]
  HOMO = -0.807218524306145  LUMO = 2.61114692074938
  mo_energy =
[-3.27851178e+01 -1.92003383e+00 -8.07218524e-01 -8.07218524e-01
 -8.07218524e-01  2.61114692e+00  2.61114692e+00  2.61114692e+00
  2.71240521e+00  1.97891626e+01  1.97891626e+01  1.97891626e+01
  4.37962023e+01  3.18681211e+02  1.98418673e+03  7.27335516e+03]
E1 = -182.5985371998392  E_coul = 54.401690303711575
cycle= 2 E= -128.196846896128  delta_E= -0.00161  |g|= 0.0621  |ddm|= 0.0636
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101205
diis-c [-4.47726613e-04  2.76001044e-01  7.23998956e-01]
  HOMO = -0.7845760994293  LUMO = 2.63169527594866
  mo_energy =
[-3.27106894e+01 -1.89653805e+00 -7.84576099e-01 -7.84576099e-01
 -7.84576099e-01  2.63169528e+00  2.63169528e+00  2.63169528e+00
  2.73246195e+00  1.98450509e+01  1.98450509e+01  1.98450509e+01
  4.38615611e+01  3.18762391e+02  1.98427352e+03  7.27344345e+03]
E1 = -182.46711167118957  E_coul = 54.269964199428856
cycle= 3 E= -128.197147471761  delta_E= -0.000301  |g|= 0.000791  |ddm|= 0.0181
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00107362
diis-c [-6.03377843e-08 -3.61192952e-03  1.09854904e-03  1.00251338e+00]
  HOMO = -0.784853782828266  LUMO = 2.63147759089277
  mo_energy =
[-3.27114918e+01 -1.89687708e+00 -7.84853783e-01 -7.84853783e-01
 -7.84853783e-01  2.63147759e+00  2.63147759e+00  2.63147759e+00
  2.73219260e+00  1.98444262e+01  1.98444262e+01  1.98444262e+01
  4.38608183e+01  3.18761726e+02  1.98427297e+03  7.27344293e+03]
E1 = -182.46863609786897  E_coul = 54.27148858270345
cycle= 4 E= -128.197147515166  delta_E= -4.34e-08  |g|= 4.37e-05  |ddm|= 0.000274
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.9993e-05
diis-c [-1.94678060e-10  4.54688124e-04 -1.14465473e-03 -1.59077967e-01
  1.15976793e+00]
  HOMO = -0.784841186610625  LUMO = 2.63148856107407
  mo_energy =
[-3.27114592e+01 -1.89687447e+00 -7.84841187e-01 -7.84841187e-01
 -7.84841187e-01  2.63148856e+00  2.63148856e+00  2.63148856e+00
  2.73219419e+00  1.98444515e+01  1.98444515e+01  1.98444515e+01
  4.38608446e+01  3.18761770e+02  1.98427303e+03  7.27344299e+03]
E1 = -182.46858134225747  E_coul = 54.271433826877484
cycle= 5 E= -128.19714751538  delta_E= -2.14e-10  |g|= 1.61e-06  |ddm|= 2.15e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46858134225747  E_coul = 54.271433826877484
  HOMO = -0.78484106152849  LUMO = 2.63148868118429
  mo_energy =
[-3.27114589e+01 -1.89687474e+00 -7.84841062e-01 -7.84841062e-01
 -7.84841062e-01  2.63148868e+00  2.63148868e+00  2.63148868e+00
  2.73219395e+00  1.98444517e+01  1.98444517e+01  1.98444517e+01
  4.38608447e+01  3.18761771e+02  1.98427303e+03  7.27344300e+03]
E1 = -182.46858103165206  E_coul = 54.271433516271806
Extra cycle  E= -128.19714751538  delta_E= -2.84e-13  |g|= 3.04e-07  |ddm|= 9.26e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419539e+03 2.15622873e+02 1.42943734e+03 5.74332492e-01
 4.81874349e+01 1.30125900e+01 1.93499824e+00 2.78238887e+00
 1.33309926e+01 6.01833529e-01]
E = -128.19714751538027
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19539246        1
[INPUT] 0    0    [1    /1   ]  215.622873449        1
[INPUT] 0    0    [1    /1   ]  1429.43734255        1
[INPUT] 0    0    [1    /1   ]  0.574332491653       1
[INPUT] 0    0    [1    /1   ]  48.1874348651        1
[INPUT] 0    0    [1    /1   ]  13.0125900398        1
[INPUT] 0    0    [1    /1   ]  1.93499824352        1
[INPUT] 1    0    [1    /1   ]  2.78238886643        1
[INPUT] 1    0    [1    /1   ]  13.3309925888        1
[INPUT] 1    0    [1    /1   ]  0.601833528528       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.195392455451, 1.0]], [0, [215.6228734491002, 1.0]], [0, [1429.4373425544536, 1.0]], [0, [0.5743324916525157, 1.0]], [0, [48.187434865064084, 1.0]], [0, [13.01259003975819, 1.0]], [0, [1.9349982435172746, 1.0]], [1, [2.7823888664337244, 1.0]], [1, [13.330992588825811, 1.0]], [1, [0.6018335285275724, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19539246]
bas 1, expnt(s) = [215.62287345]
bas 2, expnt(s) = [1429.43734255]
bas 3, expnt(s) = [0.57433249]
bas 4, expnt(s) = [48.18743487]
bas 5, expnt(s) = [13.01259004]
bas 6, expnt(s) = [1.93499824]
bas 7, expnt(s) = [2.78238887]
bas 8, expnt(s) = [13.33099259]
bas 9, expnt(s) = [0.60183353]
CPU time:        31.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419539e+03 7.96092061e+02 2.15622873e+02 1.42162858e+02
 1.42943734e+03 5.87339037e+02 5.74332492e-01 1.66681563e+00
 4.81874349e+01 4.62078094e+01 1.30125900e+01 1.73096320e+01
 1.93499824e+00 4.14500879e+00 2.78238887e+00 1.04835091e+01
 1.33309926e+01 7.43126077e+01 6.01833529e-01 1.54642858e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965434515868965
cond(S) = 156.37035653516628
E1 = -183.1369788429805  E_coul = 55.01190116750725
init E= -128.125077675473
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742816384303714  LUMO = 2.66486395596052
  mo_energy =
[-3.25131173e+01 -1.85354434e+00 -7.42816384e-01 -7.42816384e-01
 -7.42816384e-01  2.66486396e+00  2.66486396e+00  2.66486396e+00
  2.76560054e+00  1.99786878e+01  1.99786878e+01  1.99786878e+01
  4.40282582e+01  3.18989075e+02  1.98454571e+03  7.27373961e+03]
E1 = -182.13952434502912  E_coul = 53.944290458364115
cycle= 1 E= -128.195233886665  delta_E= -0.0702  |g|= 0.164  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260473
diis-c [-0.0678461  1.       ]
  HOMO = -0.807218524306145  LUMO = 2.61114692074938
  mo_energy =
[-3.27851178e+01 -1.92003383e+00 -8.07218524e-01 -8.07218524e-01
 -8.07218524e-01  2.61114692e+00  2.61114692e+00  2.61114692e+00
  2.71240521e+00  1.97891626e+01  1.97891626e+01  1.97891626e+01
  4.37962023e+01  3.18681211e+02  1.98418673e+03  7.27335516e+03]
E1 = -182.5985371998392  E_coul = 54.401690303711575
cycle= 2 E= -128.196846896128  delta_E= -0.00161  |g|= 0.0621  |ddm|= 0.0636
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101205
diis-c [-4.47726613e-04  2.76001044e-01  7.23998956e-01]
  HOMO = -0.7845760994293  LUMO = 2.63169527594866
  mo_energy =
[-3.27106894e+01 -1.89653805e+00 -7.84576099e-01 -7.84576099e-01
 -7.84576099e-01  2.63169528e+00  2.63169528e+00  2.63169528e+00
  2.73246195e+00  1.98450509e+01  1.98450509e+01  1.98450509e+01
  4.38615611e+01  3.18762391e+02  1.98427352e+03  7.27344345e+03]
E1 = -182.46711167118957  E_coul = 54.269964199428856
cycle= 3 E= -128.197147471761  delta_E= -0.000301  |g|= 0.000791  |ddm|= 0.0181
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00107362
diis-c [-6.03377843e-08 -3.61192952e-03  1.09854904e-03  1.00251338e+00]
  HOMO = -0.784853782828266  LUMO = 2.63147759089277
  mo_energy =
[-3.27114918e+01 -1.89687708e+00 -7.84853783e-01 -7.84853783e-01
 -7.84853783e-01  2.63147759e+00  2.63147759e+00  2.63147759e+00
  2.73219260e+00  1.98444262e+01  1.98444262e+01  1.98444262e+01
  4.38608183e+01  3.18761726e+02  1.98427297e+03  7.27344293e+03]
E1 = -182.46863609786897  E_coul = 54.27148858270345
cycle= 4 E= -128.197147515166  delta_E= -4.34e-08  |g|= 4.37e-05  |ddm|= 0.000274
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.9993e-05
diis-c [-1.94678060e-10  4.54688124e-04 -1.14465473e-03 -1.59077967e-01
  1.15976793e+00]
  HOMO = -0.784841186610625  LUMO = 2.63148856107407
  mo_energy =
[-3.27114592e+01 -1.89687447e+00 -7.84841187e-01 -7.84841187e-01
 -7.84841187e-01  2.63148856e+00  2.63148856e+00  2.63148856e+00
  2.73219419e+00  1.98444515e+01  1.98444515e+01  1.98444515e+01
  4.38608446e+01  3.18761770e+02  1.98427303e+03  7.27344299e+03]
E1 = -182.46858134225747  E_coul = 54.271433826877484
cycle= 5 E= -128.19714751538  delta_E= -2.14e-10  |g|= 1.61e-06  |ddm|= 2.15e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46858134225747  E_coul = 54.271433826877484
  HOMO = -0.78484106152849  LUMO = 2.63148868118429
  mo_energy =
[-3.27114589e+01 -1.89687474e+00 -7.84841062e-01 -7.84841062e-01
 -7.84841062e-01  2.63148868e+00  2.63148868e+00  2.63148868e+00
  2.73219395e+00  1.98444517e+01  1.98444517e+01  1.98444517e+01
  4.38608447e+01  3.18761771e+02  1.98427303e+03  7.27344300e+03]
E1 = -182.46858103165206  E_coul = 54.271433516271806
Extra cycle  E= -128.19714751538  delta_E= -2.84e-13  |g|= 3.04e-07  |ddm|= 9.26e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.37035653516628
E1 = -182.46858103165206  E_coul = 54.271433516271806
init E= -128.19714751538
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.784841066533323  LUMO = 2.63148867501189
  mo_energy =
[-3.27114590e+01 -1.89687482e+00 -7.84841067e-01 -7.84841067e-01
 -7.84841067e-01  2.63148868e+00  2.63148868e+00  2.63148868e+00
  2.73219388e+00  1.98444516e+01  1.98444516e+01  1.98444516e+01
  4.38608447e+01  3.18761771e+02  1.98427303e+03  7.27344300e+03]
E1 = -182.4685811641556  E_coul = 54.271433648775336
cycle= 1 E= -128.19714751538  delta_E=    0  |g|= 5.56e-08  |ddm|= 1.76e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4685811641556  E_coul = 54.271433648775336
  HOMO = -0.784841054426988  LUMO = 2.63148868571584
  mo_energy =
[-3.27114589e+01 -1.89687482e+00 -7.84841054e-01 -7.84841054e-01
 -7.84841054e-01  2.63148869e+00  2.63148869e+00  2.63148869e+00
  2.73219388e+00  1.98444516e+01  1.98444516e+01  1.98444516e+01
  4.38608447e+01  3.18761771e+02  1.98427303e+03  7.27344300e+03]
E1 = -182.46858111385544  E_coul = 54.27143359847496
Extra cycle  E= -128.19714751538  delta_E= -2.27e-13  |g|= 1.25e-08  |ddm|= 2.86e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419539e+03 2.15622873e+02 1.42943734e+03 5.74332492e-01
 4.81874349e+01 1.30125900e+01 1.93499824e+00 2.78238887e+00
 1.33309926e+01 6.01833529e-01]
grad_E = [-7.66653072e-06 -2.35121254e-04  4.49609188e-05 -8.93624663e-04
 -5.16972142e-05  4.88592291e-04  1.90683927e-03  1.57030556e-03
 -2.87386672e-04  2.88254823e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19728815        1
[INPUT] 0    0    [1    /1   ]  215.702453389        1
[INPUT] 0    0    [1    /1   ]  1429.42571095        1
[INPUT] 0    0    [1    /1   ]  0.570461769354       1
[INPUT] 0    0    [1    /1   ]  48.0667569657        1
[INPUT] 0    0    [1    /1   ]  12.9722211899        1
[INPUT] 0    0    [1    /1   ]  1.91882760049        1
[INPUT] 1    0    [1    /1   ]  2.7830079904         1
[INPUT] 1    0    [1    /1   ]  13.3309493642        1
[INPUT] 1    0    [1    /1   ]  0.601927024728       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1972881462966, 1.0]], [0, [215.70245338911982, 1.0]], [0, [1429.4257109549617, 1.0]], [0, [0.570461769354448, 1.0]], [0, [48.06675696567714, 1.0]], [0, [12.972221189910181, 1.0]], [0, [1.918827600493935, 1.0]], [1, [2.7830079904017926, 1.0]], [1, [13.330949364203049, 1.0]], [1, [0.6019270247281413, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19728815]
bas 1, expnt(s) = [215.70245339]
bas 2, expnt(s) = [1429.42571095]
bas 3, expnt(s) = [0.57046177]
bas 4, expnt(s) = [48.06675697]
bas 5, expnt(s) = [12.97222119]
bas 6, expnt(s) = [1.9188276]
bas 7, expnt(s) = [2.78300799]
bas 8, expnt(s) = [13.33094936]
bas 9, expnt(s) = [0.60192702]
CPU time:        33.11
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419729e+03 7.96092589e+02 2.15702453e+02 1.42202207e+02
 1.42942571e+03 5.87335452e+02 5.70461769e-01 1.65838336e+00
 4.80667570e+01 4.61209921e+01 1.29722212e+01 1.72693417e+01
 1.91882760e+00 4.11900190e+00 2.78300799e+00 1.04864251e+01
 1.33309494e+01 7.43123065e+01 6.01927025e-01 1.54672888e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965486545999003
cond(S) = 156.2031678583883
E1 = -183.1371201890433  E_coul = 55.011667412585
init E= -128.125452776458
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742823198591154  LUMO = 2.6654951960081
  mo_energy =
[-3.25130712e+01 -1.85371130e+00 -7.42823199e-01 -7.42823199e-01
 -7.42823199e-01  2.66549520e+00  2.66549520e+00  2.66549520e+00
  2.73111190e+00  1.99807783e+01  1.99807783e+01  1.99807783e+01
  4.37837133e+01  3.18487457e+02  1.98416838e+03  7.27341607e+03]
E1 = -182.1380224726377  E_coul = 53.94275049049619
cycle= 1 E= -128.195271982141  delta_E= -0.0698  |g|= 0.164  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260619
diis-c [-0.06792218  1.        ]
  HOMO = -0.807328984224587  LUMO = 2.61166547541059
  mo_energy =
[-3.27853906e+01 -1.92022066e+00 -8.07328984e-01 -8.07328984e-01
 -8.07328984e-01  2.61166548e+00  2.61166548e+00  2.61166548e+00
  2.67854575e+00  1.97910447e+01  1.97910447e+01  1.97910447e+01
  4.35517007e+01  3.18179084e+02  1.98380863e+03  7.27303079e+03]
E1 = -182.5975052353426  E_coul = 54.400618138902935
cycle= 2 E= -128.19688709644  delta_E= -0.00162  |g|= 0.0622  |ddm|= 0.0637
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101285
diis-c [-4.43312443e-04  2.76092151e-01  7.23907849e-01]
  HOMO = -0.784661225044644  LUMO = 2.63224014485209
  mo_energy =
[-3.27109097e+01 -1.89670443e+00 -7.84661225e-01 -7.84661225e-01
 -7.84661225e-01  2.63224014e+00  2.63224014e+00  2.63224014e+00
  2.69843625e+00  1.98469763e+01  1.98469763e+01  1.98469763e+01
  4.36170590e+01  3.18260311e+02  1.98389545e+03  7.27311911e+03]
E1 = -182.46594067467777  E_coul = 54.26875246849726
cycle= 3 E= -128.19718820618  delta_E= -0.000301  |g|= 0.000783  |ddm|= 0.0181
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106783
diis-c [-5.58852504e-08 -3.58704989e-03  1.11847570e-03  1.00246857e+00]
  HOMO = -0.78493752558183  LUMO = 2.63202378891577
  mo_energy =
[-3.27117064e+01 -1.89703952e+00 -7.84937526e-01 -7.84937526e-01
 -7.84937526e-01  2.63202379e+00  2.63202379e+00  2.63202379e+00
  2.69817290e+00  1.98463560e+01  1.98463560e+01  1.98463560e+01
  4.36163226e+01  3.18259650e+02  1.98389491e+03  7.27311860e+03]
E1 = -182.46745460096164  E_coul = 54.27026635230786
cycle= 4 E= -128.197188248654  delta_E= -4.25e-08  |g|= 4.19e-05  |ddm|= 0.00027
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.737e-05
diis-c [-1.92241428e-10  4.49635546e-04 -1.10524570e-03 -1.57094937e-01
  1.15775055e+00]
  HOMO = -0.784925327364731  LUMO = 2.63203440993093
  mo_energy =
[-3.27116749e+01 -1.89703687e+00 -7.84925327e-01 -7.84925327e-01
 -7.84925327e-01  2.63203441e+00  2.63203441e+00  2.63203441e+00
  2.69817452e+00  1.98463805e+01  1.98463805e+01  1.98463805e+01
  4.36163480e+01  3.18259693e+02  1.98389497e+03  7.27311866e+03]
E1 = -182.4674018307072  E_coul = 54.27021358185535
cycle= 5 E= -128.197188248852  delta_E= -1.98e-10  |g|= 1.62e-06  |ddm|= 2.06e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4674018307072  E_coul = 54.27021358185535
  HOMO = -0.784925187823862  LUMO = 2.63203454327535
  mo_energy =
[-3.27116746e+01 -1.89703713e+00 -7.84925188e-01 -7.84925188e-01
 -7.84925188e-01  2.63203454e+00  2.63203454e+00  2.63203454e+00
  2.69817429e+00  1.98463806e+01  1.98463806e+01  1.98463806e+01
  4.36163482e+01  3.18259694e+02  1.98389497e+03  7.27311866e+03]
E1 = -182.4674014631664  E_coul = 54.27021321431444
Extra cycle  E= -128.197188248852  delta_E= -1.14e-13  |g|= 3.08e-07  |ddm|= 9.31e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419729e+03 2.15702453e+02 1.42942571e+03 5.70461769e-01
 4.80667570e+01 1.29722212e+01 1.91882760e+00 2.78300799e+00
 1.33309494e+01 6.01927025e-01]
E = -128.19718824885194
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:52 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19728815        1
[INPUT] 0    0    [1    /1   ]  215.702453389        1
[INPUT] 0    0    [1    /1   ]  1429.42571095        1
[INPUT] 0    0    [1    /1   ]  0.570461769354       1
[INPUT] 0    0    [1    /1   ]  48.0667569657        1
[INPUT] 0    0    [1    /1   ]  12.9722211899        1
[INPUT] 0    0    [1    /1   ]  1.91882760049        1
[INPUT] 1    0    [1    /1   ]  2.7830079904         1
[INPUT] 1    0    [1    /1   ]  13.3309493642        1
[INPUT] 1    0    [1    /1   ]  0.601927024728       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1972881462966, 1.0]], [0, [215.70245338911982, 1.0]], [0, [1429.4257109549617, 1.0]], [0, [0.570461769354448, 1.0]], [0, [48.06675696567714, 1.0]], [0, [12.972221189910181, 1.0]], [0, [1.918827600493935, 1.0]], [1, [2.7830079904017926, 1.0]], [1, [13.330949364203049, 1.0]], [1, [0.6019270247281413, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19728815]
bas 1, expnt(s) = [215.70245339]
bas 2, expnt(s) = [1429.42571095]
bas 3, expnt(s) = [0.57046177]
bas 4, expnt(s) = [48.06675697]
bas 5, expnt(s) = [12.97222119]
bas 6, expnt(s) = [1.9188276]
bas 7, expnt(s) = [2.78300799]
bas 8, expnt(s) = [13.33094936]
bas 9, expnt(s) = [0.60192702]
CPU time:        33.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419729e+03 7.96092589e+02 2.15702453e+02 1.42202207e+02
 1.42942571e+03 5.87335452e+02 5.70461769e-01 1.65838336e+00
 4.80667570e+01 4.61209921e+01 1.29722212e+01 1.72693417e+01
 1.91882760e+00 4.11900190e+00 2.78300799e+00 1.04864251e+01
 1.33309494e+01 7.43123065e+01 6.01927025e-01 1.54672888e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965486545999003
cond(S) = 156.2031678583883
E1 = -183.1371201890433  E_coul = 55.011667412585
init E= -128.125452776458
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742823198591154  LUMO = 2.6654951960081
  mo_energy =
[-3.25130712e+01 -1.85371130e+00 -7.42823199e-01 -7.42823199e-01
 -7.42823199e-01  2.66549520e+00  2.66549520e+00  2.66549520e+00
  2.73111190e+00  1.99807783e+01  1.99807783e+01  1.99807783e+01
  4.37837133e+01  3.18487457e+02  1.98416838e+03  7.27341607e+03]
E1 = -182.1380224726377  E_coul = 53.94275049049619
cycle= 1 E= -128.195271982141  delta_E= -0.0698  |g|= 0.164  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260619
diis-c [-0.06792218  1.        ]
  HOMO = -0.807328984224587  LUMO = 2.61166547541059
  mo_energy =
[-3.27853906e+01 -1.92022066e+00 -8.07328984e-01 -8.07328984e-01
 -8.07328984e-01  2.61166548e+00  2.61166548e+00  2.61166548e+00
  2.67854575e+00  1.97910447e+01  1.97910447e+01  1.97910447e+01
  4.35517007e+01  3.18179084e+02  1.98380863e+03  7.27303079e+03]
E1 = -182.5975052353426  E_coul = 54.400618138902935
cycle= 2 E= -128.19688709644  delta_E= -0.00162  |g|= 0.0622  |ddm|= 0.0637
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101285
diis-c [-4.43312443e-04  2.76092151e-01  7.23907849e-01]
  HOMO = -0.784661225044644  LUMO = 2.63224014485209
  mo_energy =
[-3.27109097e+01 -1.89670443e+00 -7.84661225e-01 -7.84661225e-01
 -7.84661225e-01  2.63224014e+00  2.63224014e+00  2.63224014e+00
  2.69843625e+00  1.98469763e+01  1.98469763e+01  1.98469763e+01
  4.36170590e+01  3.18260311e+02  1.98389545e+03  7.27311911e+03]
E1 = -182.46594067467777  E_coul = 54.26875246849726
cycle= 3 E= -128.19718820618  delta_E= -0.000301  |g|= 0.000783  |ddm|= 0.0181
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00106783
diis-c [-5.58852504e-08 -3.58704989e-03  1.11847570e-03  1.00246857e+00]
  HOMO = -0.78493752558183  LUMO = 2.63202378891577
  mo_energy =
[-3.27117064e+01 -1.89703952e+00 -7.84937526e-01 -7.84937526e-01
 -7.84937526e-01  2.63202379e+00  2.63202379e+00  2.63202379e+00
  2.69817290e+00  1.98463560e+01  1.98463560e+01  1.98463560e+01
  4.36163226e+01  3.18259650e+02  1.98389491e+03  7.27311860e+03]
E1 = -182.46745460096164  E_coul = 54.27026635230786
cycle= 4 E= -128.197188248654  delta_E= -4.25e-08  |g|= 4.19e-05  |ddm|= 0.00027
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.737e-05
diis-c [-1.92241428e-10  4.49635546e-04 -1.10524570e-03 -1.57094937e-01
  1.15775055e+00]
  HOMO = -0.784925327364731  LUMO = 2.63203440993093
  mo_energy =
[-3.27116749e+01 -1.89703687e+00 -7.84925327e-01 -7.84925327e-01
 -7.84925327e-01  2.63203441e+00  2.63203441e+00  2.63203441e+00
  2.69817452e+00  1.98463805e+01  1.98463805e+01  1.98463805e+01
  4.36163480e+01  3.18259693e+02  1.98389497e+03  7.27311866e+03]
E1 = -182.4674018307072  E_coul = 54.27021358185535
cycle= 5 E= -128.197188248852  delta_E= -1.98e-10  |g|= 1.62e-06  |ddm|= 2.06e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4674018307072  E_coul = 54.27021358185535
  HOMO = -0.784925187823862  LUMO = 2.63203454327535
  mo_energy =
[-3.27116746e+01 -1.89703713e+00 -7.84925188e-01 -7.84925188e-01
 -7.84925188e-01  2.63203454e+00  2.63203454e+00  2.63203454e+00
  2.69817429e+00  1.98463806e+01  1.98463806e+01  1.98463806e+01
  4.36163482e+01  3.18259694e+02  1.98389497e+03  7.27311866e+03]
E1 = -182.4674014631664  E_coul = 54.27021321431444
Extra cycle  E= -128.197188248852  delta_E= -1.14e-13  |g|= 3.08e-07  |ddm|= 9.31e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.2031678583883
E1 = -182.4674014631664  E_coul = 54.27021321431444
init E= -128.197188248852
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.784925196394925  LUMO = 2.63203453384656
  mo_energy =
[-3.27116747e+01 -1.89703722e+00 -7.84925196e-01 -7.84925196e-01
 -7.84925196e-01  2.63203453e+00  2.63203453e+00  2.63203453e+00
  2.69817421e+00  1.98463806e+01  1.98463806e+01  1.98463806e+01
  4.36163481e+01  3.18259694e+02  1.98389497e+03  7.27311866e+03]
E1 = -182.46740162077182  E_coul = 54.27021337191968
cycle= 1 E= -128.197188248852  delta_E= -1.99e-13  |g|= 5.7e-08  |ddm|= 1.79e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46740162077182  E_coul = 54.27021337191968
  HOMO = -0.784925182505606  LUMO = 2.63203454616482
  mo_energy =
[-3.27116747e+01 -1.89703722e+00 -7.84925183e-01 -7.84925183e-01
 -7.84925183e-01  2.63203455e+00  2.63203455e+00  2.63203455e+00
  2.69817421e+00  1.98463806e+01  1.98463806e+01  1.98463806e+01
  4.36163481e+01  3.18259694e+02  1.98389497e+03  7.27311866e+03]
E1 = -182.46740156094214  E_coul = 54.27021331209011
Extra cycle  E= -128.197188248852  delta_E= 1.14e-13  |g|= 1.34e-08  |ddm|= 2.88e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419729e+03 2.15702453e+02 1.42942571e+03 5.70461769e-01
 4.80667570e+01 1.29722212e+01 1.91882760e+00 2.78300799e+00
 1.33309494e+01 6.01927025e-01]
grad_E = [-7.74391090e-06 -2.02976869e-04  4.45317953e-05 -8.18660194e-04
 -1.88174854e-04  2.69583953e-04  1.37308645e-03  1.95461946e-03
 -3.33405983e-04  2.62550044e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19812408        1
[INPUT] 0    0    [1    /1   ]  215.737065854        1
[INPUT] 0    0    [1    /1   ]  1429.42059276        1
[INPUT] 0    0    [1    /1   ]  0.56622726869        1
[INPUT] 0    0    [1    /1   ]  48.0172489381        1
[INPUT] 0    0    [1    /1   ]  12.9486573668        1
[INPUT] 0    0    [1    /1   ]  1.89942103634        1
[INPUT] 1    0    [1    /1   ]  2.78099655224        1
[INPUT] 1    0    [1    /1   ]  13.3313190532        1
[INPUT] 1    0    [1    /1   ]  0.601375909563       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.198124077225, 1.0]], [0, [215.737065854453, 1.0]], [0, [1429.4205927593703, 1.0]], [0, [0.5662272686895281, 1.0]], [0, [48.01724893811679, 1.0]], [0, [12.948657366842356, 1.0]], [0, [1.8994210363396473, 1.0]], [1, [2.78099655224303, 1.0]], [1, [13.331319053172047, 1.0]], [1, [0.6013759095632929, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19812408]
bas 1, expnt(s) = [215.73706585]
bas 2, expnt(s) = [1429.42059276]
bas 3, expnt(s) = [0.56622727]
bas 4, expnt(s) = [48.01724894]
bas 5, expnt(s) = [12.94865737]
bas 6, expnt(s) = [1.89942104]
bas 7, expnt(s) = [2.78099655]
bas 8, expnt(s) = [13.33131905]
bas 9, expnt(s) = [0.60137591]
CPU time:        35.51
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419812e+03 7.96092822e+02 2.15737066e+02 1.42219321e+02
 1.42942059e+03 5.87333875e+02 5.66227269e-01 1.64914222e+00
 4.80172489e+01 4.60853595e+01 1.29486574e+01 1.72458093e+01
 1.89942104e+00 4.08771828e+00 2.78099655e+00 1.04769520e+01
 1.33313191e+01 7.43148825e+01 6.01375910e-01 1.54495888e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965664772504521
cond(S) = 156.06062610562347
E1 = -183.13688004434067  E_coul = 55.01122804728807
init E= -128.125651997053
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742859442697747  LUMO = 2.66251321498718
  mo_energy =
[-3.25130075e+01 -1.85391353e+00 -7.42859443e-01 -7.42859443e-01
 -7.42859443e-01  2.66251321e+00  2.66251321e+00  2.66251321e+00
  2.69195489e+00  1.99730971e+01  1.99730971e+01  1.99730971e+01
  4.36011766e+01  3.18203914e+02  1.98395296e+03  7.27322838e+03]
E1 = -182.13249172705943  E_coul = 53.93721347643735
cycle= 1 E= -128.195278250622  delta_E= -0.0696  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261397
diis-c [-0.06832837  1.        ]
  HOMO = -0.807732849178732  LUMO = 2.60838372403568
  mo_energy =
[-3.27864128e+01 -1.92076894e+00 -8.07732849e-01 -8.07732849e-01
 -8.07732849e-01  2.60838372e+00  2.60838372e+00  2.60838372e+00
  2.63982487e+00  1.97825533e+01  1.97825533e+01  1.97825533e+01
  4.33684119e+01  3.17894302e+02  1.98359182e+03  7.27284168e+03]
E1 = -182.59409187176547  E_coul = 54.39718655912118
cycle= 2 E= -128.196905312644  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.064
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101712
diis-c [-4.41285905e-04  2.76387639e-01  7.23612361e-01]
  HOMO = -0.784961610405524  LUMO = 2.62903442522056
  mo_energy =
[-3.27116474e+01 -1.89715144e+00 -7.84961610e-01 -7.84961610e-01
 -7.84961610e-01  2.62903443e+00  2.62903443e+00  2.62903443e+00
  2.65958923e+00  1.98387095e+01  1.98387095e+01  1.98387095e+01
  4.34340026e+01  3.17975829e+02  1.98367896e+03  7.27293031e+03]
E1 = -182.4618928550609  E_coul = 54.264683709931866
cycle= 3 E= -128.197209145129  delta_E= -0.000304  |g|= 0.000772  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00104988
diis-c [-5.57283830e-08 -3.57420736e-03  9.33815532e-04  1.00264039e+00]
  HOMO = -0.785233624734093  LUMO = 2.62882238129939
  mo_energy =
[-3.27124317e+01 -1.89748218e+00 -7.85233625e-01 -7.85233625e-01
 -7.85233625e-01  2.62882238e+00  2.62882238e+00  2.62882238e+00
  2.65933264e+00  1.98380991e+01  1.98380991e+01  1.98380991e+01
  4.34332779e+01  3.17975181e+02  1.98367842e+03  7.27292981e+03]
E1 = -182.46338498589  E_coul = 54.26617579943735
cycle= 4 E= -128.197209186453  delta_E= -4.13e-08  |g|= 4.21e-05  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.75743e-05
diis-c [-1.98436899e-10  4.50114075e-04 -1.07518313e-03 -1.57715830e-01
  1.15834090e+00]
  HOMO = -0.785221338702525  LUMO = 2.62883306622421
  mo_energy =
[-3.27124000e+01 -1.89747951e+00 -7.85221339e-01 -7.85221339e-01
 -7.85221339e-01  2.62883307e+00  2.62883307e+00  2.62883307e+00
  2.65933424e+00  1.98381237e+01  1.98381237e+01  1.98381237e+01
  4.34333034e+01  3.17975224e+02  1.98367848e+03  7.27292987e+03]
E1 = -182.46333218125181  E_coul = 54.26612299459885
cycle= 5 E= -128.197209186653  delta_E= -2e-10  |g|= 1.63e-06  |ddm|= 2.08e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46333218125181  E_coul = 54.26612299459885
  HOMO = -0.785221192720201  LUMO = 2.62883320555317
  mo_energy =
[-3.27123997e+01 -1.89747977e+00 -7.85221193e-01 -7.85221193e-01
 -7.85221193e-01  2.62883321e+00  2.62883321e+00  2.62883321e+00
  2.65933401e+00  1.98381239e+01  1.98381239e+01  1.98381239e+01
  4.34333036e+01  3.17975225e+02  1.98367848e+03  7.27292987e+03]
E1 = -182.46333180021122  E_coul = 54.266122613558025
Extra cycle  E= -128.197209186653  delta_E= -2.27e-13  |g|= 3.12e-07  |ddm|= 9.43e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419812e+03 2.15737066e+02 1.42942059e+03 5.66227269e-01
 4.80172489e+01 1.29486574e+01 1.89942104e+00 2.78099655e+00
 1.33313191e+01 6.01375910e-01]
E = -128.1972091866532
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19812408        1
[INPUT] 0    0    [1    /1   ]  215.737065854        1
[INPUT] 0    0    [1    /1   ]  1429.42059276        1
[INPUT] 0    0    [1    /1   ]  0.56622726869        1
[INPUT] 0    0    [1    /1   ]  48.0172489381        1
[INPUT] 0    0    [1    /1   ]  12.9486573668        1
[INPUT] 0    0    [1    /1   ]  1.89942103634        1
[INPUT] 1    0    [1    /1   ]  2.78099655224        1
[INPUT] 1    0    [1    /1   ]  13.3313190532        1
[INPUT] 1    0    [1    /1   ]  0.601375909563       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.198124077225, 1.0]], [0, [215.737065854453, 1.0]], [0, [1429.4205927593703, 1.0]], [0, [0.5662272686895281, 1.0]], [0, [48.01724893811679, 1.0]], [0, [12.948657366842356, 1.0]], [0, [1.8994210363396473, 1.0]], [1, [2.78099655224303, 1.0]], [1, [13.331319053172047, 1.0]], [1, [0.6013759095632929, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19812408]
bas 1, expnt(s) = [215.73706585]
bas 2, expnt(s) = [1429.42059276]
bas 3, expnt(s) = [0.56622727]
bas 4, expnt(s) = [48.01724894]
bas 5, expnt(s) = [12.94865737]
bas 6, expnt(s) = [1.89942104]
bas 7, expnt(s) = [2.78099655]
bas 8, expnt(s) = [13.33131905]
bas 9, expnt(s) = [0.60137591]
CPU time:        35.81
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419812e+03 7.96092822e+02 2.15737066e+02 1.42219321e+02
 1.42942059e+03 5.87333875e+02 5.66227269e-01 1.64914222e+00
 4.80172489e+01 4.60853595e+01 1.29486574e+01 1.72458093e+01
 1.89942104e+00 4.08771828e+00 2.78099655e+00 1.04769520e+01
 1.33313191e+01 7.43148825e+01 6.01375910e-01 1.54495888e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965664772504521
cond(S) = 156.06062610562347
E1 = -183.13688004434067  E_coul = 55.01122804728807
init E= -128.125651997053
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742859442697747  LUMO = 2.66251321498718
  mo_energy =
[-3.25130075e+01 -1.85391353e+00 -7.42859443e-01 -7.42859443e-01
 -7.42859443e-01  2.66251321e+00  2.66251321e+00  2.66251321e+00
  2.69195489e+00  1.99730971e+01  1.99730971e+01  1.99730971e+01
  4.36011766e+01  3.18203914e+02  1.98395296e+03  7.27322838e+03]
E1 = -182.13249172705943  E_coul = 53.93721347643735
cycle= 1 E= -128.195278250622  delta_E= -0.0696  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261397
diis-c [-0.06832837  1.        ]
  HOMO = -0.807732849178732  LUMO = 2.60838372403568
  mo_energy =
[-3.27864128e+01 -1.92076894e+00 -8.07732849e-01 -8.07732849e-01
 -8.07732849e-01  2.60838372e+00  2.60838372e+00  2.60838372e+00
  2.63982487e+00  1.97825533e+01  1.97825533e+01  1.97825533e+01
  4.33684119e+01  3.17894302e+02  1.98359182e+03  7.27284168e+03]
E1 = -182.59409187176547  E_coul = 54.39718655912118
cycle= 2 E= -128.196905312644  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.064
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101712
diis-c [-4.41285905e-04  2.76387639e-01  7.23612361e-01]
  HOMO = -0.784961610405524  LUMO = 2.62903442522056
  mo_energy =
[-3.27116474e+01 -1.89715144e+00 -7.84961610e-01 -7.84961610e-01
 -7.84961610e-01  2.62903443e+00  2.62903443e+00  2.62903443e+00
  2.65958923e+00  1.98387095e+01  1.98387095e+01  1.98387095e+01
  4.34340026e+01  3.17975829e+02  1.98367896e+03  7.27293031e+03]
E1 = -182.4618928550609  E_coul = 54.264683709931866
cycle= 3 E= -128.197209145129  delta_E= -0.000304  |g|= 0.000772  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00104988
diis-c [-5.57283830e-08 -3.57420736e-03  9.33815532e-04  1.00264039e+00]
  HOMO = -0.785233624734093  LUMO = 2.62882238129939
  mo_energy =
[-3.27124317e+01 -1.89748218e+00 -7.85233625e-01 -7.85233625e-01
 -7.85233625e-01  2.62882238e+00  2.62882238e+00  2.62882238e+00
  2.65933264e+00  1.98380991e+01  1.98380991e+01  1.98380991e+01
  4.34332779e+01  3.17975181e+02  1.98367842e+03  7.27292981e+03]
E1 = -182.46338498589  E_coul = 54.26617579943735
cycle= 4 E= -128.197209186453  delta_E= -4.13e-08  |g|= 4.21e-05  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.75743e-05
diis-c [-1.98436899e-10  4.50114075e-04 -1.07518313e-03 -1.57715830e-01
  1.15834090e+00]
  HOMO = -0.785221338702525  LUMO = 2.62883306622421
  mo_energy =
[-3.27124000e+01 -1.89747951e+00 -7.85221339e-01 -7.85221339e-01
 -7.85221339e-01  2.62883307e+00  2.62883307e+00  2.62883307e+00
  2.65933424e+00  1.98381237e+01  1.98381237e+01  1.98381237e+01
  4.34333034e+01  3.17975224e+02  1.98367848e+03  7.27292987e+03]
E1 = -182.46333218125181  E_coul = 54.26612299459885
cycle= 5 E= -128.197209186653  delta_E= -2e-10  |g|= 1.63e-06  |ddm|= 2.08e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46333218125181  E_coul = 54.26612299459885
  HOMO = -0.785221192720201  LUMO = 2.62883320555317
  mo_energy =
[-3.27123997e+01 -1.89747977e+00 -7.85221193e-01 -7.85221193e-01
 -7.85221193e-01  2.62883321e+00  2.62883321e+00  2.62883321e+00
  2.65933401e+00  1.98381239e+01  1.98381239e+01  1.98381239e+01
  4.34333036e+01  3.17975225e+02  1.98367848e+03  7.27292987e+03]
E1 = -182.46333180021122  E_coul = 54.266122613558025
Extra cycle  E= -128.197209186653  delta_E= -2.27e-13  |g|= 3.12e-07  |ddm|= 9.43e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.06062610562347
E1 = -182.46333180021122  E_coul = 54.266122613558025
init E= -128.197209186653
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785221201838334  LUMO = 2.6288331955972
  mo_energy =
[-3.27123998e+01 -1.89747986e+00 -7.85221202e-01 -7.85221202e-01
 -7.85221202e-01  2.62883320e+00  2.62883320e+00  2.62883320e+00
  2.65933394e+00  1.98381238e+01  1.98381238e+01  1.98381238e+01
  4.34333035e+01  3.17975225e+02  1.98367848e+03  7.27292987e+03]
E1 = -182.46333196570285  E_coul = 54.266122779049375
cycle= 1 E= -128.197209186653  delta_E= -2.84e-13  |g|= 5.81e-08  |ddm|= 1.83e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46333196570285  E_coul = 54.266122779049375
  HOMO = -0.785221187324785  LUMO = 2.62883320846282
  mo_energy =
[-3.27123998e+01 -1.89747986e+00 -7.85221187e-01 -7.85221187e-01
 -7.85221187e-01  2.62883321e+00  2.62883321e+00  2.62883321e+00
  2.65933394e+00  1.98381238e+01  1.98381238e+01  1.98381238e+01
  4.34333035e+01  3.17975225e+02  1.98367848e+03  7.27292987e+03]
E1 = -182.46333190315704  E_coul = 54.266122716503716
Extra cycle  E= -128.197209186653  delta_E= 1.71e-13  |g|= 1.38e-08  |ddm|= 2.94e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419812e+03 2.15737066e+02 1.42942059e+03 5.66227269e-01
 4.80172489e+01 1.29486574e+01 1.89942104e+00 2.78099655e+00
 1.33313191e+01 6.01375910e-01]
grad_E = [-7.77070571e-06 -1.93121062e-04  4.43838756e-05 -2.02276484e-04
 -1.91640870e-04  3.40899560e-05  4.02572171e-04  1.35641916e-03
 -2.16202403e-04  1.22044690e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19798767        1
[INPUT] 0    0    [1    /1   ]  215.730900584        1
[INPUT] 0    0    [1    /1   ]  1429.42143994        1
[INPUT] 0    0    [1    /1   ]  0.56464290755        1
[INPUT] 0    0    [1    /1   ]  48.0290684883        1
[INPUT] 0    0    [1    /1   ]  12.9475701674        1
[INPUT] 0    0    [1    /1   ]  1.89188463902        1
[INPUT] 1    0    [1    /1   ]  2.7787449324         1
[INPUT] 1    0    [1    /1   ]  13.3316822855        1
[INPUT] 1    0    [1    /1   ]  0.600814222485       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1979876683818, 1.0]], [0, [215.73090058443438, 1.0]], [0, [1429.4214399351474, 1.0]], [0, [0.5646429075498054, 1.0]], [0, [48.02906848828604, 1.0]], [0, [12.947570167374298, 1.0]], [0, [1.8918846390199429, 1.0]], [1, [2.7787449324024966, 1.0]], [1, [13.331682285481419, 1.0]], [1, [0.6008142224848075, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19798767]
bas 1, expnt(s) = [215.73090058]
bas 2, expnt(s) = [1429.42143994]
bas 3, expnt(s) = [0.56464291]
bas 4, expnt(s) = [48.02906849]
bas 5, expnt(s) = [12.94757017]
bas 6, expnt(s) = [1.89188464]
bas 7, expnt(s) = [2.77874493]
bas 8, expnt(s) = [13.33168229]
bas 9, expnt(s) = [0.60081422]
CPU time:        37.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419799e+03 7.96092784e+02 2.15730901e+02 1.42216273e+02
 1.42942144e+03 5.87334136e+02 5.64642908e-01 1.64568016e+00
 4.80290685e+01 4.60938673e+01 1.29475702e+01 1.72447233e+01
 1.89188464e+00 4.07554800e+00 2.77874493e+00 1.04663498e+01
 1.33316823e+01 7.43174135e+01 6.00814222e-01 1.54315535e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965798334925838
cond(S) = 156.02355815690274
E1 = -183.13664317081097  E_coul = 55.0109920825348
init E= -128.125651088276
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742887208175164  LUMO = 2.65938117549117
  mo_energy =
[-3.25129754e+01 -1.85399660e+00 -7.42887208e-01 -7.42887208e-01
 -7.42887208e-01  2.65938118e+00  2.65938118e+00  2.65938118e+00
  2.67718257e+00  1.99646932e+01  1.99646932e+01  1.99646932e+01
  4.35659858e+01  3.18197439e+02  1.98394694e+03  7.27322119e+03]
E1 = -182.1281429389702  E_coul = 53.932872779195584
cycle= 1 E= -128.195270159775  delta_E= -0.0696  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262069
diis-c [-0.06868007  1.        ]
  HOMO = -0.808052684749719  LUMO = 2.60503058629474
  mo_energy =
[-3.27872295e+01 -1.92116810e+00 -8.08052685e-01 -8.08052685e-01
 -8.08052685e-01  2.60503059e+00  2.60503059e+00  2.60503059e+00
  2.62505496e+00  1.97734996e+01  1.97734996e+01  1.97734996e+01
  4.33324868e+01  3.17886934e+02  1.98358491e+03  7.27283360e+03]
E1 = -182.59149127402253  E_coul = 54.39458375284536
cycle= 2 E= -128.196907521177  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102075
diis-c [-4.41720149e-04  2.76611010e-01  7.23388990e-01]
  HOMO = -0.785197815364964  LUMO = 2.62573840485099
  mo_energy =
[-3.27122209e+01 -1.89746548e+00 -7.85197815e-01 -7.85197815e-01
 -7.85197815e-01  2.62573840e+00  2.62573840e+00  2.62573840e+00
  2.64481045e+00  1.98298458e+01  1.98298458e+01  1.98298458e+01
  4.33982972e+01  3.17968721e+02  1.98367232e+03  7.27292251e+03]
E1 = -182.45876728597494  E_coul = 54.26155362341537
cycle= 3 E= -128.19721366256  delta_E= -0.000306  |g|= 0.000766  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00103692
diis-c [-5.75019690e-08 -3.57634947e-03  7.57689259e-04  1.00281866e+00]
  HOMO = -0.785466702944681  LUMO = 2.62552956824265
  mo_energy =
[-3.27129968e+01 -1.89779407e+00 -7.85466703e-01 -7.85466703e-01
 -7.85466703e-01  2.62552957e+00  2.62552957e+00  2.62552957e+00
  2.64455688e+00  1.98292423e+01  1.98292423e+01  1.98292423e+01
  4.33975801e+01  3.17968083e+02  1.98367180e+03  7.27292202e+03]
E1 = -182.4602448724992  E_coul = 54.26303116921853
cycle= 4 E= -128.197213703281  delta_E= -4.07e-08  |g|= 4.29e-05  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.88217e-05
diis-c [-2.04711326e-10  4.52231356e-04 -1.06343693e-03 -1.58884829e-01
  1.15949603e+00]
  HOMO = -0.785454183693896  LUMO = 2.62554044468196
  mo_energy =
[-3.27129646e+01 -1.89779140e+00 -7.85454184e-01 -7.85454184e-01
 -7.85454184e-01  2.62554044e+00  2.62554044e+00  2.62554044e+00
  2.64455845e+00  1.98292673e+01  1.98292673e+01  1.98292673e+01
  4.33976060e+01  3.17968127e+02  1.98367186e+03  7.27292208e+03]
E1 = -182.4601912113641  E_coul = 54.26297750787432
cycle= 5 E= -128.19721370349  delta_E= -2.09e-10  |g|= 1.65e-06  |ddm|= 2.13e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4601912113641  E_coul = 54.26297750787432
  HOMO = -0.785454037597519  LUMO = 2.62554058418956
  mo_energy =
[-3.27129643e+01 -1.89779167e+00 -7.85454038e-01 -7.85454038e-01
 -7.85454038e-01  2.62554058e+00  2.62554058e+00  2.62554058e+00
  2.64455822e+00  1.98292674e+01  1.98292674e+01  1.98292674e+01
  4.33976061e+01  3.17968128e+02  1.98367186e+03  7.27292208e+03]
E1 = -182.46019083708842  E_coul = 54.262977133598305
Extra cycle  E= -128.19721370349  delta_E= -3.41e-13  |g|= 3.14e-07  |ddm|= 9.52e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419799e+03 2.15730901e+02 1.42942144e+03 5.64642908e-01
 4.80290685e+01 1.29475702e+01 1.89188464e+00 2.77874493e+00
 1.33316823e+01 6.00814222e-01]
E = -128.19721370349012
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19798767        1
[INPUT] 0    0    [1    /1   ]  215.730900584        1
[INPUT] 0    0    [1    /1   ]  1429.42143994        1
[INPUT] 0    0    [1    /1   ]  0.56464290755        1
[INPUT] 0    0    [1    /1   ]  48.0290684883        1
[INPUT] 0    0    [1    /1   ]  12.9475701674        1
[INPUT] 0    0    [1    /1   ]  1.89188463902        1
[INPUT] 1    0    [1    /1   ]  2.7787449324         1
[INPUT] 1    0    [1    /1   ]  13.3316822855        1
[INPUT] 1    0    [1    /1   ]  0.600814222485       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1979876683818, 1.0]], [0, [215.73090058443438, 1.0]], [0, [1429.4214399351474, 1.0]], [0, [0.5646429075498054, 1.0]], [0, [48.02906848828604, 1.0]], [0, [12.947570167374298, 1.0]], [0, [1.8918846390199429, 1.0]], [1, [2.7787449324024966, 1.0]], [1, [13.331682285481419, 1.0]], [1, [0.6008142224848075, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19798767]
bas 1, expnt(s) = [215.73090058]
bas 2, expnt(s) = [1429.42143994]
bas 3, expnt(s) = [0.56464291]
bas 4, expnt(s) = [48.02906849]
bas 5, expnt(s) = [12.94757017]
bas 6, expnt(s) = [1.89188464]
bas 7, expnt(s) = [2.77874493]
bas 8, expnt(s) = [13.33168229]
bas 9, expnt(s) = [0.60081422]
CPU time:        38.14
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419799e+03 7.96092784e+02 2.15730901e+02 1.42216273e+02
 1.42942144e+03 5.87334136e+02 5.64642908e-01 1.64568016e+00
 4.80290685e+01 4.60938673e+01 1.29475702e+01 1.72447233e+01
 1.89188464e+00 4.07554800e+00 2.77874493e+00 1.04663498e+01
 1.33316823e+01 7.43174135e+01 6.00814222e-01 1.54315535e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965798334925838
cond(S) = 156.02355815690274
E1 = -183.13664317081097  E_coul = 55.0109920825348
init E= -128.125651088276
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742887208175164  LUMO = 2.65938117549117
  mo_energy =
[-3.25129754e+01 -1.85399660e+00 -7.42887208e-01 -7.42887208e-01
 -7.42887208e-01  2.65938118e+00  2.65938118e+00  2.65938118e+00
  2.67718257e+00  1.99646932e+01  1.99646932e+01  1.99646932e+01
  4.35659858e+01  3.18197439e+02  1.98394694e+03  7.27322119e+03]
E1 = -182.1281429389702  E_coul = 53.932872779195584
cycle= 1 E= -128.195270159775  delta_E= -0.0696  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262069
diis-c [-0.06868007  1.        ]
  HOMO = -0.808052684749719  LUMO = 2.60503058629474
  mo_energy =
[-3.27872295e+01 -1.92116810e+00 -8.08052685e-01 -8.08052685e-01
 -8.08052685e-01  2.60503059e+00  2.60503059e+00  2.60503059e+00
  2.62505496e+00  1.97734996e+01  1.97734996e+01  1.97734996e+01
  4.33324868e+01  3.17886934e+02  1.98358491e+03  7.27283360e+03]
E1 = -182.59149127402253  E_coul = 54.39458375284536
cycle= 2 E= -128.196907521177  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102075
diis-c [-4.41720149e-04  2.76611010e-01  7.23388990e-01]
  HOMO = -0.785197815364964  LUMO = 2.62573840485099
  mo_energy =
[-3.27122209e+01 -1.89746548e+00 -7.85197815e-01 -7.85197815e-01
 -7.85197815e-01  2.62573840e+00  2.62573840e+00  2.62573840e+00
  2.64481045e+00  1.98298458e+01  1.98298458e+01  1.98298458e+01
  4.33982972e+01  3.17968721e+02  1.98367232e+03  7.27292251e+03]
E1 = -182.45876728597494  E_coul = 54.26155362341537
cycle= 3 E= -128.19721366256  delta_E= -0.000306  |g|= 0.000766  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00103692
diis-c [-5.75019690e-08 -3.57634947e-03  7.57689259e-04  1.00281866e+00]
  HOMO = -0.785466702944681  LUMO = 2.62552956824265
  mo_energy =
[-3.27129968e+01 -1.89779407e+00 -7.85466703e-01 -7.85466703e-01
 -7.85466703e-01  2.62552957e+00  2.62552957e+00  2.62552957e+00
  2.64455688e+00  1.98292423e+01  1.98292423e+01  1.98292423e+01
  4.33975801e+01  3.17968083e+02  1.98367180e+03  7.27292202e+03]
E1 = -182.4602448724992  E_coul = 54.26303116921853
cycle= 4 E= -128.197213703281  delta_E= -4.07e-08  |g|= 4.29e-05  |ddm|= 0.000267
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.88217e-05
diis-c [-2.04711326e-10  4.52231356e-04 -1.06343693e-03 -1.58884829e-01
  1.15949603e+00]
  HOMO = -0.785454183693896  LUMO = 2.62554044468196
  mo_energy =
[-3.27129646e+01 -1.89779140e+00 -7.85454184e-01 -7.85454184e-01
 -7.85454184e-01  2.62554044e+00  2.62554044e+00  2.62554044e+00
  2.64455845e+00  1.98292673e+01  1.98292673e+01  1.98292673e+01
  4.33976060e+01  3.17968127e+02  1.98367186e+03  7.27292208e+03]
E1 = -182.4601912113641  E_coul = 54.26297750787432
cycle= 5 E= -128.19721370349  delta_E= -2.09e-10  |g|= 1.65e-06  |ddm|= 2.13e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4601912113641  E_coul = 54.26297750787432
  HOMO = -0.785454037597519  LUMO = 2.62554058418956
  mo_energy =
[-3.27129643e+01 -1.89779167e+00 -7.85454038e-01 -7.85454038e-01
 -7.85454038e-01  2.62554058e+00  2.62554058e+00  2.62554058e+00
  2.64455822e+00  1.98292674e+01  1.98292674e+01  1.98292674e+01
  4.33976061e+01  3.17968128e+02  1.98367186e+03  7.27292208e+03]
E1 = -182.46019083708842  E_coul = 54.262977133598305
Extra cycle  E= -128.19721370349  delta_E= -3.41e-13  |g|= 3.14e-07  |ddm|= 9.52e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.02355815690274
E1 = -182.46019083708842  E_coul = 54.262977133598305
init E= -128.19721370349
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785454046064962  LUMO = 2.62554057480633
  mo_energy =
[-3.27129644e+01 -1.89779175e+00 -7.85454046e-01 -7.85454046e-01
 -7.85454046e-01  2.62554057e+00  2.62554057e+00  2.62554057e+00
  2.64455815e+00  1.98292674e+01  1.98292674e+01  1.98292674e+01
  4.33976061e+01  3.17968128e+02  1.98367186e+03  7.27292208e+03]
E1 = -182.46019100071612  E_coul = 54.2629772972261
cycle= 1 E= -128.19721370349  delta_E= 8.53e-14  |g|= 5.85e-08  |ddm|= 1.84e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46019100071612  E_coul = 54.2629772972261
  HOMO = -0.785454031635363  LUMO = 2.62554058757973
  mo_energy =
[-3.27129644e+01 -1.89779175e+00 -7.85454032e-01 -7.85454032e-01
 -7.85454032e-01  2.62554059e+00  2.62554059e+00  2.62554059e+00
  2.64455815e+00  1.98292674e+01  1.98292674e+01  1.98292674e+01
  4.33976061e+01  3.17968128e+02  1.98367186e+03  7.27292208e+03]
E1 = -182.46019093902922  E_coul = 54.26297723553906
Extra cycle  E= -128.19721370349  delta_E= -1.14e-13  |g|= 1.38e-08  |ddm|= 2.98e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419799e+03 2.15730901e+02 1.42942144e+03 5.64642908e-01
 4.80290685e+01 1.29475702e+01 1.89188464e+00 2.77874493e+00
 1.33316823e+01 6.00814222e-01]
grad_E = [-7.75975316e-06 -1.98757946e-04  4.44460215e-05  2.65205808e-05
 -1.39907243e-04 -4.62891540e-05 -3.99448763e-05  5.37105368e-04
 -7.76351510e-05  1.72424770e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19783299        1
[INPUT] 0    0    [1    /1   ]  215.724195544        1
[INPUT] 0    0    [1    /1   ]  1429.42239418        1
[INPUT] 0    0    [1    /1   ]  0.564655526348       1
[INPUT] 0    0    [1    /1   ]  48.0401327137        1
[INPUT] 0    0    [1    /1   ]  12.9504107525        1
[INPUT] 0    0    [1    /1   ]  1.89183777611        1
[INPUT] 1    0    [1    /1   ]  2.77781028769        1
[INPUT] 1    0    [1    /1   ]  13.3318191473        1
[INPUT] 1    0    [1    /1   ]  0.600600189586       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.197832987661, 1.0]], [0, [215.72419554406312, 1.0]], [0, [1429.4223941775463, 1.0]], [0, [0.5646555263479016, 1.0]], [0, [48.040132713706384, 1.0]], [0, [12.950410752487738, 1.0]], [0, [1.8918377761130187, 1.0]], [1, [2.777810287690961, 1.0]], [1, [13.331819147344197, 1.0]], [1, [0.6006001895859845, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19783299]
bas 1, expnt(s) = [215.72419554]
bas 2, expnt(s) = [1429.42239418]
bas 3, expnt(s) = [0.56465553]
bas 4, expnt(s) = [48.04013271]
bas 5, expnt(s) = [12.95041075]
bas 6, expnt(s) = [1.89183778]
bas 7, expnt(s) = [2.77781029]
bas 8, expnt(s) = [13.33181915]
bas 9, expnt(s) = [0.60060019]
CPU time:        40.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419783e+03 7.96092741e+02 2.15724196e+02 1.42212957e+02
 1.42942239e+03 5.87334430e+02 5.64655526e-01 1.64570774e+00
 4.80401327e+01 4.61018309e+01 1.29504108e+01 1.72475607e+01
 1.89183778e+00 4.07547229e+00 2.77781029e+00 1.04619495e+01
 1.33318191e+01 7.43183672e+01 6.00600190e-01 1.54246822e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965839340626813
cond(S) = 156.02986232560616
E1 = -183.13658487639407  E_coul = 55.01095658268093
init E= -128.125628293713
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742895008668708  LUMO = 2.65815054746173
  mo_energy =
[-3.25129706e+01 -1.85400059e+00 -7.42895009e-01 -7.42895009e-01
 -7.42895009e-01  2.65815055e+00  2.65815055e+00  2.65815055e+00
  2.67722880e+00  1.99612656e+01  1.99612656e+01  1.99612656e+01
  4.35783952e+01  3.18234298e+02  1.98397517e+03  7.27324526e+03]
E1 = -182.12677811018145  E_coul = 53.93151171864295
cycle= 1 E= -128.195266391538  delta_E= -0.0696  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262294
diis-c [-0.06879794  1.        ]
  HOMO = -0.808152917695686  LUMO = 2.60373551766097
  mo_energy =
[-3.27874953e+01 -1.92128328e+00 -8.08152918e-01 -8.08152918e-01
 -8.08152918e-01  2.60373552e+00  2.60373552e+00  2.60373552e+00
  2.62500160e+00  1.97698635e+01  1.97698635e+01  1.97698635e+01
  4.33446332e+01  3.17923520e+02  1.98361289e+03  7.27285741e+03]
E1 = -182.59070146348338  E_coul = 54.3937942014405
cycle= 2 E= -128.196907262043  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102197
diis-c [-4.42259798e-04  2.76684151e-01  7.23315849e-01]
  HOMO = -0.785271226186305  LUMO = 2.62446018447395
  mo_energy =
[-3.27124050e+01 -1.89755242e+00 -7.85271226e-01 -7.85271226e-01
 -7.85271226e-01  2.62446018e+00  2.62446018e+00  2.62446018e+00
  2.64478114e+00  1.98262732e+01  1.98262732e+01  1.98262732e+01
  4.34105202e+01  3.18005396e+02  1.98370039e+03  7.27294642e+03]
E1 = -182.4578054306145  E_coul = 54.260591251262696
cycle= 3 E= -128.197214179352  delta_E= -0.000307  |g|= 0.000765  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00103251
diis-c [-5.85673222e-08 -3.58208717e-03  6.82693121e-04  1.00289939e+00]
  HOMO = -0.785539044648809  LUMO = 2.6242524514518
  mo_energy =
[-3.27131780e+01 -1.89788050e+00 -7.85539045e-01 -7.85539045e-01
 -7.85539045e-01  2.62425245e+00  2.62425245e+00  2.62425245e+00
  2.64452803e+00  1.98256719e+01  1.98256719e+01  1.98256719e+01
  4.34098055e+01  3.18004762e+02  1.98369988e+03  7.27294594e+03]
E1 = -182.45927819521532  E_coul = 54.26206397530135
cycle= 4 E= -128.197214219914  delta_E= -4.06e-08  |g|= 4.34e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.94832e-05
diis-c [-2.06997284e-10  4.53333065e-04 -1.06082115e-03 -1.59354058e-01
  1.15996155e+00]
  HOMO = -0.785526412250737  LUMO = 2.62426342173621
  mo_energy =
[-3.27131456e+01 -1.89787783e+00 -7.85526412e-01 -7.85526412e-01
 -7.85526412e-01  2.62426342e+00  2.62426342e+00  2.62426342e+00
  2.64452960e+00  1.98256971e+01  1.98256971e+01  1.98256971e+01
  4.34098316e+01  3.18004806e+02  1.98369994e+03  7.27294600e+03]
E1 = -182.45922405292288  E_coul = 54.26200983279543
cycle= 5 E= -128.197214220127  delta_E= -2.13e-10  |g|= 1.65e-06  |ddm|= 2.15e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45922405292288  E_coul = 54.26200983279543
  HOMO = -0.785526267267222  LUMO = 2.62426356027148
  mo_energy =
[-3.27131453e+01 -1.89787809e+00 -7.85526267e-01 -7.85526267e-01
 -7.85526267e-01  2.62426356e+00  2.62426356e+00  2.62426356e+00
  2.64452937e+00  1.98256973e+01  1.98256973e+01  1.98256973e+01
  4.34098318e+01  3.18004806e+02  1.98369994e+03  7.27294600e+03]
E1 = -182.45922368425775  E_coul = 54.262009464129896
Extra cycle  E= -128.197214220128  delta_E= -3.98e-13  |g|= 3.15e-07  |ddm|= 9.55e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419783e+03 2.15724196e+02 1.42942239e+03 5.64655526e-01
 4.80401327e+01 1.29504108e+01 1.89183778e+00 2.77781029e+00
 1.33318191e+01 6.00600190e-01]
E = -128.19721422012785
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:35:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19783299        1
[INPUT] 0    0    [1    /1   ]  215.724195544        1
[INPUT] 0    0    [1    /1   ]  1429.42239418        1
[INPUT] 0    0    [1    /1   ]  0.564655526348       1
[INPUT] 0    0    [1    /1   ]  48.0401327137        1
[INPUT] 0    0    [1    /1   ]  12.9504107525        1
[INPUT] 0    0    [1    /1   ]  1.89183777611        1
[INPUT] 1    0    [1    /1   ]  2.77781028769        1
[INPUT] 1    0    [1    /1   ]  13.3318191473        1
[INPUT] 1    0    [1    /1   ]  0.600600189586       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.197832987661, 1.0]], [0, [215.72419554406312, 1.0]], [0, [1429.4223941775463, 1.0]], [0, [0.5646555263479016, 1.0]], [0, [48.040132713706384, 1.0]], [0, [12.950410752487738, 1.0]], [0, [1.8918377761130187, 1.0]], [1, [2.777810287690961, 1.0]], [1, [13.331819147344197, 1.0]], [1, [0.6006001895859845, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19783299]
bas 1, expnt(s) = [215.72419554]
bas 2, expnt(s) = [1429.42239418]
bas 3, expnt(s) = [0.56465553]
bas 4, expnt(s) = [48.04013271]
bas 5, expnt(s) = [12.95041075]
bas 6, expnt(s) = [1.89183778]
bas 7, expnt(s) = [2.77781029]
bas 8, expnt(s) = [13.33181915]
bas 9, expnt(s) = [0.60060019]
CPU time:        40.50
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419783e+03 7.96092741e+02 2.15724196e+02 1.42212957e+02
 1.42942239e+03 5.87334430e+02 5.64655526e-01 1.64570774e+00
 4.80401327e+01 4.61018309e+01 1.29504108e+01 1.72475607e+01
 1.89183778e+00 4.07547229e+00 2.77781029e+00 1.04619495e+01
 1.33318191e+01 7.43183672e+01 6.00600190e-01 1.54246822e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965839340626813
cond(S) = 156.02986232560616
E1 = -183.13658487639407  E_coul = 55.01095658268093
init E= -128.125628293713
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742895008668708  LUMO = 2.65815054746173
  mo_energy =
[-3.25129706e+01 -1.85400059e+00 -7.42895009e-01 -7.42895009e-01
 -7.42895009e-01  2.65815055e+00  2.65815055e+00  2.65815055e+00
  2.67722880e+00  1.99612656e+01  1.99612656e+01  1.99612656e+01
  4.35783952e+01  3.18234298e+02  1.98397517e+03  7.27324526e+03]
E1 = -182.12677811018145  E_coul = 53.93151171864295
cycle= 1 E= -128.195266391538  delta_E= -0.0696  |g|= 0.165  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262294
diis-c [-0.06879794  1.        ]
  HOMO = -0.808152917695686  LUMO = 2.60373551766097
  mo_energy =
[-3.27874953e+01 -1.92128328e+00 -8.08152918e-01 -8.08152918e-01
 -8.08152918e-01  2.60373552e+00  2.60373552e+00  2.60373552e+00
  2.62500160e+00  1.97698635e+01  1.97698635e+01  1.97698635e+01
  4.33446332e+01  3.17923520e+02  1.98361289e+03  7.27285741e+03]
E1 = -182.59070146348338  E_coul = 54.3937942014405
cycle= 2 E= -128.196907262043  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102197
diis-c [-4.42259798e-04  2.76684151e-01  7.23315849e-01]
  HOMO = -0.785271226186305  LUMO = 2.62446018447395
  mo_energy =
[-3.27124050e+01 -1.89755242e+00 -7.85271226e-01 -7.85271226e-01
 -7.85271226e-01  2.62446018e+00  2.62446018e+00  2.62446018e+00
  2.64478114e+00  1.98262732e+01  1.98262732e+01  1.98262732e+01
  4.34105202e+01  3.18005396e+02  1.98370039e+03  7.27294642e+03]
E1 = -182.4578054306145  E_coul = 54.260591251262696
cycle= 3 E= -128.197214179352  delta_E= -0.000307  |g|= 0.000765  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00103251
diis-c [-5.85673222e-08 -3.58208717e-03  6.82693121e-04  1.00289939e+00]
  HOMO = -0.785539044648809  LUMO = 2.6242524514518
  mo_energy =
[-3.27131780e+01 -1.89788050e+00 -7.85539045e-01 -7.85539045e-01
 -7.85539045e-01  2.62425245e+00  2.62425245e+00  2.62425245e+00
  2.64452803e+00  1.98256719e+01  1.98256719e+01  1.98256719e+01
  4.34098055e+01  3.18004762e+02  1.98369988e+03  7.27294594e+03]
E1 = -182.45927819521532  E_coul = 54.26206397530135
cycle= 4 E= -128.197214219914  delta_E= -4.06e-08  |g|= 4.34e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.94832e-05
diis-c [-2.06997284e-10  4.53333065e-04 -1.06082115e-03 -1.59354058e-01
  1.15996155e+00]
  HOMO = -0.785526412250737  LUMO = 2.62426342173621
  mo_energy =
[-3.27131456e+01 -1.89787783e+00 -7.85526412e-01 -7.85526412e-01
 -7.85526412e-01  2.62426342e+00  2.62426342e+00  2.62426342e+00
  2.64452960e+00  1.98256971e+01  1.98256971e+01  1.98256971e+01
  4.34098316e+01  3.18004806e+02  1.98369994e+03  7.27294600e+03]
E1 = -182.45922405292288  E_coul = 54.26200983279543
cycle= 5 E= -128.197214220127  delta_E= -2.13e-10  |g|= 1.65e-06  |ddm|= 2.15e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45922405292288  E_coul = 54.26200983279543
  HOMO = -0.785526267267222  LUMO = 2.62426356027148
  mo_energy =
[-3.27131453e+01 -1.89787809e+00 -7.85526267e-01 -7.85526267e-01
 -7.85526267e-01  2.62426356e+00  2.62426356e+00  2.62426356e+00
  2.64452937e+00  1.98256973e+01  1.98256973e+01  1.98256973e+01
  4.34098318e+01  3.18004806e+02  1.98369994e+03  7.27294600e+03]
E1 = -182.45922368425775  E_coul = 54.262009464129896
Extra cycle  E= -128.197214220128  delta_E= -3.98e-13  |g|= 3.15e-07  |ddm|= 9.55e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.02986232560616
E1 = -182.45922368425775  E_coul = 54.262009464129896
init E= -128.197214220128
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785526275316057  LUMO = 2.62426355126355
  mo_energy =
[-3.27131454e+01 -1.89787818e+00 -7.85526275e-01 -7.85526275e-01
 -7.85526275e-01  2.62426355e+00  2.62426355e+00  2.62426355e+00
  2.64452929e+00  1.98256973e+01  1.98256973e+01  1.98256973e+01
  4.34098317e+01  3.18004806e+02  1.98369994e+03  7.27294600e+03]
E1 = -182.45922384556687  E_coul = 54.26200962543913
cycle= 1 E= -128.197214220128  delta_E= 1.14e-13  |g|= 5.86e-08  |ddm|= 1.85e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45922384556687  E_coul = 54.26200962543913
  HOMO = -0.785526261037032  LUMO = 2.62426356389493
  mo_energy =
[-3.27131453e+01 -1.89787818e+00 -7.85526261e-01 -7.85526261e-01
 -7.85526261e-01  2.62426356e+00  2.62426356e+00  2.62426356e+00
  2.64452929e+00  1.98256973e+01  1.98256973e+01  1.98256973e+01
  4.34098317e+01  3.18004806e+02  1.98369994e+03  7.27294600e+03]
E1 = -182.45922378477636  E_coul = 54.26200956464848
Extra cycle  E= -128.197214220128  delta_E= -1.42e-13  |g|= 1.38e-08  |ddm|= 2.99e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419783e+03 2.15724196e+02 1.42942239e+03 5.64655526e-01
 4.80401327e+01 1.29504108e+01 1.89183778e+00 2.77781029e+00
 1.33318191e+01 6.00600190e-01]
grad_E = [-7.75220998e-06 -2.02122880e-04  4.44883620e-05  6.74224910e-06
 -1.20966293e-04 -4.22357363e-05 -5.48158119e-05  1.45842118e-04
 -1.77824209e-05 -5.99436419e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19781433        1
[INPUT] 0    0    [1    /1   ]  215.723240042        1
[INPUT] 0    0    [1    /1   ]  1429.42251296        1
[INPUT] 0    0    [1    /1   ]  0.564789236578       1
[INPUT] 0    0    [1    /1   ]  48.0421489627        1
[INPUT] 0    0    [1    /1   ]  12.9512567206        1
[INPUT] 0    0    [1    /1   ]  1.89240168249        1
[INPUT] 1    0    [1    /1   ]  2.77747730706        1
[INPUT] 1    0    [1    /1   ]  13.3318634028        1
[INPUT] 1    0    [1    /1   ]  0.600531338513       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.197814334535, 1.0]], [0, [215.72324004196096, 1.0]], [0, [1429.4225129574086, 1.0]], [0, [0.5647892365779581, 1.0]], [0, [48.0421489626634, 1.0]], [0, [12.951256720610305, 1.0]], [0, [1.8924016824895222, 1.0]], [1, [2.7774773070608534, 1.0]], [1, [13.331863402805686, 1.0]], [1, [0.6005313385125521, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19781433]
bas 1, expnt(s) = [215.72324004]
bas 2, expnt(s) = [1429.42251296]
bas 3, expnt(s) = [0.56478924]
bas 4, expnt(s) = [48.04214896]
bas 5, expnt(s) = [12.95125672]
bas 6, expnt(s) = [1.89240168]
bas 7, expnt(s) = [2.77747731]
bas 8, expnt(s) = [13.3318634]
bas 9, expnt(s) = [0.60053134]
CPU time:        42.55
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419781e+03 7.96092736e+02 2.15723240e+02 1.42212485e+02
 1.42942251e+03 5.87334467e+02 5.64789237e-01 1.64600001e+00
 4.80421490e+01 4.61032820e+01 1.29512567e+01 1.72484057e+01
 1.89240168e+00 4.07638334e+00 2.77747731e+00 1.04603819e+01
 1.33318634e+01 7.43186756e+01 6.00531339e-01 1.54224719e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965850746409457
cond(S) = 156.0345305468932
E1 = -183.1365784059179  E_coul = 55.01095458125007
init E= -128.125623824668
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742896844399927  LUMO = 2.65773826048882
  mo_energy =
[-3.25129720e+01 -1.85399592e+00 -7.42896844e-01 -7.42896844e-01
 -7.42896844e-01  2.65773826e+00  2.65773826e+00  2.65773826e+00
  2.67840378e+00  1.99600642e+01  1.99600642e+01  1.99600642e+01
  4.35844285e+01  3.18244894e+02  1.98398416e+03  7.27325331e+03]
E1 = -182.1264217859075  E_coul = 53.931156461248946
cycle= 1 E= -128.195265324659  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262351
diis-c [-0.06882814  1.        ]
  HOMO = -0.808178087361093  LUMO = 2.60330907393007
  mo_energy =
[-3.27875708e+01 -1.92131022e+00 -8.08178087e-01 -8.08178087e-01
 -8.08178087e-01  2.60330907e+00  2.60330907e+00  2.60330907e+00
  2.62612627e+00  1.97686071e+01  1.97686071e+01  1.97686071e+01
  4.33505939e+01  3.17934040e+02  1.98362180e+03  7.27286539e+03]
E1 = -182.59050027112593  E_coul = 54.393593102624344
cycle= 2 E= -128.196907168502  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102231
diis-c [-4.42428183e-04  2.76707218e-01  7.23292782e-01]
  HOMO = -0.785289402973546  LUMO = 2.6240374987062
  mo_energy =
[-3.27124585e+01 -1.89757179e+00 -7.85289403e-01 -7.85289403e-01
 -7.85289403e-01  2.62403750e+00  2.62403750e+00  2.62403750e+00
  2.64591850e+00  1.98250338e+01  1.98250338e+01  1.98250338e+01
  4.34165013e+01  3.18015940e+02  1.98370933e+03  7.27295443e+03]
E1 = -182.45755878154554  E_coul = 54.26034448416339
cycle= 3 E= -128.197214297382  delta_E= -0.000307  |g|= 0.000764  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00103078
diis-c [-5.90328990e-08 -3.58589765e-03  6.50096112e-04  1.00293580e+00]
  HOMO = -0.785556803205446  LUMO = 2.62383018655803
  mo_energy =
[-3.27132303e+01 -1.89789969e+00 -7.85556803e-01 -7.85556803e-01
 -7.85556803e-01  2.62383019e+00  2.62383019e+00  2.62383019e+00
  2.64566546e+00  1.98244334e+01  1.98244334e+01  1.98244334e+01
  4.34157875e+01  3.18015307e+02  1.98370882e+03  7.27295394e+03]
E1 = -182.45902960063103  E_coul = 54.26181526274678
cycle= 4 E= -128.197214337884  delta_E= -4.05e-08  |g|= 4.36e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.97624e-05
diis-c [-2.07841092e-10  4.53887901e-04 -1.05975348e-03 -1.59527310e-01
  1.16013318e+00]
  HOMO = -0.78554412423543  LUMO = 2.62384119568355
  mo_energy =
[-3.27131978e+01 -1.89789702e+00 -7.85544124e-01 -7.85544124e-01
 -7.85544124e-01  2.62384120e+00  2.62384120e+00  2.62384120e+00
  2.64566702e+00  1.98244587e+01  1.98244587e+01  1.98244587e+01
  4.34158137e+01  3.18015352e+02  1.98370887e+03  7.27295401e+03]
E1 = -182.4589752500989  E_coul = 54.26176091199919
cycle= 5 E= -128.1972143381  delta_E= -2.15e-10  |g|= 1.65e-06  |ddm|= 2.16e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4589752500989  E_coul = 54.26176091199919
  HOMO = -0.785543980005236  LUMO = 2.62384133356375
  mo_energy =
[-3.27131975e+01 -1.89789729e+00 -7.85543980e-01 -7.85543980e-01
 -7.85543980e-01  2.62384133e+00  2.62384133e+00  2.62384133e+00
  2.64566679e+00  1.98244589e+01  1.98244589e+01  1.98244589e+01
  4.34158139e+01  3.18015352e+02  1.98370887e+03  7.27295401e+03]
E1 = -182.45897488470177  E_coul = 54.26176054660179
Extra cycle  E= -128.1972143381  delta_E= -2.84e-13  |g|= 3.15e-07  |ddm|= 9.56e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419781e+03 2.15723240e+02 1.42942251e+03 5.64789237e-01
 4.80421490e+01 1.29512567e+01 1.89240168e+00 2.77747731e+00
 1.33318634e+01 6.00531339e-01]
E = -128.19721433809997
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19781433        1
[INPUT] 0    0    [1    /1   ]  215.723240042        1
[INPUT] 0    0    [1    /1   ]  1429.42251296        1
[INPUT] 0    0    [1    /1   ]  0.564789236578       1
[INPUT] 0    0    [1    /1   ]  48.0421489627        1
[INPUT] 0    0    [1    /1   ]  12.9512567206        1
[INPUT] 0    0    [1    /1   ]  1.89240168249        1
[INPUT] 1    0    [1    /1   ]  2.77747730706        1
[INPUT] 1    0    [1    /1   ]  13.3318634028        1
[INPUT] 1    0    [1    /1   ]  0.600531338513       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.197814334535, 1.0]], [0, [215.72324004196096, 1.0]], [0, [1429.4225129574086, 1.0]], [0, [0.5647892365779581, 1.0]], [0, [48.0421489626634, 1.0]], [0, [12.951256720610305, 1.0]], [0, [1.8924016824895222, 1.0]], [1, [2.7774773070608534, 1.0]], [1, [13.331863402805686, 1.0]], [1, [0.6005313385125521, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19781433]
bas 1, expnt(s) = [215.72324004]
bas 2, expnt(s) = [1429.42251296]
bas 3, expnt(s) = [0.56478924]
bas 4, expnt(s) = [48.04214896]
bas 5, expnt(s) = [12.95125672]
bas 6, expnt(s) = [1.89240168]
bas 7, expnt(s) = [2.77747731]
bas 8, expnt(s) = [13.3318634]
bas 9, expnt(s) = [0.60053134]
CPU time:        42.90
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419781e+03 7.96092736e+02 2.15723240e+02 1.42212485e+02
 1.42942251e+03 5.87334467e+02 5.64789237e-01 1.64600001e+00
 4.80421490e+01 4.61032820e+01 1.29512567e+01 1.72484057e+01
 1.89240168e+00 4.07638334e+00 2.77747731e+00 1.04603819e+01
 1.33318634e+01 7.43186756e+01 6.00531339e-01 1.54224719e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965850746409457
cond(S) = 156.0345305468932
E1 = -183.1365784059179  E_coul = 55.01095458125007
init E= -128.125623824668
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742896844399927  LUMO = 2.65773826048882
  mo_energy =
[-3.25129720e+01 -1.85399592e+00 -7.42896844e-01 -7.42896844e-01
 -7.42896844e-01  2.65773826e+00  2.65773826e+00  2.65773826e+00
  2.67840378e+00  1.99600642e+01  1.99600642e+01  1.99600642e+01
  4.35844285e+01  3.18244894e+02  1.98398416e+03  7.27325331e+03]
E1 = -182.1264217859075  E_coul = 53.931156461248946
cycle= 1 E= -128.195265324659  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262351
diis-c [-0.06882814  1.        ]
  HOMO = -0.808178087361093  LUMO = 2.60330907393007
  mo_energy =
[-3.27875708e+01 -1.92131022e+00 -8.08178087e-01 -8.08178087e-01
 -8.08178087e-01  2.60330907e+00  2.60330907e+00  2.60330907e+00
  2.62612627e+00  1.97686071e+01  1.97686071e+01  1.97686071e+01
  4.33505939e+01  3.17934040e+02  1.98362180e+03  7.27286539e+03]
E1 = -182.59050027112593  E_coul = 54.393593102624344
cycle= 2 E= -128.196907168502  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102231
diis-c [-4.42428183e-04  2.76707218e-01  7.23292782e-01]
  HOMO = -0.785289402973546  LUMO = 2.6240374987062
  mo_energy =
[-3.27124585e+01 -1.89757179e+00 -7.85289403e-01 -7.85289403e-01
 -7.85289403e-01  2.62403750e+00  2.62403750e+00  2.62403750e+00
  2.64591850e+00  1.98250338e+01  1.98250338e+01  1.98250338e+01
  4.34165013e+01  3.18015940e+02  1.98370933e+03  7.27295443e+03]
E1 = -182.45755878154554  E_coul = 54.26034448416339
cycle= 3 E= -128.197214297382  delta_E= -0.000307  |g|= 0.000764  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00103078
diis-c [-5.90328990e-08 -3.58589765e-03  6.50096112e-04  1.00293580e+00]
  HOMO = -0.785556803205446  LUMO = 2.62383018655803
  mo_energy =
[-3.27132303e+01 -1.89789969e+00 -7.85556803e-01 -7.85556803e-01
 -7.85556803e-01  2.62383019e+00  2.62383019e+00  2.62383019e+00
  2.64566546e+00  1.98244334e+01  1.98244334e+01  1.98244334e+01
  4.34157875e+01  3.18015307e+02  1.98370882e+03  7.27295394e+03]
E1 = -182.45902960063103  E_coul = 54.26181526274678
cycle= 4 E= -128.197214337884  delta_E= -4.05e-08  |g|= 4.36e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.97624e-05
diis-c [-2.07841092e-10  4.53887901e-04 -1.05975348e-03 -1.59527310e-01
  1.16013318e+00]
  HOMO = -0.78554412423543  LUMO = 2.62384119568355
  mo_energy =
[-3.27131978e+01 -1.89789702e+00 -7.85544124e-01 -7.85544124e-01
 -7.85544124e-01  2.62384120e+00  2.62384120e+00  2.62384120e+00
  2.64566702e+00  1.98244587e+01  1.98244587e+01  1.98244587e+01
  4.34158137e+01  3.18015352e+02  1.98370887e+03  7.27295401e+03]
E1 = -182.4589752500989  E_coul = 54.26176091199919
cycle= 5 E= -128.1972143381  delta_E= -2.15e-10  |g|= 1.65e-06  |ddm|= 2.16e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4589752500989  E_coul = 54.26176091199919
  HOMO = -0.785543980005236  LUMO = 2.62384133356375
  mo_energy =
[-3.27131975e+01 -1.89789729e+00 -7.85543980e-01 -7.85543980e-01
 -7.85543980e-01  2.62384133e+00  2.62384133e+00  2.62384133e+00
  2.64566679e+00  1.98244589e+01  1.98244589e+01  1.98244589e+01
  4.34158139e+01  3.18015352e+02  1.98370887e+03  7.27295401e+03]
E1 = -182.45897488470177  E_coul = 54.26176054660179
Extra cycle  E= -128.1972143381  delta_E= -2.84e-13  |g|= 3.15e-07  |ddm|= 9.56e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.0345305468932
E1 = -182.45897488470177  E_coul = 54.26176054660179
init E= -128.1972143381
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785543987825538  LUMO = 2.6238413247618
  mo_energy =
[-3.27131976e+01 -1.89789738e+00 -7.85543988e-01 -7.85543988e-01
 -7.85543988e-01  2.62384132e+00  2.62384132e+00  2.62384132e+00
  2.64566672e+00  1.98244588e+01  1.98244588e+01  1.98244588e+01
  4.34158138e+01  3.18015352e+02  1.98370887e+03  7.27295401e+03]
E1 = -182.45897504459947  E_coul = 54.261760706499295
cycle= 1 E= -128.1972143381  delta_E= -1.99e-13  |g|= 5.86e-08  |ddm|= 1.85e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45897504459947  E_coul = 54.261760706499295
  HOMO = -0.785543973641917  LUMO = 2.62384133730499
  mo_energy =
[-3.27131975e+01 -1.89789738e+00 -7.85543974e-01 -7.85543974e-01
 -7.85543974e-01  2.62384134e+00  2.62384134e+00  2.62384134e+00
  2.64566672e+00  1.98244589e+01  1.98244589e+01  1.98244589e+01
  4.34158138e+01  3.18015352e+02  1.98370887e+03  7.27295401e+03]
E1 = -182.45897498434783  E_coul = 54.2617606462477
Extra cycle  E= -128.1972143381  delta_E= 2.84e-14  |g|= 1.37e-08  |ddm|= 2.99e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419781e+03 2.15723240e+02 1.42942251e+03 5.64789237e-01
 4.80421490e+01 1.29512567e+01 1.89240168e+00 2.77747731e+00
 1.33318634e+01 6.00531339e-01]
grad_E = [-7.75118136e-06 -2.02546543e-04  4.44941838e-05  2.99857873e-06
 -1.20171165e-04 -3.45804528e-05 -2.81208260e-05 -1.25624701e-05
  4.34055018e-06 -5.84492615e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19784221        1
[INPUT] 0    0    [1    /1   ]  215.724008851        1
[INPUT] 0    0    [1    /1   ]  1429.42235198        1
[INPUT] 0    0    [1    /1   ]  0.564955479144       1
[INPUT] 0    0    [1    /1   ]  48.0423031738        1
[INPUT] 0    0    [1    /1   ]  12.9517074637        1
[INPUT] 0    0    [1    /1   ]  1.89313445759        1
[INPUT] 1    0    [1    /1   ]  2.77712006091        1
[INPUT] 1    0    [1    /1   ]  13.3319074054        1
[INPUT] 1    0    [1    /1   ]  0.60046061238        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1978422132033, 1.0]], [0, [215.72400885108453, 1.0]], [0, [1429.4223519776033, 1.0]], [0, [0.5649554791438869, 1.0]], [0, [48.04230317382977, 1.0]], [0, [12.951707463729223, 1.0]], [0, [1.8931344575853577, 1.0]], [1, [2.777120060910989, 1.0]], [1, [13.331907405410549, 1.0]], [1, [0.6004606123800277, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19784221]
bas 1, expnt(s) = [215.72400885]
bas 2, expnt(s) = [1429.42235198]
bas 3, expnt(s) = [0.56495548]
bas 4, expnt(s) = [48.04230317]
bas 5, expnt(s) = [12.95170746]
bas 6, expnt(s) = [1.89313446]
bas 7, expnt(s) = [2.77712006]
bas 8, expnt(s) = [13.33190741]
bas 9, expnt(s) = [0.60046061]
CPU time:        44.98
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419784e+03 7.96092743e+02 2.15724009e+02 1.42212865e+02
 1.42942235e+03 5.87334417e+02 5.64955479e-01 1.64636336e+00
 4.80423032e+01 4.61033930e+01 1.29517075e+01 1.72488559e+01
 1.89313446e+00 4.07756713e+00 2.77712006e+00 1.04587002e+01
 1.33319074e+01 7.43189822e+01 6.00460612e-01 1.54202015e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965862178336312
cond(S) = 156.03920757095773
E1 = -183.13657855235385  E_coul = 55.01095500632077
init E= -128.125623546033
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742898495705469  LUMO = 2.65730688414956
  mo_energy =
[-3.25129746e+01 -1.85398946e+00 -7.42898496e-01 -7.42898496e-01
 -7.42898496e-01  2.65730688e+00  2.65730688e+00  2.65730688e+00
  2.67989060e+00  1.99587814e+01  1.99587814e+01  1.99587814e+01
  4.35893986e+01  3.18250782e+02  1.98399096e+03  7.27325997e+03]
E1 = -182.12607548068894  E_coul = 53.93081116286891
cycle= 1 E= -128.19526431782  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262406
diis-c [-0.06885677  1.        ]
  HOMO = -0.80820197880538  LUMO = 2.60286503864768
  mo_energy =
[-3.27876475e+01 -1.92133483e+00 -8.08201979e-01 -8.08201979e-01
 -8.08201979e-01  2.60286504e+00  2.60286504e+00  2.60286504e+00
  2.62755736e+00  1.97672705e+01  1.97672705e+01  1.97672705e+01
  4.33554946e+01  3.17939848e+02  1.98362851e+03  7.27287196e+03]
E1 = -182.5903057632092  E_coul = 54.39339864001329
cycle= 2 E= -128.196907123196  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102264
diis-c [-4.42553821e-04  2.76731719e-01  7.23268281e-01]
  HOMO = -0.785306553171447  LUMO = 2.62359682799656
  mo_energy =
[-3.27125137e+01 -1.89758903e+00 -7.85306553e-01 -7.85306553e-01
 -7.85306553e-01  2.62359683e+00  2.62359683e+00  2.62359683e+00
  2.64736378e+00  1.98237138e+01  1.98237138e+01  1.98237138e+01
  4.34214211e+01  3.18021772e+02  1.98371607e+03  7.27296102e+03]
E1 = -182.45732036303846  E_coul = 54.2601059036838
cycle= 3 E= -128.197214459355  delta_E= -0.000307  |g|= 0.000764  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00102878
diis-c [-5.95227454e-08 -3.59054073e-03  6.12544593e-04  1.00297800e+00]
  HOMO = -0.785573472118535  LUMO = 2.62338999591791
  mo_energy =
[-3.27132842e+01 -1.89791670e+00 -7.85573472e-01 -7.85573472e-01
 -7.85573472e-01  2.62339000e+00  2.62339000e+00  2.62339000e+00
  2.64711084e+00  1.98231145e+01  1.98231145e+01  1.98231145e+01
  4.34207084e+01  3.18021141e+02  1.98371556e+03  7.27296054e+03]
E1 = -182.4587888676031  E_coul = 54.261574367823016
cycle= 4 E= -128.19721449978  delta_E= -4.04e-08  |g|= 4.37e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.00509e-05
diis-c [-2.08726027e-10  4.54480656e-04 -1.05807042e-03 -1.59687113e-01
  1.16029070e+00]
  HOMO = -0.785560745278981  LUMO = 2.62340104481175
  mo_energy =
[-3.27132515e+01 -1.89791403e+00 -7.85560745e-01 -7.85560745e-01
 -7.85560745e-01  2.62340104e+00  2.62340104e+00  2.62340104e+00
  2.64711240e+00  1.98231399e+01  1.98231399e+01  1.98231399e+01
  4.34207347e+01  3.18021186e+02  1.98371562e+03  7.27296061e+03]
E1 = -182.45873429989757  E_coul = 54.2615197999005
cycle= 5 E= -128.197214499997  delta_E= -2.17e-10  |g|= 1.66e-06  |ddm|= 2.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45873429989757  E_coul = 54.2615197999005
  HOMO = -0.785560601821913  LUMO = 2.6234011820279
  mo_energy =
[-3.27132512e+01 -1.89791430e+00 -7.85560602e-01 -7.85560602e-01
 -7.85560602e-01  2.62340118e+00  2.62340118e+00  2.62340118e+00
  2.64711217e+00  1.98231401e+01  1.98231401e+01  1.98231401e+01
  4.34207349e+01  3.18021186e+02  1.98371562e+03  7.27296061e+03]
E1 = -182.45873393773132  E_coul = 54.26151943773371
Extra cycle  E= -128.197214499998  delta_E= -5.4e-13  |g|= 3.15e-07  |ddm|= 9.57e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419784e+03 2.15724009e+02 1.42942235e+03 5.64955479e-01
 4.80423032e+01 1.29517075e+01 1.89313446e+00 2.77712006e+00
 1.33319074e+01 6.00460612e-01]
E = -128.1972144999976
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19784221        1
[INPUT] 0    0    [1    /1   ]  215.724008851        1
[INPUT] 0    0    [1    /1   ]  1429.42235198        1
[INPUT] 0    0    [1    /1   ]  0.564955479144       1
[INPUT] 0    0    [1    /1   ]  48.0423031738        1
[INPUT] 0    0    [1    /1   ]  12.9517074637        1
[INPUT] 0    0    [1    /1   ]  1.89313445759        1
[INPUT] 1    0    [1    /1   ]  2.77712006091        1
[INPUT] 1    0    [1    /1   ]  13.3319074054        1
[INPUT] 1    0    [1    /1   ]  0.60046061238        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1978422132033, 1.0]], [0, [215.72400885108453, 1.0]], [0, [1429.4223519776033, 1.0]], [0, [0.5649554791438869, 1.0]], [0, [48.04230317382977, 1.0]], [0, [12.951707463729223, 1.0]], [0, [1.8931344575853577, 1.0]], [1, [2.777120060910989, 1.0]], [1, [13.331907405410549, 1.0]], [1, [0.6004606123800277, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19784221]
bas 1, expnt(s) = [215.72400885]
bas 2, expnt(s) = [1429.42235198]
bas 3, expnt(s) = [0.56495548]
bas 4, expnt(s) = [48.04230317]
bas 5, expnt(s) = [12.95170746]
bas 6, expnt(s) = [1.89313446]
bas 7, expnt(s) = [2.77712006]
bas 8, expnt(s) = [13.33190741]
bas 9, expnt(s) = [0.60046061]
CPU time:        45.35
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419784e+03 7.96092743e+02 2.15724009e+02 1.42212865e+02
 1.42942235e+03 5.87334417e+02 5.64955479e-01 1.64636336e+00
 4.80423032e+01 4.61033930e+01 1.29517075e+01 1.72488559e+01
 1.89313446e+00 4.07756713e+00 2.77712006e+00 1.04587002e+01
 1.33319074e+01 7.43189822e+01 6.00460612e-01 1.54202015e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965862178336312
cond(S) = 156.03920757095773
E1 = -183.13657855235385  E_coul = 55.01095500632077
init E= -128.125623546033
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742898495705469  LUMO = 2.65730688414956
  mo_energy =
[-3.25129746e+01 -1.85398946e+00 -7.42898496e-01 -7.42898496e-01
 -7.42898496e-01  2.65730688e+00  2.65730688e+00  2.65730688e+00
  2.67989060e+00  1.99587814e+01  1.99587814e+01  1.99587814e+01
  4.35893986e+01  3.18250782e+02  1.98399096e+03  7.27325997e+03]
E1 = -182.12607548068894  E_coul = 53.93081116286891
cycle= 1 E= -128.19526431782  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262406
diis-c [-0.06885677  1.        ]
  HOMO = -0.80820197880538  LUMO = 2.60286503864768
  mo_energy =
[-3.27876475e+01 -1.92133483e+00 -8.08201979e-01 -8.08201979e-01
 -8.08201979e-01  2.60286504e+00  2.60286504e+00  2.60286504e+00
  2.62755736e+00  1.97672705e+01  1.97672705e+01  1.97672705e+01
  4.33554946e+01  3.17939848e+02  1.98362851e+03  7.27287196e+03]
E1 = -182.5903057632092  E_coul = 54.39339864001329
cycle= 2 E= -128.196907123196  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102264
diis-c [-4.42553821e-04  2.76731719e-01  7.23268281e-01]
  HOMO = -0.785306553171447  LUMO = 2.62359682799656
  mo_energy =
[-3.27125137e+01 -1.89758903e+00 -7.85306553e-01 -7.85306553e-01
 -7.85306553e-01  2.62359683e+00  2.62359683e+00  2.62359683e+00
  2.64736378e+00  1.98237138e+01  1.98237138e+01  1.98237138e+01
  4.34214211e+01  3.18021772e+02  1.98371607e+03  7.27296102e+03]
E1 = -182.45732036303846  E_coul = 54.2601059036838
cycle= 3 E= -128.197214459355  delta_E= -0.000307  |g|= 0.000764  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00102878
diis-c [-5.95227454e-08 -3.59054073e-03  6.12544593e-04  1.00297800e+00]
  HOMO = -0.785573472118535  LUMO = 2.62338999591791
  mo_energy =
[-3.27132842e+01 -1.89791670e+00 -7.85573472e-01 -7.85573472e-01
 -7.85573472e-01  2.62339000e+00  2.62339000e+00  2.62339000e+00
  2.64711084e+00  1.98231145e+01  1.98231145e+01  1.98231145e+01
  4.34207084e+01  3.18021141e+02  1.98371556e+03  7.27296054e+03]
E1 = -182.4587888676031  E_coul = 54.261574367823016
cycle= 4 E= -128.19721449978  delta_E= -4.04e-08  |g|= 4.37e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.00509e-05
diis-c [-2.08726027e-10  4.54480656e-04 -1.05807042e-03 -1.59687113e-01
  1.16029070e+00]
  HOMO = -0.785560745278981  LUMO = 2.62340104481175
  mo_energy =
[-3.27132515e+01 -1.89791403e+00 -7.85560745e-01 -7.85560745e-01
 -7.85560745e-01  2.62340104e+00  2.62340104e+00  2.62340104e+00
  2.64711240e+00  1.98231399e+01  1.98231399e+01  1.98231399e+01
  4.34207347e+01  3.18021186e+02  1.98371562e+03  7.27296061e+03]
E1 = -182.45873429989757  E_coul = 54.2615197999005
cycle= 5 E= -128.197214499997  delta_E= -2.17e-10  |g|= 1.66e-06  |ddm|= 2.17e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45873429989757  E_coul = 54.2615197999005
  HOMO = -0.785560601821913  LUMO = 2.6234011820279
  mo_energy =
[-3.27132512e+01 -1.89791430e+00 -7.85560602e-01 -7.85560602e-01
 -7.85560602e-01  2.62340118e+00  2.62340118e+00  2.62340118e+00
  2.64711217e+00  1.98231401e+01  1.98231401e+01  1.98231401e+01
  4.34207349e+01  3.18021186e+02  1.98371562e+03  7.27296061e+03]
E1 = -182.45873393773132  E_coul = 54.26151943773371
Extra cycle  E= -128.197214499998  delta_E= -5.4e-13  |g|= 3.15e-07  |ddm|= 9.57e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.03920757095773
E1 = -182.45873393773132  E_coul = 54.26151943773371
init E= -128.197214499998
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.7855606094152  LUMO = 2.62340117343041
  mo_energy =
[-3.27132513e+01 -1.89791438e+00 -7.85560609e-01 -7.85560609e-01
 -7.85560609e-01  2.62340117e+00  2.62340117e+00  2.62340117e+00
  2.64711209e+00  1.98231400e+01  1.98231400e+01  1.98231400e+01
  4.34207348e+01  3.18021186e+02  1.98371562e+03  7.27296061e+03]
E1 = -182.45873409621004  E_coul = 54.26151959621235
cycle= 1 E= -128.197214499998  delta_E= -8.53e-14  |g|= 5.86e-08  |ddm|= 1.85e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45873409621004  E_coul = 54.26151959621235
  HOMO = -0.785560595327373  LUMO = 2.62340118588496
  mo_energy =
[-3.27132513e+01 -1.89791438e+00 -7.85560595e-01 -7.85560595e-01
 -7.85560595e-01  2.62340119e+00  2.62340119e+00  2.62340119e+00
  2.64711209e+00  1.98231401e+01  1.98231401e+01  1.98231401e+01
  4.34207348e+01  3.18021186e+02  1.98371562e+03  7.27296061e+03]
E1 = -182.45873403649702  E_coul = 54.26151953649937
Extra cycle  E= -128.197214499998  delta_E= 5.68e-14  |g|= 1.37e-08  |ddm|= 2.99e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419784e+03 2.15724009e+02 1.42942235e+03 5.64955479e-01
 4.80423032e+01 1.29517075e+01 1.89313446e+00 2.77712006e+00
 1.33319074e+01 6.00460612e-01]
grad_E = [-7.75168015e-06 -2.02317437e-04  4.44915698e-05 -3.11178411e-06
 -1.23426467e-04 -2.56974762e-05  1.10253708e-05 -1.90398721e-04
  2.83791001e-05 -2.00801649e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19793426        1
[INPUT] 0    0    [1    /1   ]  215.726898152        1
[INPUT] 0    0    [1    /1   ]  1429.42181162        1
[INPUT] 0    0    [1    /1   ]  0.565159672484       1
[INPUT] 0    0    [1    /1   ]  48.0411980329        1
[INPUT] 0    0    [1    /1   ]  12.9519168188        1
[INPUT] 0    0    [1    /1   ]  1.89405980279        1
[INPUT] 1    0    [1    /1   ]  2.77669127345        1
[INPUT] 1    0    [1    /1   ]  13.3319545174        1
[INPUT] 1    0    [1    /1   ]  0.60037735487        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1979342581894, 1.0]], [0, [215.72689815202514, 1.0]], [0, [1429.4218116183124, 1.0]], [0, [0.5651596724843395, 1.0]], [0, [48.04119803290286, 1.0]], [0, [12.951916818848487, 1.0]], [0, [1.894059802789742, 1.0]], [1, [2.7766912734520033, 1.0]], [1, [13.331954517350297, 1.0]], [1, [0.6003773548701631, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19793426]
bas 1, expnt(s) = [215.72689815]
bas 2, expnt(s) = [1429.42181162]
bas 3, expnt(s) = [0.56515967]
bas 4, expnt(s) = [48.04119803]
bas 5, expnt(s) = [12.95191682]
bas 6, expnt(s) = [1.8940598]
bas 7, expnt(s) = [2.77669127]
bas 8, expnt(s) = [13.33195452]
bas 9, expnt(s) = [0.60037735]
CPU time:        47.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419793e+03 7.96092769e+02 2.15726898e+02 1.42214294e+02
 1.42942181e+03 5.87334251e+02 5.65159672e-01 1.64680963e+00
 4.80411980e+01 4.61025976e+01 1.29519168e+01 1.72490650e+01
 1.89405980e+00 4.07906184e+00 2.77669127e+00 1.04566817e+01
 1.33319545e+01 7.43193105e+01 6.00377355e-01 1.54175289e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965875595897675
cond(S) = 156.04452969102235
E1 = -183.1365829725967  E_coul = 55.01095657205202
init E= -128.125626400545
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742900321642468  LUMO = 2.65679483824128
  mo_energy =
[-3.25129782e+01 -1.85398115e+00 -7.42900322e-01 -7.42900322e-01
 -7.42900322e-01  2.65679484e+00  2.65679484e+00  2.65679484e+00
  2.68174034e+00  1.99572407e+01  1.99572407e+01  1.99572407e+01
  4.35941080e+01  3.18254720e+02  1.98399943e+03  7.27326902e+03]
E1 = -182.12567244218008  E_coul = 53.93040917988878
cycle= 1 E= -128.195263262291  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262468
diis-c [-0.06888969  1.        ]
  HOMO = -0.808229501564287  LUMO = 2.60233870002385
  mo_energy =
[-3.27877386e+01 -1.92136257e+00 -8.08229502e-01 -8.08229502e-01
 -8.08229502e-01  2.60233870e+00  2.60233870e+00  2.60233870e+00
  2.62934006e+00  1.97656672e+01  1.97656672e+01  1.97656672e+01
  4.33601245e+01  3.17943690e+02  1.98363688e+03  7.27288091e+03]
E1 = -182.5900795750308  E_coul = 54.39317238273685
cycle= 2 E= -128.196907192294  delta_E= -0.00164  |g|= 0.0628  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102302
diis-c [-4.4266062e-04  2.7676131e-01  7.2323869e-01]
  HOMO = -0.785326272204738  LUMO = 2.62307427580025
  mo_energy =
[-3.27125799e+01 -1.89760822e+00 -7.85326272e-01 -7.85326272e-01
 -7.85326272e-01  2.62307428e+00  2.62307428e+00  2.62307428e+00
  2.64916363e+00  1.98221298e+01  1.98221298e+01  1.98221298e+01
  4.34260726e+01  3.18025642e+02  1.98372447e+03  7.27297000e+03]
E1 = -182.4570433361002  E_coul = 54.25982856612138
cycle= 3 E= -128.197214769979  delta_E= -0.000308  |g|= 0.000763  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00102629
diis-c [-6.00895825e-08 -3.59635253e-03  5.66133775e-04  1.00303022e+00]
  HOMO = -0.785592592247623  LUMO = 2.62286803917624
  mo_energy =
[-3.27133487e+01 -1.89793556e+00 -7.85592592e-01 -7.85592592e-01
 -7.85592592e-01  2.62286804e+00  2.62286804e+00  2.62286804e+00
  2.64891083e+00  1.98215318e+01  1.98215318e+01  1.98215318e+01
  4.34253613e+01  3.18025013e+02  1.98372396e+03  7.27296952e+03]
E1 = -182.45850890328413  E_coul = 54.26129409298143
cycle= 4 E= -128.197214810303  delta_E= -4.03e-08  |g|= 4.4e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.03797e-05
diis-c [-2.09756546e-10  4.55159725e-04 -1.05558678e-03 -1.59852737e-01
  1.16045316e+00]
  HOMO = -0.785579811017502  LUMO = 2.62287913306008
  mo_energy =
[-3.27133159e+01 -1.89793290e+00 -7.85579811e-01 -7.85579811e-01
 -7.85579811e-01  2.62287913e+00  2.62287913e+00  2.62287913e+00
  2.64891239e+00  1.98215573e+01  1.98215573e+01  1.98215573e+01
  4.34253878e+01  3.18025058e+02  1.98372402e+03  7.27296959e+03]
E1 = -182.45845408660662  E_coul = 54.2612392760846
cycle= 5 E= -128.197214810522  delta_E= -2.19e-10  |g|= 1.66e-06  |ddm|= 2.19e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45845408660662  E_coul = 54.2612392760846
  HOMO = -0.785579668399428  LUMO = 2.62287926956388
  mo_energy =
[-3.27133156e+01 -1.89793317e+00 -7.85579668e-01 -7.85579668e-01
 -7.85579668e-01  2.62287927e+00  2.62287927e+00  2.62287927e+00
  2.64891216e+00  1.98215575e+01  1.98215575e+01  1.98215575e+01
  4.34253879e+01  3.18025059e+02  1.98372402e+03  7.27296959e+03]
E1 = -182.45845372783316  E_coul = 54.261238917310735
Extra cycle  E= -128.197214810522  delta_E= -4.26e-13  |g|= 3.16e-07  |ddm|= 9.59e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419793e+03 2.15726898e+02 1.42942181e+03 5.65159672e-01
 4.80411980e+01 1.29519168e+01 1.89405980e+00 2.77669127e+00
 1.33319545e+01 6.00377355e-01]
E = -128.19721481052244
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19793426        1
[INPUT] 0    0    [1    /1   ]  215.726898152        1
[INPUT] 0    0    [1    /1   ]  1429.42181162        1
[INPUT] 0    0    [1    /1   ]  0.565159672484       1
[INPUT] 0    0    [1    /1   ]  48.0411980329        1
[INPUT] 0    0    [1    /1   ]  12.9519168188        1
[INPUT] 0    0    [1    /1   ]  1.89405980279        1
[INPUT] 1    0    [1    /1   ]  2.77669127345        1
[INPUT] 1    0    [1    /1   ]  13.3319545174        1
[INPUT] 1    0    [1    /1   ]  0.60037735487        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1979342581894, 1.0]], [0, [215.72689815202514, 1.0]], [0, [1429.4218116183124, 1.0]], [0, [0.5651596724843395, 1.0]], [0, [48.04119803290286, 1.0]], [0, [12.951916818848487, 1.0]], [0, [1.894059802789742, 1.0]], [1, [2.7766912734520033, 1.0]], [1, [13.331954517350297, 1.0]], [1, [0.6003773548701631, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19793426]
bas 1, expnt(s) = [215.72689815]
bas 2, expnt(s) = [1429.42181162]
bas 3, expnt(s) = [0.56515967]
bas 4, expnt(s) = [48.04119803]
bas 5, expnt(s) = [12.95191682]
bas 6, expnt(s) = [1.8940598]
bas 7, expnt(s) = [2.77669127]
bas 8, expnt(s) = [13.33195452]
bas 9, expnt(s) = [0.60037735]
CPU time:        47.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419793e+03 7.96092769e+02 2.15726898e+02 1.42214294e+02
 1.42942181e+03 5.87334251e+02 5.65159672e-01 1.64680963e+00
 4.80411980e+01 4.61025976e+01 1.29519168e+01 1.72490650e+01
 1.89405980e+00 4.07906184e+00 2.77669127e+00 1.04566817e+01
 1.33319545e+01 7.43193105e+01 6.00377355e-01 1.54175289e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965875595897675
cond(S) = 156.04452969102235
E1 = -183.1365829725967  E_coul = 55.01095657205202
init E= -128.125626400545
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742900321642468  LUMO = 2.65679483824128
  mo_energy =
[-3.25129782e+01 -1.85398115e+00 -7.42900322e-01 -7.42900322e-01
 -7.42900322e-01  2.65679484e+00  2.65679484e+00  2.65679484e+00
  2.68174034e+00  1.99572407e+01  1.99572407e+01  1.99572407e+01
  4.35941080e+01  3.18254720e+02  1.98399943e+03  7.27326902e+03]
E1 = -182.12567244218008  E_coul = 53.93040917988878
cycle= 1 E= -128.195263262291  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262468
diis-c [-0.06888969  1.        ]
  HOMO = -0.808229501564287  LUMO = 2.60233870002385
  mo_energy =
[-3.27877386e+01 -1.92136257e+00 -8.08229502e-01 -8.08229502e-01
 -8.08229502e-01  2.60233870e+00  2.60233870e+00  2.60233870e+00
  2.62934006e+00  1.97656672e+01  1.97656672e+01  1.97656672e+01
  4.33601245e+01  3.17943690e+02  1.98363688e+03  7.27288091e+03]
E1 = -182.5900795750308  E_coul = 54.39317238273685
cycle= 2 E= -128.196907192294  delta_E= -0.00164  |g|= 0.0628  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102302
diis-c [-4.4266062e-04  2.7676131e-01  7.2323869e-01]
  HOMO = -0.785326272204738  LUMO = 2.62307427580025
  mo_energy =
[-3.27125799e+01 -1.89760822e+00 -7.85326272e-01 -7.85326272e-01
 -7.85326272e-01  2.62307428e+00  2.62307428e+00  2.62307428e+00
  2.64916363e+00  1.98221298e+01  1.98221298e+01  1.98221298e+01
  4.34260726e+01  3.18025642e+02  1.98372447e+03  7.27297000e+03]
E1 = -182.4570433361002  E_coul = 54.25982856612138
cycle= 3 E= -128.197214769979  delta_E= -0.000308  |g|= 0.000763  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00102629
diis-c [-6.00895825e-08 -3.59635253e-03  5.66133775e-04  1.00303022e+00]
  HOMO = -0.785592592247623  LUMO = 2.62286803917624
  mo_energy =
[-3.27133487e+01 -1.89793556e+00 -7.85592592e-01 -7.85592592e-01
 -7.85592592e-01  2.62286804e+00  2.62286804e+00  2.62286804e+00
  2.64891083e+00  1.98215318e+01  1.98215318e+01  1.98215318e+01
  4.34253613e+01  3.18025013e+02  1.98372396e+03  7.27296952e+03]
E1 = -182.45850890328413  E_coul = 54.26129409298143
cycle= 4 E= -128.197214810303  delta_E= -4.03e-08  |g|= 4.4e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.03797e-05
diis-c [-2.09756546e-10  4.55159725e-04 -1.05558678e-03 -1.59852737e-01
  1.16045316e+00]
  HOMO = -0.785579811017502  LUMO = 2.62287913306008
  mo_energy =
[-3.27133159e+01 -1.89793290e+00 -7.85579811e-01 -7.85579811e-01
 -7.85579811e-01  2.62287913e+00  2.62287913e+00  2.62287913e+00
  2.64891239e+00  1.98215573e+01  1.98215573e+01  1.98215573e+01
  4.34253878e+01  3.18025058e+02  1.98372402e+03  7.27296959e+03]
E1 = -182.45845408660662  E_coul = 54.2612392760846
cycle= 5 E= -128.197214810522  delta_E= -2.19e-10  |g|= 1.66e-06  |ddm|= 2.19e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45845408660662  E_coul = 54.2612392760846
  HOMO = -0.785579668399428  LUMO = 2.62287926956388
  mo_energy =
[-3.27133156e+01 -1.89793317e+00 -7.85579668e-01 -7.85579668e-01
 -7.85579668e-01  2.62287927e+00  2.62287927e+00  2.62287927e+00
  2.64891216e+00  1.98215575e+01  1.98215575e+01  1.98215575e+01
  4.34253879e+01  3.18025059e+02  1.98372402e+03  7.27296959e+03]
E1 = -182.45845372783316  E_coul = 54.261238917310735
Extra cycle  E= -128.197214810522  delta_E= -4.26e-13  |g|= 3.16e-07  |ddm|= 9.59e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.04452969102235
E1 = -182.45845372783316  E_coul = 54.261238917310735
init E= -128.197214810522
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785579675752018  LUMO = 2.62287926118295
  mo_energy =
[-3.27133157e+01 -1.89793325e+00 -7.85579676e-01 -7.85579676e-01
 -7.85579676e-01  2.62287926e+00  2.62287926e+00  2.62287926e+00
  2.64891208e+00  1.98215574e+01  1.98215574e+01  1.98215574e+01
  4.34253878e+01  3.18025059e+02  1.98372402e+03  7.27296959e+03]
E1 = -182.45845388479947  E_coul = 54.26123907427707
cycle= 1 E= -128.197214810522  delta_E= 5.68e-14  |g|= 5.86e-08  |ddm|= 1.85e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45845388479947  E_coul = 54.26123907427707
  HOMO = -0.785579661765912  LUMO = 2.62287927354309
  mo_energy =
[-3.27133156e+01 -1.89793325e+00 -7.85579662e-01 -7.85579662e-01
 -7.85579662e-01  2.62287927e+00  2.62287927e+00  2.62287927e+00
  2.64891208e+00  1.98215574e+01  1.98215574e+01  1.98215574e+01
  4.34253879e+01  3.18025059e+02  1.98372402e+03  7.27296959e+03]
E1 = -182.45845382565668  E_coul = 54.26123901513423
Extra cycle  E= -128.197214810522  delta_E= -5.68e-14  |g|= 1.36e-08  |ddm|= 3e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419793e+03 2.15726898e+02 1.42942181e+03 5.65159672e-01
 4.80411980e+01 1.29519168e+01 1.89405980e+00 2.77669127e+00
 1.33319545e+01 6.00377355e-01]
grad_E = [-7.75353701e-06 -2.01562900e-04  4.44816194e-05 -1.49843436e-05
 -1.29975434e-04 -1.52259300e-05  6.37193272e-05 -4.07700532e-04
  5.73401831e-05  4.49243116e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19818945        1
[INPUT] 0    0    [1    /1   ]  215.734796142        1
[INPUT] 0    0    [1    /1   ]  1429.42031623        1
[INPUT] 0    0    [1    /1   ]  0.56548374916        1
[INPUT] 0    0    [1    /1   ]  48.0388208596        1
[INPUT] 0    0    [1    /1   ]  12.9520436207        1
[INPUT] 0    0    [1    /1   ]  1.89554737103        1
[INPUT] 1    0    [1    /1   ]  2.77601822343        1
[INPUT] 1    0    [1    /1   ]  13.3320148686        1
[INPUT] 1    0    [1    /1   ]  0.600247837135       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.198189445163, 1.0]], [0, [215.7347961416451, 1.0]], [0, [1429.4203162291085, 1.0]], [0, [0.5654837491604177, 1.0]], [0, [48.03882085955551, 1.0]], [0, [12.952043620734342, 1.0]], [0, [1.8955473710261166, 1.0]], [1, [2.7760182234280184, 1.0]], [1, [13.332014868570939, 1.0]], [1, [0.6002478371349543, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19818945]
bas 1, expnt(s) = [215.73479614]
bas 2, expnt(s) = [1429.42031623]
bas 3, expnt(s) = [0.56548375]
bas 4, expnt(s) = [48.03882086]
bas 5, expnt(s) = [12.95204362]
bas 6, expnt(s) = [1.89554737]
bas 7, expnt(s) = [2.77601822]
bas 8, expnt(s) = [13.33201487]
bas 9, expnt(s) = [0.60024784]
CPU time:        49.95
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419819e+03 7.96092840e+02 2.15734796e+02 1.42218199e+02
 1.42942032e+03 5.87333790e+02 5.65483749e-01 1.64751782e+00
 4.80388209e+01 4.61008867e+01 1.29520436e+01 1.72491917e+01
 1.89554737e+00 4.08146434e+00 2.77601822e+00 1.04535135e+01
 1.33320149e+01 7.43197310e+01 6.00247837e-01 1.54133715e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965896406539677
cond(S) = 156.05326162952727
E1 = -183.1365928510923  E_coul = 55.010959616072356
init E= -128.12563323502
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742903068890074  LUMO = 2.65599535928512
  mo_energy =
[-3.25129845e+01 -1.85396770e+00 -7.42903069e-01 -7.42903069e-01
 -7.42903069e-01  2.65599536e+00  2.65599536e+00  2.65599536e+00
  2.68469522e+00  1.99548116e+01  1.99548116e+01  1.99548116e+01
  4.36008345e+01  3.18261283e+02  1.98401975e+03  7.27329122e+03]
E1 = -182.12504859660277  E_coul = 53.92978665465702
cycle= 1 E= -128.195261941946  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262565
diis-c [-0.0689403  1.       ]
  HOMO = -0.80827190218751  LUMO = 2.60151741374757
  mo_energy =
[-3.27878812e+01 -1.92140485e+00 -8.08271902e-01 -8.08271902e-01
 -8.08271902e-01  2.60151741e+00  2.60151741e+00  2.60151741e+00
  2.63218947e+00  1.97631412e+01  1.97631412e+01  1.97631412e+01
  4.33667286e+01  3.17950102e+02  1.98365704e+03  7.27290295e+03]
E1 = -182.58972960830022  E_coul = 54.39282199074326
cycle= 2 E= -128.196907617557  delta_E= -0.00165  |g|= 0.0628  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102362
diis-c [-4.42787570e-04  2.76808057e-01  7.23191943e-01]
  HOMO = -0.785356631237273  LUMO = 2.62225874926323
  mo_energy =
[-3.27126840e+01 -1.89763728e+00 -7.85356631e-01 -7.85356631e-01
 -7.85356631e-01  2.62225875e+00  2.62225875e+00  2.62225875e+00
  2.65204006e+00  1.98196335e+01  1.98196335e+01  1.98196335e+01
  4.34327099e+01  3.18032097e+02  1.98374467e+03  7.27299209e+03]
E1 = -182.45661490294773  E_coul = 54.25939933347859
cycle= 3 E= -128.197215569469  delta_E= -0.000308  |g|= 0.000761  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0010223
diis-c [-6.09659033e-08 -3.60568885e-03  4.92002648e-04  1.00311369e+00]
  HOMO = -0.785621990297045  LUMO = 2.62205346603752
  mo_energy =
[-3.27134500e+01 -1.89796408e+00 -7.85621990e-01 -7.85621990e-01
 -7.85621990e-01  2.62205347e+00  2.62205347e+00  2.62205347e+00
  2.65178753e+00  1.98190377e+01  1.98190377e+01  1.98190377e+01
  4.34320009e+01  3.18031472e+02  1.98374417e+03  7.27299162e+03]
E1 = -182.45807570828725  E_coul = 54.26086009866187
cycle= 4 E= -128.197215609625  delta_E= -4.02e-08  |g|= 4.43e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.0882e-05
diis-c [-2.11347564e-10  4.56196443e-04 -1.05127725e-03 -1.60090772e-01
  1.16068585e+00]
  HOMO = -0.785609126184318  LUMO = 2.62206462828187
  mo_energy =
[-3.27134170e+01 -1.89796141e+00 -7.85609126e-01 -7.85609126e-01
 -7.85609126e-01  2.62206463e+00  2.62206463e+00  2.62206463e+00
  2.65178908e+00  1.98190634e+01  1.98190634e+01  1.98190634e+01
  4.34320275e+01  3.18031517e+02  1.98374423e+03  7.27299168e+03]
E1 = -182.45802051006729  E_coul = 54.260804900219235
cycle= 5 E= -128.197215609848  delta_E= -2.23e-10  |g|= 1.66e-06  |ddm|= 2.2e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45802051006729  E_coul = 54.260804900219235
  HOMO = -0.785608984812435  LUMO = 2.62206476373581
  mo_energy =
[-3.27134167e+01 -1.89796169e+00 -7.85608985e-01 -7.85608985e-01
 -7.85608985e-01  2.62206476e+00  2.62206476e+00  2.62206476e+00
  2.65178884e+00  1.98190636e+01  1.98190636e+01  1.98190636e+01
  4.34320277e+01  3.18031517e+02  1.98374423e+03  7.27299168e+03]
E1 = -182.45802015621888  E_coul = 54.26080454637045
Extra cycle  E= -128.197215609848  delta_E= -3.69e-13  |g|= 3.16e-07  |ddm|= 9.61e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14419819e+03 2.15734796e+02 1.42942032e+03 5.65483749e-01
 4.80388209e+01 1.29520436e+01 1.89554737e+00 2.77601822e+00
 1.33320149e+01 6.00247837e-01]
E = -128.19721560984843
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19818945        1
[INPUT] 0    0    [1    /1   ]  215.734796142        1
[INPUT] 0    0    [1    /1   ]  1429.42031623        1
[INPUT] 0    0    [1    /1   ]  0.56548374916        1
[INPUT] 0    0    [1    /1   ]  48.0388208596        1
[INPUT] 0    0    [1    /1   ]  12.9520436207        1
[INPUT] 0    0    [1    /1   ]  1.89554737103        1
[INPUT] 1    0    [1    /1   ]  2.77601822343        1
[INPUT] 1    0    [1    /1   ]  13.3320148686        1
[INPUT] 1    0    [1    /1   ]  0.600247837135       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.198189445163, 1.0]], [0, [215.7347961416451, 1.0]], [0, [1429.4203162291085, 1.0]], [0, [0.5654837491604177, 1.0]], [0, [48.03882085955551, 1.0]], [0, [12.952043620734342, 1.0]], [0, [1.8955473710261166, 1.0]], [1, [2.7760182234280184, 1.0]], [1, [13.332014868570939, 1.0]], [1, [0.6002478371349543, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19818945]
bas 1, expnt(s) = [215.73479614]
bas 2, expnt(s) = [1429.42031623]
bas 3, expnt(s) = [0.56548375]
bas 4, expnt(s) = [48.03882086]
bas 5, expnt(s) = [12.95204362]
bas 6, expnt(s) = [1.89554737]
bas 7, expnt(s) = [2.77601822]
bas 8, expnt(s) = [13.33201487]
bas 9, expnt(s) = [0.60024784]
CPU time:        50.37
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419819e+03 7.96092840e+02 2.15734796e+02 1.42218199e+02
 1.42942032e+03 5.87333790e+02 5.65483749e-01 1.64751782e+00
 4.80388209e+01 4.61008867e+01 1.29520436e+01 1.72491917e+01
 1.89554737e+00 4.08146434e+00 2.77601822e+00 1.04535135e+01
 1.33320149e+01 7.43197310e+01 6.00247837e-01 1.54133715e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965896406539677
cond(S) = 156.05326162952727
E1 = -183.1365928510923  E_coul = 55.010959616072356
init E= -128.12563323502
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742903068890074  LUMO = 2.65599535928512
  mo_energy =
[-3.25129845e+01 -1.85396770e+00 -7.42903069e-01 -7.42903069e-01
 -7.42903069e-01  2.65599536e+00  2.65599536e+00  2.65599536e+00
  2.68469522e+00  1.99548116e+01  1.99548116e+01  1.99548116e+01
  4.36008345e+01  3.18261283e+02  1.98401975e+03  7.27329122e+03]
E1 = -182.12504859660277  E_coul = 53.92978665465702
cycle= 1 E= -128.195261941946  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.181
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262565
diis-c [-0.0689403  1.       ]
  HOMO = -0.80827190218751  LUMO = 2.60151741374757
  mo_energy =
[-3.27878812e+01 -1.92140485e+00 -8.08271902e-01 -8.08271902e-01
 -8.08271902e-01  2.60151741e+00  2.60151741e+00  2.60151741e+00
  2.63218947e+00  1.97631412e+01  1.97631412e+01  1.97631412e+01
  4.33667286e+01  3.17950102e+02  1.98365704e+03  7.27290295e+03]
E1 = -182.58972960830022  E_coul = 54.39282199074326
cycle= 2 E= -128.196907617557  delta_E= -0.00165  |g|= 0.0628  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102362
diis-c [-4.42787570e-04  2.76808057e-01  7.23191943e-01]
  HOMO = -0.785356631237273  LUMO = 2.62225874926323
  mo_energy =
[-3.27126840e+01 -1.89763728e+00 -7.85356631e-01 -7.85356631e-01
 -7.85356631e-01  2.62225875e+00  2.62225875e+00  2.62225875e+00
  2.65204006e+00  1.98196335e+01  1.98196335e+01  1.98196335e+01
  4.34327099e+01  3.18032097e+02  1.98374467e+03  7.27299209e+03]
E1 = -182.45661490294773  E_coul = 54.25939933347859
cycle= 3 E= -128.197215569469  delta_E= -0.000308  |g|= 0.000761  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0010223
diis-c [-6.09659033e-08 -3.60568885e-03  4.92002648e-04  1.00311369e+00]
  HOMO = -0.785621990297045  LUMO = 2.62205346603752
  mo_energy =
[-3.27134500e+01 -1.89796408e+00 -7.85621990e-01 -7.85621990e-01
 -7.85621990e-01  2.62205347e+00  2.62205347e+00  2.62205347e+00
  2.65178753e+00  1.98190377e+01  1.98190377e+01  1.98190377e+01
  4.34320009e+01  3.18031472e+02  1.98374417e+03  7.27299162e+03]
E1 = -182.45807570828725  E_coul = 54.26086009866187
cycle= 4 E= -128.197215609625  delta_E= -4.02e-08  |g|= 4.43e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.0882e-05
diis-c [-2.11347564e-10  4.56196443e-04 -1.05127725e-03 -1.60090772e-01
  1.16068585e+00]
  HOMO = -0.785609126184318  LUMO = 2.62206462828187
  mo_energy =
[-3.27134170e+01 -1.89796141e+00 -7.85609126e-01 -7.85609126e-01
 -7.85609126e-01  2.62206463e+00  2.62206463e+00  2.62206463e+00
  2.65178908e+00  1.98190634e+01  1.98190634e+01  1.98190634e+01
  4.34320275e+01  3.18031517e+02  1.98374423e+03  7.27299168e+03]
E1 = -182.45802051006729  E_coul = 54.260804900219235
cycle= 5 E= -128.197215609848  delta_E= -2.23e-10  |g|= 1.66e-06  |ddm|= 2.2e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45802051006729  E_coul = 54.260804900219235
  HOMO = -0.785608984812435  LUMO = 2.62206476373581
  mo_energy =
[-3.27134167e+01 -1.89796169e+00 -7.85608985e-01 -7.85608985e-01
 -7.85608985e-01  2.62206476e+00  2.62206476e+00  2.62206476e+00
  2.65178884e+00  1.98190636e+01  1.98190636e+01  1.98190636e+01
  4.34320277e+01  3.18031517e+02  1.98374423e+03  7.27299168e+03]
E1 = -182.45802015621888  E_coul = 54.26080454637045
Extra cycle  E= -128.197215609848  delta_E= -3.69e-13  |g|= 3.16e-07  |ddm|= 9.61e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.05326162952727
E1 = -182.45802015621888  E_coul = 54.26080454637045
init E= -128.197215609848
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785608991813852  LUMO = 2.62206475567047
  mo_energy =
[-3.27134168e+01 -1.89796177e+00 -7.85608992e-01 -7.85608992e-01
 -7.85608992e-01  2.62206476e+00  2.62206476e+00  2.62206476e+00
  2.65178877e+00  1.98190635e+01  1.98190635e+01  1.98190635e+01
  4.34320276e+01  3.18031517e+02  1.98374423e+03  7.27299168e+03]
E1 = -182.4580203109683  E_coul = 54.260804701119895
cycle= 1 E= -128.197215609848  delta_E= 2.84e-14  |g|= 5.86e-08  |ddm|= 1.85e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4580203109683  E_coul = 54.260804701119895
  HOMO = -0.785608977976632  LUMO = 2.62206476789231
  mo_energy =
[-3.27134167e+01 -1.89796177e+00 -7.85608978e-01 -7.85608978e-01
 -7.85608978e-01  2.62206477e+00  2.62206477e+00  2.62206477e+00
  2.65178877e+00  1.98190635e+01  1.98190635e+01  1.98190635e+01
  4.34320276e+01  3.18031517e+02  1.98374423e+03  7.27299168e+03]
E1 = -182.45802025265726  E_coul = 54.260804642808786
Extra cycle  E= -128.197215609848  delta_E= -8.53e-14  |g|= 1.36e-08  |ddm|= 3e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419819e+03 2.15734796e+02 1.42942032e+03 5.65483749e-01
 4.80388209e+01 1.29520436e+01 1.89554737e+00 2.77601822e+00
 1.33320149e+01 6.00247837e-01]
grad_E = [-7.75780832e-06 -1.99981484e-04  4.44589781e-05 -3.75547196e-05
 -1.42178819e-04  9.15723147e-07  1.50406941e-04 -7.50954541e-04
  1.02764407e-04  1.59641522e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19883827        1
[INPUT] 0    0    [1    /1   ]  215.754364746        1
[INPUT] 0    0    [1    /1   ]  1429.41652681        1
[INPUT] 0    0    [1    /1   ]  0.565996202599       1
[INPUT] 0    0    [1    /1   ]  48.0355252849        1
[INPUT] 0    0    [1    /1   ]  12.9522380941        1
[INPUT] 0    0    [1    /1   ]  1.89791003104        1
[INPUT] 1    0    [1    /1   ]  2.7749695613         1
[INPUT] 1    0    [1    /1   ]  13.3320751269        1
[INPUT] 1    0    [1    /1   ]  0.600047016052       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1988382668123, 1.0]], [0, [215.75436474599093, 1.0]], [0, [1429.4165268054467, 1.0]], [0, [0.5659962025994135, 1.0]], [0, [48.035525284881864, 1.0]], [0, [12.95223809409404, 1.0]], [0, [1.8979100310396302, 1.0]], [1, [2.774969561299305, 1.0]], [1, [13.332075126853526, 1.0]], [1, [0.6000470160519142, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19883827]
bas 1, expnt(s) = [215.75436475]
bas 2, expnt(s) = [1429.41652681]
bas 3, expnt(s) = [0.5659962]
bas 4, expnt(s) = [48.03552528]
bas 5, expnt(s) = [12.95223809]
bas 6, expnt(s) = [1.89791003]
bas 7, expnt(s) = [2.77496956]
bas 8, expnt(s) = [13.33207513]
bas 9, expnt(s) = [0.60004702]
CPU time:        52.51
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419884e+03 7.96093021e+02 2.15754365e+02 1.42227874e+02
 1.42941653e+03 5.87332622e+02 5.65996203e-01 1.64863746e+00
 4.80355253e+01 4.60985147e+01 1.29522381e+01 1.72493859e+01
 1.89791003e+00 4.08527917e+00 2.77496956e+00 1.04485776e+01
 1.33320751e+01 7.43201509e+01 6.00047016e-01 1.54069259e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965928468251047
cond(S) = 156.06881099450206
E1 = -183.13660992277536  E_coul = 55.01096455963528
init E= -128.12564536314
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742907227267095  LUMO = 2.6547536938869
  mo_energy =
[-3.25129955e+01 -1.85394623e+00 -7.42907227e-01 -7.42907227e-01
 -7.42907227e-01  2.65475369e+00  2.65475369e+00  2.65475369e+00
  2.68938185e+00  1.99509946e+01  1.99509946e+01  1.99509946e+01
  4.36117119e+01  3.18279046e+02  1.98407419e+03  7.27335029e+03]
E1 = -182.12408720589337  E_coul = 53.92882650000736
cycle= 1 E= -128.195260705886  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262712
diis-c [-0.06901783  1.        ]
  HOMO = -0.808337068015974  LUMO = 2.60024251033551
  mo_energy =
[-3.27881029e+01 -1.92146944e+00 -8.08337068e-01 -8.08337068e-01
 -8.08337068e-01  2.60024251e+00  2.60024251e+00  2.60024251e+00
  2.63671081e+00  1.97591749e+01  1.97591749e+01  1.97591749e+01
  4.33774164e+01  3.17967629e+02  1.98371123e+03  7.27296176e+03]
E1 = -182.58919067412293  E_coul = 54.39228159447342
cycle= 2 E= -128.19690907965  delta_E= -0.00165  |g|= 0.0629  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102454
diis-c [-4.42938189e-04  2.76881364e-01  7.23118636e-01]
  HOMO = -0.785403280997715  LUMO = 2.62099259851594
  mo_energy =
[-3.27128463e+01 -1.89768151e+00 -7.85403281e-01 -7.85403281e-01
 -7.85403281e-01  2.62099260e+00  2.62099260e+00  2.62099260e+00
  2.65660378e+00  1.98157130e+01  1.98157130e+01  1.98157130e+01
  4.34434489e+01  3.18049690e+02  1.98379894e+03  7.27305098e+03]
E1 = -182.4559552389737  E_coul = 54.258737629552094
cycle= 3 E= -128.197217609422  delta_E= -0.000309  |g|= 0.000759  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00101599
diis-c [-6.23349542e-08 -3.62054781e-03  3.74642418e-04  1.00324591e+00]
  HOMO = -0.785667113832961  LUMO = 2.62078882589189
  mo_energy =
[-3.27136080e+01 -1.89800743e+00 -7.85667114e-01 -7.85667114e-01
 -7.85667114e-01  2.62078883e+00  2.62078883e+00  2.62078883e+00
  2.65635167e+00  1.98151206e+01  1.98151206e+01  1.98151206e+01
  4.34427435e+01  3.18049070e+02  1.98379844e+03  7.27305051e+03]
E1 = -182.4574084327053  E_coul = 54.26019078339535
cycle= 4 E= -128.19721764931  delta_E= -3.99e-08  |g|= 4.48e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.16572e-05
diis-c [-2.13807816e-10  4.57791127e-04 -1.04413547e-03 -1.60442970e-01
  1.16102931e+00]
  HOMO = -0.7856541221725  LUMO = 2.6208000931161
  mo_energy =
[-3.27135746e+01 -1.89800476e+00 -7.85654122e-01 -7.85654122e-01
 -7.85654122e-01  2.62080009e+00  2.62080009e+00  2.62080009e+00
  2.65635322e+00  1.98151465e+01  1.98151465e+01  1.98151465e+01
  4.34427704e+01  3.18049116e+02  1.98379850e+03  7.27305058e+03]
E1 = -182.45735264466185  E_coul = 54.26013499512385
cycle= 5 E= -128.197217649538  delta_E= -2.28e-10  |g|= 1.67e-06  |ddm|= 2.23e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45735264466185  E_coul = 54.26013499512385
  HOMO = -0.785653982708403  LUMO = 2.62080022697127
  mo_energy =
[-3.27135743e+01 -1.89800504e+00 -7.85653983e-01 -7.85653983e-01
 -7.85653983e-01  2.62080023e+00  2.62080023e+00  2.62080023e+00
  2.65635298e+00  1.98151467e+01  1.98151467e+01  1.98151467e+01
  4.34427705e+01  3.18049117e+02  1.98379850e+03  7.27305058e+03]
E1 = -182.45735229822765  E_coul = 54.260134648689274
Extra cycle  E= -128.197217649538  delta_E= -3.69e-13  |g|= 3.17e-07  |ddm|= 9.65e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [2.14419884e+03 2.15754365e+02 1.42941653e+03 5.65996203e-01
 4.80355253e+01 1.29522381e+01 1.89791003e+00 2.77496956e+00
 1.33320751e+01 6.00047016e-01]
E = -128.19721764953837
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.19883827        1
[INPUT] 0    0    [1    /1   ]  215.754364746        1
[INPUT] 0    0    [1    /1   ]  1429.41652681        1
[INPUT] 0    0    [1    /1   ]  0.565996202599       1
[INPUT] 0    0    [1    /1   ]  48.0355252849        1
[INPUT] 0    0    [1    /1   ]  12.9522380941        1
[INPUT] 0    0    [1    /1   ]  1.89791003104        1
[INPUT] 1    0    [1    /1   ]  2.7749695613         1
[INPUT] 1    0    [1    /1   ]  13.3320751269        1
[INPUT] 1    0    [1    /1   ]  0.600047016052       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.1988382668123, 1.0]], [0, [215.75436474599093, 1.0]], [0, [1429.4165268054467, 1.0]], [0, [0.5659962025994135, 1.0]], [0, [48.035525284881864, 1.0]], [0, [12.95223809409404, 1.0]], [0, [1.8979100310396302, 1.0]], [1, [2.774969561299305, 1.0]], [1, [13.332075126853526, 1.0]], [1, [0.6000470160519142, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.19883827]
bas 1, expnt(s) = [215.75436475]
bas 2, expnt(s) = [1429.41652681]
bas 3, expnt(s) = [0.5659962]
bas 4, expnt(s) = [48.03552528]
bas 5, expnt(s) = [12.95223809]
bas 6, expnt(s) = [1.89791003]
bas 7, expnt(s) = [2.77496956]
bas 8, expnt(s) = [13.33207513]
bas 9, expnt(s) = [0.60004702]
CPU time:        52.93
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14419884e+03 7.96093021e+02 2.15754365e+02 1.42227874e+02
 1.42941653e+03 5.87332622e+02 5.65996203e-01 1.64863746e+00
 4.80355253e+01 4.60985147e+01 1.29522381e+01 1.72493859e+01
 1.89791003e+00 4.08527917e+00 2.77496956e+00 1.04485776e+01
 1.33320751e+01 7.43201509e+01 6.00047016e-01 1.54069259e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965928468251047
cond(S) = 156.06881099450206
E1 = -183.13660992277536  E_coul = 55.01096455963528
init E= -128.12564536314
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742907227267095  LUMO = 2.6547536938869
  mo_energy =
[-3.25129955e+01 -1.85394623e+00 -7.42907227e-01 -7.42907227e-01
 -7.42907227e-01  2.65475369e+00  2.65475369e+00  2.65475369e+00
  2.68938185e+00  1.99509946e+01  1.99509946e+01  1.99509946e+01
  4.36117119e+01  3.18279046e+02  1.98407419e+03  7.27335029e+03]
E1 = -182.12408720589337  E_coul = 53.92882650000736
cycle= 1 E= -128.195260705886  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262712
diis-c [-0.06901783  1.        ]
  HOMO = -0.808337068015974  LUMO = 2.60024251033551
  mo_energy =
[-3.27881029e+01 -1.92146944e+00 -8.08337068e-01 -8.08337068e-01
 -8.08337068e-01  2.60024251e+00  2.60024251e+00  2.60024251e+00
  2.63671081e+00  1.97591749e+01  1.97591749e+01  1.97591749e+01
  4.33774164e+01  3.17967629e+02  1.98371123e+03  7.27296176e+03]
E1 = -182.58919067412293  E_coul = 54.39228159447342
cycle= 2 E= -128.19690907965  delta_E= -0.00165  |g|= 0.0629  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102454
diis-c [-4.42938189e-04  2.76881364e-01  7.23118636e-01]
  HOMO = -0.785403280997715  LUMO = 2.62099259851594
  mo_energy =
[-3.27128463e+01 -1.89768151e+00 -7.85403281e-01 -7.85403281e-01
 -7.85403281e-01  2.62099260e+00  2.62099260e+00  2.62099260e+00
  2.65660378e+00  1.98157130e+01  1.98157130e+01  1.98157130e+01
  4.34434489e+01  3.18049690e+02  1.98379894e+03  7.27305098e+03]
E1 = -182.4559552389737  E_coul = 54.258737629552094
cycle= 3 E= -128.197217609422  delta_E= -0.000309  |g|= 0.000759  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00101599
diis-c [-6.23349542e-08 -3.62054781e-03  3.74642418e-04  1.00324591e+00]
  HOMO = -0.785667113832961  LUMO = 2.62078882589189
  mo_energy =
[-3.27136080e+01 -1.89800743e+00 -7.85667114e-01 -7.85667114e-01
 -7.85667114e-01  2.62078883e+00  2.62078883e+00  2.62078883e+00
  2.65635167e+00  1.98151206e+01  1.98151206e+01  1.98151206e+01
  4.34427435e+01  3.18049070e+02  1.98379844e+03  7.27305051e+03]
E1 = -182.4574084327053  E_coul = 54.26019078339535
cycle= 4 E= -128.19721764931  delta_E= -3.99e-08  |g|= 4.48e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.16572e-05
diis-c [-2.13807816e-10  4.57791127e-04 -1.04413547e-03 -1.60442970e-01
  1.16102931e+00]
  HOMO = -0.7856541221725  LUMO = 2.6208000931161
  mo_energy =
[-3.27135746e+01 -1.89800476e+00 -7.85654122e-01 -7.85654122e-01
 -7.85654122e-01  2.62080009e+00  2.62080009e+00  2.62080009e+00
  2.65635322e+00  1.98151465e+01  1.98151465e+01  1.98151465e+01
  4.34427704e+01  3.18049116e+02  1.98379850e+03  7.27305058e+03]
E1 = -182.45735264466185  E_coul = 54.26013499512385
cycle= 5 E= -128.197217649538  delta_E= -2.28e-10  |g|= 1.67e-06  |ddm|= 2.23e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45735264466185  E_coul = 54.26013499512385
  HOMO = -0.785653982708403  LUMO = 2.62080022697127
  mo_energy =
[-3.27135743e+01 -1.89800504e+00 -7.85653983e-01 -7.85653983e-01
 -7.85653983e-01  2.62080023e+00  2.62080023e+00  2.62080023e+00
  2.65635298e+00  1.98151467e+01  1.98151467e+01  1.98151467e+01
  4.34427705e+01  3.18049117e+02  1.98379850e+03  7.27305058e+03]
E1 = -182.45735229822765  E_coul = 54.260134648689274
Extra cycle  E= -128.197217649538  delta_E= -3.69e-13  |g|= 3.17e-07  |ddm|= 9.65e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.06881099450206
E1 = -182.45735229822765  E_coul = 54.260134648689274
init E= -128.197217649538
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785653989181089  LUMO = 2.62080021938081
  mo_energy =
[-3.27135744e+01 -1.89800513e+00 -7.85653989e-01 -7.85653989e-01
 -7.85653989e-01  2.62080022e+00  2.62080022e+00  2.62080022e+00
  2.65635290e+00  1.98151467e+01  1.98151467e+01  1.98151467e+01
  4.34427705e+01  3.18049117e+02  1.98379850e+03  7.27305058e+03]
E1 = -182.45735244961688  E_coul = 54.26013480007869
cycle= 1 E= -128.197217649538  delta_E= 1.99e-13  |g|= 5.87e-08  |ddm|= 1.85e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45735244961688  E_coul = 54.26013480007869
  HOMO = -0.785653975569543  LUMO = 2.62080023139297
  mo_energy =
[-3.27135744e+01 -1.89800513e+00 -7.85653976e-01 -7.85653976e-01
 -7.85653976e-01  2.62080023e+00  2.62080023e+00  2.62080023e+00
  2.65635290e+00  1.98151467e+01  1.98151467e+01  1.98151467e+01
  4.34427705e+01  3.18049117e+02  1.98379850e+03  7.27305058e+03]
E1 = -182.45735239256496  E_coul = 54.26013474302663
Extra cycle  E= -128.197217649538  delta_E= -1.42e-13  |g|= 1.35e-08  |ddm|= 3.01e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14419884e+03 2.15754365e+02 1.42941653e+03 5.65996203e-01
 4.80355253e+01 1.29522381e+01 1.89791003e+00 2.77496956e+00
 1.33320751e+01 6.00047016e-01]
grad_E = [-7.76648917e-06 -1.97138838e-04  4.44137921e-05 -7.55040014e-05
 -1.62477444e-04  2.57757743e-05  2.88023502e-04 -1.28617800e-03
  1.73246432e-04  3.46790931e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.20051115        1
[INPUT] 0    0    [1    /1   ]  215.80372511         1
[INPUT] 0    0    [1    /1   ]  1429.40678349        1
[INPUT] 0    0    [1    /1   ]  0.566839690387       1
[INPUT] 0    0    [1    /1   ]  48.0328057823        1
[INPUT] 0    0    [1    /1   ]  12.9529262869        1
[INPUT] 0    0    [1    /1   ]  1.90179747268        1
[INPUT] 1    0    [1    /1   ]  2.77328291066        1
[INPUT] 1    0    [1    /1   ]  13.3320853026        1
[INPUT] 1    0    [1    /1   ]  0.599725150624       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.2005111513004, 1.0]], [0, [215.80372510951793, 1.0]], [0, [1429.4067834913928, 1.0]], [0, [0.5668396903866318, 1.0]], [0, [48.03280578231272, 1.0]], [0, [12.95292628688228, 1.0]], [0, [1.9017974726776805, 1.0]], [1, [2.773282910660151, 1.0]], [1, [13.332085302641083, 1.0]], [1, [0.5997251506240017, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.20051115]
bas 1, expnt(s) = [215.80372511]
bas 2, expnt(s) = [1429.40678349]
bas 3, expnt(s) = [0.56683969]
bas 4, expnt(s) = [48.03280578]
bas 5, expnt(s) = [12.95292629]
bas 6, expnt(s) = [1.90179747]
bas 7, expnt(s) = [2.77328291]
bas 8, expnt(s) = [13.3320853]
bas 9, expnt(s) = [0.59972515]
CPU time:        55.06
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14420051e+03 7.96093487e+02 2.15803725e+02 1.42252277e+02
 1.42940678e+03 5.87329620e+02 5.66839690e-01 1.65047980e+00
 4.80328058e+01 4.60965573e+01 1.29529263e+01 1.72500733e+01
 1.90179747e+00 4.09155340e+00 2.77328291e+00 1.04406398e+01
 1.33320853e+01 7.43202218e+01 5.99725151e-01 1.53965962e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965979267553681
cond(S) = 156.09962223978556
E1 = -183.13663743047167  E_coul = 55.01097215334531
init E= -128.125665277126
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742913727139929  LUMO = 2.65276212890957
  mo_energy =
[-3.25130157e+01 -1.85391078e+00 -7.42913727e-01 -7.42913727e-01
 -7.42913727e-01  2.65276213e+00  2.65276213e+00  2.65276213e+00
  2.69710684e+00  1.99447679e+01  1.99447679e+01  1.99447679e+01
  4.36318218e+01  3.18332091e+02  1.98422456e+03  7.27351190e+03]
E1 = -182.12256117469846  E_coul = 53.92730035491514
cycle= 1 E= -128.195260819783  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262945
diis-c [-0.06914003  1.        ]
  HOMO = -0.808440281548869  LUMO = 2.59819886673306
  mo_energy =
[-3.27884583e+01 -1.92157129e+00 -8.08440282e-01 -8.08440282e-01
 -8.08440282e-01  2.59819887e+00  2.59819887e+00  2.59819887e+00
  2.64416713e+00  1.97527117e+01  1.97527117e+01  1.97527117e+01
  4.33972212e+01  3.18020298e+02  1.98386119e+03  7.27312296e+03]
E1 = -182.58833631317208  E_coul = 54.391422818454046
cycle= 2 E= -128.196913494718  delta_E= -0.00165  |g|= 0.063  |ddm|= 0.0646
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1026
diis-c [-4.43100316e-04  2.77000218e-01  7.22999782e-01]
  HOMO = -0.785477169320824  LUMO = 2.6189626161403
  mo_energy =
[-3.27131075e+01 -1.89775104e+00 -7.85477169e-01 -7.85477169e-01
 -7.85477169e-01  2.61896262e+00  2.61896262e+00  2.61896262e+00
  2.66412899e+00  1.98093222e+01  1.98093222e+01  1.98093222e+01
  4.34633357e+01  3.18102464e+02  1.98394901e+03  7.27321230e+03]
E1 = -182.45490945698242  E_coul = 54.257686512057546
cycle= 3 E= -128.197222944925  delta_E= -0.000309  |g|= 0.000755  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00100566
diis-c [-6.45757492e-08 -3.64510338e-03  1.82071503e-04  1.00346303e+00]
  HOMO = -0.785738490598561  LUMO = 2.6187613212516
  mo_energy =
[-3.27138619e+01 -1.89807550e+00 -7.85738491e-01 -7.85738491e-01
 -7.85738491e-01  2.61876132e+00  2.61876132e+00  2.61876132e+00
  2.66387759e+00  1.98087355e+01  1.98087355e+01  1.98087355e+01
  4.34626364e+01  3.18101853e+02  1.98394852e+03  7.27321185e+03]
E1 = -182.4563500536426  E_coul = 54.25912706926707
cycle= 4 E= -128.197222984376  delta_E= -3.95e-08  |g|= 4.56e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.29057e-05
diis-c [-2.17752024e-10  4.60344445e-04 -1.03200547e-03 -1.60988844e-01
  1.16156050e+00]
  HOMO = -0.785725294330952  LUMO = 2.61877275653154
  mo_energy =
[-3.27138280e+01 -1.89807283e+00 -7.85725294e-01 -7.85725294e-01
 -7.85725294e-01  2.61877276e+00  2.61877276e+00  2.61877276e+00
  2.66387913e+00  1.98087619e+01  1.98087619e+01  1.98087619e+01
  4.34626637e+01  3.18101900e+02  1.98394859e+03  7.27321191e+03]
E1 = -182.45629331457178  E_coul = 54.25907032995996
cycle= 5 E= -128.197222984612  delta_E= -2.36e-10  |g|= 1.68e-06  |ddm|= 2.27e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45629331457178  E_coul = 54.25907032995996
  HOMO = -0.78572515796287  LUMO = 2.61877288780393
  mo_energy =
[-3.27138277e+01 -1.89807311e+00 -7.85725158e-01 -7.85725158e-01
 -7.85725158e-01  2.61877289e+00  2.61877289e+00  2.61877289e+00
  2.66387889e+00  1.98087620e+01  1.98087620e+01  1.98087620e+01
  4.34626638e+01  3.18101900e+02  1.98394859e+03  7.27321191e+03]
E1 = -182.4562929799798  E_coul = 54.25906999536754
Extra cycle  E= -128.197222984612  delta_E= -4.55e-13  |g|= 3.18e-07  |ddm|= 9.7e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14420051e+03 2.15803725e+02 1.42940678e+03 5.66839690e-01
 4.80328058e+01 1.29529263e+01 1.90179747e+00 2.77328291e+00
 1.33320853e+01 5.99725151e-01]
E = -128.19722298461227
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.20051115        1
[INPUT] 0    0    [1    /1   ]  215.80372511         1
[INPUT] 0    0    [1    /1   ]  1429.40678349        1
[INPUT] 0    0    [1    /1   ]  0.566839690387       1
[INPUT] 0    0    [1    /1   ]  48.0328057823        1
[INPUT] 0    0    [1    /1   ]  12.9529262869        1
[INPUT] 0    0    [1    /1   ]  1.90179747268        1
[INPUT] 1    0    [1    /1   ]  2.77328291066        1
[INPUT] 1    0    [1    /1   ]  13.3320853026        1
[INPUT] 1    0    [1    /1   ]  0.599725150624       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.2005111513004, 1.0]], [0, [215.80372510951793, 1.0]], [0, [1429.4067834913928, 1.0]], [0, [0.5668396903866318, 1.0]], [0, [48.03280578231272, 1.0]], [0, [12.95292628688228, 1.0]], [0, [1.9017974726776805, 1.0]], [1, [2.773282910660151, 1.0]], [1, [13.332085302641083, 1.0]], [1, [0.5997251506240017, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.20051115]
bas 1, expnt(s) = [215.80372511]
bas 2, expnt(s) = [1429.40678349]
bas 3, expnt(s) = [0.56683969]
bas 4, expnt(s) = [48.03280578]
bas 5, expnt(s) = [12.95292629]
bas 6, expnt(s) = [1.90179747]
bas 7, expnt(s) = [2.77328291]
bas 8, expnt(s) = [13.3320853]
bas 9, expnt(s) = [0.59972515]
CPU time:        55.50
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14420051e+03 7.96093487e+02 2.15803725e+02 1.42252277e+02
 1.42940678e+03 5.87329620e+02 5.66839690e-01 1.65047980e+00
 4.80328058e+01 4.60965573e+01 1.29529263e+01 1.72500733e+01
 1.90179747e+00 4.09155340e+00 2.77328291e+00 1.04406398e+01
 1.33320853e+01 7.43202218e+01 5.99725151e-01 1.53965962e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965979267553681
cond(S) = 156.09962223978556
E1 = -183.13663743047167  E_coul = 55.01097215334531
init E= -128.125665277126
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742913727139929  LUMO = 2.65276212890957
  mo_energy =
[-3.25130157e+01 -1.85391078e+00 -7.42913727e-01 -7.42913727e-01
 -7.42913727e-01  2.65276213e+00  2.65276213e+00  2.65276213e+00
  2.69710684e+00  1.99447679e+01  1.99447679e+01  1.99447679e+01
  4.36318218e+01  3.18332091e+02  1.98422456e+03  7.27351190e+03]
E1 = -182.12256117469846  E_coul = 53.92730035491514
cycle= 1 E= -128.195260819783  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262945
diis-c [-0.06914003  1.        ]
  HOMO = -0.808440281548869  LUMO = 2.59819886673306
  mo_energy =
[-3.27884583e+01 -1.92157129e+00 -8.08440282e-01 -8.08440282e-01
 -8.08440282e-01  2.59819887e+00  2.59819887e+00  2.59819887e+00
  2.64416713e+00  1.97527117e+01  1.97527117e+01  1.97527117e+01
  4.33972212e+01  3.18020298e+02  1.98386119e+03  7.27312296e+03]
E1 = -182.58833631317208  E_coul = 54.391422818454046
cycle= 2 E= -128.196913494718  delta_E= -0.00165  |g|= 0.063  |ddm|= 0.0646
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1026
diis-c [-4.43100316e-04  2.77000218e-01  7.22999782e-01]
  HOMO = -0.785477169320824  LUMO = 2.6189626161403
  mo_energy =
[-3.27131075e+01 -1.89775104e+00 -7.85477169e-01 -7.85477169e-01
 -7.85477169e-01  2.61896262e+00  2.61896262e+00  2.61896262e+00
  2.66412899e+00  1.98093222e+01  1.98093222e+01  1.98093222e+01
  4.34633357e+01  3.18102464e+02  1.98394901e+03  7.27321230e+03]
E1 = -182.45490945698242  E_coul = 54.257686512057546
cycle= 3 E= -128.197222944925  delta_E= -0.000309  |g|= 0.000755  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00100566
diis-c [-6.45757492e-08 -3.64510338e-03  1.82071503e-04  1.00346303e+00]
  HOMO = -0.785738490598561  LUMO = 2.6187613212516
  mo_energy =
[-3.27138619e+01 -1.89807550e+00 -7.85738491e-01 -7.85738491e-01
 -7.85738491e-01  2.61876132e+00  2.61876132e+00  2.61876132e+00
  2.66387759e+00  1.98087355e+01  1.98087355e+01  1.98087355e+01
  4.34626364e+01  3.18101853e+02  1.98394852e+03  7.27321185e+03]
E1 = -182.4563500536426  E_coul = 54.25912706926707
cycle= 4 E= -128.197222984376  delta_E= -3.95e-08  |g|= 4.56e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.29057e-05
diis-c [-2.17752024e-10  4.60344445e-04 -1.03200547e-03 -1.60988844e-01
  1.16156050e+00]
  HOMO = -0.785725294330952  LUMO = 2.61877275653154
  mo_energy =
[-3.27138280e+01 -1.89807283e+00 -7.85725294e-01 -7.85725294e-01
 -7.85725294e-01  2.61877276e+00  2.61877276e+00  2.61877276e+00
  2.66387913e+00  1.98087619e+01  1.98087619e+01  1.98087619e+01
  4.34626637e+01  3.18101900e+02  1.98394859e+03  7.27321191e+03]
E1 = -182.45629331457178  E_coul = 54.25907032995996
cycle= 5 E= -128.197222984612  delta_E= -2.36e-10  |g|= 1.68e-06  |ddm|= 2.27e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45629331457178  E_coul = 54.25907032995996
  HOMO = -0.78572515796287  LUMO = 2.61877288780393
  mo_energy =
[-3.27138277e+01 -1.89807311e+00 -7.85725158e-01 -7.85725158e-01
 -7.85725158e-01  2.61877289e+00  2.61877289e+00  2.61877289e+00
  2.66387889e+00  1.98087620e+01  1.98087620e+01  1.98087620e+01
  4.34626638e+01  3.18101900e+02  1.98394859e+03  7.27321191e+03]
E1 = -182.4562929799798  E_coul = 54.25906999536754
Extra cycle  E= -128.197222984612  delta_E= -4.55e-13  |g|= 3.18e-07  |ddm|= 9.7e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.09962223978556
E1 = -182.4562929799798  E_coul = 54.25906999536754
init E= -128.197222984612
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785725163594509  LUMO = 2.61877288096831
  mo_energy =
[-3.27138278e+01 -1.89807320e+00 -7.85725164e-01 -7.85725164e-01
 -7.85725164e-01  2.61877288e+00  2.61877288e+00  2.61877288e+00
  2.66387881e+00  1.98087620e+01  1.98087620e+01  1.98087620e+01
  4.34626638e+01  3.18101900e+02  1.98394859e+03  7.27321191e+03]
E1 = -182.45629312597788  E_coul = 54.25907014136573
cycle= 1 E= -128.197222984612  delta_E= 1.14e-13  |g|= 5.87e-08  |ddm|= 1.86e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45629312597788  E_coul = 54.25907014136573
  HOMO = -0.785725150345754  LUMO = 2.61877289264375
  mo_energy =
[-3.27138278e+01 -1.89807320e+00 -7.85725150e-01 -7.85725150e-01
 -7.85725150e-01  2.61877289e+00  2.61877289e+00  2.61877289e+00
  2.66387881e+00  1.98087620e+01  1.98087620e+01  1.98087620e+01
  4.34626638e+01  3.18101900e+02  1.98394859e+03  7.27321191e+03]
E1 = -182.45629307094225  E_coul = 54.25907008633007
Extra cycle  E= -128.197222984612  delta_E= -2.84e-14  |g|= 1.33e-08  |ddm|= 3.03e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14420051e+03 2.15803725e+02 1.42940678e+03 5.66839690e-01
 4.80328058e+01 1.29529263e+01 1.90179747e+00 2.77328291e+00
 1.33320853e+01 5.99725151e-01]
grad_E = [-7.78463674e-06 -1.92054672e-04  4.43213464e-05 -1.38139863e-04
 -1.95790352e-04  6.54192346e-05  5.10430217e-04 -2.14449224e-03
  2.85710516e-04  6.52822275e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.20478647        1
[INPUT] 0    0    [1    /1   ]  215.927891876        1
[INPUT] 0    0    [1    /1   ]  1429.38193213        1
[INPUT] 0    0    [1    /1   ]  0.568231767075       1
[INPUT] 0    0    [1    /1   ]  48.0362625421        1
[INPUT] 0    0    [1    /1   ]  12.9552729735        1
[INPUT] 0    0    [1    /1   ]  1.90819013481        1
[INPUT] 1    0    [1    /1   ]  2.77059954036        1
[INPUT] 1    0    [1    /1   ]  13.3318782632        1
[INPUT] 1    0    [1    /1   ]  0.599215016001       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.204786470287, 1.0]], [0, [215.9278918757144, 1.0]], [0, [1429.3819321311225, 1.0]], [0, [0.5682317670746097, 1.0]], [0, [48.03626254212812, 1.0]], [0, [12.955272973472225, 1.0]], [0, [1.9081901348123056, 1.0]], [1, [2.770599540364747, 1.0]], [1, [13.331878263152293, 1.0]], [1, [0.5992150160006214, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.20478647]
bas 1, expnt(s) = [215.92789188]
bas 2, expnt(s) = [1429.38193213]
bas 3, expnt(s) = [0.56823177]
bas 4, expnt(s) = [48.03626254]
bas 5, expnt(s) = [12.95527297]
bas 6, expnt(s) = [1.90819013]
bas 7, expnt(s) = [2.77059954]
bas 8, expnt(s) = [13.33187826]
bas 9, expnt(s) = [0.59921502]
CPU time:        57.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14420479e+03 7.96094677e+02 2.15927892e+02 1.42313658e+02
 1.42938193e+03 5.87321961e+02 5.68231767e-01 1.65351887e+00
 4.80362625e+01 4.60990453e+01 1.29552730e+01 1.72524171e+01
 1.90819013e+00 4.10186402e+00 2.77059954e+00 1.04280136e+01
 1.33318783e+01 7.43187791e+01 5.99215016e-01 1.53802273e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966058206088848
cond(S) = 156.1642315298665
E1 = -183.1366780508685  E_coul = 55.010982744521684
init E= -128.125695306347
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742923682505214  LUMO = 2.64960445864038
  mo_energy =
[-3.25130545e+01 -1.85385215e+00 -7.42923683e-01 -7.42923683e-01
 -7.42923683e-01  2.64960446e+00  2.64960446e+00  2.64960446e+00
  2.70986757e+00  1.99346338e+01  1.99346338e+01  1.99346338e+01
  4.36717521e+01  3.18483449e+02  1.98462907e+03  7.27394378e+03]
E1 = -182.12018124288673  E_coul = 53.924914832839676
cycle= 1 E= -128.195266410047  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.263303
diis-c [-0.06932857  1.        ]
  HOMO = -0.808600833557826  LUMO = 2.59496157073287
  mo_energy =
[-3.27890204e+01 -1.92172887e+00 -8.08600834e-01 -8.08600834e-01
 -8.08600834e-01  2.59496157e+00  2.59496157e+00  2.59496157e+00
  2.65649289e+00  1.97422098e+01  1.97422098e+01  1.97422098e+01
  4.34366635e+01  3.18171063e+02  1.98426508e+03  7.27355422e+03]
E1 = -182.5870068162536  E_coul = 54.39008097735485
cycle= 2 E= -128.196925838899  delta_E= -0.00166  |g|= 0.0631  |ddm|= 0.0648
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102829
diis-c [-4.43182256e-04  2.77191478e-01  7.22808522e-01]
  HOMO = -0.785592129116329  LUMO = 2.61574608081602
  mo_energy =
[-3.27135228e+01 -1.89785819e+00 -7.85592129e-01 -7.85592129e-01
 -7.85592129e-01  2.61574608e+00  2.61574608e+00  2.61574608e+00
  2.67656621e+00  1.97989328e+01  1.97989328e+01  1.97989328e+01
  4.35029081e+01  3.18253395e+02  1.98435308e+03  7.27364374e+03]
E1 = -182.45328178882582  E_coul = 54.25604505590969
cycle= 3 E= -128.197236732916  delta_E= -0.000311  |g|= 0.000749  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000988824
diis-c [-6.82624308e-08 -3.68577563e-03 -1.33394830e-04  1.00381917e+00]
  HOMO = -0.785849322827565  LUMO = 2.61554883808069
  mo_energy =
[-3.27142653e+01 -1.89818022e+00 -7.85849323e-01 -7.85849323e-01
 -7.85849323e-01  2.61554884e+00  2.61554884e+00  2.61554884e+00
  2.67631602e+00  1.97983555e+01  1.97983555e+01  1.97983555e+01
  4.35022189e+01  3.18252799e+02  1.98435261e+03  7.27364331e+03]
E1 = -182.4547015394349  E_coul = 54.25746476777421
cycle= 4 E= -128.197236771661  delta_E= -3.87e-08  |g|= 4.69e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.49107e-05
diis-c [-2.24012210e-10  4.64406662e-04 -1.01139665e-03 -1.61824373e-01
  1.16237136e+00]
  HOMO = -0.785835800001066  LUMO = 2.61556054084116
  mo_energy =
[-3.27142306e+01 -1.89817755e+00 -7.85835800e-01 -7.85835800e-01
 -7.85835800e-01  2.61556054e+00  2.61556054e+00  2.61556054e+00
  2.67631755e+00  1.97983824e+01  1.97983824e+01  1.97983824e+01
  4.35022468e+01  3.18252847e+02  1.98435268e+03  7.27364338e+03]
E1 = -182.4546432711591  E_coul = 54.25740649924815
cycle= 5 E= -128.197236771911  delta_E= -2.5e-10  |g|= 1.69e-06  |ddm|= 2.34e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4546432711591  E_coul = 54.25740649924815
  HOMO = -0.785835668712548  LUMO = 2.61556066789802
  mo_energy =
[-3.27142303e+01 -1.89817784e+00 -7.85835669e-01 -7.85835669e-01
 -7.85835669e-01  2.61556067e+00  2.61556067e+00  2.61556067e+00
  2.67631730e+00  1.97983826e+01  1.97983826e+01  1.97983826e+01
  4.35022469e+01  3.18252847e+02  1.98435268e+03  7.27364338e+03]
E1 = -182.45464295562076  E_coul = 54.257406183709556
Extra cycle  E= -128.197236771911  delta_E= -2.27e-13  |g|= 3.2e-07  |ddm|= 9.79e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14420479e+03 2.15927892e+02 1.42938193e+03 5.68231767e-01
 4.80362625e+01 1.29552730e+01 1.90819013e+00 2.77059954e+00
 1.33318783e+01 5.99215016e-01]
E = -128.1972367719112
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.20478647        1
[INPUT] 0    0    [1    /1   ]  215.927891876        1
[INPUT] 0    0    [1    /1   ]  1429.38193213        1
[INPUT] 0    0    [1    /1   ]  0.568231767075       1
[INPUT] 0    0    [1    /1   ]  48.0362625421        1
[INPUT] 0    0    [1    /1   ]  12.9552729735        1
[INPUT] 0    0    [1    /1   ]  1.90819013481        1
[INPUT] 1    0    [1    /1   ]  2.77059954036        1
[INPUT] 1    0    [1    /1   ]  13.3318782632        1
[INPUT] 1    0    [1    /1   ]  0.599215016001       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.204786470287, 1.0]], [0, [215.9278918757144, 1.0]], [0, [1429.3819321311225, 1.0]], [0, [0.5682317670746097, 1.0]], [0, [48.03626254212812, 1.0]], [0, [12.955272973472225, 1.0]], [0, [1.9081901348123056, 1.0]], [1, [2.770599540364747, 1.0]], [1, [13.331878263152293, 1.0]], [1, [0.5992150160006214, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.20478647]
bas 1, expnt(s) = [215.92789188]
bas 2, expnt(s) = [1429.38193213]
bas 3, expnt(s) = [0.56823177]
bas 4, expnt(s) = [48.03626254]
bas 5, expnt(s) = [12.95527297]
bas 6, expnt(s) = [1.90819013]
bas 7, expnt(s) = [2.77059954]
bas 8, expnt(s) = [13.33187826]
bas 9, expnt(s) = [0.59921502]
CPU time:        58.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14420479e+03 7.96094677e+02 2.15927892e+02 1.42313658e+02
 1.42938193e+03 5.87321961e+02 5.68231767e-01 1.65351887e+00
 4.80362625e+01 4.60990453e+01 1.29552730e+01 1.72524171e+01
 1.90819013e+00 4.10186402e+00 2.77059954e+00 1.04280136e+01
 1.33318783e+01 7.43187791e+01 5.99215016e-01 1.53802273e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966058206088848
cond(S) = 156.1642315298665
E1 = -183.1366780508685  E_coul = 55.010982744521684
init E= -128.125695306347
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742923682505214  LUMO = 2.64960445864038
  mo_energy =
[-3.25130545e+01 -1.85385215e+00 -7.42923683e-01 -7.42923683e-01
 -7.42923683e-01  2.64960446e+00  2.64960446e+00  2.64960446e+00
  2.70986757e+00  1.99346338e+01  1.99346338e+01  1.99346338e+01
  4.36717521e+01  3.18483449e+02  1.98462907e+03  7.27394378e+03]
E1 = -182.12018124288673  E_coul = 53.924914832839676
cycle= 1 E= -128.195266410047  delta_E= -0.0696  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.263303
diis-c [-0.06932857  1.        ]
  HOMO = -0.808600833557826  LUMO = 2.59496157073287
  mo_energy =
[-3.27890204e+01 -1.92172887e+00 -8.08600834e-01 -8.08600834e-01
 -8.08600834e-01  2.59496157e+00  2.59496157e+00  2.59496157e+00
  2.65649289e+00  1.97422098e+01  1.97422098e+01  1.97422098e+01
  4.34366635e+01  3.18171063e+02  1.98426508e+03  7.27355422e+03]
E1 = -182.5870068162536  E_coul = 54.39008097735485
cycle= 2 E= -128.196925838899  delta_E= -0.00166  |g|= 0.0631  |ddm|= 0.0648
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102829
diis-c [-4.43182256e-04  2.77191478e-01  7.22808522e-01]
  HOMO = -0.785592129116329  LUMO = 2.61574608081602
  mo_energy =
[-3.27135228e+01 -1.89785819e+00 -7.85592129e-01 -7.85592129e-01
 -7.85592129e-01  2.61574608e+00  2.61574608e+00  2.61574608e+00
  2.67656621e+00  1.97989328e+01  1.97989328e+01  1.97989328e+01
  4.35029081e+01  3.18253395e+02  1.98435308e+03  7.27364374e+03]
E1 = -182.45328178882582  E_coul = 54.25604505590969
cycle= 3 E= -128.197236732916  delta_E= -0.000311  |g|= 0.000749  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000988824
diis-c [-6.82624308e-08 -3.68577563e-03 -1.33394830e-04  1.00381917e+00]
  HOMO = -0.785849322827565  LUMO = 2.61554883808069
  mo_energy =
[-3.27142653e+01 -1.89818022e+00 -7.85849323e-01 -7.85849323e-01
 -7.85849323e-01  2.61554884e+00  2.61554884e+00  2.61554884e+00
  2.67631602e+00  1.97983555e+01  1.97983555e+01  1.97983555e+01
  4.35022189e+01  3.18252799e+02  1.98435261e+03  7.27364331e+03]
E1 = -182.4547015394349  E_coul = 54.25746476777421
cycle= 4 E= -128.197236771661  delta_E= -3.87e-08  |g|= 4.69e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.49107e-05
diis-c [-2.24012210e-10  4.64406662e-04 -1.01139665e-03 -1.61824373e-01
  1.16237136e+00]
  HOMO = -0.785835800001066  LUMO = 2.61556054084116
  mo_energy =
[-3.27142306e+01 -1.89817755e+00 -7.85835800e-01 -7.85835800e-01
 -7.85835800e-01  2.61556054e+00  2.61556054e+00  2.61556054e+00
  2.67631755e+00  1.97983824e+01  1.97983824e+01  1.97983824e+01
  4.35022468e+01  3.18252847e+02  1.98435268e+03  7.27364338e+03]
E1 = -182.4546432711591  E_coul = 54.25740649924815
cycle= 5 E= -128.197236771911  delta_E= -2.5e-10  |g|= 1.69e-06  |ddm|= 2.34e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4546432711591  E_coul = 54.25740649924815
  HOMO = -0.785835668712548  LUMO = 2.61556066789802
  mo_energy =
[-3.27142303e+01 -1.89817784e+00 -7.85835669e-01 -7.85835669e-01
 -7.85835669e-01  2.61556067e+00  2.61556067e+00  2.61556067e+00
  2.67631730e+00  1.97983826e+01  1.97983826e+01  1.97983826e+01
  4.35022469e+01  3.18252847e+02  1.98435268e+03  7.27364338e+03]
E1 = -182.45464295562076  E_coul = 54.257406183709556
Extra cycle  E= -128.197236771911  delta_E= -2.27e-13  |g|= 3.2e-07  |ddm|= 9.79e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.1642315298665
E1 = -182.45464295562076  E_coul = 54.257406183709556
init E= -128.197236771911
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.78583567300266  LUMO = 2.6155606622653
  mo_energy =
[-3.27142304e+01 -1.89817792e+00 -7.85835673e-01 -7.85835673e-01
 -7.85835673e-01  2.61556066e+00  2.61556066e+00  2.61556066e+00
  2.67631722e+00  1.97983826e+01  1.97983826e+01  1.97983826e+01
  4.35022469e+01  3.18252847e+02  1.98435268e+03  7.27364338e+03]
E1 = -182.45464309290304  E_coul = 54.25740632099182
cycle= 1 E= -128.197236771911  delta_E=    0  |g|= 5.88e-08  |ddm|= 1.87e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45464309290304  E_coul = 54.25740632099182
  HOMO = -0.785835660342755  LUMO = 2.61556067339559
  mo_energy =
[-3.27142303e+01 -1.89817792e+00 -7.85835660e-01 -7.85835660e-01
 -7.85835660e-01  2.61556067e+00  2.61556067e+00  2.61556067e+00
  2.67631722e+00  1.97983826e+01  1.97983826e+01  1.97983826e+01
  4.35022469e+01  3.18252847e+02  1.98435268e+03  7.27364338e+03]
E1 = -182.45464304112247  E_coul = 54.257406269211224
Extra cycle  E= -128.197236771911  delta_E= -2.84e-14  |g|= 1.31e-08  |ddm|= 3.05e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14420479e+03 2.15927892e+02 1.42938193e+03 5.68231767e-01
 4.80362625e+01 1.29552730e+01 1.90819013e+00 2.77059954e+00
 1.33318783e+01 5.99215016e-01]
grad_E = [-7.82351003e-06 -1.82988614e-04  4.41275462e-05 -2.37622653e-04
 -2.48563260e-04  1.27879103e-04  8.62956267e-04 -3.50084055e-03
  4.62213637e-04  1.14075079e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.21563798        1
[INPUT] 0    0    [1    /1   ]  216.239693698        1
[INPUT] 0    0    [1    /1   ]  1429.31893854        1
[INPUT] 0    0    [1    /1   ]  0.570536354211       1
[INPUT] 0    0    [1    /1   ]  48.0626109033        1
[INPUT] 0    0    [1    /1   ]  12.9623859616        1
[INPUT] 0    0    [1    /1   ]  1.91870509492        1
[INPUT] 1    0    [1    /1   ]  2.76640925678        1
[INPUT] 1    0    [1    /1   ]  13.3309789785        1
[INPUT] 1    0    [1    /1   ]  0.598422709481       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.2156379825688, 1.0]], [0, [216.2396936975194, 1.0]], [0, [1429.3189385385988, 1.0]], [0, [0.5705363542111808, 1.0]], [0, [48.06261090332172, 1.0]], [0, [12.962385961649195, 1.0]], [0, [1.918705094917328, 1.0]], [1, [2.7664092567802157, 1.0]], [1, [13.330978978450757, 1.0]], [1, [0.5984227094805666, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.21563798]
bas 1, expnt(s) = [216.2396937]
bas 2, expnt(s) = [1429.31893854]
bas 3, expnt(s) = [0.57053635]
bas 4, expnt(s) = [48.0626109]
bas 5, expnt(s) = [12.96238596]
bas 6, expnt(s) = [1.91870509]
bas 7, expnt(s) = [2.76640926]
bas 8, expnt(s) = [13.33097898]
bas 9, expnt(s) = [0.59842271]
CPU time:        60.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14421564e+03 7.96097699e+02 2.16239694e+02 1.42467757e+02
 1.42931894e+03 5.87302548e+02 5.70536354e-01 1.65854598e+00
 4.80626109e+01 4.61180084e+01 1.29623860e+01 1.72595209e+01
 1.91870509e+00 4.11880466e+00 2.76640926e+00 1.04083031e+01
 1.33309790e+01 7.43125128e+01 5.98422709e-01 1.53548110e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966176669407778
cond(S) = 156.3060162307318
E1 = -183.13673072489317  E_coul = 55.01099552933306
init E= -128.12573519556
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742938355162776  LUMO = 2.64469882161864
  mo_energy =
[-3.25131320e+01 -1.85375464e+00 -7.42938355e-01 -7.42938355e-01
 -7.42938355e-01  2.64469882e+00  2.64469882e+00  2.64469882e+00
  2.73101905e+00  1.99182191e+01  1.99182191e+01  1.99182191e+01
  4.37555485e+01  3.18896029e+02  1.98569129e+03  7.27507317e+03]
E1 = -182.1165869439874  E_coul = 53.92129788391214
cycle= 1 E= -128.195289060075  delta_E= -0.0696  |g|= 0.167  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.263834
diis-c [-0.06960816  1.        ]
  HOMO = -0.808842415411747  LUMO = 2.58993971745252
  mo_energy =
[-3.27898896e+01 -1.92196358e+00 -8.08842415e-01 -8.08842415e-01
 -8.08842415e-01  2.58993972e+00  2.58993972e+00  2.58993972e+00
  2.67694533e+00  1.97252418e+01  1.97252418e+01  1.97252418e+01
  4.35196890e+01  3.18582735e+02  1.98532637e+03  7.27468272e+03]
E1 = -182.58500675568365  E_coul = 54.388047948029616
cycle= 2 E= -128.196958807654  delta_E= -0.00167  |g|= 0.0633  |ddm|= 0.065
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103178
diis-c [-4.42881212e-04  2.77495312e-01  7.22504688e-01]
  HOMO = -0.785765202137642  LUMO = 2.61075419904573
  mo_energy =
[-3.27141705e+01 -1.89801668e+00 -7.85765202e-01 -7.85765202e-01
 -7.85765202e-01  2.61075420e+00  2.61075420e+00  2.61075420e+00
  2.69719756e+00  1.97821338e+01  1.97821338e+01  1.97821338e+01
  4.35861368e+01  3.18665320e+02  1.98541465e+03  7.27477252e+03]
E1 = -182.45083218450407  E_coul = 54.25356028090545
cycle= 3 E= -128.197271903599  delta_E= -0.000313  |g|= 0.00074  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000961636
diis-c [-7.43419212e-08 -3.75339430e-03 -6.48735701e-04  1.00440213e+00]
  HOMO = -0.786015629264079  LUMO = 2.61056355066798
  mo_energy =
[-3.27148933e+01 -1.89833465e+00 -7.86015629e-01 -7.86015629e-01
 -7.86015629e-01  2.61056355e+00  2.61056355e+00  2.61056355e+00
  2.69694942e+00  1.97815719e+01  1.97815719e+01  1.97815719e+01
  4.35854640e+01  3.18664749e+02  1.98541421e+03  7.27477211e+03]
E1 = -182.45221742570448  E_coul = 54.25494548447768
cycle= 4 E= -128.197271941227  delta_E= -3.76e-08  |g|= 4.9e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.80967e-05
diis-c [-2.33722735e-10  4.70786494e-04 -9.76162391e-04 -1.63063567e-01
  1.16356894e+00]
  HOMO = -0.786001592707205  LUMO = 2.61057567244464
  mo_energy =
[-3.27148571e+01 -1.89833199e+00 -7.86001593e-01 -7.86001593e-01
 -7.86001593e-01  2.61057567e+00  2.61057567e+00  2.61057567e+00
  2.69695092e+00  1.97815999e+01  1.97815999e+01  1.97815999e+01
  4.35854931e+01  3.18664799e+02  1.98541427e+03  7.27477219e+03]
E1 = -182.45215672258618  E_coul = 54.25488478108633
cycle= 5 E= -128.1972719415  delta_E= -2.73e-10  |g|= 1.72e-06  |ddm|= 2.45e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45215672258618  E_coul = 54.25488478108633
  HOMO = -0.786001469828851  LUMO = 2.61057579257032
  mo_energy =
[-3.27148569e+01 -1.89833230e+00 -7.86001470e-01 -7.86001470e-01
 -7.86001470e-01  2.61057579e+00  2.61057579e+00  2.61057579e+00
  2.69695066e+00  1.97816000e+01  1.97816000e+01  1.97816000e+01
  4.35854932e+01  3.18664799e+02  1.98541427e+03  7.27477219e+03]
E1 = -182.4521564377711  E_coul = 54.25488449627082
Extra cycle  E= -128.1972719415  delta_E= -4.26e-13  |g|= 3.23e-07  |ddm|= 9.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14421564e+03 2.16239694e+02 1.42931894e+03 5.70536354e-01
 4.80626109e+01 1.29623860e+01 1.91870509e+00 2.76640926e+00
 1.33309790e+01 5.98422709e-01]
E = -128.19727194150028
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.21563798        1
[INPUT] 0    0    [1    /1   ]  216.239693698        1
[INPUT] 0    0    [1    /1   ]  1429.31893854        1
[INPUT] 0    0    [1    /1   ]  0.570536354211       1
[INPUT] 0    0    [1    /1   ]  48.0626109033        1
[INPUT] 0    0    [1    /1   ]  12.9623859616        1
[INPUT] 0    0    [1    /1   ]  1.91870509492        1
[INPUT] 1    0    [1    /1   ]  2.76640925678        1
[INPUT] 1    0    [1    /1   ]  13.3309789785        1
[INPUT] 1    0    [1    /1   ]  0.598422709481       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.2156379825688, 1.0]], [0, [216.2396936975194, 1.0]], [0, [1429.3189385385988, 1.0]], [0, [0.5705363542111808, 1.0]], [0, [48.06261090332172, 1.0]], [0, [12.962385961649195, 1.0]], [0, [1.918705094917328, 1.0]], [1, [2.7664092567802157, 1.0]], [1, [13.330978978450757, 1.0]], [1, [0.5984227094805666, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.21563798]
bas 1, expnt(s) = [216.2396937]
bas 2, expnt(s) = [1429.31893854]
bas 3, expnt(s) = [0.57053635]
bas 4, expnt(s) = [48.0626109]
bas 5, expnt(s) = [12.96238596]
bas 6, expnt(s) = [1.91870509]
bas 7, expnt(s) = [2.76640926]
bas 8, expnt(s) = [13.33097898]
bas 9, expnt(s) = [0.59842271]
CPU time:        60.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14421564e+03 7.96097699e+02 2.16239694e+02 1.42467757e+02
 1.42931894e+03 5.87302548e+02 5.70536354e-01 1.65854598e+00
 4.80626109e+01 4.61180084e+01 1.29623860e+01 1.72595209e+01
 1.91870509e+00 4.11880466e+00 2.76640926e+00 1.04083031e+01
 1.33309790e+01 7.43125128e+01 5.98422709e-01 1.53548110e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966176669407778
cond(S) = 156.3060162307318
E1 = -183.13673072489317  E_coul = 55.01099552933306
init E= -128.12573519556
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742938355162776  LUMO = 2.64469882161864
  mo_energy =
[-3.25131320e+01 -1.85375464e+00 -7.42938355e-01 -7.42938355e-01
 -7.42938355e-01  2.64469882e+00  2.64469882e+00  2.64469882e+00
  2.73101905e+00  1.99182191e+01  1.99182191e+01  1.99182191e+01
  4.37555485e+01  3.18896029e+02  1.98569129e+03  7.27507317e+03]
E1 = -182.1165869439874  E_coul = 53.92129788391214
cycle= 1 E= -128.195289060075  delta_E= -0.0696  |g|= 0.167  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.263834
diis-c [-0.06960816  1.        ]
  HOMO = -0.808842415411747  LUMO = 2.58993971745252
  mo_energy =
[-3.27898896e+01 -1.92196358e+00 -8.08842415e-01 -8.08842415e-01
 -8.08842415e-01  2.58993972e+00  2.58993972e+00  2.58993972e+00
  2.67694533e+00  1.97252418e+01  1.97252418e+01  1.97252418e+01
  4.35196890e+01  3.18582735e+02  1.98532637e+03  7.27468272e+03]
E1 = -182.58500675568365  E_coul = 54.388047948029616
cycle= 2 E= -128.196958807654  delta_E= -0.00167  |g|= 0.0633  |ddm|= 0.065
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103178
diis-c [-4.42881212e-04  2.77495312e-01  7.22504688e-01]
  HOMO = -0.785765202137642  LUMO = 2.61075419904573
  mo_energy =
[-3.27141705e+01 -1.89801668e+00 -7.85765202e-01 -7.85765202e-01
 -7.85765202e-01  2.61075420e+00  2.61075420e+00  2.61075420e+00
  2.69719756e+00  1.97821338e+01  1.97821338e+01  1.97821338e+01
  4.35861368e+01  3.18665320e+02  1.98541465e+03  7.27477252e+03]
E1 = -182.45083218450407  E_coul = 54.25356028090545
cycle= 3 E= -128.197271903599  delta_E= -0.000313  |g|= 0.00074  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000961636
diis-c [-7.43419212e-08 -3.75339430e-03 -6.48735701e-04  1.00440213e+00]
  HOMO = -0.786015629264079  LUMO = 2.61056355066798
  mo_energy =
[-3.27148933e+01 -1.89833465e+00 -7.86015629e-01 -7.86015629e-01
 -7.86015629e-01  2.61056355e+00  2.61056355e+00  2.61056355e+00
  2.69694942e+00  1.97815719e+01  1.97815719e+01  1.97815719e+01
  4.35854640e+01  3.18664749e+02  1.98541421e+03  7.27477211e+03]
E1 = -182.45221742570448  E_coul = 54.25494548447768
cycle= 4 E= -128.197271941227  delta_E= -3.76e-08  |g|= 4.9e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.80967e-05
diis-c [-2.33722735e-10  4.70786494e-04 -9.76162391e-04 -1.63063567e-01
  1.16356894e+00]
  HOMO = -0.786001592707205  LUMO = 2.61057567244464
  mo_energy =
[-3.27148571e+01 -1.89833199e+00 -7.86001593e-01 -7.86001593e-01
 -7.86001593e-01  2.61057567e+00  2.61057567e+00  2.61057567e+00
  2.69695092e+00  1.97815999e+01  1.97815999e+01  1.97815999e+01
  4.35854931e+01  3.18664799e+02  1.98541427e+03  7.27477219e+03]
E1 = -182.45215672258618  E_coul = 54.25488478108633
cycle= 5 E= -128.1972719415  delta_E= -2.73e-10  |g|= 1.72e-06  |ddm|= 2.45e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45215672258618  E_coul = 54.25488478108633
  HOMO = -0.786001469828851  LUMO = 2.61057579257032
  mo_energy =
[-3.27148569e+01 -1.89833230e+00 -7.86001470e-01 -7.86001470e-01
 -7.86001470e-01  2.61057579e+00  2.61057579e+00  2.61057579e+00
  2.69695066e+00  1.97816000e+01  1.97816000e+01  1.97816000e+01
  4.35854932e+01  3.18664799e+02  1.98541427e+03  7.27477219e+03]
E1 = -182.4521564377711  E_coul = 54.25488449627082
Extra cycle  E= -128.1972719415  delta_E= -4.26e-13  |g|= 3.23e-07  |ddm|= 9.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.3060162307318
E1 = -182.4521564377711  E_coul = 54.25488449627082
init E= -128.1972719415
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786001471988475  LUMO = 2.61057578884571
  mo_energy =
[-3.27148569e+01 -1.89833238e+00 -7.86001472e-01 -7.86001472e-01
 -7.86001472e-01  2.61057579e+00  2.61057579e+00  2.61057579e+00
  2.69695058e+00  1.97816000e+01  1.97816000e+01  1.97816000e+01
  4.35854931e+01  3.18664799e+02  1.98541427e+03  7.27477219e+03]
E1 = -182.4521565609192  E_coul = 54.254884619418796
cycle= 1 E= -128.1972719415  delta_E= -1.42e-13  |g|= 5.9e-08  |ddm|= 1.87e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4521565609192  E_coul = 54.254884619418796
  HOMO = -0.786001460289774  LUMO = 2.6105757990897
  mo_energy =
[-3.27148569e+01 -1.89833238e+00 -7.86001460e-01 -7.86001460e-01
 -7.86001460e-01  2.61057580e+00  2.61057580e+00  2.61057580e+00
  2.69695058e+00  1.97816000e+01  1.97816000e+01  1.97816000e+01
  4.35854931e+01  3.18664799e+02  1.98541427e+03  7.27477219e+03]
E1 = -182.45215651441308  E_coul = 54.254884572912715
Extra cycle  E= -128.1972719415  delta_E= 5.68e-14  |g|= 1.28e-08  |ddm|= 3.09e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14421564e+03 2.16239694e+02 1.42931894e+03 5.70536354e-01
 4.80626109e+01 1.29623860e+01 1.91870509e+00 2.76640926e+00
 1.33309790e+01 5.98422709e-01]
grad_E = [-7.90920719e-06 -1.66587945e-04  4.37079240e-05 -3.89158094e-04
 -3.28905263e-04  2.23866592e-04  1.40712925e-03 -5.59239361e-03
  7.31455297e-04  1.89633643e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.24229114        1
[INPUT] 0    0    [1    /1   ]  217.000107048        1
[INPUT] 0    0    [1    /1   ]  1429.16435113        1
[INPUT] 0    0    [1    /1   ]  0.574244980333       1
[INPUT] 0    0    [1    /1   ]  48.1556773391        1
[INPUT] 0    0    [1    /1   ]  12.9818311168        1
[INPUT] 0    0    [1    /1   ]  1.93546338472        1
[INPUT] 1    0    [1    /1   ]  2.76027849699        1
[INPUT] 1    0    [1    /1   ]  13.3281831624        1
[INPUT] 1    0    [1    /1   ]  0.597274088014       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.242291138774, 1.0]], [0, [217.00010704793144, 1.0]], [0, [1429.1643511343318, 1.0]], [0, [0.574244980333418, 1.0]], [0, [48.155677339068774, 1.0]], [0, [12.981831116840324, 1.0]], [0, [1.9354633847196239, 1.0]], [1, [2.760278496989568, 1.0]], [1, [13.328183162424192, 1.0]], [1, [0.597274088013501, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.24229114]
bas 1, expnt(s) = [217.00010705]
bas 2, expnt(s) = [1429.16435113]
bas 3, expnt(s) = [0.57424498]
bas 4, expnt(s) = [48.15567734]
bas 5, expnt(s) = [12.98183112]
bas 6, expnt(s) = [1.93546338]
bas 7, expnt(s) = [2.7602785]
bas 8, expnt(s) = [13.32818316]
bas 9, expnt(s) = [0.59727409]
CPU time:        63.04
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14424229e+03 7.96105121e+02 2.17000107e+02 1.42843336e+02
 1.42916435e+03 5.87254908e+02 5.74244980e-01 1.66662515e+00
 4.81556773e+01 4.61849679e+01 1.29818311e+01 1.72789358e+01
 1.93546338e+00 4.14575606e+00 2.76027850e+00 1.03794782e+01
 1.33281832e+01 7.42930320e+01 5.97274088e-01 1.53179795e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966337841136667
cond(S) = 156.61960963310833
E1 = -183.13677968706327  E_coul = 55.01100841371105
init E= -128.125771273352
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742957896982321  LUMO = 2.63758359580897
  mo_energy =
[-3.25132867e+01 -1.85359580e+00 -7.42957897e-01 -7.42957897e-01
 -7.42957897e-01  2.63758360e+00  2.63758360e+00  2.63758360e+00
  2.76514176e+00  1.98926877e+01  1.98926877e+01  1.98926877e+01
  4.39340980e+01  3.19956145e+02  1.98835750e+03  7.27790157e+03]
E1 = -182.11164303206178  E_coul = 53.91628547392786
cycle= 1 E= -128.195357558134  delta_E= -0.0696  |g|= 0.168  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.264537
diis-c [-0.06997983  1.        ]
  HOMO = -0.80917311288198  LUMO = 2.58267470832374
  mo_energy =
[-3.27911367e+01 -1.92227723e+00 -8.09173113e-01 -8.09173113e-01
 -8.09173113e-01  2.58267471e+00  2.58267471e+00  2.58267471e+00
  2.70999400e+00  1.96989553e+01  1.96989553e+01  1.96989553e+01
  4.36970865e+01  3.19641570e+02  1.98799137e+03  7.27750999e+03]
E1 = -182.5822776172627  E_coul = 54.38523581199744
cycle= 2 E= -128.197041805265  delta_E= -0.00168  |g|= 0.0636  |ddm|= 0.0654
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103663
diis-c [-4.41379325e-04  2.77952273e-01  7.22047727e-01]
  HOMO = -0.786002489832887  LUMO = 2.60352691834004
  mo_energy =
[-3.27151128e+01 -1.89822521e+00 -7.86002490e-01 -7.86002490e-01
 -7.86002490e-01  2.60352692e+00  2.60352692e+00  2.60352692e+00
  2.73052055e+00  1.97560774e+01  1.97560774e+01  1.97560774e+01
  4.37638321e+01  3.19724511e+02  1.98808003e+03  7.27760017e+03]
E1 = -182.44748606028517  E_coul = 54.250128075499035
cycle= 3 E= -128.197357984786  delta_E= -0.000316  |g|= 0.000725  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000919854
diis-c [-8.39955739e-08 -3.86258117e-03 -1.45861736e-03  1.00532120e+00]
  HOMO = -0.786242246820343  LUMO = 2.60334655571166
  mo_energy =
[-3.27158042e+01 -1.89853662e+00 -7.86242247e-01 -7.86242247e-01
 -7.86242247e-01  2.60334656e+00  2.60334656e+00  2.60334656e+00
  2.73027578e+00  1.97555398e+01  1.97555398e+01  1.97555398e+01
  4.37631855e+01  3.19723980e+02  1.98807964e+03  7.27759982e+03]
E1 = -182.4488160971924  E_coul = 54.25145807643404
cycle= 4 E= -128.197358020758  delta_E= -3.6e-08  |g|= 5.21e-05  |ddm|= 0.000269
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.28896e-05
diis-c [-2.47566268e-10  4.80324504e-04 -9.17498741e-04 -1.64756300e-01
  1.16519347e+00]
  HOMO = -0.786227450334889  LUMO = 2.60335929323117
  mo_energy =
[-3.27157660e+01 -1.89853399e+00 -7.86227450e-01 -7.86227450e-01
 -7.86227450e-01  2.60335929e+00  2.60335929e+00  2.60335929e+00
  2.73027723e+00  1.97555693e+01  1.97555693e+01  1.97555693e+01
  4.37632162e+01  3.19724033e+02  1.98807970e+03  7.27759989e+03]
E1 = -182.44875171858817  E_coul = 54.25139369752042
cycle= 5 E= -128.197358021068  delta_E= -3.09e-10  |g|= 1.75e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44875171858817  E_coul = 54.25139369752042
  HOMO = -0.786227341113132  LUMO = 2.60335940220701
  mo_energy =
[-3.27157658e+01 -1.89853431e+00 -7.86227341e-01 -7.86227341e-01
 -7.86227341e-01  2.60335940e+00  2.60335940e+00  2.60335940e+00
  2.73027695e+00  1.97555695e+01  1.97555695e+01  1.97555695e+01
  4.37632163e+01  3.19724033e+02  1.98807970e+03  7.27759990e+03]
E1 = -182.44875148199657  E_coul = 54.25139346092835
Extra cycle  E= -128.197358021068  delta_E= -4.83e-13  |g|= 3.25e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14424229e+03 2.17000107e+02 1.42916435e+03 5.74244980e-01
 4.81556773e+01 1.29818311e+01 1.93546338e+00 2.76027850e+00
 1.33281832e+01 5.97274088e-01]
E = -128.19735802106823
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.24229114        1
[INPUT] 0    0    [1    /1   ]  217.000107048        1
[INPUT] 0    0    [1    /1   ]  1429.16435113        1
[INPUT] 0    0    [1    /1   ]  0.574244980333       1
[INPUT] 0    0    [1    /1   ]  48.1556773391        1
[INPUT] 0    0    [1    /1   ]  12.9818311168        1
[INPUT] 0    0    [1    /1   ]  1.93546338472        1
[INPUT] 1    0    [1    /1   ]  2.76027849699        1
[INPUT] 1    0    [1    /1   ]  13.3281831624        1
[INPUT] 1    0    [1    /1   ]  0.597274088014       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.242291138774, 1.0]], [0, [217.00010704793144, 1.0]], [0, [1429.1643511343318, 1.0]], [0, [0.574244980333418, 1.0]], [0, [48.155677339068774, 1.0]], [0, [12.981831116840324, 1.0]], [0, [1.9354633847196239, 1.0]], [1, [2.760278496989568, 1.0]], [1, [13.328183162424192, 1.0]], [1, [0.597274088013501, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.24229114]
bas 1, expnt(s) = [217.00010705]
bas 2, expnt(s) = [1429.16435113]
bas 3, expnt(s) = [0.57424498]
bas 4, expnt(s) = [48.15567734]
bas 5, expnt(s) = [12.98183112]
bas 6, expnt(s) = [1.93546338]
bas 7, expnt(s) = [2.7602785]
bas 8, expnt(s) = [13.32818316]
bas 9, expnt(s) = [0.59727409]
CPU time:        63.55
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14424229e+03 7.96105121e+02 2.17000107e+02 1.42843336e+02
 1.42916435e+03 5.87254908e+02 5.74244980e-01 1.66662515e+00
 4.81556773e+01 4.61849679e+01 1.29818311e+01 1.72789358e+01
 1.93546338e+00 4.14575606e+00 2.76027850e+00 1.03794782e+01
 1.33281832e+01 7.42930320e+01 5.97274088e-01 1.53179795e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966337841136667
cond(S) = 156.61960963310833
E1 = -183.13677968706327  E_coul = 55.01100841371105
init E= -128.125771273352
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742957896982321  LUMO = 2.63758359580897
  mo_energy =
[-3.25132867e+01 -1.85359580e+00 -7.42957897e-01 -7.42957897e-01
 -7.42957897e-01  2.63758360e+00  2.63758360e+00  2.63758360e+00
  2.76514176e+00  1.98926877e+01  1.98926877e+01  1.98926877e+01
  4.39340980e+01  3.19956145e+02  1.98835750e+03  7.27790157e+03]
E1 = -182.11164303206178  E_coul = 53.91628547392786
cycle= 1 E= -128.195357558134  delta_E= -0.0696  |g|= 0.168  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.264537
diis-c [-0.06997983  1.        ]
  HOMO = -0.80917311288198  LUMO = 2.58267470832374
  mo_energy =
[-3.27911367e+01 -1.92227723e+00 -8.09173113e-01 -8.09173113e-01
 -8.09173113e-01  2.58267471e+00  2.58267471e+00  2.58267471e+00
  2.70999400e+00  1.96989553e+01  1.96989553e+01  1.96989553e+01
  4.36970865e+01  3.19641570e+02  1.98799137e+03  7.27750999e+03]
E1 = -182.5822776172627  E_coul = 54.38523581199744
cycle= 2 E= -128.197041805265  delta_E= -0.00168  |g|= 0.0636  |ddm|= 0.0654
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103663
diis-c [-4.41379325e-04  2.77952273e-01  7.22047727e-01]
  HOMO = -0.786002489832887  LUMO = 2.60352691834004
  mo_energy =
[-3.27151128e+01 -1.89822521e+00 -7.86002490e-01 -7.86002490e-01
 -7.86002490e-01  2.60352692e+00  2.60352692e+00  2.60352692e+00
  2.73052055e+00  1.97560774e+01  1.97560774e+01  1.97560774e+01
  4.37638321e+01  3.19724511e+02  1.98808003e+03  7.27760017e+03]
E1 = -182.44748606028517  E_coul = 54.250128075499035
cycle= 3 E= -128.197357984786  delta_E= -0.000316  |g|= 0.000725  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000919854
diis-c [-8.39955739e-08 -3.86258117e-03 -1.45861736e-03  1.00532120e+00]
  HOMO = -0.786242246820343  LUMO = 2.60334655571166
  mo_energy =
[-3.27158042e+01 -1.89853662e+00 -7.86242247e-01 -7.86242247e-01
 -7.86242247e-01  2.60334656e+00  2.60334656e+00  2.60334656e+00
  2.73027578e+00  1.97555398e+01  1.97555398e+01  1.97555398e+01
  4.37631855e+01  3.19723980e+02  1.98807964e+03  7.27759982e+03]
E1 = -182.4488160971924  E_coul = 54.25145807643404
cycle= 4 E= -128.197358020758  delta_E= -3.6e-08  |g|= 5.21e-05  |ddm|= 0.000269
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.28896e-05
diis-c [-2.47566268e-10  4.80324504e-04 -9.17498741e-04 -1.64756300e-01
  1.16519347e+00]
  HOMO = -0.786227450334889  LUMO = 2.60335929323117
  mo_energy =
[-3.27157660e+01 -1.89853399e+00 -7.86227450e-01 -7.86227450e-01
 -7.86227450e-01  2.60335929e+00  2.60335929e+00  2.60335929e+00
  2.73027723e+00  1.97555693e+01  1.97555693e+01  1.97555693e+01
  4.37632162e+01  3.19724033e+02  1.98807970e+03  7.27759989e+03]
E1 = -182.44875171858817  E_coul = 54.25139369752042
cycle= 5 E= -128.197358021068  delta_E= -3.09e-10  |g|= 1.75e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44875171858817  E_coul = 54.25139369752042
  HOMO = -0.786227341113132  LUMO = 2.60335940220701
  mo_energy =
[-3.27157658e+01 -1.89853431e+00 -7.86227341e-01 -7.86227341e-01
 -7.86227341e-01  2.60335940e+00  2.60335940e+00  2.60335940e+00
  2.73027695e+00  1.97555695e+01  1.97555695e+01  1.97555695e+01
  4.37632163e+01  3.19724033e+02  1.98807970e+03  7.27759990e+03]
E1 = -182.44875148199657  E_coul = 54.25139346092835
Extra cycle  E= -128.197358021068  delta_E= -4.83e-13  |g|= 3.25e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 156.61960963310833
E1 = -182.44875148199657  E_coul = 54.25139346092835
init E= -128.197358021068
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786227340013152  LUMO = 2.60335940139826
  mo_energy =
[-3.27157659e+01 -1.89853439e+00 -7.86227340e-01 -7.86227340e-01
 -7.86227340e-01  2.60335940e+00  2.60335940e+00  2.60335940e+00
  2.73027688e+00  1.97555694e+01  1.97555694e+01  1.97555694e+01
  4.37632162e+01  3.19724033e+02  1.98807970e+03  7.27759990e+03]
E1 = -182.4487515828388  E_coul = 54.25139356177072
cycle= 1 E= -128.197358021068  delta_E= 1.42e-13  |g|= 5.9e-08  |ddm|= 1.88e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4487515828388  E_coul = 54.25139356177072
  HOMO = -0.786227329847243  LUMO = 2.60335941023781
  mo_energy =
[-3.27157658e+01 -1.89853440e+00 -7.86227330e-01 -7.86227330e-01
 -7.86227330e-01  2.60335941e+00  2.60335941e+00  2.60335941e+00
  2.73027688e+00  1.97555694e+01  1.97555694e+01  1.97555694e+01
  4.37632162e+01  3.19724033e+02  1.98807970e+03  7.27759990e+03]
E1 = -182.44875154465188  E_coul = 54.25139352358364
Extra cycle  E= -128.197358021068  delta_E= -1.71e-13  |g|= 1.22e-08  |ddm|= 3.13e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14424229e+03 2.17000107e+02 1.42916435e+03 5.74244980e-01
 4.81556773e+01 1.29818311e+01 1.93546338e+00 2.76027850e+00
 1.33281832e+01 5.97274088e-01]
grad_E = [-8.09663126e-06 -1.37209053e-04  4.28003188e-05 -6.02074417e-04
 -4.39747545e-04  3.60009737e-04  2.18678909e-03 -8.57710371e-03
  1.10849099e-03  2.97551848e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.30256469        1
[INPUT] 0    0    [1    /1   ]  218.711459946        1
[INPUT] 0    0    [1    /1   ]  1428.81497389        1
[INPUT] 0    0    [1    /1   ]  0.579625405671       1
[INPUT] 0    0    [1    /1   ]  48.4091415015        1
[INPUT] 0    0    [1    /1   ]  13.0287913166        1
[INPUT] 0    0    [1    /1   ]  1.95940914072        1
[INPUT] 1    0    [1    /1   ]  2.75277030683        1
[INPUT] 1    0    [1    /1   ]  13.3209823714        1
[INPUT] 1    0    [1    /1   ]  0.595894178679       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.3025646894753, 1.0]], [0, [218.71145994554442, 1.0]], [0, [1428.8149738946495, 1.0]], [0, [0.5796254056708788, 1.0]], [0, [48.40914150145984, 1.0]], [0, [13.028791316637527, 1.0]], [0, [1.9594091407179095, 1.0]], [1, [2.752770306826257, 1.0]], [1, [13.320982371351118, 1.0]], [1, [0.5958941786786115, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.30256469]
bas 1, expnt(s) = [218.71145995]
bas 2, expnt(s) = [1428.81497389]
bas 3, expnt(s) = [0.57962541]
bas 4, expnt(s) = [48.4091415]
bas 5, expnt(s) = [13.02879132]
bas 6, expnt(s) = [1.95940914]
bas 7, expnt(s) = [2.75277031]
bas 8, expnt(s) = [13.32098237]
bas 9, expnt(s) = [0.59589418]
CPU time:        65.86
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14430256e+03 7.96121904e+02 2.18711460e+02 1.43687398e+02
 1.42881497e+03 5.87147234e+02 5.79625406e-01 1.67832315e+00
 4.84091415e+01 4.63671668e+01 1.30287913e+01 1.73257930e+01
 1.95940914e+00 4.18416567e+00 2.75277031e+00 1.03441989e+01
 1.33209824e+01 7.42428627e+01 5.95894179e-01 1.52737550e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96650613854692
cond(S) = 157.2770675443897
E1 = -183.13678498230192  E_coul = 55.01103248110306
init E= -128.125752501199
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742978030346519  LUMO = 2.62902174507427
  mo_energy =
[-3.25135664e+01 -1.85335880e+00 -7.42978030e-01 -7.42978030e-01
 -7.42978030e-01  2.62902175e+00  2.62902175e+00  2.62902175e+00
  2.81487095e+00  1.98575609e+01  1.98575609e+01  1.98575609e+01
  4.42957938e+01  3.22423231e+02  1.99446887e+03  7.28438026e+03]
E1 = -182.1063771341343  E_coul = 53.910848036558676
cycle= 1 E= -128.195529097576  delta_E= -0.0698  |g|= 0.168  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265225
diis-c [-0.07034438  1.        ]
  HOMO = -0.809525241166905  LUMO = 2.57397614301333
  mo_energy =
[-3.27925893e+01 -1.92258666e+00 -8.09525241e-01 -8.09525241e-01
 -8.09525241e-01  2.57397614e+00  2.57397614e+00  2.57397614e+00
  2.75827982e+00  1.96630379e+01  1.96630379e+01  1.96630379e+01
  4.40573050e+01  3.22107204e+02  1.99410160e+03  7.28398772e+03]
E1 = -182.5794386798791  E_coul = 54.38220910053746
cycle= 2 E= -128.197229579342  delta_E= -0.0017  |g|= 0.064  |ddm|= 0.0658
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104199
diis-c [-4.36969041e-04  2.78543766e-01  7.21456234e-01]
  HOMO = -0.78625675455882  LUMO = 2.59486016862829
  mo_energy =
[-3.27162384e+01 -1.89842141e+00 -7.86256755e-01 -7.86256755e-01
 -7.86256755e-01  2.59486017e+00  2.59486017e+00  2.59486017e+00
  2.77917346e+00  1.97203996e+01  1.97203996e+01  1.97203996e+01
  4.41244191e+01  3.22190551e+02  1.99419066e+03  7.28407832e+03]
E1 = -182.4439891636875  E_coul = 54.246439974268235
cycle= 3 E= -128.197549189419  delta_E= -0.00032  |g|= 0.000705  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00086405
diis-c [-9.72222315e-08 -4.01949183e-03 -2.58053204e-03  1.00660002e+00]
  HOMO = -0.786481668103887  LUMO = 2.59469388476934
  mo_energy =
[-3.27168857e+01 -1.89872334e+00 -7.86481668e-01 -7.86481668e-01
 -7.86481668e-01  2.59469388e+00  2.59469388e+00  2.59469388e+00
  2.77893369e+00  1.97198962e+01  1.97198962e+01  1.97198962e+01
  4.41238096e+01  3.22190075e+02  1.99419034e+03  7.28407804e+03]
E1 = -182.44524073630444  E_coul = 54.24769151302727
cycle= 4 E= -128.197549223277  delta_E= -3.39e-08  |g|= 5.61e-05  |ddm|= 0.000269
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.90274e-05
diis-c [-2.62819734e-10  4.92997042e-04 -8.30076416e-04 -1.66724038e-01
  1.16706112e+00]
  HOMO = -0.786465925619093  LUMO = 2.59470738137062
  mo_energy =
[-3.27168449e+01 -1.89872077e+00 -7.86465926e-01 -7.86465926e-01
 -7.86465926e-01  2.59470738e+00  2.59470738e+00  2.59470738e+00
  2.77893505e+00  1.97199277e+01  1.97199277e+01  1.97199277e+01
  4.41238423e+01  3.22190131e+02  1.99419041e+03  7.28407812e+03]
E1 = -182.44517162042874  E_coul = 54.24762239679227
cycle= 5 E= -128.197549223636  delta_E= -3.59e-10  |g|= 1.77e-06  |ddm|= 2.84e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44517162042874  E_coul = 54.24762239679227
  HOMO = -0.786465836792559  LUMO = 2.59470747388642
  mo_energy =
[-3.27168448e+01 -1.89872112e+00 -7.86465837e-01 -7.86465837e-01
 -7.86465837e-01  2.59470747e+00  2.59470747e+00  2.59470747e+00
  2.77893475e+00  1.97199278e+01  1.97199278e+01  1.97199278e+01
  4.41238423e+01  3.22190131e+02  1.99419041e+03  7.28407812e+03]
E1 = -182.44517145348334  E_coul = 54.24762222984653
Extra cycle  E= -128.197549223637  delta_E= -3.69e-13  |g|= 3.26e-07  |ddm|= 1.02e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14430256e+03 2.18711460e+02 1.42881497e+03 5.79625406e-01
 4.84091415e+01 1.30287913e+01 1.95940914e+00 2.75277031e+00
 1.33209824e+01 5.95894179e-01]
E = -128.19754922363683
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.30256469        1
[INPUT] 0    0    [1    /1   ]  218.711459946        1
[INPUT] 0    0    [1    /1   ]  1428.81497389        1
[INPUT] 0    0    [1    /1   ]  0.579625405671       1
[INPUT] 0    0    [1    /1   ]  48.4091415015        1
[INPUT] 0    0    [1    /1   ]  13.0287913166        1
[INPUT] 0    0    [1    /1   ]  1.95940914072        1
[INPUT] 1    0    [1    /1   ]  2.75277030683        1
[INPUT] 1    0    [1    /1   ]  13.3209823714        1
[INPUT] 1    0    [1    /1   ]  0.595894178679       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.3025646894753, 1.0]], [0, [218.71145994554442, 1.0]], [0, [1428.8149738946495, 1.0]], [0, [0.5796254056708788, 1.0]], [0, [48.40914150145984, 1.0]], [0, [13.028791316637527, 1.0]], [0, [1.9594091407179095, 1.0]], [1, [2.752770306826257, 1.0]], [1, [13.320982371351118, 1.0]], [1, [0.5958941786786115, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.30256469]
bas 1, expnt(s) = [218.71145995]
bas 2, expnt(s) = [1428.81497389]
bas 3, expnt(s) = [0.57962541]
bas 4, expnt(s) = [48.4091415]
bas 5, expnt(s) = [13.02879132]
bas 6, expnt(s) = [1.95940914]
bas 7, expnt(s) = [2.75277031]
bas 8, expnt(s) = [13.32098237]
bas 9, expnt(s) = [0.59589418]
CPU time:        66.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14430256e+03 7.96121904e+02 2.18711460e+02 1.43687398e+02
 1.42881497e+03 5.87147234e+02 5.79625406e-01 1.67832315e+00
 4.84091415e+01 4.63671668e+01 1.30287913e+01 1.73257930e+01
 1.95940914e+00 4.18416567e+00 2.75277031e+00 1.03441989e+01
 1.33209824e+01 7.42428627e+01 5.95894179e-01 1.52737550e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96650613854692
cond(S) = 157.2770675443897
E1 = -183.13678498230192  E_coul = 55.01103248110306
init E= -128.125752501199
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742978030346519  LUMO = 2.62902174507427
  mo_energy =
[-3.25135664e+01 -1.85335880e+00 -7.42978030e-01 -7.42978030e-01
 -7.42978030e-01  2.62902175e+00  2.62902175e+00  2.62902175e+00
  2.81487095e+00  1.98575609e+01  1.98575609e+01  1.98575609e+01
  4.42957938e+01  3.22423231e+02  1.99446887e+03  7.28438026e+03]
E1 = -182.1063771341343  E_coul = 53.910848036558676
cycle= 1 E= -128.195529097576  delta_E= -0.0698  |g|= 0.168  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265225
diis-c [-0.07034438  1.        ]
  HOMO = -0.809525241166905  LUMO = 2.57397614301333
  mo_energy =
[-3.27925893e+01 -1.92258666e+00 -8.09525241e-01 -8.09525241e-01
 -8.09525241e-01  2.57397614e+00  2.57397614e+00  2.57397614e+00
  2.75827982e+00  1.96630379e+01  1.96630379e+01  1.96630379e+01
  4.40573050e+01  3.22107204e+02  1.99410160e+03  7.28398772e+03]
E1 = -182.5794386798791  E_coul = 54.38220910053746
cycle= 2 E= -128.197229579342  delta_E= -0.0017  |g|= 0.064  |ddm|= 0.0658
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104199
diis-c [-4.36969041e-04  2.78543766e-01  7.21456234e-01]
  HOMO = -0.78625675455882  LUMO = 2.59486016862829
  mo_energy =
[-3.27162384e+01 -1.89842141e+00 -7.86256755e-01 -7.86256755e-01
 -7.86256755e-01  2.59486017e+00  2.59486017e+00  2.59486017e+00
  2.77917346e+00  1.97203996e+01  1.97203996e+01  1.97203996e+01
  4.41244191e+01  3.22190551e+02  1.99419066e+03  7.28407832e+03]
E1 = -182.4439891636875  E_coul = 54.246439974268235
cycle= 3 E= -128.197549189419  delta_E= -0.00032  |g|= 0.000705  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00086405
diis-c [-9.72222315e-08 -4.01949183e-03 -2.58053204e-03  1.00660002e+00]
  HOMO = -0.786481668103887  LUMO = 2.59469388476934
  mo_energy =
[-3.27168857e+01 -1.89872334e+00 -7.86481668e-01 -7.86481668e-01
 -7.86481668e-01  2.59469388e+00  2.59469388e+00  2.59469388e+00
  2.77893369e+00  1.97198962e+01  1.97198962e+01  1.97198962e+01
  4.41238096e+01  3.22190075e+02  1.99419034e+03  7.28407804e+03]
E1 = -182.44524073630444  E_coul = 54.24769151302727
cycle= 4 E= -128.197549223277  delta_E= -3.39e-08  |g|= 5.61e-05  |ddm|= 0.000269
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.90274e-05
diis-c [-2.62819734e-10  4.92997042e-04 -8.30076416e-04 -1.66724038e-01
  1.16706112e+00]
  HOMO = -0.786465925619093  LUMO = 2.59470738137062
  mo_energy =
[-3.27168449e+01 -1.89872077e+00 -7.86465926e-01 -7.86465926e-01
 -7.86465926e-01  2.59470738e+00  2.59470738e+00  2.59470738e+00
  2.77893505e+00  1.97199277e+01  1.97199277e+01  1.97199277e+01
  4.41238423e+01  3.22190131e+02  1.99419041e+03  7.28407812e+03]
E1 = -182.44517162042874  E_coul = 54.24762239679227
cycle= 5 E= -128.197549223636  delta_E= -3.59e-10  |g|= 1.77e-06  |ddm|= 2.84e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44517162042874  E_coul = 54.24762239679227
  HOMO = -0.786465836792559  LUMO = 2.59470747388642
  mo_energy =
[-3.27168448e+01 -1.89872112e+00 -7.86465837e-01 -7.86465837e-01
 -7.86465837e-01  2.59470747e+00  2.59470747e+00  2.59470747e+00
  2.77893475e+00  1.97199278e+01  1.97199278e+01  1.97199278e+01
  4.41238423e+01  3.22190131e+02  1.99419041e+03  7.28407812e+03]
E1 = -182.44517145348334  E_coul = 54.24762222984653
Extra cycle  E= -128.197549223637  delta_E= -3.69e-13  |g|= 3.26e-07  |ddm|= 1.02e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 157.2770675443897
E1 = -182.44517145348334  E_coul = 54.24762222984653
init E= -128.197549223637
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.7864658311777  LUMO = 2.59470747711743
  mo_energy =
[-3.27168448e+01 -1.89872120e+00 -7.86465831e-01 -7.86465831e-01
 -7.86465831e-01  2.59470748e+00  2.59470748e+00  2.59470748e+00
  2.77893468e+00  1.97199278e+01  1.97199278e+01  1.97199278e+01
  4.41238422e+01  3.22190131e+02  1.99419041e+03  7.28407812e+03]
E1 = -182.44517152211748  E_coul = 54.2476222984808
cycle= 1 E= -128.197549223637  delta_E= 1.42e-13  |g|= 5.88e-08  |ddm|= 1.86e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44517152211748  E_coul = 54.2476222984808
  HOMO = -0.786465823260898  LUMO = 2.59470748391515
  mo_energy =
[-3.27168448e+01 -1.89872120e+00 -7.86465823e-01 -7.86465823e-01
 -7.86465823e-01  2.59470748e+00  2.59470748e+00  2.59470748e+00
  2.77893467e+00  1.97199278e+01  1.97199278e+01  1.97199278e+01
  4.41238423e+01  3.22190131e+02  1.99419041e+03  7.28407812e+03]
E1 = -182.44517149596783  E_coul = 54.24762227233098
Extra cycle  E= -128.197549223637  delta_E= -1.71e-13  |g|= 1.15e-08  |ddm|= 3.17e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14430256e+03 2.18711460e+02 1.42881497e+03 5.79625406e-01
 4.84091415e+01 1.30287913e+01 1.95940914e+00 2.75277031e+00
 1.33209824e+01 5.95894179e-01]
grad_E = [-8.47566893e-06 -8.84745189e-05  4.09658579e-05 -8.79133430e-04
 -5.56791136e-04  5.16853035e-04  3.11515833e-03 -1.20094035e-02
  1.52470644e-03  4.20731426e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.41487497        1
[INPUT] 0    0    [1    /1   ]  221.889289822        1
[INPUT] 0    0    [1    /1   ]  1428.16424382        1
[INPUT] 0    0    [1    /1   ]  0.585296837617       1
[INPUT] 0    0    [1    /1   ]  48.9386858598        1
[INPUT] 0    0    [1    /1   ]  13.1196363537        1
[INPUT] 0    0    [1    /1   ]  1.98372048928        1
[INPUT] 1    0    [1    /1   ]  2.74761090044        1
[INPUT] 1    0    [1    /1   ]  13.3063910999        1
[INPUT] 1    0    [1    /1   ]  0.595014824356       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.4148749664378, 1.0]], [0, [221.88928982194042, 1.0]], [0, [1428.1642438196375, 1.0]], [0, [0.5852968376165485, 1.0]], [0, [48.93868585976478, 1.0]], [0, [13.119636353732457, 1.0]], [0, [1.983720489284493, 1.0]], [1, [2.7476109004358666, 1.0]], [1, [13.306391099907136, 1.0]], [1, [0.595014824356415, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.41487497]
bas 1, expnt(s) = [221.88928982]
bas 2, expnt(s) = [1428.16424382]
bas 3, expnt(s) = [0.58529684]
bas 4, expnt(s) = [48.93868586]
bas 5, expnt(s) = [13.11963635]
bas 6, expnt(s) = [1.98372049]
bas 7, expnt(s) = [2.7476109]
bas 8, expnt(s) = [13.3063911]
bas 9, expnt(s) = [0.59501482]
CPU time:        68.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14441487e+03 7.96153177e+02 2.21889290e+02 1.45250381e+02
 1.42816424e+03 5.86946667e+02 5.85296838e-01 1.69062450e+00
 4.89386859e+01 4.67470545e+01 1.31196364e+01 1.74163191e+01
 1.98372049e+00 4.22304183e+00 2.74761090e+00 1.03199699e+01
 1.33063911e+01 7.41412233e+01 5.95014824e-01 1.52455861e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966557423236392
cond(S) = 158.431576470397
E1 = -183.13673516547982  E_coul = 55.01114678378555
init E= -128.125588381694
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742984780323963  LUMO = 2.62351175209227
  mo_energy =
[-3.25139283e+01 -1.85309776e+00 -7.42984780e-01 -7.42984780e-01
 -7.42984780e-01  2.62351175e+00  2.62351175e+00  2.62351175e+00
  2.86745254e+00  1.98235980e+01  1.98235980e+01  1.98235980e+01
  4.49047160e+01  3.27102644e+02  2.00594406e+03  7.29655693e+03]
E1 = -182.10463340254026  E_coul = 53.90877288971746
cycle= 1 E= -128.195860512823  delta_E= -0.0703  |g|= 0.169  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265303
diis-c [-0.07038564  1.        ]
  HOMO = -0.809656509798173  LUMO = 2.5684684459016
  mo_energy =
[-3.27933596e+01 -1.92263215e+00 -8.09656510e-01 -8.09656510e-01
 -8.09656510e-01  2.56846845e+00  2.56846845e+00  2.56846845e+00
  2.80956906e+00  1.96288466e+01  1.96288466e+01  1.96288466e+01
  4.46650232e+01  3.26785911e+02  2.00557688e+03  7.29616484e+03]
E1 = -182.57872957617832  E_coul = 54.381161045100576
cycle= 2 E= -128.197568531078  delta_E= -0.00171  |g|= 0.0641  |ddm|= 0.066
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104441
diis-c [-4.27728601e-04  2.79045323e-01  7.20954677e-01]
  HOMO = -0.786358000735821  LUMO = 2.58934326348483
  mo_energy =
[-3.27168885e+01 -1.89842410e+00 -7.86358001e-01 -7.86358001e-01
 -7.86358001e-01  2.58934326e+00  2.58934326e+00  2.58934326e+00
  2.83078732e+00  1.96862768e+01  1.96862768e+01  1.96862768e+01
  4.47324106e+01  3.26869470e+02  2.00566611e+03  7.29625561e+03]
E1 = -182.4430422311232  E_coul = 54.24515251583578
cycle= 3 E= -128.197889715287  delta_E= -0.000321  |g|= 0.000684  |ddm|= 0.0187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000811984
diis-c [-1.07882951e-07 -4.17229076e-03 -3.64174007e-03  1.00781403e+00]
  HOMO = -0.786568528155631  LUMO = 2.58919023925813
  mo_energy =
[-3.27174917e+01 -1.89871589e+00 -7.86568528e-01 -7.86568528e-01
 -7.86568528e-01  2.58919024e+00  2.58919024e+00  2.58919024e+00
  2.83055306e+00  1.96858071e+01  1.96858071e+01  1.96858071e+01
  4.47318380e+01  3.26869048e+02  2.00566585e+03  7.29625539e+03]
E1 = -182.44421491555815  E_coul = 54.246325168436435
cycle= 4 E= -128.197889747122  delta_E= -3.18e-08  |g|= 5.92e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.37682e-05
diis-c [-2.67573857e-10  5.05712748e-04 -7.36430369e-04 -1.68444237e-01
  1.16867495e+00]
  HOMO = -0.786552094438114  LUMO = 2.58920428356672
  mo_energy =
[-3.27174489e+01 -1.89871342e+00 -7.86552094e-01 -7.86552094e-01
 -7.86552094e-01  2.58920428e+00  2.58920428e+00  2.58920428e+00
  2.83055432e+00  1.96858401e+01  1.96858401e+01  1.96858401e+01
  4.47318724e+01  3.26869107e+02  2.00566592e+03  7.29625548e+03]
E1 = -182.44414208800342  E_coul = 54.246252340481554
cycle= 5 E= -128.197889747522  delta_E= -4e-10  |g|= 1.75e-06  |ddm|= 3e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44414208800342  E_coul = 54.246252340481554
  HOMO = -0.786552029015057  LUMO = 2.58920435743889
  mo_energy =
[-3.27174488e+01 -1.89871379e+00 -7.86552029e-01 -7.86552029e-01
 -7.86552029e-01  2.58920436e+00  2.58920436e+00  2.58920436e+00
  2.83055400e+00  1.96858401e+01  1.96858401e+01  1.96858401e+01
  4.47318723e+01  3.26869107e+02  2.00566592e+03  7.29625548e+03]
E1 = -182.44414200032654  E_coul = 54.24625225280443
Extra cycle  E= -128.197889747522  delta_E= -2.56e-13  |g|= 3.2e-07  |ddm|= 1e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14441487e+03 2.21889290e+02 1.42816424e+03 5.85296838e-01
 4.89386859e+01 1.31196364e+01 1.98372049e+00 2.74761090e+00
 1.33063911e+01 5.95014824e-01]
E = -128.1978897475221
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:28 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.41487497        1
[INPUT] 0    0    [1    /1   ]  221.889289822        1
[INPUT] 0    0    [1    /1   ]  1428.16424382        1
[INPUT] 0    0    [1    /1   ]  0.585296837617       1
[INPUT] 0    0    [1    /1   ]  48.9386858598        1
[INPUT] 0    0    [1    /1   ]  13.1196363537        1
[INPUT] 0    0    [1    /1   ]  1.98372048928        1
[INPUT] 1    0    [1    /1   ]  2.74761090044        1
[INPUT] 1    0    [1    /1   ]  13.3063910999        1
[INPUT] 1    0    [1    /1   ]  0.595014824356       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.4148749664378, 1.0]], [0, [221.88928982194042, 1.0]], [0, [1428.1642438196375, 1.0]], [0, [0.5852968376165485, 1.0]], [0, [48.93868585976478, 1.0]], [0, [13.119636353732457, 1.0]], [0, [1.983720489284493, 1.0]], [1, [2.7476109004358666, 1.0]], [1, [13.306391099907136, 1.0]], [1, [0.595014824356415, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.41487497]
bas 1, expnt(s) = [221.88928982]
bas 2, expnt(s) = [1428.16424382]
bas 3, expnt(s) = [0.58529684]
bas 4, expnt(s) = [48.93868586]
bas 5, expnt(s) = [13.11963635]
bas 6, expnt(s) = [1.98372049]
bas 7, expnt(s) = [2.7476109]
bas 8, expnt(s) = [13.3063911]
bas 9, expnt(s) = [0.59501482]
CPU time:        69.20
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14441487e+03 7.96153177e+02 2.21889290e+02 1.45250381e+02
 1.42816424e+03 5.86946667e+02 5.85296838e-01 1.69062450e+00
 4.89386859e+01 4.67470545e+01 1.31196364e+01 1.74163191e+01
 1.98372049e+00 4.22304183e+00 2.74761090e+00 1.03199699e+01
 1.33063911e+01 7.41412233e+01 5.95014824e-01 1.52455861e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966557423236392
cond(S) = 158.431576470397
E1 = -183.13673516547982  E_coul = 55.01114678378555
init E= -128.125588381694
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742984780323963  LUMO = 2.62351175209227
  mo_energy =
[-3.25139283e+01 -1.85309776e+00 -7.42984780e-01 -7.42984780e-01
 -7.42984780e-01  2.62351175e+00  2.62351175e+00  2.62351175e+00
  2.86745254e+00  1.98235980e+01  1.98235980e+01  1.98235980e+01
  4.49047160e+01  3.27102644e+02  2.00594406e+03  7.29655693e+03]
E1 = -182.10463340254026  E_coul = 53.90877288971746
cycle= 1 E= -128.195860512823  delta_E= -0.0703  |g|= 0.169  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265303
diis-c [-0.07038564  1.        ]
  HOMO = -0.809656509798173  LUMO = 2.5684684459016
  mo_energy =
[-3.27933596e+01 -1.92263215e+00 -8.09656510e-01 -8.09656510e-01
 -8.09656510e-01  2.56846845e+00  2.56846845e+00  2.56846845e+00
  2.80956906e+00  1.96288466e+01  1.96288466e+01  1.96288466e+01
  4.46650232e+01  3.26785911e+02  2.00557688e+03  7.29616484e+03]
E1 = -182.57872957617832  E_coul = 54.381161045100576
cycle= 2 E= -128.197568531078  delta_E= -0.00171  |g|= 0.0641  |ddm|= 0.066
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104441
diis-c [-4.27728601e-04  2.79045323e-01  7.20954677e-01]
  HOMO = -0.786358000735821  LUMO = 2.58934326348483
  mo_energy =
[-3.27168885e+01 -1.89842410e+00 -7.86358001e-01 -7.86358001e-01
 -7.86358001e-01  2.58934326e+00  2.58934326e+00  2.58934326e+00
  2.83078732e+00  1.96862768e+01  1.96862768e+01  1.96862768e+01
  4.47324106e+01  3.26869470e+02  2.00566611e+03  7.29625561e+03]
E1 = -182.4430422311232  E_coul = 54.24515251583578
cycle= 3 E= -128.197889715287  delta_E= -0.000321  |g|= 0.000684  |ddm|= 0.0187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000811984
diis-c [-1.07882951e-07 -4.17229076e-03 -3.64174007e-03  1.00781403e+00]
  HOMO = -0.786568528155631  LUMO = 2.58919023925813
  mo_energy =
[-3.27174917e+01 -1.89871589e+00 -7.86568528e-01 -7.86568528e-01
 -7.86568528e-01  2.58919024e+00  2.58919024e+00  2.58919024e+00
  2.83055306e+00  1.96858071e+01  1.96858071e+01  1.96858071e+01
  4.47318380e+01  3.26869048e+02  2.00566585e+03  7.29625539e+03]
E1 = -182.44421491555815  E_coul = 54.246325168436435
cycle= 4 E= -128.197889747122  delta_E= -3.18e-08  |g|= 5.92e-05  |ddm|= 0.000268
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.37682e-05
diis-c [-2.67573857e-10  5.05712748e-04 -7.36430369e-04 -1.68444237e-01
  1.16867495e+00]
  HOMO = -0.786552094438114  LUMO = 2.58920428356672
  mo_energy =
[-3.27174489e+01 -1.89871342e+00 -7.86552094e-01 -7.86552094e-01
 -7.86552094e-01  2.58920428e+00  2.58920428e+00  2.58920428e+00
  2.83055432e+00  1.96858401e+01  1.96858401e+01  1.96858401e+01
  4.47318724e+01  3.26869107e+02  2.00566592e+03  7.29625548e+03]
E1 = -182.44414208800342  E_coul = 54.246252340481554
cycle= 5 E= -128.197889747522  delta_E= -4e-10  |g|= 1.75e-06  |ddm|= 3e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44414208800342  E_coul = 54.246252340481554
  HOMO = -0.786552029015057  LUMO = 2.58920435743889
  mo_energy =
[-3.27174488e+01 -1.89871379e+00 -7.86552029e-01 -7.86552029e-01
 -7.86552029e-01  2.58920436e+00  2.58920436e+00  2.58920436e+00
  2.83055400e+00  1.96858401e+01  1.96858401e+01  1.96858401e+01
  4.47318723e+01  3.26869107e+02  2.00566592e+03  7.29625548e+03]
E1 = -182.44414200032654  E_coul = 54.24625225280443
Extra cycle  E= -128.197889747522  delta_E= -2.56e-13  |g|= 3.2e-07  |ddm|= 1e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 158.431576470397
E1 = -182.44414200032654  E_coul = 54.24625225280443
init E= -128.197889747522
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786552018599235  LUMO = 2.5892043649971
  mo_energy =
[-3.27174488e+01 -1.89871386e+00 -7.86552019e-01 -7.86552019e-01
 -7.86552019e-01  2.58920436e+00  2.58920436e+00  2.58920436e+00
  2.83055394e+00  1.96858401e+01  1.96858401e+01  1.96858401e+01
  4.47318723e+01  3.26869107e+02  2.00566592e+03  7.29625548e+03]
E1 = -182.4441420330821  E_coul = 54.246252285559784
cycle= 1 E= -128.197889747522  delta_E= -1.99e-13  |g|= 5.75e-08  |ddm|= 1.81e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4441420330821  E_coul = 54.246252285559784
  HOMO = -0.786552013251125  LUMO = 2.58920436948979
  mo_energy =
[-3.27174488e+01 -1.89871386e+00 -7.86552013e-01 -7.86552013e-01
 -7.86552013e-01  2.58920437e+00  2.58920437e+00  2.58920437e+00
  2.83055393e+00  1.96858401e+01  1.96858401e+01  1.96858401e+01
  4.47318723e+01  3.26869107e+02  2.00566592e+03  7.29625548e+03]
E1 = -182.44414202047  E_coul = 54.24625227294771
Extra cycle  E= -128.197889747522  delta_E= 2.84e-14  |g|= 1.07e-08  |ddm|= 3.14e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14441487e+03 2.21889290e+02 1.42816424e+03 5.85296838e-01
 4.89386859e+01 1.31196364e+01 1.98372049e+00 2.74761090e+00
 1.33063911e+01 5.95014824e-01]
grad_E = [-9.09438722e-06 -2.42741778e-05  3.79307894e-05 -1.30553643e-03
 -5.90752725e-04  6.14096150e-04  3.75249013e-03 -1.37111383e-02
  1.68652500e-03  4.77642826e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.55417203        1
[INPUT] 0    0    [1    /1   ]  225.819567839        1
[INPUT] 0    0    [1    /1   ]  1427.35744024        1
[INPUT] 0    0    [1    /1   ]  0.586756785343       1
[INPUT] 0    0    [1    /1   ]  49.6534458212        1
[INPUT] 0    0    [1    /1   ]  13.2327875702        1
[INPUT] 0    0    [1    /1   ]  1.98701619073        1
[INPUT] 1    0    [1    /1   ]  2.75120106591        1
[INPUT] 1    0    [1    /1   ]  13.2870720719        1
[INPUT] 1    0    [1    /1   ]  0.595841190401       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.5541720282067, 1.0]], [0, [225.81956783926609, 1.0]], [0, [1427.3574402411612, 1.0]], [0, [0.586756785343398, 1.0]], [0, [49.65344582116789, 1.0]], [0, [13.232787570240587, 1.0]], [0, [1.9870161907317236, 1.0]], [1, [2.751201065905948, 1.0]], [1, [13.287072071851822, 1.0]], [1, [0.5958411904007578, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.55417203]
bas 1, expnt(s) = [225.81956784]
bas 2, expnt(s) = [1427.35744024]
bas 3, expnt(s) = [0.58675679]
bas 4, expnt(s) = [49.65344582]
bas 5, expnt(s) = [13.23278757]
bas 6, expnt(s) = [1.98701619]
bas 7, expnt(s) = [2.75120107]
bas 8, expnt(s) = [13.28707207]
bas 9, expnt(s) = [0.59584119]
CPU time:        71.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14455417e+03 7.96191964e+02 2.25819568e+02 1.47175732e+02
 1.42735744e+03 5.86697965e+02 5.86756785e-01 1.69378630e+00
 4.96534458e+01 4.72581883e+01 1.32327876e+01 1.75288542e+01
 1.98701619e+00 4.22830278e+00 2.75120107e+00 1.03368284e+01
 1.32870721e+01 7.40066943e+01 5.95841190e-01 1.52720573e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966347533301334
cond(S) = 159.77066883986765
E1 = -183.1367489391154  E_coul = 55.0114296118998
init E= -128.125319327216
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742958258847045  LUMO = 2.62849073435257
  mo_energy =
[-3.25140979e+01 -1.85303763e+00 -7.42958259e-01 -7.42958259e-01
 -7.42958259e-01  2.62849073e+00  2.62849073e+00  2.62849073e+00
  2.87947814e+00  1.98172363e+01  1.98172363e+01  1.98172363e+01
  4.55575729e+01  3.32952378e+02  2.02021814e+03  7.31173981e+03]
E1 = -182.11127295113045  E_coul = 53.91500817280848
cycle= 1 E= -128.196264778322  delta_E= -0.0709  |g|= 0.168  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.264078
diis-c [-0.06973719  1.        ]
  HOMO = -0.809261828346727  LUMO = 2.5737049789027
  mo_energy =
[-3.27920788e+01 -1.92216804e+00 -8.09261828e-01 -8.09261828e-01
 -8.09261828e-01  2.57370498e+00  2.57370498e+00  2.57370498e+00
  2.82169954e+00  1.96235610e+01  1.96235610e+01  1.96235610e+01
  4.53181265e+01  3.32637010e+02  2.01985353e+03  7.31135074e+03]
E1 = -182.58288670141195  E_coul = 54.38492964251645
cycle= 2 E= -128.197957058895  delta_E= -0.00169  |g|= 0.0638  |ddm|= 0.0656
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10392
diis-c [-4.15246065e-04  2.79037749e-01  7.20962251e-01]
  HOMO = -0.786089306143077  LUMO = 2.59449969189113
  mo_energy =
[-3.27159899e+01 -1.89809001e+00 -7.86089306e-01 -7.86089306e-01
 -7.86089306e-01  2.59449969e+00  2.59449969e+00  2.59449969e+00
  2.84287891e+00  1.96806660e+01  1.96806660e+01  1.96806660e+01
  4.53853961e+01  3.32720238e+02  2.01994230e+03  7.31144104e+03]
E1 = -182.44796133703466  E_coul = 54.249686363707845
cycle= 3 E= -128.198274973327  delta_E= -0.000318  |g|= 0.000671  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000797303
diis-c [-1.03384617e-07 -4.18246360e-03 -3.76700297e-03  1.00794947e+00]
  HOMO = -0.786296547091883  LUMO = 2.59434901178627
  mo_energy =
[-3.27165810e+01 -1.89837720e+00 -7.86296547e-01 -7.86296547e-01
 -7.86296547e-01  2.59434901e+00  2.59434901e+00  2.59434901e+00
  2.84264761e+00  1.96802050e+01  1.96802050e+01  1.96802050e+01
  4.53848339e+01  3.32719827e+02  2.01994205e+03  7.31144083e+03]
E1 = -182.44911193442903  E_coul = 54.250836930375584
cycle= 4 E= -128.198275004053  delta_E= -3.07e-08  |g|= 5.83e-05  |ddm|= 0.000264
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.22715e-05
diis-c [-2.48980148e-10  5.12013593e-04 -7.03198642e-04 -1.69489281e-01
  1.16968047e+00]
  HOMO = -0.786280376493824  LUMO = 2.59436284746027
  mo_energy =
[-3.27165389e+01 -1.89837478e+00 -7.86280376e-01 -7.86280376e-01
 -7.86280376e-01  2.59436285e+00  2.59436285e+00  2.59436285e+00
  2.84264886e+00  1.96802374e+01  1.96802374e+01  1.96802374e+01
  4.53848679e+01  3.32719886e+02  2.01994212e+03  7.31144091e+03]
E1 = -182.44904021794022  E_coul = 54.25076521349982
cycle= 5 E= -128.19827500444  delta_E= -3.87e-10  |g|= 1.68e-06  |ddm|= 2.96e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44904021794022  E_coul = 54.25076521349982
  HOMO = -0.786280324240383  LUMO = 2.59436291100112
  mo_energy =
[-3.27165388e+01 -1.89837514e+00 -7.86280324e-01 -7.86280324e-01
 -7.86280324e-01  2.59436291e+00  2.59436291e+00  2.59436291e+00
  2.84264855e+00  1.96802374e+01  1.96802374e+01  1.96802374e+01
  4.53848679e+01  3.32719886e+02  2.01994212e+03  7.31144091e+03]
E1 = -182.44904018172934  E_coul = 54.250765177288436
Extra cycle  E= -128.198275004441  delta_E= -5.12e-13  |g|= 3.04e-07  |ddm|= 9.61e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14455417e+03 2.25819568e+02 1.42735744e+03 5.86756785e-01
 4.96534458e+01 1.32327876e+01 1.98701619e+00 2.75120107e+00
 1.32870721e+01 5.95841190e-01]
E = -128.19827500444092
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.55417203        1
[INPUT] 0    0    [1    /1   ]  225.819567839        1
[INPUT] 0    0    [1    /1   ]  1427.35744024        1
[INPUT] 0    0    [1    /1   ]  0.586756785343       1
[INPUT] 0    0    [1    /1   ]  49.6534458212        1
[INPUT] 0    0    [1    /1   ]  13.2327875702        1
[INPUT] 0    0    [1    /1   ]  1.98701619073        1
[INPUT] 1    0    [1    /1   ]  2.75120106591        1
[INPUT] 1    0    [1    /1   ]  13.2870720719        1
[INPUT] 1    0    [1    /1   ]  0.595841190401       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.5541720282067, 1.0]], [0, [225.81956783926609, 1.0]], [0, [1427.3574402411612, 1.0]], [0, [0.586756785343398, 1.0]], [0, [49.65344582116789, 1.0]], [0, [13.232787570240587, 1.0]], [0, [1.9870161907317236, 1.0]], [1, [2.751201065905948, 1.0]], [1, [13.287072071851822, 1.0]], [1, [0.5958411904007578, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.55417203]
bas 1, expnt(s) = [225.81956784]
bas 2, expnt(s) = [1427.35744024]
bas 3, expnt(s) = [0.58675679]
bas 4, expnt(s) = [49.65344582]
bas 5, expnt(s) = [13.23278757]
bas 6, expnt(s) = [1.98701619]
bas 7, expnt(s) = [2.75120107]
bas 8, expnt(s) = [13.28707207]
bas 9, expnt(s) = [0.59584119]
CPU time:        72.01
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14455417e+03 7.96191964e+02 2.25819568e+02 1.47175732e+02
 1.42735744e+03 5.86697965e+02 5.86756785e-01 1.69378630e+00
 4.96534458e+01 4.72581883e+01 1.32327876e+01 1.75288542e+01
 1.98701619e+00 4.22830278e+00 2.75120107e+00 1.03368284e+01
 1.32870721e+01 7.40066943e+01 5.95841190e-01 1.52720573e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966347533301334
cond(S) = 159.77066883986765
E1 = -183.1367489391154  E_coul = 55.0114296118998
init E= -128.125319327216
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742958258847045  LUMO = 2.62849073435257
  mo_energy =
[-3.25140979e+01 -1.85303763e+00 -7.42958259e-01 -7.42958259e-01
 -7.42958259e-01  2.62849073e+00  2.62849073e+00  2.62849073e+00
  2.87947814e+00  1.98172363e+01  1.98172363e+01  1.98172363e+01
  4.55575729e+01  3.32952378e+02  2.02021814e+03  7.31173981e+03]
E1 = -182.11127295113045  E_coul = 53.91500817280848
cycle= 1 E= -128.196264778322  delta_E= -0.0709  |g|= 0.168  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.264078
diis-c [-0.06973719  1.        ]
  HOMO = -0.809261828346727  LUMO = 2.5737049789027
  mo_energy =
[-3.27920788e+01 -1.92216804e+00 -8.09261828e-01 -8.09261828e-01
 -8.09261828e-01  2.57370498e+00  2.57370498e+00  2.57370498e+00
  2.82169954e+00  1.96235610e+01  1.96235610e+01  1.96235610e+01
  4.53181265e+01  3.32637010e+02  2.01985353e+03  7.31135074e+03]
E1 = -182.58288670141195  E_coul = 54.38492964251645
cycle= 2 E= -128.197957058895  delta_E= -0.00169  |g|= 0.0638  |ddm|= 0.0656
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10392
diis-c [-4.15246065e-04  2.79037749e-01  7.20962251e-01]
  HOMO = -0.786089306143077  LUMO = 2.59449969189113
  mo_energy =
[-3.27159899e+01 -1.89809001e+00 -7.86089306e-01 -7.86089306e-01
 -7.86089306e-01  2.59449969e+00  2.59449969e+00  2.59449969e+00
  2.84287891e+00  1.96806660e+01  1.96806660e+01  1.96806660e+01
  4.53853961e+01  3.32720238e+02  2.01994230e+03  7.31144104e+03]
E1 = -182.44796133703466  E_coul = 54.249686363707845
cycle= 3 E= -128.198274973327  delta_E= -0.000318  |g|= 0.000671  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000797303
diis-c [-1.03384617e-07 -4.18246360e-03 -3.76700297e-03  1.00794947e+00]
  HOMO = -0.786296547091883  LUMO = 2.59434901178627
  mo_energy =
[-3.27165810e+01 -1.89837720e+00 -7.86296547e-01 -7.86296547e-01
 -7.86296547e-01  2.59434901e+00  2.59434901e+00  2.59434901e+00
  2.84264761e+00  1.96802050e+01  1.96802050e+01  1.96802050e+01
  4.53848339e+01  3.32719827e+02  2.01994205e+03  7.31144083e+03]
E1 = -182.44911193442903  E_coul = 54.250836930375584
cycle= 4 E= -128.198275004053  delta_E= -3.07e-08  |g|= 5.83e-05  |ddm|= 0.000264
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.22715e-05
diis-c [-2.48980148e-10  5.12013593e-04 -7.03198642e-04 -1.69489281e-01
  1.16968047e+00]
  HOMO = -0.786280376493824  LUMO = 2.59436284746027
  mo_energy =
[-3.27165389e+01 -1.89837478e+00 -7.86280376e-01 -7.86280376e-01
 -7.86280376e-01  2.59436285e+00  2.59436285e+00  2.59436285e+00
  2.84264886e+00  1.96802374e+01  1.96802374e+01  1.96802374e+01
  4.53848679e+01  3.32719886e+02  2.01994212e+03  7.31144091e+03]
E1 = -182.44904021794022  E_coul = 54.25076521349982
cycle= 5 E= -128.19827500444  delta_E= -3.87e-10  |g|= 1.68e-06  |ddm|= 2.96e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44904021794022  E_coul = 54.25076521349982
  HOMO = -0.786280324240383  LUMO = 2.59436291100112
  mo_energy =
[-3.27165388e+01 -1.89837514e+00 -7.86280324e-01 -7.86280324e-01
 -7.86280324e-01  2.59436291e+00  2.59436291e+00  2.59436291e+00
  2.84264855e+00  1.96802374e+01  1.96802374e+01  1.96802374e+01
  4.53848679e+01  3.32719886e+02  2.01994212e+03  7.31144091e+03]
E1 = -182.44904018172934  E_coul = 54.250765177288436
Extra cycle  E= -128.198275004441  delta_E= -5.12e-13  |g|= 3.04e-07  |ddm|= 9.61e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 159.77066883986765
E1 = -182.44904018172934  E_coul = 54.250765177288436
init E= -128.198275004441
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786280311108628  LUMO = 2.59436292110033
  mo_energy =
[-3.27165388e+01 -1.89837520e+00 -7.86280311e-01 -7.86280311e-01
 -7.86280311e-01  2.59436292e+00  2.59436292e+00  2.59436292e+00
  2.84264849e+00  1.96802374e+01  1.96802374e+01  1.96802374e+01
  4.53848679e+01  3.32719886e+02  2.01994212e+03  7.31144091e+03]
E1 = -182.44904019380337  E_coul = 54.25076518936255
cycle= 1 E= -128.198275004441  delta_E= 1.14e-13  |g|= 5.5e-08  |ddm|= 1.71e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44904019380337  E_coul = 54.25076518936255
  HOMO = -0.786280307322754  LUMO = 2.5943629242145
  mo_energy =
[-3.27165388e+01 -1.89837521e+00 -7.86280307e-01 -7.86280307e-01
 -7.86280307e-01  2.59436292e+00  2.59436292e+00  2.59436292e+00
  2.84264848e+00  1.96802374e+01  1.96802374e+01  1.96802374e+01
  4.53848679e+01  3.32719886e+02  2.01994212e+03  7.31144091e+03]
E1 = -182.44904018936654  E_coul = 54.25076518492575
Extra cycle  E= -128.198275004441  delta_E=    0  |g|= 9.98e-09  |ddm|= 3.03e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14455417e+03 2.25819568e+02 1.42735744e+03 5.86756785e-01
 4.96534458e+01 1.32327876e+01 1.98701619e+00 2.75120107e+00
 1.32870721e+01 5.95841190e-01]
grad_E = [-9.74811953e-06  2.59048905e-05  3.46485719e-05 -1.87080617e-03
 -4.36111437e-04  5.44836041e-04  3.30591419e-03 -1.04607423e-02
  1.18624552e-03  3.56831453e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.63199609        1
[INPUT] 0    0    [1    /1   ]  228.00744526         1
[INPUT] 0    0    [1    /1   ]  1426.90690224        1
[INPUT] 0    0    [1    /1   ]  0.581968293613       1
[INPUT] 0    0    [1    /1   ]  50.0940581233        1
[INPUT] 0    0    [1    /1   ]  13.2909824865        1
[INPUT] 0    0    [1    /1   ]  1.96010575091        1
[INPUT] 1    0    [1    /1   ]  2.76152337907        1
[INPUT] 1    0    [1    /1   ]  13.2754353176        1
[INPUT] 1    0    [1    /1   ]  0.597903953436       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6319960926326, 1.0]], [0, [228.00744525973886, 1.0]], [0, [1426.9069022378667, 1.0]], [0, [0.5819682936128729, 1.0]], [0, [50.094058123285954, 1.0]], [0, [13.290982486509138, 1.0]], [0, [1.9601057509065465, 1.0]], [1, [2.7615233790736804, 1.0]], [1, [13.275435317611747, 1.0]], [1, [0.5979039534357031, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.63199609]
bas 1, expnt(s) = [228.00744526]
bas 2, expnt(s) = [1426.90690224]
bas 3, expnt(s) = [0.58196829]
bas 4, expnt(s) = [50.09405812]
bas 5, expnt(s) = [13.29098249]
bas 6, expnt(s) = [1.96010575]
bas 7, expnt(s) = [2.76152338]
bas 8, expnt(s) = [13.27543532]
bas 9, expnt(s) = [0.59790395]
CPU time:        74.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14463200e+03 7.96213634e+02 2.28007445e+02 1.48243888e+02
 1.42690690e+03 5.86559068e+02 5.81968294e-01 1.68340851e+00
 5.00940581e+01 4.75723588e+01 1.32909825e+01 1.75866386e+01
 1.96010575e+00 4.18528128e+00 2.76152338e+00 1.03853299e+01
 1.32754353e+01 7.39256848e+01 5.97903953e-01 1.53381745e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966019277216182
cond(S) = 160.39965093515755
E1 = -183.13682347886055  E_coul = 55.01155110455706
init E= -128.125272374304
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742910058187432  LUMO = 2.64114127606296
  mo_energy =
[-3.25139714e+01 -1.85330899e+00 -7.42910058e-01 -7.42910058e-01
 -7.42910058e-01  2.64114128e+00  2.64114128e+00  2.64114128e+00
  2.83008674e+00  1.98435865e+01  1.98435865e+01  1.98435865e+01
  4.57883458e+01  3.36195627e+02  2.02818208e+03  7.32023246e+03]
E1 = -182.122472659253  E_coul = 53.92597044044585
cycle= 1 E= -128.196502218807  delta_E= -0.0712  |g|= 0.166  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262127
diis-c [-0.06871063  1.        ]
  HOMO = -0.808542843175099  LUMO = 2.58673843860954
  mo_energy =
[-3.27894822e+01 -1.92153308e+00 -8.08542843e-01 -8.08542843e-01
 -8.08542843e-01  2.58673844e+00  2.58673844e+00  2.58673844e+00
  2.77403700e+00  1.96516914e+01  1.96516914e+01  1.96516914e+01
  4.55505832e+01  3.35882908e+02  2.02782097e+03  7.31984716e+03]
E1 = -182.58943375731053  E_coul = 54.39126994791071
cycle= 2 E= -128.1981638094  delta_E= -0.00166  |g|= 0.0632  |ddm|= 0.065
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102906
diis-c [-4.06335091e-04  2.78561798e-01  7.21438202e-01]
  HOMO = -0.785582561872729  LUMO = 2.60742423728845
  mo_energy =
[-3.27140825e+01 -1.89768978e+00 -7.85582562e-01 -7.85582562e-01
 -7.85582562e-01  2.60742424e+00  2.60742424e+00  2.60742424e+00
  2.79475547e+00  1.97082511e+01  1.97082511e+01  1.97082511e+01
  4.56173725e+01  3.35965418e+02  2.02790890e+03  7.31993661e+03]
E1 = -182.45586261463077  E_coul = 54.25738724775063
cycle= 3 E= -128.19847536688  delta_E= -0.000312  |g|= 0.000673  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000822994
diis-c [-8.93227915e-08 -4.04991732e-03 -2.96611997e-03  1.00701604e+00]
  HOMO = -0.78579790909635  LUMO = 2.60726501178574
  mo_energy =
[-3.27146964e+01 -1.89798014e+00 -7.85797909e-01 -7.85797909e-01
 -7.85797909e-01  2.60726501e+00  2.60726501e+00  2.60726501e+00
  2.79452398e+00  1.97077717e+01  1.97077717e+01  1.97077717e+01
  4.56167912e+01  3.35964975e+02  2.02790860e+03  7.31993635e+03]
E1 = -182.4570539459289  E_coul = 54.25857854794146
cycle= 4 E= -128.198475397987  delta_E= -3.11e-08  |g|= 5.47e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.67206e-05
diis-c [-2.25361075e-10  5.11413086e-04 -7.52076189e-04 -1.70422585e-01
  1.17066325e+00]
  HOMO = -0.785782555280763  LUMO = 2.60727821334471
  mo_energy =
[-3.27146566e+01 -1.89797769e+00 -7.85782555e-01 -7.85782555e-01
 -7.85782555e-01  2.60727821e+00  2.60727821e+00  2.60727821e+00
  2.79452528e+00  1.97078024e+01  1.97078024e+01  1.97078024e+01
  4.56168235e+01  3.35965030e+02  2.02790868e+03  7.31993643e+03]
E1 = -182.4569866203195  E_coul = 54.258511221990524
cycle= 5 E= -128.198475398329  delta_E= -3.42e-10  |g|= 1.59e-06  |ddm|= 2.78e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4569866203195  E_coul = 54.258511221990524
  HOMO = -0.785782504130345  LUMO = 2.60727827565827
  mo_energy =
[-3.27146565e+01 -1.89797803e+00 -7.85782504e-01 -7.85782504e-01
 -7.85782504e-01  2.60727828e+00  2.60727828e+00  2.60727828e+00
  2.79452498e+00  1.97078024e+01  1.97078024e+01  1.97078024e+01
  4.56168235e+01  3.35965030e+02  2.02790868e+03  7.31993643e+03]
E1 = -182.4569866124394  E_coul = 54.25851121411018
Extra cycle  E= -128.198475398329  delta_E= -2.56e-13  |g|= 2.89e-07  |ddm|= 9.14e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14463200e+03 2.28007445e+02 1.42690690e+03 5.81968294e-01
 5.00940581e+01 1.32909825e+01 1.96010575e+00 2.76152338e+00
 1.32754353e+01 5.97903953e-01]
E = -128.19847539832924
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.63199609        1
[INPUT] 0    0    [1    /1   ]  228.00744526         1
[INPUT] 0    0    [1    /1   ]  1426.90690224        1
[INPUT] 0    0    [1    /1   ]  0.581968293613       1
[INPUT] 0    0    [1    /1   ]  50.0940581233        1
[INPUT] 0    0    [1    /1   ]  13.2909824865        1
[INPUT] 0    0    [1    /1   ]  1.96010575091        1
[INPUT] 1    0    [1    /1   ]  2.76152337907        1
[INPUT] 1    0    [1    /1   ]  13.2754353176        1
[INPUT] 1    0    [1    /1   ]  0.597903953436       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6319960926326, 1.0]], [0, [228.00744525973886, 1.0]], [0, [1426.9069022378667, 1.0]], [0, [0.5819682936128729, 1.0]], [0, [50.094058123285954, 1.0]], [0, [13.290982486509138, 1.0]], [0, [1.9601057509065465, 1.0]], [1, [2.7615233790736804, 1.0]], [1, [13.275435317611747, 1.0]], [1, [0.5979039534357031, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.63199609]
bas 1, expnt(s) = [228.00744526]
bas 2, expnt(s) = [1426.90690224]
bas 3, expnt(s) = [0.58196829]
bas 4, expnt(s) = [50.09405812]
bas 5, expnt(s) = [13.29098249]
bas 6, expnt(s) = [1.96010575]
bas 7, expnt(s) = [2.76152338]
bas 8, expnt(s) = [13.27543532]
bas 9, expnt(s) = [0.59790395]
CPU time:        74.87
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14463200e+03 7.96213634e+02 2.28007445e+02 1.48243888e+02
 1.42690690e+03 5.86559068e+02 5.81968294e-01 1.68340851e+00
 5.00940581e+01 4.75723588e+01 1.32909825e+01 1.75866386e+01
 1.96010575e+00 4.18528128e+00 2.76152338e+00 1.03853299e+01
 1.32754353e+01 7.39256848e+01 5.97903953e-01 1.53381745e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966019277216182
cond(S) = 160.39965093515755
E1 = -183.13682347886055  E_coul = 55.01155110455706
init E= -128.125272374304
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742910058187432  LUMO = 2.64114127606296
  mo_energy =
[-3.25139714e+01 -1.85330899e+00 -7.42910058e-01 -7.42910058e-01
 -7.42910058e-01  2.64114128e+00  2.64114128e+00  2.64114128e+00
  2.83008674e+00  1.98435865e+01  1.98435865e+01  1.98435865e+01
  4.57883458e+01  3.36195627e+02  2.02818208e+03  7.32023246e+03]
E1 = -182.122472659253  E_coul = 53.92597044044585
cycle= 1 E= -128.196502218807  delta_E= -0.0712  |g|= 0.166  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.262127
diis-c [-0.06871063  1.        ]
  HOMO = -0.808542843175099  LUMO = 2.58673843860954
  mo_energy =
[-3.27894822e+01 -1.92153308e+00 -8.08542843e-01 -8.08542843e-01
 -8.08542843e-01  2.58673844e+00  2.58673844e+00  2.58673844e+00
  2.77403700e+00  1.96516914e+01  1.96516914e+01  1.96516914e+01
  4.55505832e+01  3.35882908e+02  2.02782097e+03  7.31984716e+03]
E1 = -182.58943375731053  E_coul = 54.39126994791071
cycle= 2 E= -128.1981638094  delta_E= -0.00166  |g|= 0.0632  |ddm|= 0.065
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102906
diis-c [-4.06335091e-04  2.78561798e-01  7.21438202e-01]
  HOMO = -0.785582561872729  LUMO = 2.60742423728845
  mo_energy =
[-3.27140825e+01 -1.89768978e+00 -7.85582562e-01 -7.85582562e-01
 -7.85582562e-01  2.60742424e+00  2.60742424e+00  2.60742424e+00
  2.79475547e+00  1.97082511e+01  1.97082511e+01  1.97082511e+01
  4.56173725e+01  3.35965418e+02  2.02790890e+03  7.31993661e+03]
E1 = -182.45586261463077  E_coul = 54.25738724775063
cycle= 3 E= -128.19847536688  delta_E= -0.000312  |g|= 0.000673  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000822994
diis-c [-8.93227915e-08 -4.04991732e-03 -2.96611997e-03  1.00701604e+00]
  HOMO = -0.78579790909635  LUMO = 2.60726501178574
  mo_energy =
[-3.27146964e+01 -1.89798014e+00 -7.85797909e-01 -7.85797909e-01
 -7.85797909e-01  2.60726501e+00  2.60726501e+00  2.60726501e+00
  2.79452398e+00  1.97077717e+01  1.97077717e+01  1.97077717e+01
  4.56167912e+01  3.35964975e+02  2.02790860e+03  7.31993635e+03]
E1 = -182.4570539459289  E_coul = 54.25857854794146
cycle= 4 E= -128.198475397987  delta_E= -3.11e-08  |g|= 5.47e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.67206e-05
diis-c [-2.25361075e-10  5.11413086e-04 -7.52076189e-04 -1.70422585e-01
  1.17066325e+00]
  HOMO = -0.785782555280763  LUMO = 2.60727821334471
  mo_energy =
[-3.27146566e+01 -1.89797769e+00 -7.85782555e-01 -7.85782555e-01
 -7.85782555e-01  2.60727821e+00  2.60727821e+00  2.60727821e+00
  2.79452528e+00  1.97078024e+01  1.97078024e+01  1.97078024e+01
  4.56168235e+01  3.35965030e+02  2.02790868e+03  7.31993643e+03]
E1 = -182.4569866203195  E_coul = 54.258511221990524
cycle= 5 E= -128.198475398329  delta_E= -3.42e-10  |g|= 1.59e-06  |ddm|= 2.78e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4569866203195  E_coul = 54.258511221990524
  HOMO = -0.785782504130345  LUMO = 2.60727827565827
  mo_energy =
[-3.27146565e+01 -1.89797803e+00 -7.85782504e-01 -7.85782504e-01
 -7.85782504e-01  2.60727828e+00  2.60727828e+00  2.60727828e+00
  2.79452498e+00  1.97078024e+01  1.97078024e+01  1.97078024e+01
  4.56168235e+01  3.35965030e+02  2.02790868e+03  7.31993643e+03]
E1 = -182.4569866124394  E_coul = 54.25851121411018
Extra cycle  E= -128.198475398329  delta_E= -2.56e-13  |g|= 2.89e-07  |ddm|= 9.14e-07
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.39965093515755
E1 = -182.4569866124394  E_coul = 54.25851121411018
init E= -128.198475398329
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785782489558218  LUMO = 2.60727828718066
  mo_energy =
[-3.27146565e+01 -1.89797808e+00 -7.85782490e-01 -7.85782490e-01
 -7.85782490e-01  2.60727829e+00  2.60727829e+00  2.60727829e+00
  2.79452493e+00  1.97078024e+01  1.97078024e+01  1.97078024e+01
  4.56168235e+01  3.35965030e+02  2.02790868e+03  7.31993643e+03]
E1 = -182.45698661762987  E_coul = 54.25851121930046
cycle= 1 E= -128.198475398329  delta_E= -1.71e-13  |g|= 5.24e-08  |ddm|= 1.63e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45698661762987  E_coul = 54.25851121930046
  HOMO = -0.785782486329777  LUMO = 2.60727828981819
  mo_energy =
[-3.27146565e+01 -1.89797809e+00 -7.85782486e-01 -7.85782486e-01
 -7.85782486e-01  2.60727829e+00  2.60727829e+00  2.60727829e+00
  2.79452492e+00  1.97078024e+01  1.97078024e+01  1.97078024e+01
  4.56168235e+01  3.35965030e+02  2.02790868e+03  7.31993643e+03]
E1 = -182.45698661665733  E_coul = 54.258511218328
Extra cycle  E= -128.198475398329  delta_E= 8.53e-14  |g|= 9.48e-09  |ddm|= 2.92e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14463200e+03 2.28007445e+02 1.42690690e+03 5.81968294e-01
 5.00940581e+01 1.32909825e+01 1.96010575e+00 2.76152338e+00
 1.32754353e+01 5.97903953e-01]
grad_E = [-1.00564196e-05  3.42870192e-05  3.30963231e-05 -1.26892414e-03
 -1.83699730e-04  2.93409919e-04  1.58904128e-03 -4.29533511e-03
  3.31178481e-04  1.51616895e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.63098348        1
[INPUT] 0    0    [1    /1   ]  227.971946241        1
[INPUT] 0    0    [1    /1   ]  1426.91296602        1
[INPUT] 0    0    [1    /1   ]  0.577302159496       1
[INPUT] 0    0    [1    /1   ]  50.1240126497        1
[INPUT] 0    0    [1    /1   ]  13.2853376478        1
[INPUT] 0    0    [1    /1   ]  1.93601731857        1
[INPUT] 1    0    [1    /1   ]  2.76823440172        1
[INPUT] 1    0    [1    /1   ]  13.275049581         1
[INPUT] 1    0    [1    /1   ]  0.599187838241       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.630983478554, 1.0]], [0, [227.97194624091014, 1.0]], [0, [1426.912966018468, 1.0]], [0, [0.5773021594957056, 1.0]], [0, [50.12401264966675, 1.0]], [0, [13.285337647849818, 1.0]], [0, [1.9360173185748433, 1.0]], [1, [2.7682344017157243, 1.0]], [1, [13.27504958099232, 1.0]], [1, [0.5991878382405065, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.63098348]
bas 1, expnt(s) = [227.97194624]
bas 2, expnt(s) = [1426.91296602]
bas 3, expnt(s) = [0.57730216]
bas 4, expnt(s) = [50.12401265]
bas 5, expnt(s) = [13.28533765]
bas 6, expnt(s) = [1.93601732]
bas 7, expnt(s) = [2.7682344]
bas 8, expnt(s) = [13.27504958]
bas 9, expnt(s) = [0.59918784]
CPU time:        77.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14463098e+03 7.96213352e+02 2.27971946e+02 1.48226577e+02
 1.42691297e+03 5.86560938e+02 5.77302159e-01 1.67327534e+00
 5.01240126e+01 4.75936922e+01 1.32853376e+01 1.75810363e+01
 1.93601732e+00 4.14664592e+00 2.76823440e+00 1.04168874e+01
 1.32750496e+01 7.39229998e+01 5.99187838e-01 1.53793553e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965848754432693
cond(S) = 160.2802112963829
E1 = -183.1368462827158  E_coul = 55.011415460129236
init E= -128.125430822587
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742885705020324  LUMO = 2.64907692941158
  mo_energy =
[-3.25138580e+01 -1.85356079e+00 -7.42885705e-01 -7.42885705e-01
 -7.42885705e-01  2.64907693e+00  2.64907693e+00  2.64907693e+00
  2.78340053e+00  1.98679630e+01  1.98679630e+01  1.98679630e+01
  4.56688745e+01  3.36132851e+02  2.02808430e+03  7.32012760e+03]
E1 = -182.1286415298437  E_coul = 53.932077594080354
cycle= 1 E= -128.196563935763  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261044
diis-c [-0.06814418  1.        ]
  HOMO = -0.808122419671352  LUMO = 2.59488607840123
  mo_energy =
[-3.27880172e+01 -1.92122114e+00 -8.08122420e-01 -8.08122420e-01
 -8.08122420e-01  2.59488608e+00  2.59488608e+00  2.59488608e+00
  2.72874172e+00  1.96770394e+01  1.96770394e+01  1.96770394e+01
  4.54323876e+01  3.35821635e+02  2.02772484e+03  7.31974397e+03]
E1 = -182.59287616130737  E_coul = 54.39466877362148
cycle= 2 E= -128.198207387686  delta_E= -0.00164  |g|= 0.0628  |ddm|= 0.0646
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1023
diis-c [-4.04138410e-04  2.78182639e-01  7.21817361e-01]
  HOMO = -0.785280954374985  LUMO = 2.61551547845657
  mo_energy =
[-3.27130177e+01 -1.89751361e+00 -7.85280954e-01 -7.85280954e-01
 -7.85280954e-01  2.61551548e+00  2.61551548e+00  2.61551548e+00
  2.74909284e+00  1.97332939e+01  1.97332939e+01  1.97332939e+01
  4.54988289e+01  3.35903698e+02  2.02781229e+03  7.31983291e+03]
E1 = -182.46008869138748  E_coul = 54.26157353157127
cycle= 3 E= -128.198515159816  delta_E= -0.000308  |g|= 0.000681  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000849559
diis-c [-8.12694027e-08 -3.94568371e-03 -2.30800729e-03  1.00625369e+00]
  HOMO = -0.785503693333569  LUMO = 2.61534880553406
  mo_energy =
[-3.27136537e+01 -1.89780841e+00 -7.85503693e-01 -7.85503693e-01
 -7.85503693e-01  2.61534881e+00  2.61534881e+00  2.61534881e+00
  2.74886025e+00  1.97327972e+01  1.97327972e+01  1.97327972e+01
  4.54982291e+01  3.35903226e+02  2.02781195e+03  7.31983261e+03]
E1 = -182.46131940559255  E_coul = 54.26280421377136
cycle= 4 E= -128.198515191821  delta_E= -3.2e-08  |g|= 5.25e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.33575e-05
diis-c [-2.15908506e-10  5.08891414e-04 -8.06795146e-04 -1.71048951e-01
  1.17134685e+00]
  HOMO = -0.785488813808318  LUMO = 2.61536164300662
  mo_energy =
[-3.27136153e+01 -1.89780593e+00 -7.85488814e-01 -7.85488814e-01
 -7.85488814e-01  2.61536164e+00  2.61536164e+00  2.61536164e+00
  2.74886157e+00  1.97328269e+01  1.97328269e+01  1.97328269e+01
  4.54982603e+01  3.35903279e+02  2.02781202e+03  7.31983269e+03]
E1 = -182.4612548050699  E_coul = 54.26273961293277
cycle= 5 E= -128.198515192137  delta_E= -3.16e-10  |g|= 1.54e-06  |ddm|= 2.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4612548050699  E_coul = 54.26273961293277
  HOMO = -0.785488760750483  LUMO = 2.61536170626201
  mo_energy =
[-3.27136153e+01 -1.89780626e+00 -7.85488761e-01 -7.85488761e-01
 -7.85488761e-01  2.61536171e+00  2.61536171e+00  2.61536171e+00
  2.74886129e+00  1.97328269e+01  1.97328269e+01  1.97328269e+01
  4.54982603e+01  3.35903279e+02  2.02781202e+03  7.31983269e+03]
E1 = -182.4612548118096  E_coul = 54.262739619672196
Extra cycle  E= -128.198515192137  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.93e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14463098e+03 2.27971946e+02 1.42691297e+03 5.77302159e-01
 5.01240126e+01 1.32853376e+01 1.93601732e+00 2.76823440e+00
 1.32750496e+01 5.99187838e-01]
E = -128.1985151921374
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.63098348        1
[INPUT] 0    0    [1    /1   ]  227.971946241        1
[INPUT] 0    0    [1    /1   ]  1426.91296602        1
[INPUT] 0    0    [1    /1   ]  0.577302159496       1
[INPUT] 0    0    [1    /1   ]  50.1240126497        1
[INPUT] 0    0    [1    /1   ]  13.2853376478        1
[INPUT] 0    0    [1    /1   ]  1.93601731857        1
[INPUT] 1    0    [1    /1   ]  2.76823440172        1
[INPUT] 1    0    [1    /1   ]  13.275049581         1
[INPUT] 1    0    [1    /1   ]  0.599187838241       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.630983478554, 1.0]], [0, [227.97194624091014, 1.0]], [0, [1426.912966018468, 1.0]], [0, [0.5773021594957056, 1.0]], [0, [50.12401264966675, 1.0]], [0, [13.285337647849818, 1.0]], [0, [1.9360173185748433, 1.0]], [1, [2.7682344017157243, 1.0]], [1, [13.27504958099232, 1.0]], [1, [0.5991878382405065, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.63098348]
bas 1, expnt(s) = [227.97194624]
bas 2, expnt(s) = [1426.91296602]
bas 3, expnt(s) = [0.57730216]
bas 4, expnt(s) = [50.12401265]
bas 5, expnt(s) = [13.28533765]
bas 6, expnt(s) = [1.93601732]
bas 7, expnt(s) = [2.7682344]
bas 8, expnt(s) = [13.27504958]
bas 9, expnt(s) = [0.59918784]
CPU time:        77.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14463098e+03 7.96213352e+02 2.27971946e+02 1.48226577e+02
 1.42691297e+03 5.86560938e+02 5.77302159e-01 1.67327534e+00
 5.01240126e+01 4.75936922e+01 1.32853376e+01 1.75810363e+01
 1.93601732e+00 4.14664592e+00 2.76823440e+00 1.04168874e+01
 1.32750496e+01 7.39229998e+01 5.99187838e-01 1.53793553e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965848754432693
cond(S) = 160.2802112963829
E1 = -183.1368462827158  E_coul = 55.011415460129236
init E= -128.125430822587
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742885705020324  LUMO = 2.64907692941158
  mo_energy =
[-3.25138580e+01 -1.85356079e+00 -7.42885705e-01 -7.42885705e-01
 -7.42885705e-01  2.64907693e+00  2.64907693e+00  2.64907693e+00
  2.78340053e+00  1.98679630e+01  1.98679630e+01  1.98679630e+01
  4.56688745e+01  3.36132851e+02  2.02808430e+03  7.32012760e+03]
E1 = -182.1286415298437  E_coul = 53.932077594080354
cycle= 1 E= -128.196563935763  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261044
diis-c [-0.06814418  1.        ]
  HOMO = -0.808122419671352  LUMO = 2.59488607840123
  mo_energy =
[-3.27880172e+01 -1.92122114e+00 -8.08122420e-01 -8.08122420e-01
 -8.08122420e-01  2.59488608e+00  2.59488608e+00  2.59488608e+00
  2.72874172e+00  1.96770394e+01  1.96770394e+01  1.96770394e+01
  4.54323876e+01  3.35821635e+02  2.02772484e+03  7.31974397e+03]
E1 = -182.59287616130737  E_coul = 54.39466877362148
cycle= 2 E= -128.198207387686  delta_E= -0.00164  |g|= 0.0628  |ddm|= 0.0646
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1023
diis-c [-4.04138410e-04  2.78182639e-01  7.21817361e-01]
  HOMO = -0.785280954374985  LUMO = 2.61551547845657
  mo_energy =
[-3.27130177e+01 -1.89751361e+00 -7.85280954e-01 -7.85280954e-01
 -7.85280954e-01  2.61551548e+00  2.61551548e+00  2.61551548e+00
  2.74909284e+00  1.97332939e+01  1.97332939e+01  1.97332939e+01
  4.54988289e+01  3.35903698e+02  2.02781229e+03  7.31983291e+03]
E1 = -182.46008869138748  E_coul = 54.26157353157127
cycle= 3 E= -128.198515159816  delta_E= -0.000308  |g|= 0.000681  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000849559
diis-c [-8.12694027e-08 -3.94568371e-03 -2.30800729e-03  1.00625369e+00]
  HOMO = -0.785503693333569  LUMO = 2.61534880553406
  mo_energy =
[-3.27136537e+01 -1.89780841e+00 -7.85503693e-01 -7.85503693e-01
 -7.85503693e-01  2.61534881e+00  2.61534881e+00  2.61534881e+00
  2.74886025e+00  1.97327972e+01  1.97327972e+01  1.97327972e+01
  4.54982291e+01  3.35903226e+02  2.02781195e+03  7.31983261e+03]
E1 = -182.46131940559255  E_coul = 54.26280421377136
cycle= 4 E= -128.198515191821  delta_E= -3.2e-08  |g|= 5.25e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.33575e-05
diis-c [-2.15908506e-10  5.08891414e-04 -8.06795146e-04 -1.71048951e-01
  1.17134685e+00]
  HOMO = -0.785488813808318  LUMO = 2.61536164300662
  mo_energy =
[-3.27136153e+01 -1.89780593e+00 -7.85488814e-01 -7.85488814e-01
 -7.85488814e-01  2.61536164e+00  2.61536164e+00  2.61536164e+00
  2.74886157e+00  1.97328269e+01  1.97328269e+01  1.97328269e+01
  4.54982603e+01  3.35903279e+02  2.02781202e+03  7.31983269e+03]
E1 = -182.4612548050699  E_coul = 54.26273961293277
cycle= 5 E= -128.198515192137  delta_E= -3.16e-10  |g|= 1.54e-06  |ddm|= 2.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4612548050699  E_coul = 54.26273961293277
  HOMO = -0.785488760750483  LUMO = 2.61536170626201
  mo_energy =
[-3.27136153e+01 -1.89780626e+00 -7.85488761e-01 -7.85488761e-01
 -7.85488761e-01  2.61536171e+00  2.61536171e+00  2.61536171e+00
  2.74886129e+00  1.97328269e+01  1.97328269e+01  1.97328269e+01
  4.54982603e+01  3.35903279e+02  2.02781202e+03  7.31983269e+03]
E1 = -182.4612548118096  E_coul = 54.262739619672196
Extra cycle  E= -128.198515192137  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.93e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.2802112963829
E1 = -182.4612548118096  E_coul = 54.262739619672196
init E= -128.198515192137
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785488745296383  LUMO = 2.61536171864035
  mo_energy =
[-3.27136152e+01 -1.89780631e+00 -7.85488745e-01 -7.85488745e-01
 -7.85488745e-01  2.61536172e+00  2.61536172e+00  2.61536172e+00
  2.74886124e+00  1.97328269e+01  1.97328269e+01  1.97328269e+01
  4.54982603e+01  3.35903279e+02  2.02781202e+03  7.31983269e+03]
E1 = -182.46125481471643  E_coul = 54.262739622579126
cycle= 1 E= -128.198515192137  delta_E= 8.53e-14  |g|= 5.13e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46125481471643  E_coul = 54.262739622579126
  HOMO = -0.785488742240647  LUMO = 2.6153617211327
  mo_energy =
[-3.27136152e+01 -1.89780632e+00 -7.85488742e-01 -7.85488742e-01
 -7.85488742e-01  2.61536172e+00  2.61536172e+00  2.61536172e+00
  2.74886123e+00  1.97328269e+01  1.97328269e+01  1.97328269e+01
  4.54982603e+01  3.35903279e+02  2.02781202e+03  7.31983269e+03]
E1 = -182.46125481525235  E_coul = 54.26273962311492
Extra cycle  E= -128.198515192137  delta_E= -1.14e-13  |g|= 9.29e-09  |ddm|= 2.88e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14463098e+03 2.27971946e+02 1.42691297e+03 5.77302159e-01
 5.01240126e+01 1.32853376e+01 1.93601732e+00 2.76823440e+00
 1.32750496e+01 5.99187838e-01]
grad_E = [-1.00315451e-05  1.94369431e-05  3.32669680e-05 -7.47510872e-05
 -3.63997906e-05  5.64869625e-05  2.13512716e-04 -8.26729648e-04
 -1.26231061e-04  3.73639364e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61621868        1
[INPUT] 0    0    [1    /1   ]  227.551817882        1
[INPUT] 0    0    [1    /1   ]  1426.99859403        1
[INPUT] 0    0    [1    /1   ]  0.575990468239       1
[INPUT] 0    0    [1    /1   ]  50.0647345922        1
[INPUT] 0    0    [1    /1   ]  13.2740020811        1
[INPUT] 0    0    [1    /1   ]  1.93013578441        1
[INPUT] 1    0    [1    /1   ]  2.77004418691        1
[INPUT] 1    0    [1    /1   ]  13.2770967596        1
[INPUT] 1    0    [1    /1   ]  0.599512163913       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6162186828283, 1.0]], [0, [227.55181788181042, 1.0]], [0, [1426.9985940347415, 1.0]], [0, [0.575990468238585, 1.0]], [0, [50.06473459223892, 1.0]], [0, [13.27400208113883, 1.0]], [0, [1.930135784413708, 1.0]], [1, [2.770044186914857, 1.0]], [1, [13.277096759565731, 1.0]], [1, [0.5995121639134626, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61621868]
bas 1, expnt(s) = [227.55181788]
bas 2, expnt(s) = [1426.99859403]
bas 3, expnt(s) = [0.57599047]
bas 4, expnt(s) = [50.06473459]
bas 5, expnt(s) = [13.27400208]
bas 6, expnt(s) = [1.93013578]
bas 7, expnt(s) = [2.77004419]
bas 8, expnt(s) = [13.27709676]
bas 9, expnt(s) = [0.59951216]
CPU time:        80.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461622e+03 7.96209241e+02 2.27551818e+02 1.48021655e+02
 1.42699859e+03 5.86587337e+02 5.75990468e-01 1.67042314e+00
 5.00647346e+01 4.75514717e+01 1.32740021e+01 1.75697845e+01
 1.93013578e+00 4.13719433e+00 2.77004419e+00 1.04254009e+01
 1.32770968e+01 7.39372499e+01 5.99512164e-01 1.53897616e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965808849123688
cond(S) = 160.1142530204493
E1 = -183.1368945254307  E_coul = 55.011379035122665
init E= -128.125515490308
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742880876011113  LUMO = 2.65111233004384
  mo_energy =
[-3.25138252e+01 -1.85362371e+00 -7.42880876e-01 -7.42880876e-01
 -7.42880876e-01  2.65111233e+00  2.65111233e+00  2.65111233e+00
  2.77119533e+00  1.98767182e+01  1.98767182e+01  1.98767182e+01
  4.55812093e+01  3.35537501e+02  2.02660634e+03  7.31854587e+03]
E1 = -182.129893130433  E_coul = 53.93332092099186
cycle= 1 E= -128.196572209441  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260873
diis-c [-0.06805485  1.        ]
  HOMO = -0.808038330837246  LUMO = 2.5969547278084
  mo_energy =
[-3.27877143e+01 -1.92115556e+00 -8.08038331e-01 -8.08038331e-01
 -8.08038331e-01  2.59695473e+00  2.59695473e+00  2.59695473e+00
  2.71688425e+00  1.96859755e+01  1.96859755e+01  1.96859755e+01
  4.53450654e+01  3.35226614e+02  2.02624715e+03  7.31816247e+03]
E1 = -182.59355576381748  E_coul = 54.39534386551652
cycle= 2 E= -128.198211898301  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102173
diis-c [-4.04793966e-04  2.78049429e-01  7.21950571e-01]
  HOMO = -0.785220109041042  LUMO = 2.61757628840545
  mo_energy =
[-3.27127931e+01 -1.89747498e+00 -7.85220109e-01 -7.85220109e-01
 -7.85220109e-01  2.61757629e+00  2.61757629e+00  2.61757629e+00
  2.73714659e+00  1.97421734e+01  1.97421734e+01  1.97421734e+01
  4.54114195e+01  3.35308579e+02  2.02633450e+03  7.31825131e+03]
E1 = -182.46092588721731  E_coul = 54.262407016701545
cycle= 3 E= -128.198518870516  delta_E= -0.000307  |g|= 0.000685  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000861504
diis-c [-7.85482565e-08 -3.90931137e-03 -2.05778940e-03  1.00596710e+00]
  HOMO = -0.785446013296848  LUMO = 2.61740658283026
  mo_energy =
[-3.27134385e+01 -1.89777179e+00 -7.85446013e-01 -7.85446013e-01
 -7.85446013e-01  2.61740658e+00  2.61740658e+00  2.61740658e+00
  2.73691303e+00  1.97416694e+01  1.97416694e+01  1.97416694e+01
  4.54108118e+01  3.35308096e+02  2.02633415e+03  7.31825099e+03]
E1 = -182.46217324414303  E_coul = 54.26365434119409
cycle= 4 E= -128.198518902949  delta_E= -3.24e-08  |g|= 5.17e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.20213e-05
diis-c [-2.13241982e-10  5.06288153e-04 -8.27319845e-04 -1.70764395e-01
  1.17108543e+00]
  HOMO = -0.785431340042803  LUMO = 2.61741925413446
  mo_energy =
[-3.27134007e+01 -1.89776931e+00 -7.85431340e-01 -7.85431340e-01
 -7.85431340e-01  2.61741925e+00  2.61741925e+00  2.61741925e+00
  2.73691436e+00  1.97416986e+01  1.97416986e+01  1.97416986e+01
  4.54108425e+01  3.35308148e+02  2.02633422e+03  7.31825107e+03]
E1 = -182.46210968830687  E_coul = 54.2635907850522
cycle= 5 E= -128.198518903255  delta_E= -3.06e-10  |g|= 1.53e-06  |ddm|= 2.63e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46210968830687  E_coul = 54.2635907850522
  HOMO = -0.785431283084257  LUMO = 2.6174193204772
  mo_energy =
[-3.27134006e+01 -1.89776963e+00 -7.85431283e-01 -7.85431283e-01
 -7.85431283e-01  2.61741932e+00  2.61741932e+00  2.61741932e+00
  2.73691409e+00  1.97416986e+01  1.97416986e+01  1.97416986e+01
  4.54108425e+01  3.35308148e+02  2.02633422e+03  7.31825107e+03]
E1 = -182.462109682526  E_coul = 54.263590779270984
Extra cycle  E= -128.198518903255  delta_E= -3.69e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461622e+03 2.27551818e+02 1.42699859e+03 5.75990468e-01
 5.00647346e+01 1.32740021e+01 1.93013578e+00 2.77004419e+00
 1.32770968e+01 5.99512164e-01]
E = -128.19851890325504
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:39 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61621868        1
[INPUT] 0    0    [1    /1   ]  227.551817882        1
[INPUT] 0    0    [1    /1   ]  1426.99859403        1
[INPUT] 0    0    [1    /1   ]  0.575990468239       1
[INPUT] 0    0    [1    /1   ]  50.0647345922        1
[INPUT] 0    0    [1    /1   ]  13.2740020811        1
[INPUT] 0    0    [1    /1   ]  1.93013578441        1
[INPUT] 1    0    [1    /1   ]  2.77004418691        1
[INPUT] 1    0    [1    /1   ]  13.2770967596        1
[INPUT] 1    0    [1    /1   ]  0.599512163913       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6162186828283, 1.0]], [0, [227.55181788181042, 1.0]], [0, [1426.9985940347415, 1.0]], [0, [0.575990468238585, 1.0]], [0, [50.06473459223892, 1.0]], [0, [13.27400208113883, 1.0]], [0, [1.930135784413708, 1.0]], [1, [2.770044186914857, 1.0]], [1, [13.277096759565731, 1.0]], [1, [0.5995121639134626, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61621868]
bas 1, expnt(s) = [227.55181788]
bas 2, expnt(s) = [1426.99859403]
bas 3, expnt(s) = [0.57599047]
bas 4, expnt(s) = [50.06473459]
bas 5, expnt(s) = [13.27400208]
bas 6, expnt(s) = [1.93013578]
bas 7, expnt(s) = [2.77004419]
bas 8, expnt(s) = [13.27709676]
bas 9, expnt(s) = [0.59951216]
CPU time:        80.63
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461622e+03 7.96209241e+02 2.27551818e+02 1.48021655e+02
 1.42699859e+03 5.86587337e+02 5.75990468e-01 1.67042314e+00
 5.00647346e+01 4.75514717e+01 1.32740021e+01 1.75697845e+01
 1.93013578e+00 4.13719433e+00 2.77004419e+00 1.04254009e+01
 1.32770968e+01 7.39372499e+01 5.99512164e-01 1.53897616e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965808849123688
cond(S) = 160.1142530204493
E1 = -183.1368945254307  E_coul = 55.011379035122665
init E= -128.125515490308
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742880876011113  LUMO = 2.65111233004384
  mo_energy =
[-3.25138252e+01 -1.85362371e+00 -7.42880876e-01 -7.42880876e-01
 -7.42880876e-01  2.65111233e+00  2.65111233e+00  2.65111233e+00
  2.77119533e+00  1.98767182e+01  1.98767182e+01  1.98767182e+01
  4.55812093e+01  3.35537501e+02  2.02660634e+03  7.31854587e+03]
E1 = -182.129893130433  E_coul = 53.93332092099186
cycle= 1 E= -128.196572209441  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260873
diis-c [-0.06805485  1.        ]
  HOMO = -0.808038330837246  LUMO = 2.5969547278084
  mo_energy =
[-3.27877143e+01 -1.92115556e+00 -8.08038331e-01 -8.08038331e-01
 -8.08038331e-01  2.59695473e+00  2.59695473e+00  2.59695473e+00
  2.71688425e+00  1.96859755e+01  1.96859755e+01  1.96859755e+01
  4.53450654e+01  3.35226614e+02  2.02624715e+03  7.31816247e+03]
E1 = -182.59355576381748  E_coul = 54.39534386551652
cycle= 2 E= -128.198211898301  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102173
diis-c [-4.04793966e-04  2.78049429e-01  7.21950571e-01]
  HOMO = -0.785220109041042  LUMO = 2.61757628840545
  mo_energy =
[-3.27127931e+01 -1.89747498e+00 -7.85220109e-01 -7.85220109e-01
 -7.85220109e-01  2.61757629e+00  2.61757629e+00  2.61757629e+00
  2.73714659e+00  1.97421734e+01  1.97421734e+01  1.97421734e+01
  4.54114195e+01  3.35308579e+02  2.02633450e+03  7.31825131e+03]
E1 = -182.46092588721731  E_coul = 54.262407016701545
cycle= 3 E= -128.198518870516  delta_E= -0.000307  |g|= 0.000685  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000861504
diis-c [-7.85482565e-08 -3.90931137e-03 -2.05778940e-03  1.00596710e+00]
  HOMO = -0.785446013296848  LUMO = 2.61740658283026
  mo_energy =
[-3.27134385e+01 -1.89777179e+00 -7.85446013e-01 -7.85446013e-01
 -7.85446013e-01  2.61740658e+00  2.61740658e+00  2.61740658e+00
  2.73691303e+00  1.97416694e+01  1.97416694e+01  1.97416694e+01
  4.54108118e+01  3.35308096e+02  2.02633415e+03  7.31825099e+03]
E1 = -182.46217324414303  E_coul = 54.26365434119409
cycle= 4 E= -128.198518902949  delta_E= -3.24e-08  |g|= 5.17e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.20213e-05
diis-c [-2.13241982e-10  5.06288153e-04 -8.27319845e-04 -1.70764395e-01
  1.17108543e+00]
  HOMO = -0.785431340042803  LUMO = 2.61741925413446
  mo_energy =
[-3.27134007e+01 -1.89776931e+00 -7.85431340e-01 -7.85431340e-01
 -7.85431340e-01  2.61741925e+00  2.61741925e+00  2.61741925e+00
  2.73691436e+00  1.97416986e+01  1.97416986e+01  1.97416986e+01
  4.54108425e+01  3.35308148e+02  2.02633422e+03  7.31825107e+03]
E1 = -182.46210968830687  E_coul = 54.2635907850522
cycle= 5 E= -128.198518903255  delta_E= -3.06e-10  |g|= 1.53e-06  |ddm|= 2.63e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46210968830687  E_coul = 54.2635907850522
  HOMO = -0.785431283084257  LUMO = 2.6174193204772
  mo_energy =
[-3.27134006e+01 -1.89776963e+00 -7.85431283e-01 -7.85431283e-01
 -7.85431283e-01  2.61741932e+00  2.61741932e+00  2.61741932e+00
  2.73691409e+00  1.97416986e+01  1.97416986e+01  1.97416986e+01
  4.54108425e+01  3.35308148e+02  2.02633422e+03  7.31825107e+03]
E1 = -182.462109682526  E_coul = 54.263590779270984
Extra cycle  E= -128.198518903255  delta_E= -3.69e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.1142530204493
E1 = -182.462109682526  E_coul = 54.263590779270984
init E= -128.198518903255
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785431268447219  LUMO = 2.61741933212825
  mo_energy =
[-3.27134006e+01 -1.89776968e+00 -7.85431268e-01 -7.85431268e-01
 -7.85431268e-01  2.61741933e+00  2.61741933e+00  2.61741933e+00
  2.73691404e+00  1.97416986e+01  1.97416986e+01  1.97416986e+01
  4.54108425e+01  3.35308148e+02  2.02633422e+03  7.31825107e+03]
E1 = -182.46210969136177  E_coul = 54.26359078810688
cycle= 1 E= -128.198518903255  delta_E= 1.42e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46210969136177  E_coul = 54.26359078810688
  HOMO = -0.785431264978992  LUMO = 2.61741933499497
  mo_energy =
[-3.27134006e+01 -1.89776969e+00 -7.85431265e-01 -7.85431265e-01
 -7.85431265e-01  2.61741933e+00  2.61741933e+00  2.61741933e+00
  2.73691403e+00  1.97416986e+01  1.97416986e+01  1.97416986e+01
  4.54108425e+01  3.35308148e+02  2.02633422e+03  7.31825107e+03]
E1 = -182.46210968970217  E_coul = 54.263590786447125
Extra cycle  E= -128.198518903255  delta_E= -1.42e-13  |g|= 9.31e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461622e+03 2.27551818e+02 1.42699859e+03 5.75990468e-01
 5.00647346e+01 1.32740021e+01 1.93013578e+00 2.77004419e+00
 1.32770968e+01 5.99512164e-01]
grad_E = [-9.96131207e-06  9.12718006e-06  3.36488946e-05  6.98771759e-05
 -2.66425371e-06 -4.57832878e-06 -3.75096863e-05 -3.18623114e-05
 -2.20947552e-04  2.93778606e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61152553        1
[INPUT] 0    0    [1    /1   ]  227.418031187        1
[INPUT] 0    0    [1    /1   ]  1427.02583115        1
[INPUT] 0    0    [1    /1   ]  0.575924209043       1
[INPUT] 0    0    [1    /1   ]  50.0457536104        1
[INPUT] 0    0    [1    /1   ]  13.2714078775        1
[INPUT] 0    0    [1    /1   ]  1.93006403699        1
[INPUT] 1    0    [1    /1   ]  2.77022512425        1
[INPUT] 1    0    [1    /1   ]  13.2779703799        1
[INPUT] 1    0    [1    /1   ]  0.599538527681       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6115255298187, 1.0]], [0, [227.41803118716845, 1.0]], [0, [1427.0258311492703, 1.0]], [0, [0.5759242090431943, 1.0]], [0, [50.045753610418075, 1.0]], [0, [13.27140787746812, 1.0]], [0, [1.9300640369935969, 1.0]], [1, [2.77022512424646, 1.0]], [1, [13.277970379900632, 1.0]], [1, [0.599538527680684, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61152553]
bas 1, expnt(s) = [227.41803119]
bas 2, expnt(s) = [1427.02583115]
bas 3, expnt(s) = [0.57592421]
bas 4, expnt(s) = [50.04575361]
bas 5, expnt(s) = [13.27140788]
bas 6, expnt(s) = [1.93006404]
bas 7, expnt(s) = [2.77022512]
bas 8, expnt(s) = [13.27797038]
bas 9, expnt(s) = [0.59953853]
CPU time:        82.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461153e+03 7.96207934e+02 2.27418031e+02 1.47956380e+02
 1.42702583e+03 5.86595734e+02 5.75924209e-01 1.67027902e+00
 5.00457536e+01 4.75379500e+01 1.32714079e+01 1.75672091e+01
 1.93006404e+00 4.13707899e+00 2.77022512e+00 1.04262521e+01
 1.32779704e+01 7.39433312e+01 5.99538528e-01 1.53906075e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965805103668991
cond(S) = 160.07137272690076
E1 = -183.1369153700971  E_coul = 55.01138604589002
init E= -128.125529324207
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742880687869419  LUMO = 2.65128600973379
  mo_energy =
[-3.25138208e+01 -1.85362521e+00 -7.42880688e-01 -7.42880688e-01
 -7.42880688e-01  2.65128601e+00  2.65128601e+00  2.65128601e+00
  2.77081020e+00  1.98782776e+01  1.98782776e+01  1.98782776e+01
  4.55648220e+01  3.35358774e+02  2.02614465e+03  7.31805051e+03]
E1 = -182.12993937557655  E_coul = 53.93336680709167
cycle= 1 E= -128.196572568485  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260886
diis-c [-0.06806152  1.        ]
  HOMO = -0.808036490556499  LUMO = 2.59712650151639
  mo_energy =
[-3.27877020e+01 -1.92115057e+00 -8.08036491e-01 -8.08036491e-01
 -8.08036491e-01  2.59712650e+00  2.59712650e+00  2.59712650e+00
  2.71651228e+00  1.96875342e+01  1.96875342e+01  1.96875342e+01
  4.53287072e+01  3.35047908e+02  2.02578545e+03  7.31766709e+03]
E1 = -182.59358241783127  E_coul = 54.3953702600948
cycle= 2 E= -128.198212157736  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102169
diis-c [-4.05214769e-04  2.78027831e-01  7.21972169e-01]
  HOMO = -0.785218652486657  LUMO = 2.61774891555749
  mo_energy =
[-3.27127813e+01 -1.89747038e+00 -7.85218652e-01 -7.85218652e-01
 -7.85218652e-01  2.61774892e+00  2.61774892e+00  2.61774892e+00
  2.73677231e+00  1.97437328e+01  1.97437328e+01  1.97437328e+01
  4.53950555e+01  3.35129870e+02  2.02587280e+03  7.31775593e+03]
E1 = -182.46095578133801  E_coul = 54.26243667846055
cycle= 3 E= -128.198519102877  delta_E= -0.000307  |g|= 0.000686  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000863932
diis-c [-7.81495246e-08 -3.90407367e-03 -2.01532895e-03  1.00591940e+00]
  HOMO = -0.78544518294163  LUMO = 2.61757863663317
  mo_energy =
[-3.27134285e+01 -1.89776762e+00 -7.85445183e-01 -7.85445183e-01
 -7.85445183e-01  2.61757864e+00  2.61757864e+00  2.61757864e+00
  2.73653840e+00  1.97432274e+01  1.97432274e+01  1.97432274e+01
  4.53944461e+01  3.35129384e+02  2.02587244e+03  7.31775561e+03]
E1 = -182.46220639271453  E_coul = 54.26368725731254
cycle= 4 E= -128.198519135402  delta_E= -3.25e-08  |g|= 5.15e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17856e-05
diis-c [-2.12839142e-10  5.05511154e-04 -8.30824359e-04 -1.70600345e-01
  1.17092566e+00]
  HOMO = -0.785430549986153  LUMO = 2.61759127434479
  mo_energy =
[-3.27133908e+01 -1.89776513e+00 -7.85430550e-01 -7.85430550e-01
 -7.85430550e-01  2.61759127e+00  2.61759127e+00  2.61759127e+00
  2.73653974e+00  1.97432565e+01  1.97432565e+01  1.97432565e+01
  4.53944768e+01  3.35129436e+02  2.02587251e+03  7.31775569e+03]
E1 = -182.46214301148476  E_coul = 54.26362387577873
cycle= 5 E= -128.198519135706  delta_E= -3.04e-10  |g|= 1.54e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46214301148476  E_coul = 54.26362387577873
  HOMO = -0.785430491768663  LUMO = 2.61759134172409
  mo_energy =
[-3.27133907e+01 -1.89776545e+00 -7.85430492e-01 -7.85430492e-01
 -7.85430492e-01  2.61759134e+00  2.61759134e+00  2.61759134e+00
  2.73653947e+00  1.97432565e+01  1.97432565e+01  1.97432565e+01
  4.53944768e+01  3.35129437e+02  2.02587251e+03  7.31775569e+03]
E1 = -182.46214299991905  E_coul = 54.2636238642129
Extra cycle  E= -128.198519135706  delta_E= -1.14e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461153e+03 2.27418031e+02 1.42702583e+03 5.75924209e-01
 5.00457536e+01 1.32714079e+01 1.93006404e+00 2.77022512e+00
 1.32779704e+01 5.99538528e-01]
E = -128.19851913570614
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61152553        1
[INPUT] 0    0    [1    /1   ]  227.418031187        1
[INPUT] 0    0    [1    /1   ]  1427.02583115        1
[INPUT] 0    0    [1    /1   ]  0.575924209043       1
[INPUT] 0    0    [1    /1   ]  50.0457536104        1
[INPUT] 0    0    [1    /1   ]  13.2714078775        1
[INPUT] 0    0    [1    /1   ]  1.93006403699        1
[INPUT] 1    0    [1    /1   ]  2.77022512425        1
[INPUT] 1    0    [1    /1   ]  13.2779703799        1
[INPUT] 1    0    [1    /1   ]  0.599538527681       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6115255298187, 1.0]], [0, [227.41803118716845, 1.0]], [0, [1427.0258311492703, 1.0]], [0, [0.5759242090431943, 1.0]], [0, [50.045753610418075, 1.0]], [0, [13.27140787746812, 1.0]], [0, [1.9300640369935969, 1.0]], [1, [2.77022512424646, 1.0]], [1, [13.277970379900632, 1.0]], [1, [0.599538527680684, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61152553]
bas 1, expnt(s) = [227.41803119]
bas 2, expnt(s) = [1427.02583115]
bas 3, expnt(s) = [0.57592421]
bas 4, expnt(s) = [50.04575361]
bas 5, expnt(s) = [13.27140788]
bas 6, expnt(s) = [1.93006404]
bas 7, expnt(s) = [2.77022512]
bas 8, expnt(s) = [13.27797038]
bas 9, expnt(s) = [0.59953853]
CPU time:        83.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461153e+03 7.96207934e+02 2.27418031e+02 1.47956380e+02
 1.42702583e+03 5.86595734e+02 5.75924209e-01 1.67027902e+00
 5.00457536e+01 4.75379500e+01 1.32714079e+01 1.75672091e+01
 1.93006404e+00 4.13707899e+00 2.77022512e+00 1.04262521e+01
 1.32779704e+01 7.39433312e+01 5.99538528e-01 1.53906075e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965805103668991
cond(S) = 160.07137272690076
E1 = -183.1369153700971  E_coul = 55.01138604589002
init E= -128.125529324207
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742880687869419  LUMO = 2.65128600973379
  mo_energy =
[-3.25138208e+01 -1.85362521e+00 -7.42880688e-01 -7.42880688e-01
 -7.42880688e-01  2.65128601e+00  2.65128601e+00  2.65128601e+00
  2.77081020e+00  1.98782776e+01  1.98782776e+01  1.98782776e+01
  4.55648220e+01  3.35358774e+02  2.02614465e+03  7.31805051e+03]
E1 = -182.12993937557655  E_coul = 53.93336680709167
cycle= 1 E= -128.196572568485  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260886
diis-c [-0.06806152  1.        ]
  HOMO = -0.808036490556499  LUMO = 2.59712650151639
  mo_energy =
[-3.27877020e+01 -1.92115057e+00 -8.08036491e-01 -8.08036491e-01
 -8.08036491e-01  2.59712650e+00  2.59712650e+00  2.59712650e+00
  2.71651228e+00  1.96875342e+01  1.96875342e+01  1.96875342e+01
  4.53287072e+01  3.35047908e+02  2.02578545e+03  7.31766709e+03]
E1 = -182.59358241783127  E_coul = 54.3953702600948
cycle= 2 E= -128.198212157736  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102169
diis-c [-4.05214769e-04  2.78027831e-01  7.21972169e-01]
  HOMO = -0.785218652486657  LUMO = 2.61774891555749
  mo_energy =
[-3.27127813e+01 -1.89747038e+00 -7.85218652e-01 -7.85218652e-01
 -7.85218652e-01  2.61774892e+00  2.61774892e+00  2.61774892e+00
  2.73677231e+00  1.97437328e+01  1.97437328e+01  1.97437328e+01
  4.53950555e+01  3.35129870e+02  2.02587280e+03  7.31775593e+03]
E1 = -182.46095578133801  E_coul = 54.26243667846055
cycle= 3 E= -128.198519102877  delta_E= -0.000307  |g|= 0.000686  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000863932
diis-c [-7.81495246e-08 -3.90407367e-03 -2.01532895e-03  1.00591940e+00]
  HOMO = -0.78544518294163  LUMO = 2.61757863663317
  mo_energy =
[-3.27134285e+01 -1.89776762e+00 -7.85445183e-01 -7.85445183e-01
 -7.85445183e-01  2.61757864e+00  2.61757864e+00  2.61757864e+00
  2.73653840e+00  1.97432274e+01  1.97432274e+01  1.97432274e+01
  4.53944461e+01  3.35129384e+02  2.02587244e+03  7.31775561e+03]
E1 = -182.46220639271453  E_coul = 54.26368725731254
cycle= 4 E= -128.198519135402  delta_E= -3.25e-08  |g|= 5.15e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17856e-05
diis-c [-2.12839142e-10  5.05511154e-04 -8.30824359e-04 -1.70600345e-01
  1.17092566e+00]
  HOMO = -0.785430549986153  LUMO = 2.61759127434479
  mo_energy =
[-3.27133908e+01 -1.89776513e+00 -7.85430550e-01 -7.85430550e-01
 -7.85430550e-01  2.61759127e+00  2.61759127e+00  2.61759127e+00
  2.73653974e+00  1.97432565e+01  1.97432565e+01  1.97432565e+01
  4.53944768e+01  3.35129436e+02  2.02587251e+03  7.31775569e+03]
E1 = -182.46214301148476  E_coul = 54.26362387577873
cycle= 5 E= -128.198519135706  delta_E= -3.04e-10  |g|= 1.54e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46214301148476  E_coul = 54.26362387577873
  HOMO = -0.785430491768663  LUMO = 2.61759134172409
  mo_energy =
[-3.27133907e+01 -1.89776545e+00 -7.85430492e-01 -7.85430492e-01
 -7.85430492e-01  2.61759134e+00  2.61759134e+00  2.61759134e+00
  2.73653947e+00  1.97432565e+01  1.97432565e+01  1.97432565e+01
  4.53944768e+01  3.35129437e+02  2.02587251e+03  7.31775569e+03]
E1 = -182.46214299991905  E_coul = 54.2636238642129
Extra cycle  E= -128.198519135706  delta_E= -1.14e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.07137272690076
E1 = -182.46214299991905  E_coul = 54.2636238642129
init E= -128.198519135706
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785430477506915  LUMO = 2.61759135303591
  mo_energy =
[-3.27133907e+01 -1.89776551e+00 -7.85430478e-01 -7.85430478e-01
 -7.85430478e-01  2.61759135e+00  2.61759135e+00  2.61759135e+00
  2.73653941e+00  1.97432565e+01  1.97432565e+01  1.97432565e+01
  4.53944767e+01  3.35129437e+02  2.02587251e+03  7.31775569e+03]
E1 = -182.46214301111118  E_coul = 54.26362387540508
cycle= 1 E= -128.198519135706  delta_E= 2.84e-14  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46214301111118  E_coul = 54.26362387540508
  HOMO = -0.785430473874395  LUMO = 2.61759135605107
  mo_energy =
[-3.27133907e+01 -1.89776552e+00 -7.85430474e-01 -7.85430474e-01
 -7.85430474e-01  2.61759136e+00  2.61759136e+00  2.61759136e+00
  2.73653941e+00  1.97432565e+01  1.97432565e+01  1.97432565e+01
  4.53944767e+01  3.35129437e+02  2.02587251e+03  7.31775569e+03]
E1 = -182.4621430085239  E_coul = 54.26362387281768
Extra cycle  E= -128.198519135706  delta_E= -1.14e-13  |g|= 9.34e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461153e+03 2.27418031e+02 1.42702583e+03 5.75924209e-01
 5.00457536e+01 1.32714079e+01 1.93006404e+00 2.77022512e+00
 1.32779704e+01 5.99538528e-01]
grad_E = [-9.93935693e-06  6.32652362e-06  3.37667651e-05  4.82087314e-06
  1.56249569e-07 -2.44418155e-06 -1.11793909e-05  3.91955855e-06
 -2.21561950e-04 -1.21910027e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61060145        1
[INPUT] 0    0    [1    /1   ]  227.391205857        1
[INPUT] 0    0    [1    /1   ]  1427.03122553        1
[INPUT] 0    0    [1    /1   ]  0.57594601319        1
[INPUT] 0    0    [1    /1   ]  50.0426981006        1
[INPUT] 0    0    [1    /1   ]  13.2711516938        1
[INPUT] 0    0    [1    /1   ]  1.93020209932        1
[INPUT] 1    0    [1    /1   ]  2.77025010034        1
[INPUT] 1    0    [1    /1   ]  13.2784009263        1
[INPUT] 1    0    [1    /1   ]  0.599539995603       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6106014527036, 1.0]], [0, [227.39120585692694, 1.0]], [0, [1427.031225532764, 1.0]], [0, [0.5759460131903928, 1.0]], [0, [50.042698100565964, 1.0]], [0, [13.27115169377821, 1.0]], [0, [1.9302020993175244, 1.0]], [1, [2.7702501003405198, 1.0]], [1, [13.278400926309244, 1.0]], [1, [0.5995399956032923, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61060145]
bas 1, expnt(s) = [227.39120586]
bas 2, expnt(s) = [1427.03122553]
bas 3, expnt(s) = [0.57594601]
bas 4, expnt(s) = [50.0426981]
bas 5, expnt(s) = [13.27115169]
bas 6, expnt(s) = [1.9302021]
bas 7, expnt(s) = [2.7702501]
bas 8, expnt(s) = [13.27840093]
bas 9, expnt(s) = [0.59954]
CPU time:        85.82
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461060e+03 7.96207677e+02 2.27391206e+02 1.47943290e+02
 1.42703123e+03 5.86597397e+02 5.75946013e-01 1.67032644e+00
 5.00426981e+01 4.75357732e+01 1.32711517e+01 1.75669548e+01
 1.93020210e+00 4.13730094e+00 2.77025010e+00 1.04263696e+01
 1.32784009e+01 7.39463283e+01 5.99539996e-01 1.53906546e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965804411382662
cond(S) = 160.06417560865654
E1 = -183.13691893177557  E_coul = 55.01138918642905
init E= -128.125529745347
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742880910394639  LUMO = 2.65129840993538
  mo_energy =
[-3.25138198e+01 -1.85362399e+00 -7.42880910e-01 -7.42880910e-01
 -7.42880910e-01  2.65129841e+00  2.65129841e+00  2.65129841e+00
  2.77105244e+00  1.98788107e+01  1.98788107e+01  1.98788107e+01
  4.55633656e+01  3.35326746e+02  2.02605606e+03  7.31795491e+03]
E1 = -182.12994286726376  E_coul = 53.933370245467685
cycle= 1 E= -128.196572621796  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260889
diis-c [-0.06806325  1.        ]
  HOMO = -0.808036456396213  LUMO = 2.59713880352462
  mo_energy =
[-3.27877018e+01 -1.92114916e+00 -8.08036456e-01 -8.08036456e-01
 -8.08036456e-01  2.59713880e+00  2.59713880e+00  2.59713880e+00
  2.71675015e+00  1.96880642e+01  1.96880642e+01  1.96880642e+01
  4.53272527e+01  3.35015882e+02  2.02569687e+03  7.31757149e+03]
E1 = -182.59358562351161  E_coul = 54.39537339923598
cycle= 2 E= -128.198212224276  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102169
diis-c [-4.05324176e-04  2.78024148e-01  7.21975852e-01]
  HOMO = -0.785218573728769  LUMO = 2.61776137336421
  mo_energy =
[-3.27127806e+01 -1.89746887e+00 -7.85218574e-01 -7.85218574e-01
 -7.85218574e-01  2.61776137e+00  2.61776137e+00  2.61776137e+00
  2.73701157e+00  1.97442638e+01  1.97442638e+01  1.97442638e+01
  4.53936005e+01  3.35097844e+02  2.02578421e+03  7.31766033e+03]
E1 = -182.46095889335177  E_coul = 54.2624397243877
cycle= 3 E= -128.198519168964  delta_E= -0.000307  |g|= 0.000687  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864312
diis-c [-7.81355054e-08 -3.90362123e-03 -2.01002737e-03  1.00591365e+00]
  HOMO = -0.785445199678383  LUMO = 2.61759100785909
  mo_energy =
[-3.27134281e+01 -1.89776619e+00 -7.85445200e-01 -7.85445200e-01
 -7.85445200e-01  2.61759101e+00  2.61759101e+00  2.61759101e+00
  2.73677758e+00  1.97437582e+01  1.97437582e+01  1.97437582e+01
  4.53929910e+01  3.35097358e+02  2.02578386e+03  7.31766001e+03]
E1 = -182.46221001980564  E_coul = 54.26369081829828
cycle= 4 E= -128.198519201507  delta_E= -3.25e-08  |g|= 5.15e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17705e-05
diis-c [-2.12826076e-10  5.05374767e-04 -8.31501787e-04 -1.70571091e-01
  1.17089722e+00]
  HOMO = -0.785430569788913  LUMO = 2.61760364309504
  mo_energy =
[-3.27133904e+01 -1.89776370e+00 -7.85430570e-01 -7.85430570e-01
 -7.85430570e-01  2.61760364e+00  2.61760364e+00  2.61760364e+00
  2.73677892e+00  1.97437873e+01  1.97437873e+01  1.97437873e+01
  4.53930216e+01  3.35097410e+02  2.02578393e+03  7.31766009e+03]
E1 = -182.46214664807803  E_coul = 54.26362744626723
cycle= 5 E= -128.198519201811  delta_E= -3.03e-10  |g|= 1.54e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46214664807803  E_coul = 54.26362744626723
  HOMO = -0.785430511411001  LUMO = 2.61760371059992
  mo_energy =
[-3.27133903e+01 -1.89776402e+00 -7.85430511e-01 -7.85430511e-01
 -7.85430511e-01  2.61760371e+00  2.61760371e+00  2.61760371e+00
  2.73677864e+00  1.97437873e+01  1.97437873e+01  1.97437873e+01
  4.53930216e+01  3.35097410e+02  2.02578393e+03  7.31766009e+03]
E1 = -182.4621466356966  E_coul = 54.26362743388546
Extra cycle  E= -128.198519201811  delta_E= -3.41e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461060e+03 2.27391206e+02 1.42703123e+03 5.75946013e-01
 5.00426981e+01 1.32711517e+01 1.93020210e+00 2.77025010e+00
 1.32784009e+01 5.99539996e-01]
E = -128.19851920181114
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61060145        1
[INPUT] 0    0    [1    /1   ]  227.391205857        1
[INPUT] 0    0    [1    /1   ]  1427.03122553        1
[INPUT] 0    0    [1    /1   ]  0.57594601319        1
[INPUT] 0    0    [1    /1   ]  50.0426981006        1
[INPUT] 0    0    [1    /1   ]  13.2711516938        1
[INPUT] 0    0    [1    /1   ]  1.93020209932        1
[INPUT] 1    0    [1    /1   ]  2.77025010034        1
[INPUT] 1    0    [1    /1   ]  13.2784009263        1
[INPUT] 1    0    [1    /1   ]  0.599539995603       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6106014527036, 1.0]], [0, [227.39120585692694, 1.0]], [0, [1427.031225532764, 1.0]], [0, [0.5759460131903928, 1.0]], [0, [50.042698100565964, 1.0]], [0, [13.27115169377821, 1.0]], [0, [1.9302020993175244, 1.0]], [1, [2.7702501003405198, 1.0]], [1, [13.278400926309244, 1.0]], [1, [0.5995399956032923, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61060145]
bas 1, expnt(s) = [227.39120586]
bas 2, expnt(s) = [1427.03122553]
bas 3, expnt(s) = [0.57594601]
bas 4, expnt(s) = [50.0426981]
bas 5, expnt(s) = [13.27115169]
bas 6, expnt(s) = [1.9302021]
bas 7, expnt(s) = [2.7702501]
bas 8, expnt(s) = [13.27840093]
bas 9, expnt(s) = [0.59954]
CPU time:        86.41
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461060e+03 7.96207677e+02 2.27391206e+02 1.47943290e+02
 1.42703123e+03 5.86597397e+02 5.75946013e-01 1.67032644e+00
 5.00426981e+01 4.75357732e+01 1.32711517e+01 1.75669548e+01
 1.93020210e+00 4.13730094e+00 2.77025010e+00 1.04263696e+01
 1.32784009e+01 7.39463283e+01 5.99539996e-01 1.53906546e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965804411382662
cond(S) = 160.06417560865654
E1 = -183.13691893177557  E_coul = 55.01138918642905
init E= -128.125529745347
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742880910394639  LUMO = 2.65129840993538
  mo_energy =
[-3.25138198e+01 -1.85362399e+00 -7.42880910e-01 -7.42880910e-01
 -7.42880910e-01  2.65129841e+00  2.65129841e+00  2.65129841e+00
  2.77105244e+00  1.98788107e+01  1.98788107e+01  1.98788107e+01
  4.55633656e+01  3.35326746e+02  2.02605606e+03  7.31795491e+03]
E1 = -182.12994286726376  E_coul = 53.933370245467685
cycle= 1 E= -128.196572621796  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260889
diis-c [-0.06806325  1.        ]
  HOMO = -0.808036456396213  LUMO = 2.59713880352462
  mo_energy =
[-3.27877018e+01 -1.92114916e+00 -8.08036456e-01 -8.08036456e-01
 -8.08036456e-01  2.59713880e+00  2.59713880e+00  2.59713880e+00
  2.71675015e+00  1.96880642e+01  1.96880642e+01  1.96880642e+01
  4.53272527e+01  3.35015882e+02  2.02569687e+03  7.31757149e+03]
E1 = -182.59358562351161  E_coul = 54.39537339923598
cycle= 2 E= -128.198212224276  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102169
diis-c [-4.05324176e-04  2.78024148e-01  7.21975852e-01]
  HOMO = -0.785218573728769  LUMO = 2.61776137336421
  mo_energy =
[-3.27127806e+01 -1.89746887e+00 -7.85218574e-01 -7.85218574e-01
 -7.85218574e-01  2.61776137e+00  2.61776137e+00  2.61776137e+00
  2.73701157e+00  1.97442638e+01  1.97442638e+01  1.97442638e+01
  4.53936005e+01  3.35097844e+02  2.02578421e+03  7.31766033e+03]
E1 = -182.46095889335177  E_coul = 54.2624397243877
cycle= 3 E= -128.198519168964  delta_E= -0.000307  |g|= 0.000687  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000864312
diis-c [-7.81355054e-08 -3.90362123e-03 -2.01002737e-03  1.00591365e+00]
  HOMO = -0.785445199678383  LUMO = 2.61759100785909
  mo_energy =
[-3.27134281e+01 -1.89776619e+00 -7.85445200e-01 -7.85445200e-01
 -7.85445200e-01  2.61759101e+00  2.61759101e+00  2.61759101e+00
  2.73677758e+00  1.97437582e+01  1.97437582e+01  1.97437582e+01
  4.53929910e+01  3.35097358e+02  2.02578386e+03  7.31766001e+03]
E1 = -182.46221001980564  E_coul = 54.26369081829828
cycle= 4 E= -128.198519201507  delta_E= -3.25e-08  |g|= 5.15e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17705e-05
diis-c [-2.12826076e-10  5.05374767e-04 -8.31501787e-04 -1.70571091e-01
  1.17089722e+00]
  HOMO = -0.785430569788913  LUMO = 2.61760364309504
  mo_energy =
[-3.27133904e+01 -1.89776370e+00 -7.85430570e-01 -7.85430570e-01
 -7.85430570e-01  2.61760364e+00  2.61760364e+00  2.61760364e+00
  2.73677892e+00  1.97437873e+01  1.97437873e+01  1.97437873e+01
  4.53930216e+01  3.35097410e+02  2.02578393e+03  7.31766009e+03]
E1 = -182.46214664807803  E_coul = 54.26362744626723
cycle= 5 E= -128.198519201811  delta_E= -3.03e-10  |g|= 1.54e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46214664807803  E_coul = 54.26362744626723
  HOMO = -0.785430511411001  LUMO = 2.61760371059992
  mo_energy =
[-3.27133903e+01 -1.89776402e+00 -7.85430511e-01 -7.85430511e-01
 -7.85430511e-01  2.61760371e+00  2.61760371e+00  2.61760371e+00
  2.73677864e+00  1.97437873e+01  1.97437873e+01  1.97437873e+01
  4.53930216e+01  3.35097410e+02  2.02578393e+03  7.31766009e+03]
E1 = -182.4621466356966  E_coul = 54.26362743388546
Extra cycle  E= -128.198519201811  delta_E= -3.41e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.06417560865654
E1 = -182.4621466356966  E_coul = 54.26362743388546
init E= -128.198519201811
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785430497201186  LUMO = 2.61760372186465
  mo_energy =
[-3.27133903e+01 -1.89776408e+00 -7.85430497e-01 -7.85430497e-01
 -7.85430497e-01  2.61760372e+00  2.61760372e+00  2.61760372e+00
  2.73677859e+00  1.97437873e+01  1.97437873e+01  1.97437873e+01
  4.53930216e+01  3.35097410e+02  2.02578393e+03  7.31766009e+03]
E1 = -182.4621466472028  E_coul = 54.26362744539157
cycle= 1 E= -128.198519201811  delta_E= -8.53e-14  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4621466472028  E_coul = 54.26362744539157
  HOMO = -0.785430493546602  LUMO = 2.61760372489969
  mo_energy =
[-3.27133903e+01 -1.89776409e+00 -7.85430494e-01 -7.85430494e-01
 -7.85430494e-01  2.61760372e+00  2.61760372e+00  2.61760372e+00
  2.73677858e+00  1.97437873e+01  1.97437873e+01  1.97437873e+01
  4.53930216e+01  3.35097410e+02  2.02578393e+03  7.31766009e+03]
E1 = -182.4621466444883  E_coul = 54.263627442677105
Extra cycle  E= -128.198519201811  delta_E=    0  |g|= 9.34e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461060e+03 2.27391206e+02 1.42703123e+03 5.75946013e-01
 5.00426981e+01 1.32711517e+01 1.93020210e+00 2.77025010e+00
 1.32784009e+01 5.99539996e-01]
grad_E = [-9.93472949e-06  5.62726153e-06  3.37920035e-05 -9.46940581e-06
  1.18265887e-06 -1.69816878e-07  6.28464649e-08 -1.26540414e-05
 -2.17495164e-04 -1.30541313e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60795968        1
[INPUT] 0    0    [1    /1   ]  227.312772919        1
[INPUT] 0    0    [1    /1   ]  1427.04677624        1
[INPUT] 0    0    [1    /1   ]  0.576036044064       1
[INPUT] 0    0    [1    /1   ]  50.0350625489        1
[INPUT] 0    0    [1    /1   ]  13.2707433453        1
[INPUT] 0    0    [1    /1   ]  1.93070823698        1
[INPUT] 1    0    [1    /1   ]  2.77044176418        1
[INPUT] 1    0    [1    /1   ]  13.2807518583        1
[INPUT] 1    0    [1    /1   ]  0.59955930769        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6079596755844, 1.0]], [0, [227.31277291897112, 1.0]], [0, [1427.0467762362823, 1.0]], [0, [0.5760360440636464, 1.0]], [0, [50.035062548871565, 1.0]], [0, [13.270743345297634, 1.0]], [0, [1.930708236983875, 1.0]], [1, [2.770441764184854, 1.0]], [1, [13.280751858341533, 1.0]], [1, [0.5995593076902671, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60795968]
bas 1, expnt(s) = [227.31277292]
bas 2, expnt(s) = [1427.04677624]
bas 3, expnt(s) = [0.57603604]
bas 4, expnt(s) = [50.03506255]
bas 5, expnt(s) = [13.27074335]
bas 6, expnt(s) = [1.93070824]
bas 7, expnt(s) = [2.77044176]
bas 8, expnt(s) = [13.28075186]
bas 9, expnt(s) = [0.59955931]
CPU time:        88.72
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460796e+03 7.96206941e+02 2.27312773e+02 1.47905016e+02
 1.42704678e+03 5.86602191e+02 5.76036044e-01 1.67052227e+00
 5.00350625e+01 4.75303333e+01 1.32707433e+01 1.75665494e+01
 1.93070824e+00 4.13811458e+00 2.77044176e+00 1.04272713e+01
 1.32807519e+01 7.39626938e+01 5.99559308e-01 1.53912743e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96579865292711
cond(S) = 160.04454985349133
E1 = -183.13692853016602  E_coul = 55.011401698936
init E= -128.12552683123
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742882108256008  LUMO = 2.651433960617
  mo_energy =
[-3.25138142e+01 -1.85361971e+00 -7.42882108e-01 -7.42882108e-01
 -7.42882108e-01  2.65143396e+00  2.65143396e+00  2.65143396e+00
  2.77198832e+00  1.98819264e+01  1.98819264e+01  1.98819264e+01
  4.55611637e+01  3.35238589e+02  2.02580299e+03  7.31768081e+03]
E1 = -182.13004845826174  E_coul = 53.93347527404691
cycle= 1 E= -128.196573184215  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260882
diis-c [-0.06805944  1.        ]
  HOMO = -0.808029667332973  LUMO = 2.5972785458764
  mo_energy =
[-3.27876822e+01 -1.92113672e+00 -8.08029667e-01 -8.08029667e-01
 -8.08029667e-01  2.59727855e+00  2.59727855e+00  2.59727855e+00
  2.71767582e+00  1.96911780e+01  1.96911780e+01  1.96911780e+01
  4.53250688e+01  3.34927749e+02  2.02544381e+03  7.31729739e+03]
E1 = -182.59365016369534  E_coul = 54.3954375643818
cycle= 2 E= -128.198212599314  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102159
diis-c [-4.05645432e-04  2.78007455e-01  7.21992545e-01]
  HOMO = -0.785213541188042  LUMO = 2.61790057974886
  mo_energy =
[-3.27127650e+01 -1.89745807e+00 -7.85213541e-01 -7.85213541e-01
 -7.85213541e-01  2.61790058e+00  2.61790058e+00  2.61790058e+00
  2.73794085e+00  1.97473779e+01  1.97473779e+01  1.97473779e+01
  4.53914111e+01  3.35009706e+02  2.02553115e+03  7.31738623e+03]
E1 = -182.4610359614734  E_coul = 54.26251647472726
cycle= 3 E= -128.198519486746  delta_E= -0.000307  |g|= 0.000687  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000865623
diis-c [-7.80902062e-08 -3.90221128e-03 -1.99158442e-03  1.00589380e+00]
  HOMO = -0.785440499755272  LUMO = 2.61772990188006
  mo_energy =
[-3.27134135e+01 -1.89775569e+00 -7.85440500e-01 -7.85440500e-01
 -7.85440500e-01  2.61772990e+00  2.61772990e+00  2.61772990e+00
  2.73770654e+00  1.97468715e+01  1.97468715e+01  1.97468715e+01
  4.53908006e+01  3.35009219e+02  2.02553080e+03  7.31738591e+03]
E1 = -182.462288874484  E_coul = 54.26376935512956
cycle= 4 E= -128.198519519354  delta_E= -3.26e-08  |g|= 5.15e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17237e-05
diis-c [-2.12758786e-10  5.04931629e-04 -8.34037720e-04 -1.70475163e-01
  1.17080427e+00]
  HOMO = -0.785425879194109  LUMO = 2.61774253015204
  mo_energy =
[-3.27133758e+01 -1.89775320e+00 -7.85425879e-01 -7.85425879e-01
 -7.85425879e-01  2.61774253e+00  2.61774253e+00  2.61774253e+00
  2.73770788e+00  1.97469006e+01  1.97469006e+01  1.97469006e+01
  4.53908313e+01  3.35009271e+02  2.02553087e+03  7.31738599e+03]
E1 = -182.46222553008752  E_coul = 54.263706010429814
cycle= 5 E= -128.198519519658  delta_E= -3.03e-10  |g|= 1.54e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46222553008752  E_coul = 54.263706010429814
  HOMO = -0.785425820438477  LUMO = 2.61774259793271
  mo_energy =
[-3.27133758e+01 -1.89775352e+00 -7.85425820e-01 -7.85425820e-01
 -7.85425820e-01  2.61774260e+00  2.61774260e+00  2.61774260e+00
  2.73770760e+00  1.97469006e+01  1.97469006e+01  1.97469006e+01
  4.53908313e+01  3.35009271e+02  2.02553087e+03  7.31738599e+03]
E1 = -182.46222551581067  E_coul = 54.263705996152744
Extra cycle  E= -128.198519519658  delta_E= -2.27e-13  |g|= 2.81e-07  |ddm|= 8.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14460796e+03 2.27312773e+02 1.42704678e+03 5.76036044e-01
 5.00350625e+01 1.32707433e+01 1.93070824e+00 2.77044176e+00
 1.32807519e+01 5.99559308e-01]
E = -128.19851951965794
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:48 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60795968        1
[INPUT] 0    0    [1    /1   ]  227.312772919        1
[INPUT] 0    0    [1    /1   ]  1427.04677624        1
[INPUT] 0    0    [1    /1   ]  0.576036044064       1
[INPUT] 0    0    [1    /1   ]  50.0350625489        1
[INPUT] 0    0    [1    /1   ]  13.2707433453        1
[INPUT] 0    0    [1    /1   ]  1.93070823698        1
[INPUT] 1    0    [1    /1   ]  2.77044176418        1
[INPUT] 1    0    [1    /1   ]  13.2807518583        1
[INPUT] 1    0    [1    /1   ]  0.59955930769        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6079596755844, 1.0]], [0, [227.31277291897112, 1.0]], [0, [1427.0467762362823, 1.0]], [0, [0.5760360440636464, 1.0]], [0, [50.035062548871565, 1.0]], [0, [13.270743345297634, 1.0]], [0, [1.930708236983875, 1.0]], [1, [2.770441764184854, 1.0]], [1, [13.280751858341533, 1.0]], [1, [0.5995593076902671, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60795968]
bas 1, expnt(s) = [227.31277292]
bas 2, expnt(s) = [1427.04677624]
bas 3, expnt(s) = [0.57603604]
bas 4, expnt(s) = [50.03506255]
bas 5, expnt(s) = [13.27074335]
bas 6, expnt(s) = [1.93070824]
bas 7, expnt(s) = [2.77044176]
bas 8, expnt(s) = [13.28075186]
bas 9, expnt(s) = [0.59955931]
CPU time:        89.31
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460796e+03 7.96206941e+02 2.27312773e+02 1.47905016e+02
 1.42704678e+03 5.86602191e+02 5.76036044e-01 1.67052227e+00
 5.00350625e+01 4.75303333e+01 1.32707433e+01 1.75665494e+01
 1.93070824e+00 4.13811458e+00 2.77044176e+00 1.04272713e+01
 1.32807519e+01 7.39626938e+01 5.99559308e-01 1.53912743e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96579865292711
cond(S) = 160.04454985349133
E1 = -183.13692853016602  E_coul = 55.011401698936
init E= -128.12552683123
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742882108256008  LUMO = 2.651433960617
  mo_energy =
[-3.25138142e+01 -1.85361971e+00 -7.42882108e-01 -7.42882108e-01
 -7.42882108e-01  2.65143396e+00  2.65143396e+00  2.65143396e+00
  2.77198832e+00  1.98819264e+01  1.98819264e+01  1.98819264e+01
  4.55611637e+01  3.35238589e+02  2.02580299e+03  7.31768081e+03]
E1 = -182.13004845826174  E_coul = 53.93347527404691
cycle= 1 E= -128.196573184215  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260882
diis-c [-0.06805944  1.        ]
  HOMO = -0.808029667332973  LUMO = 2.5972785458764
  mo_energy =
[-3.27876822e+01 -1.92113672e+00 -8.08029667e-01 -8.08029667e-01
 -8.08029667e-01  2.59727855e+00  2.59727855e+00  2.59727855e+00
  2.71767582e+00  1.96911780e+01  1.96911780e+01  1.96911780e+01
  4.53250688e+01  3.34927749e+02  2.02544381e+03  7.31729739e+03]
E1 = -182.59365016369534  E_coul = 54.3954375643818
cycle= 2 E= -128.198212599314  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102159
diis-c [-4.05645432e-04  2.78007455e-01  7.21992545e-01]
  HOMO = -0.785213541188042  LUMO = 2.61790057974886
  mo_energy =
[-3.27127650e+01 -1.89745807e+00 -7.85213541e-01 -7.85213541e-01
 -7.85213541e-01  2.61790058e+00  2.61790058e+00  2.61790058e+00
  2.73794085e+00  1.97473779e+01  1.97473779e+01  1.97473779e+01
  4.53914111e+01  3.35009706e+02  2.02553115e+03  7.31738623e+03]
E1 = -182.4610359614734  E_coul = 54.26251647472726
cycle= 3 E= -128.198519486746  delta_E= -0.000307  |g|= 0.000687  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000865623
diis-c [-7.80902062e-08 -3.90221128e-03 -1.99158442e-03  1.00589380e+00]
  HOMO = -0.785440499755272  LUMO = 2.61772990188006
  mo_energy =
[-3.27134135e+01 -1.89775569e+00 -7.85440500e-01 -7.85440500e-01
 -7.85440500e-01  2.61772990e+00  2.61772990e+00  2.61772990e+00
  2.73770654e+00  1.97468715e+01  1.97468715e+01  1.97468715e+01
  4.53908006e+01  3.35009219e+02  2.02553080e+03  7.31738591e+03]
E1 = -182.462288874484  E_coul = 54.26376935512956
cycle= 4 E= -128.198519519354  delta_E= -3.26e-08  |g|= 5.15e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17237e-05
diis-c [-2.12758786e-10  5.04931629e-04 -8.34037720e-04 -1.70475163e-01
  1.17080427e+00]
  HOMO = -0.785425879194109  LUMO = 2.61774253015204
  mo_energy =
[-3.27133758e+01 -1.89775320e+00 -7.85425879e-01 -7.85425879e-01
 -7.85425879e-01  2.61774253e+00  2.61774253e+00  2.61774253e+00
  2.73770788e+00  1.97469006e+01  1.97469006e+01  1.97469006e+01
  4.53908313e+01  3.35009271e+02  2.02553087e+03  7.31738599e+03]
E1 = -182.46222553008752  E_coul = 54.263706010429814
cycle= 5 E= -128.198519519658  delta_E= -3.03e-10  |g|= 1.54e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46222553008752  E_coul = 54.263706010429814
  HOMO = -0.785425820438477  LUMO = 2.61774259793271
  mo_energy =
[-3.27133758e+01 -1.89775352e+00 -7.85425820e-01 -7.85425820e-01
 -7.85425820e-01  2.61774260e+00  2.61774260e+00  2.61774260e+00
  2.73770760e+00  1.97469006e+01  1.97469006e+01  1.97469006e+01
  4.53908313e+01  3.35009271e+02  2.02553087e+03  7.31738599e+03]
E1 = -182.46222551581067  E_coul = 54.263705996152744
Extra cycle  E= -128.198519519658  delta_E= -2.27e-13  |g|= 2.81e-07  |ddm|= 8.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.04454985349133
E1 = -182.46222551581067  E_coul = 54.263705996152744
init E= -128.198519519658
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785425806347447  LUMO = 2.61774260909023
  mo_energy =
[-3.27133758e+01 -1.89775358e+00 -7.85425806e-01 -7.85425806e-01
 -7.85425806e-01  2.61774261e+00  2.61774261e+00  2.61774261e+00
  2.73770755e+00  1.97469006e+01  1.97469006e+01  1.97469006e+01
  4.53908312e+01  3.35009271e+02  2.02553087e+03  7.31738599e+03]
E1 = -182.462225528033  E_coul = 54.26370600837479
cycle= 1 E= -128.198519519658  delta_E= -2.84e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.462225528033  E_coul = 54.26370600837479
  HOMO = -0.785425802642362  LUMO = 2.617742612171
  mo_energy =
[-3.27133758e+01 -1.89775359e+00 -7.85425803e-01 -7.85425803e-01
 -7.85425803e-01  2.61774261e+00  2.61774261e+00  2.61774261e+00
  2.73770754e+00  1.97469006e+01  1.97469006e+01  1.97469006e+01
  4.53908312e+01  3.35009271e+02  2.02553087e+03  7.31738599e+03]
E1 = -182.46222552502718  E_coul = 54.26370600536905
Extra cycle  E= -128.198519519658  delta_E= 8.53e-14  |g|= 9.35e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14460796e+03 2.27312773e+02 1.42704678e+03 5.76036044e-01
 5.00350625e+01 1.32707433e+01 1.93070824e+00 2.77044176e+00
 1.32807519e+01 5.99559308e-01]
grad_E = [-9.92073598e-06  3.28586413e-06  3.38690872e-05 -4.86266801e-05
  5.93513700e-06  6.70255505e-06  3.49868436e-05 -7.66464536e-05
 -1.98927106e-04 -1.80334171e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60546415        1
[INPUT] 0    0    [1    /1   ]  227.235167345        1
[INPUT] 0    0    [1    /1   ]  1427.06174279        1
[INPUT] 0    0    [1    /1   ]  0.576147537211       1
[INPUT] 0    0    [1    /1   ]  50.0285736505        1
[INPUT] 0    0    [1    /1   ]  13.2706163998        1
[INPUT] 0    0    [1    /1   ]  1.93130322086        1
[INPUT] 1    0    [1    /1   ]  2.77094026545        1
[INPUT] 1    0    [1    /1   ]  13.2854337951        1
[INPUT] 1    0    [1    /1   ]  0.599621594173       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.605464153649, 1.0]], [0, [227.2351673445506, 1.0]], [0, [1427.061742790394, 1.0]], [0, [0.5761475372107155, 1.0]], [0, [50.02857365053222, 1.0]], [0, [13.27061639976707, 1.0]], [0, [1.931303220858955, 1.0]], [1, [2.770940265451189, 1.0]], [1, [13.285433795067974, 1.0]], [1, [0.5996215941730453, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60546415]
bas 1, expnt(s) = [227.23516734]
bas 2, expnt(s) = [1427.06174279]
bas 3, expnt(s) = [0.57614754]
bas 4, expnt(s) = [50.02857365]
bas 5, expnt(s) = [13.2706164]
bas 6, expnt(s) = [1.93130322]
bas 7, expnt(s) = [2.77094027]
bas 8, expnt(s) = [13.2854338]
bas 9, expnt(s) = [0.59962159]
CPU time:        91.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460546e+03 7.96206246e+02 2.27235167e+02 1.47867143e+02
 1.42706174e+03 5.86606805e+02 5.76147537e-01 1.67076476e+00
 5.00285737e+01 4.75257102e+01 1.32706164e+01 1.75664234e+01
 1.93130322e+00 4.13907097e+00 2.77094027e+00 1.04296167e+01
 1.32854338e+01 7.39952884e+01 5.99621594e-01 1.53932731e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965783448288002
cond(S) = 160.02620225074756
E1 = -183.13693895631116  E_coul = 55.01142117016315
init E= -128.125517786148
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742884179814869  LUMO = 2.65184709230369
  mo_energy =
[-3.25138020e+01 -1.85361524e+00 -7.42884180e-01 -7.42884180e-01
 -7.42884180e-01  2.65184709e+00  2.65184709e+00  2.65184709e+00
  2.77311584e+00  1.98885668e+01  1.98885668e+01  1.98885668e+01
  4.55607165e+01  3.35155903e+02  2.02555736e+03  7.31741365e+03]
E1 = -182.1304012305911  E_coul = 53.93382646677683
cycle= 1 E= -128.196574763814  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260831
diis-c [-0.06803287  1.        ]
  HOMO = -0.808005577887888  LUMO = 2.59770677778178
  mo_energy =
[-3.27876122e+01 -1.92110345e+00 -8.08005578e-01 -8.08005578e-01
 -8.08005578e-01  2.59770678e+00  2.59770678e+00  2.59770678e+00
  2.71880811e+00  1.96978379e+01  1.96978379e+01  1.96978379e+01
  4.53246781e+01  3.34845130e+02  2.02519823e+03  7.31703029e+03]
E1 = -182.5938562395931  E_coul = 54.39564285724858
cycle= 2 E= -128.198213382345  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102126
diis-c [-4.05920823e-04  2.77975366e-01  7.22024634e-01]
  HOMO = -0.785196120313401  LUMO = 2.61832576666397
  mo_energy =
[-3.27127136e+01 -1.89743161e+00 -7.85196120e-01 -7.85196120e-01
 -7.85196120e-01  2.61832577e+00  2.61832577e+00  2.61832577e+00
  2.73907336e+00  1.97540303e+01  1.97540303e+01  1.97540303e+01
  4.53910022e+01  3.34927067e+02  2.02528556e+03  7.31711910e+03]
E1 = -182.4612877138505  E_coul = 54.2627676479269
cycle= 3 E= -128.198520065924  delta_E= -0.000307  |g|= 0.000688  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000867544
diis-c [-7.79206064e-08 -3.89996651e-03 -1.96221191e-03  1.00586218e+00]
  HOMO = -0.785423576762666  LUMO = 2.61815459893912
  mo_energy =
[-3.27133636e+01 -1.89772964e+00 -7.85423577e-01 -7.85423577e-01
 -7.85423577e-01  2.61815460e+00  2.61815460e+00  2.61815460e+00
  2.73883862e+00  1.97535226e+01  1.97535226e+01  1.97535226e+01
  4.53903903e+01  3.34926578e+02  2.02528520e+03  7.31711879e+03]
E1 = -182.46254322286006  E_coul = 54.264023124241255
cycle= 4 E= -128.198520098619  delta_E= -3.27e-08  |g|= 5.14e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.16114e-05
diis-c [-2.12514543e-10  5.04349838e-04 -8.37674368e-04 -1.70332311e-01
  1.17066564e+00]
  HOMO = -0.785408975826114  LUMO = 2.61816721283779
  mo_energy =
[-3.27133260e+01 -1.89772714e+00 -7.85408976e-01 -7.85408976e-01
 -7.85408976e-01  2.61816721e+00  2.61816721e+00  2.61816721e+00
  2.73883996e+00  1.97535517e+01  1.97535517e+01  1.97535517e+01
  4.53904209e+01  3.34926630e+02  2.02528527e+03  7.31711886e+03]
E1 = -182.46247994940921  E_coul = 54.2639598504881
cycle= 5 E= -128.198520098921  delta_E= -3.02e-10  |g|= 1.54e-06  |ddm|= 2.61e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46247994940921  E_coul = 54.2639598504881
  HOMO = -0.785408916732674  LUMO = 2.61816728083927
  mo_energy =
[-3.27133259e+01 -1.89772746e+00 -7.85408917e-01 -7.85408917e-01
 -7.85408917e-01  2.61816728e+00  2.61816728e+00  2.61816728e+00
  2.73883969e+00  1.97535517e+01  1.97535517e+01  1.97535517e+01
  4.53904209e+01  3.34926630e+02  2.02528527e+03  7.31711886e+03]
E1 = -182.4624799336504  E_coul = 54.26395983472887
Extra cycle  E= -128.198520098922  delta_E= -4.26e-13  |g|= 2.81e-07  |ddm|= 8.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14460546e+03 2.27235167e+02 1.42706174e+03 5.76147537e-01
 5.00285737e+01 1.32706164e+01 1.93130322e+00 2.77094027e+00
 1.32854338e+01 5.99621594e-01]
E = -128.19852009892153
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:51 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60546415        1
[INPUT] 0    0    [1    /1   ]  227.235167345        1
[INPUT] 0    0    [1    /1   ]  1427.06174279        1
[INPUT] 0    0    [1    /1   ]  0.576147537211       1
[INPUT] 0    0    [1    /1   ]  50.0285736505        1
[INPUT] 0    0    [1    /1   ]  13.2706163998        1
[INPUT] 0    0    [1    /1   ]  1.93130322086        1
[INPUT] 1    0    [1    /1   ]  2.77094026545        1
[INPUT] 1    0    [1    /1   ]  13.2854337951        1
[INPUT] 1    0    [1    /1   ]  0.599621594173       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.605464153649, 1.0]], [0, [227.2351673445506, 1.0]], [0, [1427.061742790394, 1.0]], [0, [0.5761475372107155, 1.0]], [0, [50.02857365053222, 1.0]], [0, [13.27061639976707, 1.0]], [0, [1.931303220858955, 1.0]], [1, [2.770940265451189, 1.0]], [1, [13.285433795067974, 1.0]], [1, [0.5996215941730453, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60546415]
bas 1, expnt(s) = [227.23516734]
bas 2, expnt(s) = [1427.06174279]
bas 3, expnt(s) = [0.57614754]
bas 4, expnt(s) = [50.02857365]
bas 5, expnt(s) = [13.2706164]
bas 6, expnt(s) = [1.93130322]
bas 7, expnt(s) = [2.77094027]
bas 8, expnt(s) = [13.2854338]
bas 9, expnt(s) = [0.59962159]
CPU time:        92.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460546e+03 7.96206246e+02 2.27235167e+02 1.47867143e+02
 1.42706174e+03 5.86606805e+02 5.76147537e-01 1.67076476e+00
 5.00285737e+01 4.75257102e+01 1.32706164e+01 1.75664234e+01
 1.93130322e+00 4.13907097e+00 2.77094027e+00 1.04296167e+01
 1.32854338e+01 7.39952884e+01 5.99621594e-01 1.53932731e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965783448288002
cond(S) = 160.02620225074756
E1 = -183.13693895631116  E_coul = 55.01142117016315
init E= -128.125517786148
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742884179814869  LUMO = 2.65184709230369
  mo_energy =
[-3.25138020e+01 -1.85361524e+00 -7.42884180e-01 -7.42884180e-01
 -7.42884180e-01  2.65184709e+00  2.65184709e+00  2.65184709e+00
  2.77311584e+00  1.98885668e+01  1.98885668e+01  1.98885668e+01
  4.55607165e+01  3.35155903e+02  2.02555736e+03  7.31741365e+03]
E1 = -182.1304012305911  E_coul = 53.93382646677683
cycle= 1 E= -128.196574763814  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260831
diis-c [-0.06803287  1.        ]
  HOMO = -0.808005577887888  LUMO = 2.59770677778178
  mo_energy =
[-3.27876122e+01 -1.92110345e+00 -8.08005578e-01 -8.08005578e-01
 -8.08005578e-01  2.59770678e+00  2.59770678e+00  2.59770678e+00
  2.71880811e+00  1.96978379e+01  1.96978379e+01  1.96978379e+01
  4.53246781e+01  3.34845130e+02  2.02519823e+03  7.31703029e+03]
E1 = -182.5938562395931  E_coul = 54.39564285724858
cycle= 2 E= -128.198213382345  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102126
diis-c [-4.05920823e-04  2.77975366e-01  7.22024634e-01]
  HOMO = -0.785196120313401  LUMO = 2.61832576666397
  mo_energy =
[-3.27127136e+01 -1.89743161e+00 -7.85196120e-01 -7.85196120e-01
 -7.85196120e-01  2.61832577e+00  2.61832577e+00  2.61832577e+00
  2.73907336e+00  1.97540303e+01  1.97540303e+01  1.97540303e+01
  4.53910022e+01  3.34927067e+02  2.02528556e+03  7.31711910e+03]
E1 = -182.4612877138505  E_coul = 54.2627676479269
cycle= 3 E= -128.198520065924  delta_E= -0.000307  |g|= 0.000688  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000867544
diis-c [-7.79206064e-08 -3.89996651e-03 -1.96221191e-03  1.00586218e+00]
  HOMO = -0.785423576762666  LUMO = 2.61815459893912
  mo_energy =
[-3.27133636e+01 -1.89772964e+00 -7.85423577e-01 -7.85423577e-01
 -7.85423577e-01  2.61815460e+00  2.61815460e+00  2.61815460e+00
  2.73883862e+00  1.97535226e+01  1.97535226e+01  1.97535226e+01
  4.53903903e+01  3.34926578e+02  2.02528520e+03  7.31711879e+03]
E1 = -182.46254322286006  E_coul = 54.264023124241255
cycle= 4 E= -128.198520098619  delta_E= -3.27e-08  |g|= 5.14e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.16114e-05
diis-c [-2.12514543e-10  5.04349838e-04 -8.37674368e-04 -1.70332311e-01
  1.17066564e+00]
  HOMO = -0.785408975826114  LUMO = 2.61816721283779
  mo_energy =
[-3.27133260e+01 -1.89772714e+00 -7.85408976e-01 -7.85408976e-01
 -7.85408976e-01  2.61816721e+00  2.61816721e+00  2.61816721e+00
  2.73883996e+00  1.97535517e+01  1.97535517e+01  1.97535517e+01
  4.53904209e+01  3.34926630e+02  2.02528527e+03  7.31711886e+03]
E1 = -182.46247994940921  E_coul = 54.2639598504881
cycle= 5 E= -128.198520098921  delta_E= -3.02e-10  |g|= 1.54e-06  |ddm|= 2.61e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46247994940921  E_coul = 54.2639598504881
  HOMO = -0.785408916732674  LUMO = 2.61816728083927
  mo_energy =
[-3.27133259e+01 -1.89772746e+00 -7.85408917e-01 -7.85408917e-01
 -7.85408917e-01  2.61816728e+00  2.61816728e+00  2.61816728e+00
  2.73883969e+00  1.97535517e+01  1.97535517e+01  1.97535517e+01
  4.53904209e+01  3.34926630e+02  2.02528527e+03  7.31711886e+03]
E1 = -182.4624799336504  E_coul = 54.26395983472887
Extra cycle  E= -128.198520098922  delta_E= -4.26e-13  |g|= 2.81e-07  |ddm|= 8.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.02620225074756
E1 = -182.4624799336504  E_coul = 54.26395983472887
init E= -128.198520098922
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785408902731493  LUMO = 2.61816729191742
  mo_energy =
[-3.27133259e+01 -1.89772752e+00 -7.85408903e-01 -7.85408903e-01
 -7.85408903e-01  2.61816729e+00  2.61816729e+00  2.61816729e+00
  2.73883964e+00  1.97535517e+01  1.97535517e+01  1.97535517e+01
  4.53904209e+01  3.34926630e+02  2.02528527e+03  7.31711886e+03]
E1 = -182.4624799464373  E_coul = 54.263959847515814
cycle= 1 E= -128.198520098921  delta_E= 5.68e-14  |g|= 5.13e-08  |ddm|= 1.61e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4624799464373  E_coul = 54.263959847515814
  HOMO = -0.7854088989863  LUMO = 2.61816729503494
  mo_energy =
[-3.27133259e+01 -1.89772753e+00 -7.85408899e-01 -7.85408899e-01
 -7.85408899e-01  2.61816730e+00  2.61816730e+00  2.61816730e+00
  2.73883963e+00  1.97535517e+01  1.97535517e+01  1.97535517e+01
  4.53904209e+01  3.34926630e+02  2.02528527e+03  7.31711886e+03]
E1 = -182.46247994320186  E_coul = 54.26395984428038
Extra cycle  E= -128.198520098921  delta_E=    0  |g|= 9.36e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14460546e+03 2.27235167e+02 1.42706174e+03 5.76147537e-01
 5.00285737e+01 1.32706164e+01 1.93130322e+00 2.77094027e+00
 1.32854338e+01 5.99621594e-01]
grad_E = [-9.90649375e-06  7.21138906e-07  3.39481348e-05 -8.70082740e-05
  1.21209554e-05  1.34625816e-05  7.18489658e-05 -1.48302914e-04
 -1.69646264e-04 -2.94929754e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60311465        1
[INPUT] 0    0    [1    /1   ]  227.152155154        1
[INPUT] 0    0    [1    /1   ]  1427.07663217        1
[INPUT] 0    0    [1    /1   ]  0.576306715634       1
[INPUT] 0    0    [1    /1   ]  50.0231394547        1
[INPUT] 0    0    [1    /1   ]  13.2708958684        1
[INPUT] 0    0    [1    /1   ]  1.93212060415        1
[INPUT] 1    0    [1    /1   ]  2.77235960788        1
[INPUT] 1    0    [1    /1   ]  13.2969800866        1
[INPUT] 1    0    [1    /1   ]  0.599814844485       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.60311464517, 1.0]], [0, [227.15215515449378, 1.0]], [0, [1427.0766321650822, 1.0]], [0, [0.576306715634395, 1.0]], [0, [50.02313945470778, 1.0]], [0, [13.27089586837431, 1.0]], [0, [1.9321206041534724, 1.0]], [1, [2.772359607876586, 1.0]], [1, [13.296980086625972, 1.0]], [1, [0.5998148444847237, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60311465]
bas 1, expnt(s) = [227.15215515]
bas 2, expnt(s) = [1427.07663217]
bas 3, expnt(s) = [0.57630672]
bas 4, expnt(s) = [50.02313945]
bas 5, expnt(s) = [13.27089587]
bas 6, expnt(s) = [1.9321206]
bas 7, expnt(s) = [2.77235961]
bas 8, expnt(s) = [13.29698009]
bas 9, expnt(s) = [0.59981484]
CPU time:        94.70
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460311e+03 7.96205592e+02 2.27152155e+02 1.47826628e+02
 1.42707663e+03 5.86611396e+02 5.76306716e-01 1.67111095e+00
 5.00231395e+01 4.75218383e+01 1.32708959e+01 1.75667008e+01
 1.93212060e+00 4.14038473e+00 2.77235961e+00 1.04362950e+01
 1.32969801e+01 7.40756832e+01 5.99814844e-01 1.53994746e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965739914852726
cond(S) = 160.00804322073495
E1 = -183.1369549420888  E_coul = 55.01146183675597
init E= -128.125493105333
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742888580695207  LUMO = 2.65310207440233
  mo_energy =
[-3.25137705e+01 -1.85361064e+00 -7.42888581e-01 -7.42888581e-01
 -7.42888581e-01  2.65310207e+00  2.65310207e+00  2.65310207e+00
  2.77469444e+00  1.99056560e+01  1.99056560e+01  1.99056560e+01
  4.55629866e+01  3.35074169e+02  2.02530133e+03  7.31713293e+03]
E1 = -182.1314979119485  E_coul = 53.93491854817434
cycle= 1 E= -128.196579363774  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.26065
diis-c [-0.0679383  1.       ]
  HOMO = -0.807929343479021  LUMO = 2.59900951636358
  mo_energy =
[-3.27873909e+01 -1.92100741e+00 -8.07929343e-01 -8.07929343e-01
 -8.07929343e-01  2.59900952e+00  2.59900952e+00  2.59900952e+00
  2.72043940e+00  1.97150125e+01  1.97150125e+01  1.97150125e+01
  4.53271241e+01  3.34763598e+02  2.02494240e+03  7.31674976e+03]
E1 = -182.5944881620767  E_coul = 54.39627281313586
cycle= 2 E= -128.198215348941  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102019
diis-c [-4.06063628e-04  2.77896196e-01  7.22103804e-01]
  HOMO = -0.78514131042402  LUMO = 2.61961793422715
  mo_energy =
[-3.27125547e+01 -1.89735791e+00 -7.85141310e-01 -7.85141310e-01
 -7.85141310e-01  2.61961793e+00  2.61961793e+00  2.61961793e+00
  2.74069396e+00  1.97711738e+01  1.97711738e+01  1.97711738e+01
  4.53933909e+01  3.34845468e+02  2.02502966e+03  7.31683851e+03]
E1 = -182.46206489735027  E_coul = 54.2635435097332
cycle= 3 E= -128.198521387617  delta_E= -0.000306  |g|= 0.00069  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871405
diis-c [-7.73207866e-08 -3.89491785e-03 -1.89762057e-03  1.00579254e+00]
  HOMO = -0.785369790617127  LUMO = 2.61944571717292
  mo_energy =
[-3.27132077e+01 -1.89765666e+00 -7.85369791e-01 -7.85369791e-01
 -7.85369791e-01  2.61944572e+00  2.61944572e+00  2.61944572e+00
  2.74045846e+00  1.97706636e+01  1.97706636e+01  1.97706636e+01
  4.53927764e+01  3.34844975e+02  2.02502930e+03  7.31683819e+03]
E1 = -182.4633255603538  E_coul = 54.26480413988953
cycle= 4 E= -128.198521420464  delta_E= -3.28e-08  |g|= 5.11e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.12695e-05
diis-c [-2.11708813e-10  5.03296646e-04 -8.44520597e-04 -1.70024124e-01
  1.17036535e+00]
  HOMO = -0.785355245604649  LUMO = 2.61945828975664
  mo_energy =
[-3.27131702e+01 -1.89765415e+00 -7.85355246e-01 -7.85355246e-01
 -7.85355246e-01  2.61945829e+00  2.61945829e+00  2.61945829e+00
  2.74045982e+00  1.97706926e+01  1.97706926e+01  1.97706926e+01
  4.53928069e+01  3.34845027e+02  2.02502937e+03  7.31683826e+03]
E1 = -182.46326251292254  E_coul = 54.26474109215913
cycle= 5 E= -128.198521420763  delta_E= -2.99e-10  |g|= 1.54e-06  |ddm|= 2.6e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46326251292254  E_coul = 54.26474109215913
  HOMO = -0.78535518612798  LUMO = 2.61945835796022
  mo_energy =
[-3.27131701e+01 -1.89765447e+00 -7.85355186e-01 -7.85355186e-01
 -7.85355186e-01  2.61945836e+00  2.61945836e+00  2.61945836e+00
  2.74045954e+00  1.97706926e+01  1.97706926e+01  1.97706926e+01
  4.53928069e+01  3.34845027e+02  2.02502937e+03  7.31683826e+03]
E1 = -182.46326249616138  E_coul = 54.264741075397794
Extra cycle  E= -128.198521420764  delta_E= -1.71e-13  |g|= 2.82e-07  |ddm|= 8.93e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14460311e+03 2.27152155e+02 1.42707663e+03 5.76306716e-01
 5.00231395e+01 1.32708959e+01 1.93212060e+00 2.77235961e+00
 1.32969801e+01 5.99814844e-01]
E = -128.1985214207636
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60311465        1
[INPUT] 0    0    [1    /1   ]  227.152155154        1
[INPUT] 0    0    [1    /1   ]  1427.07663217        1
[INPUT] 0    0    [1    /1   ]  0.576306715634       1
[INPUT] 0    0    [1    /1   ]  50.0231394547        1
[INPUT] 0    0    [1    /1   ]  13.2708958684        1
[INPUT] 0    0    [1    /1   ]  1.93212060415        1
[INPUT] 1    0    [1    /1   ]  2.77235960788        1
[INPUT] 1    0    [1    /1   ]  13.2969800866        1
[INPUT] 1    0    [1    /1   ]  0.599814844485       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.60311464517, 1.0]], [0, [227.15215515449378, 1.0]], [0, [1427.0766321650822, 1.0]], [0, [0.576306715634395, 1.0]], [0, [50.02313945470778, 1.0]], [0, [13.27089586837431, 1.0]], [0, [1.9321206041534724, 1.0]], [1, [2.772359607876586, 1.0]], [1, [13.296980086625972, 1.0]], [1, [0.5998148444847237, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60311465]
bas 1, expnt(s) = [227.15215515]
bas 2, expnt(s) = [1427.07663217]
bas 3, expnt(s) = [0.57630672]
bas 4, expnt(s) = [50.02313945]
bas 5, expnt(s) = [13.27089587]
bas 6, expnt(s) = [1.9321206]
bas 7, expnt(s) = [2.77235961]
bas 8, expnt(s) = [13.29698009]
bas 9, expnt(s) = [0.59981484]
CPU time:        95.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460311e+03 7.96205592e+02 2.27152155e+02 1.47826628e+02
 1.42707663e+03 5.86611396e+02 5.76306716e-01 1.67111095e+00
 5.00231395e+01 4.75218383e+01 1.32708959e+01 1.75667008e+01
 1.93212060e+00 4.14038473e+00 2.77235961e+00 1.04362950e+01
 1.32969801e+01 7.40756832e+01 5.99814844e-01 1.53994746e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965739914852726
cond(S) = 160.00804322073495
E1 = -183.1369549420888  E_coul = 55.01146183675597
init E= -128.125493105333
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742888580695207  LUMO = 2.65310207440233
  mo_energy =
[-3.25137705e+01 -1.85361064e+00 -7.42888581e-01 -7.42888581e-01
 -7.42888581e-01  2.65310207e+00  2.65310207e+00  2.65310207e+00
  2.77469444e+00  1.99056560e+01  1.99056560e+01  1.99056560e+01
  4.55629866e+01  3.35074169e+02  2.02530133e+03  7.31713293e+03]
E1 = -182.1314979119485  E_coul = 53.93491854817434
cycle= 1 E= -128.196579363774  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.26065
diis-c [-0.0679383  1.       ]
  HOMO = -0.807929343479021  LUMO = 2.59900951636358
  mo_energy =
[-3.27873909e+01 -1.92100741e+00 -8.07929343e-01 -8.07929343e-01
 -8.07929343e-01  2.59900952e+00  2.59900952e+00  2.59900952e+00
  2.72043940e+00  1.97150125e+01  1.97150125e+01  1.97150125e+01
  4.53271241e+01  3.34763598e+02  2.02494240e+03  7.31674976e+03]
E1 = -182.5944881620767  E_coul = 54.39627281313586
cycle= 2 E= -128.198215348941  delta_E= -0.00164  |g|= 0.0626  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102019
diis-c [-4.06063628e-04  2.77896196e-01  7.22103804e-01]
  HOMO = -0.78514131042402  LUMO = 2.61961793422715
  mo_energy =
[-3.27125547e+01 -1.89735791e+00 -7.85141310e-01 -7.85141310e-01
 -7.85141310e-01  2.61961793e+00  2.61961793e+00  2.61961793e+00
  2.74069396e+00  1.97711738e+01  1.97711738e+01  1.97711738e+01
  4.53933909e+01  3.34845468e+02  2.02502966e+03  7.31683851e+03]
E1 = -182.46206489735027  E_coul = 54.2635435097332
cycle= 3 E= -128.198521387617  delta_E= -0.000306  |g|= 0.00069  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000871405
diis-c [-7.73207866e-08 -3.89491785e-03 -1.89762057e-03  1.00579254e+00]
  HOMO = -0.785369790617127  LUMO = 2.61944571717292
  mo_energy =
[-3.27132077e+01 -1.89765666e+00 -7.85369791e-01 -7.85369791e-01
 -7.85369791e-01  2.61944572e+00  2.61944572e+00  2.61944572e+00
  2.74045846e+00  1.97706636e+01  1.97706636e+01  1.97706636e+01
  4.53927764e+01  3.34844975e+02  2.02502930e+03  7.31683819e+03]
E1 = -182.4633255603538  E_coul = 54.26480413988953
cycle= 4 E= -128.198521420464  delta_E= -3.28e-08  |g|= 5.11e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.12695e-05
diis-c [-2.11708813e-10  5.03296646e-04 -8.44520597e-04 -1.70024124e-01
  1.17036535e+00]
  HOMO = -0.785355245604649  LUMO = 2.61945828975664
  mo_energy =
[-3.27131702e+01 -1.89765415e+00 -7.85355246e-01 -7.85355246e-01
 -7.85355246e-01  2.61945829e+00  2.61945829e+00  2.61945829e+00
  2.74045982e+00  1.97706926e+01  1.97706926e+01  1.97706926e+01
  4.53928069e+01  3.34845027e+02  2.02502937e+03  7.31683826e+03]
E1 = -182.46326251292254  E_coul = 54.26474109215913
cycle= 5 E= -128.198521420763  delta_E= -2.99e-10  |g|= 1.54e-06  |ddm|= 2.6e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46326251292254  E_coul = 54.26474109215913
  HOMO = -0.78535518612798  LUMO = 2.61945835796022
  mo_energy =
[-3.27131701e+01 -1.89765447e+00 -7.85355186e-01 -7.85355186e-01
 -7.85355186e-01  2.61945836e+00  2.61945836e+00  2.61945836e+00
  2.74045954e+00  1.97706926e+01  1.97706926e+01  1.97706926e+01
  4.53928069e+01  3.34845027e+02  2.02502937e+03  7.31683826e+03]
E1 = -182.46326249616138  E_coul = 54.264741075397794
Extra cycle  E= -128.198521420764  delta_E= -1.71e-13  |g|= 2.82e-07  |ddm|= 8.93e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.00804322073495
E1 = -182.46326249616138  E_coul = 54.264741075397794
init E= -128.198521420764
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.78535517217826  LUMO = 2.61945836899867
  mo_energy =
[-3.27131701e+01 -1.89765453e+00 -7.85355172e-01 -7.85355172e-01
 -7.85355172e-01  2.61945837e+00  2.61945837e+00  2.61945837e+00
  2.74045949e+00  1.97706926e+01  1.97706926e+01  1.97706926e+01
  4.53928068e+01  3.34845027e+02  2.02502937e+03  7.31683826e+03]
E1 = -182.46326250937102  E_coul = 54.26474108860737
cycle= 1 E= -128.198521420764  delta_E= -5.68e-14  |g|= 5.13e-08  |ddm|= 1.61e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46326250937102  E_coul = 54.26474108860737
  HOMO = -0.785355168402219  LUMO = 2.61945837214579
  mo_energy =
[-3.27131701e+01 -1.89765454e+00 -7.85355168e-01 -7.85355168e-01
 -7.85355168e-01  2.61945837e+00  2.61945837e+00  2.61945837e+00
  2.74045948e+00  1.97706926e+01  1.97706926e+01  1.97706926e+01
  4.53928068e+01  3.34845027e+02  2.02502937e+03  7.31683826e+03]
E1 = -182.46326250596968  E_coul = 54.264741085206055
Extra cycle  E= -128.198521420764  delta_E= 2.84e-14  |g|= 9.37e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.10 sec
exp = [2.14460311e+03 2.27152155e+02 1.42707663e+03 5.76306716e-01
 5.00231395e+01 1.32708959e+01 1.93212060e+00 2.77235961e+00
 1.32969801e+01 5.99814844e-01]
grad_E = [-9.89073993e-06 -2.35924117e-06  3.40364687e-05 -1.30647784e-04
  2.06389369e-05  2.11821982e-05  1.16719939e-04 -2.36256545e-04
 -1.09990254e-04 -4.96891180e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60395493        1
[INPUT] 0    0    [1    /1   ]  227.150666952        1
[INPUT] 0    0    [1    /1   ]  1427.07382045        1
[INPUT] 0    0    [1    /1   ]  0.576404149028       1
[INPUT] 0    0    [1    /1   ]  50.0262385704        1
[INPUT] 0    0    [1    /1   ]  13.2718124998        1
[INPUT] 0    0    [1    /1   ]  1.93257573297        1
[INPUT] 1    0    [1    /1   ]  2.77485700389        1
[INPUT] 1    0    [1    /1   ]  13.3153114338        1
[INPUT] 1    0    [1    /1   ]  0.600173367469       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6039549280094, 1.0]], [0, [227.15066695157407, 1.0]], [0, [1427.0738204461647, 1.0]], [0, [0.5764041490283816, 1.0]], [0, [50.026238570353264, 1.0]], [0, [13.271812499821358, 1.0]], [0, [1.9325757329694646, 1.0]], [1, [2.774857003887725, 1.0]], [1, [13.315311433770619, 1.0]], [1, [0.6001733674694834, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60395493]
bas 1, expnt(s) = [227.15066695]
bas 2, expnt(s) = [1427.07382045]
bas 3, expnt(s) = [0.57640415]
bas 4, expnt(s) = [50.02623857]
bas 5, expnt(s) = [13.2718125]
bas 6, expnt(s) = [1.93257573]
bas 7, expnt(s) = [2.774857]
bas 8, expnt(s) = [13.31531143]
bas 9, expnt(s) = [0.60017337]
CPU time:        97.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460395e+03 7.96205826e+02 2.27150667e+02 1.47825902e+02
 1.42707382e+03 5.86610529e+02 5.76404149e-01 1.67132284e+00
 5.00262386e+01 4.75240464e+01 1.32718125e+01 1.75676108e+01
 1.93257573e+00 4.14111619e+00 2.77485700e+00 1.04480478e+01
 1.33153114e+01 7.42033570e+01 6.00173367e-01 1.54109813e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965663025258808
cond(S) = 160.0107132088446
E1 = -183.13697008769523  E_coul = 55.01151743676836
init E= -128.125452650927
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742894464953814  LUMO = 2.65540104408621
  mo_energy =
[-3.25137186e+01 -1.85361167e+00 -7.42894465e-01 -7.42894465e-01
 -7.42894465e-01  2.65540104e+00  2.65540104e+00  2.65540104e+00
  2.77561693e+00  1.99337114e+01  1.99337114e+01  1.99337114e+01
  4.55692229e+01  3.35087313e+02  2.02531100e+03  7.31713769e+03]
E1 = -182.13352990450207  E_coul = 53.93694239592092
cycle= 1 E= -128.196587508581  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260291
diis-c [-0.06775156  1.        ]
  HOMO = -0.807786586460084  LUMO = 2.60139783933442
  mo_energy =
[-3.27869774e+01 -1.92083680e+00 -8.07786586e-01 -8.07786586e-01
 -8.07786586e-01  2.60139784e+00  2.60139784e+00  2.60139784e+00
  2.72149904e+00  1.97432512e+01  1.97432512e+01  1.97432512e+01
  4.53336883e+01  3.34777107e+02  2.02495244e+03  7.31675489e+03]
E1 = -182.59565054505273  E_coul = 54.39743208480698
cycle= 2 E= -128.198218460246  delta_E= -0.00163  |g|= 0.0625  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10182
diis-c [-4.05621908e-04  2.77769558e-01  7.22230442e-01]
  HOMO = -0.785038913233024  LUMO = 2.62198555660152
  mo_energy =
[-3.27122616e+01 -1.89722983e+00 -7.85038913e-01 -7.85038913e-01
 -7.85038913e-01  2.62198556e+00  2.62198556e+00  2.62198556e+00
  2.74172209e+00  1.97993470e+01  1.97993470e+01  1.97993470e+01
  4.53998483e+01  3.34858849e+02  2.02503956e+03  7.31684350e+03]
E1 = -182.46349948808856  E_coul = 54.264976193699795
cycle= 3 E= -128.198523294389  delta_E= -0.000305  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000876522
diis-c [-7.61113586e-08 -3.88735182e-03 -1.80334149e-03  1.00569069e+00]
  HOMO = -0.785268781258259  LUMO = 2.62181185505531
  mo_energy =
[-3.27129185e+01 -1.89752940e+00 -7.85268781e-01 -7.85268781e-01
 -7.85268781e-01  2.62181186e+00  2.62181186e+00  2.62181186e+00
  2.74148577e+00  1.97988335e+01  1.97988335e+01  1.97988335e+01
  4.53992304e+01  3.34858352e+02  2.02503920e+03  7.31684317e+03]
E1 = -182.46476684617218  E_coul = 54.26624351877386
cycle= 4 E= -128.198523327398  delta_E= -3.3e-08  |g|= 5.07e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.06247e-05
diis-c [-2.10164602e-10  5.02048401e-04 -8.52670513e-04 -1.69568671e-01
  1.16991929e+00]
  HOMO = -0.785254337836492  LUMO = 2.62182435170285
  mo_energy =
[-3.27128813e+01 -1.89752687e+00 -7.85254338e-01 -7.85254338e-01
 -7.85254338e-01  2.62182435e+00  2.62182435e+00  2.62182435e+00
  2.74148716e+00  1.97988623e+01  1.97988623e+01  1.97988623e+01
  4.53992607e+01  3.34858403e+02  2.02503927e+03  7.31684325e+03]
E1 = -182.46470423621457  E_coul = 54.26618090852232
cycle= 5 E= -128.198523327692  delta_E= -2.94e-10  |g|= 1.54e-06  |ddm|= 2.57e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46470423621457  E_coul = 54.26618090852232
  HOMO = -0.78525427819163  LUMO = 2.62182441990646
  mo_energy =
[-3.27128812e+01 -1.89752719e+00 -7.85254278e-01 -7.85254278e-01
 -7.85254278e-01  2.62182442e+00  2.62182442e+00  2.62182442e+00
  2.74148688e+00  1.97988623e+01  1.97988623e+01  1.97988623e+01
  4.53992607e+01  3.34858403e+02  2.02503927e+03  7.31684325e+03]
E1 = -182.46470422061554  E_coul = 54.26618089292318
Extra cycle  E= -128.198523327692  delta_E= -1.14e-13  |g|= 2.82e-07  |ddm|= 8.93e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14460395e+03 2.27150667e+02 1.42707382e+03 5.76404149e-01
 5.00262386e+01 1.32718125e+01 1.93257573e+00 2.77485700e+00
 1.33153114e+01 6.00173367e-01]
E = -128.19852332769236
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60395493        1
[INPUT] 0    0    [1    /1   ]  227.150666952        1
[INPUT] 0    0    [1    /1   ]  1427.07382045        1
[INPUT] 0    0    [1    /1   ]  0.576404149028       1
[INPUT] 0    0    [1    /1   ]  50.0262385704        1
[INPUT] 0    0    [1    /1   ]  13.2718124998        1
[INPUT] 0    0    [1    /1   ]  1.93257573297        1
[INPUT] 1    0    [1    /1   ]  2.77485700389        1
[INPUT] 1    0    [1    /1   ]  13.3153114338        1
[INPUT] 1    0    [1    /1   ]  0.600173367469       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6039549280094, 1.0]], [0, [227.15066695157407, 1.0]], [0, [1427.0738204461647, 1.0]], [0, [0.5764041490283816, 1.0]], [0, [50.026238570353264, 1.0]], [0, [13.271812499821358, 1.0]], [0, [1.9325757329694646, 1.0]], [1, [2.774857003887725, 1.0]], [1, [13.315311433770619, 1.0]], [1, [0.6001733674694834, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60395493]
bas 1, expnt(s) = [227.15066695]
bas 2, expnt(s) = [1427.07382045]
bas 3, expnt(s) = [0.57640415]
bas 4, expnt(s) = [50.02623857]
bas 5, expnt(s) = [13.2718125]
bas 6, expnt(s) = [1.93257573]
bas 7, expnt(s) = [2.774857]
bas 8, expnt(s) = [13.31531143]
bas 9, expnt(s) = [0.60017337]
CPU time:        98.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460395e+03 7.96205826e+02 2.27150667e+02 1.47825902e+02
 1.42707382e+03 5.86610529e+02 5.76404149e-01 1.67132284e+00
 5.00262386e+01 4.75240464e+01 1.32718125e+01 1.75676108e+01
 1.93257573e+00 4.14111619e+00 2.77485700e+00 1.04480478e+01
 1.33153114e+01 7.42033570e+01 6.00173367e-01 1.54109813e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965663025258808
cond(S) = 160.0107132088446
E1 = -183.13697008769523  E_coul = 55.01151743676836
init E= -128.125452650927
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742894464953814  LUMO = 2.65540104408621
  mo_energy =
[-3.25137186e+01 -1.85361167e+00 -7.42894465e-01 -7.42894465e-01
 -7.42894465e-01  2.65540104e+00  2.65540104e+00  2.65540104e+00
  2.77561693e+00  1.99337114e+01  1.99337114e+01  1.99337114e+01
  4.55692229e+01  3.35087313e+02  2.02531100e+03  7.31713769e+03]
E1 = -182.13352990450207  E_coul = 53.93694239592092
cycle= 1 E= -128.196587508581  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260291
diis-c [-0.06775156  1.        ]
  HOMO = -0.807786586460084  LUMO = 2.60139783933442
  mo_energy =
[-3.27869774e+01 -1.92083680e+00 -8.07786586e-01 -8.07786586e-01
 -8.07786586e-01  2.60139784e+00  2.60139784e+00  2.60139784e+00
  2.72149904e+00  1.97432512e+01  1.97432512e+01  1.97432512e+01
  4.53336883e+01  3.34777107e+02  2.02495244e+03  7.31675489e+03]
E1 = -182.59565054505273  E_coul = 54.39743208480698
cycle= 2 E= -128.198218460246  delta_E= -0.00163  |g|= 0.0625  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.10182
diis-c [-4.05621908e-04  2.77769558e-01  7.22230442e-01]
  HOMO = -0.785038913233024  LUMO = 2.62198555660152
  mo_energy =
[-3.27122616e+01 -1.89722983e+00 -7.85038913e-01 -7.85038913e-01
 -7.85038913e-01  2.62198556e+00  2.62198556e+00  2.62198556e+00
  2.74172209e+00  1.97993470e+01  1.97993470e+01  1.97993470e+01
  4.53998483e+01  3.34858849e+02  2.02503956e+03  7.31684350e+03]
E1 = -182.46349948808856  E_coul = 54.264976193699795
cycle= 3 E= -128.198523294389  delta_E= -0.000305  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000876522
diis-c [-7.61113586e-08 -3.88735182e-03 -1.80334149e-03  1.00569069e+00]
  HOMO = -0.785268781258259  LUMO = 2.62181185505531
  mo_energy =
[-3.27129185e+01 -1.89752940e+00 -7.85268781e-01 -7.85268781e-01
 -7.85268781e-01  2.62181186e+00  2.62181186e+00  2.62181186e+00
  2.74148577e+00  1.97988335e+01  1.97988335e+01  1.97988335e+01
  4.53992304e+01  3.34858352e+02  2.02503920e+03  7.31684317e+03]
E1 = -182.46476684617218  E_coul = 54.26624351877386
cycle= 4 E= -128.198523327398  delta_E= -3.3e-08  |g|= 5.07e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.06247e-05
diis-c [-2.10164602e-10  5.02048401e-04 -8.52670513e-04 -1.69568671e-01
  1.16991929e+00]
  HOMO = -0.785254337836492  LUMO = 2.62182435170285
  mo_energy =
[-3.27128813e+01 -1.89752687e+00 -7.85254338e-01 -7.85254338e-01
 -7.85254338e-01  2.62182435e+00  2.62182435e+00  2.62182435e+00
  2.74148716e+00  1.97988623e+01  1.97988623e+01  1.97988623e+01
  4.53992607e+01  3.34858403e+02  2.02503927e+03  7.31684325e+03]
E1 = -182.46470423621457  E_coul = 54.26618090852232
cycle= 5 E= -128.198523327692  delta_E= -2.94e-10  |g|= 1.54e-06  |ddm|= 2.57e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46470423621457  E_coul = 54.26618090852232
  HOMO = -0.78525427819163  LUMO = 2.62182441990646
  mo_energy =
[-3.27128812e+01 -1.89752719e+00 -7.85254278e-01 -7.85254278e-01
 -7.85254278e-01  2.62182442e+00  2.62182442e+00  2.62182442e+00
  2.74148688e+00  1.97988623e+01  1.97988623e+01  1.97988623e+01
  4.53992607e+01  3.34858403e+02  2.02503927e+03  7.31684325e+03]
E1 = -182.46470422061554  E_coul = 54.26618089292318
Extra cycle  E= -128.198523327692  delta_E= -1.14e-13  |g|= 2.82e-07  |ddm|= 8.93e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.0107132088446
E1 = -182.46470422061554  E_coul = 54.26618089292318
init E= -128.198523327692
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785254264146512  LUMO = 2.62182443104471
  mo_energy =
[-3.27128812e+01 -1.89752725e+00 -7.85254264e-01 -7.85254264e-01
 -7.85254264e-01  2.62182443e+00  2.62182443e+00  2.62182443e+00
  2.74148683e+00  1.97988623e+01  1.97988623e+01  1.97988623e+01
  4.53992607e+01  3.34858403e+02  2.02503927e+03  7.31684325e+03]
E1 = -182.46470423351727  E_coul = 54.26618090582479
cycle= 1 E= -128.198523327692  delta_E= -1.14e-13  |g|= 5.13e-08  |ddm|= 1.61e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46470423351727  E_coul = 54.26618090582479
  HOMO = -0.785254260390084  LUMO = 2.62182443417736
  mo_energy =
[-3.27128812e+01 -1.89752726e+00 -7.85254260e-01 -7.85254260e-01
 -7.85254260e-01  2.62182443e+00  2.62182443e+00  2.62182443e+00
  2.74148682e+00  1.97988623e+01  1.97988623e+01  1.97988623e+01
  4.53992607e+01  3.34858403e+02  2.02503927e+03  7.31684325e+03]
E1 = -182.4647042302617  E_coul = 54.26618090256911
Extra cycle  E= -128.198523327693  delta_E= -1.14e-13  |g|= 9.37e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14460395e+03 2.27150667e+02 1.42707382e+03 5.76404149e-01
 5.00262386e+01 1.32718125e+01 1.93257573e+00 2.77485700e+00
 1.33153114e+01 6.00173367e-01]
grad_E = [-9.88950067e-06 -3.10084947e-06  3.40456031e-05 -1.40532339e-04
  2.45285221e-05  2.32386756e-05  1.31628122e-04 -2.63370258e-04
 -3.15640766e-05 -6.14363549e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:36:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60945678        1
[INPUT] 0    0    [1    /1   ]  227.283873348        1
[INPUT] 0    0    [1    /1   ]  1427.0438931         1
[INPUT] 0    0    [1    /1   ]  0.576322171787       1
[INPUT] 0    0    [1    /1   ]  50.0406209351        1
[INPUT] 0    0    [1    /1   ]  13.272995618         1
[INPUT] 0    0    [1    /1   ]  1.93207792301        1
[INPUT] 1    0    [1    /1   ]  2.7774380567         1
[INPUT] 1    0    [1    /1   ]  13.3323479126        1
[INPUT] 1    0    [1    /1   ]  0.600562130317       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.609456777516, 1.0]], [0, [227.28387334765145, 1.0]], [0, [1427.0438931023232, 1.0]], [0, [0.576322171786608, 1.0]], [0, [50.04062093505573, 1.0]], [0, [13.27299561797927, 1.0]], [0, [1.9320779230074123, 1.0]], [1, [2.7774380567034314, 1.0]], [1, [13.332347912619811, 1.0]], [1, [0.6005621303170935, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60945678]
bas 1, expnt(s) = [227.28387335]
bas 2, expnt(s) = [1427.0438931]
bas 3, expnt(s) = [0.57632217]
bas 4, expnt(s) = [50.04062094]
bas 5, expnt(s) = [13.27299562]
bas 6, expnt(s) = [1.93207792]
bas 7, expnt(s) = [2.77743806]
bas 8, expnt(s) = [13.33234791]
bas 9, expnt(s) = [0.60056213]
CPU time:       100.73
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460946e+03 7.96207358e+02 2.27283873e+02 1.47890913e+02
 1.42704389e+03 5.86601302e+02 5.76322172e-01 1.67114456e+00
 5.00406209e+01 4.75342933e+01 1.32729956e+01 1.75687854e+01
 1.93207792e+00 4.14031613e+00 2.77743806e+00 1.04601971e+01
 1.33323479e+01 7.43220517e+01 6.00562130e-01 1.54234604e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965583324480713
cond(S) = 160.04501366832594
E1 = -183.13697463992992  E_coul = 55.01155983688671
init E= -128.125414803043
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742898704757104  LUMO = 2.65786598066495
  mo_energy =
[-3.25136684e+01 -1.85362175e+00 -7.42898705e-01 -7.42898705e-01
 -7.42898705e-01  2.65786598e+00  2.65786598e+00  2.65786598e+00
  2.77472890e+00  1.99607712e+01  1.99607712e+01  1.99607712e+01
  4.55767712e+01  3.35244561e+02  2.02574697e+03  7.31760466e+03]
E1 = -182.13572920218022  E_coul = 53.93913319650428
cycle= 1 E= -128.196596005676  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259883
diis-c [-0.06753922  1.        ]
  HOMO = -0.807630669101231  LUMO = 2.60396033768169
  mo_energy =
[-3.27865269e+01 -1.92065889e+00 -8.07630669e-01 -8.07630669e-01
 -8.07630669e-01  2.60396034e+00  2.60396034e+00  2.60396034e+00
  2.72079671e+00  1.97705327e+01  1.97705327e+01  1.97705327e+01
  4.53415950e+01  3.34934741e+02  2.02538882e+03  7.31722227e+03]
E1 = -182.59690116583215  E_coul = 54.398679794260204
cycle= 2 E= -128.198221371572  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101603
diis-c [-4.04508439e-04  2.77650487e-01  7.22349513e-01]
  HOMO = -0.784927257265883  LUMO = 2.62452462599402
  mo_energy =
[-3.27119456e+01 -1.89709897e+00 -7.84927257e-01 -7.84927257e-01
 -7.84927257e-01  2.62452463e+00  2.62452463e+00  2.62452463e+00
  2.74097472e+00  1.98265503e+01  1.98265503e+01  1.98265503e+01
  4.54076383e+01  3.35016342e+02  2.02547579e+03  7.31731073e+03]
E1 = -182.46504735071565  E_coul = 54.2665224562597
cycle= 3 E= -128.198524894456  delta_E= -0.000304  |g|= 0.000693  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00088024
diis-c [-7.47021269e-08 -3.88068858e-03 -1.72365122e-03  1.00560434e+00]
  HOMO = -0.785158172896728  LUMO = 2.62434972878652
  mo_energy =
[-3.27126053e+01 -1.89739893e+00 -7.85158173e-01 -7.85158173e-01
 -7.85158173e-01  2.62434973e+00  2.62434973e+00  2.62434973e+00
  2.74073805e+00  1.98260343e+01  1.98260343e+01  1.98260343e+01
  4.54070180e+01  3.35015842e+02  2.02547542e+03  7.31731040e+03]
E1 = -182.46631939424753  E_coul = 54.26779446671446
cycle= 4 E= -128.198524927533  delta_E= -3.31e-08  |g|= 5.02e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.99061e-05
diis-c [-2.08450503e-10  5.01300110e-04 -8.57344730e-04 -1.69168305e-01
  1.16952435e+00]
  HOMO = -0.78514383937314  LUMO = 2.62436214218238
  mo_energy =
[-3.27125683e+01 -1.89739637e+00 -7.85143839e-01 -7.85143839e-01
 -7.85143839e-01  2.62436214e+00  2.62436214e+00  2.62436214e+00
  2.74073947e+00  1.98260629e+01  1.98260629e+01  1.98260629e+01
  4.54070481e+01  3.35015893e+02  2.02547549e+03  7.31731047e+03]
E1 = -182.4662572821417  E_coul = 54.26773235432058
cycle= 5 E= -128.198524927821  delta_E= -2.88e-10  |g|= 1.54e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4662572821417  E_coul = 54.26773235432058
  HOMO = -0.785143779957818  LUMO = 2.62436221011471
  mo_energy =
[-3.27125683e+01 -1.89739670e+00 -7.85143780e-01 -7.85143780e-01
 -7.85143780e-01  2.62436221e+00  2.62436221e+00  2.62436221e+00
  2.74073919e+00  1.98260630e+01  1.98260630e+01  1.98260630e+01
  4.54070481e+01  3.35015893e+02  2.02547549e+03  7.31731047e+03]
E1 = -182.46625727017653  E_coul = 54.26773234235511
Extra cycle  E= -128.198524927821  delta_E= -2.84e-13  |g|= 2.81e-07  |ddm|= 8.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14460946e+03 2.27283873e+02 1.42704389e+03 5.76322172e-01
 5.00406209e+01 1.32729956e+01 1.93207792e+00 2.77743806e+00
 1.33323479e+01 6.00562130e-01]
E = -128.1985249278214
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.60945678        1
[INPUT] 0    0    [1    /1   ]  227.283873348        1
[INPUT] 0    0    [1    /1   ]  1427.0438931         1
[INPUT] 0    0    [1    /1   ]  0.576322171787       1
[INPUT] 0    0    [1    /1   ]  50.0406209351        1
[INPUT] 0    0    [1    /1   ]  13.272995618         1
[INPUT] 0    0    [1    /1   ]  1.93207792301        1
[INPUT] 1    0    [1    /1   ]  2.7774380567         1
[INPUT] 1    0    [1    /1   ]  13.3323479126        1
[INPUT] 1    0    [1    /1   ]  0.600562130317       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.609456777516, 1.0]], [0, [227.28387334765145, 1.0]], [0, [1427.0438931023232, 1.0]], [0, [0.576322171786608, 1.0]], [0, [50.04062093505573, 1.0]], [0, [13.27299561797927, 1.0]], [0, [1.9320779230074123, 1.0]], [1, [2.7774380567034314, 1.0]], [1, [13.332347912619811, 1.0]], [1, [0.6005621303170935, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.60945678]
bas 1, expnt(s) = [227.28387335]
bas 2, expnt(s) = [1427.0438931]
bas 3, expnt(s) = [0.57632217]
bas 4, expnt(s) = [50.04062094]
bas 5, expnt(s) = [13.27299562]
bas 6, expnt(s) = [1.93207792]
bas 7, expnt(s) = [2.77743806]
bas 8, expnt(s) = [13.33234791]
bas 9, expnt(s) = [0.60056213]
CPU time:       101.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14460946e+03 7.96207358e+02 2.27283873e+02 1.47890913e+02
 1.42704389e+03 5.86601302e+02 5.76322172e-01 1.67114456e+00
 5.00406209e+01 4.75342933e+01 1.32729956e+01 1.75687854e+01
 1.93207792e+00 4.14031613e+00 2.77743806e+00 1.04601971e+01
 1.33323479e+01 7.43220517e+01 6.00562130e-01 1.54234604e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965583324480713
cond(S) = 160.04501366832594
E1 = -183.13697463992992  E_coul = 55.01155983688671
init E= -128.125414803043
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742898704757104  LUMO = 2.65786598066495
  mo_energy =
[-3.25136684e+01 -1.85362175e+00 -7.42898705e-01 -7.42898705e-01
 -7.42898705e-01  2.65786598e+00  2.65786598e+00  2.65786598e+00
  2.77472890e+00  1.99607712e+01  1.99607712e+01  1.99607712e+01
  4.55767712e+01  3.35244561e+02  2.02574697e+03  7.31760466e+03]
E1 = -182.13572920218022  E_coul = 53.93913319650428
cycle= 1 E= -128.196596005676  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259883
diis-c [-0.06753922  1.        ]
  HOMO = -0.807630669101231  LUMO = 2.60396033768169
  mo_energy =
[-3.27865269e+01 -1.92065889e+00 -8.07630669e-01 -8.07630669e-01
 -8.07630669e-01  2.60396034e+00  2.60396034e+00  2.60396034e+00
  2.72079671e+00  1.97705327e+01  1.97705327e+01  1.97705327e+01
  4.53415950e+01  3.34934741e+02  2.02538882e+03  7.31722227e+03]
E1 = -182.59690116583215  E_coul = 54.398679794260204
cycle= 2 E= -128.198221371572  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101603
diis-c [-4.04508439e-04  2.77650487e-01  7.22349513e-01]
  HOMO = -0.784927257265883  LUMO = 2.62452462599402
  mo_energy =
[-3.27119456e+01 -1.89709897e+00 -7.84927257e-01 -7.84927257e-01
 -7.84927257e-01  2.62452463e+00  2.62452463e+00  2.62452463e+00
  2.74097472e+00  1.98265503e+01  1.98265503e+01  1.98265503e+01
  4.54076383e+01  3.35016342e+02  2.02547579e+03  7.31731073e+03]
E1 = -182.46504735071565  E_coul = 54.2665224562597
cycle= 3 E= -128.198524894456  delta_E= -0.000304  |g|= 0.000693  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00088024
diis-c [-7.47021269e-08 -3.88068858e-03 -1.72365122e-03  1.00560434e+00]
  HOMO = -0.785158172896728  LUMO = 2.62434972878652
  mo_energy =
[-3.27126053e+01 -1.89739893e+00 -7.85158173e-01 -7.85158173e-01
 -7.85158173e-01  2.62434973e+00  2.62434973e+00  2.62434973e+00
  2.74073805e+00  1.98260343e+01  1.98260343e+01  1.98260343e+01
  4.54070180e+01  3.35015842e+02  2.02547542e+03  7.31731040e+03]
E1 = -182.46631939424753  E_coul = 54.26779446671446
cycle= 4 E= -128.198524927533  delta_E= -3.31e-08  |g|= 5.02e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.99061e-05
diis-c [-2.08450503e-10  5.01300110e-04 -8.57344730e-04 -1.69168305e-01
  1.16952435e+00]
  HOMO = -0.78514383937314  LUMO = 2.62436214218238
  mo_energy =
[-3.27125683e+01 -1.89739637e+00 -7.85143839e-01 -7.85143839e-01
 -7.85143839e-01  2.62436214e+00  2.62436214e+00  2.62436214e+00
  2.74073947e+00  1.98260629e+01  1.98260629e+01  1.98260629e+01
  4.54070481e+01  3.35015893e+02  2.02547549e+03  7.31731047e+03]
E1 = -182.4662572821417  E_coul = 54.26773235432058
cycle= 5 E= -128.198524927821  delta_E= -2.88e-10  |g|= 1.54e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4662572821417  E_coul = 54.26773235432058
  HOMO = -0.785143779957818  LUMO = 2.62436221011471
  mo_energy =
[-3.27125683e+01 -1.89739670e+00 -7.85143780e-01 -7.85143780e-01
 -7.85143780e-01  2.62436221e+00  2.62436221e+00  2.62436221e+00
  2.74073919e+00  1.98260630e+01  1.98260630e+01  1.98260630e+01
  4.54070481e+01  3.35015893e+02  2.02547549e+03  7.31731047e+03]
E1 = -182.46625727017653  E_coul = 54.26773234235511
Extra cycle  E= -128.198524927821  delta_E= -2.84e-13  |g|= 2.81e-07  |ddm|= 8.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.04501366832594
E1 = -182.46625727017653  E_coul = 54.26773234235511
init E= -128.198524927821
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785143765658983  LUMO = 2.62436222149799
  mo_energy =
[-3.27125682e+01 -1.89739675e+00 -7.85143766e-01 -7.85143766e-01
 -7.85143766e-01  2.62436222e+00  2.62436222e+00  2.62436222e+00
  2.74073914e+00  1.98260630e+01  1.98260630e+01  1.98260630e+01
  4.54070481e+01  3.35015893e+02  2.02547549e+03  7.31731047e+03]
E1 = -182.46625728190384  E_coul = 54.26773235408258
cycle= 1 E= -128.198524927821  delta_E= 1.42e-13  |g|= 5.13e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46625728190384  E_coul = 54.26773235408258
  HOMO = -0.785143761982836  LUMO = 2.62436222456149
  mo_energy =
[-3.27125682e+01 -1.89739676e+00 -7.85143762e-01 -7.85143762e-01
 -7.85143762e-01  2.62436222e+00  2.62436222e+00  2.62436222e+00
  2.74073913e+00  1.98260630e+01  1.98260630e+01  1.98260630e+01
  4.54070481e+01  3.35015893e+02  2.02547549e+03  7.31731047e+03]
E1 = -182.4662572791583  E_coul = 54.26773235133693
Extra cycle  E= -128.198524927821  delta_E= -1.14e-13  |g|= 9.35e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14460946e+03 2.27283873e+02 1.42704389e+03 5.76322172e-01
 5.00406209e+01 1.32729956e+01 1.93207792e+00 2.77743806e+00
 1.33323479e+01 6.00562130e-01]
grad_E = [-9.91310702e-06  6.34189590e-07  3.39171797e-05 -8.83102522e-05
  1.73385705e-05  1.47123276e-05  8.59165152e-05 -1.70317286e-04
  2.41065909e-05 -4.38881173e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:02 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61472172        1
[INPUT] 0    0    [1    /1   ]  227.427891089        1
[INPUT] 0    0    [1    /1   ]  1427.01392449        1
[INPUT] 0    0    [1    /1   ]  0.576154885264       1
[INPUT] 0    0    [1    /1   ]  50.0534074227        1
[INPUT] 0    0    [1    /1   ]  13.2734965805        1
[INPUT] 0    0    [1    /1   ]  1.93117516701        1
[INPUT] 1    0    [1    /1   ]  2.77830516005        1
[INPUT] 1    0    [1    /1   ]  13.3366348252        1
[INPUT] 1    0    [1    /1   ]  0.60070651518        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6147217184957, 1.0]], [0, [227.42789108944692, 1.0]], [0, [1427.013924493266, 1.0]], [0, [0.5761548852637877, 1.0]], [0, [50.053407422710585, 1.0]], [0, [13.273496580496357, 1.0]], [0, [1.9311751670098056, 1.0]], [1, [2.778305160048446, 1.0]], [1, [13.336634825171737, 1.0]], [1, [0.6007065151803633, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61472172]
bas 1, expnt(s) = [227.42789109]
bas 2, expnt(s) = [1427.01392449]
bas 3, expnt(s) = [0.57615489]
bas 4, expnt(s) = [50.05340742]
bas 5, expnt(s) = [13.27349658]
bas 6, expnt(s) = [1.93117517]
bas 7, expnt(s) = [2.77830516]
bas 8, expnt(s) = [13.33663483]
bas 9, expnt(s) = [0.60070652]
CPU time:       103.76
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461472e+03 7.96208824e+02 2.27427891e+02 1.47961191e+02
 1.42701392e+03 5.86592063e+02 5.76154885e-01 1.67078074e+00
 5.00534074e+01 4.75434026e+01 1.32734966e+01 1.75692827e+01
 1.93117517e+00 4.13886514e+00 2.77830516e+00 1.04642793e+01
 1.33366348e+01 7.43519250e+01 6.00706515e-01 1.54280956e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965556479527004
cond(S) = 160.07947727243976
E1 = -183.13696877166385  E_coul = 55.01156324277389
init E= -128.12540552889
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742898859885845  LUMO = 2.65876064999452
  mo_energy =
[-3.25136536e+01 -1.85363194e+00 -7.42898860e-01 -7.42898860e-01
 -7.42898860e-01  2.65876065e+00  2.65876065e+00  2.65876065e+00
  2.77302681e+00  1.99683985e+01  1.99683985e+01  1.99683985e+01
  4.55796865e+01  3.35402047e+02  2.02620590e+03  7.31810068e+03]
E1 = -182.1365436924432  E_coul = 53.93994449986682
cycle= 1 E= -128.196599192576  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259718
diis-c [-0.06745321  1.        ]
  HOMO = -0.807572085011516  LUMO = 2.60489162529087
  mo_energy =
[-3.27863578e+01 -1.92059785e+00 -8.07572085e-01 -8.07572085e-01
 -8.07572085e-01  2.60489163e+00  2.60489163e+00  2.60489163e+00
  2.71919045e+00  1.97782586e+01  1.97782586e+01  1.97782586e+01
  4.53446459e+01  3.35092363e+02  2.02584790e+03  7.31771845e+03]
E1 = -182.59735887282946  E_coul = 54.39913648561767
cycle= 2 E= -128.198222387212  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101521
diis-c [-4.03647703e-04  2.77619279e-01  7.22380721e-01]
  HOMO = -0.784885474984868  LUMO = 2.6254465271065
  mo_energy =
[-3.27118291e+01 -1.89705608e+00 -7.84885475e-01 -7.84885475e-01
 -7.84885475e-01  2.62544653e+00  2.62544653e+00  2.62544653e+00
  2.73934383e+00  1.98342421e+01  1.98342421e+01  1.98342421e+01
  4.54106452e+01  3.35173910e+02  2.02593481e+03  7.31780685e+03]
E1 = -182.46561705441857  E_coul = 54.26709163684811
cycle= 3 E= -128.19852541757  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00088032
diis-c [-7.40987651e-08 -3.87925236e-03 -1.70988691e-03  1.00558914e+00]
  HOMO = -0.785116458875475  LUMO = 2.62527147758801
  mo_energy =
[-3.27124889e+01 -1.89735584e+00 -7.85116459e-01 -7.85116459e-01
 -7.85116459e-01  2.62527148e+00  2.62527148e+00  2.62527148e+00
  2.73910742e+00  1.98337260e+01  1.98337260e+01  1.98337260e+01
  4.54100249e+01  3.35173409e+02  2.02593444e+03  7.31780652e+03]
E1 = -182.4668890320008  E_coul = 54.26836358140706
cycle= 4 E= -128.198525450594  delta_E= -3.3e-08  |g|= 5e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.9622e-05
diis-c [-2.07788051e-10  5.01463115e-04 -8.56144981e-04 -1.69088451e-01
  1.16944313e+00]
  HOMO = -0.785102166465441  LUMO = 2.62528385908401
  mo_energy =
[-3.27124520e+01 -1.89735328e+00 -7.85102166e-01 -7.85102166e-01
 -7.85102166e-01  2.62528386e+00  2.62528386e+00  2.62528386e+00
  2.73910885e+00  1.98337545e+01  1.98337545e+01  1.98337545e+01
  4.54100549e+01  3.35173460e+02  2.02593451e+03  7.31780659e+03]
E1 = -182.46682712389233  E_coul = 54.268301673012814
cycle= 5 E= -128.19852545088  delta_E= -2.86e-10  |g|= 1.54e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46682712389233  E_coul = 54.268301673012814
  HOMO = -0.785102107432529  LUMO = 2.62528392671774
  mo_energy =
[-3.27124520e+01 -1.89735360e+00 -7.85102107e-01 -7.85102107e-01
 -7.85102107e-01  2.62528393e+00  2.62528393e+00  2.62528393e+00
  2.73910858e+00  1.98337545e+01  1.98337545e+01  1.98337545e+01
  4.54100549e+01  3.35173460e+02  2.02593451e+03  7.31780659e+03]
E1 = -182.46682711501094  E_coul = 54.26830166413128
Extra cycle  E= -128.19852545088  delta_E= -1.42e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461472e+03 2.27427891e+02 1.42701392e+03 5.76154885e-01
 5.00534074e+01 1.32734966e+01 1.93117517e+00 2.77830516e+00
 1.33366348e+01 6.00706515e-01]
E = -128.19852545087966
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:03 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61472172        1
[INPUT] 0    0    [1    /1   ]  227.427891089        1
[INPUT] 0    0    [1    /1   ]  1427.01392449        1
[INPUT] 0    0    [1    /1   ]  0.576154885264       1
[INPUT] 0    0    [1    /1   ]  50.0534074227        1
[INPUT] 0    0    [1    /1   ]  13.2734965805        1
[INPUT] 0    0    [1    /1   ]  1.93117516701        1
[INPUT] 1    0    [1    /1   ]  2.77830516005        1
[INPUT] 1    0    [1    /1   ]  13.3366348252        1
[INPUT] 1    0    [1    /1   ]  0.60070651518        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6147217184957, 1.0]], [0, [227.42789108944692, 1.0]], [0, [1427.013924493266, 1.0]], [0, [0.5761548852637877, 1.0]], [0, [50.053407422710585, 1.0]], [0, [13.273496580496357, 1.0]], [0, [1.9311751670098056, 1.0]], [1, [2.778305160048446, 1.0]], [1, [13.336634825171737, 1.0]], [1, [0.6007065151803633, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61472172]
bas 1, expnt(s) = [227.42789109]
bas 2, expnt(s) = [1427.01392449]
bas 3, expnt(s) = [0.57615489]
bas 4, expnt(s) = [50.05340742]
bas 5, expnt(s) = [13.27349658]
bas 6, expnt(s) = [1.93117517]
bas 7, expnt(s) = [2.77830516]
bas 8, expnt(s) = [13.33663483]
bas 9, expnt(s) = [0.60070652]
CPU time:       104.40
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461472e+03 7.96208824e+02 2.27427891e+02 1.47961191e+02
 1.42701392e+03 5.86592063e+02 5.76154885e-01 1.67078074e+00
 5.00534074e+01 4.75434026e+01 1.32734966e+01 1.75692827e+01
 1.93117517e+00 4.13886514e+00 2.77830516e+00 1.04642793e+01
 1.33366348e+01 7.43519250e+01 6.00706515e-01 1.54280956e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965556479527004
cond(S) = 160.07947727243976
E1 = -183.13696877166385  E_coul = 55.01156324277389
init E= -128.12540552889
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742898859885845  LUMO = 2.65876064999452
  mo_energy =
[-3.25136536e+01 -1.85363194e+00 -7.42898860e-01 -7.42898860e-01
 -7.42898860e-01  2.65876065e+00  2.65876065e+00  2.65876065e+00
  2.77302681e+00  1.99683985e+01  1.99683985e+01  1.99683985e+01
  4.55796865e+01  3.35402047e+02  2.02620590e+03  7.31810068e+03]
E1 = -182.1365436924432  E_coul = 53.93994449986682
cycle= 1 E= -128.196599192576  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259718
diis-c [-0.06745321  1.        ]
  HOMO = -0.807572085011516  LUMO = 2.60489162529087
  mo_energy =
[-3.27863578e+01 -1.92059785e+00 -8.07572085e-01 -8.07572085e-01
 -8.07572085e-01  2.60489163e+00  2.60489163e+00  2.60489163e+00
  2.71919045e+00  1.97782586e+01  1.97782586e+01  1.97782586e+01
  4.53446459e+01  3.35092363e+02  2.02584790e+03  7.31771845e+03]
E1 = -182.59735887282946  E_coul = 54.39913648561767
cycle= 2 E= -128.198222387212  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101521
diis-c [-4.03647703e-04  2.77619279e-01  7.22380721e-01]
  HOMO = -0.784885474984868  LUMO = 2.6254465271065
  mo_energy =
[-3.27118291e+01 -1.89705608e+00 -7.84885475e-01 -7.84885475e-01
 -7.84885475e-01  2.62544653e+00  2.62544653e+00  2.62544653e+00
  2.73934383e+00  1.98342421e+01  1.98342421e+01  1.98342421e+01
  4.54106452e+01  3.35173910e+02  2.02593481e+03  7.31780685e+03]
E1 = -182.46561705441857  E_coul = 54.26709163684811
cycle= 3 E= -128.19852541757  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00088032
diis-c [-7.40987651e-08 -3.87925236e-03 -1.70988691e-03  1.00558914e+00]
  HOMO = -0.785116458875475  LUMO = 2.62527147758801
  mo_energy =
[-3.27124889e+01 -1.89735584e+00 -7.85116459e-01 -7.85116459e-01
 -7.85116459e-01  2.62527148e+00  2.62527148e+00  2.62527148e+00
  2.73910742e+00  1.98337260e+01  1.98337260e+01  1.98337260e+01
  4.54100249e+01  3.35173409e+02  2.02593444e+03  7.31780652e+03]
E1 = -182.4668890320008  E_coul = 54.26836358140706
cycle= 4 E= -128.198525450594  delta_E= -3.3e-08  |g|= 5e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.9622e-05
diis-c [-2.07788051e-10  5.01463115e-04 -8.56144981e-04 -1.69088451e-01
  1.16944313e+00]
  HOMO = -0.785102166465441  LUMO = 2.62528385908401
  mo_energy =
[-3.27124520e+01 -1.89735328e+00 -7.85102166e-01 -7.85102166e-01
 -7.85102166e-01  2.62528386e+00  2.62528386e+00  2.62528386e+00
  2.73910885e+00  1.98337545e+01  1.98337545e+01  1.98337545e+01
  4.54100549e+01  3.35173460e+02  2.02593451e+03  7.31780659e+03]
E1 = -182.46682712389233  E_coul = 54.268301673012814
cycle= 5 E= -128.19852545088  delta_E= -2.86e-10  |g|= 1.54e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46682712389233  E_coul = 54.268301673012814
  HOMO = -0.785102107432529  LUMO = 2.62528392671774
  mo_energy =
[-3.27124520e+01 -1.89735360e+00 -7.85102107e-01 -7.85102107e-01
 -7.85102107e-01  2.62528393e+00  2.62528393e+00  2.62528393e+00
  2.73910858e+00  1.98337545e+01  1.98337545e+01  1.98337545e+01
  4.54100549e+01  3.35173460e+02  2.02593451e+03  7.31780659e+03]
E1 = -182.46682711501094  E_coul = 54.26830166413128
Extra cycle  E= -128.19852545088  delta_E= -1.42e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.07947727243976
E1 = -182.46682711501094  E_coul = 54.26830166413128
init E= -128.19852545088
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785102092928874  LUMO = 2.62528393829263
  mo_energy =
[-3.27124520e+01 -1.89735365e+00 -7.85102093e-01 -7.85102093e-01
 -7.85102093e-01  2.62528394e+00  2.62528394e+00  2.62528394e+00
  2.73910852e+00  1.98337545e+01  1.98337545e+01  1.98337545e+01
  4.54100549e+01  3.35173460e+02  2.02593451e+03  7.31780659e+03]
E1 = -182.46682712568918  E_coul = 54.26830167480939
cycle= 1 E= -128.19852545088  delta_E= -1.42e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46682712568918  E_coul = 54.26830167480939
  HOMO = -0.78510208932547  LUMO = 2.62528394129157
  mo_energy =
[-3.27124520e+01 -1.89735366e+00 -7.85102089e-01 -7.85102089e-01
 -7.85102089e-01  2.62528394e+00  2.62528394e+00  2.62528394e+00
  2.73910852e+00  1.98337545e+01  1.98337545e+01  1.98337545e+01
  4.54100549e+01  3.35173460e+02  2.02593451e+03  7.31780659e+03]
E1 = -182.4668271233895  E_coul = 54.26830167250984
Extra cycle  E= -128.19852545088  delta_E= 1.42e-13  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461472e+03 2.27427891e+02 1.42701392e+03 5.76154885e-01
 5.00534074e+01 1.32734966e+01 1.93117517e+00 2.77830516e+00
 1.33366348e+01 6.00706515e-01]
grad_E = [-9.93932945e-06  5.25475119e-06  3.37721930e-05 -2.38285675e-05
  6.29550000e-06  4.01144041e-06  2.45686263e-05 -4.92168113e-05
  2.41142534e-05 -1.43555602e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61633587        1
[INPUT] 0    0    [1    /1   ]  227.47614057         1
[INPUT] 0    0    [1    /1   ]  1427.0044083         1
[INPUT] 0    0    [1    /1   ]  0.576081503901       1
[INPUT] 0    0    [1    /1   ]  50.0570017884        1
[INPUT] 0    0    [1    /1   ]  13.2734797953        1
[INPUT] 0    0    [1    /1   ]  1.93079400839        1
[INPUT] 1    0    [1    /1   ]  2.77815447737        1
[INPUT] 1    0    [1    /1   ]  13.3348146828        1
[INPUT] 1    0    [1    /1   ]  0.600691751028       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6163358712374, 1.0]], [0, [227.47614057033255, 1.0]], [0, [1427.0044082985146, 1.0]], [0, [0.5760815039008725, 1.0]], [0, [50.05700178841194, 1.0]], [0, [13.273479795252442, 1.0]], [0, [1.9307940083866808, 1.0]], [1, [2.778154477372646, 1.0]], [1, [13.33481468275324, 1.0]], [1, [0.6006917510284071, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61633587]
bas 1, expnt(s) = [227.47614057]
bas 2, expnt(s) = [1427.0044083]
bas 3, expnt(s) = [0.5760815]
bas 4, expnt(s) = [50.05700179]
bas 5, expnt(s) = [13.2734798]
bas 6, expnt(s) = [1.93079401]
bas 7, expnt(s) = [2.77815448]
bas 8, expnt(s) = [13.33481468]
bas 9, expnt(s) = [0.60069175]
CPU time:       106.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461634e+03 7.96209274e+02 2.27476141e+02 1.47984733e+02
 1.42700441e+03 5.86589129e+02 5.76081504e-01 1.67062114e+00
 5.00570018e+01 4.75459631e+01 1.32734798e+01 1.75692660e+01
 1.93079401e+00 4.13825245e+00 2.77815448e+00 1.04635699e+01
 1.33348147e+01 7.43392411e+01 6.00691751e-01 1.54276216e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965561079189134
cond(S) = 160.09039859797593
E1 = -183.13696474654458  E_coul = 55.01155489152161
init E= -128.125409855023
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897900975406  LUMO = 2.65865490308205
  mo_energy =
[-3.25136577e+01 -1.85363513e+00 -7.42897901e-01 -7.42897901e-01
 -7.42897901e-01  2.65865490e+00  2.65865490e+00  2.65865490e+00
  2.77229490e+00  1.99659763e+01  1.99659763e+01  1.99659763e+01
  4.55794395e+01  3.35451769e+02  2.02635660e+03  7.31826460e+03]
E1 = -182.13645939901087  E_coul = 53.939860348069736
cycle= 1 E= -128.196599050941  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259725
diis-c [-0.06745719  1.        ]
  HOMO = -0.807577641653247  LUMO = 2.6047823590784
  mo_energy =
[-3.27863737e+01 -1.92060738e+00 -8.07577642e-01 -8.07577642e-01
 -8.07577642e-01  2.60478236e+00  2.60478236e+00  2.60478236e+00
  2.71846649e+00  1.97758372e+01  1.97758372e+01  1.97758372e+01
  4.53443869e+01  3.35142067e+02  2.02599857e+03  7.31788236e+03]
E1 = -182.59730792041842  E_coul = 54.399085519560636
cycle= 2 E= -128.198222400858  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101529
diis-c [-4.03437821e-04  2.77631169e-01  7.22368831e-01]
  HOMO = -0.784889564706403  LUMO = 2.62533776452192
  mo_energy =
[-3.27118416e+01 -1.89706422e+00 -7.84889565e-01 -7.84889565e-01
 -7.84889565e-01  2.62533776e+00  2.62533776e+00  2.62533776e+00
  2.73861716e+00  1.98318207e+01  1.98318207e+01  1.98318207e+01
  4.54103901e+01  3.35223618e+02  2.02608549e+03  7.31797076e+03]
E1 = -182.46555577419747  E_coul = 54.2670302969947
cycle= 3 E= -128.198525477203  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879445
diis-c [-7.41027882e-08 -3.88009321e-03 -1.72183779e-03  1.00560193e+00]
  HOMO = -0.785120328902435  LUMO = 2.62516292429965
  mo_energy =
[-3.27125007e+01 -1.89736377e+00 -7.85120329e-01 -7.85120329e-01
 -7.85120329e-01  2.62516292e+00  2.62516292e+00  2.62516292e+00
  2.73838098e+00  1.98313052e+01  1.98313052e+01  1.98313052e+01
  4.54097705e+01  3.35223118e+02  2.02608512e+03  7.31797043e+03]
E1 = -182.4668265602104  E_coul = 54.268301050032136
cycle= 4 E= -128.198525510178  delta_E= -3.3e-08  |g|= 5e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.96386e-05
diis-c [-2.07835227e-10  5.01746934e-04 -8.54306911e-04 -1.69143493e-01
  1.16949605e+00]
  HOMO = -0.78510603264886  LUMO = 2.62517530829287
  mo_energy =
[-3.27124638e+01 -1.89736121e+00 -7.85106033e-01 -7.85106033e-01
 -7.85106033e-01  2.62517531e+00  2.62517531e+00  2.62517531e+00
  2.73838241e+00  1.98313337e+01  1.98313337e+01  1.98313337e+01
  4.54098005e+01  3.35223169e+02  2.02608519e+03  7.31797050e+03]
E1 = -182.46676464476232  E_coul = 54.26823913429818
cycle= 5 E= -128.198525510464  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46676464476232  E_coul = 54.26823913429818
  HOMO = -0.785105973779727  LUMO = 2.62517537582149
  mo_energy =
[-3.27124637e+01 -1.89736153e+00 -7.85105974e-01 -7.85105974e-01
 -7.85105974e-01  2.62517538e+00  2.62517538e+00  2.62517538e+00
  2.73838213e+00  1.98313338e+01  1.98313338e+01  1.98313338e+01
  4.54098005e+01  3.35223169e+02  2.02608519e+03  7.31797050e+03]
E1 = -182.466764636743  E_coul = 54.268239126278445
Extra cycle  E= -128.198525510465  delta_E= -3.98e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461634e+03 2.27476141e+02 1.42700441e+03 5.76081504e-01
 5.00570018e+01 1.32734798e+01 1.93079401e+00 2.77815448e+00
 1.33348147e+01 6.00691751e-01]
E = -128.19852551046455
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:06 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61633587        1
[INPUT] 0    0    [1    /1   ]  227.47614057         1
[INPUT] 0    0    [1    /1   ]  1427.0044083         1
[INPUT] 0    0    [1    /1   ]  0.576081503901       1
[INPUT] 0    0    [1    /1   ]  50.0570017884        1
[INPUT] 0    0    [1    /1   ]  13.2734797953        1
[INPUT] 0    0    [1    /1   ]  1.93079400839        1
[INPUT] 1    0    [1    /1   ]  2.77815447737        1
[INPUT] 1    0    [1    /1   ]  13.3348146828        1
[INPUT] 1    0    [1    /1   ]  0.600691751028       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6163358712374, 1.0]], [0, [227.47614057033255, 1.0]], [0, [1427.0044082985146, 1.0]], [0, [0.5760815039008725, 1.0]], [0, [50.05700178841194, 1.0]], [0, [13.273479795252442, 1.0]], [0, [1.9307940083866808, 1.0]], [1, [2.778154477372646, 1.0]], [1, [13.33481468275324, 1.0]], [1, [0.6006917510284071, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61633587]
bas 1, expnt(s) = [227.47614057]
bas 2, expnt(s) = [1427.0044083]
bas 3, expnt(s) = [0.5760815]
bas 4, expnt(s) = [50.05700179]
bas 5, expnt(s) = [13.2734798]
bas 6, expnt(s) = [1.93079401]
bas 7, expnt(s) = [2.77815448]
bas 8, expnt(s) = [13.33481468]
bas 9, expnt(s) = [0.60069175]
CPU time:       107.45
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461634e+03 7.96209274e+02 2.27476141e+02 1.47984733e+02
 1.42700441e+03 5.86589129e+02 5.76081504e-01 1.67062114e+00
 5.00570018e+01 4.75459631e+01 1.32734798e+01 1.75692660e+01
 1.93079401e+00 4.13825245e+00 2.77815448e+00 1.04635699e+01
 1.33348147e+01 7.43392411e+01 6.00691751e-01 1.54276216e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965561079189134
cond(S) = 160.09039859797593
E1 = -183.13696474654458  E_coul = 55.01155489152161
init E= -128.125409855023
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897900975406  LUMO = 2.65865490308205
  mo_energy =
[-3.25136577e+01 -1.85363513e+00 -7.42897901e-01 -7.42897901e-01
 -7.42897901e-01  2.65865490e+00  2.65865490e+00  2.65865490e+00
  2.77229490e+00  1.99659763e+01  1.99659763e+01  1.99659763e+01
  4.55794395e+01  3.35451769e+02  2.02635660e+03  7.31826460e+03]
E1 = -182.13645939901087  E_coul = 53.939860348069736
cycle= 1 E= -128.196599050941  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259725
diis-c [-0.06745719  1.        ]
  HOMO = -0.807577641653247  LUMO = 2.6047823590784
  mo_energy =
[-3.27863737e+01 -1.92060738e+00 -8.07577642e-01 -8.07577642e-01
 -8.07577642e-01  2.60478236e+00  2.60478236e+00  2.60478236e+00
  2.71846649e+00  1.97758372e+01  1.97758372e+01  1.97758372e+01
  4.53443869e+01  3.35142067e+02  2.02599857e+03  7.31788236e+03]
E1 = -182.59730792041842  E_coul = 54.399085519560636
cycle= 2 E= -128.198222400858  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101529
diis-c [-4.03437821e-04  2.77631169e-01  7.22368831e-01]
  HOMO = -0.784889564706403  LUMO = 2.62533776452192
  mo_energy =
[-3.27118416e+01 -1.89706422e+00 -7.84889565e-01 -7.84889565e-01
 -7.84889565e-01  2.62533776e+00  2.62533776e+00  2.62533776e+00
  2.73861716e+00  1.98318207e+01  1.98318207e+01  1.98318207e+01
  4.54103901e+01  3.35223618e+02  2.02608549e+03  7.31797076e+03]
E1 = -182.46555577419747  E_coul = 54.2670302969947
cycle= 3 E= -128.198525477203  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879445
diis-c [-7.41027882e-08 -3.88009321e-03 -1.72183779e-03  1.00560193e+00]
  HOMO = -0.785120328902435  LUMO = 2.62516292429965
  mo_energy =
[-3.27125007e+01 -1.89736377e+00 -7.85120329e-01 -7.85120329e-01
 -7.85120329e-01  2.62516292e+00  2.62516292e+00  2.62516292e+00
  2.73838098e+00  1.98313052e+01  1.98313052e+01  1.98313052e+01
  4.54097705e+01  3.35223118e+02  2.02608512e+03  7.31797043e+03]
E1 = -182.4668265602104  E_coul = 54.268301050032136
cycle= 4 E= -128.198525510178  delta_E= -3.3e-08  |g|= 5e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.96386e-05
diis-c [-2.07835227e-10  5.01746934e-04 -8.54306911e-04 -1.69143493e-01
  1.16949605e+00]
  HOMO = -0.78510603264886  LUMO = 2.62517530829287
  mo_energy =
[-3.27124638e+01 -1.89736121e+00 -7.85106033e-01 -7.85106033e-01
 -7.85106033e-01  2.62517531e+00  2.62517531e+00  2.62517531e+00
  2.73838241e+00  1.98313337e+01  1.98313337e+01  1.98313337e+01
  4.54098005e+01  3.35223169e+02  2.02608519e+03  7.31797050e+03]
E1 = -182.46676464476232  E_coul = 54.26823913429818
cycle= 5 E= -128.198525510464  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46676464476232  E_coul = 54.26823913429818
  HOMO = -0.785105973779727  LUMO = 2.62517537582149
  mo_energy =
[-3.27124637e+01 -1.89736153e+00 -7.85105974e-01 -7.85105974e-01
 -7.85105974e-01  2.62517538e+00  2.62517538e+00  2.62517538e+00
  2.73838213e+00  1.98313338e+01  1.98313338e+01  1.98313338e+01
  4.54098005e+01  3.35223169e+02  2.02608519e+03  7.31797050e+03]
E1 = -182.466764636743  E_coul = 54.268239126278445
Extra cycle  E= -128.198525510465  delta_E= -3.98e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.09039859797593
E1 = -182.466764636743  E_coul = 54.268239126278445
init E= -128.198525510465
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785105959221925  LUMO = 2.62517538744504
  mo_energy =
[-3.27124637e+01 -1.89736158e+00 -7.85105959e-01 -7.85105959e-01
 -7.85105959e-01  2.62517539e+00  2.62517539e+00  2.62517539e+00
  2.73838208e+00  1.98313338e+01  1.98313338e+01  1.98313338e+01
  4.54098005e+01  3.35223169e+02  2.02608519e+03  7.31797050e+03]
E1 = -182.46676464710995  E_coul = 54.26823913664561
cycle= 1 E= -128.198525510464  delta_E= 1.99e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46676464710995  E_coul = 54.26823913664561
  HOMO = -0.785105955640364  LUMO = 2.62517539042406
  mo_energy =
[-3.27124637e+01 -1.89736159e+00 -7.85105956e-01 -7.85105956e-01
 -7.85105956e-01  2.62517539e+00  2.62517539e+00  2.62517539e+00
  2.73838207e+00  1.98313338e+01  1.98313338e+01  1.98313338e+01
  4.54098005e+01  3.35223169e+02  2.02608519e+03  7.31797050e+03]
E1 = -182.46676464493987  E_coul = 54.268239134475444
Extra cycle  E= -128.198525510464  delta_E= -8.53e-14  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461634e+03 2.27476141e+02 1.42700441e+03 5.76081504e-01
 5.00570018e+01 1.32734798e+01 1.93079401e+00 2.77815448e+00
 1.33348147e+01 6.00691751e-01]
grad_E = [-9.94829784e-06  6.95330267e-06  3.37220411e-05 -1.03994226e-06
  1.69508527e-06  3.39214183e-07  1.64141531e-06 -3.17971191e-06
  1.01901064e-05 -1.90983166e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61644359        1
[INPUT] 0    0    [1    /1   ]  227.480064705        1
[INPUT] 0    0    [1    /1   ]  1427.00371742        1
[INPUT] 0    0    [1    /1   ]  0.576071751817       1
[INPUT] 0    0    [1    /1   ]  50.0571283793        1
[INPUT] 0    0    [1    /1   ]  13.2734355012        1
[INPUT] 0    0    [1    /1   ]  1.93074644794        1
[INPUT] 1    0    [1    /1   ]  2.77804656721        1
[INPUT] 1    0    [1    /1   ]  13.3339545111        1
[INPUT] 1    0    [1    /1   ]  0.600676961245       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.616443594494, 1.0]], [0, [227.48006470542668, 1.0]], [0, [1427.0037174224472, 1.0]], [0, [0.576071751817368, 1.0]], [0, [50.057128379271475, 1.0]], [0, [13.273435501164082, 1.0]], [0, [1.9307464479420098, 1.0]], [1, [2.7780465672146573, 1.0]], [1, [13.33395451113451, 1.0]], [1, [0.6006769612454635, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61644359]
bas 1, expnt(s) = [227.48006471]
bas 2, expnt(s) = [1427.00371742]
bas 3, expnt(s) = [0.57607175]
bas 4, expnt(s) = [50.05712838]
bas 5, expnt(s) = [13.2734355]
bas 6, expnt(s) = [1.93074645]
bas 7, expnt(s) = [2.77804657]
bas 8, expnt(s) = [13.33395451]
bas 9, expnt(s) = [0.60067696]
CPU time:       109.77
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461644e+03 7.96209304e+02 2.27480065e+02 1.47986647e+02
 1.42700372e+03 5.86588916e+02 5.76071752e-01 1.67059993e+00
 5.00571284e+01 4.75460533e+01 1.32734355e+01 1.75692221e+01
 1.93074645e+00 4.13817600e+00 2.77804657e+00 1.04630619e+01
 1.33339545e+01 7.43332470e+01 6.00676961e-01 1.54271468e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965564384758167
cond(S) = 160.09112338428415
E1 = -183.13696409120317  E_coul = 55.01155221970563
init E= -128.125411871498
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897591242643  LUMO = 2.65855881726535
  mo_energy =
[-3.25136600e+01 -1.85363533e+00 -7.42897591e-01 -7.42897591e-01
 -7.42897591e-01  2.65855882e+00  2.65855882e+00  2.65855882e+00
  2.77220078e+00  1.99646940e+01  1.99646940e+01  1.99646940e+01
  4.55791405e+01  3.35455098e+02  2.02636811e+03  7.31827732e+03]
E1 = -182.13637583541808  E_coul = 53.93977703240652
cycle= 1 E= -128.196598803012  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259739
diis-c [-0.06746458  1.        ]
  HOMO = -0.807583502088304  LUMO = 2.60468259749733
  mo_energy =
[-3.27863906e+01 -1.92061459e+00 -8.07583502e-01 -8.07583502e-01
 -8.07583502e-01  2.60468260e+00  2.60468260e+00  2.60468260e+00
  2.71836781e+00  1.97745481e+01  1.97745481e+01  1.97745481e+01
  4.53440746e+01  3.35145381e+02  2.02601007e+03  7.31789507e+03]
E1 = -182.59725994399918  E_coul = 54.399037588791245
cycle= 2 E= -128.198222355208  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101537
diis-c [-4.03437387e-04  2.77636947e-01  7.22363053e-01]
  HOMO = -0.784893779952191  LUMO = 2.62523882519894
  mo_energy =
[-3.27118537e+01 -1.89706971e+00 -7.84893780e-01 -7.84893780e-01
 -7.84893780e-01  2.62523883e+00  2.62523883e+00  2.62523883e+00
  2.73851947e+00  1.98305342e+01  1.98305342e+01  1.98305342e+01
  4.54100822e+01  3.35226937e+02  2.02609699e+03  7.31798347e+03]
E1 = -182.46549666095498  E_coul = 54.26697118027775
cycle= 3 E= -128.198525480677  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879181
diis-c [-7.41462337e-08 -3.88044272e-03 -1.72634500e-03  1.00560679e+00]
  HOMO = -0.785124474372169  LUMO = 2.62506405779002
  mo_energy =
[-3.27125126e+01 -1.89736921e+00 -7.85124474e-01 -7.85124474e-01
 -7.85124474e-01  2.62506406e+00  2.62506406e+00  2.62506406e+00
  2.73828334e+00  1.98300188e+01  1.98300188e+01  1.98300188e+01
  4.54094627e+01  3.35226437e+02  2.02609662e+03  7.31798314e+03]
E1 = -182.466767099179  E_coul = 54.26824158553661
cycle= 4 E= -128.198525513642  delta_E= -3.3e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.96633e-05
diis-c [-2.07895669e-10  5.01818566e-04 -8.53843229e-04 -1.69165099e-01
  1.16951712e+00]
  HOMO = -0.785110174131741  LUMO = 2.62507644471948
  mo_energy =
[-3.27124757e+01 -1.89736665e+00 -7.85110174e-01 -7.85110174e-01
 -7.85110174e-01  2.62507644e+00  2.62507644e+00  2.62507644e+00
  2.73828476e+00  1.98300473e+01  1.98300473e+01  1.98300473e+01
  4.54094927e+01  3.35226488e+02  2.02609669e+03  7.31798321e+03]
E1 = -182.4667051673494  E_coul = 54.268179653420844
cycle= 5 E= -128.198525513929  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4667051673494  E_coul = 54.268179653420844
  HOMO = -0.785110115280623  LUMO = 2.62507651224118
  mo_energy =
[-3.27124756e+01 -1.89736697e+00 -7.85110115e-01 -7.85110115e-01
 -7.85110115e-01  2.62507651e+00  2.62507651e+00  2.62507651e+00
  2.73828448e+00  1.98300474e+01  1.98300474e+01  1.98300474e+01
  4.54094927e+01  3.35226488e+02  2.02609669e+03  7.31798321e+03]
E1 = -182.46670515934719  E_coul = 54.26817964541847
Extra cycle  E= -128.198525513929  delta_E= -1.42e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
exp = [2.14461644e+03 2.27480065e+02 1.42700372e+03 5.76071752e-01
 5.00571284e+01 1.32734355e+01 1.93074645e+00 2.77804657e+00
 1.33339545e+01 6.00676961e-01]
E = -128.1985255139287
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61644359        1
[INPUT] 0    0    [1    /1   ]  227.480064705        1
[INPUT] 0    0    [1    /1   ]  1427.00371742        1
[INPUT] 0    0    [1    /1   ]  0.576071751817       1
[INPUT] 0    0    [1    /1   ]  50.0571283793        1
[INPUT] 0    0    [1    /1   ]  13.2734355012        1
[INPUT] 0    0    [1    /1   ]  1.93074644794        1
[INPUT] 1    0    [1    /1   ]  2.77804656721        1
[INPUT] 1    0    [1    /1   ]  13.3339545111        1
[INPUT] 1    0    [1    /1   ]  0.600676961245       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.616443594494, 1.0]], [0, [227.48006470542668, 1.0]], [0, [1427.0037174224472, 1.0]], [0, [0.576071751817368, 1.0]], [0, [50.057128379271475, 1.0]], [0, [13.273435501164082, 1.0]], [0, [1.9307464479420098, 1.0]], [1, [2.7780465672146573, 1.0]], [1, [13.33395451113451, 1.0]], [1, [0.6006769612454635, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61644359]
bas 1, expnt(s) = [227.48006471]
bas 2, expnt(s) = [1427.00371742]
bas 3, expnt(s) = [0.57607175]
bas 4, expnt(s) = [50.05712838]
bas 5, expnt(s) = [13.2734355]
bas 6, expnt(s) = [1.93074645]
bas 7, expnt(s) = [2.77804657]
bas 8, expnt(s) = [13.33395451]
bas 9, expnt(s) = [0.60067696]
CPU time:       110.44
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461644e+03 7.96209304e+02 2.27480065e+02 1.47986647e+02
 1.42700372e+03 5.86588916e+02 5.76071752e-01 1.67059993e+00
 5.00571284e+01 4.75460533e+01 1.32734355e+01 1.75692221e+01
 1.93074645e+00 4.13817600e+00 2.77804657e+00 1.04630619e+01
 1.33339545e+01 7.43332470e+01 6.00676961e-01 1.54271468e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965564384758167
cond(S) = 160.09112338428415
E1 = -183.13696409120317  E_coul = 55.01155221970563
init E= -128.125411871498
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897591242643  LUMO = 2.65855881726535
  mo_energy =
[-3.25136600e+01 -1.85363533e+00 -7.42897591e-01 -7.42897591e-01
 -7.42897591e-01  2.65855882e+00  2.65855882e+00  2.65855882e+00
  2.77220078e+00  1.99646940e+01  1.99646940e+01  1.99646940e+01
  4.55791405e+01  3.35455098e+02  2.02636811e+03  7.31827732e+03]
E1 = -182.13637583541808  E_coul = 53.93977703240652
cycle= 1 E= -128.196598803012  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259739
diis-c [-0.06746458  1.        ]
  HOMO = -0.807583502088304  LUMO = 2.60468259749733
  mo_energy =
[-3.27863906e+01 -1.92061459e+00 -8.07583502e-01 -8.07583502e-01
 -8.07583502e-01  2.60468260e+00  2.60468260e+00  2.60468260e+00
  2.71836781e+00  1.97745481e+01  1.97745481e+01  1.97745481e+01
  4.53440746e+01  3.35145381e+02  2.02601007e+03  7.31789507e+03]
E1 = -182.59725994399918  E_coul = 54.399037588791245
cycle= 2 E= -128.198222355208  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101537
diis-c [-4.03437387e-04  2.77636947e-01  7.22363053e-01]
  HOMO = -0.784893779952191  LUMO = 2.62523882519894
  mo_energy =
[-3.27118537e+01 -1.89706971e+00 -7.84893780e-01 -7.84893780e-01
 -7.84893780e-01  2.62523883e+00  2.62523883e+00  2.62523883e+00
  2.73851947e+00  1.98305342e+01  1.98305342e+01  1.98305342e+01
  4.54100822e+01  3.35226937e+02  2.02609699e+03  7.31798347e+03]
E1 = -182.46549666095498  E_coul = 54.26697118027775
cycle= 3 E= -128.198525480677  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879181
diis-c [-7.41462337e-08 -3.88044272e-03 -1.72634500e-03  1.00560679e+00]
  HOMO = -0.785124474372169  LUMO = 2.62506405779002
  mo_energy =
[-3.27125126e+01 -1.89736921e+00 -7.85124474e-01 -7.85124474e-01
 -7.85124474e-01  2.62506406e+00  2.62506406e+00  2.62506406e+00
  2.73828334e+00  1.98300188e+01  1.98300188e+01  1.98300188e+01
  4.54094627e+01  3.35226437e+02  2.02609662e+03  7.31798314e+03]
E1 = -182.466767099179  E_coul = 54.26824158553661
cycle= 4 E= -128.198525513642  delta_E= -3.3e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.96633e-05
diis-c [-2.07895669e-10  5.01818566e-04 -8.53843229e-04 -1.69165099e-01
  1.16951712e+00]
  HOMO = -0.785110174131741  LUMO = 2.62507644471948
  mo_energy =
[-3.27124757e+01 -1.89736665e+00 -7.85110174e-01 -7.85110174e-01
 -7.85110174e-01  2.62507644e+00  2.62507644e+00  2.62507644e+00
  2.73828476e+00  1.98300473e+01  1.98300473e+01  1.98300473e+01
  4.54094927e+01  3.35226488e+02  2.02609669e+03  7.31798321e+03]
E1 = -182.4667051673494  E_coul = 54.268179653420844
cycle= 5 E= -128.198525513929  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4667051673494  E_coul = 54.268179653420844
  HOMO = -0.785110115280623  LUMO = 2.62507651224118
  mo_energy =
[-3.27124756e+01 -1.89736697e+00 -7.85110115e-01 -7.85110115e-01
 -7.85110115e-01  2.62507651e+00  2.62507651e+00  2.62507651e+00
  2.73828448e+00  1.98300474e+01  1.98300474e+01  1.98300474e+01
  4.54094927e+01  3.35226488e+02  2.02609669e+03  7.31798321e+03]
E1 = -182.46670515934719  E_coul = 54.26817964541847
Extra cycle  E= -128.198525513929  delta_E= -1.42e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.09112338428415
E1 = -182.46670515934719  E_coul = 54.26817964541847
init E= -128.198525513929
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785110100722591  LUMO = 2.6250765238644
  mo_energy =
[-3.27124756e+01 -1.89736702e+00 -7.85110101e-01 -7.85110101e-01
 -7.85110101e-01  2.62507652e+00  2.62507652e+00  2.62507652e+00
  2.73828443e+00  1.98300474e+01  1.98300474e+01  1.98300474e+01
  4.54094927e+01  3.35226488e+02  2.02609669e+03  7.31798321e+03]
E1 = -182.46670516970428  E_coul = 54.26817965577539
cycle= 1 E= -128.198525513929  delta_E= -1.99e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46670516970428  E_coul = 54.26817965577539
  HOMO = -0.785110097141822  LUMO = 2.62507652684256
  mo_energy =
[-3.27124756e+01 -1.89736703e+00 -7.85110097e-01 -7.85110097e-01
 -7.85110097e-01  2.62507653e+00  2.62507653e+00  2.62507653e+00
  2.73828443e+00  1.98300474e+01  1.98300474e+01  1.98300474e+01
  4.54094927e+01  3.35226488e+02  2.02609669e+03  7.31798321e+03]
E1 = -182.46670516753784  E_coul = 54.268179653609
Extra cycle  E= -128.198525513929  delta_E= 5.68e-14  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461644e+03 2.27480065e+02 1.42700372e+03 5.76071752e-01
 5.00571284e+01 1.32734355e+01 1.93074645e+00 2.77804657e+00
 1.33339545e+01 6.00676961e-01]
grad_E = [-9.94908116e-06  7.12926497e-06  3.37175546e-05  7.99690827e-07
  1.08953923e-06  6.48480845e-08 -6.36501426e-07  2.03683171e-06
  5.96078972e-06  2.02266129e-07]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61646627        1
[INPUT] 0    0    [1    /1   ]  227.480721961        1
[INPUT] 0    0    [1    /1   ]  1427.00358649        1
[INPUT] 0    0    [1    /1   ]  0.576068570343       1
[INPUT] 0    0    [1    /1   ]  50.057081231         1
[INPUT] 0    0    [1    /1   ]  13.2734103524        1
[INPUT] 0    0    [1    /1   ]  1.93073179809        1
[INPUT] 1    0    [1    /1   ]  2.77799443498        1
[INPUT] 1    0    [1    /1   ]  13.333554706         1
[INPUT] 1    0    [1    /1   ]  0.600669678591       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.616466272475, 1.0]], [0, [227.48072196072707, 1.0]], [0, [1427.0035864855074, 1.0]], [0, [0.5760685703426589, 1.0]], [0, [50.057081230955696, 1.0]], [0, [13.27341035235314, 1.0]], [0, [1.9307317980944432, 1.0]], [1, [2.777994434982984, 1.0]], [1, [13.33355470597057, 1.0]], [1, [0.600669678591047, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61646627]
bas 1, expnt(s) = [227.48072196]
bas 2, expnt(s) = [1427.00358649]
bas 3, expnt(s) = [0.57606857]
bas 4, expnt(s) = [50.05708123]
bas 5, expnt(s) = [13.27341035]
bas 6, expnt(s) = [1.9307318]
bas 7, expnt(s) = [2.77799443]
bas 8, expnt(s) = [13.33355471]
bas 9, expnt(s) = [0.60066968]
CPU time:       112.83
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461647e+03 7.96209310e+02 2.27480722e+02 1.47986968e+02
 1.42700359e+03 5.86588876e+02 5.76068570e-01 1.67059301e+00
 5.00570812e+01 4.75460197e+01 1.32734104e+01 1.75691971e+01
 1.93073180e+00 4.13815245e+00 2.77799443e+00 1.04628165e+01
 1.33335547e+01 7.43304610e+01 6.00669679e-01 1.54269130e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965565980392222
cond(S) = 160.09115000354765
E1 = -183.13696388832935  E_coul = 55.01155106566853
init E= -128.125412822661
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897453236701  LUMO = 2.65851171744963
  mo_energy =
[-3.25136611e+01 -1.85363535e+00 -7.42897453e-01 -7.42897453e-01
 -7.42897453e-01  2.65851172e+00  2.65851172e+00  2.65851172e+00
  2.77217096e+00  1.99640906e+01  1.99640906e+01  1.99640906e+01
  4.55789761e+01  3.35455361e+02  2.02636971e+03  7.31827912e+03]
E1 = -182.13633470882405  E_coul = 53.93973602881827
cycle= 1 E= -128.196598680006  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259747
diis-c [-0.06746831  1.        ]
  HOMO = -0.807586395186546  LUMO = 2.60463368384296
  mo_energy =
[-3.27863990e+01 -1.92061808e+00 -8.07586395e-01 -8.07586395e-01
 -8.07586395e-01  2.60463368e+00  2.60463368e+00  2.60463368e+00
  2.71833543e+00  1.97739412e+01  1.97739412e+01  1.97739412e+01
  4.53439036e+01  3.35145637e+02  2.02601166e+03  7.31789685e+03]
E1 = -182.59723640722416  E_coul = 54.399014074151665
cycle= 2 E= -128.198222333072  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101541
diis-c [-4.03443000e-04  2.77639622e-01  7.22360378e-01]
  HOMO = -0.784895857556223  LUMO = 2.62519032482952
  mo_energy =
[-3.27118596e+01 -1.89707234e+00 -7.84895858e-01 -7.84895858e-01
 -7.84895858e-01  2.62519032e+00  2.62519032e+00  2.62519032e+00
  2.73848765e+00  1.98299286e+01  1.98299286e+01  1.98299286e+01
  4.54099133e+01  3.35227195e+02  2.02609858e+03  7.31798526e+03]
E1 = -182.46546761431935  E_coul = 54.26694213149494
cycle= 3 E= -128.198525482824  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879069
diis-c [-7.41683349e-08 -3.88059867e-03 -1.72834185e-03  1.00560894e+00]
  HOMO = -0.785126521939468  LUMO = 2.62501558935258
  mo_energy =
[-3.27125184e+01 -1.89737182e+00 -7.85126522e-01 -7.85126522e-01
 -7.85126522e-01  2.62501559e+00  2.62501559e+00  2.62501559e+00
  2.73825154e+00  1.98294133e+01  1.98294133e+01  1.98294133e+01
  4.54092939e+01  3.35226696e+02  2.02609822e+03  7.31798493e+03]
E1 = -182.46673790539973  E_coul = 54.268212389614156
cycle= 4 E= -128.198525515786  delta_E= -3.3e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.96754e-05
diis-c [-2.07925563e-10  5.01847529e-04 -8.53652317e-04 -1.69174653e-01
  1.16952646e+00]
  HOMO = -0.785112219768655  LUMO = 2.6250279777074
  mo_energy =
[-3.27124816e+01 -1.89736926e+00 -7.85112220e-01 -7.85112220e-01
 -7.85112220e-01  2.62502798e+00  2.62502798e+00  2.62502798e+00
  2.73825297e+00  1.98294418e+01  1.98294418e+01  1.98294418e+01
  4.54093240e+01  3.35226747e+02  2.02609828e+03  7.31798500e+03]
E1 = -182.4666759654199  E_coul = 54.268150449348056
cycle= 5 E= -128.198525516072  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4666759654199  E_coul = 54.268150449348056
  HOMO = -0.785112160920904  LUMO = 2.62502804522973
  mo_energy =
[-3.27124815e+01 -1.89736958e+00 -7.85112161e-01 -7.85112161e-01
 -7.85112161e-01  2.62502805e+00  2.62502805e+00  2.62502805e+00
  2.73825269e+00  1.98294418e+01  1.98294418e+01  1.98294418e+01
  4.54093239e+01  3.35226747e+02  2.02609828e+03  7.31798500e+03]
E1 = -182.46667595739592  E_coul = 54.268150441323776
Extra cycle  E= -128.198525516072  delta_E= -2.84e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461647e+03 2.27480722e+02 1.42700359e+03 5.76068570e-01
 5.00570812e+01 1.32734104e+01 1.93073180e+00 2.77799443e+00
 1.33335547e+01 6.00669679e-01]
E = -128.19852551607215
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61646627        1
[INPUT] 0    0    [1    /1   ]  227.480721961        1
[INPUT] 0    0    [1    /1   ]  1427.00358649        1
[INPUT] 0    0    [1    /1   ]  0.576068570343       1
[INPUT] 0    0    [1    /1   ]  50.057081231         1
[INPUT] 0    0    [1    /1   ]  13.2734103524        1
[INPUT] 0    0    [1    /1   ]  1.93073179809        1
[INPUT] 1    0    [1    /1   ]  2.77799443498        1
[INPUT] 1    0    [1    /1   ]  13.333554706         1
[INPUT] 1    0    [1    /1   ]  0.600669678591       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.616466272475, 1.0]], [0, [227.48072196072707, 1.0]], [0, [1427.0035864855074, 1.0]], [0, [0.5760685703426589, 1.0]], [0, [50.057081230955696, 1.0]], [0, [13.27341035235314, 1.0]], [0, [1.9307317980944432, 1.0]], [1, [2.777994434982984, 1.0]], [1, [13.33355470597057, 1.0]], [1, [0.600669678591047, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61646627]
bas 1, expnt(s) = [227.48072196]
bas 2, expnt(s) = [1427.00358649]
bas 3, expnt(s) = [0.57606857]
bas 4, expnt(s) = [50.05708123]
bas 5, expnt(s) = [13.27341035]
bas 6, expnt(s) = [1.9307318]
bas 7, expnt(s) = [2.77799443]
bas 8, expnt(s) = [13.33355471]
bas 9, expnt(s) = [0.60066968]
CPU time:       113.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461647e+03 7.96209310e+02 2.27480722e+02 1.47986968e+02
 1.42700359e+03 5.86588876e+02 5.76068570e-01 1.67059301e+00
 5.00570812e+01 4.75460197e+01 1.32734104e+01 1.75691971e+01
 1.93073180e+00 4.13815245e+00 2.77799443e+00 1.04628165e+01
 1.33335547e+01 7.43304610e+01 6.00669679e-01 1.54269130e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965565980392222
cond(S) = 160.09115000354765
E1 = -183.13696388832935  E_coul = 55.01155106566853
init E= -128.125412822661
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897453236701  LUMO = 2.65851171744963
  mo_energy =
[-3.25136611e+01 -1.85363535e+00 -7.42897453e-01 -7.42897453e-01
 -7.42897453e-01  2.65851172e+00  2.65851172e+00  2.65851172e+00
  2.77217096e+00  1.99640906e+01  1.99640906e+01  1.99640906e+01
  4.55789761e+01  3.35455361e+02  2.02636971e+03  7.31827912e+03]
E1 = -182.13633470882405  E_coul = 53.93973602881827
cycle= 1 E= -128.196598680006  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259747
diis-c [-0.06746831  1.        ]
  HOMO = -0.807586395186546  LUMO = 2.60463368384296
  mo_energy =
[-3.27863990e+01 -1.92061808e+00 -8.07586395e-01 -8.07586395e-01
 -8.07586395e-01  2.60463368e+00  2.60463368e+00  2.60463368e+00
  2.71833543e+00  1.97739412e+01  1.97739412e+01  1.97739412e+01
  4.53439036e+01  3.35145637e+02  2.02601166e+03  7.31789685e+03]
E1 = -182.59723640722416  E_coul = 54.399014074151665
cycle= 2 E= -128.198222333072  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101541
diis-c [-4.03443000e-04  2.77639622e-01  7.22360378e-01]
  HOMO = -0.784895857556223  LUMO = 2.62519032482952
  mo_energy =
[-3.27118596e+01 -1.89707234e+00 -7.84895858e-01 -7.84895858e-01
 -7.84895858e-01  2.62519032e+00  2.62519032e+00  2.62519032e+00
  2.73848765e+00  1.98299286e+01  1.98299286e+01  1.98299286e+01
  4.54099133e+01  3.35227195e+02  2.02609858e+03  7.31798526e+03]
E1 = -182.46546761431935  E_coul = 54.26694213149494
cycle= 3 E= -128.198525482824  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000879069
diis-c [-7.41683349e-08 -3.88059867e-03 -1.72834185e-03  1.00560894e+00]
  HOMO = -0.785126521939468  LUMO = 2.62501558935258
  mo_energy =
[-3.27125184e+01 -1.89737182e+00 -7.85126522e-01 -7.85126522e-01
 -7.85126522e-01  2.62501559e+00  2.62501559e+00  2.62501559e+00
  2.73825154e+00  1.98294133e+01  1.98294133e+01  1.98294133e+01
  4.54092939e+01  3.35226696e+02  2.02609822e+03  7.31798493e+03]
E1 = -182.46673790539973  E_coul = 54.268212389614156
cycle= 4 E= -128.198525515786  delta_E= -3.3e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.96754e-05
diis-c [-2.07925563e-10  5.01847529e-04 -8.53652317e-04 -1.69174653e-01
  1.16952646e+00]
  HOMO = -0.785112219768655  LUMO = 2.6250279777074
  mo_energy =
[-3.27124816e+01 -1.89736926e+00 -7.85112220e-01 -7.85112220e-01
 -7.85112220e-01  2.62502798e+00  2.62502798e+00  2.62502798e+00
  2.73825297e+00  1.98294418e+01  1.98294418e+01  1.98294418e+01
  4.54093240e+01  3.35226747e+02  2.02609828e+03  7.31798500e+03]
E1 = -182.4666759654199  E_coul = 54.268150449348056
cycle= 5 E= -128.198525516072  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4666759654199  E_coul = 54.268150449348056
  HOMO = -0.785112160920904  LUMO = 2.62502804522973
  mo_energy =
[-3.27124815e+01 -1.89736958e+00 -7.85112161e-01 -7.85112161e-01
 -7.85112161e-01  2.62502805e+00  2.62502805e+00  2.62502805e+00
  2.73825269e+00  1.98294418e+01  1.98294418e+01  1.98294418e+01
  4.54093239e+01  3.35226747e+02  2.02609828e+03  7.31798500e+03]
E1 = -182.46667595739592  E_coul = 54.268150441323776
Extra cycle  E= -128.198525516072  delta_E= -2.84e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.09115000354765
E1 = -182.46667595739592  E_coul = 54.268150441323776
init E= -128.198525516072
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785112146364711  LUMO = 2.62502805685099
  mo_energy =
[-3.27124815e+01 -1.89736964e+00 -7.85112146e-01 -7.85112146e-01
 -7.85112146e-01  2.62502806e+00  2.62502806e+00  2.62502806e+00
  2.73825264e+00  1.98294418e+01  1.98294418e+01  1.98294418e+01
  4.54093239e+01  3.35226747e+02  2.02609828e+03  7.31798500e+03]
E1 = -182.46667596775936  E_coul = 54.26815045168716
cycle= 1 E= -128.198525516072  delta_E= -5.68e-14  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46667596775936  E_coul = 54.26815045168716
  HOMO = -0.785112142783532  LUMO = 2.62502805982947
  mo_energy =
[-3.27124815e+01 -1.89736964e+00 -7.85112143e-01 -7.85112143e-01
 -7.85112143e-01  2.62502806e+00  2.62502806e+00  2.62502806e+00
  2.73825263e+00  1.98294418e+01  1.98294418e+01  1.98294418e+01
  4.54093239e+01  3.35226747e+02  2.02609828e+03  7.31798500e+03]
E1 = -182.46667596559007  E_coul = 54.268150449517826
Extra cycle  E= -128.198525516072  delta_E= -2.84e-14  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.14461647e+03 2.27480722e+02 1.42700359e+03 5.76068570e-01
 5.00570812e+01 1.32734104e+01 1.93073180e+00 2.77799443e+00
 1.33335547e+01 6.00669679e-01]
grad_E = [-9.94923703e-06  7.17441330e-06  3.37166349e-05  1.08454858e-06
  8.92712661e-07  2.77301293e-08 -1.18436284e-06  3.54067753e-06
  4.12256528e-06  1.12549717e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61656363        1
[INPUT] 0    0    [1    /1   ]  227.482093346        1
[INPUT] 0    0    [1    /1   ]  1427.00314143        1
[INPUT] 0    0    [1    /1   ]  0.576060555998       1
[INPUT] 0    0    [1    /1   ]  50.0569200634        1
[INPUT] 0    0    [1    /1   ]  13.2733417197        1
[INPUT] 0    0    [1    /1   ]  1.93069537187        1
[INPUT] 1    0    [1    /1   ]  2.7778591949         1
[INPUT] 1    0    [1    /1   ]  13.3325203197        1
[INPUT] 1    0    [1    /1   ]  0.60065077046        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6165636308597, 1.0]], [0, [227.48209334576404, 1.0]], [0, [1427.0031414284058, 1.0]], [0, [0.5760605559982264, 1.0]], [0, [50.056920063388, 1.0]], [0, [13.273341719679467, 1.0]], [0, [1.930695371866876, 1.0]], [1, [2.7778591949008526, 1.0]], [1, [13.332520319701471, 1.0]], [1, [0.6006507704599847, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61656363]
bas 1, expnt(s) = [227.48209335]
bas 2, expnt(s) = [1427.00314143]
bas 3, expnt(s) = [0.57606056]
bas 4, expnt(s) = [50.05692006]
bas 5, expnt(s) = [13.27334172]
bas 6, expnt(s) = [1.93069537]
bas 7, expnt(s) = [2.77785919]
bas 8, expnt(s) = [13.33252032]
bas 9, expnt(s) = [0.60065077]
CPU time:       115.95
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461656e+03 7.96209337e+02 2.27482093e+02 1.47987637e+02
 1.42700314e+03 5.86588739e+02 5.76060556e-01 1.67057558e+00
 5.00569201e+01 4.75459049e+01 1.32733417e+01 1.75691290e+01
 1.93069537e+00 4.13809390e+00 2.77785919e+00 1.04621798e+01
 1.33325203e+01 7.43232531e+01 6.00650770e-01 1.54263060e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965570118935924
cond(S) = 160.09103106291917
E1 = -183.13696340920006  E_coul = 55.01154810586737
init E= -128.125415303333
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897095689964  LUMO = 2.65838944427845
  mo_energy =
[-3.25136639e+01 -1.85363538e+00 -7.42897096e-01 -7.42897096e-01
 -7.42897096e-01  2.65838944e+00  2.65838944e+00  2.65838944e+00
  2.77209631e+00  1.99625283e+01  1.99625283e+01  1.99625283e+01
  4.55785297e+01  3.35455640e+02  2.02637265e+03  7.31828228e+03]
E1 = -182.13622790377846  E_coul = 53.93962954039656
cycle= 1 E= -128.196598363382  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259765
diis-c [-0.06747804  1.        ]
  HOMO = -0.807593909695436  LUMO = 2.60450669891206
  mo_energy =
[-3.27864207e+01 -1.92062712e+00 -8.07593910e-01 -8.07593910e-01
 -8.07593910e-01  2.60450670e+00  2.60450670e+00  2.60450670e+00
  2.71825407e+00  1.97723698e+01  1.97723698e+01  1.97723698e+01
  4.53434402e+01  3.35145897e+02  2.02601459e+03  7.31790000e+03]
E1 = -182.59717530163317  E_coul = 54.398953022943836
cycle= 2 E= -128.198222278689  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101552
diis-c [-4.03458899e-04  2.77646527e-01  7.22353473e-01]
  HOMO = -0.78490125265573  LUMO = 2.62506441500732
  mo_energy =
[-3.27118751e+01 -1.89707915e+00 -7.84901253e-01 -7.84901253e-01
 -7.84901253e-01  2.62506442e+00  2.62506442e+00  2.62506442e+00
  2.73840781e+00  1.98283604e+01  1.98283604e+01  1.98283604e+01
  4.54094555e+01  3.35227462e+02  2.02610152e+03  7.31798841e+03]
E1 = -182.46539219131958  E_coul = 54.26686669978643
cycle= 3 E= -128.198525491533  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000878781
diis-c [-7.42255816e-08 -3.88099856e-03 -1.73346653e-03  1.00561447e+00]
  HOMO = -0.785131840121485  LUMO = 2.62488976147566
  mo_energy =
[-3.27125337e+01 -1.89737858e+00 -7.85131840e-01 -7.85131840e-01
 -7.85131840e-01  2.62488976e+00  2.62488976e+00  2.62488976e+00
  2.73817175e+00  1.98278453e+01  1.98278453e+01  1.98278453e+01
  4.54088363e+01  3.35226963e+02  2.02610115e+03  7.31798808e+03]
E1 = -182.46666210613668  E_coul = 54.26813658165234
cycle= 4 E= -128.198525524484  delta_E= -3.3e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.97068e-05
diis-c [-2.08003199e-10  5.01920901e-04 -8.53164016e-04 -1.69199061e-01
  1.16955030e+00]
  HOMO = -0.785117532974638  LUMO = 2.62490215350108
  mo_energy =
[-3.27124968e+01 -1.89737602e+00 -7.85117533e-01 -7.85117533e-01
 -7.85117533e-01  2.62490215e+00  2.62490215e+00  2.62490215e+00
  2.73817317e+00  1.98278738e+01  1.98278738e+01  1.98278738e+01
  4.54088663e+01  3.35227014e+02  2.02610122e+03  7.31798816e+03]
E1 = -182.4666001451054  E_coul = 54.26807462033496
cycle= 5 E= -128.19852552477  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4666001451054  E_coul = 54.26807462033496
  HOMO = -0.785117474133712  LUMO = 2.62490222102649
  mo_energy =
[-3.27124967e+01 -1.89737634e+00 -7.85117474e-01 -7.85117474e-01
 -7.85117474e-01  2.62490222e+00  2.62490222e+00  2.62490222e+00
  2.73817290e+00  1.98278739e+01  1.98278739e+01  1.98278739e+01
  4.54088663e+01  3.35227014e+02  2.02610122e+03  7.31798816e+03]
E1 = -182.46660013701583  E_coul = 54.268074612244966
Extra cycle  E= -128.198525524771  delta_E= -4.26e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461656e+03 2.27482093e+02 1.42700314e+03 5.76060556e-01
 5.00569201e+01 1.32733417e+01 1.93069537e+00 2.77785919e+00
 1.33325203e+01 6.00650770e-01]
E = -128.19852552477087
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61656363        1
[INPUT] 0    0    [1    /1   ]  227.482093346        1
[INPUT] 0    0    [1    /1   ]  1427.00314143        1
[INPUT] 0    0    [1    /1   ]  0.576060555998       1
[INPUT] 0    0    [1    /1   ]  50.0569200634        1
[INPUT] 0    0    [1    /1   ]  13.2733417197        1
[INPUT] 0    0    [1    /1   ]  1.93069537187        1
[INPUT] 1    0    [1    /1   ]  2.7778591949         1
[INPUT] 1    0    [1    /1   ]  13.3325203197        1
[INPUT] 1    0    [1    /1   ]  0.60065077046        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6165636308597, 1.0]], [0, [227.48209334576404, 1.0]], [0, [1427.0031414284058, 1.0]], [0, [0.5760605559982264, 1.0]], [0, [50.056920063388, 1.0]], [0, [13.273341719679467, 1.0]], [0, [1.930695371866876, 1.0]], [1, [2.7778591949008526, 1.0]], [1, [13.332520319701471, 1.0]], [1, [0.6006507704599847, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61656363]
bas 1, expnt(s) = [227.48209335]
bas 2, expnt(s) = [1427.00314143]
bas 3, expnt(s) = [0.57606056]
bas 4, expnt(s) = [50.05692006]
bas 5, expnt(s) = [13.27334172]
bas 6, expnt(s) = [1.93069537]
bas 7, expnt(s) = [2.77785919]
bas 8, expnt(s) = [13.33252032]
bas 9, expnt(s) = [0.60065077]
CPU time:       116.66
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461656e+03 7.96209337e+02 2.27482093e+02 1.47987637e+02
 1.42700314e+03 5.86588739e+02 5.76060556e-01 1.67057558e+00
 5.00569201e+01 4.75459049e+01 1.32733417e+01 1.75691290e+01
 1.93069537e+00 4.13809390e+00 2.77785919e+00 1.04621798e+01
 1.33325203e+01 7.43232531e+01 6.00650770e-01 1.54263060e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965570118935924
cond(S) = 160.09103106291917
E1 = -183.13696340920006  E_coul = 55.01154810586737
init E= -128.125415303333
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742897095689964  LUMO = 2.65838944427845
  mo_energy =
[-3.25136639e+01 -1.85363538e+00 -7.42897096e-01 -7.42897096e-01
 -7.42897096e-01  2.65838944e+00  2.65838944e+00  2.65838944e+00
  2.77209631e+00  1.99625283e+01  1.99625283e+01  1.99625283e+01
  4.55785297e+01  3.35455640e+02  2.02637265e+03  7.31828228e+03]
E1 = -182.13622790377846  E_coul = 53.93962954039656
cycle= 1 E= -128.196598363382  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259765
diis-c [-0.06747804  1.        ]
  HOMO = -0.807593909695436  LUMO = 2.60450669891206
  mo_energy =
[-3.27864207e+01 -1.92062712e+00 -8.07593910e-01 -8.07593910e-01
 -8.07593910e-01  2.60450670e+00  2.60450670e+00  2.60450670e+00
  2.71825407e+00  1.97723698e+01  1.97723698e+01  1.97723698e+01
  4.53434402e+01  3.35145897e+02  2.02601459e+03  7.31790000e+03]
E1 = -182.59717530163317  E_coul = 54.398953022943836
cycle= 2 E= -128.198222278689  delta_E= -0.00162  |g|= 0.0623  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101552
diis-c [-4.03458899e-04  2.77646527e-01  7.22353473e-01]
  HOMO = -0.78490125265573  LUMO = 2.62506441500732
  mo_energy =
[-3.27118751e+01 -1.89707915e+00 -7.84901253e-01 -7.84901253e-01
 -7.84901253e-01  2.62506442e+00  2.62506442e+00  2.62506442e+00
  2.73840781e+00  1.98283604e+01  1.98283604e+01  1.98283604e+01
  4.54094555e+01  3.35227462e+02  2.02610152e+03  7.31798841e+03]
E1 = -182.46539219131958  E_coul = 54.26686669978643
cycle= 3 E= -128.198525491533  delta_E= -0.000303  |g|= 0.000692  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000878781
diis-c [-7.42255816e-08 -3.88099856e-03 -1.73346653e-03  1.00561447e+00]
  HOMO = -0.785131840121485  LUMO = 2.62488976147566
  mo_energy =
[-3.27125337e+01 -1.89737858e+00 -7.85131840e-01 -7.85131840e-01
 -7.85131840e-01  2.62488976e+00  2.62488976e+00  2.62488976e+00
  2.73817175e+00  1.98278453e+01  1.98278453e+01  1.98278453e+01
  4.54088363e+01  3.35226963e+02  2.02610115e+03  7.31798808e+03]
E1 = -182.46666210613668  E_coul = 54.26813658165234
cycle= 4 E= -128.198525524484  delta_E= -3.3e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.97068e-05
diis-c [-2.08003199e-10  5.01920901e-04 -8.53164016e-04 -1.69199061e-01
  1.16955030e+00]
  HOMO = -0.785117532974638  LUMO = 2.62490215350108
  mo_energy =
[-3.27124968e+01 -1.89737602e+00 -7.85117533e-01 -7.85117533e-01
 -7.85117533e-01  2.62490215e+00  2.62490215e+00  2.62490215e+00
  2.73817317e+00  1.98278738e+01  1.98278738e+01  1.98278738e+01
  4.54088663e+01  3.35227014e+02  2.02610122e+03  7.31798816e+03]
E1 = -182.4666001451054  E_coul = 54.26807462033496
cycle= 5 E= -128.19852552477  delta_E= -2.86e-10  |g|= 1.53e-06  |ddm|= 2.53e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4666001451054  E_coul = 54.26807462033496
  HOMO = -0.785117474133712  LUMO = 2.62490222102649
  mo_energy =
[-3.27124967e+01 -1.89737634e+00 -7.85117474e-01 -7.85117474e-01
 -7.85117474e-01  2.62490222e+00  2.62490222e+00  2.62490222e+00
  2.73817290e+00  1.98278739e+01  1.98278739e+01  1.98278739e+01
  4.54088663e+01  3.35227014e+02  2.02610122e+03  7.31798816e+03]
E1 = -182.46660013701583  E_coul = 54.268074612244966
Extra cycle  E= -128.198525524771  delta_E= -4.26e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.09103106291917
E1 = -182.46660013701583  E_coul = 54.268074612244966
init E= -128.198525524771
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785117459582849  LUMO = 2.62490223264218
  mo_energy =
[-3.27124967e+01 -1.89737640e+00 -7.85117460e-01 -7.85117460e-01
 -7.85117460e-01  2.62490223e+00  2.62490223e+00  2.62490223e+00
  2.73817284e+00  1.98278739e+01  1.98278739e+01  1.98278739e+01
  4.54088663e+01  3.35227014e+02  2.02610122e+03  7.31798816e+03]
E1 = -182.46660014739885  E_coul = 54.26807462262784
cycle= 1 E= -128.198525524771  delta_E= -1.42e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46660014739885  E_coul = 54.26807462262784
  HOMO = -0.785117456000406  LUMO = 2.62490223562164
  mo_energy =
[-3.27124967e+01 -1.89737641e+00 -7.85117456e-01 -7.85117456e-01
 -7.85117456e-01  2.62490224e+00  2.62490224e+00  2.62490224e+00
  2.73817284e+00  1.98278739e+01  1.98278739e+01  1.98278739e+01
  4.54088663e+01  3.35227014e+02  2.02610122e+03  7.31798816e+03]
E1 = -182.4666001452206  E_coul = 54.26807462044984
Extra cycle  E= -128.198525524771  delta_E= 2.27e-13  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461656e+03 2.27482093e+02 1.42700314e+03 5.76060556e-01
 5.00569201e+01 1.32733417e+01 1.93069537e+00 2.77785919e+00
 1.33325203e+01 6.00650770e-01]
grad_E = [-9.94959206e-06  7.28328563e-06  3.37145631e-05  1.64353997e-06
  3.92677427e-07 -3.73910407e-08 -2.47161301e-06  7.24419596e-06
 -6.10366995e-07  3.60534857e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61681491        1
[INPUT] 0    0    [1    /1   ]  227.483886589        1
[INPUT] 0    0    [1    /1   ]  1427.0021323         1
[INPUT] 0    0    [1    /1   ]  0.576049449081       1
[INPUT] 0    0    [1    /1   ]  50.0566799182        1
[INPUT] 0    0    [1    /1   ]  13.2732444247        1
[INPUT] 0    0    [1    /1   ]  1.93064509894        1
[INPUT] 1    0    [1    /1   ]  2.77767243445        1
[INPUT] 1    0    [1    /1   ]  13.3310920248        1
[INPUT] 1    0    [1    /1   ]  0.600624665783       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.616814911544, 1.0]], [0, [227.4838865890395, 1.0]], [0, [1427.0021322962305, 1.0]], [0, [0.5760494490805, 1.0]], [0, [50.05667991822087, 1.0]], [0, [13.273244424679762, 1.0]], [0, [1.9306450989361936, 1.0]], [1, [2.7776724344459387, 1.0]], [1, [13.331092024803887, 1.0]], [1, [0.6006246657830738, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61681491]
bas 1, expnt(s) = [227.48388659]
bas 2, expnt(s) = [1427.0021323]
bas 3, expnt(s) = [0.57604945]
bas 4, expnt(s) = [50.05667992]
bas 5, expnt(s) = [13.27324442]
bas 6, expnt(s) = [1.9306451]
bas 7, expnt(s) = [2.77767243]
bas 8, expnt(s) = [13.33109202]
bas 9, expnt(s) = [0.60062467]
CPU time:       119.07
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461681e+03 7.96209407e+02 2.27483887e+02 1.47988512e+02
 1.42700213e+03 5.86588428e+02 5.76049449e-01 1.67055142e+00
 5.00566799e+01 4.75457339e+01 1.32732444e+01 1.75690324e+01
 1.93064510e+00 4.13801308e+00 2.77767243e+00 1.04613005e+01
 1.33310920e+01 7.43133006e+01 6.00624666e-01 1.54254679e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965575833582605
cond(S) = 160.09059917281988
E1 = -183.13696277206114  E_coul = 55.01154402168245
init E= -128.125418750379
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742896600066183  LUMO = 2.65822061643554
  mo_energy =
[-3.25136679e+01 -1.85363542e+00 -7.42896600e-01 -7.42896600e-01
 -7.42896600e-01  2.65822062e+00  2.65822062e+00  2.65822062e+00
  2.77199308e+00  1.99603711e+01  1.99603711e+01  1.99603711e+01
  4.55778981e+01  3.35455878e+02  2.02637615e+03  7.31828555e+03]
E1 = -182.13608041611977  E_coul = 53.93948248245602
cycle= 1 E= -128.196597933664  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259791
diis-c [-0.06749147  1.        ]
  HOMO = -0.80760428547282  LUMO = 2.60433136478769
  mo_energy =
[-3.27864508e+01 -1.92063960e+00 -8.07604285e-01 -8.07604285e-01
 -8.07604285e-01  2.60433136e+00  2.60433136e+00  2.60433136e+00
  2.71814157e+00  1.97701998e+01  1.97701998e+01  1.97701998e+01
  4.53427852e+01  3.35146108e+02  2.02601806e+03  7.31790324e+03]
E1 = -182.59709092706134  E_coul = 54.39886871588726
cycle= 2 E= -128.198222211174  delta_E= -0.00162  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101566
diis-c [-4.03481034e-04  2.77656053e-01  7.22343947e-01]
  HOMO = -0.784908701223553  LUMO = 2.62489056567183
  mo_energy =
[-3.27118964e+01 -1.89708855e+00 -7.84908701e-01 -7.84908701e-01
 -7.84908701e-01  2.62489057e+00  2.62489057e+00  2.62489057e+00
  2.73829739e+00  1.98261951e+01  1.98261951e+01  1.98261951e+01
  4.54088081e+01  3.35227682e+02  2.02610500e+03  7.31799166e+03]
E1 = -182.46528804282642  E_coul = 54.26676253166668
cycle= 3 E= -128.19852551116  delta_E= -0.000303  |g|= 0.000691  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000878385
diis-c [-7.43044432e-08 -3.88154961e-03 -1.74052871e-03  1.00562208e+00]
  HOMO = -0.785139182681374  LUMO = 2.62471602510835
  mo_energy =
[-3.27125547e+01 -1.89738792e+00 -7.85139183e-01 -7.85139183e-01
 -7.85139183e-01  2.62471603e+00  2.62471603e+00  2.62471603e+00
  2.73806140e+00  1.98256802e+01  1.98256802e+01  1.98256802e+01
  4.54081892e+01  3.35227184e+02  2.02610463e+03  7.31799133e+03]
E1 = -182.46655743903608  E_coul = 54.26803189493967
cycle= 4 E= -128.198525544096  delta_E= -3.29e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.975e-05
diis-c [-2.08110367e-10  5.02021709e-04 -8.52489525e-04 -1.69232569e-01
  1.16958304e+00]
  HOMO = -0.785124868688428  LUMO = 2.62472842217971
  mo_energy =
[-3.27125178e+01 -1.89738536e+00 -7.85124869e-01 -7.85124869e-01
 -7.85124869e-01  2.62472842e+00  2.62472842e+00  2.62472842e+00
  2.73806282e+00  1.98257088e+01  1.98257088e+01  1.98257088e+01
  4.54082193e+01  3.35227235e+02  2.02610470e+03  7.31799140e+03]
E1 = -182.4664954490415  E_coul = 54.26796990465846
cycle= 5 E= -128.198525544383  delta_E= -2.87e-10  |g|= 1.53e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4664954490415  E_coul = 54.26796990465846
  HOMO = -0.785124809855739  LUMO = 2.62472848971044
  mo_energy =
[-3.27125177e+01 -1.89738568e+00 -7.85124810e-01 -7.85124810e-01
 -7.85124810e-01  2.62472849e+00  2.62472849e+00  2.62472849e+00
  2.73806255e+00  1.98257088e+01  1.98257088e+01  1.98257088e+01
  4.54082192e+01  3.35227235e+02  2.02610470e+03  7.31799140e+03]
E1 = -182.46649544085503  E_coul = 54.26796989647145
Extra cycle  E= -128.198525544384  delta_E= -5.4e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461681e+03 2.27483887e+02 1.42700213e+03 5.76049449e-01
 5.00566799e+01 1.32732444e+01 1.93064510e+00 2.77767243e+00
 1.33310920e+01 6.00624666e-01]
E = -128.19852554438359
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61681491        1
[INPUT] 0    0    [1    /1   ]  227.483886589        1
[INPUT] 0    0    [1    /1   ]  1427.0021323         1
[INPUT] 0    0    [1    /1   ]  0.576049449081       1
[INPUT] 0    0    [1    /1   ]  50.0566799182        1
[INPUT] 0    0    [1    /1   ]  13.2732444247        1
[INPUT] 0    0    [1    /1   ]  1.93064509894        1
[INPUT] 1    0    [1    /1   ]  2.77767243445        1
[INPUT] 1    0    [1    /1   ]  13.3310920248        1
[INPUT] 1    0    [1    /1   ]  0.600624665783       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.616814911544, 1.0]], [0, [227.4838865890395, 1.0]], [0, [1427.0021322962305, 1.0]], [0, [0.5760494490805, 1.0]], [0, [50.05667991822087, 1.0]], [0, [13.273244424679762, 1.0]], [0, [1.9306450989361936, 1.0]], [1, [2.7776724344459387, 1.0]], [1, [13.331092024803887, 1.0]], [1, [0.6006246657830738, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61681491]
bas 1, expnt(s) = [227.48388659]
bas 2, expnt(s) = [1427.0021323]
bas 3, expnt(s) = [0.57604945]
bas 4, expnt(s) = [50.05667992]
bas 5, expnt(s) = [13.27324442]
bas 6, expnt(s) = [1.9306451]
bas 7, expnt(s) = [2.77767243]
bas 8, expnt(s) = [13.33109202]
bas 9, expnt(s) = [0.60062467]
CPU time:       119.75
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461681e+03 7.96209407e+02 2.27483887e+02 1.47988512e+02
 1.42700213e+03 5.86588428e+02 5.76049449e-01 1.67055142e+00
 5.00566799e+01 4.75457339e+01 1.32732444e+01 1.75690324e+01
 1.93064510e+00 4.13801308e+00 2.77767243e+00 1.04613005e+01
 1.33310920e+01 7.43133006e+01 6.00624666e-01 1.54254679e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965575833582605
cond(S) = 160.09059917281988
E1 = -183.13696277206114  E_coul = 55.01154402168245
init E= -128.125418750379
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742896600066183  LUMO = 2.65822061643554
  mo_energy =
[-3.25136679e+01 -1.85363542e+00 -7.42896600e-01 -7.42896600e-01
 -7.42896600e-01  2.65822062e+00  2.65822062e+00  2.65822062e+00
  2.77199308e+00  1.99603711e+01  1.99603711e+01  1.99603711e+01
  4.55778981e+01  3.35455878e+02  2.02637615e+03  7.31828555e+03]
E1 = -182.13608041611977  E_coul = 53.93948248245602
cycle= 1 E= -128.196597933664  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259791
diis-c [-0.06749147  1.        ]
  HOMO = -0.80760428547282  LUMO = 2.60433136478769
  mo_energy =
[-3.27864508e+01 -1.92063960e+00 -8.07604285e-01 -8.07604285e-01
 -8.07604285e-01  2.60433136e+00  2.60433136e+00  2.60433136e+00
  2.71814157e+00  1.97701998e+01  1.97701998e+01  1.97701998e+01
  4.53427852e+01  3.35146108e+02  2.02601806e+03  7.31790324e+03]
E1 = -182.59709092706134  E_coul = 54.39886871588726
cycle= 2 E= -128.198222211174  delta_E= -0.00162  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101566
diis-c [-4.03481034e-04  2.77656053e-01  7.22343947e-01]
  HOMO = -0.784908701223553  LUMO = 2.62489056567183
  mo_energy =
[-3.27118964e+01 -1.89708855e+00 -7.84908701e-01 -7.84908701e-01
 -7.84908701e-01  2.62489057e+00  2.62489057e+00  2.62489057e+00
  2.73829739e+00  1.98261951e+01  1.98261951e+01  1.98261951e+01
  4.54088081e+01  3.35227682e+02  2.02610500e+03  7.31799166e+03]
E1 = -182.46528804282642  E_coul = 54.26676253166668
cycle= 3 E= -128.19852551116  delta_E= -0.000303  |g|= 0.000691  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000878385
diis-c [-7.43044432e-08 -3.88154961e-03 -1.74052871e-03  1.00562208e+00]
  HOMO = -0.785139182681374  LUMO = 2.62471602510835
  mo_energy =
[-3.27125547e+01 -1.89738792e+00 -7.85139183e-01 -7.85139183e-01
 -7.85139183e-01  2.62471603e+00  2.62471603e+00  2.62471603e+00
  2.73806140e+00  1.98256802e+01  1.98256802e+01  1.98256802e+01
  4.54081892e+01  3.35227184e+02  2.02610463e+03  7.31799133e+03]
E1 = -182.46655743903608  E_coul = 54.26803189493967
cycle= 4 E= -128.198525544096  delta_E= -3.29e-08  |g|= 5.01e-05  |ddm|= 0.000258
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.975e-05
diis-c [-2.08110367e-10  5.02021709e-04 -8.52489525e-04 -1.69232569e-01
  1.16958304e+00]
  HOMO = -0.785124868688428  LUMO = 2.62472842217971
  mo_energy =
[-3.27125178e+01 -1.89738536e+00 -7.85124869e-01 -7.85124869e-01
 -7.85124869e-01  2.62472842e+00  2.62472842e+00  2.62472842e+00
  2.73806282e+00  1.98257088e+01  1.98257088e+01  1.98257088e+01
  4.54082193e+01  3.35227235e+02  2.02610470e+03  7.31799140e+03]
E1 = -182.4664954490415  E_coul = 54.26796990465846
cycle= 5 E= -128.198525544383  delta_E= -2.87e-10  |g|= 1.53e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4664954490415  E_coul = 54.26796990465846
  HOMO = -0.785124809855739  LUMO = 2.62472848971044
  mo_energy =
[-3.27125177e+01 -1.89738568e+00 -7.85124810e-01 -7.85124810e-01
 -7.85124810e-01  2.62472849e+00  2.62472849e+00  2.62472849e+00
  2.73806255e+00  1.98257088e+01  1.98257088e+01  1.98257088e+01
  4.54082192e+01  3.35227235e+02  2.02610470e+03  7.31799140e+03]
E1 = -182.46649544085503  E_coul = 54.26796989647145
Extra cycle  E= -128.198525544384  delta_E= -5.4e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.09059917281988
E1 = -182.46649544085503  E_coul = 54.26796989647145
init E= -128.198525544384
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785124795312629  LUMO = 2.62472850131809
  mo_energy =
[-3.27125177e+01 -1.89738574e+00 -7.85124795e-01 -7.85124795e-01
 -7.85124795e-01  2.62472850e+00  2.62472850e+00  2.62472850e+00
  2.73806250e+00  1.98257088e+01  1.98257088e+01  1.98257088e+01
  4.54082192e+01  3.35227235e+02  2.02610470e+03  7.31799140e+03]
E1 = -182.466495451267  E_coul = 54.26796990688353
cycle= 1 E= -128.198525544383  delta_E= 1.14e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.466495451267  E_coul = 54.26796990688353
  HOMO = -0.785124791728276  LUMO = 2.62472850429904
  mo_energy =
[-3.27125177e+01 -1.89738575e+00 -7.85124792e-01 -7.85124792e-01
 -7.85124792e-01  2.62472850e+00  2.62472850e+00  2.62472850e+00
  2.73806249e+00  1.98257088e+01  1.98257088e+01  1.98257088e+01
  4.54082192e+01  3.35227235e+02  2.02610470e+03  7.31799140e+03]
E1 = -182.46649544907592  E_coul = 54.26796990469257
Extra cycle  E= -128.198525544383  delta_E= 1.14e-13  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461681e+03 2.27483887e+02 1.42700213e+03 5.76049449e-01
 5.00566799e+01 1.32732444e+01 1.93064510e+00 2.77767243e+00
 1.33310920e+01 6.00624666e-01]
grad_E = [-9.95008582e-06  7.43295981e-06  3.37117881e-05  2.35896312e-06
 -3.04392191e-07 -1.15124577e-07 -4.22152246e-06  1.23380701e-05
 -7.14695064e-06  7.12142818e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:20 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61757321        1
[INPUT] 0    0    [1    /1   ]  227.486890001        1
[INPUT] 0    0    [1    /1   ]  1426.99927887        1
[INPUT] 0    0    [1    /1   ]  0.576030208979       1
[INPUT] 0    0    [1    /1   ]  50.056249619         1
[INPUT] 0    0    [1    /1   ]  13.273074052         1
[INPUT] 0    0    [1    /1   ]  1.93055817651        1
[INPUT] 1    0    [1    /1   ]  2.77735052767        1
[INPUT] 1    0    [1    /1   ]  13.3286301856        1
[INPUT] 1    0    [1    /1   ]  0.600579678055       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6175732109236, 1.0]], [0, [227.48689000062043, 1.0]], [0, [1426.999278866916, 1.0]], [0, [0.576030208979054, 1.0]], [0, [50.05624961901258, 1.0]], [0, [13.273074052022011, 1.0]], [0, [1.9305581765061015, 1.0]], [1, [2.777350527672088, 1.0]], [1, [13.328630185594548, 1.0]], [1, [0.6005796780546091, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61757321]
bas 1, expnt(s) = [227.48689]
bas 2, expnt(s) = [1426.99927887]
bas 3, expnt(s) = [0.57603021]
bas 4, expnt(s) = [50.05624962]
bas 5, expnt(s) = [13.27307405]
bas 6, expnt(s) = [1.93055818]
bas 7, expnt(s) = [2.77735053]
bas 8, expnt(s) = [13.32863019]
bas 9, expnt(s) = [0.60057968]
CPU time:       122.17
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461757e+03 7.96209618e+02 2.27486890e+02 1.47989978e+02
 1.42699928e+03 5.86587548e+02 5.76030209e-01 1.67050957e+00
 5.00562496e+01 4.75454273e+01 1.32730741e+01 1.75688632e+01
 1.93055818e+00 4.13787335e+00 2.77735053e+00 1.04597851e+01
 1.33286302e+01 7.42961467e+01 6.00579678e-01 1.54240237e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965585682907513
cond(S) = 160.08918550895794
E1 = -183.13696169909844  E_coul = 55.01153696899584
init E= -128.125424730103
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742895742256404  LUMO = 2.65792965686614
  mo_energy =
[-3.25136747e+01 -1.85363551e+00 -7.42895742e-01 -7.42895742e-01
 -7.42895742e-01  2.65792966e+00  2.65792966e+00  2.65792966e+00
  2.77181440e+00  1.99566530e+01  1.99566530e+01  1.99566530e+01
  4.55767930e+01  3.35456150e+02  2.02638127e+03  7.31828886e+03]
E1 = -182.13582619176714  E_coul = 53.939228978240415
cycle= 1 E= -128.196597213527  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259836
diis-c [-0.06751463  1.        ]
  HOMO = -0.807622167292042  LUMO = 2.60402919170351
  mo_energy =
[-3.27865026e+01 -1.92066112e+00 -8.07622167e-01 -8.07622167e-01
 -8.07622167e-01  2.60402919e+00  2.60402919e+00  2.60402919e+00
  2.71794694e+00  1.97664599e+01  1.97664599e+01  1.97664599e+01
  4.53416396e+01  3.35146334e+02  2.02602313e+03  7.31790650e+03]
E1 = -182.59694549995692  E_coul = 54.3987233844735
cycle= 2 E= -128.198222115483  delta_E= -0.00162  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101591
diis-c [-4.03519075e-04  2.77672472e-01  7.22327528e-01]
  HOMO = -0.784921536930049  LUMO = 2.6245909517423
  mo_energy =
[-3.27119332e+01 -1.89710477e+00 -7.84921537e-01 -7.84921537e-01
 -7.84921537e-01  2.62459095e+00  2.62459095e+00  2.62459095e+00
  2.73810636e+00  1.98224630e+01  1.98224630e+01  1.98224630e+01
  4.54076758e+01  3.35227924e+02  2.02611009e+03  7.31799494e+03]
E1 = -182.4651085282724  E_coul = 54.266582962558076
cycle= 3 E= -128.198525565714  delta_E= -0.000303  |g|= 0.000691  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000877703
diis-c [-7.44402845e-08 -3.88249963e-03 -1.75269895e-03  1.00563520e+00]
  HOMO = -0.785151835629242  LUMO = 2.62441660591289
  mo_energy =
[-3.27125910e+01 -1.89740402e+00 -7.85151836e-01 -7.85151836e-01
 -7.85151836e-01  2.62441661e+00  2.62441661e+00  2.62441661e+00
  2.73787049e+00  1.98219486e+01  1.98219486e+01  1.98219486e+01
  4.54070574e+01  3.35227426e+02  2.02610972e+03  7.31799462e+03]
E1 = -182.4663770301667  E_coul = 54.267851431540116
cycle= 4 E= -128.198525598627  delta_E= -3.29e-08  |g|= 5.02e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.98244e-05
diis-c [-2.08295198e-10  5.02194928e-04 -8.51324751e-04 -1.69290110e-01
  1.16963924e+00]
  HOMO = -0.785137509855747  LUMO = 2.62442901166233
  mo_energy =
[-3.27125540e+01 -1.89740146e+00 -7.85137510e-01 -7.85137510e-01
 -7.85137510e-01  2.62442901e+00  2.62442901e+00  2.62442901e+00
  2.73787190e+00  1.98219772e+01  1.98219772e+01  1.98219772e+01
  4.54070874e+01  3.35227477e+02  2.02610979e+03  7.31799469e+03]
E1 = -182.4663149903369  E_coul = 54.267789391422966
cycle= 5 E= -128.198525598914  delta_E= -2.87e-10  |g|= 1.53e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4663149903369  E_coul = 54.267789391422966
  HOMO = -0.785137451036173  LUMO = 2.62442907920323
  mo_energy =
[-3.27125540e+01 -1.89740178e+00 -7.85137451e-01 -7.85137451e-01
 -7.85137451e-01  2.62442908e+00  2.62442908e+00  2.62442908e+00
  2.73787163e+00  1.98219772e+01  1.98219772e+01  1.98219772e+01
  4.54070874e+01  3.35227477e+02  2.02610979e+03  7.31799469e+03]
E1 = -182.46631498197743  E_coul = 54.26778938306304
Extra cycle  E= -128.198525598914  delta_E= -4.55e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461757e+03 2.27486890e+02 1.42699928e+03 5.76030209e-01
 5.00562496e+01 1.32730741e+01 1.93055818e+00 2.77735053e+00
 1.33286302e+01 6.00579678e-01]
E = -128.1985255989144
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61757321        1
[INPUT] 0    0    [1    /1   ]  227.486890001        1
[INPUT] 0    0    [1    /1   ]  1426.99927887        1
[INPUT] 0    0    [1    /1   ]  0.576030208979       1
[INPUT] 0    0    [1    /1   ]  50.056249619         1
[INPUT] 0    0    [1    /1   ]  13.273074052         1
[INPUT] 0    0    [1    /1   ]  1.93055817651        1
[INPUT] 1    0    [1    /1   ]  2.77735052767        1
[INPUT] 1    0    [1    /1   ]  13.3286301856        1
[INPUT] 1    0    [1    /1   ]  0.600579678055       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6175732109236, 1.0]], [0, [227.48689000062043, 1.0]], [0, [1426.999278866916, 1.0]], [0, [0.576030208979054, 1.0]], [0, [50.05624961901258, 1.0]], [0, [13.273074052022011, 1.0]], [0, [1.9305581765061015, 1.0]], [1, [2.777350527672088, 1.0]], [1, [13.328630185594548, 1.0]], [1, [0.6005796780546091, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61757321]
bas 1, expnt(s) = [227.48689]
bas 2, expnt(s) = [1426.99927887]
bas 3, expnt(s) = [0.57603021]
bas 4, expnt(s) = [50.05624962]
bas 5, expnt(s) = [13.27307405]
bas 6, expnt(s) = [1.93055818]
bas 7, expnt(s) = [2.77735053]
bas 8, expnt(s) = [13.32863019]
bas 9, expnt(s) = [0.60057968]
CPU time:       122.88
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461757e+03 7.96209618e+02 2.27486890e+02 1.47989978e+02
 1.42699928e+03 5.86587548e+02 5.76030209e-01 1.67050957e+00
 5.00562496e+01 4.75454273e+01 1.32730741e+01 1.75688632e+01
 1.93055818e+00 4.13787335e+00 2.77735053e+00 1.04597851e+01
 1.33286302e+01 7.42961467e+01 6.00579678e-01 1.54240237e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965585682907513
cond(S) = 160.08918550895794
E1 = -183.13696169909844  E_coul = 55.01153696899584
init E= -128.125424730103
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742895742256404  LUMO = 2.65792965686614
  mo_energy =
[-3.25136747e+01 -1.85363551e+00 -7.42895742e-01 -7.42895742e-01
 -7.42895742e-01  2.65792966e+00  2.65792966e+00  2.65792966e+00
  2.77181440e+00  1.99566530e+01  1.99566530e+01  1.99566530e+01
  4.55767930e+01  3.35456150e+02  2.02638127e+03  7.31828886e+03]
E1 = -182.13582619176714  E_coul = 53.939228978240415
cycle= 1 E= -128.196597213527  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259836
diis-c [-0.06751463  1.        ]
  HOMO = -0.807622167292042  LUMO = 2.60402919170351
  mo_energy =
[-3.27865026e+01 -1.92066112e+00 -8.07622167e-01 -8.07622167e-01
 -8.07622167e-01  2.60402919e+00  2.60402919e+00  2.60402919e+00
  2.71794694e+00  1.97664599e+01  1.97664599e+01  1.97664599e+01
  4.53416396e+01  3.35146334e+02  2.02602313e+03  7.31790650e+03]
E1 = -182.59694549995692  E_coul = 54.3987233844735
cycle= 2 E= -128.198222115483  delta_E= -0.00162  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101591
diis-c [-4.03519075e-04  2.77672472e-01  7.22327528e-01]
  HOMO = -0.784921536930049  LUMO = 2.6245909517423
  mo_energy =
[-3.27119332e+01 -1.89710477e+00 -7.84921537e-01 -7.84921537e-01
 -7.84921537e-01  2.62459095e+00  2.62459095e+00  2.62459095e+00
  2.73810636e+00  1.98224630e+01  1.98224630e+01  1.98224630e+01
  4.54076758e+01  3.35227924e+02  2.02611009e+03  7.31799494e+03]
E1 = -182.4651085282724  E_coul = 54.266582962558076
cycle= 3 E= -128.198525565714  delta_E= -0.000303  |g|= 0.000691  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000877703
diis-c [-7.44402845e-08 -3.88249963e-03 -1.75269895e-03  1.00563520e+00]
  HOMO = -0.785151835629242  LUMO = 2.62441660591289
  mo_energy =
[-3.27125910e+01 -1.89740402e+00 -7.85151836e-01 -7.85151836e-01
 -7.85151836e-01  2.62441661e+00  2.62441661e+00  2.62441661e+00
  2.73787049e+00  1.98219486e+01  1.98219486e+01  1.98219486e+01
  4.54070574e+01  3.35227426e+02  2.02610972e+03  7.31799462e+03]
E1 = -182.4663770301667  E_coul = 54.267851431540116
cycle= 4 E= -128.198525598627  delta_E= -3.29e-08  |g|= 5.02e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.98244e-05
diis-c [-2.08295198e-10  5.02194928e-04 -8.51324751e-04 -1.69290110e-01
  1.16963924e+00]
  HOMO = -0.785137509855747  LUMO = 2.62442901166233
  mo_energy =
[-3.27125540e+01 -1.89740146e+00 -7.85137510e-01 -7.85137510e-01
 -7.85137510e-01  2.62442901e+00  2.62442901e+00  2.62442901e+00
  2.73787190e+00  1.98219772e+01  1.98219772e+01  1.98219772e+01
  4.54070874e+01  3.35227477e+02  2.02610979e+03  7.31799469e+03]
E1 = -182.4663149903369  E_coul = 54.267789391422966
cycle= 5 E= -128.198525598914  delta_E= -2.87e-10  |g|= 1.53e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4663149903369  E_coul = 54.267789391422966
  HOMO = -0.785137451036173  LUMO = 2.62442907920323
  mo_energy =
[-3.27125540e+01 -1.89740178e+00 -7.85137451e-01 -7.85137451e-01
 -7.85137451e-01  2.62442908e+00  2.62442908e+00  2.62442908e+00
  2.73787163e+00  1.98219772e+01  1.98219772e+01  1.98219772e+01
  4.54070874e+01  3.35227477e+02  2.02610979e+03  7.31799469e+03]
E1 = -182.46631498197743  E_coul = 54.26778938306304
Extra cycle  E= -128.198525598914  delta_E= -4.55e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.08918550895794
E1 = -182.46631498197743  E_coul = 54.26778938306304
init E= -128.198525598914
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785137436506782  LUMO = 2.62442909079669
  mo_energy =
[-3.27125540e+01 -1.89740184e+00 -7.85137437e-01 -7.85137437e-01
 -7.85137437e-01  2.62442909e+00  2.62442909e+00  2.62442909e+00
  2.73787158e+00  1.98219772e+01  1.98219772e+01  1.98219772e+01
  4.54070874e+01  3.35227477e+02  2.02610979e+03  7.31799469e+03]
E1 = -182.4663149924429  E_coul = 54.267789393528375
cycle= 1 E= -128.198525598915  delta_E= -1.42e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4663149924429  E_coul = 54.267789393528375
  HOMO = -0.785137432918932  LUMO = 2.62442909378042
  mo_energy =
[-3.27125540e+01 -1.89740185e+00 -7.85137433e-01 -7.85137433e-01
 -7.85137433e-01  2.62442909e+00  2.62442909e+00  2.62442909e+00
  2.73787157e+00  1.98219772e+01  1.98219772e+01  1.98219772e+01
  4.54070874e+01  3.35227477e+02  2.02610979e+03  7.31799469e+03]
E1 = -182.46631499022862  E_coul = 54.26778939131423
Extra cycle  E= -128.198525598914  delta_E= 1.42e-13  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.14461757e+03 2.27486890e+02 1.42699928e+03 5.76030209e-01
 5.00562496e+01 1.32730741e+01 1.93055818e+00 2.77735053e+00
 1.33286302e+01 6.00579678e-01]
grad_E = [-9.95097481e-06  7.69146678e-06  3.37070915e-05  3.56232306e-06
 -1.51411647e-06 -2.41163172e-07 -7.22966097e-06  2.11224050e-05
 -1.84217183e-05  1.32643010e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61961285        1
[INPUT] 0    0    [1    /1   ]  227.491482416        1
[INPUT] 0    0    [1    /1   ]  1426.99188129        1
[INPUT] 0    0    [1    /1   ]  0.575999667412       1
[INPUT] 0    0    [1    /1   ]  50.0555462363        1
[INPUT] 0    0    [1    /1   ]  13.2728011272        1
[INPUT] 0    0    [1    /1   ]  1.930420387          1
[INPUT] 1    0    [1    /1   ]  2.77684205108        1
[INPUT] 1    0    [1    /1   ]  13.3247420034        1
[INPUT] 1    0    [1    /1   ]  0.600508619604       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6196128478823, 1.0]], [0, [227.49148241637045, 1.0]], [0, [1426.9918812898807, 1.0]], [0, [0.5759996674117376, 1.0]], [0, [50.055546236348405, 1.0]], [0, [13.272801127183902, 1.0]], [0, [1.9304203869954746, 1.0]], [1, [2.7768420510802945, 1.0]], [1, [13.324742003374975, 1.0]], [1, [0.6005086196040481, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61961285]
bas 1, expnt(s) = [227.49148242]
bas 2, expnt(s) = [1426.99188129]
bas 3, expnt(s) = [0.57599967]
bas 4, expnt(s) = [50.05554624]
bas 5, expnt(s) = [13.27280113]
bas 6, expnt(s) = [1.93042039]
bas 7, expnt(s) = [2.77684205]
bas 8, expnt(s) = [13.324742]
bas 9, expnt(s) = [0.60050862]
CPU time:       125.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461961e+03 7.96210186e+02 2.27491482e+02 1.47992218e+02
 1.42699188e+03 5.86585267e+02 5.75999667e-01 1.67044315e+00
 5.00555462e+01 4.75449262e+01 1.32728011e+01 1.75685923e+01
 1.93042039e+00 4.13765185e+00 2.77684205e+00 1.04573914e+01
 1.33247420e+01 7.42690560e+01 6.00508620e-01 1.54217426e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965601239356516
cond(S) = 160.0852557079229
E1 = -183.13696004385355  E_coul = 55.011525786340435
init E= -128.125434257513
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742894379883387  LUMO = 2.65747010252824
  mo_energy =
[-3.25136855e+01 -1.85363565e+00 -7.42894380e-01 -7.42894380e-01
 -7.42894380e-01  2.65747010e+00  2.65747010e+00  2.65747010e+00
  2.77153096e+00  1.99507808e+01  1.99507808e+01  1.99507808e+01
  4.55750229e+01  3.35456351e+02  2.02638731e+03  7.31828844e+03]
E1 = -182.1354245403359  E_coul = 53.938828411504666
cycle= 1 E= -128.196596128831  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259906
diis-c [-0.06755123  1.        ]
  HOMO = -0.807650412061865  LUMO = 2.60355192460703
  mo_energy =
[-3.27865844e+01 -1.92069513e+00 -8.07650412e-01 -8.07650412e-01
 -8.07650412e-01  2.60355192e+00  2.60355192e+00  2.60355192e+00
  2.71763831e+00  1.97605532e+01  1.97605532e+01  1.97605532e+01
  4.53398056e+01  3.35146463e+02  2.02602910e+03  7.31790601e+03]
E1 = -182.59671576023834  E_coul = 54.39849374256723
cycle= 2 E= -128.198222017671  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101631
diis-c [-4.03578745e-04  2.77698410e-01  7.22301590e-01]
  HOMO = -0.784941808398799  LUMO = 2.62411772746086
  mo_energy =
[-3.27119915e+01 -1.89713039e+00 -7.84941808e-01 -7.84941808e-01
 -7.84941808e-01  2.62411773e+00  2.62411773e+00  2.62411773e+00
  2.73780340e+00  1.98165689e+01  1.98165689e+01  1.98165689e+01
  4.54058628e+01  3.35228078e+02  2.02611608e+03  7.31799448e+03]
E1 = -182.46482492712053  E_coul = 54.26629922174125
cycle= 3 E= -128.198525705379  delta_E= -0.000304  |g|= 0.000691  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000876625
diis-c [-7.46550079e-08 -3.88400342e-03 -1.77193614e-03  1.00565594e+00]
  HOMO = -0.785171818072685  LUMO = 2.62394368949171
  mo_energy =
[-3.27126484e+01 -1.89742945e+00 -7.85171818e-01 -7.85171818e-01
 -7.85171818e-01  2.62394369e+00  2.62394369e+00  2.62394369e+00
  2.73756772e+00  1.98160552e+01  1.98160552e+01  1.98160552e+01
  4.54052450e+01  3.35227581e+02  2.02611572e+03  7.31799415e+03]
E1 = -182.46609201416425  E_coul = 54.26756627591113
cycle= 4 E= -128.198525738253  delta_E= -3.29e-08  |g|= 5.03e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.99418e-05
diis-c [-2.08587363e-10  5.02467816e-04 -8.49479272e-04 -1.69380657e-01
  1.16972767e+00]
  HOMO = -0.785157473704107  LUMO = 2.62395610893147
  mo_energy =
[-3.27126114e+01 -1.89742691e+00 -7.85157474e-01 -7.85157474e-01
 -7.85157474e-01  2.62395611e+00  2.62395611e+00  2.62395611e+00
  2.73756913e+00  1.98160838e+01  1.98160838e+01  1.98160838e+01
  4.54052751e+01  3.35227632e+02  2.02611578e+03  7.31799422e+03]
E1 = -182.46602989567512  E_coul = 54.26750415713362
cycle= 5 E= -128.198525738541  delta_E= -2.88e-10  |g|= 1.53e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46602989567512  E_coul = 54.26750415713362
  HOMO = -0.785157414903418  LUMO = 2.62395617649011
  mo_energy =
[-3.27126113e+01 -1.89742723e+00 -7.85157415e-01 -7.85157415e-01
 -7.85157415e-01  2.62395618e+00  2.62395618e+00  2.62395618e+00
  2.73756885e+00  1.98160838e+01  1.98160838e+01  1.98160838e+01
  4.54052751e+01  3.35227632e+02  2.02611578e+03  7.31799422e+03]
E1 = -182.46602988703327  E_coul = 54.267504148491405
Extra cycle  E= -128.198525738542  delta_E= -3.69e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14461961e+03 2.27491482e+02 1.42699188e+03 5.75999667e-01
 5.00555462e+01 1.32728011e+01 1.93042039e+00 2.77684205e+00
 1.33247420e+01 6.00508620e-01]
E = -128.19852573854186
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:24 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.61961285        1
[INPUT] 0    0    [1    /1   ]  227.491482416        1
[INPUT] 0    0    [1    /1   ]  1426.99188129        1
[INPUT] 0    0    [1    /1   ]  0.575999667412       1
[INPUT] 0    0    [1    /1   ]  50.0555462363        1
[INPUT] 0    0    [1    /1   ]  13.2728011272        1
[INPUT] 0    0    [1    /1   ]  1.930420387          1
[INPUT] 1    0    [1    /1   ]  2.77684205108        1
[INPUT] 1    0    [1    /1   ]  13.3247420034        1
[INPUT] 1    0    [1    /1   ]  0.600508619604       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6196128478823, 1.0]], [0, [227.49148241637045, 1.0]], [0, [1426.9918812898807, 1.0]], [0, [0.5759996674117376, 1.0]], [0, [50.055546236348405, 1.0]], [0, [13.272801127183902, 1.0]], [0, [1.9304203869954746, 1.0]], [1, [2.7768420510802945, 1.0]], [1, [13.324742003374975, 1.0]], [1, [0.6005086196040481, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.61961285]
bas 1, expnt(s) = [227.49148242]
bas 2, expnt(s) = [1426.99188129]
bas 3, expnt(s) = [0.57599967]
bas 4, expnt(s) = [50.05554624]
bas 5, expnt(s) = [13.27280113]
bas 6, expnt(s) = [1.93042039]
bas 7, expnt(s) = [2.77684205]
bas 8, expnt(s) = [13.324742]
bas 9, expnt(s) = [0.60050862]
CPU time:       126.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14461961e+03 7.96210186e+02 2.27491482e+02 1.47992218e+02
 1.42699188e+03 5.86585267e+02 5.75999667e-01 1.67044315e+00
 5.00555462e+01 4.75449262e+01 1.32728011e+01 1.75685923e+01
 1.93042039e+00 4.13765185e+00 2.77684205e+00 1.04573914e+01
 1.33247420e+01 7.42690560e+01 6.00508620e-01 1.54217426e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965601239356516
cond(S) = 160.0852557079229
E1 = -183.13696004385355  E_coul = 55.011525786340435
init E= -128.125434257513
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742894379883387  LUMO = 2.65747010252824
  mo_energy =
[-3.25136855e+01 -1.85363565e+00 -7.42894380e-01 -7.42894380e-01
 -7.42894380e-01  2.65747010e+00  2.65747010e+00  2.65747010e+00
  2.77153096e+00  1.99507808e+01  1.99507808e+01  1.99507808e+01
  4.55750229e+01  3.35456351e+02  2.02638731e+03  7.31828844e+03]
E1 = -182.1354245403359  E_coul = 53.938828411504666
cycle= 1 E= -128.196596128831  delta_E= -0.0712  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.259906
diis-c [-0.06755123  1.        ]
  HOMO = -0.807650412061865  LUMO = 2.60355192460703
  mo_energy =
[-3.27865844e+01 -1.92069513e+00 -8.07650412e-01 -8.07650412e-01
 -8.07650412e-01  2.60355192e+00  2.60355192e+00  2.60355192e+00
  2.71763831e+00  1.97605532e+01  1.97605532e+01  1.97605532e+01
  4.53398056e+01  3.35146463e+02  2.02602910e+03  7.31790601e+03]
E1 = -182.59671576023834  E_coul = 54.39849374256723
cycle= 2 E= -128.198222017671  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101631
diis-c [-4.03578745e-04  2.77698410e-01  7.22301590e-01]
  HOMO = -0.784941808398799  LUMO = 2.62411772746086
  mo_energy =
[-3.27119915e+01 -1.89713039e+00 -7.84941808e-01 -7.84941808e-01
 -7.84941808e-01  2.62411773e+00  2.62411773e+00  2.62411773e+00
  2.73780340e+00  1.98165689e+01  1.98165689e+01  1.98165689e+01
  4.54058628e+01  3.35228078e+02  2.02611608e+03  7.31799448e+03]
E1 = -182.46482492712053  E_coul = 54.26629922174125
cycle= 3 E= -128.198525705379  delta_E= -0.000304  |g|= 0.000691  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000876625
diis-c [-7.46550079e-08 -3.88400342e-03 -1.77193614e-03  1.00565594e+00]
  HOMO = -0.785171818072685  LUMO = 2.62394368949171
  mo_energy =
[-3.27126484e+01 -1.89742945e+00 -7.85171818e-01 -7.85171818e-01
 -7.85171818e-01  2.62394369e+00  2.62394369e+00  2.62394369e+00
  2.73756772e+00  1.98160552e+01  1.98160552e+01  1.98160552e+01
  4.54052450e+01  3.35227581e+02  2.02611572e+03  7.31799415e+03]
E1 = -182.46609201416425  E_coul = 54.26756627591113
cycle= 4 E= -128.198525738253  delta_E= -3.29e-08  |g|= 5.03e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.99418e-05
diis-c [-2.08587363e-10  5.02467816e-04 -8.49479272e-04 -1.69380657e-01
  1.16972767e+00]
  HOMO = -0.785157473704107  LUMO = 2.62395610893147
  mo_energy =
[-3.27126114e+01 -1.89742691e+00 -7.85157474e-01 -7.85157474e-01
 -7.85157474e-01  2.62395611e+00  2.62395611e+00  2.62395611e+00
  2.73756913e+00  1.98160838e+01  1.98160838e+01  1.98160838e+01
  4.54052751e+01  3.35227632e+02  2.02611578e+03  7.31799422e+03]
E1 = -182.46602989567512  E_coul = 54.26750415713362
cycle= 5 E= -128.198525738541  delta_E= -2.88e-10  |g|= 1.53e-06  |ddm|= 2.54e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46602989567512  E_coul = 54.26750415713362
  HOMO = -0.785157414903418  LUMO = 2.62395617649011
  mo_energy =
[-3.27126113e+01 -1.89742723e+00 -7.85157415e-01 -7.85157415e-01
 -7.85157415e-01  2.62395618e+00  2.62395618e+00  2.62395618e+00
  2.73756885e+00  1.98160838e+01  1.98160838e+01  1.98160838e+01
  4.54052751e+01  3.35227632e+02  2.02611578e+03  7.31799422e+03]
E1 = -182.46602988703327  E_coul = 54.267504148491405
Extra cycle  E= -128.198525738542  delta_E= -3.69e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.0852557079229
E1 = -182.46602988703327  E_coul = 54.267504148491405
init E= -128.198525738542
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785157400396309  LUMO = 2.62395618806062
  mo_energy =
[-3.27126113e+01 -1.89742728e+00 -7.85157400e-01 -7.85157400e-01
 -7.85157400e-01  2.62395619e+00  2.62395619e+00  2.62395619e+00
  2.73756880e+00  1.98160838e+01  1.98160838e+01  1.98160838e+01
  4.54052751e+01  3.35227632e+02  2.02611578e+03  7.31799422e+03]
E1 = -182.4660298975869  E_coul = 54.26750415904495
cycle= 1 E= -128.198525738542  delta_E= -8.53e-14  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4660298975869  E_coul = 54.26750415904495
  HOMO = -0.785157396802678  LUMO = 2.62395619104895
  mo_energy =
[-3.27126113e+01 -1.89742729e+00 -7.85157397e-01 -7.85157397e-01
 -7.85157397e-01  2.62395619e+00  2.62395619e+00  2.62395619e+00
  2.73756880e+00  1.98160838e+01  1.98160838e+01  1.98160838e+01
  4.54052751e+01  3.35227632e+02  2.02611578e+03  7.31799422e+03]
E1 = -182.46602989533378  E_coul = 54.26750415679189
Extra cycle  E= -128.198525738542  delta_E= 5.68e-14  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14461961e+03 2.27491482e+02 1.42699188e+03 5.75999667e-01
 5.00555462e+01 1.32728011e+01 1.93042039e+00 2.77684205e+00
 1.33247420e+01 6.00508620e-01]
grad_E = [-9.95248605e-06  8.10062118e-06  3.36998522e-05  5.44528788e-06
 -3.43267487e-06 -4.34686264e-07 -1.19805497e-05  3.50106002e-05
 -3.62474902e-05  2.30367690e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.62516171        1
[INPUT] 0    0    [1    /1   ]  227.498624381        1
[INPUT] 0    0    [1    /1   ]  1426.9721818         1
[INPUT] 0    0    [1    /1   ]  0.575949501915       1
[INPUT] 0    0    [1    /1   ]  50.0543487387        1
[INPUT] 0    0    [1    /1   ]  13.2723478766        1
[INPUT] 0    0    [1    /1   ]  1.93019440511        1
[INPUT] 1    0    [1    /1   ]  2.77601193873        1
[INPUT] 1    0    [1    /1   ]  13.3183960447        1
[INPUT] 1    0    [1    /1   ]  0.600392608714       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6251617069734, 1.0]], [0, [227.4986243806142, 1.0]], [0, [1426.972181800227, 1.0]], [0, [0.5759495019149025, 1.0]], [0, [50.05434873874284, 1.0]], [0, [13.27234787661162, 1.0]], [0, [1.930194405108757, 1.0]], [1, [2.776011938727267, 1.0]], [1, [13.318396044694632, 1.0]], [1, [0.6003926087142406, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.62516171]
bas 1, expnt(s) = [227.49862438]
bas 2, expnt(s) = [1426.9721818]
bas 3, expnt(s) = [0.5759495]
bas 4, expnt(s) = [50.05434874]
bas 5, expnt(s) = [13.27234788]
bas 6, expnt(s) = [1.93019441]
bas 7, expnt(s) = [2.77601194]
bas 8, expnt(s) = [13.31839604]
bas 9, expnt(s) = [0.60039261]
CPU time:       128.55
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14462516e+03 7.96211731e+02 2.27498624e+02 1.47995703e+02
 1.42697218e+03 5.86579194e+02 5.75949502e-01 1.67033403e+00
 5.00543487e+01 4.75440732e+01 1.32723479e+01 1.75681423e+01
 1.93019441e+00 4.13728857e+00 2.77601194e+00 1.04534839e+01
 1.33183960e+01 7.42248450e+01 6.00392609e-01 1.54180186e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965626632674315
cond(S) = 160.07439150769147
E1 = -183.13695742762982  E_coul = 55.01150741333543
init E= -128.125450014294
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74289213763927  LUMO = 2.65671991025211
  mo_energy =
[-3.25137034e+01 -1.85363590e+00 -7.42892138e-01 -7.42892138e-01
 -7.42892138e-01  2.65671991e+00  2.65671991e+00  2.65671991e+00
  2.77106569e+00  1.99411972e+01  1.99411972e+01  1.99411972e+01
  4.55720826e+01  3.35456164e+02  2.02639196e+03  7.31827304e+03]
E1 = -182.1347685502715  E_coul = 53.938174053285785
cycle= 1 E= -128.196594496986  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260021
diis-c [-0.06761102  1.        ]
  HOMO = -0.807696524815763  LUMO = 2.60277281260566
  mo_energy =
[-3.27867184e+01 -1.92075069e+00 -8.07696525e-01 -8.07696525e-01
 -8.07696525e-01  2.60277281e+00  2.60277281e+00  2.60277281e+00
  2.71713197e+00  1.97509132e+01  1.97509132e+01  1.97509132e+01
  4.53367610e+01  3.35146158e+02  2.02603363e+03  7.31789049e+03]
E1 = -182.5963405990172  E_coul = 54.39811860053115
cycle= 2 E= -128.198221998486  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101695
diis-c [-4.03675021e-04  2.77740770e-01  7.22259230e-01]
  HOMO = -0.784974896729104  LUMO = 2.62334521734252
  mo_energy =
[-3.27120867e+01 -1.89717226e+00 -7.84974897e-01 -7.84974897e-01
 -7.84974897e-01  2.62334522e+00  2.62334522e+00  2.62334522e+00
  2.73730631e+00  1.98069493e+01  1.98069493e+01  1.98069493e+01
  4.54028524e+01  3.35227814e+02  2.02612066e+03  7.31797900e+03]
E1 = -182.46436178185843  E_coul = 54.26583570753618
cycle= 3 E= -128.198526074322  delta_E= -0.000304  |g|= 0.00069  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000874862
diis-c [-7.50062536e-08 -3.88646768e-03 -1.80338710e-03  1.00568985e+00]
  HOMO = -0.785204433512922  LUMO = 2.62317168278352
  mo_energy =
[-3.27127423e+01 -1.89747102e+00 -7.85204434e-01 -7.85204434e-01
 -7.85204434e-01  2.62317168e+00  2.62317168e+00  2.62317168e+00
  2.73707094e+00  1.98064367e+01  1.98064367e+01  1.98064367e+01
  4.54022358e+01  3.35227318e+02  2.02612029e+03  7.31797868e+03]
E1 = -182.46562655268494  E_coul = 54.26710044555201
cycle= 4 E= -128.198526107133  delta_E= -3.28e-08  |g|= 5.04e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.01334e-05
diis-c [-2.09065080e-10  5.02911789e-04 -8.46452272e-04 -1.69527747e-01
  1.16987129e+00]
  HOMO = -0.78519005879415  LUMO = 2.62318412455152
  mo_energy =
[-3.27127052e+01 -1.89746847e+00 -7.85190059e-01 -7.85190059e-01
 -7.85190059e-01  2.62318412e+00  2.62318412e+00  2.62318412e+00
  2.73707235e+00  1.98064654e+01  1.98064654e+01  1.98064654e+01
  4.54022660e+01  3.35227370e+02  2.02612036e+03  7.31797875e+03]
E1 = -182.46556430581694  E_coul = 54.26703819839392
cycle= 5 E= -128.198526107423  delta_E= -2.9e-10  |g|= 1.53e-06  |ddm|= 2.55e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46556430581694  E_coul = 54.26703819839392
  HOMO = -0.78519000002102  LUMO = 2.62318419214229
  mo_energy =
[-3.27127052e+01 -1.89746879e+00 -7.85190000e-01 -7.85190000e-01
 -7.85190000e-01  2.62318419e+00  2.62318419e+00  2.62318419e+00
  2.73707207e+00  1.98064654e+01  1.98064654e+01  1.98064654e+01
  4.54022660e+01  3.35227370e+02  2.02612036e+03  7.31797875e+03]
E1 = -182.4655642966978  E_coul = 54.26703818927454
Extra cycle  E= -128.198526107423  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14462516e+03 2.27498624e+02 1.42697218e+03 5.75949502e-01
 5.00543487e+01 1.32723479e+01 1.93019441e+00 2.77601194e+00
 1.33183960e+01 6.00392609e-01]
E = -128.19852610742328
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.62516171        1
[INPUT] 0    0    [1    /1   ]  227.498624381        1
[INPUT] 0    0    [1    /1   ]  1426.9721818         1
[INPUT] 0    0    [1    /1   ]  0.575949501915       1
[INPUT] 0    0    [1    /1   ]  50.0543487387        1
[INPUT] 0    0    [1    /1   ]  13.2723478766        1
[INPUT] 0    0    [1    /1   ]  1.93019440511        1
[INPUT] 1    0    [1    /1   ]  2.77601193873        1
[INPUT] 1    0    [1    /1   ]  13.3183960447        1
[INPUT] 1    0    [1    /1   ]  0.600392608714       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6251617069734, 1.0]], [0, [227.4986243806142, 1.0]], [0, [1426.972181800227, 1.0]], [0, [0.5759495019149025, 1.0]], [0, [50.05434873874284, 1.0]], [0, [13.27234787661162, 1.0]], [0, [1.930194405108757, 1.0]], [1, [2.776011938727267, 1.0]], [1, [13.318396044694632, 1.0]], [1, [0.6003926087142406, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.62516171]
bas 1, expnt(s) = [227.49862438]
bas 2, expnt(s) = [1426.9721818]
bas 3, expnt(s) = [0.5759495]
bas 4, expnt(s) = [50.05434874]
bas 5, expnt(s) = [13.27234788]
bas 6, expnt(s) = [1.93019441]
bas 7, expnt(s) = [2.77601194]
bas 8, expnt(s) = [13.31839604]
bas 9, expnt(s) = [0.60039261]
CPU time:       129.28
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14462516e+03 7.96211731e+02 2.27498624e+02 1.47995703e+02
 1.42697218e+03 5.86579194e+02 5.75949502e-01 1.67033403e+00
 5.00543487e+01 4.75440732e+01 1.32723479e+01 1.75681423e+01
 1.93019441e+00 4.13728857e+00 2.77601194e+00 1.04534839e+01
 1.33183960e+01 7.42248450e+01 6.00392609e-01 1.54180186e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965626632674315
cond(S) = 160.07439150769147
E1 = -183.13695742762982  E_coul = 55.01150741333543
init E= -128.125450014294
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74289213763927  LUMO = 2.65671991025211
  mo_energy =
[-3.25137034e+01 -1.85363590e+00 -7.42892138e-01 -7.42892138e-01
 -7.42892138e-01  2.65671991e+00  2.65671991e+00  2.65671991e+00
  2.77106569e+00  1.99411972e+01  1.99411972e+01  1.99411972e+01
  4.55720826e+01  3.35456164e+02  2.02639196e+03  7.31827304e+03]
E1 = -182.1347685502715  E_coul = 53.938174053285785
cycle= 1 E= -128.196594496986  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260021
diis-c [-0.06761102  1.        ]
  HOMO = -0.807696524815763  LUMO = 2.60277281260566
  mo_energy =
[-3.27867184e+01 -1.92075069e+00 -8.07696525e-01 -8.07696525e-01
 -8.07696525e-01  2.60277281e+00  2.60277281e+00  2.60277281e+00
  2.71713197e+00  1.97509132e+01  1.97509132e+01  1.97509132e+01
  4.53367610e+01  3.35146158e+02  2.02603363e+03  7.31789049e+03]
E1 = -182.5963405990172  E_coul = 54.39811860053115
cycle= 2 E= -128.198221998486  delta_E= -0.00163  |g|= 0.0624  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101695
diis-c [-4.03675021e-04  2.77740770e-01  7.22259230e-01]
  HOMO = -0.784974896729104  LUMO = 2.62334521734252
  mo_energy =
[-3.27120867e+01 -1.89717226e+00 -7.84974897e-01 -7.84974897e-01
 -7.84974897e-01  2.62334522e+00  2.62334522e+00  2.62334522e+00
  2.73730631e+00  1.98069493e+01  1.98069493e+01  1.98069493e+01
  4.54028524e+01  3.35227814e+02  2.02612066e+03  7.31797900e+03]
E1 = -182.46436178185843  E_coul = 54.26583570753618
cycle= 3 E= -128.198526074322  delta_E= -0.000304  |g|= 0.00069  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000874862
diis-c [-7.50062536e-08 -3.88646768e-03 -1.80338710e-03  1.00568985e+00]
  HOMO = -0.785204433512922  LUMO = 2.62317168278352
  mo_energy =
[-3.27127423e+01 -1.89747102e+00 -7.85204434e-01 -7.85204434e-01
 -7.85204434e-01  2.62317168e+00  2.62317168e+00  2.62317168e+00
  2.73707094e+00  1.98064367e+01  1.98064367e+01  1.98064367e+01
  4.54022358e+01  3.35227318e+02  2.02612029e+03  7.31797868e+03]
E1 = -182.46562655268494  E_coul = 54.26710044555201
cycle= 4 E= -128.198526107133  delta_E= -3.28e-08  |g|= 5.04e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.01334e-05
diis-c [-2.09065080e-10  5.02911789e-04 -8.46452272e-04 -1.69527747e-01
  1.16987129e+00]
  HOMO = -0.78519005879415  LUMO = 2.62318412455152
  mo_energy =
[-3.27127052e+01 -1.89746847e+00 -7.85190059e-01 -7.85190059e-01
 -7.85190059e-01  2.62318412e+00  2.62318412e+00  2.62318412e+00
  2.73707235e+00  1.98064654e+01  1.98064654e+01  1.98064654e+01
  4.54022660e+01  3.35227370e+02  2.02612036e+03  7.31797875e+03]
E1 = -182.46556430581694  E_coul = 54.26703819839392
cycle= 5 E= -128.198526107423  delta_E= -2.9e-10  |g|= 1.53e-06  |ddm|= 2.55e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46556430581694  E_coul = 54.26703819839392
  HOMO = -0.78519000002102  LUMO = 2.62318419214229
  mo_energy =
[-3.27127052e+01 -1.89746879e+00 -7.85190000e-01 -7.85190000e-01
 -7.85190000e-01  2.62318419e+00  2.62318419e+00  2.62318419e+00
  2.73707207e+00  1.98064654e+01  1.98064654e+01  1.98064654e+01
  4.54022660e+01  3.35227370e+02  2.02612036e+03  7.31797875e+03]
E1 = -182.4655642966978  E_coul = 54.26703818927454
Extra cycle  E= -128.198526107423  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.07439150769147
E1 = -182.4655642966978  E_coul = 54.26703818927454
init E= -128.198526107423
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785189985551347  LUMO = 2.62318420367437
  mo_energy =
[-3.27127052e+01 -1.89746885e+00 -7.85189986e-01 -7.85189986e-01
 -7.85189986e-01  2.62318420e+00  2.62318420e+00  2.62318420e+00
  2.73707202e+00  1.98064654e+01  1.98064654e+01  1.98064654e+01
  4.54022660e+01  3.35227370e+02  2.02612036e+03  7.31797875e+03]
E1 = -182.46556430740077  E_coul = 54.267038199977534
cycle= 1 E= -128.198526107423  delta_E= 5.68e-14  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46556430740077  E_coul = 54.267038199977534
  HOMO = -0.785189981947867  LUMO = 2.62318420667058
  mo_energy =
[-3.27127051e+01 -1.89746886e+00 -7.85189982e-01 -7.85189982e-01
 -7.85189982e-01  2.62318421e+00  2.62318421e+00  2.62318421e+00
  2.73707201e+00  1.98064654e+01  1.98064654e+01  1.98064654e+01
  4.54022660e+01  3.35227370e+02  2.02612036e+03  7.31797875e+03]
E1 = -182.4655643050833  E_coul = 54.267038197659886
Extra cycle  E= -128.198526107423  delta_E= -1.71e-13  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14462516e+03 2.27498624e+02 1.42697218e+03 5.75949502e-01
 5.00543487e+01 1.32723479e+01 1.93019441e+00 2.77601194e+00
 1.33183960e+01 6.00392609e-01]
grad_E = [-9.95523962e-06  8.76992536e-06  3.36884861e-05  8.50957842e-06
 -6.57361363e-06 -7.46680626e-07 -1.97438271e-05  5.77134924e-05
 -6.53876568e-05  3.90589476e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.63990904        1
[INPUT] 0    0    [1    /1   ]  227.509239088        1
[INPUT] 0    0    [1    /1   ]  1426.92049139        1
[INPUT] 0    0    [1    /1   ]  0.575867910835       1
[INPUT] 0    0    [1    /1   ]  50.0522995646        1
[INPUT] 0    0    [1    /1   ]  13.2715989068        1
[INPUT] 0    0    [1    /1   ]  1.92982763471        1
[INPUT] 1    0    [1    /1   ]  2.77467380166        1
[INPUT] 1    0    [1    /1   ]  13.3081710988        1
[INPUT] 1    0    [1    /1   ]  0.600205578006       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.639909040331, 1.0]], [0, [227.50923908791702, 1.0]], [0, [1426.920491390066, 1.0]], [0, [0.5758679108346602, 1.0]], [0, [50.052299564624995, 1.0]], [0, [13.271598906797484, 1.0]], [0, [1.9298276347132644, 1.0]], [1, [2.774673801662279, 1.0]], [1, [13.308171098842742, 1.0]], [1, [0.600205578005951, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.63990904]
bas 1, expnt(s) = [227.50923909]
bas 2, expnt(s) = [1426.92049139]
bas 3, expnt(s) = [0.57586791]
bas 4, expnt(s) = [50.05229956]
bas 5, expnt(s) = [13.27159891]
bas 6, expnt(s) = [1.92982763]
bas 7, expnt(s) = [2.7746738]
bas 8, expnt(s) = [13.3081711]
bas 9, expnt(s) = [0.60020558]
CPU time:       131.77
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14463991e+03 7.96215837e+02 2.27509239e+02 1.48000882e+02
 1.42692049e+03 5.86563258e+02 5.75867911e-01 1.67015656e+00
 5.00522996e+01 4.75426134e+01 1.32715989e+01 1.75673988e+01
 1.92982763e+00 4.13669894e+00 2.77467380e+00 1.04471856e+01
 1.33081711e+01 7.41536209e+01 6.00205578e-01 1.54120151e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965667557935138
cond(S) = 160.04526727623156
E1 = -183.13695342164894  E_coul = 55.01147748718676
init E= -128.125475934462
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74288847687731  LUMO = 2.65551070219811
  mo_energy =
[-3.25137326e+01 -1.85363636e+00 -7.42888477e-01 -7.42888477e-01
 -7.42888477e-01  2.65551070e+00  2.65551070e+00  2.65551070e+00
  2.77030963e+00  1.99257561e+01  1.99257561e+01  1.99257561e+01
  4.55672213e+01  3.35454578e+02  2.02638596e+03  7.31820990e+03]
E1 = -182.13371033877894  E_coul = 53.93711810897337
cycle= 1 E= -128.196592229806  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260207
diis-c [-0.06770754  1.        ]
  HOMO = -0.807770866437981  LUMO = 2.60151697689928
  mo_energy =
[-3.27869348e+01 -1.92084035e+00 -8.07770866e-01 -8.07770866e-01
 -8.07770866e-01  2.60151698e+00  2.60151698e+00  2.60151698e+00
  2.71630982e+00  1.97353812e+01  1.97353812e+01  1.97353812e+01
  4.53317316e+01  3.35144381e+02  2.02602744e+03  7.31782716e+03]
E1 = -182.59573555599894  E_coul = 54.39751322098102
cycle= 2 E= -128.198222335018  delta_E= -0.00163  |g|= 0.0625  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101799
diis-c [-4.03827224e-04  2.77809096e-01  7.22190904e-01]
  HOMO = -0.785028222438681  LUMO = 2.62210002904865
  mo_energy =
[-3.27122409e+01 -1.89723983e+00 -7.85028222e-01 -7.85028222e-01
 -7.85028222e-01  2.62210003e+00  2.62210003e+00  2.62210003e+00
  2.73649905e+00  1.97914502e+01  1.97914502e+01  1.97914502e+01
  4.53978782e+01  3.35226104e+02  2.02611454e+03  7.31791574e+03]
E1 = -182.46361476648937  E_coul = 54.26508772881319
cycle= 3 E= -128.198527037676  delta_E= -0.000305  |g|= 0.000689  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000872015
diis-c [-7.55745065e-08 -3.89046548e-03 -1.85421280e-03  1.00574468e+00]
  HOMO = -0.785256994110779  LUMO = 2.62192730819012
  mo_energy =
[-3.27128942e+01 -1.89753810e+00 -7.85256994e-01 -7.85256994e-01
 -7.85256994e-01  2.62192731e+00  2.62192731e+00  2.62192731e+00
  2.73626418e+00  1.97909396e+01  1.97909396e+01  1.97909396e+01
  4.53972636e+01  3.35225611e+02  2.02611417e+03  7.31791542e+03]
E1 = -182.4648757864697  E_coul = 54.266348716084416
cycle= 4 E= -128.198527070385  delta_E= -3.27e-08  |g|= 5.06e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.04424e-05
diis-c [-2.09837219e-10  5.03623987e-04 -8.41536021e-04 -1.69763085e-01
  1.17010100e+00]
  HOMO = -0.78524257046527  LUMO = 2.62193978591223
  mo_energy =
[-3.27128571e+01 -1.89753556e+00 -7.85242570e-01 -7.85242570e-01
 -7.85242570e-01  2.62193979e+00  2.62193979e+00  2.62193979e+00
  2.73626557e+00  1.97909683e+01  1.97909683e+01  1.97909683e+01
  4.53972938e+01  3.35225662e+02  2.02611424e+03  7.31791549e+03]
E1 = -182.46481333265623  E_coul = 54.266286261978294
cycle= 5 E= -128.198527070678  delta_E= -2.93e-10  |g|= 1.53e-06  |ddm|= 2.57e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46481333265623  E_coul = 54.266286261978294
  HOMO = -0.785242511729075  LUMO = 2.62193985356215
  mo_energy =
[-3.27128570e+01 -1.89753589e+00 -7.85242512e-01 -7.85242512e-01
 -7.85242512e-01  2.62193985e+00  2.62193985e+00  2.62193985e+00
  2.73626529e+00  1.97909683e+01  1.97909683e+01  1.97909683e+01
  4.53972938e+01  3.35225662e+02  2.02611424e+03  7.31791549e+03]
E1 = -182.46481332272887  E_coul = 54.26628625205057
Extra cycle  E= -128.198527070678  delta_E= -3.69e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14463991e+03 2.27509239e+02 1.42692049e+03 5.75867911e-01
 5.00522996e+01 1.32715989e+01 1.92982763e+00 2.77467380e+00
 1.33081711e+01 6.00205578e-01]
E = -128.1985270706783
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.63990904        1
[INPUT] 0    0    [1    /1   ]  227.509239088        1
[INPUT] 0    0    [1    /1   ]  1426.92049139        1
[INPUT] 0    0    [1    /1   ]  0.575867910835       1
[INPUT] 0    0    [1    /1   ]  50.0522995646        1
[INPUT] 0    0    [1    /1   ]  13.2715989068        1
[INPUT] 0    0    [1    /1   ]  1.92982763471        1
[INPUT] 1    0    [1    /1   ]  2.77467380166        1
[INPUT] 1    0    [1    /1   ]  13.3081710988        1
[INPUT] 1    0    [1    /1   ]  0.600205578006       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.639909040331, 1.0]], [0, [227.50923908791702, 1.0]], [0, [1426.920491390066, 1.0]], [0, [0.5758679108346602, 1.0]], [0, [50.052299564624995, 1.0]], [0, [13.271598906797484, 1.0]], [0, [1.9298276347132644, 1.0]], [1, [2.774673801662279, 1.0]], [1, [13.308171098842742, 1.0]], [1, [0.600205578005951, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.63990904]
bas 1, expnt(s) = [227.50923909]
bas 2, expnt(s) = [1426.92049139]
bas 3, expnt(s) = [0.57586791]
bas 4, expnt(s) = [50.05229956]
bas 5, expnt(s) = [13.27159891]
bas 6, expnt(s) = [1.92982763]
bas 7, expnt(s) = [2.7746738]
bas 8, expnt(s) = [13.3081711]
bas 9, expnt(s) = [0.60020558]
CPU time:       132.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14463991e+03 7.96215837e+02 2.27509239e+02 1.48000882e+02
 1.42692049e+03 5.86563258e+02 5.75867911e-01 1.67015656e+00
 5.00522996e+01 4.75426134e+01 1.32715989e+01 1.75673988e+01
 1.92982763e+00 4.13669894e+00 2.77467380e+00 1.04471856e+01
 1.33081711e+01 7.41536209e+01 6.00205578e-01 1.54120151e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965667557935138
cond(S) = 160.04526727623156
E1 = -183.13695342164894  E_coul = 55.01147748718676
init E= -128.125475934462
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74288847687731  LUMO = 2.65551070219811
  mo_energy =
[-3.25137326e+01 -1.85363636e+00 -7.42888477e-01 -7.42888477e-01
 -7.42888477e-01  2.65551070e+00  2.65551070e+00  2.65551070e+00
  2.77030963e+00  1.99257561e+01  1.99257561e+01  1.99257561e+01
  4.55672213e+01  3.35454578e+02  2.02638596e+03  7.31820990e+03]
E1 = -182.13371033877894  E_coul = 53.93711810897337
cycle= 1 E= -128.196592229806  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260207
diis-c [-0.06770754  1.        ]
  HOMO = -0.807770866437981  LUMO = 2.60151697689928
  mo_energy =
[-3.27869348e+01 -1.92084035e+00 -8.07770866e-01 -8.07770866e-01
 -8.07770866e-01  2.60151698e+00  2.60151698e+00  2.60151698e+00
  2.71630982e+00  1.97353812e+01  1.97353812e+01  1.97353812e+01
  4.53317316e+01  3.35144381e+02  2.02602744e+03  7.31782716e+03]
E1 = -182.59573555599894  E_coul = 54.39751322098102
cycle= 2 E= -128.198222335018  delta_E= -0.00163  |g|= 0.0625  |ddm|= 0.0642
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101799
diis-c [-4.03827224e-04  2.77809096e-01  7.22190904e-01]
  HOMO = -0.785028222438681  LUMO = 2.62210002904865
  mo_energy =
[-3.27122409e+01 -1.89723983e+00 -7.85028222e-01 -7.85028222e-01
 -7.85028222e-01  2.62210003e+00  2.62210003e+00  2.62210003e+00
  2.73649905e+00  1.97914502e+01  1.97914502e+01  1.97914502e+01
  4.53978782e+01  3.35226104e+02  2.02611454e+03  7.31791574e+03]
E1 = -182.46361476648937  E_coul = 54.26508772881319
cycle= 3 E= -128.198527037676  delta_E= -0.000305  |g|= 0.000689  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000872015
diis-c [-7.55745065e-08 -3.89046548e-03 -1.85421280e-03  1.00574468e+00]
  HOMO = -0.785256994110779  LUMO = 2.62192730819012
  mo_energy =
[-3.27128942e+01 -1.89753810e+00 -7.85256994e-01 -7.85256994e-01
 -7.85256994e-01  2.62192731e+00  2.62192731e+00  2.62192731e+00
  2.73626418e+00  1.97909396e+01  1.97909396e+01  1.97909396e+01
  4.53972636e+01  3.35225611e+02  2.02611417e+03  7.31791542e+03]
E1 = -182.4648757864697  E_coul = 54.266348716084416
cycle= 4 E= -128.198527070385  delta_E= -3.27e-08  |g|= 5.06e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.04424e-05
diis-c [-2.09837219e-10  5.03623987e-04 -8.41536021e-04 -1.69763085e-01
  1.17010100e+00]
  HOMO = -0.78524257046527  LUMO = 2.62193978591223
  mo_energy =
[-3.27128571e+01 -1.89753556e+00 -7.85242570e-01 -7.85242570e-01
 -7.85242570e-01  2.62193979e+00  2.62193979e+00  2.62193979e+00
  2.73626557e+00  1.97909683e+01  1.97909683e+01  1.97909683e+01
  4.53972938e+01  3.35225662e+02  2.02611424e+03  7.31791549e+03]
E1 = -182.46481333265623  E_coul = 54.266286261978294
cycle= 5 E= -128.198527070678  delta_E= -2.93e-10  |g|= 1.53e-06  |ddm|= 2.57e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46481333265623  E_coul = 54.266286261978294
  HOMO = -0.785242511729075  LUMO = 2.62193985356215
  mo_energy =
[-3.27128570e+01 -1.89753589e+00 -7.85242512e-01 -7.85242512e-01
 -7.85242512e-01  2.62193985e+00  2.62193985e+00  2.62193985e+00
  2.73626529e+00  1.97909683e+01  1.97909683e+01  1.97909683e+01
  4.53972938e+01  3.35225662e+02  2.02611424e+03  7.31791549e+03]
E1 = -182.46481332272887  E_coul = 54.26628625205057
Extra cycle  E= -128.198527070678  delta_E= -3.69e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 160.04526727623156
E1 = -182.46481332272887  E_coul = 54.26628625205057
init E= -128.198527070678
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785242497322345  LUMO = 2.62193986502997
  mo_energy =
[-3.27128570e+01 -1.89753594e+00 -7.85242497e-01 -7.85242497e-01
 -7.85242497e-01  2.62193987e+00  2.62193987e+00  2.62193987e+00
  2.73626524e+00  1.97909683e+01  1.97909683e+01  1.97909683e+01
  4.53972938e+01  3.35225662e+02  2.02611424e+03  7.31791549e+03]
E1 = -182.4648133336891  E_coul = 54.26628626301097
cycle= 1 E= -128.198527070678  delta_E= 1.42e-13  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.4648133336891  E_coul = 54.26628626301097
  HOMO = -0.785242493701842  LUMO = 2.62193986803989
  mo_energy =
[-3.27128570e+01 -1.89753595e+00 -7.85242494e-01 -7.85242494e-01
 -7.85242494e-01  2.62193987e+00  2.62193987e+00  2.62193987e+00
  2.73626524e+00  1.97909683e+01  1.97909683e+01  1.97909683e+01
  4.53972938e+01  3.35225662e+02  2.02611424e+03  7.31791549e+03]
E1 = -182.4648133312606  E_coul = 54.2662862605824
Extra cycle  E= -128.198527070678  delta_E= -2.84e-14  |g|= 9.33e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14463991e+03 2.27509239e+02 1.42692049e+03 5.75867911e-01
 5.00522996e+01 1.32715989e+01 1.92982763e+00 2.77467380e+00
 1.33081711e+01 6.00205578e-01]
grad_E = [-9.96042985e-06  9.85164678e-06  3.36713323e-05  1.34501337e-05
 -1.16509225e-05 -1.24726789e-06 -3.22826301e-05  9.43857592e-05
 -1.12459406e-04  6.49768905e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:33 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.67902209        1
[INPUT] 0    0    [1    /1   ]  227.524099336        1
[INPUT] 0    0    [1    /1   ]  1426.78445448        1
[INPUT] 0    0    [1    /1   ]  0.575733901114       1
[INPUT] 0    0    [1    /1   ]  50.0486757902        1
[INPUT] 0    0    [1    /1   ]  13.2703389173        1
[INPUT] 0    0    [1    /1   ]  1.92922716693        1
[INPUT] 1    0    [1    /1   ]  2.7725062132         1
[INPUT] 1    0    [1    /1   ]  13.2916207218        1
[INPUT] 1    0    [1    /1   ]  0.599902551058       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6790220889898, 1.0]], [0, [227.524099335798, 1.0]], [0, [1426.7844544804043, 1.0]], [0, [0.5757339011137589, 1.0]], [0, [50.04867579016352, 1.0]], [0, [13.270338917281807, 1.0]], [0, [1.9292271669346337, 1.0]], [1, [2.7725062131987244, 1.0]], [1, [13.291620721833507, 1.0]], [1, [0.5999025510581623, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.67902209]
bas 1, expnt(s) = [227.52409934]
bas 2, expnt(s) = [1426.78445448]
bas 3, expnt(s) = [0.5757339]
bas 4, expnt(s) = [50.04867579]
bas 5, expnt(s) = [13.27033892]
bas 6, expnt(s) = [1.92922717]
bas 7, expnt(s) = [2.77250621]
bas 8, expnt(s) = [13.29162072]
bas 9, expnt(s) = [0.59990255]
CPU time:       135.06
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14467902e+03 7.96226728e+02 2.27524099e+02 1.48008132e+02
 1.42678445e+03 5.86521317e+02 5.75733901e-01 1.66986506e+00
 5.00486758e+01 4.75400318e+01 1.32703389e+01 1.75661479e+01
 1.92922717e+00 4.13573355e+00 2.77250621e+00 1.04369848e+01
 1.32916207e+01 7.40383647e+01 5.99902551e-01 1.54022894e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96573382823765
cond(S) = 159.9676695870328
E1 = -183.13694747602645  E_coul = 55.01142819723306
init E= -128.125519278793
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742882426444443  LUMO = 2.65355218871967
  mo_energy =
[-3.25137810e+01 -1.85363728e+00 -7.42882426e-01 -7.42882426e-01
 -7.42882426e-01  2.65355219e+00  2.65355219e+00  2.65355219e+00
  2.76906955e+00  1.99007643e+01  1.99007643e+01  1.99007643e+01
  4.55590362e+01  3.35448684e+02  2.02634093e+03  7.31800720e+03]
E1 = -182.13199417042193  E_coul = 53.935404659226194
cycle= 1 E= -128.196589511196  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260508
diis-c [-0.06786424  1.        ]
  HOMO = -0.807891312774008  LUMO = 2.59948290800712
  mo_energy =
[-3.27872871e+01 -1.92098589e+00 -8.07891313e-01 -8.07891313e-01
 -8.07891313e-01  2.59948291e+00  2.59948291e+00  2.59948291e+00
  2.71496290e+00  1.97102420e+01  1.97102420e+01  1.97102420e+01
  4.53232742e+01  3.35138179e+02  2.02598210e+03  7.31762415e+03]
E1 = -182.59475471000806  E_coul = 54.39653086508332
cycle= 2 E= -128.198223844925  delta_E= -0.00163  |g|= 0.0626  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101968
diis-c [-4.04065890e-04  2.77919887e-01  7.22080113e-01]
  HOMO = -0.785114571490243  LUMO = 2.62008322146038
  mo_energy =
[-3.27124920e+01 -1.89734952e+00 -7.85114571e-01 -7.85114571e-01
 -7.85114571e-01  2.62008322e+00  2.62008322e+00  2.62008322e+00
  2.73517619e+00  1.97663644e+01  1.97663644e+01  1.97663644e+01
  4.53895101e+01  3.35220009e+02  2.02606930e+03  7.31771284e+03]
E1 = -182.46240356855338  E_coul = 54.263874002540284
cycle= 3 E= -128.198529566013  delta_E= -0.000306  |g|= 0.000687  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000867389
diis-c [-7.65005333e-08 -3.89700849e-03 -1.93688000e-03  1.00583389e+00]
  HOMO = -0.78534209634651  LUMO = 2.61991182451174
  mo_energy =
[-3.27131418e+01 -1.89764699e+00 -7.85342096e-01 -7.85342096e-01
 -7.85342096e-01  2.61991182e+00  2.61991182e+00  2.61991182e+00
  2.73494215e+00  1.97658567e+01  1.97658567e+01  1.97658567e+01
  4.53888986e+01  3.35219520e+02  2.02606894e+03  7.31771252e+03]
E1 = -182.46365846757806  E_coul = 54.26512886901996
cycle= 4 E= -128.198529598558  delta_E= -3.25e-08  |g|= 5.09e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.0943e-05
diis-c [-2.11093530e-10  5.04768786e-04 -8.33477358e-04 -1.70139787e-01
  1.17046850e+00]
  HOMO = -0.785327593425755  LUMO = 2.61992436038519
  mo_energy =
[-3.27131044e+01 -1.89764447e+00 -7.85327593e-01 -7.85327593e-01
 -7.85327593e-01  2.61992436e+00  2.61992436e+00  2.61992436e+00
  2.73494352e+00  1.97658856e+01  1.97658856e+01  1.97658856e+01
  4.53889290e+01  3.35219571e+02  2.02606901e+03  7.31771259e+03]
E1 = -182.46359567848063  E_coul = 54.265066079625534
cycle= 5 E= -128.198529598855  delta_E= -2.97e-10  |g|= 1.53e-06  |ddm|= 2.59e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46359567848063  E_coul = 54.265066079625534
  HOMO = -0.785327534729784  LUMO = 2.61992442815006
  mo_energy =
[-3.27131044e+01 -1.89764479e+00 -7.85327535e-01 -7.85327535e-01
 -7.85327535e-01  2.61992443e+00  2.61992443e+00  2.61992443e+00
  2.73494324e+00  1.97658856e+01  1.97658856e+01  1.97658856e+01
  4.53889290e+01  3.35219571e+02  2.02606901e+03  7.31771259e+03]
E1 = -182.4635956671418  E_coul = 54.26506606828647
Extra cycle  E= -128.198529598855  delta_E= -2.27e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.14467902e+03 2.27524099e+02 1.42678445e+03 5.75733901e-01
 5.00486758e+01 1.32703389e+01 1.92922717e+00 2.77250621e+00
 1.32916207e+01 5.99902551e-01]
E = -128.19852959885532
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.67902209        1
[INPUT] 0    0    [1    /1   ]  227.524099336        1
[INPUT] 0    0    [1    /1   ]  1426.78445448        1
[INPUT] 0    0    [1    /1   ]  0.575733901114       1
[INPUT] 0    0    [1    /1   ]  50.0486757902        1
[INPUT] 0    0    [1    /1   ]  13.2703389173        1
[INPUT] 0    0    [1    /1   ]  1.92922716693        1
[INPUT] 1    0    [1    /1   ]  2.7725062132         1
[INPUT] 1    0    [1    /1   ]  13.2916207218        1
[INPUT] 1    0    [1    /1   ]  0.599902551058       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.6790220889898, 1.0]], [0, [227.524099335798, 1.0]], [0, [1426.7844544804043, 1.0]], [0, [0.5757339011137589, 1.0]], [0, [50.04867579016352, 1.0]], [0, [13.270338917281807, 1.0]], [0, [1.9292271669346337, 1.0]], [1, [2.7725062131987244, 1.0]], [1, [13.291620721833507, 1.0]], [1, [0.5999025510581623, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.67902209]
bas 1, expnt(s) = [227.52409934]
bas 2, expnt(s) = [1426.78445448]
bas 3, expnt(s) = [0.5757339]
bas 4, expnt(s) = [50.04867579]
bas 5, expnt(s) = [13.27033892]
bas 6, expnt(s) = [1.92922717]
bas 7, expnt(s) = [2.77250621]
bas 8, expnt(s) = [13.29162072]
bas 9, expnt(s) = [0.59990255]
CPU time:       135.82
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14467902e+03 7.96226728e+02 2.27524099e+02 1.48008132e+02
 1.42678445e+03 5.86521317e+02 5.75733901e-01 1.66986506e+00
 5.00486758e+01 4.75400318e+01 1.32703389e+01 1.75661479e+01
 1.92922717e+00 4.13573355e+00 2.77250621e+00 1.04369848e+01
 1.32916207e+01 7.40383647e+01 5.99902551e-01 1.54022894e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96573382823765
cond(S) = 159.9676695870328
E1 = -183.13694747602645  E_coul = 55.01142819723306
init E= -128.125519278793
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742882426444443  LUMO = 2.65355218871967
  mo_energy =
[-3.25137810e+01 -1.85363728e+00 -7.42882426e-01 -7.42882426e-01
 -7.42882426e-01  2.65355219e+00  2.65355219e+00  2.65355219e+00
  2.76906955e+00  1.99007643e+01  1.99007643e+01  1.99007643e+01
  4.55590362e+01  3.35448684e+02  2.02634093e+03  7.31800720e+03]
E1 = -182.13199417042193  E_coul = 53.935404659226194
cycle= 1 E= -128.196589511196  delta_E= -0.0711  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260508
diis-c [-0.06786424  1.        ]
  HOMO = -0.807891312774008  LUMO = 2.59948290800712
  mo_energy =
[-3.27872871e+01 -1.92098589e+00 -8.07891313e-01 -8.07891313e-01
 -8.07891313e-01  2.59948291e+00  2.59948291e+00  2.59948291e+00
  2.71496290e+00  1.97102420e+01  1.97102420e+01  1.97102420e+01
  4.53232742e+01  3.35138179e+02  2.02598210e+03  7.31762415e+03]
E1 = -182.59475471000806  E_coul = 54.39653086508332
cycle= 2 E= -128.198223844925  delta_E= -0.00163  |g|= 0.0626  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.101968
diis-c [-4.04065890e-04  2.77919887e-01  7.22080113e-01]
  HOMO = -0.785114571490243  LUMO = 2.62008322146038
  mo_energy =
[-3.27124920e+01 -1.89734952e+00 -7.85114571e-01 -7.85114571e-01
 -7.85114571e-01  2.62008322e+00  2.62008322e+00  2.62008322e+00
  2.73517619e+00  1.97663644e+01  1.97663644e+01  1.97663644e+01
  4.53895101e+01  3.35220009e+02  2.02606930e+03  7.31771284e+03]
E1 = -182.46240356855338  E_coul = 54.263874002540284
cycle= 3 E= -128.198529566013  delta_E= -0.000306  |g|= 0.000687  |ddm|= 0.0182
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000867389
diis-c [-7.65005333e-08 -3.89700849e-03 -1.93688000e-03  1.00583389e+00]
  HOMO = -0.78534209634651  LUMO = 2.61991182451174
  mo_energy =
[-3.27131418e+01 -1.89764699e+00 -7.85342096e-01 -7.85342096e-01
 -7.85342096e-01  2.61991182e+00  2.61991182e+00  2.61991182e+00
  2.73494215e+00  1.97658567e+01  1.97658567e+01  1.97658567e+01
  4.53888986e+01  3.35219520e+02  2.02606894e+03  7.31771252e+03]
E1 = -182.46365846757806  E_coul = 54.26512886901996
cycle= 4 E= -128.198529598558  delta_E= -3.25e-08  |g|= 5.09e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.0943e-05
diis-c [-2.11093530e-10  5.04768786e-04 -8.33477358e-04 -1.70139787e-01
  1.17046850e+00]
  HOMO = -0.785327593425755  LUMO = 2.61992436038519
  mo_energy =
[-3.27131044e+01 -1.89764447e+00 -7.85327593e-01 -7.85327593e-01
 -7.85327593e-01  2.61992436e+00  2.61992436e+00  2.61992436e+00
  2.73494352e+00  1.97658856e+01  1.97658856e+01  1.97658856e+01
  4.53889290e+01  3.35219571e+02  2.02606901e+03  7.31771259e+03]
E1 = -182.46359567848063  E_coul = 54.265066079625534
cycle= 5 E= -128.198529598855  delta_E= -2.97e-10  |g|= 1.53e-06  |ddm|= 2.59e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.46359567848063  E_coul = 54.265066079625534
  HOMO = -0.785327534729784  LUMO = 2.61992442815006
  mo_energy =
[-3.27131044e+01 -1.89764479e+00 -7.85327535e-01 -7.85327535e-01
 -7.85327535e-01  2.61992443e+00  2.61992443e+00  2.61992443e+00
  2.73494324e+00  1.97658856e+01  1.97658856e+01  1.97658856e+01
  4.53889290e+01  3.35219571e+02  2.02606901e+03  7.31771259e+03]
E1 = -182.4635956671418  E_coul = 54.26506606828647
Extra cycle  E= -128.198529598855  delta_E= -2.27e-13  |g|= 2.81e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 159.9676695870328
E1 = -182.4635956671418  E_coul = 54.26506606828647
init E= -128.198529598855
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785327520431736  LUMO = 2.61992443950776
  mo_energy =
[-3.27131044e+01 -1.89764485e+00 -7.85327520e-01 -7.85327520e-01
 -7.85327520e-01  2.61992444e+00  2.61992444e+00  2.61992444e+00
  2.73494319e+00  1.97658856e+01  1.97658856e+01  1.97658856e+01
  4.53889290e+01  3.35219571e+02  2.02606901e+03  7.31771259e+03]
E1 = -182.46359567856138  E_coul = 54.26506607970614
cycle= 1 E= -128.198529598855  delta_E= 8.53e-14  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46359567856138  E_coul = 54.26506607970614
  HOMO = -0.785327516780752  LUMO = 2.61992444254252
  mo_energy =
[-3.27131044e+01 -1.89764486e+00 -7.85327517e-01 -7.85327517e-01
 -7.85327517e-01  2.61992444e+00  2.61992444e+00  2.61992444e+00
  2.73494318e+00  1.97658856e+01  1.97658856e+01  1.97658856e+01
  4.53889290e+01  3.35219571e+02  2.02606901e+03  7.31771259e+03]
E1 = -182.46359567593566  E_coul = 54.265066077080476
Extra cycle  E= -128.198529598855  delta_E= 2.84e-14  |g|= 9.34e-09  |ddm|= 2.87e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14467902e+03 2.27524099e+02 1.42678445e+03 5.75733901e-01
 5.00486758e+01 1.32703389e+01 1.92922717e+00 2.77250621e+00
 1.32916207e+01 5.99902551e-01]
grad_E = [-9.97080930e-06  1.16107292e-05  3.36465965e-05  2.14762096e-05
 -1.99058642e-05 -2.05780858e-06 -5.26623362e-05  1.53985115e-04
 -1.88963395e-04  1.07130708e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:36 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.78221114        1
[INPUT] 0    0    [1    /1   ]  227.542023882        1
[INPUT] 0    0    [1    /1   ]  1426.42725055        1
[INPUT] 0    0    [1    /1   ]  0.575512377412       1
[INPUT] 0    0    [1    /1   ]  50.0420217798        1
[INPUT] 0    0    [1    /1   ]  13.2681794275        1
[INPUT] 0    0    [1    /1   ]  1.92823953672        1
[INPUT] 1    0    [1    /1   ]  2.76900055801        1
[INPUT] 1    0    [1    /1   ]  13.264886692         1
[INPUT] 1    0    [1    /1   ]  0.599412289954       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.782211136584, 1.0]], [0, [227.54202388173138, 1.0]], [0, [1426.4272505477536, 1.0]], [0, [0.5755123774117172, 1.0]], [0, [50.042021779822676, 1.0]], [0, [13.268179427483, 1.0]], [0, [1.9282395367216916, 1.0]], [1, [2.7690005580101738, 1.0]], [1, [13.26488669195324, 1.0]], [1, [0.5994122899541403, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.78221114]
bas 1, expnt(s) = [227.54202388]
bas 2, expnt(s) = [1426.42725055]
bas 3, expnt(s) = [0.57551238]
bas 4, expnt(s) = [50.04202178]
bas 5, expnt(s) = [13.26817943]
bas 6, expnt(s) = [1.92823954]
bas 7, expnt(s) = [2.76900056]
bas 8, expnt(s) = [13.26488669]
bas 9, expnt(s) = [0.59941229]
CPU time:       138.32
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14478221e+03 7.96255460e+02 2.27542024e+02 1.48016877e+02
 1.42642725e+03 5.86411184e+02 5.75512377e-01 1.66938315e+00
 5.00420218e+01 4.75352913e+01 1.32681794e+01 1.75640040e+01
 1.92823954e+00 4.13414554e+00 2.76900056e+00 1.04204913e+01
 1.32648867e+01 7.38522657e+01 5.99412290e-01 1.53865569e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96584094775466
cond(S) = 159.76261048203108
E1 = -183.1369392725237  E_coul = 55.01134633881987
init E= -128.125592933704
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742872325756939  LUMO = 2.65038524873228
  mo_energy =
[-3.25138623e+01 -1.85363916e+00 -7.42872326e-01 -7.42872326e-01
 -7.42872326e-01  2.65038525e+00  2.65038525e+00  2.65038525e+00
  2.76702402e+00  1.98603987e+01  1.98603987e+01  1.98603987e+01
  4.55449894e+01  3.35430461e+02  2.02617550e+03  7.31741596e+03]
E1 = -182.12921328985567  E_coul = 53.93262567045733
cycle= 1 E= -128.196587619398  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260995
diis-c [-0.06811855  1.        ]
  HOMO = -0.808086174814606  LUMO = 2.59619370525393
  mo_energy =
[-3.27878611e+01 -1.92122203e+00 -8.08086175e-01 -8.08086175e-01
 -8.08086175e-01  2.59619371e+00  2.59619371e+00  2.59619371e+00
  2.71274522e+00  1.96696373e+01  1.96696373e+01  1.96696373e+01
  4.53087870e+01  3.35119457e+02  2.02581616e+03  7.31703240e+03]
E1 = -182.5931663697763  E_coul = 54.3949375492106
cycle= 2 E= -128.198228820566  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102242
diis-c [-4.04431163e-04  2.78099366e-01  7.21900634e-01]
  HOMO = -0.785254144371723  LUMO = 2.61682197248704
  mo_energy =
[-3.27129021e+01 -1.89752755e+00 -7.85254144e-01 -7.85254144e-01
 -7.85254144e-01  2.61682197e+00  2.61682197e+00  2.61682197e+00
  2.73299729e+00  1.97258462e+01  1.97258462e+01  1.97258462e+01
  4.53751675e+01  3.35201461e+02  2.02590354e+03  7.31712127e+03]
E1 = -182.4604416872942  E_coul = 54.261905490450246
cycle= 3 E= -128.198536196844  delta_E= -0.000307  |g|= 0.000684  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000859871
diis-c [-7.80128696e-08 -3.90776812e-03 -2.07146378e-03  1.00597923e+00]
  HOMO = -0.785479633186137  LUMO = 2.61665273199987
  mo_energy =
[-3.27135460e+01 -1.89782369e+00 -7.85479633e-01 -7.85479633e-01
 -7.85479633e-01  2.61665273e+00  2.61665273e+00  2.61665273e+00
  2.73276459e+00  1.97253435e+01  1.97253435e+01  1.97253435e+01
  4.53745611e+01  3.35200978e+02  2.02590319e+03  7.31712096e+03]
E1 = -182.46168656843486  E_coul = 54.26315033931036
cycle= 4 E= -128.198536229124  delta_E= -3.23e-08  |g|= 5.15e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17532e-05
diis-c [-2.13140791e-10  5.06597476e-04 -8.20199197e-04 -1.70737487e-01
  1.17105109e+00]
  HOMO = -0.78546500198552  LUMO = 2.61666536169874
  mo_energy =
[-3.27135083e+01 -1.89782120e+00 -7.85465002e-01 -7.85465002e-01
 -7.85465002e-01  2.61666536e+00  2.61666536e+00  2.61666536e+00
  2.73276592e+00  1.97253726e+01  1.97253726e+01  1.97253726e+01
  4.53745918e+01  3.35201030e+02  2.02590326e+03  7.31712104e+03]
E1 = -182.4616232368819  E_coul = 54.26308700745345
cycle= 5 E= -128.198536229428  delta_E= -3.04e-10  |g|= 1.53e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4616232368819  E_coul = 54.26308700745345
  HOMO = -0.785464943303726  LUMO = 2.6166654296992
  mo_energy =
[-3.27135083e+01 -1.89782152e+00 -7.85464943e-01 -7.85464943e-01
 -7.85464943e-01  2.61666543e+00  2.61666543e+00  2.61666543e+00
  2.73276565e+00  1.97253726e+01  1.97253726e+01  1.97253726e+01
  4.53745918e+01  3.35201030e+02  2.02590326e+03  7.31712104e+03]
E1 = -182.46162322299503  E_coul = 54.263086993566326
Extra cycle  E= -128.198536229429  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14478221e+03 2.27542024e+02 1.42642725e+03 5.75512377e-01
 5.00420218e+01 1.32681794e+01 1.92823954e+00 2.76900056e+00
 1.32648867e+01 5.99412290e-01]
E = -128.1985362294287
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2144.78221114        1
[INPUT] 0    0    [1    /1   ]  227.542023882        1
[INPUT] 0    0    [1    /1   ]  1426.42725055        1
[INPUT] 0    0    [1    /1   ]  0.575512377412       1
[INPUT] 0    0    [1    /1   ]  50.0420217798        1
[INPUT] 0    0    [1    /1   ]  13.2681794275        1
[INPUT] 0    0    [1    /1   ]  1.92823953672        1
[INPUT] 1    0    [1    /1   ]  2.76900055801        1
[INPUT] 1    0    [1    /1   ]  13.264886692         1
[INPUT] 1    0    [1    /1   ]  0.599412289954       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2144.782211136584, 1.0]], [0, [227.54202388173138, 1.0]], [0, [1426.4272505477536, 1.0]], [0, [0.5755123774117172, 1.0]], [0, [50.042021779822676, 1.0]], [0, [13.268179427483, 1.0]], [0, [1.9282395367216916, 1.0]], [1, [2.7690005580101738, 1.0]], [1, [13.26488669195324, 1.0]], [1, [0.5994122899541403, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2144.78221114]
bas 1, expnt(s) = [227.54202388]
bas 2, expnt(s) = [1426.42725055]
bas 3, expnt(s) = [0.57551238]
bas 4, expnt(s) = [50.04202178]
bas 5, expnt(s) = [13.26817943]
bas 6, expnt(s) = [1.92823954]
bas 7, expnt(s) = [2.76900056]
bas 8, expnt(s) = [13.26488669]
bas 9, expnt(s) = [0.59941229]
CPU time:       139.09
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14478221e+03 7.96255460e+02 2.27542024e+02 1.48016877e+02
 1.42642725e+03 5.86411184e+02 5.75512377e-01 1.66938315e+00
 5.00420218e+01 4.75352913e+01 1.32681794e+01 1.75640040e+01
 1.92823954e+00 4.13414554e+00 2.76900056e+00 1.04204913e+01
 1.32648867e+01 7.38522657e+01 5.99412290e-01 1.53865569e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96584094775466
cond(S) = 159.76261048203108
E1 = -183.1369392725237  E_coul = 55.01134633881987
init E= -128.125592933704
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742872325756939  LUMO = 2.65038524873228
  mo_energy =
[-3.25138623e+01 -1.85363916e+00 -7.42872326e-01 -7.42872326e-01
 -7.42872326e-01  2.65038525e+00  2.65038525e+00  2.65038525e+00
  2.76702402e+00  1.98603987e+01  1.98603987e+01  1.98603987e+01
  4.55449894e+01  3.35430461e+02  2.02617550e+03  7.31741596e+03]
E1 = -182.12921328985567  E_coul = 53.93262567045733
cycle= 1 E= -128.196587619398  delta_E= -0.071  |g|= 0.165  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.260995
diis-c [-0.06811855  1.        ]
  HOMO = -0.808086174814606  LUMO = 2.59619370525393
  mo_energy =
[-3.27878611e+01 -1.92122203e+00 -8.08086175e-01 -8.08086175e-01
 -8.08086175e-01  2.59619371e+00  2.59619371e+00  2.59619371e+00
  2.71274522e+00  1.96696373e+01  1.96696373e+01  1.96696373e+01
  4.53087870e+01  3.35119457e+02  2.02581616e+03  7.31703240e+03]
E1 = -182.5931663697763  E_coul = 54.3949375492106
cycle= 2 E= -128.198228820566  delta_E= -0.00164  |g|= 0.0627  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102242
diis-c [-4.04431163e-04  2.78099366e-01  7.21900634e-01]
  HOMO = -0.785254144371723  LUMO = 2.61682197248704
  mo_energy =
[-3.27129021e+01 -1.89752755e+00 -7.85254144e-01 -7.85254144e-01
 -7.85254144e-01  2.61682197e+00  2.61682197e+00  2.61682197e+00
  2.73299729e+00  1.97258462e+01  1.97258462e+01  1.97258462e+01
  4.53751675e+01  3.35201461e+02  2.02590354e+03  7.31712127e+03]
E1 = -182.4604416872942  E_coul = 54.261905490450246
cycle= 3 E= -128.198536196844  delta_E= -0.000307  |g|= 0.000684  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000859871
diis-c [-7.80128696e-08 -3.90776812e-03 -2.07146378e-03  1.00597923e+00]
  HOMO = -0.785479633186137  LUMO = 2.61665273199987
  mo_energy =
[-3.27135460e+01 -1.89782369e+00 -7.85479633e-01 -7.85479633e-01
 -7.85479633e-01  2.61665273e+00  2.61665273e+00  2.61665273e+00
  2.73276459e+00  1.97253435e+01  1.97253435e+01  1.97253435e+01
  4.53745611e+01  3.35200978e+02  2.02590319e+03  7.31712096e+03]
E1 = -182.46168656843486  E_coul = 54.26315033931036
cycle= 4 E= -128.198536229124  delta_E= -3.23e-08  |g|= 5.15e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.17532e-05
diis-c [-2.13140791e-10  5.06597476e-04 -8.20199197e-04 -1.70737487e-01
  1.17105109e+00]
  HOMO = -0.78546500198552  LUMO = 2.61666536169874
  mo_energy =
[-3.27135083e+01 -1.89782120e+00 -7.85465002e-01 -7.85465002e-01
 -7.85465002e-01  2.61666536e+00  2.61666536e+00  2.61666536e+00
  2.73276592e+00  1.97253726e+01  1.97253726e+01  1.97253726e+01
  4.53745918e+01  3.35201030e+02  2.02590326e+03  7.31712104e+03]
E1 = -182.4616232368819  E_coul = 54.26308700745345
cycle= 5 E= -128.198536229428  delta_E= -3.04e-10  |g|= 1.53e-06  |ddm|= 2.62e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4616232368819  E_coul = 54.26308700745345
  HOMO = -0.785464943303726  LUMO = 2.6166654296992
  mo_energy =
[-3.27135083e+01 -1.89782152e+00 -7.85464943e-01 -7.85464943e-01
 -7.85464943e-01  2.61666543e+00  2.61666543e+00  2.61666543e+00
  2.73276565e+00  1.97253726e+01  1.97253726e+01  1.97253726e+01
  4.53745918e+01  3.35201030e+02  2.02590326e+03  7.31712104e+03]
E1 = -182.46162322299503  E_coul = 54.263086993566326
Extra cycle  E= -128.198536229429  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 159.76261048203108
E1 = -182.46162322299503  E_coul = 54.263086993566326
init E= -128.198536229429
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785464929199008  LUMO = 2.61666544086317
  mo_energy =
[-3.27135083e+01 -1.89782158e+00 -7.85464929e-01 -7.85464929e-01
 -7.85464929e-01  2.61666544e+00  2.61666544e+00  2.61666544e+00
  2.73276559e+00  1.97253726e+01  1.97253726e+01  1.97253726e+01
  4.53745917e+01  3.35201030e+02  2.02590326e+03  7.31712104e+03]
E1 = -182.46162323526522  E_coul = 54.26308700583655
cycle= 1 E= -128.198536229429  delta_E= 2.84e-14  |g|= 5.12e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.46162323526522  E_coul = 54.26308700583655
  HOMO = -0.785464925491182  LUMO = 2.61666544394478
  mo_energy =
[-3.27135082e+01 -1.89782159e+00 -7.85464925e-01 -7.85464925e-01
 -7.85464925e-01  2.61666544e+00  2.61666544e+00  2.61666544e+00
  2.73276559e+00  1.97253726e+01  1.97253726e+01  1.97253726e+01
  4.53745917e+01  3.35201030e+02  2.02590326e+03  7.31712104e+03]
E1 = -182.4616232322786  E_coul = 54.263087002850064
Extra cycle  E= -128.198536229429  delta_E= 1.14e-13  |g|= 9.34e-09  |ddm|= 2.86e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14478221e+03 2.27542024e+02 1.42642725e+03 5.75512377e-01
 5.00420218e+01 1.32681794e+01 1.92823954e+00 2.76900056e+00
 1.32648867e+01 5.99412290e-01]
grad_E = [-9.99276245e-06  1.44734393e-05  3.36145670e-05  3.45382933e-05
 -3.33320520e-05 -3.37124117e-06 -8.58092590e-05  2.50885349e-04
 -3.13360415e-04  1.75706409e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2145.05431522        1
[INPUT] 0    0    [1    /1   ]  227.555001873        1
[INPUT] 0    0    [1    /1   ]  1425.48804909        1
[INPUT] 0    0    [1    /1   ]  0.575140938184       1
[INPUT] 0    0    [1    /1   ]  50.029158607         1
[INPUT] 0    0    [1    /1   ]  13.2643613539        1
[INPUT] 0    0    [1    /1   ]  1.92659635649        1
[INPUT] 1    0    [1    /1   ]  2.7633207776         1
[INPUT] 1    0    [1    /1   ]  13.2216593408        1
[INPUT] 1    0    [1    /1   ]  0.598617521871       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2145.0543152205273, 1.0]], [0, [227.55500187253656, 1.0]], [0, [1425.4880490926091, 1.0]], [0, [0.5751409381838393, 1.0]], [0, [50.02915860696955, 1.0]], [0, [13.264361353925969, 1.0]], [0, [1.9265963564903021, 1.0]], [1, [2.763320777596275, 1.0]], [1, [13.221659340800032, 1.0]], [1, [0.5986175218705722, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2145.05431522]
bas 1, expnt(s) = [227.55500187]
bas 2, expnt(s) = [1425.48804909]
bas 3, expnt(s) = [0.57514094]
bas 4, expnt(s) = [50.02915861]
bas 5, expnt(s) = [13.26436135]
bas 6, expnt(s) = [1.92659636]
bas 7, expnt(s) = [2.76332078]
bas 8, expnt(s) = [13.22165934]
bas 9, expnt(s) = [0.59861752]
CPU time:       141.57
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14505432e+03 7.96331223e+02 2.27555002e+02 1.48023209e+02
 1.42548805e+03 5.86121577e+02 5.75140938e-01 1.66857501e+00
 5.00291586e+01 4.75261269e+01 1.32643614e+01 1.75602131e+01
 1.92659636e+00 4.13150303e+00 2.76332078e+00 1.03937800e+01
 1.32216593e+01 7.35515529e+01 5.98617522e-01 1.53610596e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96601434053918
cond(S) = 159.22286076173967
E1 = -183.1369296537995  E_coul = 55.011208055434885
init E= -128.125721598365
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742855132477326  LUMO = 2.64525574645929
  mo_energy =
[-3.25140016e+01 -1.85364327e+00 -7.42855132e-01 -7.42855132e-01
 -7.42855132e-01  2.64525575e+00  2.64525575e+00  2.64525575e+00
  2.76360564e+00  1.97951398e+01  1.97951398e+01  1.97951398e+01
  4.55201097e+01  3.35378099e+02  2.02566388e+03  7.31576551e+03]
E1 = -182.1246938160415  E_coul = 53.92810266507819
cycle= 1 E= -128.196591150963  delta_E= -0.0709  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261788
diis-c [-0.06853295  1.        ]
  HOMO = -0.808402050352297  LUMO = 2.59086594564732
  mo_energy =
[-3.27888022e+01 -1.92160662e+00 -8.08402050e-01 -8.08402050e-01
 -8.08402050e-01  2.59086595e+00  2.59086595e+00  2.59086595e+00
  2.70904956e+00  1.96039900e+01  1.96039900e+01  1.96039900e+01
  4.52831936e+01  3.35066285e+02  2.02530372e+03  7.31538113e+03]
E1 = -182.59058769372086  E_coul = 54.392344139637046
cycle= 2 E= -128.198243554084  delta_E= -0.00165  |g|= 0.063  |ddm|= 0.0648
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102688
diis-c [-4.04968220e-04  2.78390911e-01  7.21609089e-01]
  HOMO = -0.785480064491962  LUMO = 2.61153959953881
  mo_energy =
[-3.27135767e+01 -1.89781758e+00 -7.85480064e-01 -7.85480064e-01
 -7.85480064e-01  2.61153960e+00  2.61153960e+00  2.61153960e+00
  2.72936408e+00  1.96603393e+01  1.96603393e+01  1.96603393e+01
  4.53498086e+01  3.35148570e+02  2.02539140e+03  7.31547031e+03]
E1 = -182.45725520348114  E_coul = 54.258701570111775
cycle= 3 E= -128.198553633369  delta_E= -0.00031  |g|= 0.000679  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000847602
diis-c [-8.05019006e-08 -3.92567252e-03 -2.29183682e-03  1.00621751e+00]
  HOMO = -0.785702203148451  LUMO = 2.61137389295343
  mo_energy =
[-3.27142109e+01 -1.89811153e+00 -7.85702203e-01 -7.85702203e-01
 -7.85702203e-01  2.61137389e+00  2.61137389e+00  2.61137389e+00
  2.72913362e+00  1.96598447e+01  1.96598447e+01  1.96598447e+01
  4.53492108e+01  3.35148099e+02  2.02539106e+03  7.31547001e+03]
E1 = -182.458483542781  E_coul = 54.259929877557255
cycle= 4 E= -128.198553665224  delta_E= -3.19e-08  |g|= 5.24e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.30675e-05
diis-c [-2.16501789e-10  5.09504838e-04 -7.98052795e-04 -1.71676676e-01
  1.17196522e+00]
  HOMO = -0.78568736391732  LUMO = 2.6113866740924
  mo_energy =
[-3.27141727e+01 -1.89810910e+00 -7.85687364e-01 -7.85687364e-01
 -7.85687364e-01  2.61138667e+00  2.61138667e+00  2.61138667e+00
  2.72913489e+00  1.96598741e+01  1.96598741e+01  1.96598741e+01
  4.53492418e+01  3.35148152e+02  2.02539113e+03  7.31547008e+03]
E1 = -182.45841933182976  E_coul = 54.259865666290835
cycle= 5 E= -128.198553665539  delta_E= -3.15e-10  |g|= 1.53e-06  |ddm|= 2.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45841933182976  E_coul = 54.259865666290835
  HOMO = -0.785687305129046  LUMO = 2.61138674260113
  mo_energy =
[-3.27141727e+01 -1.89810942e+00 -7.85687305e-01 -7.85687305e-01
 -7.85687305e-01  2.61138674e+00  2.61138674e+00  2.61138674e+00
  2.72913462e+00  1.96598742e+01  1.96598742e+01  1.96598742e+01
  4.53492418e+01  3.35148152e+02  2.02539113e+03  7.31547008e+03]
E1 = -182.458419313139  E_coul = 54.259865647599774
Extra cycle  E= -128.198553665539  delta_E= -2.84e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14505432e+03 2.27555002e+02 1.42548805e+03 5.75140938e-01
 5.00291586e+01 1.32643614e+01 1.92659636e+00 2.76332078e+00
 1.32216593e+01 5.98617522e-01]
E = -128.1985536655392
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:40 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2145.05431522        1
[INPUT] 0    0    [1    /1   ]  227.555001873        1
[INPUT] 0    0    [1    /1   ]  1425.48804909        1
[INPUT] 0    0    [1    /1   ]  0.575140938184       1
[INPUT] 0    0    [1    /1   ]  50.029158607         1
[INPUT] 0    0    [1    /1   ]  13.2643613539        1
[INPUT] 0    0    [1    /1   ]  1.92659635649        1
[INPUT] 1    0    [1    /1   ]  2.7633207776         1
[INPUT] 1    0    [1    /1   ]  13.2216593408        1
[INPUT] 1    0    [1    /1   ]  0.598617521871       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2145.0543152205273, 1.0]], [0, [227.55500187253656, 1.0]], [0, [1425.4880490926091, 1.0]], [0, [0.5751409381838393, 1.0]], [0, [50.02915860696955, 1.0]], [0, [13.264361353925969, 1.0]], [0, [1.9265963564903021, 1.0]], [1, [2.763320777596275, 1.0]], [1, [13.221659340800032, 1.0]], [1, [0.5986175218705722, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2145.05431522]
bas 1, expnt(s) = [227.55500187]
bas 2, expnt(s) = [1425.48804909]
bas 3, expnt(s) = [0.57514094]
bas 4, expnt(s) = [50.02915861]
bas 5, expnt(s) = [13.26436135]
bas 6, expnt(s) = [1.92659636]
bas 7, expnt(s) = [2.76332078]
bas 8, expnt(s) = [13.22165934]
bas 9, expnt(s) = [0.59861752]
CPU time:       142.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14505432e+03 7.96331223e+02 2.27555002e+02 1.48023209e+02
 1.42548805e+03 5.86121577e+02 5.75140938e-01 1.66857501e+00
 5.00291586e+01 4.75261269e+01 1.32643614e+01 1.75602131e+01
 1.92659636e+00 4.13150303e+00 2.76332078e+00 1.03937800e+01
 1.32216593e+01 7.35515529e+01 5.98617522e-01 1.53610596e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96601434053918
cond(S) = 159.22286076173967
E1 = -183.1369296537995  E_coul = 55.011208055434885
init E= -128.125721598365
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742855132477326  LUMO = 2.64525574645929
  mo_energy =
[-3.25140016e+01 -1.85364327e+00 -7.42855132e-01 -7.42855132e-01
 -7.42855132e-01  2.64525575e+00  2.64525575e+00  2.64525575e+00
  2.76360564e+00  1.97951398e+01  1.97951398e+01  1.97951398e+01
  4.55201097e+01  3.35378099e+02  2.02566388e+03  7.31576551e+03]
E1 = -182.1246938160415  E_coul = 53.92810266507819
cycle= 1 E= -128.196591150963  delta_E= -0.0709  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.261788
diis-c [-0.06853295  1.        ]
  HOMO = -0.808402050352297  LUMO = 2.59086594564732
  mo_energy =
[-3.27888022e+01 -1.92160662e+00 -8.08402050e-01 -8.08402050e-01
 -8.08402050e-01  2.59086595e+00  2.59086595e+00  2.59086595e+00
  2.70904956e+00  1.96039900e+01  1.96039900e+01  1.96039900e+01
  4.52831936e+01  3.35066285e+02  2.02530372e+03  7.31538113e+03]
E1 = -182.59058769372086  E_coul = 54.392344139637046
cycle= 2 E= -128.198243554084  delta_E= -0.00165  |g|= 0.063  |ddm|= 0.0648
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102688
diis-c [-4.04968220e-04  2.78390911e-01  7.21609089e-01]
  HOMO = -0.785480064491962  LUMO = 2.61153959953881
  mo_energy =
[-3.27135767e+01 -1.89781758e+00 -7.85480064e-01 -7.85480064e-01
 -7.85480064e-01  2.61153960e+00  2.61153960e+00  2.61153960e+00
  2.72936408e+00  1.96603393e+01  1.96603393e+01  1.96603393e+01
  4.53498086e+01  3.35148570e+02  2.02539140e+03  7.31547031e+03]
E1 = -182.45725520348114  E_coul = 54.258701570111775
cycle= 3 E= -128.198553633369  delta_E= -0.00031  |g|= 0.000679  |ddm|= 0.0184
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000847602
diis-c [-8.05019006e-08 -3.92567252e-03 -2.29183682e-03  1.00621751e+00]
  HOMO = -0.785702203148451  LUMO = 2.61137389295343
  mo_energy =
[-3.27142109e+01 -1.89811153e+00 -7.85702203e-01 -7.85702203e-01
 -7.85702203e-01  2.61137389e+00  2.61137389e+00  2.61137389e+00
  2.72913362e+00  1.96598447e+01  1.96598447e+01  1.96598447e+01
  4.53492108e+01  3.35148099e+02  2.02539106e+03  7.31547001e+03]
E1 = -182.458483542781  E_coul = 54.259929877557255
cycle= 4 E= -128.198553665224  delta_E= -3.19e-08  |g|= 5.24e-05  |ddm|= 0.000259
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.30675e-05
diis-c [-2.16501789e-10  5.09504838e-04 -7.98052795e-04 -1.71676676e-01
  1.17196522e+00]
  HOMO = -0.78568736391732  LUMO = 2.6113866740924
  mo_energy =
[-3.27141727e+01 -1.89810910e+00 -7.85687364e-01 -7.85687364e-01
 -7.85687364e-01  2.61138667e+00  2.61138667e+00  2.61138667e+00
  2.72913489e+00  1.96598741e+01  1.96598741e+01  1.96598741e+01
  4.53492418e+01  3.35148152e+02  2.02539113e+03  7.31547008e+03]
E1 = -182.45841933182976  E_coul = 54.259865666290835
cycle= 5 E= -128.198553665539  delta_E= -3.15e-10  |g|= 1.53e-06  |ddm|= 2.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45841933182976  E_coul = 54.259865666290835
  HOMO = -0.785687305129046  LUMO = 2.61138674260113
  mo_energy =
[-3.27141727e+01 -1.89810942e+00 -7.85687305e-01 -7.85687305e-01
 -7.85687305e-01  2.61138674e+00  2.61138674e+00  2.61138674e+00
  2.72913462e+00  1.96598742e+01  1.96598742e+01  1.96598742e+01
  4.53492418e+01  3.35148152e+02  2.02539113e+03  7.31547008e+03]
E1 = -182.458419313139  E_coul = 54.259865647599774
Extra cycle  E= -128.198553665539  delta_E= -2.84e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 159.22286076173967
E1 = -182.458419313139  E_coul = 54.259865647599774
init E= -128.198553665539
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.785687291382059  LUMO = 2.61138675341169
  mo_energy =
[-3.27141727e+01 -1.89810947e+00 -7.85687291e-01 -7.85687291e-01
 -7.85687291e-01  2.61138675e+00  2.61138675e+00  2.61138675e+00
  2.72913457e+00  1.96598742e+01  1.96598742e+01  1.96598742e+01
  4.53492418e+01  3.35148152e+02  2.02539113e+03  7.31547008e+03]
E1 = -182.45841932706537  E_coul = 54.259865661525986
cycle= 1 E= -128.198553665539  delta_E= -1.71e-13  |g|= 5.11e-08  |ddm|= 1.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45841932706537  E_coul = 54.259865661525986
  HOMO = -0.785687287562847  LUMO = 2.61138675658636
  mo_energy =
[-3.27141727e+01 -1.89810948e+00 -7.85687288e-01 -7.85687288e-01
 -7.85687288e-01  2.61138676e+00  2.61138676e+00  2.61138676e+00
  2.72913456e+00  1.96598742e+01  1.96598742e+01  1.96598742e+01
  4.53492418e+01  3.35148152e+02  2.02539113e+03  7.31547008e+03]
E1 = -182.45841932338425  E_coul = 54.25986565784473
Extra cycle  E= -128.19855366554  delta_E= -1.42e-13  |g|= 9.36e-09  |ddm|= 2.86e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14505432e+03 2.27555002e+02 1.42548805e+03 5.75140938e-01
 5.00291586e+01 1.32643614e+01 1.92659636e+00 2.76332078e+00
 1.32216593e+01 5.98617522e-01]
grad_E = [-1.00418757e-05  1.91588582e-05  3.35835489e-05  5.59555904e-05
 -5.52829469e-05 -5.50349033e-06 -1.40024123e-04  4.09218134e-04
 -5.16663217e-04  2.87837782e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2145.77277111        1
[INPUT] 0    0    [1    /1   ]  227.533676494        1
[INPUT] 0    0    [1    /1   ]  1423.01262917        1
[INPUT] 0    0    [1    /1   ]  0.574504377296       1
[INPUT] 0    0    [1    /1   ]  50.0027595644        1
[INPUT] 0    0    [1    /1   ]  13.2573142066        1
[INPUT] 0    0    [1    /1   ]  1.92381338343        1
[INPUT] 1    0    [1    /1   ]  2.75409017903        1
[INPUT] 1    0    [1    /1   ]  13.1516343619        1
[INPUT] 1    0    [1    /1   ]  0.597324685797       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2145.772771114125, 1.0]], [0, [227.53367649420005, 1.0]], [0, [1423.0126291729068, 1.0]], [0, [0.5745043772959068, 1.0]], [0, [50.00275956438881, 1.0]], [0, [13.257314206587402, 1.0]], [0, [1.9238133834278468, 1.0]], [1, [2.7540901790315346, 1.0]], [1, [13.151634361914692, 1.0]], [1, [0.5973246857971329, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2145.77277111]
bas 1, expnt(s) = [227.53367649]
bas 2, expnt(s) = [1423.01262917]
bas 3, expnt(s) = [0.57450438]
bas 4, expnt(s) = [50.00275956]
bas 5, expnt(s) = [13.25731421]
bas 6, expnt(s) = [1.92381338]
bas 7, expnt(s) = [2.75409018]
bas 8, expnt(s) = [13.15163436]
bas 9, expnt(s) = [0.59732469]
CPU time:       144.80
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14577277e+03 7.96531255e+02 2.27533676e+02 1.48012804e+02
 1.42301263e+03 5.85358043e+02 5.74504377e-01 1.66718975e+00
 5.00027596e+01 4.75073170e+01 1.32573142e+01 1.75532156e+01
 1.92381338e+00 4.12702624e+00 2.75409018e+00 1.03503989e+01
 1.31516344e+01 7.30649431e+01 5.97324686e-01 1.53196016e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966295696075562
cond(S) = 157.80981246244454
E1 = -183.13692347743776  E_coul = 55.01096822477925
init E= -128.125955252659
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742824997438133  LUMO = 2.6369234210342
  mo_energy =
[-3.25142485e+01 -1.85365276e+00 -7.42824997e-01 -7.42824997e-01
 -7.42824997e-01  2.63692342e+00  2.63692342e+00  2.63692342e+00
  2.75777747e+00  1.96894522e+01  1.96894522e+01  1.96894522e+01
  4.54740867e+01  3.35232711e+02  2.02418904e+03  7.31125679e+03]
E1 = -182.11731206281888  E_coul = 53.920697735485525
cycle= 1 E= -128.196614327333  delta_E= -0.0707  |g|= 0.167  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.263083
diis-c [-0.06921272  1.        ]
  HOMO = -0.808915816152764  LUMO = 2.58221099788942
  mo_energy =
[-3.27903611e+01 -1.92223689e+00 -8.08915816e-01 -8.08915816e-01
 -8.08915816e-01  2.58221100e+00  2.58221100e+00  2.58221100e+00
  2.70277513e+00  1.94976677e+01  1.94976677e+01  1.94976677e+01
  4.52360108e+01  3.34919576e+02  2.02382755e+03  7.31087107e+03]
E1 = -182.5863829552773  E_coul = 54.388097819358954
cycle= 2 E= -128.198285135918  delta_E= -0.00167  |g|= 0.0634  |ddm|= 0.0652
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103418
diis-c [-4.05695198e-04  2.78866641e-01  7.21133359e-01]
  HOMO = -0.785846640842825  LUMO = 2.60295866370966
  mo_energy =
[-3.27147000e+01 -1.89829317e+00 -7.85846641e-01 -7.85846641e-01
 -7.85846641e-01  2.60295866e+00  2.60295866e+00  2.60295866e+00
  2.72319018e+00  1.95542462e+01  1.95542462e+01  1.95542462e+01
  4.53030075e+01  3.35002321e+02  2.02391571e+03  7.31096073e+03]
E1 = -182.45205579930584  E_coul = 54.25345613461425
cycle= 3 E= -128.198599664692  delta_E= -0.000315  |g|= 0.000671  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000827457
diis-c [-8.46504458e-08 -3.95604182e-03 -2.65609830e-03  1.00661214e+00]
  HOMO = -0.786063199169333  LUMO = 2.60279880540584
  mo_energy =
[-3.27153181e+01 -1.89858342e+00 -7.86063199e-01 -7.86063199e-01
 -7.86063199e-01  2.60279881e+00  2.60279881e+00  2.60279881e+00
  2.72296349e+00  1.95537650e+01  1.95537650e+01  1.95537650e+01
  4.53024238e+01  3.35001868e+02  2.02391539e+03  7.31096045e+03]
E1 = -182.45325643436342  E_coul = 54.25465673850148
cycle= 4 E= -128.198599695862  delta_E= -3.12e-08  |g|= 5.38e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.52078e-05
diis-c [-2.22095446e-10  5.14098061e-04 -7.60433871e-04 -1.73130075e-01
  1.17337641e+00]
  HOMO = -0.786048021290521  LUMO = 2.60281183117622
  mo_energy =
[-3.27152791e+01 -1.89858106e+00 -7.86048021e-01 -7.86048021e-01
 -7.86048021e-01  2.60281183e+00  2.60281183e+00  2.60281183e+00
  2.72296465e+00  1.95537951e+01  1.95537951e+01  1.95537951e+01
  4.53024555e+01  3.35001922e+02  2.02391546e+03  7.31096053e+03]
E1 = -182.45319079294921  E_coul = 54.254591096752854
cycle= 5 E= -128.198599696196  delta_E= -3.34e-10  |g|= 1.53e-06  |ddm|= 2.77e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45319079294921  E_coul = 54.254591096752854
  HOMO = -0.786047961998362  LUMO = 2.60281190083448
  mo_energy =
[-3.27152790e+01 -1.89858138e+00 -7.86047962e-01 -7.86047962e-01
 -7.86047962e-01  2.60281190e+00  2.60281190e+00  2.60281190e+00
  2.72296438e+00  1.95537951e+01  1.95537951e+01  1.95537951e+01
  4.53024554e+01  3.35001922e+02  2.02391546e+03  7.31096053e+03]
E1 = -182.4531907647258  E_coul = 54.25459106852919
Extra cycle  E= -128.198599696197  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14577277e+03 2.27533676e+02 1.42301263e+03 5.74504377e-01
 5.00027596e+01 1.32573142e+01 1.92381338e+00 2.75409018e+00
 1.31516344e+01 5.97324686e-01]
E = -128.19859969619662
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:44 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2145.77277111        1
[INPUT] 0    0    [1    /1   ]  227.533676494        1
[INPUT] 0    0    [1    /1   ]  1423.01262917        1
[INPUT] 0    0    [1    /1   ]  0.574504377296       1
[INPUT] 0    0    [1    /1   ]  50.0027595644        1
[INPUT] 0    0    [1    /1   ]  13.2573142066        1
[INPUT] 0    0    [1    /1   ]  1.92381338343        1
[INPUT] 1    0    [1    /1   ]  2.75409017903        1
[INPUT] 1    0    [1    /1   ]  13.1516343619        1
[INPUT] 1    0    [1    /1   ]  0.597324685797       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2145.772771114125, 1.0]], [0, [227.53367649420005, 1.0]], [0, [1423.0126291729068, 1.0]], [0, [0.5745043772959068, 1.0]], [0, [50.00275956438881, 1.0]], [0, [13.257314206587402, 1.0]], [0, [1.9238133834278468, 1.0]], [1, [2.7540901790315346, 1.0]], [1, [13.151634361914692, 1.0]], [1, [0.5973246857971329, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2145.77277111]
bas 1, expnt(s) = [227.53367649]
bas 2, expnt(s) = [1423.01262917]
bas 3, expnt(s) = [0.57450438]
bas 4, expnt(s) = [50.00275956]
bas 5, expnt(s) = [13.25731421]
bas 6, expnt(s) = [1.92381338]
bas 7, expnt(s) = [2.75409018]
bas 8, expnt(s) = [13.15163436]
bas 9, expnt(s) = [0.59732469]
CPU time:       145.58
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14577277e+03 7.96531255e+02 2.27533676e+02 1.48012804e+02
 1.42301263e+03 5.85358043e+02 5.74504377e-01 1.66718975e+00
 5.00027596e+01 4.75073170e+01 1.32573142e+01 1.75532156e+01
 1.92381338e+00 4.12702624e+00 2.75409018e+00 1.03503989e+01
 1.31516344e+01 7.30649431e+01 5.97324686e-01 1.53196016e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966295696075562
cond(S) = 157.80981246244454
E1 = -183.13692347743776  E_coul = 55.01096822477925
init E= -128.125955252659
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742824997438133  LUMO = 2.6369234210342
  mo_energy =
[-3.25142485e+01 -1.85365276e+00 -7.42824997e-01 -7.42824997e-01
 -7.42824997e-01  2.63692342e+00  2.63692342e+00  2.63692342e+00
  2.75777747e+00  1.96894522e+01  1.96894522e+01  1.96894522e+01
  4.54740867e+01  3.35232711e+02  2.02418904e+03  7.31125679e+03]
E1 = -182.11731206281888  E_coul = 53.920697735485525
cycle= 1 E= -128.196614327333  delta_E= -0.0707  |g|= 0.167  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.263083
diis-c [-0.06921272  1.        ]
  HOMO = -0.808915816152764  LUMO = 2.58221099788942
  mo_energy =
[-3.27903611e+01 -1.92223689e+00 -8.08915816e-01 -8.08915816e-01
 -8.08915816e-01  2.58221100e+00  2.58221100e+00  2.58221100e+00
  2.70277513e+00  1.94976677e+01  1.94976677e+01  1.94976677e+01
  4.52360108e+01  3.34919576e+02  2.02382755e+03  7.31087107e+03]
E1 = -182.5863829552773  E_coul = 54.388097819358954
cycle= 2 E= -128.198285135918  delta_E= -0.00167  |g|= 0.0634  |ddm|= 0.0652
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.103418
diis-c [-4.05695198e-04  2.78866641e-01  7.21133359e-01]
  HOMO = -0.785846640842825  LUMO = 2.60295866370966
  mo_energy =
[-3.27147000e+01 -1.89829317e+00 -7.85846641e-01 -7.85846641e-01
 -7.85846641e-01  2.60295866e+00  2.60295866e+00  2.60295866e+00
  2.72319018e+00  1.95542462e+01  1.95542462e+01  1.95542462e+01
  4.53030075e+01  3.35002321e+02  2.02391571e+03  7.31096073e+03]
E1 = -182.45205579930584  E_coul = 54.25345613461425
cycle= 3 E= -128.198599664692  delta_E= -0.000315  |g|= 0.000671  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000827457
diis-c [-8.46504458e-08 -3.95604182e-03 -2.65609830e-03  1.00661214e+00]
  HOMO = -0.786063199169333  LUMO = 2.60279880540584
  mo_energy =
[-3.27153181e+01 -1.89858342e+00 -7.86063199e-01 -7.86063199e-01
 -7.86063199e-01  2.60279881e+00  2.60279881e+00  2.60279881e+00
  2.72296349e+00  1.95537650e+01  1.95537650e+01  1.95537650e+01
  4.53024238e+01  3.35001868e+02  2.02391539e+03  7.31096045e+03]
E1 = -182.45325643436342  E_coul = 54.25465673850148
cycle= 4 E= -128.198599695862  delta_E= -3.12e-08  |g|= 5.38e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.52078e-05
diis-c [-2.22095446e-10  5.14098061e-04 -7.60433871e-04 -1.73130075e-01
  1.17337641e+00]
  HOMO = -0.786048021290521  LUMO = 2.60281183117622
  mo_energy =
[-3.27152791e+01 -1.89858106e+00 -7.86048021e-01 -7.86048021e-01
 -7.86048021e-01  2.60281183e+00  2.60281183e+00  2.60281183e+00
  2.72296465e+00  1.95537951e+01  1.95537951e+01  1.95537951e+01
  4.53024555e+01  3.35001922e+02  2.02391546e+03  7.31096053e+03]
E1 = -182.45319079294921  E_coul = 54.254591096752854
cycle= 5 E= -128.198599696196  delta_E= -3.34e-10  |g|= 1.53e-06  |ddm|= 2.77e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.45319079294921  E_coul = 54.254591096752854
  HOMO = -0.786047961998362  LUMO = 2.60281190083448
  mo_energy =
[-3.27152790e+01 -1.89858138e+00 -7.86047962e-01 -7.86047962e-01
 -7.86047962e-01  2.60281190e+00  2.60281190e+00  2.60281190e+00
  2.72296438e+00  1.95537951e+01  1.95537951e+01  1.95537951e+01
  4.53024554e+01  3.35001922e+02  2.02391546e+03  7.31096053e+03]
E1 = -182.4531907647258  E_coul = 54.25459106852919
Extra cycle  E= -128.198599696197  delta_E= -2.56e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 157.80981246244454
E1 = -182.4531907647258  E_coul = 54.25459106852919
init E= -128.198599696197
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786047948946112  LUMO = 2.60281191097058
  mo_energy =
[-3.27152790e+01 -1.89858144e+00 -7.86047949e-01 -7.86047949e-01
 -7.86047949e-01  2.60281191e+00  2.60281191e+00  2.60281191e+00
  2.72296433e+00  1.95537951e+01  1.95537951e+01  1.95537951e+01
  4.53024554e+01  3.35001922e+02  2.02391546e+03  7.31096053e+03]
E1 = -182.45319078205333  E_coul = 54.25459108585657
cycle= 1 E= -128.198599696197  delta_E= -1.42e-13  |g|= 5.11e-08  |ddm|= 1.61e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.45319078205333  E_coul = 54.25459108585657
  HOMO = -0.786047944896341  LUMO = 2.60281191434018
  mo_energy =
[-3.27152790e+01 -1.89858145e+00 -7.86047945e-01 -7.86047945e-01
 -7.86047945e-01  2.60281191e+00  2.60281191e+00  2.60281191e+00
  2.72296432e+00  1.95537951e+01  1.95537951e+01  1.95537951e+01
  4.53024554e+01  3.35001922e+02  2.02391546e+03  7.31096053e+03]
E1 = -182.4531907769612  E_coul = 54.25459108076439
Extra cycle  E= -128.198599696197  delta_E= -5.68e-14  |g|= 9.4e-09  |ddm|= 2.86e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14577277e+03 2.27533676e+02 1.42301263e+03 5.74504377e-01
 5.00027596e+01 1.32573142e+01 1.92381338e+00 2.75409018e+00
 1.31516344e+01 5.97324686e-01]
grad_E = [-1.01572341e-05  2.69040786e-05  3.35878073e-05  9.15774440e-05
 -9.14971701e-05 -8.95049705e-06 -2.29570312e-04  6.70113983e-04
 -8.51754161e-04  4.72784762e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2147.6818008         1
[INPUT] 0    0    [1    /1   ]  227.385808399        1
[INPUT] 0    0    [1    /1   ]  1416.44237541        1
[INPUT] 0    0    [1    /1   ]  0.573372914716       1
[INPUT] 0    0    [1    /1   ]  49.9448305013        1
[INPUT] 0    0    [1    /1   ]  13.2435114681        1
[INPUT] 0    0    [1    /1   ]  1.91895178176        1
[INPUT] 1    0    [1    /1   ]  2.73894226214        1
[INPUT] 1    0    [1    /1   ]  13.0373167079        1
[INPUT] 1    0    [1    /1   ]  0.595199901587       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2147.6818008003825, 1.0]], [0, [227.38580839906257, 1.0]], [0, [1416.4423754104682, 1.0]], [0, [0.5733729147163086, 1.0]], [0, [49.94483050125566, 1.0]], [0, [13.243511468088734, 1.0]], [0, [1.9189517817601165, 1.0]], [1, [2.7389422621364856, 1.0]], [1, [13.037316707860082, 1.0]], [1, [0.5951999015866856, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2147.6818008]
bas 1, expnt(s) = [227.3858084]
bas 2, expnt(s) = [1416.44237541]
bas 3, expnt(s) = [0.57337291]
bas 4, expnt(s) = [49.9448305]
bas 5, expnt(s) = [13.24351147]
bas 6, expnt(s) = [1.91895178]
bas 7, expnt(s) = [2.73894226]
bas 8, expnt(s) = [13.03731671]
bas 9, expnt(s) = [0.5951999]
CPU time:       148.05
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14768180e+03 7.97062683e+02 2.27385808e+02 1.47940656e+02
 1.41644238e+03 5.83329859e+02 5.73372915e-01 1.66472654e+00
 4.99448305e+01 4.74660325e+01 1.32435115e+01 1.75395072e+01
 1.91895178e+00 4.11920182e+00 2.73894226e+00 1.02792869e+01
 1.30373167e+01 7.22719316e+01 5.95199902e-01 1.52515139e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966756148463858
cond(S) = 154.14705646867677
E1 = -183.13693691398592  E_coul = 55.01053339686498
init E= -128.126403517121
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742769620458782  LUMO = 2.62326059518773
  mo_energy =
[-3.25147089e+01 -1.85367568e+00 -7.42769620e-01 -7.42769620e-01
 -7.42769620e-01  2.62326060e+00  2.62326060e+00  2.62326060e+00
  2.74749850e+00  1.95169887e+01  1.95169887e+01  1.95169887e+01
  4.53837342e+01  3.34833729e+02  2.02005433e+03  7.29900910e+03]
E1 = -182.1050993692834  E_coul = 53.9084005911361
cycle= 1 E= -128.196698778147  delta_E= -0.0703  |g|= 0.168  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265227
diis-c [-0.07034527  1.        ]
  HOMO = -0.80975990946867  LUMO = 2.56801776673243
  mo_energy =
[-3.27929990e+01 -1.92328508e+00 -8.09759909e-01 -8.09759909e-01
 -8.09759909e-01  2.56801777e+00  2.56801777e+00  2.56801777e+00
  2.69177565e+00  1.93241543e+01  1.93241543e+01  1.93241543e+01
  4.51437553e+01  3.34518418e+02  2.01969064e+03  7.29862118e+03]
E1 = -182.5794451135904  E_coul = 54.38104478091243
cycle= 2 E= -128.198400332678  delta_E= -0.0017  |g|= 0.0641  |ddm|= 0.0659
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104629
diis-c [-4.06492349e-04  2.79652099e-01  7.20347901e-01]
  HOMO = -0.786446520213606  LUMO = 2.58888753569781
  mo_energy =
[-3.27166160e+01 -1.89908477e+00 -7.86446520e-01 -7.86446520e-01
 -7.86446520e-01  2.58888754e+00  2.58888754e+00  2.58888754e+00
  2.71235301e+00  1.93811110e+01  1.93811110e+01  1.93811110e+01
  4.52113798e+01  3.34601922e+02  2.01977959e+03  7.29871165e+03]
E1 = -182.44346727516432  E_coul = 54.244744958314804
cycle= 3 E= -128.19872231685  delta_E= -0.000322  |g|= 0.000657  |ddm|= 0.0187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000793994
diis-c [-9.17422167e-08 -4.00941029e-03 -3.27018911e-03  1.00727960e+00]
  HOMO = -0.786653557407129  LUMO = 2.5887375529729
  mo_energy =
[-3.27172067e+01 -1.89936860e+00 -7.86653557e-01 -7.86653557e-01
 -7.86653557e-01  2.58873755e+00  2.58873755e+00  2.58873755e+00
  2.71213283e+00  1.93806528e+01  1.93806528e+01  1.93806528e+01
  4.52108203e+01  3.34601500e+02  2.01977931e+03  7.29871140e+03]
E1 = -182.44462025019692  E_coul = 54.24589790326771
cycle= 4 E= -128.198722346929  delta_E= -3.01e-08  |g|= 5.62e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.87326e-05
diis-c [-2.31692613e-10  5.21342877e-04 -6.94525006e-04 -1.75336220e-01
  1.17550940e+00]
  HOMO = -0.786637822005104  LUMO = 2.58875097638684
  mo_energy =
[-3.27171663e+01 -1.89936638e+00 -7.86637822e-01 -7.86637822e-01
 -7.86637822e-01  2.58875098e+00  2.58875098e+00  2.58875098e+00
  2.71213382e+00  1.93806838e+01  1.93806838e+01  1.93806838e+01
  4.52108529e+01  3.34601556e+02  2.01977938e+03  7.29871148e+03]
E1 = -182.44455225793533  E_coul = 54.245829910638875
cycle= 5 E= -128.198722347296  delta_E= -3.67e-10  |g|= 1.53e-06  |ddm|= 2.92e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44455225793533  E_coul = 54.245829910638875
  HOMO = -0.786637761050891  LUMO = 2.58875104874948
  mo_energy =
[-3.27171662e+01 -1.89936669e+00 -7.86637761e-01 -7.86637761e-01
 -7.86637761e-01  2.58875105e+00  2.58875105e+00  2.58875105e+00
  2.71213355e+00  1.93806838e+01  1.93806838e+01  1.93806838e+01
  4.52108529e+01  3.34601556e+02  2.01977938e+03  7.29871148e+03]
E1 = -182.44455220970278  E_coul = 54.2458298624061
Extra cycle  E= -128.198722347297  delta_E= -2.27e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.14768180e+03 2.27385808e+02 1.41644238e+03 5.73372915e-01
 4.99448305e+01 1.32435115e+01 1.91895178e+00 2.73894226e+00
 1.30373167e+01 5.95199902e-01]
E = -128.19872234729667
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:47 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2147.6818008         1
[INPUT] 0    0    [1    /1   ]  227.385808399        1
[INPUT] 0    0    [1    /1   ]  1416.44237541        1
[INPUT] 0    0    [1    /1   ]  0.573372914716       1
[INPUT] 0    0    [1    /1   ]  49.9448305013        1
[INPUT] 0    0    [1    /1   ]  13.2435114681        1
[INPUT] 0    0    [1    /1   ]  1.91895178176        1
[INPUT] 1    0    [1    /1   ]  2.73894226214        1
[INPUT] 1    0    [1    /1   ]  13.0373167079        1
[INPUT] 1    0    [1    /1   ]  0.595199901587       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2147.6818008003825, 1.0]], [0, [227.38580839906257, 1.0]], [0, [1416.4423754104682, 1.0]], [0, [0.5733729147163086, 1.0]], [0, [49.94483050125566, 1.0]], [0, [13.243511468088734, 1.0]], [0, [1.9189517817601165, 1.0]], [1, [2.7389422621364856, 1.0]], [1, [13.037316707860082, 1.0]], [1, [0.5951999015866856, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2147.6818008]
bas 1, expnt(s) = [227.3858084]
bas 2, expnt(s) = [1416.44237541]
bas 3, expnt(s) = [0.57337291]
bas 4, expnt(s) = [49.9448305]
bas 5, expnt(s) = [13.24351147]
bas 6, expnt(s) = [1.91895178]
bas 7, expnt(s) = [2.73894226]
bas 8, expnt(s) = [13.03731671]
bas 9, expnt(s) = [0.5951999]
CPU time:       148.84
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.14768180e+03 7.97062683e+02 2.27385808e+02 1.47940656e+02
 1.41644238e+03 5.83329859e+02 5.73372915e-01 1.66472654e+00
 4.99448305e+01 4.74660325e+01 1.32435115e+01 1.75395072e+01
 1.91895178e+00 4.11920182e+00 2.73894226e+00 1.02792869e+01
 1.30373167e+01 7.22719316e+01 5.95199902e-01 1.52515139e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966756148463858
cond(S) = 154.14705646867677
E1 = -183.13693691398592  E_coul = 55.01053339686498
init E= -128.126403517121
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742769620458782  LUMO = 2.62326059518773
  mo_energy =
[-3.25147089e+01 -1.85367568e+00 -7.42769620e-01 -7.42769620e-01
 -7.42769620e-01  2.62326060e+00  2.62326060e+00  2.62326060e+00
  2.74749850e+00  1.95169887e+01  1.95169887e+01  1.95169887e+01
  4.53837342e+01  3.34833729e+02  2.02005433e+03  7.29900910e+03]
E1 = -182.1050993692834  E_coul = 53.9084005911361
cycle= 1 E= -128.196698778147  delta_E= -0.0703  |g|= 0.168  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265227
diis-c [-0.07034527  1.        ]
  HOMO = -0.80975990946867  LUMO = 2.56801776673243
  mo_energy =
[-3.27929990e+01 -1.92328508e+00 -8.09759909e-01 -8.09759909e-01
 -8.09759909e-01  2.56801777e+00  2.56801777e+00  2.56801777e+00
  2.69177565e+00  1.93241543e+01  1.93241543e+01  1.93241543e+01
  4.51437553e+01  3.34518418e+02  2.01969064e+03  7.29862118e+03]
E1 = -182.5794451135904  E_coul = 54.38104478091243
cycle= 2 E= -128.198400332678  delta_E= -0.0017  |g|= 0.0641  |ddm|= 0.0659
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104629
diis-c [-4.06492349e-04  2.79652099e-01  7.20347901e-01]
  HOMO = -0.786446520213606  LUMO = 2.58888753569781
  mo_energy =
[-3.27166160e+01 -1.89908477e+00 -7.86446520e-01 -7.86446520e-01
 -7.86446520e-01  2.58888754e+00  2.58888754e+00  2.58888754e+00
  2.71235301e+00  1.93811110e+01  1.93811110e+01  1.93811110e+01
  4.52113798e+01  3.34601922e+02  2.01977959e+03  7.29871165e+03]
E1 = -182.44346727516432  E_coul = 54.244744958314804
cycle= 3 E= -128.19872231685  delta_E= -0.000322  |g|= 0.000657  |ddm|= 0.0187
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000793994
diis-c [-9.17422167e-08 -4.00941029e-03 -3.27018911e-03  1.00727960e+00]
  HOMO = -0.786653557407129  LUMO = 2.5887375529729
  mo_energy =
[-3.27172067e+01 -1.89936860e+00 -7.86653557e-01 -7.86653557e-01
 -7.86653557e-01  2.58873755e+00  2.58873755e+00  2.58873755e+00
  2.71213283e+00  1.93806528e+01  1.93806528e+01  1.93806528e+01
  4.52108203e+01  3.34601500e+02  2.01977931e+03  7.29871140e+03]
E1 = -182.44462025019692  E_coul = 54.24589790326771
cycle= 4 E= -128.198722346929  delta_E= -3.01e-08  |g|= 5.62e-05  |ddm|= 0.00026
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.87326e-05
diis-c [-2.31692613e-10  5.21342877e-04 -6.94525006e-04 -1.75336220e-01
  1.17550940e+00]
  HOMO = -0.786637822005104  LUMO = 2.58875097638684
  mo_energy =
[-3.27171663e+01 -1.89936638e+00 -7.86637822e-01 -7.86637822e-01
 -7.86637822e-01  2.58875098e+00  2.58875098e+00  2.58875098e+00
  2.71213382e+00  1.93806838e+01  1.93806838e+01  1.93806838e+01
  4.52108529e+01  3.34601556e+02  2.01977938e+03  7.29871148e+03]
E1 = -182.44455225793533  E_coul = 54.245829910638875
cycle= 5 E= -128.198722347296  delta_E= -3.67e-10  |g|= 1.53e-06  |ddm|= 2.92e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.44455225793533  E_coul = 54.245829910638875
  HOMO = -0.786637761050891  LUMO = 2.58875104874948
  mo_energy =
[-3.27171662e+01 -1.89936669e+00 -7.86637761e-01 -7.86637761e-01
 -7.86637761e-01  2.58875105e+00  2.58875105e+00  2.58875105e+00
  2.71213355e+00  1.93806838e+01  1.93806838e+01  1.93806838e+01
  4.52108529e+01  3.34601556e+02  2.01977938e+03  7.29871148e+03]
E1 = -182.44455220970278  E_coul = 54.2458298624061
Extra cycle  E= -128.198722347297  delta_E= -2.27e-13  |g|= 2.81e-07  |ddm|= 8.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 154.14705646867677
E1 = -182.44455220970278  E_coul = 54.2458298624061
init E= -128.198722347297
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786637749424278  LUMO = 2.58875105752927
  mo_energy =
[-3.27171662e+01 -1.89936675e+00 -7.86637749e-01 -7.86637749e-01
 -7.86637749e-01  2.58875106e+00  2.58875106e+00  2.58875106e+00
  2.71213350e+00  1.93806838e+01  1.93806838e+01  1.93806838e+01
  4.52108529e+01  3.34601556e+02  2.01977938e+03  7.29871148e+03]
E1 = -182.44455223441935  E_coul = 54.2458298871227
cycle= 1 E= -128.198722347297  delta_E= 2.84e-14  |g|= 5.11e-08  |ddm|= 1.61e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.44455223441935  E_coul = 54.2458298871227
  HOMO = -0.786637744869718  LUMO = 2.58875106132902
  mo_energy =
[-3.27171662e+01 -1.89936676e+00 -7.86637745e-01 -7.86637745e-01
 -7.86637745e-01  2.58875106e+00  2.58875106e+00  2.58875106e+00
  2.71213349e+00  1.93806838e+01  1.93806838e+01  1.93806838e+01
  4.52108529e+01  3.34601556e+02  2.01977938e+03  7.29871148e+03]
E1 = -182.44455222629043  E_coul = 54.24582987899351
Extra cycle  E= -128.198722347297  delta_E= -2.84e-13  |g|= 9.49e-09  |ddm|= 2.85e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.14768180e+03 2.27385808e+02 1.41644238e+03 5.73372915e-01
 4.99448305e+01 1.32435115e+01 1.91895178e+00 2.73894226e+00
 1.30373167e+01 5.95199902e-01]
grad_E = [-1.04399873e-05  3.99999473e-05  3.37382009e-05  1.52871961e-04
 -1.52485809e-04 -1.43695088e-05 -3.80807471e-04  1.10843118e-03
 -1.41454417e-03  7.83476777e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2152.83862644        1
[INPUT] 0    0    [1    /1   ]  226.831718195        1
[INPUT] 0    0    [1    /1   ]  1398.70659098        1
[INPUT] 0    0    [1    /1   ]  0.571235386285       1
[INPUT] 0    0    [1    /1   ]  49.807813683         1
[INPUT] 0    0    [1    /1   ]  13.2142199301        1
[INPUT] 0    0    [1    /1   ]  1.90998718496        1
[INPUT] 1    0    [1    /1   ]  2.71342159401        1
[INPUT] 1    0    [1    /1   ]  12.8463147912        1
[INPUT] 1    0    [1    /1   ]  0.5916117061         1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2152.8386264449, 1.0]], [0, [226.83171819469595, 1.0]], [0, [1398.7065909770845, 1.0]], [0, [0.5712353862851962, 1.0]], [0, [49.80781368304156, 1.0]], [0, [13.214219930136748, 1.0]], [0, [1.9099871849621168, 1.0]], [1, [2.713421594010687, 1.0]], [1, [12.846314791213661, 1.0]], [1, [0.5916117060999816, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2152.83862644]
bas 1, expnt(s) = [226.83171819]
bas 2, expnt(s) = [1398.70659098]
bas 3, expnt(s) = [0.57123539]
bas 4, expnt(s) = [49.80781368]
bas 5, expnt(s) = [13.21421993]
bas 6, expnt(s) = [1.90998718]
bas 7, expnt(s) = [2.71342159]
bas 8, expnt(s) = [12.84631479]
bas 9, expnt(s) = [0.59161171]
CPU time:       151.34
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.15283863e+03 7.98497631e+02 2.26831718e+02 1.47670199e+02
 1.39870659e+03 5.77843178e+02 5.71235386e-01 1.66006981e+00
 4.98078137e+01 4.73683365e+01 1.32142199e+01 1.75104042e+01
 1.90998718e+00 4.10476090e+00 2.71342159e+00 1.01597024e+01
 1.28463148e+01 7.09508483e+01 5.91611706e-01 1.51366699e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.967527716782714
cond(S) = 144.89462476401994
E1 = -183.13701181526199  E_coul = 55.009681273337485
init E= -128.127330541924
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742659447611561  LUMO = 2.60027532308484
  mo_energy =
[-3.25156410e+01 -1.85373408e+00 -7.42659448e-01 -7.42659448e-01
 -7.42659448e-01  2.60027532e+00  2.60027532e+00  2.60027532e+00
  2.72830170e+00  1.92290750e+01  1.92290750e+01  1.92290750e+01
  4.51916500e+01  3.33728253e+02  2.00842936e+03  7.26532772e+03]
E1 = -182.08424668402955  E_coul = 53.88728047665952
cycle= 1 E= -128.19696620737  delta_E= -0.0696  |g|= 0.17  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.268889
diis-c [-0.07230154  1.        ]
  HOMO = -0.811183782196324  LUMO = 2.54413719673504
  mo_energy =
[-3.27976654e+01 -1.92508876e+00 -8.11183782e-01 -8.11183782e-01
 -8.11183782e-01  2.54413720e+00  2.54413720e+00  2.54413720e+00
  2.67139758e+00  1.90344509e+01  1.90344509e+01  1.90344509e+01
  4.49484659e+01  3.33409251e+02  2.00806197e+03  7.26493604e+03]
E1 = -182.56764847348921  E_coul = 54.36892738180173
cycle= 2 E= -128.198721091687  delta_E= -0.00175  |g|= 0.0653  |ddm|= 0.0671
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106708
diis-c [-4.06711961e-04  2.80986673e-01  7.19013327e-01]
  HOMO = -0.787451566252854  LUMO = 2.56521429852741
  mo_energy =
[-3.27200475e+01 -1.90044856e+00 -7.87451566e-01 -7.87451566e-01
 -7.87451566e-01  2.56521430e+00  2.56521430e+00  2.56521430e+00
  2.69224106e+00  1.90920506e+01  1.90920506e+01  1.90920506e+01
  4.50171519e+01  3.33494045e+02  2.00815228e+03  7.26502788e+03]
E1 = -182.42883876421482  E_coul = 54.229782691173064
cycle= 3 E= -128.199056073042  delta_E= -0.000335  |g|= 0.000635  |ddm|= 0.019
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000737358
diis-c [-1.04527847e-07 -4.10987556e-03 -4.35010312e-03  1.00845998e+00]
  HOMO = -0.787641552611369  LUMO = 2.56508171062997
  mo_energy =
[-3.27205888e+01 -1.90072059e+00 -7.87641553e-01 -7.87641553e-01
 -7.87641553e-01  2.56508171e+00  2.56508171e+00  2.56508171e+00
  2.69203277e+00  1.90916331e+01  1.90916331e+01  1.90916331e+01
  4.50166359e+01  3.33493678e+02  2.00815206e+03  7.26502771e+03]
E1 = -182.42990535432583  E_coul = 54.23084925290484
cycle= 4 E= -128.199056101421  delta_E= -2.84e-08  |g|= 6.03e-05  |ddm|= 0.000262
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.47151e-05
diis-c [-2.49326407e-10  5.32971433e-04 -5.72670121e-04 -1.78619062e-01
  1.17865876e+00]
  HOMO = -0.787624871162565  LUMO = 2.56509579445609
  mo_energy =
[-3.27205462e+01 -1.90071860e+00 -7.87624871e-01 -7.87624871e-01
 -7.87624871e-01  2.56509579e+00  2.56509579e+00  2.56509579e+00
  2.69203346e+00  1.90916656e+01  1.90916656e+01  1.90916656e+01
  4.50166702e+01  3.33493738e+02  2.00815214e+03  7.26502779e+03]
E1 = -182.4298333896526  E_coul = 54.23077728780436
cycle= 5 E= -128.199056101848  delta_E= -4.27e-10  |g|= 1.53e-06  |ddm|= 3.19e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4298333896526  E_coul = 54.23077728780436
  HOMO = -0.787624805296657  LUMO = 2.56509587344974
  mo_energy =
[-3.27205461e+01 -1.90071891e+00 -7.87624805e-01 -7.87624805e-01
 -7.87624805e-01  2.56509587e+00  2.56509587e+00  2.56509587e+00
  2.69203320e+00  1.90916656e+01  1.90916656e+01  1.90916656e+01
  4.50166702e+01  3.33493738e+02  2.00815214e+03  7.26502779e+03]
E1 = -182.42983329657193  E_coul = 54.23077719472333
Extra cycle  E= -128.199056101849  delta_E= -3.69e-13  |g|= 2.82e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.15283863e+03 2.26831718e+02 1.39870659e+03 5.71235386e-01
 4.98078137e+01 1.32142199e+01 1.90998718e+00 2.71342159e+00
 1.28463148e+01 5.91611706e-01]
E = -128.1990561018486
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2152.83862644        1
[INPUT] 0    0    [1    /1   ]  226.831718195        1
[INPUT] 0    0    [1    /1   ]  1398.70659098        1
[INPUT] 0    0    [1    /1   ]  0.571235386285       1
[INPUT] 0    0    [1    /1   ]  49.807813683         1
[INPUT] 0    0    [1    /1   ]  13.2142199301        1
[INPUT] 0    0    [1    /1   ]  1.90998718496        1
[INPUT] 1    0    [1    /1   ]  2.71342159401        1
[INPUT] 1    0    [1    /1   ]  12.8463147912        1
[INPUT] 1    0    [1    /1   ]  0.5916117061         1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2152.8386264449, 1.0]], [0, [226.83171819469595, 1.0]], [0, [1398.7065909770845, 1.0]], [0, [0.5712353862851962, 1.0]], [0, [49.80781368304156, 1.0]], [0, [13.214219930136748, 1.0]], [0, [1.9099871849621168, 1.0]], [1, [2.713421594010687, 1.0]], [1, [12.846314791213661, 1.0]], [1, [0.5916117060999816, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2152.83862644]
bas 1, expnt(s) = [226.83171819]
bas 2, expnt(s) = [1398.70659098]
bas 3, expnt(s) = [0.57123539]
bas 4, expnt(s) = [49.80781368]
bas 5, expnt(s) = [13.21421993]
bas 6, expnt(s) = [1.90998718]
bas 7, expnt(s) = [2.71342159]
bas 8, expnt(s) = [12.84631479]
bas 9, expnt(s) = [0.59161171]
CPU time:       152.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.15283863e+03 7.98497631e+02 2.26831718e+02 1.47670199e+02
 1.39870659e+03 5.77843178e+02 5.71235386e-01 1.66006981e+00
 4.98078137e+01 4.73683365e+01 1.32142199e+01 1.75104042e+01
 1.90998718e+00 4.10476090e+00 2.71342159e+00 1.01597024e+01
 1.28463148e+01 7.09508483e+01 5.91611706e-01 1.51366699e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.967527716782714
cond(S) = 144.89462476401994
E1 = -183.13701181526199  E_coul = 55.009681273337485
init E= -128.127330541924
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742659447611561  LUMO = 2.60027532308484
  mo_energy =
[-3.25156410e+01 -1.85373408e+00 -7.42659448e-01 -7.42659448e-01
 -7.42659448e-01  2.60027532e+00  2.60027532e+00  2.60027532e+00
  2.72830170e+00  1.92290750e+01  1.92290750e+01  1.92290750e+01
  4.51916500e+01  3.33728253e+02  2.00842936e+03  7.26532772e+03]
E1 = -182.08424668402955  E_coul = 53.88728047665952
cycle= 1 E= -128.19696620737  delta_E= -0.0696  |g|= 0.17  |ddm|= 0.184
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.268889
diis-c [-0.07230154  1.        ]
  HOMO = -0.811183782196324  LUMO = 2.54413719673504
  mo_energy =
[-3.27976654e+01 -1.92508876e+00 -8.11183782e-01 -8.11183782e-01
 -8.11183782e-01  2.54413720e+00  2.54413720e+00  2.54413720e+00
  2.67139758e+00  1.90344509e+01  1.90344509e+01  1.90344509e+01
  4.49484659e+01  3.33409251e+02  2.00806197e+03  7.26493604e+03]
E1 = -182.56764847348921  E_coul = 54.36892738180173
cycle= 2 E= -128.198721091687  delta_E= -0.00175  |g|= 0.0653  |ddm|= 0.0671
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106708
diis-c [-4.06711961e-04  2.80986673e-01  7.19013327e-01]
  HOMO = -0.787451566252854  LUMO = 2.56521429852741
  mo_energy =
[-3.27200475e+01 -1.90044856e+00 -7.87451566e-01 -7.87451566e-01
 -7.87451566e-01  2.56521430e+00  2.56521430e+00  2.56521430e+00
  2.69224106e+00  1.90920506e+01  1.90920506e+01  1.90920506e+01
  4.50171519e+01  3.33494045e+02  2.00815228e+03  7.26502788e+03]
E1 = -182.42883876421482  E_coul = 54.229782691173064
cycle= 3 E= -128.199056073042  delta_E= -0.000335  |g|= 0.000635  |ddm|= 0.019
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000737358
diis-c [-1.04527847e-07 -4.10987556e-03 -4.35010312e-03  1.00845998e+00]
  HOMO = -0.787641552611369  LUMO = 2.56508171062997
  mo_energy =
[-3.27205888e+01 -1.90072059e+00 -7.87641553e-01 -7.87641553e-01
 -7.87641553e-01  2.56508171e+00  2.56508171e+00  2.56508171e+00
  2.69203277e+00  1.90916331e+01  1.90916331e+01  1.90916331e+01
  4.50166359e+01  3.33493678e+02  2.00815206e+03  7.26502771e+03]
E1 = -182.42990535432583  E_coul = 54.23084925290484
cycle= 4 E= -128.199056101421  delta_E= -2.84e-08  |g|= 6.03e-05  |ddm|= 0.000262
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=9.47151e-05
diis-c [-2.49326407e-10  5.32971433e-04 -5.72670121e-04 -1.78619062e-01
  1.17865876e+00]
  HOMO = -0.787624871162565  LUMO = 2.56509579445609
  mo_energy =
[-3.27205462e+01 -1.90071860e+00 -7.87624871e-01 -7.87624871e-01
 -7.87624871e-01  2.56509579e+00  2.56509579e+00  2.56509579e+00
  2.69203346e+00  1.90916656e+01  1.90916656e+01  1.90916656e+01
  4.50166702e+01  3.33493738e+02  2.00815214e+03  7.26502779e+03]
E1 = -182.4298333896526  E_coul = 54.23077728780436
cycle= 5 E= -128.199056101848  delta_E= -4.27e-10  |g|= 1.53e-06  |ddm|= 3.19e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4298333896526  E_coul = 54.23077728780436
  HOMO = -0.787624805296657  LUMO = 2.56509587344974
  mo_energy =
[-3.27205461e+01 -1.90071891e+00 -7.87624805e-01 -7.87624805e-01
 -7.87624805e-01  2.56509587e+00  2.56509587e+00  2.56509587e+00
  2.69203320e+00  1.90916656e+01  1.90916656e+01  1.90916656e+01
  4.50166702e+01  3.33493738e+02  2.00815214e+03  7.26502779e+03]
E1 = -182.42983329657193  E_coul = 54.23077719472333
Extra cycle  E= -128.199056101849  delta_E= -3.69e-13  |g|= 2.82e-07  |ddm|= 8.91e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 144.89462476401994
E1 = -182.42983329657193  E_coul = 54.23077719472333
init E= -128.199056101849
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.787624796796636  LUMO = 2.56509587932306
  mo_energy =
[-3.27205461e+01 -1.90071897e+00 -7.87624797e-01 -7.87624797e-01
 -7.87624797e-01  2.56509588e+00  2.56509588e+00  2.56509588e+00
  2.69203315e+00  1.90916656e+01  1.90916656e+01  1.90916656e+01
  4.50166702e+01  3.33493738e+02  2.00815214e+03  7.26502779e+03]
E1 = -182.42983333838785  E_coul = 54.2307772365393
cycle= 1 E= -128.199056101849  delta_E= 5.68e-14  |g|= 5.13e-08  |ddm|= 1.63e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.42983333838785  E_coul = 54.2307772365393
  HOMO = -0.787624791064863  LUMO = 2.56509588412719
  mo_energy =
[-3.27205461e+01 -1.90071898e+00 -7.87624791e-01 -7.87624791e-01
 -7.87624791e-01  2.56509588e+00  2.56509588e+00  2.56509588e+00
  2.69203314e+00  1.90916656e+01  1.90916656e+01  1.90916656e+01
  4.50166702e+01  3.33493738e+02  2.00815214e+03  7.26502779e+03]
E1 = -182.4298333232724  E_coul = 54.23077722142387
Extra cycle  E= -128.199056101849  delta_E= 2.84e-14  |g|= 9.79e-09  |ddm|= 2.84e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.15283863e+03 2.26831718e+02 1.39870659e+03 5.71235386e-01
 4.98078137e+01 1.32142199e+01 1.90998718e+00 2.71342159e+00
 1.28463148e+01 5.91611706e-01]
grad_E = [-1.11628279e-05  6.33760219e-05  3.43687851e-05  2.67427194e-04
 -2.60296729e-04 -2.15743647e-05 -6.49942171e-04  1.88061424e-03
 -2.40086620e-03  1.32499613e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2167.35930722        1
[INPUT] 0    0    [1    /1   ]  224.978884931        1
[INPUT] 0    0    [1    /1   ]  1348.78925595        1
[INPUT] 0    0    [1    /1   ]  0.566745102805       1
[INPUT] 0    0    [1    /1   ]  49.4503704166        1
[INPUT] 0    0    [1    /1   ]  13.144478226         1
[INPUT] 0    0    [1    /1   ]  1.8917426406         1
[INPUT] 1    0    [1    /1   ]  2.66733294201        1
[INPUT] 1    0    [1    /1   ]  12.5058314413        1
[INPUT] 1    0    [1    /1   ]  0.585108497048       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2167.3593072159842, 1.0]], [0, [224.97888493107664, 1.0]], [0, [1348.7892559547527, 1.0]], [0, [0.5667451028048004, 1.0]], [0, [49.45037041656291, 1.0]], [0, [13.144478225978888, 1.0]], [0, [1.8917426406014357, 1.0]], [1, [2.667332942011284, 1.0]], [1, [12.505831441327151, 1.0]], [1, [0.5851084970482685, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2167.35930722]
bas 1, expnt(s) = [224.97888493]
bas 2, expnt(s) = [1348.78925595]
bas 3, expnt(s) = [0.5667451]
bas 4, expnt(s) = [49.45037042]
bas 5, expnt(s) = [13.14447823]
bas 6, expnt(s) = [1.89174264]
bas 7, expnt(s) = [2.66733294]
bas 8, expnt(s) = [12.50583144]
bas 9, expnt(s) = [0.5851085]
CPU time:       154.73
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.16735931e+03 8.02533575e+02 2.24978885e+02 1.46764610e+02
 1.34878926e+03 5.62306492e+02 5.66745103e-01 1.65027324e+00
 4.94503704e+01 4.71131548e+01 1.31444782e+01 1.74410464e+01
 1.89174264e+00 4.07531858e+00 2.66733294e+00 9.94445366e+00
 1.25058314e+01 6.86080548e+01 5.85108497e-01 1.49289718e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.968903344857832
cond(S) = 123.13662547697254
E1 = -183.13719743336748  E_coul = 55.00774006501315
init E= -128.129457368354
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74240511273697  LUMO = 2.55889233799077
  mo_energy =
[-3.25178180e+01 -1.85389571e+00 -7.42405113e-01 -7.42405113e-01
 -7.42405113e-01  2.55889234e+00  2.55889234e+00  2.55889234e+00
  2.68864856e+00  1.87168511e+01  1.87168511e+01  1.87168511e+01
  4.47342615e+01  3.30520247e+02  1.97413431e+03  7.16823232e+03]
E1 = -182.04570567517635  E_coul = 53.84791080595694
cycle= 1 E= -128.197794869219  delta_E= -0.0683  |g|= 0.174  |ddm|= 0.185
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.275658
diis-c [-0.07598748  1.        ]
  HOMO = -0.813753681659269  LUMO = 2.50113878947684
  mo_energy =
[-3.28067781e+01 -1.92845656e+00 -8.13753682e-01 -8.13753682e-01
 -8.13753682e-01  2.50113879e+00  2.50113879e+00  2.50113879e+00
  2.62970606e+00  1.85189485e+01  1.85189485e+01  1.85189485e+01
  4.44852929e+01  3.30194511e+02  1.97376024e+03  7.16783380e+03]
E1 = -182.54597455161345  E_coul = 54.34632363302086
cycle= 2 E= -128.199650918593  delta_E= -0.00186  |g|= 0.0675  |ddm|= 0.0694
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110578
diis-c [-4.03547110e-04  2.83419981e-01  7.16580019e-01]
  HOMO = -0.789242716641472  LUMO = 2.52259404091671
  mo_energy =
[-3.27268738e+01 -1.90299880e+00 -7.89242717e-01 -7.89242717e-01
 -7.89242717e-01  2.52259404e+00  2.52259404e+00  2.52259404e+00
  2.65100898e+00  1.85777228e+01  1.85777228e+01  1.85777228e+01
  4.45559075e+01  3.30281670e+02  1.97385303e+03  7.16792818e+03]
E1 = -182.40189607367412  E_coul = 54.20188529843665
cycle= 3 E= -128.200010775237  delta_E= -0.00036  |g|= 0.000597  |ddm|= 0.0197
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000641179
diis-c [-1.30605986e-07 -4.32921757e-03 -6.44252749e-03  1.01077175e+00]
  HOMO = -0.78939881059035  LUMO = 2.52249509214849
  mo_energy =
[-3.27273170e+01 -1.90324664e+00 -7.89398811e-01 -7.89398811e-01
 -7.89398811e-01  2.52249509e+00  2.52249509e+00  2.52249509e+00
  2.65082466e+00  1.85773849e+01  1.85773849e+01  1.85773849e+01
  4.45554779e+01  3.30281414e+02  1.97385294e+03  7.16792813e+03]
E1 = -182.40278804623173  E_coul = 54.20277724495079
cycle= 4 E= -128.200010801281  delta_E= -2.6e-08  |g|= 6.78e-05  |ddm|= 0.000265
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000105731
diis-c [-2.87344856e-10  5.53223903e-04 -3.23122985e-04 -1.83467767e-01
  1.18323767e+00]
  HOMO = -0.789380386785259  LUMO = 2.52251034688936
  mo_energy =
[-3.27272702e+01 -1.90324510e+00 -7.89380387e-01 -7.89380387e-01
 -7.89380387e-01  2.52251035e+00  2.52251035e+00  2.52251035e+00
  2.65082477e+00  1.85774202e+01  1.85774202e+01  1.85774202e+01
  4.45555152e+01  3.30281480e+02  1.97385302e+03  7.16792823e+03]
E1 = -182.4027088392098  E_coul = 54.20269803737831
cycle= 5 E= -128.200010801831  delta_E= -5.51e-10  |g|= 1.55e-06  |ddm|= 3.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4027088392098  E_coul = 54.20269803737831
  HOMO = -0.789380306547621  LUMO = 2.52251044332081
  mo_energy =
[-3.27272701e+01 -1.90324540e+00 -7.89380307e-01 -7.89380307e-01
 -7.89380307e-01  2.52251044e+00  2.52251044e+00  2.52251044e+00
  2.65082452e+00  1.85774202e+01  1.85774202e+01  1.85774202e+01
  4.45555152e+01  3.30281480e+02  1.97385302e+03  7.16792823e+03]
E1 = -182.40270863516915  E_coul = 54.20269783333717
Extra cycle  E= -128.200010801832  delta_E= -5.12e-13  |g|= 2.87e-07  |ddm|= 8.98e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.16735931e+03 2.24978885e+02 1.34878926e+03 5.66745103e-01
 4.94503704e+01 1.31444782e+01 1.89174264e+00 2.66733294e+00
 1.25058314e+01 5.85108497e-01]
E = -128.20001080183198
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2167.35930722        1
[INPUT] 0    0    [1    /1   ]  224.978884931        1
[INPUT] 0    0    [1    /1   ]  1348.78925595        1
[INPUT] 0    0    [1    /1   ]  0.566745102805       1
[INPUT] 0    0    [1    /1   ]  49.4503704166        1
[INPUT] 0    0    [1    /1   ]  13.144478226         1
[INPUT] 0    0    [1    /1   ]  1.8917426406         1
[INPUT] 1    0    [1    /1   ]  2.66733294201        1
[INPUT] 1    0    [1    /1   ]  12.5058314413        1
[INPUT] 1    0    [1    /1   ]  0.585108497048       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2167.3593072159842, 1.0]], [0, [224.97888493107664, 1.0]], [0, [1348.7892559547527, 1.0]], [0, [0.5667451028048004, 1.0]], [0, [49.45037041656291, 1.0]], [0, [13.144478225978888, 1.0]], [0, [1.8917426406014357, 1.0]], [1, [2.667332942011284, 1.0]], [1, [12.505831441327151, 1.0]], [1, [0.5851084970482685, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2167.35930722]
bas 1, expnt(s) = [224.97888493]
bas 2, expnt(s) = [1348.78925595]
bas 3, expnt(s) = [0.5667451]
bas 4, expnt(s) = [49.45037042]
bas 5, expnt(s) = [13.14447823]
bas 6, expnt(s) = [1.89174264]
bas 7, expnt(s) = [2.66733294]
bas 8, expnt(s) = [12.50583144]
bas 9, expnt(s) = [0.5851085]
CPU time:       155.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.16735931e+03 8.02533575e+02 2.24978885e+02 1.46764610e+02
 1.34878926e+03 5.62306492e+02 5.66745103e-01 1.65027324e+00
 4.94503704e+01 4.71131548e+01 1.31444782e+01 1.74410464e+01
 1.89174264e+00 4.07531858e+00 2.66733294e+00 9.94445366e+00
 1.25058314e+01 6.86080548e+01 5.85108497e-01 1.49289718e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.968903344857832
cond(S) = 123.13662547697254
E1 = -183.13719743336748  E_coul = 55.00774006501315
init E= -128.129457368354
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74240511273697  LUMO = 2.55889233799077
  mo_energy =
[-3.25178180e+01 -1.85389571e+00 -7.42405113e-01 -7.42405113e-01
 -7.42405113e-01  2.55889234e+00  2.55889234e+00  2.55889234e+00
  2.68864856e+00  1.87168511e+01  1.87168511e+01  1.87168511e+01
  4.47342615e+01  3.30520247e+02  1.97413431e+03  7.16823232e+03]
E1 = -182.04570567517635  E_coul = 53.84791080595694
cycle= 1 E= -128.197794869219  delta_E= -0.0683  |g|= 0.174  |ddm|= 0.185
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.275658
diis-c [-0.07598748  1.        ]
  HOMO = -0.813753681659269  LUMO = 2.50113878947684
  mo_energy =
[-3.28067781e+01 -1.92845656e+00 -8.13753682e-01 -8.13753682e-01
 -8.13753682e-01  2.50113879e+00  2.50113879e+00  2.50113879e+00
  2.62970606e+00  1.85189485e+01  1.85189485e+01  1.85189485e+01
  4.44852929e+01  3.30194511e+02  1.97376024e+03  7.16783380e+03]
E1 = -182.54597455161345  E_coul = 54.34632363302086
cycle= 2 E= -128.199650918593  delta_E= -0.00186  |g|= 0.0675  |ddm|= 0.0694
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.110578
diis-c [-4.03547110e-04  2.83419981e-01  7.16580019e-01]
  HOMO = -0.789242716641472  LUMO = 2.52259404091671
  mo_energy =
[-3.27268738e+01 -1.90299880e+00 -7.89242717e-01 -7.89242717e-01
 -7.89242717e-01  2.52259404e+00  2.52259404e+00  2.52259404e+00
  2.65100898e+00  1.85777228e+01  1.85777228e+01  1.85777228e+01
  4.45559075e+01  3.30281670e+02  1.97385303e+03  7.16792818e+03]
E1 = -182.40189607367412  E_coul = 54.20188529843665
cycle= 3 E= -128.200010775237  delta_E= -0.00036  |g|= 0.000597  |ddm|= 0.0197
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000641179
diis-c [-1.30605986e-07 -4.32921757e-03 -6.44252749e-03  1.01077175e+00]
  HOMO = -0.78939881059035  LUMO = 2.52249509214849
  mo_energy =
[-3.27273170e+01 -1.90324664e+00 -7.89398811e-01 -7.89398811e-01
 -7.89398811e-01  2.52249509e+00  2.52249509e+00  2.52249509e+00
  2.65082466e+00  1.85773849e+01  1.85773849e+01  1.85773849e+01
  4.45554779e+01  3.30281414e+02  1.97385294e+03  7.16792813e+03]
E1 = -182.40278804623173  E_coul = 54.20277724495079
cycle= 4 E= -128.200010801281  delta_E= -2.6e-08  |g|= 6.78e-05  |ddm|= 0.000265
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000105731
diis-c [-2.87344856e-10  5.53223903e-04 -3.23122985e-04 -1.83467767e-01
  1.18323767e+00]
  HOMO = -0.789380386785259  LUMO = 2.52251034688936
  mo_energy =
[-3.27272702e+01 -1.90324510e+00 -7.89380387e-01 -7.89380387e-01
 -7.89380387e-01  2.52251035e+00  2.52251035e+00  2.52251035e+00
  2.65082477e+00  1.85774202e+01  1.85774202e+01  1.85774202e+01
  4.45555152e+01  3.30281480e+02  1.97385302e+03  7.16792823e+03]
E1 = -182.4027088392098  E_coul = 54.20269803737831
cycle= 5 E= -128.200010801831  delta_E= -5.51e-10  |g|= 1.55e-06  |ddm|= 3.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.4027088392098  E_coul = 54.20269803737831
  HOMO = -0.789380306547621  LUMO = 2.52251044332081
  mo_energy =
[-3.27272701e+01 -1.90324540e+00 -7.89380307e-01 -7.89380307e-01
 -7.89380307e-01  2.52251044e+00  2.52251044e+00  2.52251044e+00
  2.65082452e+00  1.85774202e+01  1.85774202e+01  1.85774202e+01
  4.45555152e+01  3.30281480e+02  1.97385302e+03  7.16792823e+03]
E1 = -182.40270863516915  E_coul = 54.20269783333717
Extra cycle  E= -128.200010801832  delta_E= -5.12e-13  |g|= 2.87e-07  |ddm|= 8.98e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 123.13662547697254
E1 = -182.40270863516915  E_coul = 54.20269783333717
init E= -128.200010801832
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.78938030563567  LUMO = 2.52251044234151
  mo_energy =
[-3.27272701e+01 -1.90324547e+00 -7.89380306e-01 -7.89380306e-01
 -7.89380306e-01  2.52251044e+00  2.52251044e+00  2.52251044e+00
  2.65082446e+00  1.85774202e+01  1.85774202e+01  1.85774202e+01
  4.45555152e+01  3.30281480e+02  1.97385302e+03  7.16792823e+03]
E1 = -182.40270872056013  E_coul = 54.20269791872828
cycle= 1 E= -128.200010801832  delta_E= 1.42e-13  |g|= 5.25e-08  |ddm|= 1.68e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.40270872056013  E_coul = 54.20269791872828
  HOMO = -0.789380296880764  LUMO = 2.52251044969962
  mo_energy =
[-3.27272701e+01 -1.90324547e+00 -7.89380297e-01 -7.89380297e-01
 -7.89380297e-01  2.52251045e+00  2.52251045e+00  2.52251045e+00
  2.65082446e+00  1.85774202e+01  1.85774202e+01  1.85774202e+01
  4.45555152e+01  3.30281480e+02  1.97385302e+03  7.16792823e+03]
E1 = -182.40270868764244  E_coul = 54.20269788581065
Extra cycle  E= -128.200010801832  delta_E= 2.84e-14  |g|= 1.09e-08  |ddm|= 2.84e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.16735931e+03 2.24978885e+02 1.34878926e+03 5.66745103e-01
 4.94503704e+01 1.31444782e+01 1.89174264e+00 2.66733294e+00
 1.25058314e+01 5.85108497e-01]
grad_E = [-1.31183668e-05  1.11541329e-04  3.64917143e-05  5.29891222e-04
 -4.76168912e-04 -1.86220309e-05 -1.19628421e-03  3.42788374e-03
 -4.31800886e-03  2.33523474e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2212.70714486        1
[INPUT] 0    0    [1    /1   ]  218.411917789        1
[INPUT] 0    0    [1    /1   ]  1192.96137427        1
[INPUT] 0    0    [1    /1   ]  0.555280488645       1
[INPUT] 0    0    [1    /1   ]  48.3491166997        1
[INPUT] 0    0    [1    /1   ]  12.9435674929        1
[INPUT] 0    0    [1    /1   ]  1.84692369358        1
[INPUT] 1    0    [1    /1   ]  2.56833908342        1
[INPUT] 1    0    [1    /1   ]  11.7884793181        1
[INPUT] 1    0    [1    /1   ]  0.571071489416       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2212.707144864302, 1.0]], [0, [218.41191778894338, 1.0]], [0, [1192.9613742719557, 1.0]], [0, [0.5552804886447151, 1.0]], [0, [48.349116699721144, 1.0]], [0, [12.94356749285602, 1.0]], [0, [1.8469236935774789, 1.0]], [1, [2.5683390834187265, 1.0]], [1, [11.788479318089292, 1.0]], [1, [0.5710714894164552, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2212.70714486]
bas 1, expnt(s) = [218.41191779]
bas 2, expnt(s) = [1192.96137427]
bas 3, expnt(s) = [0.55528049]
bas 4, expnt(s) = [48.3491167]
bas 5, expnt(s) = [12.94356749]
bas 6, expnt(s) = [1.84692369]
bas 7, expnt(s) = [2.56833908]
bas 8, expnt(s) = [11.78847932]
bas 9, expnt(s) = [0.57107149]
CPU time:       158.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.21270714e+03 8.15094529e+02 2.18411918e+02 1.43539779e+02
 1.19296137e+03 5.12843447e+02 5.55280489e-01 1.62517201e+00
 4.83491167e+01 4.63240405e+01 1.29435675e+01 1.72407248e+01
 1.84692369e+00 4.00268800e+00 2.56833908e+00 9.48527318e+00
 1.17884793e+01 6.37245276e+01 5.71071489e-01 1.44826318e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.971742386904767
cond(S) = 81.82089677592855
E1 = -183.1365732094975  E_coul = 55.00157128837335
init E= -128.135001921124
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.741596573127483  LUMO = 2.47075533859785
  mo_energy =
[-3.25246120e+01 -1.85443757e+00 -7.41596573e-01 -7.41596573e-01
 -7.41596573e-01  2.47075534e+00  2.47075534e+00  2.47075534e+00
  2.59004791e+00  1.76445866e+01  1.76445866e+01  1.76445866e+01
  4.34208771e+01  3.19923628e+02  1.85641129e+03  6.84839945e+03]
E1 = -181.9588323998565  E_coul = 53.75828759323766
cycle= 1 E= -128.200544806619  delta_E= -0.0655  |g|= 0.184  |ddm|= 0.189
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.290816
diis-c [-0.08457378  1.        ]
  HOMO = -0.819207371558137  LUMO = 2.40958765368798
  mo_energy =
[-3.28291669e+01 -1.93610917e+00 -8.19207372e-01 -8.19207372e-01
 -8.19207372e-01  2.40958765e+00  2.40958765e+00  2.40958765e+00
  2.52704093e+00  1.74396027e+01  1.74396027e+01  1.74396027e+01
  4.31594669e+01  3.19583219e+02  1.85602302e+03  6.84798613e+03]
E1 = -182.4973593421092  E_coul = 54.29472000059654
cycle= 2 E= -128.202639341513  delta_E= -0.00209  |g|= 0.0725  |ddm|= 0.0745
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.119349
diis-c [-3.81915609e-04  2.88647455e-01  7.11352545e-01]
  HOMO = -0.792934828353459  LUMO = 2.4318607002395
  mo_energy =
[-3.27441311e+01 -1.90880208e+00 -7.92934828e-01 -7.92934828e-01
 -7.92934828e-01  2.43186070e+00  2.43186070e+00  2.43186070e+00
  2.54926240e+00  1.75009203e+01  1.75009203e+01  1.75009203e+01
  4.32342793e+01  3.19675600e+02  1.85612131e+03  6.84808620e+03]
E1 = -182.34134687178414  E_coul = 54.13828800110567
cycle= 3 E= -128.203058870678  delta_E= -0.00042  |g|= 0.000561  |ddm|= 0.0212
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000560189
diis-c [-2.03606913e-07 -5.02156112e-03 -1.15882883e-02  1.01660985e+00]
  HOMO = -0.79300583875129  LUMO = 2.43184198130822
  mo_energy =
[-3.27443299e+01 -1.90898779e+00 -7.93005839e-01 -7.93005839e-01
 -7.93005839e-01  2.43184198e+00  2.43184198e+00  2.43184198e+00
  2.54913739e+00  1.75007752e+01  1.75007752e+01  1.75007752e+01
  4.32340638e+01  3.19675618e+02  1.85612152e+03  6.84808647e+03]
E1 = -182.34179079811202  E_coul = 54.13873190036824
cycle= 4 E= -128.203058897744  delta_E= -2.71e-08  |g|= 8.53e-05  |ddm|= 0.000284
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000130954
diis-c [-4.08957001e-10  5.99842225e-04  3.07275704e-04 -1.90658738e-01
  1.18975162e+00]
  HOMO = -0.792983429679201  LUMO = 2.43185971075151
  mo_energy =
[-3.27442738e+01 -1.90898744e+00 -7.92983430e-01 -7.92983430e-01
 -7.92983430e-01  2.43185971e+00  2.43185971e+00  2.43185971e+00
  2.54913596e+00  1.75008166e+01  1.75008166e+01  1.75008166e+01
  4.32341076e+01  3.19675696e+02  1.85612162e+03  6.84808658e+03]
E1 = -182.34169547294437  E_coul = 54.13863657429638
cycle= 5 E= -128.203058898648  delta_E= -9.04e-10  |g|= 1.63e-06  |ddm|= 4.86e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.34169547294437  E_coul = 54.13863657429638
  HOMO = -0.792983302643263  LUMO = 2.43185986118914
  mo_energy =
[-3.27442736e+01 -1.90898770e+00 -7.92983303e-01 -7.92983303e-01
 -7.92983303e-01  2.43185986e+00  2.43185986e+00  2.43185986e+00
  2.54913576e+00  1.75008168e+01  1.75008168e+01  1.75008168e+01
  4.32341077e+01  3.19675696e+02  1.85612162e+03  6.84808658e+03]
E1 = -182.34169493331112  E_coul = 54.13863603466284
Extra cycle  E= -128.203058898648  delta_E= -3.13e-13  |g|= 3.11e-07  |ddm|= 9.35e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.21270714e+03 2.18411918e+02 1.19296137e+03 5.55280489e-01
 4.83491167e+01 1.29435675e+01 1.84692369e+00 2.56833908e+00
 1.17884793e+01 5.71071489e-01]
E = -128.2030588986483
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2212.70714486        1
[INPUT] 0    0    [1    /1   ]  218.411917789        1
[INPUT] 0    0    [1    /1   ]  1192.96137427        1
[INPUT] 0    0    [1    /1   ]  0.555280488645       1
[INPUT] 0    0    [1    /1   ]  48.3491166997        1
[INPUT] 0    0    [1    /1   ]  12.9435674929        1
[INPUT] 0    0    [1    /1   ]  1.84692369358        1
[INPUT] 1    0    [1    /1   ]  2.56833908342        1
[INPUT] 1    0    [1    /1   ]  11.7884793181        1
[INPUT] 1    0    [1    /1   ]  0.571071489416       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2212.707144864302, 1.0]], [0, [218.41191778894338, 1.0]], [0, [1192.9613742719557, 1.0]], [0, [0.5552804886447151, 1.0]], [0, [48.349116699721144, 1.0]], [0, [12.94356749285602, 1.0]], [0, [1.8469236935774789, 1.0]], [1, [2.5683390834187265, 1.0]], [1, [11.788479318089292, 1.0]], [1, [0.5710714894164552, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2212.70714486]
bas 1, expnt(s) = [218.41191779]
bas 2, expnt(s) = [1192.96137427]
bas 3, expnt(s) = [0.55528049]
bas 4, expnt(s) = [48.3491167]
bas 5, expnt(s) = [12.94356749]
bas 6, expnt(s) = [1.84692369]
bas 7, expnt(s) = [2.56833908]
bas 8, expnt(s) = [11.78847932]
bas 9, expnt(s) = [0.57107149]
CPU time:       158.92
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.21270714e+03 8.15094529e+02 2.18411918e+02 1.43539779e+02
 1.19296137e+03 5.12843447e+02 5.55280489e-01 1.62517201e+00
 4.83491167e+01 4.63240405e+01 1.29435675e+01 1.72407248e+01
 1.84692369e+00 4.00268800e+00 2.56833908e+00 9.48527318e+00
 1.17884793e+01 6.37245276e+01 5.71071489e-01 1.44826318e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.971742386904767
cond(S) = 81.82089677592855
E1 = -183.1365732094975  E_coul = 55.00157128837335
init E= -128.135001921124
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.741596573127483  LUMO = 2.47075533859785
  mo_energy =
[-3.25246120e+01 -1.85443757e+00 -7.41596573e-01 -7.41596573e-01
 -7.41596573e-01  2.47075534e+00  2.47075534e+00  2.47075534e+00
  2.59004791e+00  1.76445866e+01  1.76445866e+01  1.76445866e+01
  4.34208771e+01  3.19923628e+02  1.85641129e+03  6.84839945e+03]
E1 = -181.9588323998565  E_coul = 53.75828759323766
cycle= 1 E= -128.200544806619  delta_E= -0.0655  |g|= 0.184  |ddm|= 0.189
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.290816
diis-c [-0.08457378  1.        ]
  HOMO = -0.819207371558137  LUMO = 2.40958765368798
  mo_energy =
[-3.28291669e+01 -1.93610917e+00 -8.19207372e-01 -8.19207372e-01
 -8.19207372e-01  2.40958765e+00  2.40958765e+00  2.40958765e+00
  2.52704093e+00  1.74396027e+01  1.74396027e+01  1.74396027e+01
  4.31594669e+01  3.19583219e+02  1.85602302e+03  6.84798613e+03]
E1 = -182.4973593421092  E_coul = 54.29472000059654
cycle= 2 E= -128.202639341513  delta_E= -0.00209  |g|= 0.0725  |ddm|= 0.0745
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.119349
diis-c [-3.81915609e-04  2.88647455e-01  7.11352545e-01]
  HOMO = -0.792934828353459  LUMO = 2.4318607002395
  mo_energy =
[-3.27441311e+01 -1.90880208e+00 -7.92934828e-01 -7.92934828e-01
 -7.92934828e-01  2.43186070e+00  2.43186070e+00  2.43186070e+00
  2.54926240e+00  1.75009203e+01  1.75009203e+01  1.75009203e+01
  4.32342793e+01  3.19675600e+02  1.85612131e+03  6.84808620e+03]
E1 = -182.34134687178414  E_coul = 54.13828800110567
cycle= 3 E= -128.203058870678  delta_E= -0.00042  |g|= 0.000561  |ddm|= 0.0212
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000560189
diis-c [-2.03606913e-07 -5.02156112e-03 -1.15882883e-02  1.01660985e+00]
  HOMO = -0.79300583875129  LUMO = 2.43184198130822
  mo_energy =
[-3.27443299e+01 -1.90898779e+00 -7.93005839e-01 -7.93005839e-01
 -7.93005839e-01  2.43184198e+00  2.43184198e+00  2.43184198e+00
  2.54913739e+00  1.75007752e+01  1.75007752e+01  1.75007752e+01
  4.32340638e+01  3.19675618e+02  1.85612152e+03  6.84808647e+03]
E1 = -182.34179079811202  E_coul = 54.13873190036824
cycle= 4 E= -128.203058897744  delta_E= -2.71e-08  |g|= 8.53e-05  |ddm|= 0.000284
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000130954
diis-c [-4.08957001e-10  5.99842225e-04  3.07275704e-04 -1.90658738e-01
  1.18975162e+00]
  HOMO = -0.792983429679201  LUMO = 2.43185971075151
  mo_energy =
[-3.27442738e+01 -1.90898744e+00 -7.92983430e-01 -7.92983430e-01
 -7.92983430e-01  2.43185971e+00  2.43185971e+00  2.43185971e+00
  2.54913596e+00  1.75008166e+01  1.75008166e+01  1.75008166e+01
  4.32341076e+01  3.19675696e+02  1.85612162e+03  6.84808658e+03]
E1 = -182.34169547294437  E_coul = 54.13863657429638
cycle= 5 E= -128.203058898648  delta_E= -9.04e-10  |g|= 1.63e-06  |ddm|= 4.86e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.34169547294437  E_coul = 54.13863657429638
  HOMO = -0.792983302643263  LUMO = 2.43185986118914
  mo_energy =
[-3.27442736e+01 -1.90898770e+00 -7.92983303e-01 -7.92983303e-01
 -7.92983303e-01  2.43185986e+00  2.43185986e+00  2.43185986e+00
  2.54913576e+00  1.75008168e+01  1.75008168e+01  1.75008168e+01
  4.32341077e+01  3.19675696e+02  1.85612162e+03  6.84808658e+03]
E1 = -182.34169493331112  E_coul = 54.13863603466284
Extra cycle  E= -128.203058898648  delta_E= -3.13e-13  |g|= 3.11e-07  |ddm|= 9.35e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 81.82089677592855
E1 = -182.34169493331112  E_coul = 54.13863603466284
init E= -128.203058898648
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.792983324351573  LUMO = 2.43185984071658
  mo_energy =
[-3.27442737e+01 -1.90898780e+00 -7.92983324e-01 -7.92983324e-01
 -7.92983324e-01  2.43185984e+00  2.43185984e+00  2.43185984e+00
  2.54913568e+00  1.75008167e+01  1.75008167e+01  1.75008167e+01
  4.32341076e+01  3.19675696e+02  1.85612162e+03  6.84808658e+03]
E1 = -182.34169515463137  E_coul = 54.13863625598316
cycle= 1 E= -128.203058898648  delta_E= 8.53e-14  |g|= 6.05e-08  |ddm|= 1.87e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.34169515463137  E_coul = 54.13863625598316
  HOMO = -0.792983306086197  LUMO = 2.4318598558444
  mo_energy =
[-3.27442736e+01 -1.90898780e+00 -7.92983306e-01 -7.92983306e-01
 -7.92983306e-01  2.43185986e+00  2.43185986e+00  2.43185986e+00
  2.54913568e+00  1.75008167e+01  1.75008167e+01  1.75008167e+01
  4.32341076e+01  3.19675696e+02  1.85612162e+03  6.84808658e+03]
E1 = -182.3416950655884  E_coul = 54.13863616694009
Extra cycle  E= -128.203058898648  delta_E= -8.53e-14  |g|= 1.65e-08  |ddm|= 2.98e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.21270714e+03 2.18411918e+02 1.19296137e+03 5.55280489e-01
 4.83491167e+01 1.29435675e+01 1.84692369e+00 2.56833908e+00
 1.17884793e+01 5.71071489e-01]
grad_E = [-1.88582967e-05  2.61105727e-04  4.29050225e-05  1.48522051e-03
 -1.09192829e-03  1.68986260e-04 -2.76881853e-03  7.90221449e-03
 -9.18481399e-03  4.31196122e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:37:59 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2377.53408962        1
[INPUT] 0    0    [1    /1   ]  190.384156032        1
[INPUT] 0    0    [1    /1   ]  626.910498984        1
[INPUT] 0    0    [1    /1   ]  0.516852336403       1
[INPUT] 0    0    [1    /1   ]  44.0186522222        1
[INPUT] 0    0    [1    /1   ]  12.1880972109        1
[INPUT] 0    0    [1    /1   ]  1.70356502098        1
[INPUT] 1    0    [1    /1   ]  2.28775664211        1
[INPUT] 1    0    [1    /1   ]  9.81112610235        1
[INPUT] 1    0    [1    /1   ]  0.531064921227       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2377.5340896156767, 1.0]], [0, [190.3841560315261, 1.0]], [0, [626.9104989842776, 1.0]], [0, [0.516852336402563, 1.0]], [0, [44.018652222211536, 1.0]], [0, [12.18809721092013, 1.0]], [0, [1.7035650209765478, 1.0]], [1, [2.2877566421122704, 1.0]], [1, [9.8111261023482, 1.0]], [1, [0.531064921227151, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2377.53408962]
bas 1, expnt(s) = [190.38415603]
bas 2, expnt(s) = [626.91049898]
bas 3, expnt(s) = [0.51685234]
bas 4, expnt(s) = [44.01865222]
bas 5, expnt(s) = [12.18809721]
bas 6, expnt(s) = [1.70356502]
bas 7, expnt(s) = [2.28775664]
bas 8, expnt(s) = [9.8111261]
bas 9, expnt(s) = [0.53106492]
CPU time:       161.41
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.37753409e+03 8.60221096e+02 1.90384156e+02 1.29490565e+02
 6.26910499e+02 3.16533137e+02 5.16852336e-01 1.54006796e+00
 4.40186522e+01 4.31760174e+01 1.21880972e+01 1.64803699e+01
 1.70356502e+00 3.76733343e+00 2.28775664e+00 8.20817626e+00
 9.81112610e+00 5.06562416e+01 5.31064921e-01 1.32257075e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.978470442778889
cond(S) = 59.09567935908434
E1 = -183.07927896736552  E_coul = 54.96146969356071
init E= -128.117809273805
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.736785684786136  LUMO = 2.22871913672984
  mo_energy =
[-3.25551961e+01 -1.85698850e+00 -7.36785685e-01 -7.36785685e-01
 -7.36785685e-01  2.22871914e+00  2.22871914e+00  2.22871914e+00
  2.27765816e+00  1.47659501e+01  1.47659501e+01  1.47659501e+01
  3.84883073e+01  2.74510302e+02  1.29615321e+03  5.46432080e+03]
E1 = -181.65040669501855  E_coul = 53.45578511732146
cycle= 1 E= -128.194621577697  delta_E= -0.0768  |g|= 0.215  |ddm|= 0.205
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.340662
diis-c [-0.11605071  1.        ]
  HOMO = -0.833784569615768  LUMO = 2.15844322492057
  mo_energy =
[-3.29096184e+01 -1.96101200e+00 -8.33784570e-01 -8.33784570e-01
 -8.33784570e-01  2.15844322e+00  2.15844322e+00  2.15844322e+00
  2.20434274e+00  1.45415622e+01  1.45415622e+01  1.45415622e+01
  3.81903760e+01  2.74126027e+02  1.29572560e+03  5.46386299e+03]
E1 = -182.3132604610169  E_coul = 54.11567277871908
cycle= 2 E= -128.197587682298  delta_E= -0.00297  |g|= 0.0883  |ddm|= 0.0912
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.147757
diis-c [-3.09346434e-04  3.01298953e-01  6.98701047e-01]
  HOMO = -0.80174373951934  LUMO = 2.18310176920328
  mo_energy =
[-3.28080610e+01 -1.92762712e+00 -8.01743740e-01 -8.01743740e-01
 -8.01743740e-01  2.18310177e+00  2.18310177e+00  2.18310177e+00
  2.22896829e+00  1.46101273e+01  1.46101273e+01  1.46101273e+01
  3.82779151e+01  2.74234570e+02  1.29584083e+03  5.46398123e+03]
E1 = -182.11831497012452  E_coul = 53.92008255673914
cycle= 3 E= -128.198232413385  delta_E= -0.000645  |g|= 0.00103  |ddm|= 0.0259
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00155367
diis-c [-6.58766063e-07 -9.19701452e-03 -2.94834541e-02  1.03868047e+00]
  HOMO = -0.801545383335459  LUMO = 2.18331064578107
  mo_energy =
[-3.28075370e+01 -1.92764240e+00 -8.01545383e-01 -8.01545383e-01
 -8.01545383e-01  2.18331065e+00  2.18331065e+00  2.18331065e+00
  2.22899469e+00  1.46105248e+01  1.46105248e+01  1.46105248e+01
  3.82783131e+01  2.74235389e+02  1.29584193e+03  5.46398250e+03]
E1 = -182.11734957959985  E_coul = 53.919117045939906
cycle= 4 E= -128.19823253366  delta_E= -1.2e-07  |g|= 0.000148  |ddm|= 0.000494
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000217421
diis-c [-1.56207564e-09  7.02289828e-04  1.86284546e-03 -1.91550773e-01
  1.18898564e+00]
  HOMO = -0.801509834230729  LUMO = 2.18333458991935
  mo_energy =
[-3.28074522e+01 -1.92764866e+00 -8.01509834e-01 -8.01509834e-01
 -8.01509834e-01  2.18333459e+00  2.18333459e+00  2.18333459e+00
  2.22898564e+00  1.46105825e+01  1.46105825e+01  1.46105825e+01
  3.82783733e+01  2.74235505e+02  1.29584209e+03  5.46398268e+03]
E1 = -182.11720712998368  E_coul = 53.91897459329257
cycle= 5 E= -128.198232536691  delta_E= -3.03e-09  |g|= 2.4e-06  |ddm|= 9.6e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.09312e-06
diis-c [-2.28462800e-13 -1.30542438e-05 -3.03712419e-05  6.17419343e-03
 -5.46350975e-02  1.04850433e+00]
  HOMO = -0.801509555316679  LUMO = 2.18333490557602
  mo_energy =
[-3.28074517e+01 -1.92764907e+00 -8.01509555e-01 -8.01509555e-01
 -8.01509555e-01  2.18333491e+00  2.18333491e+00  2.18333491e+00
  2.22898537e+00  1.46105829e+01  1.46105829e+01  1.46105829e+01
  3.82783736e+01  2.74235505e+02  1.29584209e+03  5.46398268e+03]
E1 = -182.11720569950393  E_coul = 53.91897316281196
cycle= 6 E= -128.198232536692  delta_E= -8.53e-13  |g|= 7.78e-08  |ddm|= 1.72e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.11720569950393  E_coul = 53.91897316281196
  HOMO = -0.801509599474124  LUMO = 2.18333486940389
  mo_energy =
[-3.28074518e+01 -1.92764912e+00 -8.01509599e-01 -8.01509599e-01
 -8.01509599e-01  2.18333487e+00  2.18333487e+00  2.18333487e+00
  2.22898534e+00  1.46105829e+01  1.46105829e+01  1.46105829e+01
  3.82783735e+01  2.74235505e+02  1.29584209e+03  5.46398268e+03]
E1 = -182.11720593678083  E_coul = 53.918973400089
Extra cycle  E= -128.198232536692  delta_E= 1.42e-13  |g|= 3.2e-08  |ddm|= 2.99e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.37753409e+03 1.90384156e+02 6.26910499e+02 5.16852336e-01
 4.40186522e+01 1.21880972e+01 1.70356502e+00 2.28775664e+00
 9.81112610e+00 5.31064921e-01]
E = -128.19823253669182
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2273.99333053        1
[INPUT] 0    0    [1    /1   ]  207.990596121        1
[INPUT] 0    0    [1    /1   ]  982.491544299        1
[INPUT] 0    0    [1    /1   ]  0.540992079207       1
[INPUT] 0    0    [1    /1   ]  46.738957327         1
[INPUT] 0    0    [1    /1   ]  12.6626674736        1
[INPUT] 0    0    [1    /1   ]  1.79361987096        1
[INPUT] 1    0    [1    /1   ]  2.46401252676        1
[INPUT] 1    0    [1    /1   ]  11.0532570734        1
[INPUT] 1    0    [1    /1   ]  0.556196191149       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2273.9933305258046, 1.0]], [0, [207.99059612134567, 1.0]], [0, [982.4915442992852, 1.0]], [0, [0.5409920792072079, 1.0]], [0, [46.738957326995276, 1.0]], [0, [12.662667473564214, 1.0]], [0, [1.7936198709624334, 1.0]], [1, [2.464012526755292, 1.0]], [1, [11.053257073443113, 1.0]], [1, [0.5561961911487622, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2273.99333053]
bas 1, expnt(s) = [207.99059612]
bas 2, expnt(s) = [982.4915443]
bas 3, expnt(s) = [0.54099208]
bas 4, expnt(s) = [46.73895733]
bas 5, expnt(s) = [12.66266747]
bas 6, expnt(s) = [1.79361987]
bas 7, expnt(s) = [2.46401253]
bas 8, expnt(s) = [11.05325707]
bas 9, expnt(s) = [0.55619619]
CPU time:       162.24
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.27399333e+03 8.31968559e+02 2.07990596e+02 1.38371866e+02
 9.82491544e+02 4.43365239e+02 5.40992079e-01 1.59370599e+00
 4.67389573e+01 4.51621167e+01 1.26626675e+01 1.69593392e+01
 1.79361987e+00 3.91573082e+00 2.46401253e+00 9.00612627e+00
 1.10532571e+01 5.87959255e+01 5.56196191e-01 1.40126220e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.974523208612633
cond(S) = 59.05418805024528
E1 = -183.1325444003608  E_coul = 54.991496545357485
init E= -128.141047855003
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.740319765978334  LUMO = 2.37905750574047
  mo_energy =
[-3.25352930e+01 -1.85527881e+00 -7.40319766e-01 -7.40319766e-01
 -7.40319766e-01  2.37905751e+00  2.37905751e+00  2.37905751e+00
  2.47172660e+00  1.65555573e+01  1.65555573e+01  1.65555573e+01
  4.16007564e+01  3.03705399e+02  1.67085383e+03  6.37389723e+03]
E1 = -181.86058702189808  E_coul = 53.65581070872772
cycle= 1 E= -128.20477631317  delta_E= -0.0637  |g|= 0.194  |ddm|= 0.193
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.307809
diis-c [-0.09474617  1.        ]
  HOMO = -0.824806910306632  LUMO = 2.31442033337175
  mo_energy =
[-3.28573013e+01 -1.94479047e+00 -8.24806910e-01 -8.24806910e-01
 -8.24806910e-01  2.31442033e+00  2.31442033e+00  2.31442033e+00
  2.40488452e+00  1.63431604e+01  1.63431604e+01  1.63431604e+01
  4.13263109e+01  3.03349348e+02  1.67045109e+03  6.37346837e+03]
E1 = -182.44240242961826  E_coul = 54.235246024615634
cycle= 2 E= -128.207156405003  delta_E= -0.00238  |g|= 0.078  |ddm|= 0.0803
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.129258
diis-c [-3.38305908e-04  2.93985402e-01  7.06014598e-01]
  HOMO = -0.796543270938495  LUMO = 2.33755694316309
  mo_energy =
[-3.27665268e+01 -1.91539172e+00 -7.96543271e-01 -7.96543271e-01
 -7.96543271e-01  2.33755694e+00  2.33755694e+00  2.33755694e+00
  2.42797671e+00  1.64071687e+01  1.64071687e+01  1.64071687e+01
  4.14056022e+01  3.03447422e+02  1.67055541e+03  6.37357477e+03]
E1 = -182.27291290773226  E_coul = 54.06526408513007
cycle= 3 E= -128.207648822602  delta_E= -0.000492  |g|= 0.000648  |ddm|= 0.0228
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000815687
diis-c [-3.13830573e-07 -6.28296261e-03 -1.82663610e-02  1.02454932e+00]
  HOMO = -0.796508630996509  LUMO = 2.33763157281065
  mo_energy =
[-3.27664282e+01 -1.91550057e+00 -7.96508631e-01 -7.96508631e-01
 -7.96508631e-01  2.33763157e+00  2.33763157e+00  2.33763157e+00
  2.42792106e+00  1.64072505e+01  1.64072505e+01  1.64072505e+01
  4.14056442e+01  3.03447769e+02  1.67055599e+03  6.37357543e+03]
E1 = -182.2727924417796  E_coul = 54.06514357597768
cycle= 4 E= -128.207648865802  delta_E= -4.32e-08  |g|= 0.000106  |ddm|= 0.000331
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000159435
diis-c [-6.43425158e-10  6.62583151e-04  1.06728283e-03 -1.94098438e-01
  1.19236857e+00]
  HOMO = -0.796481764749029  LUMO = 2.3376516834078
  mo_energy =
[-3.27663622e+01 -1.91550199e+00 -7.96481765e-01 -7.96481765e-01
 -7.96481765e-01  2.33765168e+00  2.33765168e+00  2.33765168e+00
  2.42791746e+00  1.64072979e+01  1.64072979e+01  1.64072979e+01
  4.14056940e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.27268033343356  E_coul = 54.0650314661913
cycle= 5 E= -128.207648867242  delta_E= -1.44e-09  |g|= 1.8e-06  |ddm|= 6.32e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.20446e-06
diis-c [-1.05731445e-13 -1.89024098e-05 -1.74762956e-05  7.24875948e-03
 -6.16088502e-02  1.05439647e+00]
  HOMO = -0.796481576423924  LUMO = 2.33765190460515
  mo_energy =
[-3.27663619e+01 -1.91550233e+00 -7.96481576e-01 -7.96481576e-01
 -7.96481576e-01  2.33765190e+00  2.33765190e+00  2.33765190e+00
  2.42791722e+00  1.64072982e+01  1.64072982e+01  1.64072982e+01
  4.14056942e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.2726794988265  E_coul = 54.06503063158386
cycle= 6 E= -128.207648867243  delta_E= -3.98e-13  |g|= 5.32e-08  |ddm|= 1.27e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2726794988265  E_coul = 54.06503063158386
  HOMO = -0.796481605920303  LUMO = 2.33765187840086
  mo_energy =
[-3.27663619e+01 -1.91550236e+00 -7.96481606e-01 -7.96481606e-01
 -7.96481606e-01  2.33765188e+00  2.33765188e+00  2.33765188e+00
  2.42791719e+00  1.64072981e+01  1.64072981e+01  1.64072981e+01
  4.14056942e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.27267965886003  E_coul = 54.06503079161734
Extra cycle  E= -128.207648867243  delta_E= -2.84e-14  |g|= 2.17e-08  |ddm|= 2.05e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.27399333e+03 2.07990596e+02 9.82491544e+02 5.40992079e-01
 4.67389573e+01 1.26626675e+01 1.79361987e+00 2.46401253e+00
 1.10532571e+01 5.56196191e-01]
E = -128.20764886724268
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2273.99333053        1
[INPUT] 0    0    [1    /1   ]  207.990596121        1
[INPUT] 0    0    [1    /1   ]  982.491544299        1
[INPUT] 0    0    [1    /1   ]  0.540992079207       1
[INPUT] 0    0    [1    /1   ]  46.738957327         1
[INPUT] 0    0    [1    /1   ]  12.6626674736        1
[INPUT] 0    0    [1    /1   ]  1.79361987096        1
[INPUT] 1    0    [1    /1   ]  2.46401252676        1
[INPUT] 1    0    [1    /1   ]  11.0532570734        1
[INPUT] 1    0    [1    /1   ]  0.556196191149       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2273.9933305258046, 1.0]], [0, [207.99059612134567, 1.0]], [0, [982.4915442992852, 1.0]], [0, [0.5409920792072079, 1.0]], [0, [46.738957326995276, 1.0]], [0, [12.662667473564214, 1.0]], [0, [1.7936198709624334, 1.0]], [1, [2.464012526755292, 1.0]], [1, [11.053257073443113, 1.0]], [1, [0.5561961911487622, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2273.99333053]
bas 1, expnt(s) = [207.99059612]
bas 2, expnt(s) = [982.4915443]
bas 3, expnt(s) = [0.54099208]
bas 4, expnt(s) = [46.73895733]
bas 5, expnt(s) = [12.66266747]
bas 6, expnt(s) = [1.79361987]
bas 7, expnt(s) = [2.46401253]
bas 8, expnt(s) = [11.05325707]
bas 9, expnt(s) = [0.55619619]
CPU time:       163.08
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.27399333e+03 8.31968559e+02 2.07990596e+02 1.38371866e+02
 9.82491544e+02 4.43365239e+02 5.40992079e-01 1.59370599e+00
 4.67389573e+01 4.51621167e+01 1.26626675e+01 1.69593392e+01
 1.79361987e+00 3.91573082e+00 2.46401253e+00 9.00612627e+00
 1.10532571e+01 5.87959255e+01 5.56196191e-01 1.40126220e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.974523208612633
cond(S) = 59.05418805024528
E1 = -183.1325444003608  E_coul = 54.991496545357485
init E= -128.141047855003
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.740319765978334  LUMO = 2.37905750574047
  mo_energy =
[-3.25352930e+01 -1.85527881e+00 -7.40319766e-01 -7.40319766e-01
 -7.40319766e-01  2.37905751e+00  2.37905751e+00  2.37905751e+00
  2.47172660e+00  1.65555573e+01  1.65555573e+01  1.65555573e+01
  4.16007564e+01  3.03705399e+02  1.67085383e+03  6.37389723e+03]
E1 = -181.86058702189808  E_coul = 53.65581070872772
cycle= 1 E= -128.20477631317  delta_E= -0.0637  |g|= 0.194  |ddm|= 0.193
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.307809
diis-c [-0.09474617  1.        ]
  HOMO = -0.824806910306632  LUMO = 2.31442033337175
  mo_energy =
[-3.28573013e+01 -1.94479047e+00 -8.24806910e-01 -8.24806910e-01
 -8.24806910e-01  2.31442033e+00  2.31442033e+00  2.31442033e+00
  2.40488452e+00  1.63431604e+01  1.63431604e+01  1.63431604e+01
  4.13263109e+01  3.03349348e+02  1.67045109e+03  6.37346837e+03]
E1 = -182.44240242961826  E_coul = 54.235246024615634
cycle= 2 E= -128.207156405003  delta_E= -0.00238  |g|= 0.078  |ddm|= 0.0803
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.129258
diis-c [-3.38305908e-04  2.93985402e-01  7.06014598e-01]
  HOMO = -0.796543270938495  LUMO = 2.33755694316309
  mo_energy =
[-3.27665268e+01 -1.91539172e+00 -7.96543271e-01 -7.96543271e-01
 -7.96543271e-01  2.33755694e+00  2.33755694e+00  2.33755694e+00
  2.42797671e+00  1.64071687e+01  1.64071687e+01  1.64071687e+01
  4.14056022e+01  3.03447422e+02  1.67055541e+03  6.37357477e+03]
E1 = -182.27291290773226  E_coul = 54.06526408513007
cycle= 3 E= -128.207648822602  delta_E= -0.000492  |g|= 0.000648  |ddm|= 0.0228
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000815687
diis-c [-3.13830573e-07 -6.28296261e-03 -1.82663610e-02  1.02454932e+00]
  HOMO = -0.796508630996509  LUMO = 2.33763157281065
  mo_energy =
[-3.27664282e+01 -1.91550057e+00 -7.96508631e-01 -7.96508631e-01
 -7.96508631e-01  2.33763157e+00  2.33763157e+00  2.33763157e+00
  2.42792106e+00  1.64072505e+01  1.64072505e+01  1.64072505e+01
  4.14056442e+01  3.03447769e+02  1.67055599e+03  6.37357543e+03]
E1 = -182.2727924417796  E_coul = 54.06514357597768
cycle= 4 E= -128.207648865802  delta_E= -4.32e-08  |g|= 0.000106  |ddm|= 0.000331
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000159435
diis-c [-6.43425158e-10  6.62583151e-04  1.06728283e-03 -1.94098438e-01
  1.19236857e+00]
  HOMO = -0.796481764749029  LUMO = 2.3376516834078
  mo_energy =
[-3.27663622e+01 -1.91550199e+00 -7.96481765e-01 -7.96481765e-01
 -7.96481765e-01  2.33765168e+00  2.33765168e+00  2.33765168e+00
  2.42791746e+00  1.64072979e+01  1.64072979e+01  1.64072979e+01
  4.14056940e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.27268033343356  E_coul = 54.0650314661913
cycle= 5 E= -128.207648867242  delta_E= -1.44e-09  |g|= 1.8e-06  |ddm|= 6.32e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.20446e-06
diis-c [-1.05731445e-13 -1.89024098e-05 -1.74762956e-05  7.24875948e-03
 -6.16088502e-02  1.05439647e+00]
  HOMO = -0.796481576423924  LUMO = 2.33765190460515
  mo_energy =
[-3.27663619e+01 -1.91550233e+00 -7.96481576e-01 -7.96481576e-01
 -7.96481576e-01  2.33765190e+00  2.33765190e+00  2.33765190e+00
  2.42791722e+00  1.64072982e+01  1.64072982e+01  1.64072982e+01
  4.14056942e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.2726794988265  E_coul = 54.06503063158386
cycle= 6 E= -128.207648867243  delta_E= -3.98e-13  |g|= 5.32e-08  |ddm|= 1.27e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2726794988265  E_coul = 54.06503063158386
  HOMO = -0.796481605920303  LUMO = 2.33765187840086
  mo_energy =
[-3.27663619e+01 -1.91550236e+00 -7.96481606e-01 -7.96481606e-01
 -7.96481606e-01  2.33765188e+00  2.33765188e+00  2.33765188e+00
  2.42791719e+00  1.64072981e+01  1.64072981e+01  1.64072981e+01
  4.14056942e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.27267965886003  E_coul = 54.06503079161734
Extra cycle  E= -128.207648867243  delta_E= -2.84e-14  |g|= 2.17e-08  |ddm|= 2.05e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 59.05418805024528
E1 = -182.27267965886003  E_coul = 54.06503079161734
init E= -128.207648867243
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.796481594991056  LUMO = 2.33765188735591
  mo_energy =
[-3.27663619e+01 -1.91550235e+00 -7.96481595e-01 -7.96481595e-01
 -7.96481595e-01  2.33765189e+00  2.33765189e+00  2.33765189e+00
  2.42791720e+00  1.64072981e+01  1.64072981e+01  1.64072981e+01
  4.14056942e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.27267959227288  E_coul = 54.065030725030276
cycle= 1 E= -128.207648867243  delta_E= 8.53e-14  |g|= 8.94e-09  |ddm|= 9.26e-09
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.27267959227288  E_coul = 54.065030725030276
  HOMO = -0.796481599585061  LUMO = 2.33765188359564
  mo_energy =
[-3.27663619e+01 -1.91550235e+00 -7.96481600e-01 -7.96481600e-01
 -7.96481600e-01  2.33765188e+00  2.33765188e+00  2.33765188e+00
  2.42791720e+00  1.64072981e+01  1.64072981e+01  1.64072981e+01
  4.14056942e+01  3.03447861e+02  1.67055611e+03  6.37357557e+03]
E1 = -182.27267961986985  E_coul = 54.06503075262724
Extra cycle  E= -128.207648867243  delta_E=    0  |g|= 3.71e-09  |ddm|= 3.71e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.27399333e+03 2.07990596e+02 9.82491544e+02 5.40992079e-01
 4.67389573e+01 1.26626675e+01 1.79361987e+00 2.46401253e+00
 1.10532571e+01 5.56196191e-01]
grad_E = [-2.47874810e-05  5.42737411e-04  4.53779677e-05  3.11254223e-03
 -2.14844564e-03  9.22197456e-04 -5.25632397e-03  1.44370273e-02
 -1.56139462e-02  6.11084684e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2560.36637206        1
[INPUT] 0    0    [1    /1   ]  147.446451171        1
[INPUT] 0    0    [1    /1   ]  1.00010311144e-09      1
[INPUT] 0    0    [1    /1   ]  0.473815910921       1
[INPUT] 0    0    [1    /1   ]  37.9355807268        1
[INPUT] 0    0    [1    /1   ]  11.1787716266        1
[INPUT] 0    0    [1    /1   ]  1.55522608708        1
[INPUT] 1    0    [1    /1   ]  2.05049923041        1
[INPUT] 1    0    [1    /1   ]  8.23069573577        1
[INPUT] 1    0    [1    /1   ]  0.496982581986       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2560.366372063486, 1.0]], [0, [147.44645117104142, 1.0]], [0, [1.0001031114370562e-09, 1.0]], [0, [0.4738159109209424, 1.0]], [0, [37.93558072682431, 1.0]], [0, [11.17877162661619, 1.0]], [0, [1.555226087076455, 1.0]], [1, [2.050499230405879, 1.0]], [1, [8.230695735766124, 1.0]], [1, [0.49698258198569434, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2560.36637206]
bas 1, expnt(s) = [147.44645117]
bas 2, expnt(s) = [1.00010311e-09]
bas 3, expnt(s) = [0.47381591]
bas 4, expnt(s) = [37.93558073]
bas 5, expnt(s) = [11.17877163]
bas 6, expnt(s) = [1.55522609]
bas 7, expnt(s) = [2.05049923]
bas 8, expnt(s) = [8.23069574]
bas 9, expnt(s) = [0.49698258]
CPU time:       165.62
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.56036637e+03 9.09372067e+02 1.47446451e+02 1.06903215e+02
 1.00010311e-09 4.49312611e-07 4.73815911e-01 1.44285356e+00
 3.79355807e+01 3.86189158e+01 1.11787716e+01 1.54458064e+01
 1.55522609e+00 3.51852121e+00 2.05049923e+00 7.15828369e+00
 8.23069574e+00 4.06705529e+01 4.96982582e-01 1.21733709e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.981707181256063
cond(S) = 34.72843247020773
E1 = -181.76936629591756  E_coul = 54.87102662646741
init E= -126.89833966945
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.729622482932502  LUMO = -9.21651328304183e-07
  mo_energy =
[-3.23131471e+01 -1.84426169e+00 -7.29622483e-01 -7.29622483e-01
 -7.29622483e-01 -9.21651328e-07  1.97133045e+00  2.03241862e+00
  2.03241862e+00  2.03241862e+00  1.25397470e+01  1.25397470e+01
  1.25397470e+01  3.33831768e+01  2.23192248e+02  3.53598431e+03]
E1 = -180.55445007698023  E_coul = 53.007532219467954
cycle= 1 E= -127.546917857512  delta_E= -0.649  |g|= 0.288  |ddm|= 0.238
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.491888
diis-c [-0.24195374  1.        ]
  HOMO = -0.849787974516093  LUMO = 1.50034199859766e-09
  mo_energy =
[-3.27524075e+01 -1.97183660e+00 -8.49787975e-01 -8.49787975e-01
 -8.49787975e-01  1.50034200e-09  1.89123524e+00  1.95191687e+00
  1.95191687e+00  1.95191687e+00  1.22847196e+01  1.22847196e+01
  1.22847196e+01  3.30294682e+01  2.22705094e+02  3.53533843e+03]
E1 = -181.3846226158064  E_coul = 53.83325906976542
cycle= 2 E= -127.551363546041  delta_E= -0.00445  |g|= 0.11  |ddm|= 0.112
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.182279
diis-c [-0.00593089  0.25376747  0.74623253]
  HOMO = -0.806618039449965  LUMO = 1.5003471902486e-09
  mo_energy =
[-3.26182181e+01 -1.92658751e+00 -8.06618039e-01 -8.06618039e-01
 -8.06618039e-01  1.50034719e-09  1.92104055e+00  1.98223094e+00
  1.98223094e+00  1.98223094e+00  1.23693611e+01  1.23693611e+01
  1.23693611e+01  3.31425614e+01  2.22845823e+02  3.53549187e+03]
E1 = -181.118395440048  E_coul = 53.566016136452866
cycle= 3 E= -127.552379303595  delta_E= -0.00102  |g|= 0.00757  |ddm|= 0.0351
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0122529
diis-c [-3.65808528e-07 -6.20417940e-04  6.16469848e-02  9.38973433e-01]
  HOMO = -0.809389450109855  LUMO = 1.50036357367863e-09
  mo_energy =
[-3.26269711e+01 -1.92964360e+00 -8.09389450e-01 -8.09389450e-01
 -8.09389450e-01  1.50036357e-09  1.91907609e+00  1.98035653e+00
  1.98035653e+00  1.98035653e+00  1.23639121e+01  1.23639121e+01
  1.23639121e+01  3.31351949e+01  2.22836638e+02  3.53548191e+03]
E1 = -181.13565622511038  E_coul = 53.583272089742124
cycle= 4 E= -127.552384135368  delta_E= -4.83e-06  |g|= 0.000127  |ddm|= 0.00245
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000186855
diis-c [-4.25206983e-10  1.20636295e-04 -1.61191849e-02 -2.29653106e-01
  1.24565165e+00]
  HOMO = -0.809358718775849  LUMO = 1.50035305055829e-09
  mo_energy =
[-3.26268961e+01 -1.92964933e+00 -8.09358719e-01 -8.09358719e-01
 -8.09358719e-01  1.50035305e-09  1.91907140e+00  1.98037993e+00
  1.98037993e+00  1.98037993e+00  1.23639620e+01  1.23639620e+01
  1.23639620e+01  3.31352471e+01  2.22836733e+02  3.53548206e+03]
E1 = -181.13551932595718  E_coul = 53.58313518815703
cycle= 5 E= -127.5523841378  delta_E= -2.43e-09  |g|= 1.4e-06  |ddm|= 9.11e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.30182e-06
diis-c [-2.92546923e-13 -4.26324746e-06  4.57657928e-04  6.43335845e-03
 -3.01105461e-02  1.02322379e+00]
  HOMO = -0.809358939524031  LUMO = 1.50034832168801e-09
  mo_energy =
[-3.26268969e+01 -1.92964950e+00 -8.09358940e-01 -8.09358940e-01
 -8.09358940e-01  1.50034832e-09  1.91907086e+00  1.98037911e+00
  1.98037911e+00  1.98037911e+00  1.23639611e+01  1.23639611e+01
  1.23639611e+01  3.31352461e+01  2.22836732e+02  3.53548205e+03]
E1 = -181.13552243589353  E_coul = 53.58313829809305
cycle= 6 E= -127.5523841378  delta_E= -3.41e-13  |g|= 8.56e-08  |ddm|= 5.9e-07
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.13552243589353  E_coul = 53.58313829809305
  HOMO = -0.809358897050301  LUMO = 1.50035735960165e-09
  mo_energy =
[-3.26268968e+01 -1.92964945e+00 -8.09358897e-01 -8.09358897e-01
 -8.09358897e-01  1.50035736e-09  1.91907091e+00  1.98037916e+00
  1.98037916e+00  1.98037916e+00  1.23639612e+01  1.23639612e+01
  1.23639612e+01  3.31352462e+01  2.22836732e+02  3.53548205e+03]
E1 = -181.13552215422868  E_coul = 53.5831380164283
Extra cycle  E= -127.5523841378  delta_E= 1.14e-13  |g|= 3.72e-08  |ddm|= 3.93e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.56036637e+03 1.47446451e+02 1.00010311e-09 4.73815911e-01
 3.79355807e+01 1.11787716e+01 1.55522609e+00 2.05049923e+00
 8.23069574e+00 4.96982582e-01]
E = -127.55238413780037
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2302.63063468        1
[INPUT] 0    0    [1    /1   ]  201.936181626        1
[INPUT] 0    0    [1    /1   ]  884.242389869        1
[INPUT] 0    0    [1    /1   ]  0.534274462379       1
[INPUT] 0    0    [1    /1   ]  45.858619667         1
[INPUT] 0    0    [1    /1   ]  12.5142778889        1
[INPUT] 0    0    [1    /1   ]  1.76978049257        1
[INPUT] 1    0    [1    /1   ]  2.42266119712        1
[INPUT] 1    0    [1    /1   ]  10.7710009397        1
[INPUT] 1    0    [1    /1   ]  0.550274830232       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2302.6306346795727, 1.0]], [0, [201.93618162631526, 1.0]], [0, [884.2423898694567, 1.0]], [0, [0.5342744623785813, 1.0]], [0, [45.85861966697818, 1.0]], [0, [12.514277888869412, 1.0]], [0, [1.7697804925738354, 1.0]], [1, [2.422661197120351, 1.0]], [1, [10.771000939675414, 1.0]], [1, [0.5502748302324554, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2302.63063468]
bas 1, expnt(s) = [201.93618163]
bas 2, expnt(s) = [884.24238987]
bas 3, expnt(s) = [0.53427446]
bas 4, expnt(s) = [45.85861967]
bas 5, expnt(s) = [12.51427789]
bas 6, expnt(s) = [1.76978049]
bas 7, expnt(s) = [2.4226612]
bas 8, expnt(s) = [10.77100094]
bas 9, expnt(s) = [0.55027483]
CPU time:       166.46
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.30263063e+03 8.39814237e+02 2.01936182e+02 1.35339831e+02
 8.84242390e+02 4.09678830e+02 5.34274462e-01 1.57884078e+00
 4.58586197e+01 4.45226246e+01 1.25142779e+01 1.68100641e+01
 1.76978049e+00 3.87663201e+00 2.42266120e+00 8.81759702e+00
 1.07710009e+01 5.69251878e+01 5.50274830e-01 1.38263948e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.975566209778219
cond(S) = 55.3180889625224
E1 = -183.12972334154955  E_coul = 54.98633448045525
init E= -128.143388861094
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739693523540596  LUMO = 2.34297750230273
  mo_energy =
[-3.25407764e+01 -1.85570121e+00 -7.39693524e-01 -7.39693524e-01
 -7.39693524e-01  2.34297750e+00  2.34297750e+00  2.34297750e+00
  2.41807855e+00  1.61384893e+01  1.61384893e+01  1.61384893e+01
  4.06512871e+01  2.94598177e+02  1.57135612e+03  6.13209825e+03]
E1 = -181.81983372381455  E_coul = 53.612631052720445
cycle= 1 E= -128.207202671094  delta_E= -0.0638  |g|= 0.199  |ddm|= 0.195
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.314954
diis-c [-0.09919596  1.        ]
  HOMO = -0.826988058972238  LUMO = 2.27700970911964
  mo_energy =
[-3.28700489e+01 -1.94841577e+00 -8.26988059e-01 -8.26988059e-01
 -8.26988059e-01  2.27700971e+00  2.27700971e+00  2.27700971e+00
  2.34995034e+00  1.59231492e+01  1.59231492e+01  1.59231492e+01
  4.03719109e+01  2.94235999e+02  1.57094795e+03  6.13166322e+03]
E1 = -182.41970170253734  E_coul = 54.2099947959622
cycle= 2 E= -128.209706906575  delta_E= -0.0025  |g|= 0.0803  |ddm|= 0.0827
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133389
diis-c [-3.16623709e-04  2.95976001e-01  7.04023999e-01]
  HOMO = -0.79789098627121  LUMO = 2.3004903384153
  mo_energy =
[-3.27768919e+01 -1.91814158e+00 -7.97890986e-01 -7.97890986e-01
 -7.97890986e-01  2.30049034e+00  2.30049034e+00  2.30049034e+00
  2.37333444e+00  1.59882378e+01  1.59882378e+01  1.59882378e+01
  4.04529412e+01  2.94336356e+02  1.57105471e+03  6.13177224e+03]
E1 = -182.2445986703248  E_coul = 54.03436735405058
cycle= 3 E= -128.210231316274  delta_E= -0.000524  |g|= 0.000719  |ddm|= 0.0235
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000984534
diis-c [-3.68056688e-07 -7.00229203e-03 -2.13308622e-02  1.02833315e+00]
  HOMO = -0.797811644076101  LUMO = 2.30060282828291
  mo_energy =
[-3.27766705e+01 -1.91821840e+00 -7.97811644e-01 -7.97811644e-01
 -7.97811644e-01  2.30060283e+00  2.30060283e+00  2.30060283e+00
  2.37330665e+00  1.59884116e+01  1.59884116e+01  1.59884116e+01
  4.04530878e+01  2.94336837e+02  1.57105544e+03  6.13177307e+03]
E1 = -182.24424001185275  E_coul = 54.034008640410775
cycle= 4 E= -128.210231371442  delta_E= -5.52e-08  |g|= 0.000114  |ddm|= 0.000357
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00017033
diis-c [-7.95126323e-10  6.90671037e-04  1.37349476e-03 -1.93967685e-01
  1.19190352e+00]
  HOMO = -0.797783106962811  LUMO = 2.30062366012864
  mo_energy =
[-3.27766012e+01 -1.91822073e+00 -7.97783107e-01 -7.97783107e-01
 -7.97783107e-01  2.30062366e+00  2.30062366e+00  2.30062366e+00
  2.37330197e+00  1.59884609e+01  1.59884609e+01  1.59884609e+01
  4.04531394e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.24412240065104  E_coul = 54.033891027512716
cycle= 5 E= -128.210231373138  delta_E= -1.7e-09  |g|= 1.92e-06  |ddm|= 6.94e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.40665e-06
diis-c [-1.21877181e-13 -1.80837668e-05 -2.55809709e-05  6.97587757e-03
 -5.98247778e-02  1.05289257e+00]
  HOMO = -0.797782889407879  LUMO = 2.30062391456258
  mo_energy =
[-3.27766007e+01 -1.91822108e+00 -7.97782889e-01 -7.97782889e-01
 -7.97782889e-01  2.30062391e+00  2.30062391e+00  2.30062391e+00
  2.37330174e+00  1.59884613e+01  1.59884613e+01  1.59884613e+01
  4.04531397e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.24412137950264  E_coul = 54.033890006363855
cycle= 6 E= -128.210231373139  delta_E= -4.55e-13  |g|= 5.96e-08  |ddm|= 1.36e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.24412137950264  E_coul = 54.033890006363855
  HOMO = -0.797782922558678  LUMO = 2.30062388556113
  mo_energy =
[-3.27766008e+01 -1.91822111e+00 -7.97782923e-01 -7.97782923e-01
 -7.97782923e-01  2.30062389e+00  2.30062389e+00  2.30062389e+00
  2.37330171e+00  1.59884612e+01  1.59884612e+01  1.59884612e+01
  4.04531396e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.2441215596206  E_coul = 54.03389018648192
Extra cycle  E= -128.210231373139  delta_E= 1.14e-13  |g|= 2.44e-08  |ddm|= 2.31e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.30263063e+03 2.01936182e+02 8.84242390e+02 5.34274462e-01
 4.58586197e+01 1.25142779e+01 1.76978049e+00 2.42266120e+00
 1.07710009e+01 5.50274830e-01]
E = -128.21023137313867
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2302.63063468        1
[INPUT] 0    0    [1    /1   ]  201.936181626        1
[INPUT] 0    0    [1    /1   ]  884.242389869        1
[INPUT] 0    0    [1    /1   ]  0.534274462379       1
[INPUT] 0    0    [1    /1   ]  45.858619667         1
[INPUT] 0    0    [1    /1   ]  12.5142778889        1
[INPUT] 0    0    [1    /1   ]  1.76978049257        1
[INPUT] 1    0    [1    /1   ]  2.42266119712        1
[INPUT] 1    0    [1    /1   ]  10.7710009397        1
[INPUT] 1    0    [1    /1   ]  0.550274830232       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2302.6306346795727, 1.0]], [0, [201.93618162631526, 1.0]], [0, [884.2423898694567, 1.0]], [0, [0.5342744623785813, 1.0]], [0, [45.85861966697818, 1.0]], [0, [12.514277888869412, 1.0]], [0, [1.7697804925738354, 1.0]], [1, [2.422661197120351, 1.0]], [1, [10.771000939675414, 1.0]], [1, [0.5502748302324554, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2302.63063468]
bas 1, expnt(s) = [201.93618163]
bas 2, expnt(s) = [884.24238987]
bas 3, expnt(s) = [0.53427446]
bas 4, expnt(s) = [45.85861967]
bas 5, expnt(s) = [12.51427789]
bas 6, expnt(s) = [1.76978049]
bas 7, expnt(s) = [2.4226612]
bas 8, expnt(s) = [10.77100094]
bas 9, expnt(s) = [0.55027483]
CPU time:       167.30
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.30263063e+03 8.39814237e+02 2.01936182e+02 1.35339831e+02
 8.84242390e+02 4.09678830e+02 5.34274462e-01 1.57884078e+00
 4.58586197e+01 4.45226246e+01 1.25142779e+01 1.68100641e+01
 1.76978049e+00 3.87663201e+00 2.42266120e+00 8.81759702e+00
 1.07710009e+01 5.69251878e+01 5.50274830e-01 1.38263948e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.975566209778219
cond(S) = 55.3180889625224
E1 = -183.12972334154955  E_coul = 54.98633448045525
init E= -128.143388861094
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739693523540596  LUMO = 2.34297750230273
  mo_energy =
[-3.25407764e+01 -1.85570121e+00 -7.39693524e-01 -7.39693524e-01
 -7.39693524e-01  2.34297750e+00  2.34297750e+00  2.34297750e+00
  2.41807855e+00  1.61384893e+01  1.61384893e+01  1.61384893e+01
  4.06512871e+01  2.94598177e+02  1.57135612e+03  6.13209825e+03]
E1 = -181.81983372381455  E_coul = 53.612631052720445
cycle= 1 E= -128.207202671094  delta_E= -0.0638  |g|= 0.199  |ddm|= 0.195
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.314954
diis-c [-0.09919596  1.        ]
  HOMO = -0.826988058972238  LUMO = 2.27700970911964
  mo_energy =
[-3.28700489e+01 -1.94841577e+00 -8.26988059e-01 -8.26988059e-01
 -8.26988059e-01  2.27700971e+00  2.27700971e+00  2.27700971e+00
  2.34995034e+00  1.59231492e+01  1.59231492e+01  1.59231492e+01
  4.03719109e+01  2.94235999e+02  1.57094795e+03  6.13166322e+03]
E1 = -182.41970170253734  E_coul = 54.2099947959622
cycle= 2 E= -128.209706906575  delta_E= -0.0025  |g|= 0.0803  |ddm|= 0.0827
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.133389
diis-c [-3.16623709e-04  2.95976001e-01  7.04023999e-01]
  HOMO = -0.79789098627121  LUMO = 2.3004903384153
  mo_energy =
[-3.27768919e+01 -1.91814158e+00 -7.97890986e-01 -7.97890986e-01
 -7.97890986e-01  2.30049034e+00  2.30049034e+00  2.30049034e+00
  2.37333444e+00  1.59882378e+01  1.59882378e+01  1.59882378e+01
  4.04529412e+01  2.94336356e+02  1.57105471e+03  6.13177224e+03]
E1 = -182.2445986703248  E_coul = 54.03436735405058
cycle= 3 E= -128.210231316274  delta_E= -0.000524  |g|= 0.000719  |ddm|= 0.0235
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000984534
diis-c [-3.68056688e-07 -7.00229203e-03 -2.13308622e-02  1.02833315e+00]
  HOMO = -0.797811644076101  LUMO = 2.30060282828291
  mo_energy =
[-3.27766705e+01 -1.91821840e+00 -7.97811644e-01 -7.97811644e-01
 -7.97811644e-01  2.30060283e+00  2.30060283e+00  2.30060283e+00
  2.37330665e+00  1.59884116e+01  1.59884116e+01  1.59884116e+01
  4.04530878e+01  2.94336837e+02  1.57105544e+03  6.13177307e+03]
E1 = -182.24424001185275  E_coul = 54.034008640410775
cycle= 4 E= -128.210231371442  delta_E= -5.52e-08  |g|= 0.000114  |ddm|= 0.000357
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00017033
diis-c [-7.95126323e-10  6.90671037e-04  1.37349476e-03 -1.93967685e-01
  1.19190352e+00]
  HOMO = -0.797783106962811  LUMO = 2.30062366012864
  mo_energy =
[-3.27766012e+01 -1.91822073e+00 -7.97783107e-01 -7.97783107e-01
 -7.97783107e-01  2.30062366e+00  2.30062366e+00  2.30062366e+00
  2.37330197e+00  1.59884609e+01  1.59884609e+01  1.59884609e+01
  4.04531394e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.24412240065104  E_coul = 54.033891027512716
cycle= 5 E= -128.210231373138  delta_E= -1.7e-09  |g|= 1.92e-06  |ddm|= 6.94e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.40665e-06
diis-c [-1.21877181e-13 -1.80837668e-05 -2.55809709e-05  6.97587757e-03
 -5.98247778e-02  1.05289257e+00]
  HOMO = -0.797782889407879  LUMO = 2.30062391456258
  mo_energy =
[-3.27766007e+01 -1.91822108e+00 -7.97782889e-01 -7.97782889e-01
 -7.97782889e-01  2.30062391e+00  2.30062391e+00  2.30062391e+00
  2.37330174e+00  1.59884613e+01  1.59884613e+01  1.59884613e+01
  4.04531397e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.24412137950264  E_coul = 54.033890006363855
cycle= 6 E= -128.210231373139  delta_E= -4.55e-13  |g|= 5.96e-08  |ddm|= 1.36e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.24412137950264  E_coul = 54.033890006363855
  HOMO = -0.797782922558678  LUMO = 2.30062388556113
  mo_energy =
[-3.27766008e+01 -1.91822111e+00 -7.97782923e-01 -7.97782923e-01
 -7.97782923e-01  2.30062389e+00  2.30062389e+00  2.30062389e+00
  2.37330171e+00  1.59884612e+01  1.59884612e+01  1.59884612e+01
  4.04531396e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.2441215596206  E_coul = 54.03389018648192
Extra cycle  E= -128.210231373139  delta_E= 1.14e-13  |g|= 2.44e-08  |ddm|= 2.31e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 55.3180889625224
E1 = -182.2441215596206  E_coul = 54.03389018648192
init E= -128.210231373139
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.797782910241611  LUMO = 2.30062389551018
  mo_energy =
[-3.27766008e+01 -1.91822110e+00 -7.97782910e-01 -7.97782910e-01
 -7.97782910e-01  2.30062390e+00  2.30062390e+00  2.30062390e+00
  2.37330172e+00  1.59884612e+01  1.59884612e+01  1.59884612e+01
  4.04531396e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.24412148427314  E_coul = 54.03389011113445
cycle= 1 E= -128.210231373139  delta_E= -2.84e-14  |g|= 1.01e-08  |ddm|= 1.04e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.24412148427314  E_coul = 54.03389011113445
  HOMO = -0.79778291544459  LUMO = 2.3006238913115
  mo_energy =
[-3.27766008e+01 -1.91822110e+00 -7.97782915e-01 -7.97782915e-01
 -7.97782915e-01  2.30062389e+00  2.30062389e+00  2.30062389e+00
  2.37330172e+00  1.59884612e+01  1.59884612e+01  1.59884612e+01
  4.04531396e+01  2.94336934e+02  1.57105557e+03  6.13177322e+03]
E1 = -182.24412151566102  E_coul = 54.03389014252224
Extra cycle  E= -128.210231373139  delta_E= -8.53e-14  |g|= 4.22e-09  |ddm|= 4.21e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.30263063e+03 2.01936182e+02 8.84242390e+02 5.34274462e-01
 4.58586197e+01 1.25142779e+01 1.76978049e+00 2.42266120e+00
 1.07710009e+01 5.50274830e-01]
grad_E = [-2.60763166e-05  7.10148005e-04  4.05478298e-05  3.88791878e-03
 -2.75171527e-03  1.48627194e-03 -6.56137437e-03  1.72016413e-02
 -1.85120979e-02  7.14342120e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2524.98143313        1
[INPUT] 0    0    [1    /1   ]  143.127716499        1
[INPUT] 0    0    [1    /1   ]  122.369755159        1
[INPUT] 0    0    [1    /1   ]  0.481024430517       1
[INPUT] 0    0    [1    /1   ]  37.7315169266        1
[INPUT] 0    0    [1    /1   ]  11.1860066506        1
[INPUT] 0    0    [1    /1   ]  1.59012000843        1
[INPUT] 1    0    [1    /1   ]  2.1558656709         1
[INPUT] 1    0    [1    /1   ]  9.00830774615        1
[INPUT] 1    0    [1    /1   ]  0.511914358427       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2524.9814331323146, 1.0]], [0, [143.12771649948974, 1.0]], [0, [122.36975515940821, 1.0]], [0, [0.4810244305166481, 1.0]], [0, [37.73151692657968, 1.0]], [0, [11.186006650552839, 1.0]], [0, [1.5901200084320666, 1.0]], [1, [2.155865670899681, 1.0]], [1, [9.008307746149514, 1.0]], [1, [0.5119143584271507, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2524.98143313]
bas 1, expnt(s) = [143.1277165]
bas 2, expnt(s) = [122.36975516]
bas 3, expnt(s) = [0.48102443]
bas 4, expnt(s) = [37.73151693]
bas 5, expnt(s) = [11.18600665]
bas 6, expnt(s) = [1.59012001]
bas 7, expnt(s) = [2.15586567]
bas 8, expnt(s) = [9.00830775]
bas 9, expnt(s) = [0.51191436]
CPU time:       169.87
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.52498143e+03 8.99929868e+02 1.43127716e+02 1.04546099e+02
 1.22369755e+02 9.29545371e+01 4.81024431e-01 1.45928586e+00
 3.77315169e+01 3.84630061e+01 1.11860067e+01 1.54533033e+01
 1.59012001e+00 3.57756432e+00 2.15586567e+00 7.62099214e+00
 9.00830775e+00 4.55290313e+01 5.11914358e-01 1.26322593e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.980846331422754
cond(S) = 2996.406065757285
E1 = -182.30741678776678  E_coul = 54.924312161012864
init E= -127.383104626754
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.733732121521739  LUMO = 2.03199955898746
  mo_energy =
[-3.23819305e+01 -1.84882237e+00 -7.33732122e-01 -7.33732122e-01
 -7.33732122e-01  2.03199956e+00  2.11563851e+00  2.11563851e+00
  2.11563851e+00  1.35800997e+01  1.35800997e+01  1.35800997e+01
  3.12104176e+01  1.77199315e+02  5.35039666e+02  3.85590761e+03]
E1 = -181.0056742470665  E_coul = 53.23122530286813
cycle= 1 E= -127.774448944198  delta_E= -0.391  |g|= 0.259  |ddm|= 0.516
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.431843
diis-c [-0.18648832  1.        ]
  HOMO = -0.842908635322938  LUMO = 1.95734481092338
  mo_energy =
[-3.27808040e+01 -1.96526838e+00 -8.42908635e-01 -8.42908635e-01
 -8.42908635e-01  1.95734481e+00  2.03998320e+00  2.03998320e+00
  2.03998320e+00  1.33405452e+01  1.33405452e+01  1.33405452e+01
  3.09003470e+01  1.76789979e+02  5.34578445e+02  3.85532759e+03]
E1 = -181.75138200258033  E_coul = 53.97328973919438
cycle= 2 E= -127.778092263386  delta_E= -0.00364  |g|= 0.0991  |ddm|= 0.103
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.167931
diis-c [-0.00398875  0.26699012  0.73300988]
  HOMO = -0.804936490335251  LUMO = 1.9840719222813
  mo_energy =
[-3.26617021e+01 -1.92563053e+00 -8.04936490e-01 -8.04936490e-01
 -8.04936490e-01  1.98407192e+00  2.06777109e+00  2.06777109e+00
  2.06777109e+00  1.34184305e+01  1.34184305e+01  1.34184305e+01
  3.09978013e+01  1.76911450e+02  5.34707471e+02  3.85546497e+03]
E1 = -181.51821508741477  E_coul = 53.73930505803642
cycle= 3 E= -127.778910029378  delta_E= -0.000818  |g|= 0.00483  |ddm|= 0.0311
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00769718
diis-c [-7.86166746e-07 -1.38865099e-03  4.06296592e-02  9.60758992e-01]
  HOMO = -0.806639299410965  LUMO = 1.98279494339893
  mo_energy =
[-3.26671923e+01 -1.92759148e+00 -8.06639299e-01 -8.06639299e-01
 -8.06639299e-01  1.98279494e+00  2.06658980e+00  2.06658980e+00
  2.06658980e+00  1.34149200e+01  1.34149200e+01  1.34149200e+01
  3.09932865e+01  1.76905959e+02  5.34701755e+02  3.85545907e+03]
E1 = -181.52895805869767  E_coul = 53.750046132386736
cycle= 4 E= -127.778911926311  delta_E= -1.9e-06  |g|= 0.000148  |ddm|= 0.00166
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00022007
diis-c [-3.49853361e-09  1.55878801e-04 -8.79390177e-03 -1.76101996e-01
  1.18474002e+00]
  HOMO = -0.806602600590579  LUMO = 1.98279131217476
  mo_energy =
[-3.26671059e+01 -1.92759439e+00 -8.06602601e-01 -8.06602601e-01
 -8.06602601e-01  1.98279131e+00  2.06661702e+00  2.06661702e+00
  2.06661702e+00  1.34149806e+01  1.34149806e+01  1.34149806e+01
  3.09933443e+01  1.76906058e+02  5.34701885e+02  3.85545926e+03]
E1 = -181.52880752955815  E_coul = 53.749895600234915
cycle= 5 E= -127.778911929323  delta_E= -3.01e-09  |g|= 5.51e-06  |ddm|= 9.58e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.68387e-06
diis-c [-2.20811779e-12 -7.88240070e-06  5.32005068e-04  1.01471051e-02
 -1.00865529e-01  1.09019430e+00]
  HOMO = -0.806602226483984  LUMO = 1.98278998668872
  mo_energy =
[-3.26671056e+01 -1.92759581e+00 -8.06602226e-01 -8.06602226e-01
 -8.06602226e-01  1.98278999e+00  2.06661693e+00  2.06661693e+00
  2.06661693e+00  1.34149805e+01  1.34149805e+01  1.34149805e+01
  3.09933438e+01  1.76906058e+02  5.34701886e+02  3.85545926e+03]
E1 = -181.52880793856204  E_coul = 53.74989600923432
cycle= 6 E= -127.778911929328  delta_E= -4.48e-12  |g|= 4.69e-08  |ddm|= 4.45e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.52880793856204  E_coul = 53.74989600923432
  HOMO = -0.806602211582669  LUMO = 1.98279000696443
  mo_energy =
[-3.26671055e+01 -1.92759580e+00 -8.06602212e-01 -8.06602212e-01
 -8.06602212e-01  1.98279001e+00  2.06661696e+00  2.06661696e+00
  2.06661696e+00  1.34149805e+01  1.34149805e+01  1.34149805e+01
  3.09933439e+01  1.76906058e+02  5.34701886e+02  3.85545926e+03]
E1 = -181.52880778482498  E_coul = 53.74989585549729
Extra cycle  E= -127.778911929328  delta_E= 4.26e-14  |g|= 2.09e-08  |ddm|= 2.05e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.52498143e+03 1.43127716e+02 1.22369755e+02 4.81024431e-01
 3.77315169e+01 1.11860067e+01 1.59012001e+00 2.15586567e+00
 9.00830775e+00 5.11914358e-01]
E = -127.77891192932768
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:09 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2324.86571452        1
[INPUT] 0    0    [1    /1   ]  196.055335114        1
[INPUT] 0    0    [1    /1   ]  808.055126398        1
[INPUT] 0    0    [1    /1   ]  0.528949459192       1
[INPUT] 0    0    [1    /1   ]  45.0459093929        1
[INPUT] 0    0    [1    /1   ]  12.381450765         1
[INPUT] 0    0    [1    /1   ]  1.75181444416        1
[INPUT] 1    0    [1    /1   ]  2.3959816445         1
[INPUT] 1    0    [1    /1   ]  10.5947316203        1
[INPUT] 1    0    [1    /1   ]  0.546438783052       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2324.865714524847, 1.0]], [0, [196.0553351136327, 1.0]], [0, [808.0551263984519, 1.0]], [0, [0.528949459192388, 1.0]], [0, [45.04590939293833, 1.0]], [0, [12.381450765037755, 1.0]], [0, [1.7518144441596586, 1.0]], [1, [2.395981644498284, 1.0]], [1, [10.594731620322824, 1.0]], [1, [0.546438783051925, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2324.86571452]
bas 1, expnt(s) = [196.05533511]
bas 2, expnt(s) = [808.0551264]
bas 3, expnt(s) = [0.52894946]
bas 4, expnt(s) = [45.04590939]
bas 5, expnt(s) = [12.38145077]
bas 6, expnt(s) = [1.75181444]
bas 7, expnt(s) = [2.39598164]
bas 8, expnt(s) = [10.59473162]
bas 9, expnt(s) = [0.54643878]
CPU time:       170.72
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32486571e+03 8.45889100e+02 1.96055335e+02 1.32372882e+02
 8.08055126e+02 3.82909170e+02 5.28949459e-01 1.56702403e+00
 4.50459094e+01 4.39295286e+01 1.23814508e+01 1.66760687e+01
 1.75181444e+00 3.84707897e+00 2.39598164e+00 8.69638485e+00
 1.05947316e+01 5.57630914e+01 5.46438783e-01 1.37060177e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976233053414765
cond(S) = 54.33685862427141
E1 = -183.1282736448546  E_coul = 54.9826577353157
init E= -128.145615909539
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739265238047438  LUMO = 2.31968166139313
  mo_energy =
[-3.25450579e+01 -1.85602177e+00 -7.39265238e-01 -7.39265238e-01
 -7.39265238e-01  2.31968166e+00  2.31968166e+00  2.31968166e+00
  2.37676502e+00  1.58765824e+01  1.58765824e+01  1.58765824e+01
  3.98127952e+01  2.86088374e+02  1.48628678e+03  5.93265842e+03]
E1 = -181.79371927466286  E_coul = 53.5838731291153
cycle= 1 E= -128.209846145548  delta_E= -0.0642  |g|= 0.201  |ddm|= 0.197
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.319792
diis-c [-0.1022667  1.       ]
  HOMO = -0.828402477853848  LUMO = 2.25286612314388
  mo_energy =
[-3.28791758e+01 -1.95082304e+00 -8.28402478e-01 -8.28402478e-01
 -8.28402478e-01  2.25286612e+00  2.25286612e+00  2.25286612e+00
  2.30802268e+00  1.56592985e+01  1.56592985e+01  1.56592985e+01
  3.95306041e+01  2.85722456e+02  1.48587542e+03  5.93221944e+03]
E1 = -182.40557013354857  E_coul = 54.19313580523003
cycle= 2 E= -128.212434328319  delta_E= -0.00259  |g|= 0.0818  |ddm|= 0.0842
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136142
diis-c [-3.00791220e-04  2.97197567e-01  7.02802433e-01]
  HOMO = -0.79874927163915  LUMO = 2.27657164015493
  mo_energy =
[-3.27844375e+01 -1.91996588e+00 -7.98749272e-01 -7.98749272e-01
 -7.98749272e-01  2.27657164e+00  2.27657164e+00  2.27657164e+00
  2.33154220e+00  1.57251031e+01  1.57251031e+01  1.57251031e+01
  3.96126725e+01  2.85824252e+02  1.48598374e+03  5.93233020e+03]
E1 = -182.22674631431352  E_coul = 54.01376590839197
cycle= 3 E= -128.212980405922  delta_E= -0.000546  |g|= 0.000771  |ddm|= 0.0239
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00110071
diis-c [-4.04991068e-07 -7.54825887e-03 -2.34358627e-02  1.03098412e+00]
  HOMO = -0.798640746066538  LUMO = 2.27670841819739
  mo_energy =
[-3.27841375e+01 -1.92002154e+00 -7.98640746e-01 -7.98640746e-01
 -7.98640746e-01  2.27670842e+00  2.27670842e+00  2.27670842e+00
  2.33153249e+00  1.57253356e+01  1.57253356e+01  1.57253356e+01
  3.96128851e+01  2.85824817e+02  1.48598456e+03  5.93233114e+03]
E1 = -182.22623355653565  E_coul = 54.01325308627827
cycle= 4 E= -128.212980470257  delta_E= -6.43e-08  |g|= 0.000118  |ddm|= 0.000375
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000176445
diis-c [-9.31049125e-10  7.07487842e-04  1.56356175e-03 -1.93130632e-01
  1.19085958e+00]
  HOMO = -0.798611290212596  LUMO = 2.27672954507777
  mo_energy =
[-3.27840665e+01 -1.92002454e+00 -7.98611290e-01 -7.98611290e-01
 -7.98611290e-01  2.27672955e+00  2.27672955e+00  2.27672955e+00
  2.33152707e+00  1.57253858e+01  1.57253858e+01  1.57253858e+01
  3.96129372e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.22611358519958  E_coul = 54.01313311308126
cycle= 5 E= -128.212980472118  delta_E= -1.86e-09  |g|= 2.05e-06  |ddm|= 7.33e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.60264e-06
diis-c [-1.38503569e-13 -1.72538584e-05 -2.95163130e-05  6.77455195e-03
 -5.91584123e-02  1.05243063e+00]
  HOMO = -0.798611045254358  LUMO = 2.27672982722439
  mo_energy =
[-3.27840660e+01 -1.92002489e+00 -7.98611045e-01 -7.98611045e-01
 -7.98611045e-01  2.27672983e+00  2.27672983e+00  2.27672983e+00
  2.33152683e+00  1.57253862e+01  1.57253862e+01  1.57253862e+01
  3.96129375e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.22611241458168  E_coul = 54.01313194246269
cycle= 6 E= -128.212980472119  delta_E= -6.82e-13  |g|= 6.4e-08  |ddm|= 1.46e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.22611241458168  E_coul = 54.01313194246269
  HOMO = -0.798611080961163  LUMO = 2.27672979635898
  mo_energy =
[-3.27840661e+01 -1.92002493e+00 -7.98611081e-01 -7.98611081e-01
 -7.98611081e-01  2.27672980e+00  2.27672980e+00  2.27672980e+00
  2.33152680e+00  1.57253861e+01  1.57253861e+01  1.57253861e+01
  3.96129374e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.22611260839926  E_coul = 54.01313213628032
Extra cycle  E= -128.212980472119  delta_E= 5.68e-14  |g|= 2.62e-08  |ddm|= 2.48e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.32486571e+03 1.96055335e+02 8.08055126e+02 5.28949459e-01
 4.50459094e+01 1.23814508e+01 1.75181444e+00 2.39598164e+00
 1.05947316e+01 5.46438783e-01]
E = -128.21298047211894
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:10 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2324.86571452        1
[INPUT] 0    0    [1    /1   ]  196.055335114        1
[INPUT] 0    0    [1    /1   ]  808.055126398        1
[INPUT] 0    0    [1    /1   ]  0.528949459192       1
[INPUT] 0    0    [1    /1   ]  45.0459093929        1
[INPUT] 0    0    [1    /1   ]  12.381450765         1
[INPUT] 0    0    [1    /1   ]  1.75181444416        1
[INPUT] 1    0    [1    /1   ]  2.3959816445         1
[INPUT] 1    0    [1    /1   ]  10.5947316203        1
[INPUT] 1    0    [1    /1   ]  0.546438783052       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2324.865714524847, 1.0]], [0, [196.0553351136327, 1.0]], [0, [808.0551263984519, 1.0]], [0, [0.528949459192388, 1.0]], [0, [45.04590939293833, 1.0]], [0, [12.381450765037755, 1.0]], [0, [1.7518144441596586, 1.0]], [1, [2.395981644498284, 1.0]], [1, [10.594731620322824, 1.0]], [1, [0.546438783051925, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2324.86571452]
bas 1, expnt(s) = [196.05533511]
bas 2, expnt(s) = [808.0551264]
bas 3, expnt(s) = [0.52894946]
bas 4, expnt(s) = [45.04590939]
bas 5, expnt(s) = [12.38145077]
bas 6, expnt(s) = [1.75181444]
bas 7, expnt(s) = [2.39598164]
bas 8, expnt(s) = [10.59473162]
bas 9, expnt(s) = [0.54643878]
CPU time:       171.55
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.32486571e+03 8.45889100e+02 1.96055335e+02 1.32372882e+02
 8.08055126e+02 3.82909170e+02 5.28949459e-01 1.56702403e+00
 4.50459094e+01 4.39295286e+01 1.23814508e+01 1.66760687e+01
 1.75181444e+00 3.84707897e+00 2.39598164e+00 8.69638485e+00
 1.05947316e+01 5.57630914e+01 5.46438783e-01 1.37060177e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976233053414765
cond(S) = 54.33685862427141
E1 = -183.1282736448546  E_coul = 54.9826577353157
init E= -128.145615909539
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739265238047438  LUMO = 2.31968166139313
  mo_energy =
[-3.25450579e+01 -1.85602177e+00 -7.39265238e-01 -7.39265238e-01
 -7.39265238e-01  2.31968166e+00  2.31968166e+00  2.31968166e+00
  2.37676502e+00  1.58765824e+01  1.58765824e+01  1.58765824e+01
  3.98127952e+01  2.86088374e+02  1.48628678e+03  5.93265842e+03]
E1 = -181.79371927466286  E_coul = 53.5838731291153
cycle= 1 E= -128.209846145548  delta_E= -0.0642  |g|= 0.201  |ddm|= 0.197
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.319792
diis-c [-0.1022667  1.       ]
  HOMO = -0.828402477853848  LUMO = 2.25286612314388
  mo_energy =
[-3.28791758e+01 -1.95082304e+00 -8.28402478e-01 -8.28402478e-01
 -8.28402478e-01  2.25286612e+00  2.25286612e+00  2.25286612e+00
  2.30802268e+00  1.56592985e+01  1.56592985e+01  1.56592985e+01
  3.95306041e+01  2.85722456e+02  1.48587542e+03  5.93221944e+03]
E1 = -182.40557013354857  E_coul = 54.19313580523003
cycle= 2 E= -128.212434328319  delta_E= -0.00259  |g|= 0.0818  |ddm|= 0.0842
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136142
diis-c [-3.00791220e-04  2.97197567e-01  7.02802433e-01]
  HOMO = -0.79874927163915  LUMO = 2.27657164015493
  mo_energy =
[-3.27844375e+01 -1.91996588e+00 -7.98749272e-01 -7.98749272e-01
 -7.98749272e-01  2.27657164e+00  2.27657164e+00  2.27657164e+00
  2.33154220e+00  1.57251031e+01  1.57251031e+01  1.57251031e+01
  3.96126725e+01  2.85824252e+02  1.48598374e+03  5.93233020e+03]
E1 = -182.22674631431352  E_coul = 54.01376590839197
cycle= 3 E= -128.212980405922  delta_E= -0.000546  |g|= 0.000771  |ddm|= 0.0239
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00110071
diis-c [-4.04991068e-07 -7.54825887e-03 -2.34358627e-02  1.03098412e+00]
  HOMO = -0.798640746066538  LUMO = 2.27670841819739
  mo_energy =
[-3.27841375e+01 -1.92002154e+00 -7.98640746e-01 -7.98640746e-01
 -7.98640746e-01  2.27670842e+00  2.27670842e+00  2.27670842e+00
  2.33153249e+00  1.57253356e+01  1.57253356e+01  1.57253356e+01
  3.96128851e+01  2.85824817e+02  1.48598456e+03  5.93233114e+03]
E1 = -182.22623355653565  E_coul = 54.01325308627827
cycle= 4 E= -128.212980470257  delta_E= -6.43e-08  |g|= 0.000118  |ddm|= 0.000375
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000176445
diis-c [-9.31049125e-10  7.07487842e-04  1.56356175e-03 -1.93130632e-01
  1.19085958e+00]
  HOMO = -0.798611290212596  LUMO = 2.27672954507777
  mo_energy =
[-3.27840665e+01 -1.92002454e+00 -7.98611290e-01 -7.98611290e-01
 -7.98611290e-01  2.27672955e+00  2.27672955e+00  2.27672955e+00
  2.33152707e+00  1.57253858e+01  1.57253858e+01  1.57253858e+01
  3.96129372e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.22611358519958  E_coul = 54.01313311308126
cycle= 5 E= -128.212980472118  delta_E= -1.86e-09  |g|= 2.05e-06  |ddm|= 7.33e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.60264e-06
diis-c [-1.38503569e-13 -1.72538584e-05 -2.95163130e-05  6.77455195e-03
 -5.91584123e-02  1.05243063e+00]
  HOMO = -0.798611045254358  LUMO = 2.27672982722439
  mo_energy =
[-3.27840660e+01 -1.92002489e+00 -7.98611045e-01 -7.98611045e-01
 -7.98611045e-01  2.27672983e+00  2.27672983e+00  2.27672983e+00
  2.33152683e+00  1.57253862e+01  1.57253862e+01  1.57253862e+01
  3.96129375e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.22611241458168  E_coul = 54.01313194246269
cycle= 6 E= -128.212980472119  delta_E= -6.82e-13  |g|= 6.4e-08  |ddm|= 1.46e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.22611241458168  E_coul = 54.01313194246269
  HOMO = -0.798611080961163  LUMO = 2.27672979635898
  mo_energy =
[-3.27840661e+01 -1.92002493e+00 -7.98611081e-01 -7.98611081e-01
 -7.98611081e-01  2.27672980e+00  2.27672980e+00  2.27672980e+00
  2.33152680e+00  1.57253861e+01  1.57253861e+01  1.57253861e+01
  3.96129374e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.22611260839926  E_coul = 54.01313213628032
Extra cycle  E= -128.212980472119  delta_E= 5.68e-14  |g|= 2.62e-08  |ddm|= 2.48e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 54.33685862427141
E1 = -182.22611260839926  E_coul = 54.01313213628032
init E= -128.212980472119
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.798611067697442  LUMO = 2.27672980697259
  mo_energy =
[-3.27840661e+01 -1.92002491e+00 -7.98611068e-01 -7.98611068e-01
 -7.98611068e-01  2.27672981e+00  2.27672981e+00  2.27672981e+00
  2.33152681e+00  1.57253861e+01  1.57253861e+01  1.57253861e+01
  3.96129375e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.2261125270429  E_coul = 54.013132054924
cycle= 1 E= -128.212980472119  delta_E= 5.68e-14  |g|= 1.09e-08  |ddm|= 1.12e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.2261125270429  E_coul = 54.013132054924
  HOMO = -0.798611073318973  LUMO = 2.27672980247837
  mo_energy =
[-3.27840661e+01 -1.92002492e+00 -7.98611073e-01 -7.98611073e-01
 -7.98611073e-01  2.27672980e+00  2.27672980e+00  2.27672980e+00
  2.33152681e+00  1.57253861e+01  1.57253861e+01  1.57253861e+01
  3.96129374e+01  2.85824915e+02  1.48598470e+03  5.93233129e+03]
E1 = -182.22611256104173  E_coul = 54.01313208892262
Extra cycle  E= -128.212980472119  delta_E= -2.27e-13  |g|= 4.56e-09  |ddm|= 4.55e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.32486571e+03 1.96055335e+02 8.08055126e+02 5.28949459e-01
 4.50459094e+01 1.23814508e+01 1.75181444e+00 2.39598164e+00
 1.05947316e+01 5.46438783e-01]
grad_E = [-2.60912874e-05  8.46791135e-04  3.22853820e-05  4.38278444e-03
 -3.22285393e-03  1.98352905e-03 -7.54991363e-03  1.86626930e-02
 -2.04142261e-02  8.31123015e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2532.57566904        1
[INPUT] 0    0    [1    /1   ]  130.019857953        1
[INPUT] 0    0    [1    /1   ]  97.2617828726        1
[INPUT] 0    0    [1    /1   ]  0.47888867595        1
[INPUT] 0    0    [1    /1   ]  36.2271365047        1
[INPUT] 0    0    [1    /1   ]  10.9769390938        1
[INPUT] 0    0    [1    /1   ]  1.59067117202        1
[INPUT] 1    0    [1    /1   ]  2.20203757748        1
[INPUT] 1    0    [1    /1   ]  9.35311174828        1
[INPUT] 1    0    [1    /1   ]  0.518354605032       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2532.575669043022, 1.0]], [0, [130.01985795275988, 1.0]], [0, [97.26178287263792, 1.0]], [0, [0.47888867594994966, 1.0]], [0, [36.22713650467081, 1.0]], [0, [10.97693909376726, 1.0]], [0, [1.590671172022647, 1.0]], [1, [2.2020375774838494, 1.0]], [1, [9.353111748275428, 1.0]], [1, [0.5183546050316884, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2532.57566904]
bas 1, expnt(s) = [130.01985795]
bas 2, expnt(s) = [97.26178287]
bas 3, expnt(s) = [0.47888868]
bas 4, expnt(s) = [36.2271365]
bas 5, expnt(s) = [10.97693909]
bas 6, expnt(s) = [1.59067117]
bas 7, expnt(s) = [2.20203758]
bas 8, expnt(s) = [9.35311175]
bas 9, expnt(s) = [0.51835461]
CPU time:       174.10
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.53257567e+03 9.01959105e+02 1.30019858e+02 9.72797150e+01
 9.72617829e+01 7.82477204e+01 4.78888676e-01 1.45442372e+00
 3.62271365e+01 3.73070174e+01 1.09769391e+01 1.52361755e+01
 1.59067117e+00 3.57849432e+00 2.20203758e+00 7.82555773e+00
 9.35311175e+00 4.77177048e+01 5.18354605e-01 1.28312242e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.980150776293836
cond(S) = 1193.1947115600265
E1 = -182.03014825754184  E_coul = 54.93645830988272
init E= -127.093689947659
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.735537311355272  LUMO = 2.02750564824047
  mo_energy =
[-3.23034754e+01 -1.84456623e+00 -7.35537311e-01 -7.35537311e-01
 -7.35537311e-01  2.02750565e+00  2.15218404e+00  2.15218404e+00
  2.15218404e+00  1.40471721e+01  1.40471721e+01  1.40471721e+01
  2.96926370e+01  1.60042043e+02  4.64981373e+02  3.73536757e+03]
E1 = -180.90833065111474  E_coul = 53.275387435181095
cycle= 1 E= -127.632943215934  delta_E= -0.539  |g|= 0.266  |ddm|= 0.389
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.456471
diis-c [-0.20836607  1.        ]
  HOMO = -0.841951227876374  LUMO = 1.95602116342879
  mo_energy =
[-3.26990001e+01 -1.95696783e+00 -8.41951228e-01 -8.41951228e-01
 -8.41951228e-01  1.95602116e+00  2.07720472e+00  2.07720472e+00
  2.07720472e+00  1.38079314e+01  1.38079314e+01  1.38079314e+01
  2.93941315e+01  1.59643002e+02  4.64525737e+02  3.73476324e+03]
E1 = -181.63530221074166  E_coul = 53.99887026125543
cycle= 2 E= -127.636431949486  delta_E= -0.00349  |g|= 0.0969  |ddm|= 0.099
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.164075
diis-c [-0.00573252  0.24434941  0.75565059]
  HOMO = -0.803843599690837  LUMO = 1.98275958951118
  mo_energy =
[-3.25790607e+01 -1.91721496e+00 -8.03843600e-01 -8.03843600e-01
 -8.03843600e-01  1.98275959e+00  2.10556880e+00  2.10556880e+00
  2.10556880e+00  1.38875386e+01  1.38875386e+01  1.38875386e+01
  2.94905657e+01  1.59763867e+02  4.64654616e+02  3.73490157e+03]
E1 = -181.4017179881718  E_coul = 53.7645130020644
cycle= 3 E= -127.637204986107  delta_E= -0.000773  |g|= 0.00768  |ddm|= 0.0312
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0126677
diis-c [-4.43130944e-07 -1.05743212e-03  6.94565102e-02  9.31600922e-01]
  HOMO = -0.806616801398478  LUMO = 1.98077824528677
  mo_energy =
[-3.25878849e+01 -1.92022378e+00 -8.06616801e-01 -8.06616801e-01
 -8.06616801e-01  1.98077825e+00  2.10356556e+00  2.10356556e+00
  2.10356556e+00  1.38817502e+01  1.38817502e+01  1.38817502e+01
  2.94834660e+01  1.59755057e+02  4.64645294e+02  3.73489169e+03]
E1 = -181.41889516483013  E_coul = 53.78168536316687
cycle= 4 E= -127.637209801663  delta_E= -4.82e-06  |g|= 9.94e-05  |ddm|= 0.00242
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000151849
diis-c [-2.51831990e-09  1.17081734e-04 -1.12288653e-02 -1.38704080e-01
  1.14981586e+00]
  HOMO = -0.806591031529279  LUMO = 1.98077947444907
  mo_energy =
[-3.25878236e+01 -1.92022230e+00 -8.06591032e-01 -8.06591032e-01
 -8.06591032e-01  1.98077947e+00  2.10358669e+00  2.10358669e+00
  2.10358669e+00  1.38817954e+01  1.38817954e+01  1.38817954e+01
  2.94835082e+01  1.59755125e+02  4.64645383e+02  3.73489182e+03]
E1 = -181.41878441573664  E_coul = 53.781574612791864
cycle= 5 E= -127.637209802945  delta_E= -1.28e-09  |g|= 5.92e-06  |ddm|= 5.82e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.23323e-06
diis-c [-3.67431969e-12 -8.09703066e-06  8.32876450e-04  1.00124671e-02
 -1.33191441e-01  1.12235419e+00]
  HOMO = -0.806590466461278  LUMO = 1.98077810610787
  mo_energy =
[-3.25878228e+01 -1.92022370e+00 -8.06590466e-01 -8.06590466e-01
 -8.06590466e-01  1.98077811e+00  2.10358667e+00  2.10358667e+00
  2.10358667e+00  1.38817956e+01  1.38817956e+01  1.38817956e+01
  2.94835079e+01  1.59755126e+02  4.64645384e+02  3.73489182e+03]
E1 = -181.41878454259242  E_coul = 53.781574739641954
cycle= 6 E= -127.63720980295  delta_E= -5.7e-12  |g|= 1.31e-07  |ddm|= 4.77e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.41878454259242  E_coul = 53.781574739641954
  HOMO = -0.806590407685024  LUMO = 1.98077815719939
  mo_energy =
[-3.25878227e+01 -1.92022365e+00 -8.06590408e-01 -8.06590408e-01
 -8.06590408e-01  1.98077816e+00  2.10358674e+00  2.10358674e+00
  2.10358674e+00  1.38817957e+01  1.38817957e+01  1.38817957e+01
  2.94835081e+01  1.59755126e+02  4.64645384e+02  3.73489182e+03]
E1 = -181.41878413029372  E_coul = 53.78157432734343
Extra cycle  E= -127.63720980295  delta_E= 1.85e-13  |g|= 5.71e-08  |ddm|= 5.47e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.53257567e+03 1.30019858e+02 9.72617829e+01 4.78888676e-01
 3.62271365e+01 1.09769391e+01 1.59067117e+00 2.20203758e+00
 9.35311175e+00 5.18354605e-01]
E = -127.63720980295028
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:13 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2345.63670998        1
[INPUT] 0    0    [1    /1   ]  189.451787398        1
[INPUT] 0    0    [1    /1   ]  736.975792046        1
[INPUT] 0    0    [1    /1   ]  0.523943380868       1
[INPUT] 0    0    [1    /1   ]  44.1640321041        1
[INPUT] 0    0    [1    /1   ]  12.2409995979        1
[INPUT] 0    0    [1    /1   ]  1.73570011695        1
[INPUT] 1    0    [1    /1   ]  2.3765872378         1
[INPUT] 1    0    [1    /1   ]  10.4705696331        1
[INPUT] 1    0    [1    /1   ]  0.54363036525        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2345.636709976665, 1.0]], [0, [189.45178739754542, 1.0]], [0, [736.9757920458704, 1.0]], [0, [0.5239433808681442, 1.0]], [0, [44.16403210411158, 1.0]], [0, [12.240999597910706, 1.0]], [0, [1.7357001169459574, 1.0]], [1, [2.3765872377968407, 1.0]], [1, [10.470569633118084, 1.0]], [1, [0.5436303652499013, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2345.63670998]
bas 1, expnt(s) = [189.4517874]
bas 2, expnt(s) = [736.97579205]
bas 3, expnt(s) = [0.52394338]
bas 4, expnt(s) = [44.1640321]
bas 5, expnt(s) = [12.2409996]
bas 6, expnt(s) = [1.73570012]
bas 7, expnt(s) = [2.37658724]
bas 8, expnt(s) = [10.47056963]
bas 9, expnt(s) = [0.54363037]
CPU time:       174.96
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.34563671e+03 8.51550850e+02 1.89451787e+02 1.29014658e+02
 7.36975792e+02 3.57359179e+02 5.23943381e-01 1.55588786e+00
 4.41640321e+01 4.32829210e+01 1.22409996e+01 1.65339906e+01
 1.73570012e+00 3.82050739e+00 2.37658724e+00 8.60848235e+00
 1.04705696e+01 5.49474167e+01 5.43630365e-01 1.36180218e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976726029176309
cond(S) = 54.67858798626425
E1 = -183.1279716571777  E_coul = 54.979796130361564
init E= -128.148175526816
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.738950188070066  LUMO = 2.30266636141578
  mo_energy =
[-3.25489184e+01 -1.85630048e+00 -7.38950188e-01 -7.38950188e-01
 -7.38950188e-01  2.30266636e+00  2.30266636e+00  2.30266636e+00
  2.33888942e+00  1.56906520e+01  1.56906520e+01  1.56906520e+01
  3.89363636e+01  2.76816498e+02  1.40013256e+03  5.73628267e+03]
E1 = -181.77542870007338  E_coul = 53.562292495278406
cycle= 1 E= -128.213136204795  delta_E= -0.065  |g|= 0.204  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.323544
diis-c [-0.10468062  1.        ]
  HOMO = -0.829459820317072  LUMO = 2.23522709155529
  mo_energy =
[-3.28866859e+01 -1.95263435e+00 -8.29459820e-01 -8.29459820e-01
 -8.29459820e-01  2.23522709e+00  2.23522709e+00  2.23522709e+00
  2.26993810e+00  1.54718950e+01  1.54718950e+01  1.54718950e+01
  3.86526167e+01  2.76448195e+02  1.39971932e+03  5.73584091e+03]
E1 = -182.39625414781432  E_coul = 54.18046620478896
cycle= 2 E= -128.215787943025  delta_E= -0.00265  |g|= 0.083  |ddm|= 0.0854
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.138228
diis-c [-2.87674897e-04  2.98042107e-01  7.01957893e-01]
  HOMO = -0.799387213548555  LUMO = 2.25910163903789
  mo_energy =
[-3.27907610e+01 -1.92133937e+00 -7.99387214e-01 -7.99387214e-01
 -7.99387214e-01  2.25910164e+00  2.25910164e+00  2.25910164e+00
  2.29349435e+00  1.55382436e+01  1.55382436e+01  1.55382436e+01
  3.87353250e+01  2.76550981e+02  1.39982876e+03  5.73595298e+03]
E1 = -182.21464638205762  E_coul = 53.99829596388108
cycle= 3 E= -128.216350418177  delta_E= -0.000562  |g|= 0.00081  |ddm|= 0.0243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0011845
diis-c [-4.32394384e-07 -7.99106451e-03 -2.50181690e-02  1.03300923e+00]
  HOMO = -0.799257666014106  LUMO = 2.25925576345642
  mo_energy =
[-3.27904057e+01 -1.92137944e+00 -7.99257666e-01 -7.99257666e-01
 -7.99257666e-01  2.25925576e+00  2.25925576e+00  2.25925576e+00
  2.29349781e+00  1.55385178e+01  1.55385178e+01  1.55385178e+01
  3.87355830e+01  2.76551601e+02  1.39982964e+03  5.73595399e+03]
E1 = -182.21402440693817  E_coul = 53.997673917386514
cycle= 4 E= -128.216350489552  delta_E= -7.14e-08  |g|= 0.000121  |ddm|= 0.000388
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000179992
diis-c [-1.06963087e-09  7.16133328e-04  1.68843946e-03 -1.91850632e-01
  1.18944606e+00]
  HOMO = -0.799227689804051  LUMO = 2.25927697044063
  mo_energy =
[-3.27903340e+01 -1.92138296e+00 -7.99227690e-01 -7.99227690e-01
 -7.99227690e-01  2.25927697e+00  2.25927697e+00  2.25927697e+00
  2.29349182e+00  1.55385681e+01  1.55385681e+01  1.55385681e+01
  3.87356349e+01  2.76551699e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.21390384549528  E_coul = 53.997553353971306
cycle= 5 E= -128.216350491524  delta_E= -1.97e-09  |g|= 2.2e-06  |ddm|= 7.59e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.8214e-06
diis-c [-1.57248905e-13 -1.62930130e-05 -3.11156298e-05  6.61037328e-03
 -5.92186286e-02  1.05265566e+00]
  HOMO = -0.79922741439423  LUMO = 2.25927727979232
  mo_energy =
[-3.27903334e+01 -1.92138332e+00 -7.99227414e-01 -7.99227414e-01
 -7.99227414e-01  2.25927728e+00  2.25927728e+00  2.25927728e+00
  2.29349158e+00  1.55385686e+01  1.55385686e+01  1.55385686e+01
  3.87356353e+01  2.76551700e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.2139025355081  E_coul = 53.99755204398347
cycle= 6 E= -128.216350491525  delta_E= -6.82e-13  |g|= 6.73e-08  |ddm|= 1.57e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2139025355081  E_coul = 53.99755204398347
  HOMO = -0.799227452127664  LUMO = 2.25927724753216
  mo_energy =
[-3.27903335e+01 -1.92138336e+00 -7.99227452e-01 -7.99227452e-01
 -7.99227452e-01  2.25927725e+00  2.25927725e+00  2.25927725e+00
  2.29349155e+00  1.55385685e+01  1.55385685e+01  1.55385685e+01
  3.87356352e+01  2.76551700e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.2139027397911  E_coul = 53.9975522482666
Extra cycle  E= -128.216350491525  delta_E= 1.42e-13  |g|= 2.76e-08  |ddm|= 2.61e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.34563671e+03 1.89451787e+02 7.36975792e+02 5.23943381e-01
 4.41640321e+01 1.22409996e+01 1.73570012e+00 2.37658724e+00
 1.04705696e+01 5.43630365e-01]
E = -128.2163504915245
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:14 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2345.63670998        1
[INPUT] 0    0    [1    /1   ]  189.451787398        1
[INPUT] 0    0    [1    /1   ]  736.975792046        1
[INPUT] 0    0    [1    /1   ]  0.523943380868       1
[INPUT] 0    0    [1    /1   ]  44.1640321041        1
[INPUT] 0    0    [1    /1   ]  12.2409995979        1
[INPUT] 0    0    [1    /1   ]  1.73570011695        1
[INPUT] 1    0    [1    /1   ]  2.3765872378         1
[INPUT] 1    0    [1    /1   ]  10.4705696331        1
[INPUT] 1    0    [1    /1   ]  0.54363036525        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2345.636709976665, 1.0]], [0, [189.45178739754542, 1.0]], [0, [736.9757920458704, 1.0]], [0, [0.5239433808681442, 1.0]], [0, [44.16403210411158, 1.0]], [0, [12.240999597910706, 1.0]], [0, [1.7357001169459574, 1.0]], [1, [2.3765872377968407, 1.0]], [1, [10.470569633118084, 1.0]], [1, [0.5436303652499013, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2345.63670998]
bas 1, expnt(s) = [189.4517874]
bas 2, expnt(s) = [736.97579205]
bas 3, expnt(s) = [0.52394338]
bas 4, expnt(s) = [44.1640321]
bas 5, expnt(s) = [12.2409996]
bas 6, expnt(s) = [1.73570012]
bas 7, expnt(s) = [2.37658724]
bas 8, expnt(s) = [10.47056963]
bas 9, expnt(s) = [0.54363037]
CPU time:       175.81
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.34563671e+03 8.51550850e+02 1.89451787e+02 1.29014658e+02
 7.36975792e+02 3.57359179e+02 5.23943381e-01 1.55588786e+00
 4.41640321e+01 4.32829210e+01 1.22409996e+01 1.65339906e+01
 1.73570012e+00 3.82050739e+00 2.37658724e+00 8.60848235e+00
 1.04705696e+01 5.49474167e+01 5.43630365e-01 1.36180218e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976726029176309
cond(S) = 54.67858798626425
E1 = -183.1279716571777  E_coul = 54.979796130361564
init E= -128.148175526816
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.738950188070066  LUMO = 2.30266636141578
  mo_energy =
[-3.25489184e+01 -1.85630048e+00 -7.38950188e-01 -7.38950188e-01
 -7.38950188e-01  2.30266636e+00  2.30266636e+00  2.30266636e+00
  2.33888942e+00  1.56906520e+01  1.56906520e+01  1.56906520e+01
  3.89363636e+01  2.76816498e+02  1.40013256e+03  5.73628267e+03]
E1 = -181.77542870007338  E_coul = 53.562292495278406
cycle= 1 E= -128.213136204795  delta_E= -0.065  |g|= 0.204  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.323544
diis-c [-0.10468062  1.        ]
  HOMO = -0.829459820317072  LUMO = 2.23522709155529
  mo_energy =
[-3.28866859e+01 -1.95263435e+00 -8.29459820e-01 -8.29459820e-01
 -8.29459820e-01  2.23522709e+00  2.23522709e+00  2.23522709e+00
  2.26993810e+00  1.54718950e+01  1.54718950e+01  1.54718950e+01
  3.86526167e+01  2.76448195e+02  1.39971932e+03  5.73584091e+03]
E1 = -182.39625414781432  E_coul = 54.18046620478896
cycle= 2 E= -128.215787943025  delta_E= -0.00265  |g|= 0.083  |ddm|= 0.0854
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.138228
diis-c [-2.87674897e-04  2.98042107e-01  7.01957893e-01]
  HOMO = -0.799387213548555  LUMO = 2.25910163903789
  mo_energy =
[-3.27907610e+01 -1.92133937e+00 -7.99387214e-01 -7.99387214e-01
 -7.99387214e-01  2.25910164e+00  2.25910164e+00  2.25910164e+00
  2.29349435e+00  1.55382436e+01  1.55382436e+01  1.55382436e+01
  3.87353250e+01  2.76550981e+02  1.39982876e+03  5.73595298e+03]
E1 = -182.21464638205762  E_coul = 53.99829596388108
cycle= 3 E= -128.216350418177  delta_E= -0.000562  |g|= 0.00081  |ddm|= 0.0243
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0011845
diis-c [-4.32394384e-07 -7.99106451e-03 -2.50181690e-02  1.03300923e+00]
  HOMO = -0.799257666014106  LUMO = 2.25925576345642
  mo_energy =
[-3.27904057e+01 -1.92137944e+00 -7.99257666e-01 -7.99257666e-01
 -7.99257666e-01  2.25925576e+00  2.25925576e+00  2.25925576e+00
  2.29349781e+00  1.55385178e+01  1.55385178e+01  1.55385178e+01
  3.87355830e+01  2.76551601e+02  1.39982964e+03  5.73595399e+03]
E1 = -182.21402440693817  E_coul = 53.997673917386514
cycle= 4 E= -128.216350489552  delta_E= -7.14e-08  |g|= 0.000121  |ddm|= 0.000388
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000179992
diis-c [-1.06963087e-09  7.16133328e-04  1.68843946e-03 -1.91850632e-01
  1.18944606e+00]
  HOMO = -0.799227689804051  LUMO = 2.25927697044063
  mo_energy =
[-3.27903340e+01 -1.92138296e+00 -7.99227690e-01 -7.99227690e-01
 -7.99227690e-01  2.25927697e+00  2.25927697e+00  2.25927697e+00
  2.29349182e+00  1.55385681e+01  1.55385681e+01  1.55385681e+01
  3.87356349e+01  2.76551699e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.21390384549528  E_coul = 53.997553353971306
cycle= 5 E= -128.216350491524  delta_E= -1.97e-09  |g|= 2.2e-06  |ddm|= 7.59e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=2.8214e-06
diis-c [-1.57248905e-13 -1.62930130e-05 -3.11156298e-05  6.61037328e-03
 -5.92186286e-02  1.05265566e+00]
  HOMO = -0.79922741439423  LUMO = 2.25927727979232
  mo_energy =
[-3.27903334e+01 -1.92138332e+00 -7.99227414e-01 -7.99227414e-01
 -7.99227414e-01  2.25927728e+00  2.25927728e+00  2.25927728e+00
  2.29349158e+00  1.55385686e+01  1.55385686e+01  1.55385686e+01
  3.87356353e+01  2.76551700e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.2139025355081  E_coul = 53.99755204398347
cycle= 6 E= -128.216350491525  delta_E= -6.82e-13  |g|= 6.73e-08  |ddm|= 1.57e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2139025355081  E_coul = 53.99755204398347
  HOMO = -0.799227452127664  LUMO = 2.25927724753216
  mo_energy =
[-3.27903335e+01 -1.92138336e+00 -7.99227452e-01 -7.99227452e-01
 -7.99227452e-01  2.25927725e+00  2.25927725e+00  2.25927725e+00
  2.29349155e+00  1.55385685e+01  1.55385685e+01  1.55385685e+01
  3.87356352e+01  2.76551700e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.2139027397911  E_coul = 53.9975522482666
Extra cycle  E= -128.216350491525  delta_E= 1.42e-13  |g|= 2.76e-08  |ddm|= 2.61e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 54.67858798626425
E1 = -182.2139027397911  E_coul = 53.9975522482666
init E= -128.216350491525
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.799227438141114  LUMO = 2.25927725864689
  mo_energy =
[-3.27903335e+01 -1.92138335e+00 -7.99227438e-01 -7.99227438e-01
 -7.99227438e-01  2.25927726e+00  2.25927726e+00  2.25927726e+00
  2.29349156e+00  1.55385685e+01  1.55385685e+01  1.55385685e+01
  3.87356353e+01  2.76551700e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.21390265382715  E_coul = 53.99755216230256
cycle= 1 E= -128.216350491525  delta_E= -8.53e-14  |g|= 1.15e-08  |ddm|= 1.18e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.21390265382715  E_coul = 53.99755216230256
  HOMO = -0.799227444084227  LUMO = 2.25927725392831
  mo_energy =
[-3.27903335e+01 -1.92138335e+00 -7.99227444e-01 -7.99227444e-01
 -7.99227444e-01  2.25927725e+00  2.25927725e+00  2.25927725e+00
  2.29349155e+00  1.55385685e+01  1.55385685e+01  1.55385685e+01
  3.87356352e+01  2.76551700e+02  1.39982978e+03  5.73595414e+03]
E1 = -182.21390268983157  E_coul = 53.99755219830684
Extra cycle  E= -128.216350491525  delta_E= -1.42e-13  |g|= 4.83e-09  |ddm|= 4.81e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.34563671e+03 1.89451787e+02 7.36975792e+02 5.23943381e-01
 4.41640321e+01 1.22409996e+01 1.73570012e+00 2.37658724e+00
 1.04705696e+01 5.43630365e-01]
grad_E = [-2.50291777e-05  9.82549237e-04  1.83819174e-05  4.71900040e-03
 -3.66994138e-03  2.53040694e-03 -8.41950651e-03  1.94395680e-02
 -2.17808608e-02  9.48307564e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2501.13941228        1
[INPUT] 0    0    [1    /1   ]  130.155096603        1
[INPUT] 0    0    [1    /1   ]  205.64929411         1
[INPUT] 0    0    [1    /1   ]  0.486425725167       1
[INPUT] 0    0    [1    /1   ]  36.4784699419        1
[INPUT] 0    0    [1    /1   ]  11.0475579914        1
[INPUT] 0    0    [1    /1   ]  1.62102477466        1
[INPUT] 1    0    [1    /1   ]  2.28571829291        1
[INPUT] 1    0    [1    /1   ]  9.933292149          1
[INPUT] 1    0    [1    /1   ]  0.530242678558       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2501.1394122810852, 1.0]], [0, [130.15509660257533, 1.0]], [0, [205.64929411011485, 1.0]], [0, [0.4864257251668754, 1.0]], [0, [36.478469941863665, 1.0]], [0, [11.047557991416335, 1.0]], [0, [1.6210247746591366, 1.0]], [1, [2.2857182929063313, 1.0]], [1, [9.933292149003242, 1.0]], [1, [0.5302426785576523, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2501.13941228]
bas 1, expnt(s) = [130.1550966]
bas 2, expnt(s) = [205.64929411]
bas 3, expnt(s) = [0.48642573]
bas 4, expnt(s) = [36.47846994]
bas 5, expnt(s) = [11.04755799]
bas 6, expnt(s) = [1.62102477]
bas 7, expnt(s) = [2.28571829]
bas 8, expnt(s) = [9.93329215]
bas 9, expnt(s) = [0.53024268]
CPU time:       178.39
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.50113941e+03 8.93549156e+02 1.30155097e+02 9.73555934e+01
 2.05649294e+02 1.37202000e+02 4.86425725e-01 1.47155814e+00
 3.64784699e+01 3.75009686e+01 1.10475580e+01 1.53096317e+01
 1.62102477e+00 3.62958744e+00 2.28571829e+00 8.19903561e+00
 9.93329215e+00 5.14459159e+01 5.30242679e-01 1.32001159e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.978905840938229
cond(S) = 304.42111761955897
E1 = -182.6672142035163  E_coul = 54.96113663497838
init E= -127.706077568538
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.737622737628517  LUMO = 2.07764531923392
  mo_energy =
[-3.24487773e+01 -1.85168252e+00 -7.37622738e-01 -7.37622738e-01
 -7.37622738e-01  2.07764532e+00  2.22183816e+00  2.22183816e+00
  2.22183816e+00  1.48678670e+01  1.48678670e+01  1.48678670e+01
  3.12376174e+01  1.88578820e+02  6.33554472e+02  4.05374198e+03]
E1 = -181.39882128238693  E_coul = 53.42271830545698
cycle= 1 E= -127.97610297693  delta_E= -0.27  |g|= 0.235  |ddm|= 0.237
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.375136
diis-c [-0.14072733  1.        ]
  HOMO = -0.83612683233623  LUMO = 2.01028178674761
  mo_energy =
[-3.28149407e+01 -1.95600548e+00 -8.36126832e-01 -8.36126832e-01
 -8.36126832e-01  2.01028179e+00  2.15053975e+00  2.15053975e+00
  2.15053975e+00  1.46387051e+01  1.46387051e+01  1.46387051e+01
  3.09533612e+01  1.88197263e+02  6.33122948e+02  4.05322705e+03]
E1 = -182.0716823273846  E_coul = 54.09253634810564
cycle= 2 E= -127.979145979279  delta_E= -0.00304  |g|= 0.0898  |ddm|= 0.0914
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.151504
diis-c [-0.00204544  0.27968506  0.72031494]
  HOMO = -0.802572095787379  LUMO = 2.03420844997995
  mo_energy =
[-3.27087317e+01 -1.92108147e+00 -8.02572096e-01 -8.02572096e-01
 -8.02572096e-01  2.03420845e+00  2.17629820e+00  2.17629820e+00
  2.17629820e+00  1.47108151e+01  1.47108151e+01  1.47108151e+01
  3.10400049e+01  1.88306789e+02  6.33239728e+02  4.05335035e+03]
E1 = -181.86763124280426  E_coul = 53.887823682818656
cycle= 3 E= -127.979807559986  delta_E= -0.000662  |g|= 0.00243  |ddm|= 0.0271
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00361618
diis-c [-5.44714411e-07 -1.79968920e-03  1.88333660e-02  9.82966323e-01]
  HOMO = -0.803388460899144  LUMO = 2.03356484752619
  mo_energy =
[-3.27114042e+01 -1.92207731e+00 -8.03388461e-01 -8.03388461e-01
 -8.03388461e-01  2.03356485e+00  2.17572940e+00  2.17572940e+00
  2.17572940e+00  1.47090572e+01  1.47090572e+01  1.47090572e+01
  3.10377949e+01  1.88304172e+02  6.33237079e+02  4.05334774e+03]
E1 = -181.8727824150316  E_coul = 53.89297439776878
cycle= 4 E= -127.979808017263  delta_E= -4.57e-07  |g|= 0.000119  |ddm|= 0.000869
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000180561
diis-c [-2.87385186e-09  1.59933521e-04 -4.43297064e-03 -1.60880310e-01
  1.16515335e+00]
  HOMO = -0.803357807024822  LUMO = 2.03356303346773
  mo_energy =
[-3.27113311e+01 -1.92207751e+00 -8.03357807e-01 -8.03357807e-01
 -8.03357807e-01  2.03356303e+00  2.17575261e+00  2.17575261e+00
  2.17575261e+00  1.47091096e+01  1.47091096e+01  1.47091096e+01
  3.10378443e+01  1.88304259e+02  6.33237195e+02  4.05334790e+03]
E1 = -181.8726583044993  E_coul = 53.89285028535362
cycle= 5 E= -127.979808019146  delta_E= -1.88e-09  |g|= 5.74e-06  |ddm|= 7.14e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.26452e-06
diis-c [-1.63981102e-12 -6.63857159e-06  2.76480745e-04  9.14327452e-03
 -1.11108485e-01  1.10169537e+00]
  HOMO = -0.803357043680177  LUMO = 2.03356206075629
  mo_energy =
[-3.27113299e+01 -1.92207859e+00 -8.03357044e-01 -8.03357044e-01
 -8.03357044e-01  2.03356206e+00  2.17575302e+00  2.17575302e+00
  2.17575302e+00  1.47091104e+01  1.47091104e+01  1.47091104e+01
  3.10378448e+01  1.88304260e+02  6.33237197e+02  4.05334790e+03]
E1 = -181.87265666122354  E_coul = 53.892848642072714
cycle= 6 E= -127.979808019151  delta_E= -5.13e-12  |g|= 2.82e-08  |ddm|= 4.45e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -181.87265666122354  E_coul = 53.892848642072714
  HOMO = -0.803357059020243  LUMO = 2.03356205219188
  mo_energy =
[-3.27113299e+01 -1.92207861e+00 -8.03357059e-01 -8.03357059e-01
 -8.03357059e-01  2.03356205e+00  2.17575301e+00  2.17575301e+00
  2.17575301e+00  1.47091104e+01  1.47091104e+01  1.47091104e+01
  3.10378448e+01  1.88304260e+02  6.33237197e+02  4.05334790e+03]
E1 = -181.87265670669044  E_coul = 53.89284868753942
Extra cycle  E= -127.979808019151  delta_E= -1.99e-13  |g|= 6.34e-09  |ddm|= 1.02e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.50113941e+03 1.30155097e+02 2.05649294e+02 4.86425725e-01
 3.64784699e+01 1.10475580e+01 1.62102477e+00 2.28571829e+00
 9.93329215e+00 5.30242679e-01]
E = -127.97980801915102
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:17 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2361.18698021        1
[INPUT] 0    0    [1    /1   ]  183.522118318        1
[INPUT] 0    0    [1    /1   ]  683.843142252        1
[INPUT] 0    0    [1    /1   ]  0.520191615298       1
[INPUT] 0    0    [1    /1   ]  43.3954758879        1
[INPUT] 0    0    [1    /1   ]  12.1216554373        1
[INPUT] 0    0    [1    /1   ]  1.72423258272        1
[INPUT] 1    0    [1    /1   ]  2.36750034331        1
[INPUT] 1    0    [1    /1   ]  10.4168418847        1
[INPUT] 1    0    [1    /1   ]  0.542291596581       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2361.186980207107, 1.0]], [0, [183.5221183180484, 1.0]], [0, [683.8431422522949, 1.0]], [0, [0.5201916152980173, 1.0]], [0, [43.39547588788679, 1.0]], [0, [12.12165543726127, 1.0]], [0, [1.7242325827172753, 1.0]], [1, [2.36750034330779, 1.0]], [1, [10.4168418847066, 1.0]], [1, [0.5422915965806764, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2361.18698021]
bas 1, expnt(s) = [183.52211832]
bas 2, expnt(s) = [683.84314225]
bas 3, expnt(s) = [0.52019162]
bas 4, expnt(s) = [43.39547589]
bas 5, expnt(s) = [12.12165544]
bas 6, expnt(s) = [1.72423258]
bas 7, expnt(s) = [2.36750034]
bas 8, expnt(s) = [10.41684188]
bas 9, expnt(s) = [0.5422916]
CPU time:       179.26
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.36118698e+03 8.55781333e+02 1.83522118e+02 1.25974120e+02
 6.83843142e+02 3.37856591e+02 5.20191615e-01 1.54752451e+00
 4.33954759e+01 4.27167660e+01 1.21216554e+01 1.64129435e+01
 1.72423258e+00 3.80156053e+00 2.36750034e+00 8.56735881e+00
 1.04168419e+01 5.45952027e+01 5.42291597e-01 1.35761143e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976979168690804
cond(S) = 55.67796768404551
E1 = -183.12922531810506  E_coul = 54.97841526113053
init E= -128.150810056975
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.738818889797819  LUMO = 2.29453549096977
  mo_energy =
[-3.25515586e+01 -1.85648171e+00 -7.38818890e-01 -7.38818890e-01
 -7.38818890e-01  2.29453549e+00  2.29453549e+00  2.29453549e+00
  2.31119119e+00  1.56078197e+01  1.56078197e+01  1.56078197e+01
  3.81998093e+01  2.68738668e+02  1.33057656e+03  5.58178666e+03]
E1 = -181.76825470419433  E_coul = 53.55175916237086
cycle= 1 E= -128.216495541823  delta_E= -0.0657  |g|= 0.205  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.325529
diis-c [-0.10596882  1.        ]
  HOMO = -0.829998524434568  LUMO = 2.22678892162061
  mo_energy =
[-3.28911443e+01 -1.95353457e+00 -8.29998524e-01 -8.29998524e-01
 -8.29998524e-01  2.22678892e+00  2.22678892e+00  2.22678892e+00
  2.24243440e+00  1.53882924e+01  1.53882924e+01  1.53882924e+01
  3.79159642e+01  2.68369698e+02  1.33016301e+03  5.58134375e+03]
E1 = -182.39347744841245  E_coul = 54.17429904651966
cycle= 2 E= -128.219178401893  delta_E= -0.00268  |g|= 0.0835  |ddm|= 0.086
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139283
diis-c [-2.79327201e-04  2.98410890e-01  7.01589110e-01]
  HOMO = -0.79971759334334  LUMO = 2.25074898254555
  mo_energy =
[-3.27946356e+01 -1.92202471e+00 -7.99717593e-01 -7.99717593e-01
 -7.99717593e-01  2.25074898e+00  2.25074898e+00  2.25074898e+00
  2.26593017e+00  1.54549237e+01  1.54549237e+01  1.54549237e+01
  3.79988204e+01  2.68472862e+02  1.33027292e+03  5.58145645e+03]
E1 = -182.2105108333929  E_coul = 53.99076197400404
cycle= 3 E= -128.219748859389  delta_E= -0.00057  |g|= 0.000827  |ddm|= 0.0244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00121995
diis-c [-4.44254037e-07 -8.21549821e-03 -2.57603653e-02  1.03397586e+00]
  HOMO = -0.799578409118449  LUMO = 2.25091109068125
  mo_energy =
[-3.27942559e+01 -1.92205690e+00 -7.99578409e-01 -7.99578409e-01
 -7.99578409e-01  2.25091109e+00  2.25091109e+00  2.25091109e+00
  2.26594025e+00  1.54552167e+01  1.54552167e+01  1.54552167e+01
  3.79990976e+01  2.68473502e+02  1.33027383e+03  5.58145750e+03]
E1 = -182.20984060736617  E_coul = 53.99009167373756
cycle= 4 E= -128.219748933629  delta_E= -7.42e-08  |g|= 0.000122  |ddm|= 0.000392
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000180658
diis-c [-1.17549054e-09  7.14855065e-04  1.73246508e-03 -1.90558638e-01
  1.18811132e+00]
  HOMO = -0.799548338965238  LUMO = 2.25093221777222
  mo_energy =
[-3.27941844e+01 -1.92206066e+00 -7.99548339e-01 -7.99548339e-01
 -7.99548339e-01  2.25093222e+00  2.25093222e+00  2.25093222e+00
  2.26593401e+00  1.54552669e+01  1.54552669e+01  1.54552669e+01
  3.79991487e+01  2.68473599e+02  1.33027396e+03  5.58145765e+03]
E1 = -182.2097209112841  E_coul = 53.9899719756474
cycle= 5 E= -128.219748935637  delta_E= -2.01e-09  |g|= 2.34e-06  |ddm|= 7.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01528e-06
diis-c [-1.72945996e-13 -1.54517904e-05 -3.07307430e-05  6.52167355e-03
 -5.99468028e-02  1.05347131e+00]
  HOMO = -0.799548036074307  LUMO = 2.250932548566
  mo_energy =
[-3.27941838e+01 -1.92206104e+00 -7.99548036e-01 -7.99548036e-01
 -7.99548036e-01  2.25093255e+00  2.25093255e+00  2.25093255e+00
  2.26593375e+00  1.54552674e+01  1.54552674e+01  1.54552674e+01
  3.79991491e+01  2.68473599e+02  1.33027397e+03  5.58145765e+03]
E1 = -182.2097195002159  E_coul = 53.98997056457869
cycle= 6 E= -128.219748935637  delta_E= -4.83e-13  |g|= 6.91e-08  |ddm|= 1.68e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2097195002159  E_coul = 53.98997056457869
  HOMO = -0.799548074930876  LUMO = 2.25093251559884
  mo_energy =
[-3.27941839e+01 -1.92206108e+00 -7.99548075e-01 -7.99548075e-01
 -7.99548075e-01  2.25093252e+00  2.25093252e+00  2.25093252e+00
  2.26593372e+00  1.54552673e+01  1.54552673e+01  1.54552673e+01
  3.79991491e+01  2.68473599e+02  1.33027396e+03  5.58145765e+03]
E1 = -182.2097197099079  E_coul = 53.98997077427073
Extra cycle  E= -128.219748935637  delta_E= 5.68e-14  |g|= 2.83e-08  |ddm|= 2.68e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.36118698e+03 1.83522118e+02 6.83843142e+02 5.20191615e-01
 4.33954759e+01 1.21216554e+01 1.72423258e+00 2.36750034e+00
 1.04168419e+01 5.42291597e-01]
E = -128.21974893563714
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2361.18698021        1
[INPUT] 0    0    [1    /1   ]  183.522118318        1
[INPUT] 0    0    [1    /1   ]  683.843142252        1
[INPUT] 0    0    [1    /1   ]  0.520191615298       1
[INPUT] 0    0    [1    /1   ]  43.3954758879        1
[INPUT] 0    0    [1    /1   ]  12.1216554373        1
[INPUT] 0    0    [1    /1   ]  1.72423258272        1
[INPUT] 1    0    [1    /1   ]  2.36750034331        1
[INPUT] 1    0    [1    /1   ]  10.4168418847        1
[INPUT] 1    0    [1    /1   ]  0.542291596581       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2361.186980207107, 1.0]], [0, [183.5221183180484, 1.0]], [0, [683.8431422522949, 1.0]], [0, [0.5201916152980173, 1.0]], [0, [43.39547588788679, 1.0]], [0, [12.12165543726127, 1.0]], [0, [1.7242325827172753, 1.0]], [1, [2.36750034330779, 1.0]], [1, [10.4168418847066, 1.0]], [1, [0.5422915965806764, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2361.18698021]
bas 1, expnt(s) = [183.52211832]
bas 2, expnt(s) = [683.84314225]
bas 3, expnt(s) = [0.52019162]
bas 4, expnt(s) = [43.39547589]
bas 5, expnt(s) = [12.12165544]
bas 6, expnt(s) = [1.72423258]
bas 7, expnt(s) = [2.36750034]
bas 8, expnt(s) = [10.41684188]
bas 9, expnt(s) = [0.5422916]
CPU time:       180.13
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.36118698e+03 8.55781333e+02 1.83522118e+02 1.25974120e+02
 6.83843142e+02 3.37856591e+02 5.20191615e-01 1.54752451e+00
 4.33954759e+01 4.27167660e+01 1.21216554e+01 1.64129435e+01
 1.72423258e+00 3.80156053e+00 2.36750034e+00 8.56735881e+00
 1.04168419e+01 5.45952027e+01 5.42291597e-01 1.35761143e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976979168690804
cond(S) = 55.67796768404551
E1 = -183.12922531810506  E_coul = 54.97841526113053
init E= -128.150810056975
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.738818889797819  LUMO = 2.29453549096977
  mo_energy =
[-3.25515586e+01 -1.85648171e+00 -7.38818890e-01 -7.38818890e-01
 -7.38818890e-01  2.29453549e+00  2.29453549e+00  2.29453549e+00
  2.31119119e+00  1.56078197e+01  1.56078197e+01  1.56078197e+01
  3.81998093e+01  2.68738668e+02  1.33057656e+03  5.58178666e+03]
E1 = -181.76825470419433  E_coul = 53.55175916237086
cycle= 1 E= -128.216495541823  delta_E= -0.0657  |g|= 0.205  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.325529
diis-c [-0.10596882  1.        ]
  HOMO = -0.829998524434568  LUMO = 2.22678892162061
  mo_energy =
[-3.28911443e+01 -1.95353457e+00 -8.29998524e-01 -8.29998524e-01
 -8.29998524e-01  2.22678892e+00  2.22678892e+00  2.22678892e+00
  2.24243440e+00  1.53882924e+01  1.53882924e+01  1.53882924e+01
  3.79159642e+01  2.68369698e+02  1.33016301e+03  5.58134375e+03]
E1 = -182.39347744841245  E_coul = 54.17429904651966
cycle= 2 E= -128.219178401893  delta_E= -0.00268  |g|= 0.0835  |ddm|= 0.086
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139283
diis-c [-2.79327201e-04  2.98410890e-01  7.01589110e-01]
  HOMO = -0.79971759334334  LUMO = 2.25074898254555
  mo_energy =
[-3.27946356e+01 -1.92202471e+00 -7.99717593e-01 -7.99717593e-01
 -7.99717593e-01  2.25074898e+00  2.25074898e+00  2.25074898e+00
  2.26593017e+00  1.54549237e+01  1.54549237e+01  1.54549237e+01
  3.79988204e+01  2.68472862e+02  1.33027292e+03  5.58145645e+03]
E1 = -182.2105108333929  E_coul = 53.99076197400404
cycle= 3 E= -128.219748859389  delta_E= -0.00057  |g|= 0.000827  |ddm|= 0.0244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00121995
diis-c [-4.44254037e-07 -8.21549821e-03 -2.57603653e-02  1.03397586e+00]
  HOMO = -0.799578409118449  LUMO = 2.25091109068125
  mo_energy =
[-3.27942559e+01 -1.92205690e+00 -7.99578409e-01 -7.99578409e-01
 -7.99578409e-01  2.25091109e+00  2.25091109e+00  2.25091109e+00
  2.26594025e+00  1.54552167e+01  1.54552167e+01  1.54552167e+01
  3.79990976e+01  2.68473502e+02  1.33027383e+03  5.58145750e+03]
E1 = -182.20984060736617  E_coul = 53.99009167373756
cycle= 4 E= -128.219748933629  delta_E= -7.42e-08  |g|= 0.000122  |ddm|= 0.000392
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000180658
diis-c [-1.17549054e-09  7.14855065e-04  1.73246508e-03 -1.90558638e-01
  1.18811132e+00]
  HOMO = -0.799548338965238  LUMO = 2.25093221777222
  mo_energy =
[-3.27941844e+01 -1.92206066e+00 -7.99548339e-01 -7.99548339e-01
 -7.99548339e-01  2.25093222e+00  2.25093222e+00  2.25093222e+00
  2.26593401e+00  1.54552669e+01  1.54552669e+01  1.54552669e+01
  3.79991487e+01  2.68473599e+02  1.33027396e+03  5.58145765e+03]
E1 = -182.2097209112841  E_coul = 53.9899719756474
cycle= 5 E= -128.219748935637  delta_E= -2.01e-09  |g|= 2.34e-06  |ddm|= 7.68e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.01528e-06
diis-c [-1.72945996e-13 -1.54517904e-05 -3.07307430e-05  6.52167355e-03
 -5.99468028e-02  1.05347131e+00]
  HOMO = -0.799548036074307  LUMO = 2.250932548566
  mo_energy =
[-3.27941838e+01 -1.92206104e+00 -7.99548036e-01 -7.99548036e-01
 -7.99548036e-01  2.25093255e+00  2.25093255e+00  2.25093255e+00
  2.26593375e+00  1.54552674e+01  1.54552674e+01  1.54552674e+01
  3.79991491e+01  2.68473599e+02  1.33027397e+03  5.58145765e+03]
E1 = -182.2097195002159  E_coul = 53.98997056457869
cycle= 6 E= -128.219748935637  delta_E= -4.83e-13  |g|= 6.91e-08  |ddm|= 1.68e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2097195002159  E_coul = 53.98997056457869
  HOMO = -0.799548074930876  LUMO = 2.25093251559884
  mo_energy =
[-3.27941839e+01 -1.92206108e+00 -7.99548075e-01 -7.99548075e-01
 -7.99548075e-01  2.25093252e+00  2.25093252e+00  2.25093252e+00
  2.26593372e+00  1.54552673e+01  1.54552673e+01  1.54552673e+01
  3.79991491e+01  2.68473599e+02  1.33027396e+03  5.58145765e+03]
E1 = -182.2097197099079  E_coul = 53.98997077427073
Extra cycle  E= -128.219748935637  delta_E= 5.68e-14  |g|= 2.83e-08  |ddm|= 2.68e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 55.67796768404551
E1 = -182.2097197099079  E_coul = 53.98997077427073
init E= -128.219748935637
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.79954806057093  LUMO = 2.2509325269724
  mo_energy =
[-3.27941838e+01 -1.92206106e+00 -7.99548061e-01 -7.99548061e-01
 -7.99548061e-01  2.25093253e+00  2.25093253e+00  2.25093253e+00
  2.26593373e+00  1.54552673e+01  1.54552673e+01  1.54552673e+01
  3.79991491e+01  2.68473599e+02  1.33027396e+03  5.58145765e+03]
E1 = -182.20971962156096  E_coul = 53.989970685923836
cycle= 1 E= -128.219748935637  delta_E=    0  |g|= 1.18e-08  |ddm|= 1.22e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.20971962156096  E_coul = 53.989970685923836
  HOMO = -0.79954806668069  LUMO = 2.25093252213757
  mo_energy =
[-3.27941839e+01 -1.92206107e+00 -7.99548067e-01 -7.99548067e-01
 -7.99548067e-01  2.25093252e+00  2.25093252e+00  2.25093252e+00
  2.26593373e+00  1.54552673e+01  1.54552673e+01  1.54552673e+01
  3.79991491e+01  2.68473599e+02  1.33027396e+03  5.58145765e+03]
E1 = -182.2097196585998  E_coul = 53.98997072296258
Extra cycle  E= -128.219748935637  delta_E= -5.68e-14  |g|= 4.97e-09  |ddm|= 4.95e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.36118698e+03 1.83522118e+02 6.83843142e+02 5.20191615e-01
 4.33954759e+01 1.21216554e+01 1.72423258e+00 2.36750034e+00
 1.04168419e+01 5.42291597e-01]
grad_E = [-2.33815786e-05  1.08619483e-03  2.18517837e-06  4.84600191e-03
 -3.98443876e-03  2.98519850e-03 -8.99008324e-03  1.93370295e-02
 -2.23260544e-02  1.04847809e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2491.98535266        1
[INPUT] 0    0    [1    /1   ]  123.246578719        1
[INPUT] 0    0    [1    /1   ]  237.782959377        1
[INPUT] 0    0    [1    /1   ]  0.488870598295       1
[INPUT] 0    0    [1    /1   ]  35.770787273         1
[INPUT] 0    0    [1    /1   ]  10.9683075786        1
[INPUT] 0    0    [1    /1   ]  1.63462887504        1
[INPUT] 1    0    [1    /1   ]  2.35283800671        1
[INPUT] 1    0    [1    /1   ]  10.4032934002        1
[INPUT] 1    0    [1    /1   ]  0.539696264556       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2491.9853526589623, 1.0]], [0, [123.24657871909054, 1.0]], [0, [237.78295937697203, 1.0]], [0, [0.4888705982952398, 1.0]], [0, [35.77078727303092, 1.0]], [0, [10.968307578587044, 1.0]], [0, [1.6346288750372162, 1.0]], [1, [2.3528380067149985, 1.0]], [1, [10.403293400224594, 1.0]], [1, [0.539696264555867, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2491.98535266]
bas 1, expnt(s) = [123.24657872]
bas 2, expnt(s) = [237.78295938]
bas 3, expnt(s) = [0.4888706]
bas 4, expnt(s) = [35.77078727]
bas 5, expnt(s) = [10.96830758]
bas 6, expnt(s) = [1.63462888]
bas 7, expnt(s) = [2.35283801]
bas 8, expnt(s) = [10.4032934]
bas 9, expnt(s) = [0.53969626]
CPU time:       182.56
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.49198535e+03 8.91095270e+02 1.23246579e+02 9.34536307e+01
 2.37782959e+02 1.52985606e+02 4.88870598e-01 1.47710192e+00
 3.57707873e+01 3.69539952e+01 1.09683076e+01 1.52271891e+01
 1.63462888e+00 3.65240896e+00 2.35283801e+00 8.50108632e+00
 1.04032934e+01 5.45064568e+01 5.39696265e-01 1.34949462e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.977662224512777
cond(S) = 168.06737447047567
E1 = -182.81557073890863  E_coul = 54.97421972937549
init E= -127.841351009533
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739076079506673  LUMO = 2.09728108278834
  mo_energy =
[-3.24774993e+01 -1.85299471e+00 -7.39076080e-01 -7.39076080e-01
 -7.39076080e-01  2.09728108e+00  2.27821976e+00  2.27821976e+00
  2.27821976e+00  1.55407516e+01  1.55407516e+01  1.55407516e+01
  3.09687037e+01  1.86458341e+02  6.57468334e+02  4.12243436e+03]
E1 = -181.56461819009732  E_coul = 53.50584958726115
cycle= 1 E= -128.058768602836  delta_E= -0.217  |g|= 0.223  |ddm|= 0.218
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.354501
diis-c [-0.12567121  1.        ]
  HOMO = -0.832729831437136  LUMO = 2.03350279160889
  mo_energy =
[-3.28289179e+01 -1.95175845e+00 -8.32729831e-01 -8.32729831e-01
 -8.32729831e-01  2.03350279e+00  2.20895192e+00  2.20895192e+00
  2.20895192e+00  1.53163356e+01  1.53163356e+01  1.53163356e+01
  3.06969180e+01  1.86092121e+02  6.57053506e+02  4.12194846e+03]
E1 = -182.20493573896053  E_coul = 54.14337278560644
cycle= 2 E= -128.061562953354  delta_E= -0.00279  |g|= 0.0856  |ddm|= 0.087
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.144103
diis-c [-0.00146925  0.28272261  0.71727739]
  HOMO = -0.800988635868558  LUMO = 2.05624298292434
  mo_energy =
[-3.27279918e+01 -1.91876191e+00 -8.00988636e-01 -8.00988636e-01
 -8.00988636e-01  2.05624298e+00  2.23391060e+00  2.23391060e+00
  2.23391060e+00  1.53860447e+01  1.53860447e+01  1.53860447e+01
  3.07788622e+01  1.86196252e+02  6.57164999e+02  4.12206598e+03]
E1 = -182.01294580153103  E_coul = 53.95078584388036
cycle= 3 E= -128.062159957651  delta_E= -0.000597  |g|= 0.00178  |ddm|= 0.0256
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00253244
diis-c [-4.36959041e-07 -2.00901132e-03  1.21001732e-02  9.89908838e-01]
  HOMO = -0.801566481251659  LUMO = 2.05577657344098
  mo_energy =
[-3.27298857e+01 -1.91949003e+00 -8.01566481e-01 -8.01566481e-01
 -8.01566481e-01  2.05577657e+00  2.23351067e+00  2.23351067e+00
  2.23351067e+00  1.53847807e+01  1.53847807e+01  1.53847807e+01
  3.07772907e+01  1.86194435e+02  6.57163206e+02  4.12206427e+03]
E1 = -182.01657800211993  E_coul = 53.95441780731314
cycle= 4 E= -128.062160194807  delta_E= -2.37e-07  |g|= 0.000104  |ddm|= 0.000652
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000158727
diis-c [-2.34893464e-09  1.61916422e-04 -3.20024607e-03 -1.54333217e-01
  1.15737155e+00]
  HOMO = -0.801539489908021  LUMO = 2.05577525226112
  mo_energy =
[-3.27298212e+01 -1.91948970e+00 -8.01539490e-01 -8.01539490e-01
 -8.01539490e-01  2.05577525e+00  2.23353145e+00  2.23353145e+00
  2.23353145e+00  1.53848276e+01  1.53848276e+01  1.53848276e+01
  3.07773342e+01  1.86194513e+02  6.57163311e+02  4.12206441e+03]
E1 = -182.01646999350157  E_coul = 53.95430979727748
cycle= 5 E= -128.062160196224  delta_E= -1.42e-09  |g|= 5.49e-06  |ddm|= 6.11e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=7.102e-06
diis-c [-1.17898850e-12 -6.28280666e-06  2.10538570e-04  9.05067381e-03
 -1.17098614e-01  1.10784368e+00]
  HOMO = -0.801538629084043  LUMO = 2.05577445208811
  mo_energy =
[-3.27298197e+01 -1.91949059e+00 -8.01538629e-01 -8.01538629e-01
 -8.01538629e-01  2.05577445e+00  2.23353200e+00  2.23353200e+00
  2.23353200e+00  1.53848286e+01  1.53848286e+01  1.53848286e+01
  3.07773349e+01  1.86194515e+02  6.57163313e+02  4.12206441e+03]
E1 = -182.0164677863427  E_coul = 53.95430759011407
cycle= 6 E= -128.062160196229  delta_E= -4.55e-12  |g|= 3.62e-08  |ddm|= 4.19e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.0164677863427  E_coul = 53.95430759011407
  HOMO = -0.801538649955464  LUMO = 2.0557744382365
  mo_energy =
[-3.27298197e+01 -1.91949061e+00 -8.01538650e-01 -8.01538650e-01
 -8.01538650e-01  2.05577444e+00  2.23353198e+00  2.23353198e+00
  2.23353198e+00  1.53848286e+01  1.53848286e+01  1.53848286e+01
  3.07773349e+01  1.86194515e+02  6.57163313e+02  4.12206441e+03]
E1 = -182.01646787127356  E_coul = 53.95430767504504
Extra cycle  E= -128.062160196229  delta_E= 1.14e-13  |g|= 1.15e-08  |ddm|= 1.36e-08
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.49198535e+03 1.23246579e+02 2.37782959e+02 4.88870598e-01
 3.57707873e+01 1.09683076e+01 1.63462888e+00 2.35283801e+00
 1.04032934e+01 5.39696265e-01]
E = -128.06216019622852
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:21 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2374.92874729        1
[INPUT] 0    0    [1    /1   ]  177.189528618        1
[INPUT] 0    0    [1    /1   ]  636.979752253        1
[INPUT] 0    0    [1    /1   ]  0.516901007682       1
[INPUT] 0    0    [1    /1   ]  42.5944208511        1
[INPUT] 0    0    [1    /1   ]  12.000483917         1
[INPUT] 0    0    [1    /1   ]  1.71481875548        1
[INPUT] 1    0    [1    /1   ]  2.36595990813        1
[INPUT] 1    0    [1    /1   ]  10.4154184716        1
[INPUT] 1    0    [1    /1   ]  0.542018929211       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2374.9287472932915, 1.0]], [0, [177.18952861806673, 1.0]], [0, [636.9797522529285, 1.0]], [0, [0.5169010076819858, 1.0]], [0, [42.59442085114617, 1.0]], [0, [12.00048391695749, 1.0]], [0, [1.7148187554813807, 1.0]], [1, [2.3659599081278984, 1.0]], [1, [10.415418471596539, 1.0]], [1, [0.542018929210833, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2374.92874729]
bas 1, expnt(s) = [177.18952862]
bas 2, expnt(s) = [636.97975225]
bas 3, expnt(s) = [0.51690101]
bas 4, expnt(s) = [42.59442085]
bas 5, expnt(s) = [12.00048392]
bas 6, expnt(s) = [1.71481876]
bas 7, expnt(s) = [2.36595991]
bas 8, expnt(s) = [10.41541847]
bas 9, expnt(s) = [0.54201893]
CPU time:       183.41
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.37492875e+03 8.59514015e+02 1.77189529e+02 1.22699718e+02
 6.36979752e+02 3.20338579e+02 5.16901008e-01 1.54017673e+00
 4.25944209e+01 4.21239960e+01 1.20004839e+01 1.62897378e+01
 1.71481876e+00 3.78598329e+00 2.36595991e+00 8.56039134e+00
 1.04154185e+01 5.45858776e+01 5.42018929e-01 1.35675822e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.977071345356595
cond(S) = 57.099453940342485
E1 = -183.1325345125077  E_coul = 54.97819832034793
init E= -128.15433619216
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.738836362251332  LUMO = 2.28752600704223
  mo_energy =
[-3.25535771e+01 -1.85660941e+00 -7.38836362e-01 -7.38836362e-01
 -7.38836362e-01  2.28752601e+00  2.29282499e+00  2.29282499e+00
  2.29282499e+00  1.56007772e+01  1.56007772e+01  1.56007772e+01
  3.74606034e+01  2.60373168e+02  1.26435468e+03  5.43846586e+03]
E1 = -181.76995331761736  E_coul = 53.54930249448391
cycle= 1 E= -128.220650823133  delta_E= -0.0663  |g|= 0.205  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.326265
diis-c [-0.10644909  1.        ]
  HOMO = -0.830181040541442  LUMO = 2.2193422316786
  mo_energy =
[-3.28936592e+01 -1.95378448e+00 -8.30181041e-01 -8.30181041e-01
 -8.30181041e-01  2.21934223e+00  2.22498750e+00  2.22498750e+00
  2.22498750e+00  1.53809535e+01  1.53809535e+01  1.53809535e+01
  3.71779257e+01  2.60004942e+02  1.26394215e+03  5.43802307e+03]
E1 = -182.3962519337672  E_coul = 54.17291114850815
cycle= 2 E= -128.223340785259  delta_E= -0.00269  |g|= 0.0837  |ddm|= 0.0861
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1396
diis-c [-2.7304117e-04  2.9844812e-01  7.0155188e-01]
  HOMO = -0.79984480632882  LUMO = 2.24268295256895
  mo_energy =
[-3.27970040e+01 -1.92222235e+00 -7.99844806e-01 -7.99844806e-01
 -7.99844806e-01  2.24268295e+00  2.24897513e+00  2.24897513e+00
  2.24897513e+00  1.54476872e+01  1.54476872e+01  1.54476872e+01
  3.72605211e+01  2.60108006e+02  1.26405206e+03  5.43813593e+03]
E1 = -182.212963666175  E_coul = 53.98905070206876
cycle= 3 E= -128.223912964106  delta_E= -0.000572  |g|= 0.000826  |ddm|= 0.0245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00121879
diis-c [-4.43307721e-07 -8.27181217e-03 -2.58827785e-02  1.03415459e+00]
  HOMO = -0.79970408650265  LUMO = 2.24269544966128
  mo_energy =
[-3.27966217e+01 -1.92225170e+00 -7.99704087e-01 -7.99704087e-01
 -7.99704087e-01  2.24269545e+00  2.24913869e+00  2.24913869e+00
  2.24913869e+00  1.54479832e+01  1.54479832e+01  1.54479832e+01
  3.72607988e+01  2.60108641e+02  1.26405296e+03  5.43813698e+03]
E1 = -182.2122883592752  E_coul = 53.98837532163566
cycle= 4 E= -128.22391303764  delta_E= -7.35e-08  |g|= 0.000121  |ddm|= 0.00039
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00017895
diis-c [-1.26005206e-09  7.05421009e-04  1.71955714e-03 -1.89117222e-01
  1.18669224e+00]
  HOMO = -0.799674266559301  LUMO = 2.24268921730528
  mo_energy =
[-3.27965511e+01 -1.92225546e+00 -7.99674267e-01 -7.99674267e-01
 -7.99674267e-01  2.24268922e+00  2.24915960e+00  2.24915960e+00
  2.24915960e+00  1.54480327e+01  1.54480327e+01  1.54480327e+01
  3.72608488e+01  2.60108736e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21217080868237  E_coul = 53.988257769062486
cycle= 5 E= -128.22391303962  delta_E= -1.98e-09  |g|= 2.48e-06  |ddm|= 7.64e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.21261e-06
diis-c [-1.87249978e-13 -1.46437640e-05 -2.89802271e-05  6.48612349e-03
 -6.13678814e-02  1.05492538e+00]
  HOMO = -0.799673934208392  LUMO = 2.24268894751434
  mo_energy =
[-3.27965505e+01 -1.92225586e+00 -7.99673934e-01 -7.99673934e-01
 -7.99673934e-01  2.24268895e+00  2.24915996e+00  2.24915996e+00
  2.24915996e+00  1.54480333e+01  1.54480333e+01  1.54480333e+01
  3.72608492e+01  2.60108737e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21216931305466  E_coul = 53.98825627343391
cycle= 6 E= -128.223913039621  delta_E= -8.53e-13  |g|= 6.99e-08  |ddm|= 1.79e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.21216931305466  E_coul = 53.98825627343391
  HOMO = -0.799673973570851  LUMO = 2.24268891562656
  mo_energy =
[-3.27965506e+01 -1.92225590e+00 -7.99673974e-01 -7.99673974e-01
 -7.99673974e-01  2.24268892e+00  2.24915992e+00  2.24915992e+00
  2.24915992e+00  1.54480332e+01  1.54480332e+01  1.54480332e+01
  3.72608491e+01  2.60108737e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21216952466247  E_coul = 53.98825648504161
Extra cycle  E= -128.223913039621  delta_E= -1.14e-13  |g|= 2.86e-08  |ddm|= 2.7e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.37492875e+03 1.77189529e+02 6.36979752e+02 5.16901008e-01
 4.25944209e+01 1.20004839e+01 1.71481876e+00 2.36595991e+00
 1.04154185e+01 5.42018929e-01]
E = -128.22391303962087
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2374.92874729        1
[INPUT] 0    0    [1    /1   ]  177.189528618        1
[INPUT] 0    0    [1    /1   ]  636.979752253        1
[INPUT] 0    0    [1    /1   ]  0.516901007682       1
[INPUT] 0    0    [1    /1   ]  42.5944208511        1
[INPUT] 0    0    [1    /1   ]  12.000483917         1
[INPUT] 0    0    [1    /1   ]  1.71481875548        1
[INPUT] 1    0    [1    /1   ]  2.36595990813        1
[INPUT] 1    0    [1    /1   ]  10.4154184716        1
[INPUT] 1    0    [1    /1   ]  0.542018929211       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2374.9287472932915, 1.0]], [0, [177.18952861806673, 1.0]], [0, [636.9797522529285, 1.0]], [0, [0.5169010076819858, 1.0]], [0, [42.59442085114617, 1.0]], [0, [12.00048391695749, 1.0]], [0, [1.7148187554813807, 1.0]], [1, [2.3659599081278984, 1.0]], [1, [10.415418471596539, 1.0]], [1, [0.542018929210833, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2374.92874729]
bas 1, expnt(s) = [177.18952862]
bas 2, expnt(s) = [636.97975225]
bas 3, expnt(s) = [0.51690101]
bas 4, expnt(s) = [42.59442085]
bas 5, expnt(s) = [12.00048392]
bas 6, expnt(s) = [1.71481876]
bas 7, expnt(s) = [2.36595991]
bas 8, expnt(s) = [10.41541847]
bas 9, expnt(s) = [0.54201893]
CPU time:       184.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.37492875e+03 8.59514015e+02 1.77189529e+02 1.22699718e+02
 6.36979752e+02 3.20338579e+02 5.16901008e-01 1.54017673e+00
 4.25944209e+01 4.21239960e+01 1.20004839e+01 1.62897378e+01
 1.71481876e+00 3.78598329e+00 2.36595991e+00 8.56039134e+00
 1.04154185e+01 5.45858776e+01 5.42018929e-01 1.35675822e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.977071345356595
cond(S) = 57.099453940342485
E1 = -183.1325345125077  E_coul = 54.97819832034793
init E= -128.15433619216
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.738836362251332  LUMO = 2.28752600704223
  mo_energy =
[-3.25535771e+01 -1.85660941e+00 -7.38836362e-01 -7.38836362e-01
 -7.38836362e-01  2.28752601e+00  2.29282499e+00  2.29282499e+00
  2.29282499e+00  1.56007772e+01  1.56007772e+01  1.56007772e+01
  3.74606034e+01  2.60373168e+02  1.26435468e+03  5.43846586e+03]
E1 = -181.76995331761736  E_coul = 53.54930249448391
cycle= 1 E= -128.220650823133  delta_E= -0.0663  |g|= 0.205  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.326265
diis-c [-0.10644909  1.        ]
  HOMO = -0.830181040541442  LUMO = 2.2193422316786
  mo_energy =
[-3.28936592e+01 -1.95378448e+00 -8.30181041e-01 -8.30181041e-01
 -8.30181041e-01  2.21934223e+00  2.22498750e+00  2.22498750e+00
  2.22498750e+00  1.53809535e+01  1.53809535e+01  1.53809535e+01
  3.71779257e+01  2.60004942e+02  1.26394215e+03  5.43802307e+03]
E1 = -182.3962519337672  E_coul = 54.17291114850815
cycle= 2 E= -128.223340785259  delta_E= -0.00269  |g|= 0.0837  |ddm|= 0.0861
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.1396
diis-c [-2.7304117e-04  2.9844812e-01  7.0155188e-01]
  HOMO = -0.79984480632882  LUMO = 2.24268295256895
  mo_energy =
[-3.27970040e+01 -1.92222235e+00 -7.99844806e-01 -7.99844806e-01
 -7.99844806e-01  2.24268295e+00  2.24897513e+00  2.24897513e+00
  2.24897513e+00  1.54476872e+01  1.54476872e+01  1.54476872e+01
  3.72605211e+01  2.60108006e+02  1.26405206e+03  5.43813593e+03]
E1 = -182.212963666175  E_coul = 53.98905070206876
cycle= 3 E= -128.223912964106  delta_E= -0.000572  |g|= 0.000826  |ddm|= 0.0245
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00121879
diis-c [-4.43307721e-07 -8.27181217e-03 -2.58827785e-02  1.03415459e+00]
  HOMO = -0.79970408650265  LUMO = 2.24269544966128
  mo_energy =
[-3.27966217e+01 -1.92225170e+00 -7.99704087e-01 -7.99704087e-01
 -7.99704087e-01  2.24269545e+00  2.24913869e+00  2.24913869e+00
  2.24913869e+00  1.54479832e+01  1.54479832e+01  1.54479832e+01
  3.72607988e+01  2.60108641e+02  1.26405296e+03  5.43813698e+03]
E1 = -182.2122883592752  E_coul = 53.98837532163566
cycle= 4 E= -128.22391303764  delta_E= -7.35e-08  |g|= 0.000121  |ddm|= 0.00039
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00017895
diis-c [-1.26005206e-09  7.05421009e-04  1.71955714e-03 -1.89117222e-01
  1.18669224e+00]
  HOMO = -0.799674266559301  LUMO = 2.24268921730528
  mo_energy =
[-3.27965511e+01 -1.92225546e+00 -7.99674267e-01 -7.99674267e-01
 -7.99674267e-01  2.24268922e+00  2.24915960e+00  2.24915960e+00
  2.24915960e+00  1.54480327e+01  1.54480327e+01  1.54480327e+01
  3.72608488e+01  2.60108736e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21217080868237  E_coul = 53.988257769062486
cycle= 5 E= -128.22391303962  delta_E= -1.98e-09  |g|= 2.48e-06  |ddm|= 7.64e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.21261e-06
diis-c [-1.87249978e-13 -1.46437640e-05 -2.89802271e-05  6.48612349e-03
 -6.13678814e-02  1.05492538e+00]
  HOMO = -0.799673934208392  LUMO = 2.24268894751434
  mo_energy =
[-3.27965505e+01 -1.92225586e+00 -7.99673934e-01 -7.99673934e-01
 -7.99673934e-01  2.24268895e+00  2.24915996e+00  2.24915996e+00
  2.24915996e+00  1.54480333e+01  1.54480333e+01  1.54480333e+01
  3.72608492e+01  2.60108737e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21216931305466  E_coul = 53.98825627343391
cycle= 6 E= -128.223913039621  delta_E= -8.53e-13  |g|= 6.99e-08  |ddm|= 1.79e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.21216931305466  E_coul = 53.98825627343391
  HOMO = -0.799673973570851  LUMO = 2.24268891562656
  mo_energy =
[-3.27965506e+01 -1.92225590e+00 -7.99673974e-01 -7.99673974e-01
 -7.99673974e-01  2.24268892e+00  2.24915992e+00  2.24915992e+00
  2.24915992e+00  1.54480332e+01  1.54480332e+01  1.54480332e+01
  3.72608491e+01  2.60108737e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21216952466247  E_coul = 53.98825648504161
Extra cycle  E= -128.223913039621  delta_E= -1.14e-13  |g|= 2.86e-08  |ddm|= 2.7e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 57.099453940342485
E1 = -182.21216952466247  E_coul = 53.98825648504161
init E= -128.223913039621
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.799673959078373  LUMO = 2.24268892709386
  mo_energy =
[-3.27965505e+01 -1.92225589e+00 -7.99673959e-01 -7.99673959e-01
 -7.99673959e-01  2.24268893e+00  2.24915993e+00  2.24915993e+00
  2.24915993e+00  1.54480332e+01  1.54480332e+01  1.54480332e+01
  3.72608492e+01  2.60108737e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21216943548134  E_coul = 53.98825639586053
cycle= 1 E= -128.223913039621  delta_E= 5.68e-14  |g|= 1.19e-08  |ddm|= 1.23e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.21216943548134  E_coul = 53.98825639586053
  HOMO = -0.799673965246685  LUMO = 2.24268892234214
  mo_energy =
[-3.27965505e+01 -1.92225589e+00 -7.99673965e-01 -7.99673965e-01
 -7.99673965e-01  2.24268892e+00  2.24915993e+00  2.24915993e+00
  2.24915993e+00  1.54480332e+01  1.54480332e+01  1.54480332e+01
  3.72608491e+01  2.60108737e+02  1.26405309e+03  5.43813713e+03]
E1 = -182.21216947287405  E_coul = 53.98825643325322
Extra cycle  E= -128.223913039621  delta_E= -2.84e-14  |g|= 5.01e-09  |ddm|= 5e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.37492875e+03 1.77189529e+02 6.36979752e+02 5.16901008e-01
 4.25944209e+01 1.20004839e+01 1.71481876e+00 2.36595991e+00
 1.04154185e+01 5.42018929e-01]
grad_E = [-2.12485892e-05  1.17264590e-03 -1.75800053e-05  4.80568628e-03
 -4.20527512e-03  3.39660734e-03 -9.36476555e-03  1.84529670e-02
 -2.22132403e-02  1.14192378e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:25 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2495.0507685         1
[INPUT] 0    0    [1    /1   ]  109.348750993        1
[INPUT] 0    0    [1    /1   ]  228.357325021        1
[INPUT] 0    0    [1    /1   ]  0.488027073143       1
[INPUT] 0    0    [1    /1   ]  34.122104705         1
[INPUT] 0    0    [1    /1   ]  10.7493617453        1
[INPUT] 0    0    [1    /1   ]  1.63857270793        1
[INPUT] 1    0    [1    /1   ]  2.42529298101        1
[INPUT] 1    0    [1    /1   ]  10.9104665168        1
[INPUT] 1    0    [1    /1   ]  0.549834744067       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2495.0507685007087, 1.0]], [0, [109.34875099337471, 1.0]], [0, [228.3573250206378, 1.0]], [0, [0.4880270731433495, 1.0]], [0, [34.122104705024206, 1.0]], [0, [10.749361745279327, 1.0]], [0, [1.6385727079295809, 1.0]], [1, [2.4252929810134827, 1.0]], [1, [10.910466516848404, 1.0]], [1, [0.549834744067068, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2495.0507685]
bas 1, expnt(s) = [109.34875099]
bas 2, expnt(s) = [228.35732502]
bas 3, expnt(s) = [0.48802707]
bas 4, expnt(s) = [34.12210471]
bas 5, expnt(s) = [10.74936175]
bas 6, expnt(s) = [1.63857271]
bas 7, expnt(s) = [2.42529298]
bas 8, expnt(s) = [10.91046652]
bas 9, expnt(s) = [0.54983474]
CPU time:       187.01
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.49505077e+03 8.91917252e+02 1.09348751e+02 8.54329483e+01
 2.28357325e+02 1.48414466e+02 4.88027073e-01 1.47519000e+00
 3.41221047e+01 3.56690779e+01 1.07493617e+01 1.49986452e+01
 1.63857271e+00 3.65901603e+00 2.42529298e+00 8.82957205e+00
 1.09104665e+01 5.78480260e+01 5.49834744e-01 1.38125740e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976163321664998
cond(S) = 159.1988388552415
E1 = -182.81036221568917  E_coul = 54.9838667301167
init E= -127.826495485572
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.740388845219496  LUMO = 2.09605262262818
  mo_energy =
[-3.24673891e+01 -1.85242535e+00 -7.40388845e-01 -7.40388845e-01
 -7.40388845e-01  2.09605262e+00  2.33976346e+00  2.33976346e+00
  2.33976346e+00  1.62771480e+01  1.62771480e+01  1.62771480e+01
  2.97675893e+01  1.72946833e+02  6.07930234e+02  4.04224030e+03]
E1 = -181.63061318292657  E_coul = 53.574878592963955
cycle= 1 E= -128.055734589963  delta_E= -0.229  |g|= 0.217  |ddm|= 0.214
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.347957
diis-c [-0.12107418  1.        ]
  HOMO = -0.829689592105077  LUMO = 2.03644373483016
  mo_energy =
[-3.28077207e+01 -1.94585231e+00 -8.29689592e-01 -8.29689592e-01
 -8.29689592e-01  2.03644373e+00  2.27217690e+00  2.27217690e+00
  2.27217690e+00  1.60561905e+01  1.60561905e+01  1.60561905e+01
  2.95096298e+01  1.72595370e+02  6.07528755e+02  4.04176337e+03]
E1 = -182.24177388775985  E_coul = 54.18345447138669
cycle= 2 E= -128.058319416373  delta_E= -0.00258  |g|= 0.0819  |ddm|= 0.0829
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.137671
diis-c [-0.00162728  0.27581208  0.72418792]
  HOMO = -0.799161486627336  LUMO = 2.058234073681
  mo_energy =
[-3.27101811e+01 -1.91414872e+00 -7.99161487e-01 -7.99161487e-01
 -7.99161487e-01  2.05823407e+00  2.29679733e+00  2.29679733e+00
  2.29679733e+00  1.61247418e+01  1.61247418e+01  1.61247418e+01
  2.95876727e+01  1.72695261e+02  6.07636274e+02  4.04187716e+03]
E1 = -182.05811016647422  E_coul = 53.9992489293732
cycle= 3 E= -128.058861237101  delta_E= -0.000542  |g|= 0.00225  |ddm|= 0.0246
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00344369
diis-c [-2.88111367e-07 -1.62973722e-03  2.04157735e-02  9.81213964e-01]
  HOMO = -0.79994520628156  LUMO = 2.05764535896731
  mo_energy =
[-3.27126932e+01 -1.91505228e+00 -7.99945206e-01 -7.99945206e-01
 -7.99945206e-01  2.05764536e+00  2.29621642e+00  2.29621642e+00
  2.29621642e+00  1.61230071e+01  1.61230071e+01  1.61230071e+01
  2.95856308e+01  1.72692803e+02  6.07633765e+02  4.04187467e+03]
E1 = -182.06287503612796  E_coul = 54.00401341678993
cycle= 4 E= -128.058861619338  delta_E= -3.82e-07  |g|= 7.69e-05  |ddm|= 0.000738
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000118584
diis-c [-1.60602804e-09  1.21772494e-04 -3.67936991e-03 -1.30196892e-01
  1.13375449e+00]
  HOMO = -0.79992499651251  LUMO = 2.05764566918182
  mo_energy =
[-3.27126443e+01 -1.91505062e+00 -7.99924997e-01 -7.99924997e-01
 -7.99924997e-01  2.05764567e+00  2.29623276e+00  2.29623276e+00
  2.29623276e+00  1.61230436e+01  1.61230436e+01  1.61230436e+01
  2.95856637e+01  1.72692861e+02  6.07633843e+02  4.04187478e+03]
E1 = -182.06279337569467  E_coul = 54.003931755624116
cycle= 5 E= -128.058861620071  delta_E= -7.33e-10  |g|= 5.2e-06  |ddm|= 4.21e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.06279337569467  E_coul = 54.003931755624116
  HOMO = -0.799923973205916  LUMO = 2.05764531022497
  mo_energy =
[-3.27126421e+01 -1.91505092e+00 -7.99923973e-01 -7.99923973e-01
 -7.99923973e-01  2.05764531e+00  2.29623347e+00  2.29623347e+00
  2.29623347e+00  1.61230452e+01  1.61230452e+01  1.61230452e+01
  2.95856651e+01  1.72692863e+02  6.07633846e+02  4.04187478e+03]
E1 = -182.0627897733163  E_coul = 54.00392815324189
Extra cycle  E= -128.058861620074  delta_E= -3.87e-12  |g|= 1.16e-06  |ddm|= 3.12e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.49505077e+03 1.09348751e+02 2.28357325e+02 4.88027073e-01
 3.41221047e+01 1.07493617e+01 1.63857271e+00 2.42529298e+00
 1.09104665e+01 5.49834744e-01]
E = -128.05886162007442
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:26 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2389.48146782        1
[INPUT] 0    0    [1    /1   ]  168.970653616        1
[INPUT] 0    0    [1    /1   ]  587.475357258        1
[INPUT] 0    0    [1    /1   ]  0.513402945497       1
[INPUT] 0    0    [1    /1   ]  41.5680041469        1
[INPUT] 0    0    [1    /1   ]  11.8489111152        1
[INPUT] 0    0    [1    /1   ]  1.70558158639        1
[INPUT] 1    0    [1    /1   ]  2.37314807912        1
[INPUT] 1    0    [1    /1   ]  10.4753932854        1
[INPUT] 1    0    [1    /1   ]  0.542965811124       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2389.481467822464, 1.0]], [0, [168.97065361637885, 1.0]], [0, [587.4753572578137, 1.0]], [0, [0.5134029454974274, 1.0]], [0, [41.568004146948276, 1.0]], [0, [11.848911115157524, 1.0]], [0, [1.7055815863901334, 1.0]], [1, [2.373148079115714, 1.0]], [1, [10.475393285362147, 1.0]], [1, [0.5429658111244676, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2389.48146782]
bas 1, expnt(s) = [168.97065362]
bas 2, expnt(s) = [587.47535726]
bas 3, expnt(s) = [0.51340295]
bas 4, expnt(s) = [41.56800415]
bas 5, expnt(s) = [11.84891112]
bas 6, expnt(s) = [1.70558159]
bas 7, expnt(s) = [2.37314808]
bas 8, expnt(s) = [10.47539329]
bas 9, expnt(s) = [0.54296581]
CPU time:       187.89
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.38948147e+03 8.63461095e+02 1.68970654e+02 1.18405939e+02
 5.87475357e+02 3.01479138e+02 5.13402945e-01 1.53235289e+00
 4.15680041e+01 4.13603689e+01 1.18489111e+01 1.61351815e+01
 1.70558159e+00 3.77067758e+00 2.37314808e+00 8.59291350e+00
 1.04753933e+01 5.49790604e+01 5.42965811e-01 1.35972160e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976991484176843
cond(S) = 59.20981813188188
E1 = -183.13912035071039  E_coul = 54.97929177026367
init E= -128.159828580447
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739031798661699  LUMO = 2.2630458976986
  mo_energy =
[-3.25553170e+01 -1.85670611e+00 -7.39031799e-01 -7.39031799e-01
 -7.39031799e-01  2.26304590e+00  2.29846967e+00  2.29846967e+00
  2.29846967e+00  1.56821809e+01  1.56821809e+01  1.56821809e+01
  3.65483729e+01  2.49825584e+02  1.18820710e+03  5.27826560e+03]
E1 = -181.78249739671165  E_coul = 53.55583223418393
cycle= 1 E= -128.226665162528  delta_E= -0.0668  |g|= 0.205  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.325691
diis-c [-0.10607471  1.        ]
  HOMO = -0.829983755650484  LUMO = 2.1960062109545
  mo_energy =
[-3.28944327e+01 -1.95332681e+00 -8.29983756e-01 -8.29983756e-01
 -8.29983756e-01  2.19600621e+00  2.23076850e+00  2.23076850e+00
  2.23076850e+00  1.54625498e+01  1.54625498e+01  1.54625498e+01
  3.62686344e+01  2.49459963e+02  1.18779740e+03  5.27782444e+03]
E1 = -182.40617303503862  E_coul = 54.17683775956833
cycle= 2 E= -128.22933527547  delta_E= -0.00267  |g|= 0.0833  |ddm|= 0.0856
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139115
diis-c [-2.67734037e-04  2.98102196e-01  7.01897804e-01]
  HOMO = -0.799761513667521  LUMO = 2.21904603796988
  mo_energy =
[-3.27981161e+01 -1.92189369e+00 -7.99761514e-01 -7.99761514e-01
 -7.99761514e-01  2.21904604e+00  2.25472304e+00  2.25472304e+00
  2.25472304e+00  1.55291951e+01  1.55291951e+01  1.55291951e+01
  3.63504258e+01  2.49562339e+02  1.18790673e+03  5.27793692e+03]
E1 = -182.22371894449685  E_coul = 53.99381681887209
cycle= 3 E= -128.229902125625  delta_E= -0.000567  |g|= 0.000802  |ddm|= 0.0244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00117339
diis-c [-4.26865425e-07 -8.12873252e-03 -2.52661733e-02  1.03339491e+00]
  HOMO = -0.799628761474956  LUMO = 2.21905647159406
  mo_energy =
[-3.27977567e+01 -1.92192574e+00 -7.99628761e-01 -7.99628761e-01
 -7.99628761e-01  2.21905647e+00  2.25488044e+00  2.25488044e+00
  2.25488044e+00  1.55294757e+01  1.55294757e+01  1.55294757e+01
  3.63506821e+01  2.49562938e+02  1.18790760e+03  5.27793794e+03]
E1 = -182.223089268061  E_coul = 53.993187073977126
cycle= 4 E= -128.229902194084  delta_E= -6.85e-08  |g|= 0.000118  |ddm|= 0.000378
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0001741
diis-c [-1.32837251e-09  6.83958026e-04  1.63572220e-03 -1.87142919e-01
  1.18482324e+00]
  HOMO = -0.79959964689414  LUMO = 2.21905056029613
  mo_energy =
[-3.27976881e+01 -1.92192924e+00 -7.99599647e-01 -7.99599647e-01
 -7.99599647e-01  2.21905056e+00  2.25490095e+00  2.25490095e+00
  2.25490095e+00  1.55295240e+01  1.55295240e+01  1.55295240e+01
  3.63507301e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297573687644  E_coul = 53.993073540918076
cycle= 5 E= -128.229902195958  delta_E= -1.87e-09  |g|= 2.66e-06  |ddm|= 7.43e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.45304e-06
diis-c [-2.01852932e-13 -1.37336397e-05 -2.53462838e-05  6.50861668e-03
 -6.39974972e-02  1.05752796e+00]
  HOMO = -0.799599275501316  LUMO = 2.21905026904283
  mo_energy =
[-3.27976874e+01 -1.92192966e+00 -7.99599276e-01 -7.99599276e-01
 -7.99599276e-01  2.21905027e+00  2.25490132e+00  2.25490132e+00
  2.25490132e+00  1.55295246e+01  1.55295246e+01  1.55295246e+01
  3.63507306e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297415528217  E_coul = 53.9930719593228
cycle= 6 E= -128.229902195959  delta_E= -1.02e-12  |g|= 6.94e-08  |ddm|= 1.93e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.22297415528217  E_coul = 53.9930719593228
  HOMO = -0.799599314728591  LUMO = 2.21905023765872
  mo_energy =
[-3.27976875e+01 -1.92192970e+00 -7.99599315e-01 -7.99599315e-01
 -7.99599315e-01  2.21905024e+00  2.25490129e+00  2.25490129e+00
  2.25490129e+00  1.55295245e+01  1.55295245e+01  1.55295245e+01
  3.63507305e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297436505477  E_coul = 53.993072169095356
Extra cycle  E= -128.229902195959  delta_E= -5.68e-14  |g|= 2.83e-08  |ddm|= 2.68e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.38948147e+03 1.68970654e+02 5.87475357e+02 5.13402945e-01
 4.15680041e+01 1.18489111e+01 1.70558159e+00 2.37314808e+00
 1.04753933e+01 5.42965811e-01]
E = -128.22990219595943
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:27 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2389.48146782        1
[INPUT] 0    0    [1    /1   ]  168.970653616        1
[INPUT] 0    0    [1    /1   ]  587.475357258        1
[INPUT] 0    0    [1    /1   ]  0.513402945497       1
[INPUT] 0    0    [1    /1   ]  41.5680041469        1
[INPUT] 0    0    [1    /1   ]  11.8489111152        1
[INPUT] 0    0    [1    /1   ]  1.70558158639        1
[INPUT] 1    0    [1    /1   ]  2.37314807912        1
[INPUT] 1    0    [1    /1   ]  10.4753932854        1
[INPUT] 1    0    [1    /1   ]  0.542965811124       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2389.481467822464, 1.0]], [0, [168.97065361637885, 1.0]], [0, [587.4753572578137, 1.0]], [0, [0.5134029454974274, 1.0]], [0, [41.568004146948276, 1.0]], [0, [11.848911115157524, 1.0]], [0, [1.7055815863901334, 1.0]], [1, [2.373148079115714, 1.0]], [1, [10.475393285362147, 1.0]], [1, [0.5429658111244676, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2389.48146782]
bas 1, expnt(s) = [168.97065362]
bas 2, expnt(s) = [587.47535726]
bas 3, expnt(s) = [0.51340295]
bas 4, expnt(s) = [41.56800415]
bas 5, expnt(s) = [11.84891112]
bas 6, expnt(s) = [1.70558159]
bas 7, expnt(s) = [2.37314808]
bas 8, expnt(s) = [10.47539329]
bas 9, expnt(s) = [0.54296581]
CPU time:       188.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.38948147e+03 8.63461095e+02 1.68970654e+02 1.18405939e+02
 5.87475357e+02 3.01479138e+02 5.13402945e-01 1.53235289e+00
 4.15680041e+01 4.13603689e+01 1.18489111e+01 1.61351815e+01
 1.70558159e+00 3.77067758e+00 2.37314808e+00 8.59291350e+00
 1.04753933e+01 5.49790604e+01 5.42965811e-01 1.35972160e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976991484176843
cond(S) = 59.20981813188188
E1 = -183.13912035071039  E_coul = 54.97929177026367
init E= -128.159828580447
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739031798661699  LUMO = 2.2630458976986
  mo_energy =
[-3.25553170e+01 -1.85670611e+00 -7.39031799e-01 -7.39031799e-01
 -7.39031799e-01  2.26304590e+00  2.29846967e+00  2.29846967e+00
  2.29846967e+00  1.56821809e+01  1.56821809e+01  1.56821809e+01
  3.65483729e+01  2.49825584e+02  1.18820710e+03  5.27826560e+03]
E1 = -181.78249739671165  E_coul = 53.55583223418393
cycle= 1 E= -128.226665162528  delta_E= -0.0668  |g|= 0.205  |ddm|= 0.198
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.325691
diis-c [-0.10607471  1.        ]
  HOMO = -0.829983755650484  LUMO = 2.1960062109545
  mo_energy =
[-3.28944327e+01 -1.95332681e+00 -8.29983756e-01 -8.29983756e-01
 -8.29983756e-01  2.19600621e+00  2.23076850e+00  2.23076850e+00
  2.23076850e+00  1.54625498e+01  1.54625498e+01  1.54625498e+01
  3.62686344e+01  2.49459963e+02  1.18779740e+03  5.27782444e+03]
E1 = -182.40617303503862  E_coul = 54.17683775956833
cycle= 2 E= -128.22933527547  delta_E= -0.00267  |g|= 0.0833  |ddm|= 0.0856
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.139115
diis-c [-2.67734037e-04  2.98102196e-01  7.01897804e-01]
  HOMO = -0.799761513667521  LUMO = 2.21904603796988
  mo_energy =
[-3.27981161e+01 -1.92189369e+00 -7.99761514e-01 -7.99761514e-01
 -7.99761514e-01  2.21904604e+00  2.25472304e+00  2.25472304e+00
  2.25472304e+00  1.55291951e+01  1.55291951e+01  1.55291951e+01
  3.63504258e+01  2.49562339e+02  1.18790673e+03  5.27793692e+03]
E1 = -182.22371894449685  E_coul = 53.99381681887209
cycle= 3 E= -128.229902125625  delta_E= -0.000567  |g|= 0.000802  |ddm|= 0.0244
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00117339
diis-c [-4.26865425e-07 -8.12873252e-03 -2.52661733e-02  1.03339491e+00]
  HOMO = -0.799628761474956  LUMO = 2.21905647159406
  mo_energy =
[-3.27977567e+01 -1.92192574e+00 -7.99628761e-01 -7.99628761e-01
 -7.99628761e-01  2.21905647e+00  2.25488044e+00  2.25488044e+00
  2.25488044e+00  1.55294757e+01  1.55294757e+01  1.55294757e+01
  3.63506821e+01  2.49562938e+02  1.18790760e+03  5.27793794e+03]
E1 = -182.223089268061  E_coul = 53.993187073977126
cycle= 4 E= -128.229902194084  delta_E= -6.85e-08  |g|= 0.000118  |ddm|= 0.000378
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0001741
diis-c [-1.32837251e-09  6.83958026e-04  1.63572220e-03 -1.87142919e-01
  1.18482324e+00]
  HOMO = -0.79959964689414  LUMO = 2.21905056029613
  mo_energy =
[-3.27976881e+01 -1.92192924e+00 -7.99599647e-01 -7.99599647e-01
 -7.99599647e-01  2.21905056e+00  2.25490095e+00  2.25490095e+00
  2.25490095e+00  1.55295240e+01  1.55295240e+01  1.55295240e+01
  3.63507301e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297573687644  E_coul = 53.993073540918076
cycle= 5 E= -128.229902195958  delta_E= -1.87e-09  |g|= 2.66e-06  |ddm|= 7.43e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.45304e-06
diis-c [-2.01852932e-13 -1.37336397e-05 -2.53462838e-05  6.50861668e-03
 -6.39974972e-02  1.05752796e+00]
  HOMO = -0.799599275501316  LUMO = 2.21905026904283
  mo_energy =
[-3.27976874e+01 -1.92192966e+00 -7.99599276e-01 -7.99599276e-01
 -7.99599276e-01  2.21905027e+00  2.25490132e+00  2.25490132e+00
  2.25490132e+00  1.55295246e+01  1.55295246e+01  1.55295246e+01
  3.63507306e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297415528217  E_coul = 53.9930719593228
cycle= 6 E= -128.229902195959  delta_E= -1.02e-12  |g|= 6.94e-08  |ddm|= 1.93e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.22297415528217  E_coul = 53.9930719593228
  HOMO = -0.799599314728591  LUMO = 2.21905023765872
  mo_energy =
[-3.27976875e+01 -1.92192970e+00 -7.99599315e-01 -7.99599315e-01
 -7.99599315e-01  2.21905024e+00  2.25490129e+00  2.25490129e+00
  2.25490129e+00  1.55295245e+01  1.55295245e+01  1.55295245e+01
  3.63507305e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297436505477  E_coul = 53.993072169095356
Extra cycle  E= -128.229902195959  delta_E= -5.68e-14  |g|= 2.83e-08  |ddm|= 2.68e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 59.20981813188188
E1 = -182.22297436505477  E_coul = 53.993072169095356
init E= -128.229902195959
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.79959930036133  LUMO = 2.21905024891058
  mo_energy =
[-3.27976874e+01 -1.92192969e+00 -7.99599300e-01 -7.99599300e-01
 -7.99599300e-01  2.21905025e+00  2.25490130e+00  2.25490130e+00
  2.25490130e+00  1.55295246e+01  1.55295246e+01  1.55295246e+01
  3.63507306e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297427670983  E_coul = 53.99307208075056
cycle= 1 E= -128.229902195959  delta_E= 1.42e-13  |g|= 1.18e-08  |ddm|= 1.21e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.22297427670983  E_coul = 53.99307208075056
  HOMO = -0.799599306471463  LUMO = 2.21905024424663
  mo_energy =
[-3.27976874e+01 -1.92192969e+00 -7.99599306e-01 -7.99599306e-01
 -7.99599306e-01  2.21905024e+00  2.25490130e+00  2.25490130e+00
  2.25490130e+00  1.55295245e+01  1.55295245e+01  1.55295245e+01
  3.63507305e+01  2.49563029e+02  1.18790772e+03  5.27793808e+03]
E1 = -182.22297431371888  E_coul = 53.99307211775948
Extra cycle  E= -128.229902195959  delta_E= -1.14e-13  |g|= 4.96e-09  |ddm|= 4.95e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.38948147e+03 1.68970654e+02 5.87475357e+02 5.13402945e-01
 4.15680041e+01 1.18489111e+01 1.70558159e+00 2.37314808e+00
 1.04753933e+01 5.42965811e-01]
grad_E = [-1.82091704e-05  1.25334960e-03 -4.60536519e-05  4.57175573e-03
 -4.33749623e-03  3.81654042e-03 -9.58772297e-03  1.66005702e-02
 -2.13205393e-02  1.22590487e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:29 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2488.59472831        1
[INPUT] 0    0    [1    /1   ]  98.1466086161        1
[INPUT] 0    0    [1    /1   ]  251.543266017        1
[INPUT] 0    0    [1    /1   ]  0.489084744466       1
[INPUT] 0    0    [1    /1   ]  32.7124945946        1
[INPUT] 0    0    [1    /1   ]  10.5687056846        1
[INPUT] 0    0    [1    /1   ]  1.64844105484        1
[INPUT] 1    0    [1    /1   ]  2.51155035617        1
[INPUT] 1    0    [1    /1   ]  11.5125695597        1
[INPUT] 1    0    [1    /1   ]  0.561934652376       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2488.594728309892, 1.0]], [0, [98.14660861608138, 1.0]], [0, [251.543266016551, 1.0]], [0, [0.48908474446577677, 1.0]], [0, [32.712494594617, 1.0]], [0, [10.568705684612235, 1.0]], [0, [1.648441054843259, 1.0]], [1, [2.511550356166899, 1.0]], [1, [11.512569559653029, 1.0]], [1, [0.561934652376199, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2488.59472831]
bas 1, expnt(s) = [98.14660862]
bas 2, expnt(s) = [251.54326602]
bas 3, expnt(s) = [0.48908474]
bas 4, expnt(s) = [32.71249459]
bas 5, expnt(s) = [10.56870568]
bas 6, expnt(s) = [1.64844105]
bas 7, expnt(s) = [2.51155036]
bas 8, expnt(s) = [11.51256956]
bas 9, expnt(s) = [0.56193465]
CPU time:       191.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.48859473e+03 8.90185789e+02 9.81466086e+01 7.87810015e+01
 2.51543266e+02 1.59578561e+02 4.89084744e-01 1.47758717e+00
 3.27124946e+01 3.45581330e+01 1.05687057e+01 1.48091925e+01
 1.64844105e+00 3.67553101e+00 2.51155036e+00 9.22383988e+00
 1.15125696e+01 6.18656708e+01 5.61934652e-01 1.41935705e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.974233927640125
cond(S) = 129.66437689614074
E1 = -182.96089464829717  E_coul = 54.993567743976634
init E= -127.967326904321
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.741518179569321  LUMO = 2.10479508861305
  mo_energy =
[-3.24972606e+01 -1.85389560e+00 -7.41518180e-01 -7.41518180e-01
 -7.41518180e-01  2.10479509e+00  2.41444768e+00  2.41444768e+00
  2.41444768e+00  1.71662005e+01  1.71662005e+01  1.71662005e+01
  2.89325226e+01  1.63080309e+02  6.02370564e+02  4.06719791e+03]
E1 = -181.7973604143874  E_coul = 53.6617544655806
cycle= 1 E= -128.135605948807  delta_E= -0.168  |g|= 0.203  |ddm|= 0.201
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.328112
diis-c [-0.10765775  1.        ]
  HOMO = -0.825403790874836  LUMO = 2.04985511902193
  mo_energy =
[-3.28216783e+01 -1.94102703e+00 -8.25403791e-01 -8.25403791e-01
 -8.25403791e-01  2.04985512e+00  2.34926683e+00  2.34926683e+00
  2.34926683e+00  1.69505920e+01  1.69505920e+01  1.69505920e+01
  2.86896098e+01  1.62747645e+02  6.01988890e+02  4.06675021e+03]
E1 = -182.37345644831925  E_coul = 54.23550982607891
cycle= 2 E= -128.13794662224  delta_E= -0.00234  |g|= 0.0774  |ddm|= 0.0781
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.129628
diis-c [-0.00115286  0.27710975  0.72289025]
  HOMO = -0.796743947272743  LUMO = 2.07029050925147
  mo_energy =
[-3.27295883e+01 -1.91129921e+00 -7.96743947e-01 -7.96743947e-01
 -7.96743947e-01  2.07029051e+00  2.37306903e+00  2.37306903e+00
  2.37306903e+00  1.70165499e+01  1.70165499e+01  1.70165499e+01
  2.87624037e+01  1.62841448e+02  6.02090689e+02  4.06685797e+03]
E1 = -182.2023161244903  E_coul = 54.06389028522225
cycle= 3 E= -128.138425839268  delta_E= -0.000479  |g|= 0.00173  |ddm|= 0.023
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00264429
diis-c [-1.87755491e-07 -1.73329276e-03  1.56870652e-02  9.86046228e-01]
  HOMO = -0.797354096528884  LUMO = 2.06983944861356
  mo_energy =
[-3.27315140e+01 -1.91199743e+00 -7.97354097e-01 -7.97354097e-01
 -7.97354097e-01  2.06983945e+00  2.37260987e+00  2.37260987e+00
  2.37260987e+00  1.70151859e+01  1.70151859e+01  1.70151859e+01
  2.87608443e+01  1.62839584e+02  6.02088810e+02  4.06685615e+03]
E1 = -182.2059424261082  E_coul = 54.067516363753086
cycle= 4 E= -128.138426062355  delta_E= -2.23e-07  |g|= 5.75e-05  |ddm|= 0.000559
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=8.91432e-05
diis-c [-9.68729653e-10  1.14879185e-04 -2.68288569e-03 -1.17630089e-01
  1.12019810e+00]
  HOMO = -0.797339013911715  LUMO = 2.06983992338915
  mo_energy =
[-3.27314772e+01 -1.91199584e+00 -7.97339014e-01 -7.97339014e-01
 -7.97339014e-01  2.06983992e+00  2.37262240e+00  2.37262240e+00
  2.37262240e+00  1.70152138e+01  1.70152138e+01  1.70152138e+01
  2.87608686e+01  1.62839628e+02  6.02088870e+02  4.06685623e+03]
E1 = -182.20588226667954  E_coul = 54.067456203928984
cycle= 5 E= -128.138426062751  delta_E= -3.95e-10  |g|= 4.37e-06  |ddm|= 3.02e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.20588226667954  E_coul = 54.067456203928984
  HOMO = -0.797338014702495  LUMO = 2.06983974922927
  mo_energy =
[-3.27314750e+01 -1.91199593e+00 -7.97338015e-01 -7.97338015e-01
 -7.97338015e-01  2.06983975e+00  2.37262315e+00  2.37262315e+00
  2.37262315e+00  1.70152155e+01  1.70152155e+01  1.70152155e+01
  2.87608701e+01  1.62839630e+02  6.02088873e+02  4.06685623e+03]
E1 = -182.20587858087686  E_coul = 54.06745251812362
Extra cycle  E= -128.138426062753  delta_E= -2.67e-12  |g|= 1.01e-06  |ddm|= 2.55e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.48859473e+03 9.81466086e+01 2.51543266e+02 4.89084744e-01
 3.27124946e+01 1.05687057e+01 1.64844105e+00 2.51155036e+00
 1.15125696e+01 5.61934652e-01]
E = -128.13842606275324
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:30 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2409.2530671         1
[INPUT] 0    0    [1    /1   ]  154.842325778        1
[INPUT] 0    0    [1    /1   ]  520.46197619         1
[INPUT] 0    0    [1    /1   ]  0.508551831492       1
[INPUT] 0    0    [1    /1   ]  39.8014636715        1
[INPUT] 0    0    [1    /1   ]  11.5935294574        1
[INPUT] 0    0    [1    /1   ]  1.69418291292        1
[INPUT] 1    0    [1    /1   ]  2.40075724411        1
[INPUT] 1    0    [1    /1   ]  10.6822942952        1
[INPUT] 1    0    [1    /1   ]  0.546749808606       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2409.253067104125, 1.0]], [0, [154.842325778452, 1.0]], [0, [520.4619761904519, 1.0]], [0, [0.5085518314922568, 1.0]], [0, [39.80146367151082, 1.0]], [0, [11.593529457380674, 1.0]], [0, [1.6941829129237385, 1.0]], [1, [2.400757244106029, 1.0]], [1, [10.682294295165239, 1.0]], [1, [0.5467498086059575, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2409.2530671]
bas 1, expnt(s) = [154.84232578]
bas 2, expnt(s) = [520.46197619]
bas 3, expnt(s) = [0.50855183]
bas 4, expnt(s) = [39.80146367]
bas 5, expnt(s) = [11.59352946]
bas 6, expnt(s) = [1.69418291]
bas 7, expnt(s) = [2.40075724]
bas 8, expnt(s) = [10.6822943]
bas 9, expnt(s) = [0.54674981]
CPU time:       192.26
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.40925307e+03 8.68814058e+02 1.54842326e+02 1.10900190e+02
 5.20461976e+02 2.75300360e+02 5.08551831e-01 1.52148068e+00
 3.98014637e+01 4.00349515e+01 1.15935295e+01 1.58736491e+01
 1.69418291e+00 3.75176171e+00 2.40075724e+00 8.71805697e+00
 1.06822943e+01 5.63397695e+01 5.46749809e-01 1.37157699e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976510185072959
cond(S) = 63.35171045947891
E1 = -183.15347927400296  E_coul = 54.98316676702294
init E= -128.17031250698
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739622202634854  LUMO = 2.23023865143944
  mo_energy =
[-3.25568369e+01 -1.85677236e+00 -7.39622203e-01 -7.39622203e-01
 -7.39622203e-01  2.23023865e+00  2.32129847e+00  2.32129847e+00
  2.32129847e+00  1.59746857e+01  1.59746857e+01  1.59746857e+01
  3.50411821e+01  2.32207541e+02  1.07357629e+03  5.04505320e+03]
E1 = -181.8199650263567  E_coul = 53.58241278640458
cycle= 1 E= -128.237552239952  delta_E= -0.0672  |g|= 0.202  |ddm|= 0.196
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.322293
diis-c [-0.10387273  1.        ]
  HOMO = -0.828924195501108  LUMO = 2.16581429853998
  mo_energy =
[-3.28917243e+01 -1.95129405e+00 -8.28924196e-01 -8.28924196e-01
 -8.28924196e-01  2.16581430e+00  2.25424457e+00  2.25424457e+00
  2.25424457e+00  1.57563051e+01  1.57563051e+01  1.57563051e+01
  3.47688277e+01  2.31849084e+02  1.07317382e+03  5.04461717e+03]
E1 = -182.4327060564298  E_coul = 54.192563325063375
cycle= 2 E= -128.240142731366  delta_E= -0.00259  |g|= 0.0819  |ddm|= 0.084
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136837
diis-c [-2.64557668e-04  2.96815746e-01  7.03184254e-01]
  HOMO = -0.79919369531625  LUMO = 2.18817948127332
  mo_energy =
[-3.27968306e+01 -1.92039530e+00 -7.99193695e-01 -7.99193695e-01
 -7.99193695e-01  2.18817948e+00  2.27803297e+00  2.27803297e+00
  2.27803297e+00  1.58224436e+01  1.58224436e+01  1.58224436e+01
  3.48484858e+01  2.31949372e+02  1.07328127e+03  5.04472807e+03]
E1 = -182.25367807882134  E_coul = 54.01298946792306
cycle= 3 E= -128.240688610898  delta_E= -0.000546  |g|= 0.000726  |ddm|= 0.0239
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00102267
diis-c [-3.75542936e-07 -7.51128034e-03 -2.28320386e-02  1.03034332e+00]
  HOMO = -0.799092166730407  LUMO = 2.18817720273332
  mo_energy =
[-3.27965570e+01 -1.92044374e+00 -7.99092167e-01 -7.99092167e-01
 -7.99092167e-01  2.18817720e+00  2.27816542e+00  2.27816542e+00
  2.27816542e+00  1.58226630e+01  1.58226630e+01  1.58226630e+01
  3.48486672e+01  2.31949855e+02  1.07328201e+03  5.04472897e+03]
E1 = -182.25321759351004  E_coul = 54.01252892850121
cycle= 4 E= -128.240688665009  delta_E= -5.41e-08  |g|= 0.000108  |ddm|= 0.000344
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000161247
diis-c [-1.36105435e-09  6.28077984e-04  1.36567525e-03 -1.82905098e-01
  1.18091134e+00]
  HOMO = -0.799064953375213  LUMO = 2.18817231354513
  mo_energy =
[-3.27964933e+01 -1.92044636e+00 -7.99064953e-01 -7.99064953e-01
 -7.99064953e-01  2.18817231e+00  2.27818493e+00  2.27818493e+00
  2.27818493e+00  1.58227085e+01  1.58227085e+01  1.58227085e+01
  3.48487112e+01  2.31949938e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.2531130549435  E_coul = 54.01242438834719
cycle= 5 E= -128.240688666596  delta_E= -1.59e-09  |g|= 2.95e-06  |ddm|= 6.79e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85128e-06
diis-c [-2.18894514e-13 -1.24297672e-05 -1.65060414e-05  6.67523005e-03
 -7.04984112e-02  1.06385212e+00]
  HOMO = -0.799064508431149  LUMO = 2.18817198752877
  mo_energy =
[-3.27964924e+01 -1.92044681e+00 -7.99064508e-01 -7.99064508e-01
 -7.99064508e-01  2.18817199e+00  2.27818535e+00  2.27818535e+00
  2.27818535e+00  1.58227091e+01  1.58227091e+01  1.58227091e+01
  3.48487117e+01  2.31949939e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.2531113456915  E_coul = 54.01242267909367
cycle= 6 E= -128.240688666598  delta_E= -1.53e-12  |g|= 6.65e-08  |ddm|= 2.16e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2531113456915  E_coul = 54.01242267909367
  HOMO = -0.799064546117852  LUMO = 2.18817195789084
  mo_energy =
[-3.27964925e+01 -1.92044685e+00 -7.99064546e-01 -7.99064546e-01
 -7.99064546e-01  2.18817196e+00  2.27818532e+00  2.27818532e+00
  2.27818532e+00  1.58227091e+01  1.58227091e+01  1.58227091e+01
  3.48487117e+01  2.31949939e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.25311154531144  E_coul = 54.01242287871352
Extra cycle  E= -128.240688666598  delta_E= -8.53e-14  |g|= 2.69e-08  |ddm|= 2.57e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.40925307e+03 1.54842326e+02 5.20461976e+02 5.08551831e-01
 3.98014637e+01 1.15935295e+01 1.69418291e+00 2.40075724e+00
 1.06822943e+01 5.46749809e-01]
E = -128.24068866659792
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:31 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2409.2530671         1
[INPUT] 0    0    [1    /1   ]  154.842325778        1
[INPUT] 0    0    [1    /1   ]  520.46197619         1
[INPUT] 0    0    [1    /1   ]  0.508551831492       1
[INPUT] 0    0    [1    /1   ]  39.8014636715        1
[INPUT] 0    0    [1    /1   ]  11.5935294574        1
[INPUT] 0    0    [1    /1   ]  1.69418291292        1
[INPUT] 1    0    [1    /1   ]  2.40075724411        1
[INPUT] 1    0    [1    /1   ]  10.6822942952        1
[INPUT] 1    0    [1    /1   ]  0.546749808606       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2409.253067104125, 1.0]], [0, [154.842325778452, 1.0]], [0, [520.4619761904519, 1.0]], [0, [0.5085518314922568, 1.0]], [0, [39.80146367151082, 1.0]], [0, [11.593529457380674, 1.0]], [0, [1.6941829129237385, 1.0]], [1, [2.400757244106029, 1.0]], [1, [10.682294295165239, 1.0]], [1, [0.5467498086059575, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2409.2530671]
bas 1, expnt(s) = [154.84232578]
bas 2, expnt(s) = [520.46197619]
bas 3, expnt(s) = [0.50855183]
bas 4, expnt(s) = [39.80146367]
bas 5, expnt(s) = [11.59352946]
bas 6, expnt(s) = [1.69418291]
bas 7, expnt(s) = [2.40075724]
bas 8, expnt(s) = [10.6822943]
bas 9, expnt(s) = [0.54674981]
CPU time:       193.15
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.40925307e+03 8.68814058e+02 1.54842326e+02 1.10900190e+02
 5.20461976e+02 2.75300360e+02 5.08551831e-01 1.52148068e+00
 3.98014637e+01 4.00349515e+01 1.15935295e+01 1.58736491e+01
 1.69418291e+00 3.75176171e+00 2.40075724e+00 8.71805697e+00
 1.06822943e+01 5.63397695e+01 5.46749809e-01 1.37157699e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.976510185072959
cond(S) = 63.35171045947891
E1 = -183.15347927400296  E_coul = 54.98316676702294
init E= -128.17031250698
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.739622202634854  LUMO = 2.23023865143944
  mo_energy =
[-3.25568369e+01 -1.85677236e+00 -7.39622203e-01 -7.39622203e-01
 -7.39622203e-01  2.23023865e+00  2.32129847e+00  2.32129847e+00
  2.32129847e+00  1.59746857e+01  1.59746857e+01  1.59746857e+01
  3.50411821e+01  2.32207541e+02  1.07357629e+03  5.04505320e+03]
E1 = -181.8199650263567  E_coul = 53.58241278640458
cycle= 1 E= -128.237552239952  delta_E= -0.0672  |g|= 0.202  |ddm|= 0.196
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.322293
diis-c [-0.10387273  1.        ]
  HOMO = -0.828924195501108  LUMO = 2.16581429853998
  mo_energy =
[-3.28917243e+01 -1.95129405e+00 -8.28924196e-01 -8.28924196e-01
 -8.28924196e-01  2.16581430e+00  2.25424457e+00  2.25424457e+00
  2.25424457e+00  1.57563051e+01  1.57563051e+01  1.57563051e+01
  3.47688277e+01  2.31849084e+02  1.07317382e+03  5.04461717e+03]
E1 = -182.4327060564298  E_coul = 54.192563325063375
cycle= 2 E= -128.240142731366  delta_E= -0.00259  |g|= 0.0819  |ddm|= 0.084
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.136837
diis-c [-2.64557668e-04  2.96815746e-01  7.03184254e-01]
  HOMO = -0.79919369531625  LUMO = 2.18817948127332
  mo_energy =
[-3.27968306e+01 -1.92039530e+00 -7.99193695e-01 -7.99193695e-01
 -7.99193695e-01  2.18817948e+00  2.27803297e+00  2.27803297e+00
  2.27803297e+00  1.58224436e+01  1.58224436e+01  1.58224436e+01
  3.48484858e+01  2.31949372e+02  1.07328127e+03  5.04472807e+03]
E1 = -182.25367807882134  E_coul = 54.01298946792306
cycle= 3 E= -128.240688610898  delta_E= -0.000546  |g|= 0.000726  |ddm|= 0.0239
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.00102267
diis-c [-3.75542936e-07 -7.51128034e-03 -2.28320386e-02  1.03034332e+00]
  HOMO = -0.799092166730407  LUMO = 2.18817720273332
  mo_energy =
[-3.27965570e+01 -1.92044374e+00 -7.99092167e-01 -7.99092167e-01
 -7.99092167e-01  2.18817720e+00  2.27816542e+00  2.27816542e+00
  2.27816542e+00  1.58226630e+01  1.58226630e+01  1.58226630e+01
  3.48486672e+01  2.31949855e+02  1.07328201e+03  5.04472897e+03]
E1 = -182.25321759351004  E_coul = 54.01252892850121
cycle= 4 E= -128.240688665009  delta_E= -5.41e-08  |g|= 0.000108  |ddm|= 0.000344
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000161247
diis-c [-1.36105435e-09  6.28077984e-04  1.36567525e-03 -1.82905098e-01
  1.18091134e+00]
  HOMO = -0.799064953375213  LUMO = 2.18817231354513
  mo_energy =
[-3.27964933e+01 -1.92044636e+00 -7.99064953e-01 -7.99064953e-01
 -7.99064953e-01  2.18817231e+00  2.27818493e+00  2.27818493e+00
  2.27818493e+00  1.58227085e+01  1.58227085e+01  1.58227085e+01
  3.48487112e+01  2.31949938e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.2531130549435  E_coul = 54.01242438834719
cycle= 5 E= -128.240688666596  delta_E= -1.59e-09  |g|= 2.95e-06  |ddm|= 6.79e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85128e-06
diis-c [-2.18894514e-13 -1.24297672e-05 -1.65060414e-05  6.67523005e-03
 -7.04984112e-02  1.06385212e+00]
  HOMO = -0.799064508431149  LUMO = 2.18817198752877
  mo_energy =
[-3.27964924e+01 -1.92044681e+00 -7.99064508e-01 -7.99064508e-01
 -7.99064508e-01  2.18817199e+00  2.27818535e+00  2.27818535e+00
  2.27818535e+00  1.58227091e+01  1.58227091e+01  1.58227091e+01
  3.48487117e+01  2.31949939e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.2531113456915  E_coul = 54.01242267909367
cycle= 6 E= -128.240688666598  delta_E= -1.53e-12  |g|= 6.65e-08  |ddm|= 2.16e-06
    CPU time for cycle= 6      0.01 sec, wall time      0.01 sec
E1 = -182.2531113456915  E_coul = 54.01242267909367
  HOMO = -0.799064546117852  LUMO = 2.18817195789084
  mo_energy =
[-3.27964925e+01 -1.92044685e+00 -7.99064546e-01 -7.99064546e-01
 -7.99064546e-01  2.18817196e+00  2.27818532e+00  2.27818532e+00
  2.27818532e+00  1.58227091e+01  1.58227091e+01  1.58227091e+01
  3.48487117e+01  2.31949939e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.25311154531144  E_coul = 54.01242287871352
Extra cycle  E= -128.240688666598  delta_E= -8.53e-14  |g|= 2.69e-08  |ddm|= 2.57e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 63.35171045947891
E1 = -182.25311154531144  E_coul = 54.01242287871352
init E= -128.240688666598
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.799064532445182  LUMO = 2.18817196842209
  mo_energy =
[-3.27964925e+01 -1.92044683e+00 -7.99064532e-01 -7.99064532e-01
 -7.99064532e-01  2.18817197e+00  2.27818533e+00  2.27818533e+00
  2.27818533e+00  1.58227091e+01  1.58227091e+01  1.58227091e+01
  3.48487117e+01  2.31949939e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.25311146150165  E_coul = 54.012422794903905
cycle= 1 E= -128.240688666598  delta_E= 1.71e-13  |g|= 1.12e-08  |ddm|= 1.15e-08
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.25311146150165  E_coul = 54.012422794903905
  HOMO = -0.799064538238435  LUMO = 2.18817196405664
  mo_energy =
[-3.27964925e+01 -1.92044684e+00 -7.99064538e-01 -7.99064538e-01
 -7.99064538e-01  2.18817196e+00  2.27818532e+00  2.27818532e+00
  2.27818532e+00  1.58227091e+01  1.58227091e+01  1.58227091e+01
  3.48487117e+01  2.31949939e+02  1.07328213e+03  5.04472911e+03]
E1 = -182.2531114964972  E_coul = 54.012422829899336
Extra cycle  E= -128.240688666598  delta_E= -1.14e-13  |g|= 4.7e-09  |ddm|= 4.69e-09
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.40925307e+03 1.54842326e+02 5.20461976e+02 5.08551831e-01
 3.98014637e+01 1.15935295e+01 1.69418291e+00 2.40075724e+00
 1.06822943e+01 5.46749809e-01]
grad_E = [-1.23829793e-05  1.33463599e-03 -1.03954693e-04  3.81038551e-03
 -4.25264452e-03  4.26160442e-03 -9.52829723e-03  1.24101863e-02
 -1.86598752e-02  1.29537475e-02]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:34 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2467.81357413        1
[INPUT] 0    0    [1    /1   ]  94.8865962156        1
[INPUT] 0    0    [1    /1   ]  323.473148555        1
[INPUT] 0    0    [1    /1   ]  0.494171801542       1
[INPUT] 0    0    [1    /1   ]  32.1522415711        1
[INPUT] 0    0    [1    /1   ]  10.5167053821        1
[INPUT] 0    0    [1    /1   ]  1.67007723796        1
[INPUT] 1    0    [1    /1   ]  2.61765347882        1
[INPUT] 1    0    [1    /1   ]  12.2694205884        1
[INPUT] 1    0    [1    /1   ]  0.576816438491       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2467.8135741273777, 1.0]], [0, [94.88659621557694, 1.0]], [0, [323.47314855522626, 1.0]], [0, [0.49417180154166807, 1.0]], [0, [32.15224157112334, 1.0]], [0, [10.516705382075372, 1.0]], [0, [1.6700772379639366, 1.0]], [1, [2.6176534788169645, 1.0]], [1, [12.269420588360592, 1.0]], [1, [0.576816438491289, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2467.81357413]
bas 1, expnt(s) = [94.88659622]
bas 2, expnt(s) = [323.47314856]
bas 3, expnt(s) = [0.4941718]
bas 4, expnt(s) = [32.15224157]
bas 5, expnt(s) = [10.51670538]
bas 6, expnt(s) = [1.67007724]
bas 7, expnt(s) = [2.61765348]
bas 8, expnt(s) = [12.26942059]
bas 9, expnt(s) = [0.57681644]
CPU time:       195.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.46781357e+03 8.84604788e+02 9.48865962e+01 7.68101609e+01
 3.23473149e+02 1.92705319e+02 4.94171802e-01 1.48909873e+00
 3.21522416e+01 3.41132790e+01 1.05167054e+01 1.47545105e+01
 1.67007724e+00 3.71165364e+00 2.61765348e+00 9.71347409e+00
 1.22694206e+01 6.69906914e+01 5.76816438e-01 1.46649784e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.9715937132335
cond(S) = 101.74779755409809
E1 = -183.17720729612293  E_coul = 55.00178813988204
init E= -128.175419156241
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742479445267761  LUMO = 2.13923350004001
  mo_energy =
[-3.25445284e+01 -1.85625255e+00 -7.42479445e-01 -7.42479445e-01
 -7.42479445e-01  2.13923350e+00  2.50778231e+00  2.50778231e+00
  2.50778231e+00  1.82956758e+01  1.82956758e+01  1.82956758e+01
  2.89527720e+01  1.60971220e+02  6.69726961e+02  4.26189116e+03]
E1 = -182.01415538793532  E_coul = 53.76457350211696
cycle= 1 E= -128.249581885818  delta_E= -0.0742  |g|= 0.184  |ddm|= 0.186
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.299341
diis-c [-0.08960523  1.        ]
  HOMO = -0.819662614953214  LUMO = 2.0893816367999
  mo_energy =
[-3.28494996e+01 -1.93576077e+00 -8.19662615e-01 -8.19662615e-01
 -8.19662615e-01  2.08938164e+00  2.44591072e+00  2.44591072e+00
  2.44591072e+00  1.80872286e+01  1.80872286e+01  1.80872286e+01
  2.87242799e+01  1.60658257e+02  6.69366280e+02  4.26148008e+03]
E1 = -182.54906015293705  E_coul = 54.29740923547336
cycle= 2 E= -128.251650917464  delta_E= -0.00207  |g|= 0.0721  |ddm|= 0.0726
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11986
diis-c [-4.18184736e-04  2.83392489e-01  7.16607511e-01]
  HOMO = -0.7933573346522  LUMO = 2.10829691171768
  mo_energy =
[-3.27643893e+01 -1.90850969e+00 -7.93357335e-01 -7.93357335e-01
 -7.93357335e-01  2.10829691e+00  2.46852955e+00  2.46852955e+00
  2.46852955e+00  1.81495188e+01  1.81495188e+01  1.81495188e+01
  2.87913371e+01  1.60744995e+02  6.69461329e+02  4.26158009e+03]
E1 = -182.39362781814535  E_coul = 54.14156644432467
cycle= 3 E= -128.252061373821  delta_E= -0.00041  |g|= 0.000704  |ddm|= 0.021
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000967683
diis-c [-9.17213130e-08 -3.01444389e-03  1.66011382e-04  1.00284843e+00]
  HOMO = -0.793594919640361  LUMO = 2.1081199874794
  mo_energy =
[-3.27650793e+01 -1.90880123e+00 -7.93594920e-01 -7.93594920e-01
 -7.93594920e-01  2.10811999e+00  2.46836886e+00  2.46836886e+00
  2.46836886e+00  1.81490106e+01  1.81490106e+01  1.81490106e+01
  2.87907473e+01  1.60744380e+02  6.69460825e+02  4.26157970e+03]
E1 = -182.3949579471804  E_coul = 54.14289654055387
cycle= 4 E= -128.252061406627  delta_E= -3.28e-08  |g|= 3.98e-05  |ddm|= 0.000239
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.18106e-05
diis-c [-4.69517467e-10  2.03535232e-04 -8.09736720e-04 -1.15090734e-01
  1.11569694e+00]
  HOMO = -0.793584367868517  LUMO = 2.10812011363676
  mo_energy =
[-3.27650538e+01 -1.90880004e+00 -7.93584368e-01 -7.93584368e-01
 -7.93584368e-01  2.10812011e+00  2.46837753e+00  2.46837753e+00
  2.46837753e+00  1.81490301e+01  1.81490301e+01  1.81490301e+01
  2.87907640e+01  1.60744410e+02  6.69460868e+02  4.26157976e+03]
E1 = -182.39491757702626  E_coul = 54.14285617021257
cycle= 5 E= -128.252061406814  delta_E= -1.87e-10  |g|= 3.14e-06  |ddm|= 2.07e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.39491757702626  E_coul = 54.14285617021257
  HOMO = -0.793583562087029  LUMO = 2.10812009167697
  mo_energy =
[-3.27650519e+01 -1.90880000e+00 -7.93583562e-01 -7.93583562e-01
 -7.93583562e-01  2.10812009e+00  2.46837820e+00  2.46837820e+00
  2.46837820e+00  1.81490316e+01  1.81490316e+01  1.81490316e+01
  2.87907653e+01  1.60744412e+02  6.69460870e+02  4.26157976e+03]
E1 = -182.3949144466515  E_coul = 54.142853039836346
Extra cycle  E= -128.252061406815  delta_E= -1.45e-12  |g|= 7.59e-07  |ddm|= 1.78e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.46781357e+03 9.48865962e+01 3.23473149e+02 4.94171802e-01
 3.21522416e+01 1.05167054e+01 1.67007724e+00 2.61765348e+00
 1.22694206e+01 5.76816438e-01]
E = -128.25206140681516
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:35 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2467.81357413        1
[INPUT] 0    0    [1    /1   ]  94.8865962156        1
[INPUT] 0    0    [1    /1   ]  323.473148555        1
[INPUT] 0    0    [1    /1   ]  0.494171801542       1
[INPUT] 0    0    [1    /1   ]  32.1522415711        1
[INPUT] 0    0    [1    /1   ]  10.5167053821        1
[INPUT] 0    0    [1    /1   ]  1.67007723796        1
[INPUT] 1    0    [1    /1   ]  2.61765347882        1
[INPUT] 1    0    [1    /1   ]  12.2694205884        1
[INPUT] 1    0    [1    /1   ]  0.576816438491       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2467.8135741273777, 1.0]], [0, [94.88659621557694, 1.0]], [0, [323.47314855522626, 1.0]], [0, [0.49417180154166807, 1.0]], [0, [32.15224157112334, 1.0]], [0, [10.516705382075372, 1.0]], [0, [1.6700772379639366, 1.0]], [1, [2.6176534788169645, 1.0]], [1, [12.269420588360592, 1.0]], [1, [0.576816438491289, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2467.81357413]
bas 1, expnt(s) = [94.88659622]
bas 2, expnt(s) = [323.47314856]
bas 3, expnt(s) = [0.4941718]
bas 4, expnt(s) = [32.15224157]
bas 5, expnt(s) = [10.51670538]
bas 6, expnt(s) = [1.67007724]
bas 7, expnt(s) = [2.61765348]
bas 8, expnt(s) = [12.26942059]
bas 9, expnt(s) = [0.57681644]
CPU time:       196.68
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.46781357e+03 8.84604788e+02 9.48865962e+01 7.68101609e+01
 3.23473149e+02 1.92705319e+02 4.94171802e-01 1.48909873e+00
 3.21522416e+01 3.41132790e+01 1.05167054e+01 1.47545105e+01
 1.67007724e+00 3.71165364e+00 2.61765348e+00 9.71347409e+00
 1.22694206e+01 6.69906914e+01 5.76816438e-01 1.46649784e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.9715937132335
cond(S) = 101.74779755409809
E1 = -183.17720729612293  E_coul = 55.00178813988204
init E= -128.175419156241
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742479445267761  LUMO = 2.13923350004001
  mo_energy =
[-3.25445284e+01 -1.85625255e+00 -7.42479445e-01 -7.42479445e-01
 -7.42479445e-01  2.13923350e+00  2.50778231e+00  2.50778231e+00
  2.50778231e+00  1.82956758e+01  1.82956758e+01  1.82956758e+01
  2.89527720e+01  1.60971220e+02  6.69726961e+02  4.26189116e+03]
E1 = -182.01415538793532  E_coul = 53.76457350211696
cycle= 1 E= -128.249581885818  delta_E= -0.0742  |g|= 0.184  |ddm|= 0.186
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.299341
diis-c [-0.08960523  1.        ]
  HOMO = -0.819662614953214  LUMO = 2.0893816367999
  mo_energy =
[-3.28494996e+01 -1.93576077e+00 -8.19662615e-01 -8.19662615e-01
 -8.19662615e-01  2.08938164e+00  2.44591072e+00  2.44591072e+00
  2.44591072e+00  1.80872286e+01  1.80872286e+01  1.80872286e+01
  2.87242799e+01  1.60658257e+02  6.69366280e+02  4.26148008e+03]
E1 = -182.54906015293705  E_coul = 54.29740923547336
cycle= 2 E= -128.251650917464  delta_E= -0.00207  |g|= 0.0721  |ddm|= 0.0726
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.11986
diis-c [-4.18184736e-04  2.83392489e-01  7.16607511e-01]
  HOMO = -0.7933573346522  LUMO = 2.10829691171768
  mo_energy =
[-3.27643893e+01 -1.90850969e+00 -7.93357335e-01 -7.93357335e-01
 -7.93357335e-01  2.10829691e+00  2.46852955e+00  2.46852955e+00
  2.46852955e+00  1.81495188e+01  1.81495188e+01  1.81495188e+01
  2.87913371e+01  1.60744995e+02  6.69461329e+02  4.26158009e+03]
E1 = -182.39362781814535  E_coul = 54.14156644432467
cycle= 3 E= -128.252061373821  delta_E= -0.00041  |g|= 0.000704  |ddm|= 0.021
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000967683
diis-c [-9.17213130e-08 -3.01444389e-03  1.66011382e-04  1.00284843e+00]
  HOMO = -0.793594919640361  LUMO = 2.1081199874794
  mo_energy =
[-3.27650793e+01 -1.90880123e+00 -7.93594920e-01 -7.93594920e-01
 -7.93594920e-01  2.10811999e+00  2.46836886e+00  2.46836886e+00
  2.46836886e+00  1.81490106e+01  1.81490106e+01  1.81490106e+01
  2.87907473e+01  1.60744380e+02  6.69460825e+02  4.26157970e+03]
E1 = -182.3949579471804  E_coul = 54.14289654055387
cycle= 4 E= -128.252061406627  delta_E= -3.28e-08  |g|= 3.98e-05  |ddm|= 0.000239
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=6.18106e-05
diis-c [-4.69517467e-10  2.03535232e-04 -8.09736720e-04 -1.15090734e-01
  1.11569694e+00]
  HOMO = -0.793584367868517  LUMO = 2.10812011363676
  mo_energy =
[-3.27650538e+01 -1.90880004e+00 -7.93584368e-01 -7.93584368e-01
 -7.93584368e-01  2.10812011e+00  2.46837753e+00  2.46837753e+00
  2.46837753e+00  1.81490301e+01  1.81490301e+01  1.81490301e+01
  2.87907640e+01  1.60744410e+02  6.69460868e+02  4.26157976e+03]
E1 = -182.39491757702626  E_coul = 54.14285617021257
cycle= 5 E= -128.252061406814  delta_E= -1.87e-10  |g|= 3.14e-06  |ddm|= 2.07e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.39491757702626  E_coul = 54.14285617021257
  HOMO = -0.793583562087029  LUMO = 2.10812009167697
  mo_energy =
[-3.27650519e+01 -1.90880000e+00 -7.93583562e-01 -7.93583562e-01
 -7.93583562e-01  2.10812009e+00  2.46837820e+00  2.46837820e+00
  2.46837820e+00  1.81490316e+01  1.81490316e+01  1.81490316e+01
  2.87907653e+01  1.60744412e+02  6.69460870e+02  4.26157976e+03]
E1 = -182.3949144466515  E_coul = 54.142853039836346
Extra cycle  E= -128.252061406815  delta_E= -1.45e-12  |g|= 7.59e-07  |ddm|= 1.78e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 101.74779755409809
E1 = -182.3949144466515  E_coul = 54.142853039836346
init E= -128.252061406815
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.793583739670286  LUMO = 2.10811984737625
  mo_energy =
[-3.27650526e+01 -1.90880034e+00 -7.93583740e-01 -7.93583740e-01
 -7.93583740e-01  2.10811985e+00  2.46837805e+00  2.46837805e+00
  2.46837805e+00  1.81490311e+01  1.81490311e+01  1.81490311e+01
  2.87907647e+01  1.60744411e+02  6.69460870e+02  4.26157976e+03]
E1 = -182.39491580495215  E_coul = 54.14285439813678
cycle= 1 E= -128.252061406815  delta_E= -1.99e-13  |g|= 2.05e-07  |ddm|= 4.54e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.39491580495215  E_coul = 54.14285439813678
  HOMO = -0.793583639002842  LUMO = 2.10811989785283
  mo_energy =
[-3.27650523e+01 -1.90880027e+00 -7.93583639e-01 -7.93583639e-01
 -7.93583639e-01  2.10811990e+00  2.46837813e+00  2.46837813e+00
  2.46837813e+00  1.81490313e+01  1.81490313e+01  1.81490313e+01
  2.87907649e+01  1.60744411e+02  6.69460870e+02  4.26157976e+03]
E1 = -182.3949152683905  E_coul = 54.142853861575226
Extra cycle  E= -128.252061406815  delta_E= 8.53e-14  |g|= 7.77e-08  |ddm|= 8.03e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.46781357e+03 9.48865962e+01 3.23473149e+02 4.94171802e-01
 3.21522416e+01 1.05167054e+01 1.67007724e+00 2.61765348e+00
 1.22694206e+01 5.76816438e-01]
grad_E = [ 3.61410245e-05  7.99368016e-04 -6.99200604e-04 -2.85566387e-03
  1.76918804e-04  1.50287301e-04 -5.91496815e-03 -3.81486267e-03
 -4.54542202e-03  5.75936018e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:37 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2417.00857931        1
[INPUT] 0    0    [1    /1   ]  115.562768773        1
[INPUT] 0    0    [1    /1   ]  496.957764788        1
[INPUT] 0    0    [1    /1   ]  0.520865360605       1
[INPUT] 0    0    [1    /1   ]  34.8366442731        1
[INPUT] 0    0    [1    /1   ]  11.0034323426        1
[INPUT] 0    0    [1    /1   ]  1.77078823387        1
[INPUT] 1    0    [1    /1   ]  2.88427596174        1
[INPUT] 1    0    [1    /1   ]  14.2951739027        1
[INPUT] 1    0    [1    /1   ]  0.614072001165       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2417.008579305473, 1.0]], [0, [115.56276877250782, 1.0]], [0, [496.9577647875901, 1.0]], [0, [0.5208653606051603, 1.0]], [0, [34.83664427307517, 1.0]], [0, [11.003432342565903, 1.0]], [0, [1.7707882338722731, 1.0]], [1, [2.8842759617357556, 1.0]], [1, [14.295173902712598, 1.0]], [1, [0.614072001164665, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2417.00857931]
bas 1, expnt(s) = [115.56276877]
bas 2, expnt(s) = [496.95776479]
bas 3, expnt(s) = [0.52086536]
bas 4, expnt(s) = [34.83664427]
bas 5, expnt(s) = [11.00343234]
bas 6, expnt(s) = [1.77078823]
bas 7, expnt(s) = [2.88427596]
bas 8, expnt(s) = [14.2951739]
bas 9, expnt(s) = [0.614072]
CPU time:       199.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.41700858e+03 8.70910784e+02 1.15562769e+02 8.90488834e+01
 4.96957765e+02 2.65922224e+02 5.20865361e-01 1.54902751e+00
 3.48366443e+01 3.62278249e+01 1.10034323e+01 1.52637469e+01
 1.77078823e+00 3.87828745e+00 2.88427596e+00 1.09655496e+01
 1.42951739e+01 8.10907274e+01 6.14072001e-01 1.58583688e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.963661194821231
cond(S) = 71.78004885928503
E1 = -183.2170409995427  E_coul = 55.00933957463284
init E= -128.20770142491
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743153501592781  LUMO = 2.34378998733787
  mo_energy =
[-3.25454939e+01 -1.85693201e+00 -7.43153502e-01 -7.43153502e-01
 -7.43153502e-01  2.34378999e+00  2.74836426e+00  2.74836426e+00
  2.74836426e+00  2.13577052e+01  2.13577052e+01  2.13577052e+01
  3.19847081e+01  1.87241350e+02  9.18999104e+02  4.82723959e+03]
E1 = -182.24326868879444  E_coul = 53.976785458253055
cycle= 1 E= -128.266483230541  delta_E= -0.0588  |g|= 0.16  |ddm|= 0.177
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.255721
diis-c [-0.06539336  1.        ]
  HOMO = -0.804880565264677  LUMO = 2.30336339421501
  mo_energy =
[-3.28125193e+01 -1.91894233e+00 -8.04880565e-01 -8.04880565e-01
 -8.04880565e-01  2.30336339e+00  2.69527649e+00  2.69527649e+00
  2.69527649e+00  2.11668106e+01  2.11668106e+01  2.11668106e+01
  3.17805927e+01  1.86958862e+02  9.18666921e+02  4.82686725e+03]
E1 = -182.68628912382357  E_coul = 54.418279949474496
cycle= 2 E= -128.268009174349  delta_E= -0.00153  |g|= 0.06  |ddm|= 0.0605
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0981077
diis-c [-2.21713695e-04  2.75284055e-01  7.24715945e-01]
  HOMO = -0.783018103899933  LUMO = 2.32021858107783
  mo_energy =
[-3.27404825e+01 -1.89633263e+00 -7.83018104e-01 -7.83018104e-01
 -7.83018104e-01  2.32021858e+00  2.71567941e+00  2.71567941e+00
  2.71567941e+00  2.12221896e+01  2.12221896e+01  2.12221896e+01
  3.18386810e+01  1.87033832e+02  9.18749192e+02  4.82695274e+03]
E1 = -182.56065437009002  E_coul = 54.292368190417555
cycle= 3 E= -128.268286179672  delta_E= -0.000277  |g|= 0.000591  |ddm|= 0.0174
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000897266
diis-c [-1.12197975e-08 -4.21999915e-03 -1.91314615e-03  1.00613315e+00]
  HOMO = -0.783254104057513  LUMO = 2.32006178552901
  mo_energy =
[-3.27410815e+01 -1.89656859e+00 -7.83254104e-01 -7.83254104e-01
 -7.83254104e-01  2.32006179e+00  2.71549495e+00  2.71549495e+00
  2.71549495e+00  2.12217009e+01  2.12217009e+01  2.12217009e+01
  3.18381447e+01  1.87033319e+02  9.18748807e+02  4.82695242e+03]
E1 = -182.56179951792427  E_coul = 54.29351331503815
cycle= 4 E= -128.268286202886  delta_E= -2.32e-08  |g|= 8.8e-06  |ddm|= 0.000154
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.24597e-05
diis-c [-1.72106170e-11  1.45039581e-04 -1.01081824e-04 -4.03651689e-02
  1.04032121e+00]
  HOMO = -0.783251412425008  LUMO = 2.32006447292703
  mo_energy =
[-3.27410736e+01 -1.89656482e+00 -7.83251412e-01 -7.83251412e-01
 -7.83251412e-01  2.32006447e+00  2.71549717e+00  2.71549717e+00
  2.71549717e+00  2.12217076e+01  2.12217076e+01  2.12217076e+01
  3.18381515e+01  1.87033328e+02  9.18748818e+02  4.82695243e+03]
E1 = -182.5617843689318  E_coul = 54.29349816603937
cycle= 5 E= -128.268286202892  delta_E= -6.31e-12  |g|= 7.11e-07  |ddm|= 3.9e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5617843689318  E_coul = 54.29349816603937
  HOMO = -0.783251644000115  LUMO = 2.32006443351433
  mo_energy =
[-3.27410742e+01 -1.89656490e+00 -7.83251644e-01 -7.83251644e-01
 -7.83251644e-01  2.32006443e+00  2.71549697e+00  2.71549697e+00
  2.71549697e+00  2.12217071e+01  2.12217071e+01  2.12217071e+01
  3.18381511e+01  1.87033328e+02  9.18748817e+02  4.82695243e+03]
E1 = -182.5617853485236  E_coul = 54.29349914563103
Extra cycle  E= -128.268286202893  delta_E= -1.42e-13  |g|= 1.88e-07  |ddm|= 3.48e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.41700858e+03 1.15562769e+02 4.96957765e+02 5.20865361e-01
 3.48366443e+01 1.10034323e+01 1.77078823e+00 2.88427596e+00
 1.42951739e+01 6.14072001e-01]
E = -128.26828620289257
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:38 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2417.00857931        1
[INPUT] 0    0    [1    /1   ]  115.562768773        1
[INPUT] 0    0    [1    /1   ]  496.957764788        1
[INPUT] 0    0    [1    /1   ]  0.520865360605       1
[INPUT] 0    0    [1    /1   ]  34.8366442731        1
[INPUT] 0    0    [1    /1   ]  11.0034323426        1
[INPUT] 0    0    [1    /1   ]  1.77078823387        1
[INPUT] 1    0    [1    /1   ]  2.88427596174        1
[INPUT] 1    0    [1    /1   ]  14.2951739027        1
[INPUT] 1    0    [1    /1   ]  0.614072001165       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2417.008579305473, 1.0]], [0, [115.56276877250782, 1.0]], [0, [496.9577647875901, 1.0]], [0, [0.5208653606051603, 1.0]], [0, [34.83664427307517, 1.0]], [0, [11.003432342565903, 1.0]], [0, [1.7707882338722731, 1.0]], [1, [2.8842759617357556, 1.0]], [1, [14.295173902712598, 1.0]], [1, [0.614072001164665, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2417.00857931]
bas 1, expnt(s) = [115.56276877]
bas 2, expnt(s) = [496.95776479]
bas 3, expnt(s) = [0.52086536]
bas 4, expnt(s) = [34.83664427]
bas 5, expnt(s) = [11.00343234]
bas 6, expnt(s) = [1.77078823]
bas 7, expnt(s) = [2.88427596]
bas 8, expnt(s) = [14.2951739]
bas 9, expnt(s) = [0.614072]
CPU time:       200.21
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.41700858e+03 8.70910784e+02 1.15562769e+02 8.90488834e+01
 4.96957765e+02 2.65922224e+02 5.20865361e-01 1.54902751e+00
 3.48366443e+01 3.62278249e+01 1.10034323e+01 1.52637469e+01
 1.77078823e+00 3.87828745e+00 2.88427596e+00 1.09655496e+01
 1.42951739e+01 8.10907274e+01 6.14072001e-01 1.58583688e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.963661194821231
cond(S) = 71.78004885928503
E1 = -183.2170409995427  E_coul = 55.00933957463284
init E= -128.20770142491
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743153501592781  LUMO = 2.34378998733787
  mo_energy =
[-3.25454939e+01 -1.85693201e+00 -7.43153502e-01 -7.43153502e-01
 -7.43153502e-01  2.34378999e+00  2.74836426e+00  2.74836426e+00
  2.74836426e+00  2.13577052e+01  2.13577052e+01  2.13577052e+01
  3.19847081e+01  1.87241350e+02  9.18999104e+02  4.82723959e+03]
E1 = -182.24326868879444  E_coul = 53.976785458253055
cycle= 1 E= -128.266483230541  delta_E= -0.0588  |g|= 0.16  |ddm|= 0.177
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.255721
diis-c [-0.06539336  1.        ]
  HOMO = -0.804880565264677  LUMO = 2.30336339421501
  mo_energy =
[-3.28125193e+01 -1.91894233e+00 -8.04880565e-01 -8.04880565e-01
 -8.04880565e-01  2.30336339e+00  2.69527649e+00  2.69527649e+00
  2.69527649e+00  2.11668106e+01  2.11668106e+01  2.11668106e+01
  3.17805927e+01  1.86958862e+02  9.18666921e+02  4.82686725e+03]
E1 = -182.68628912382357  E_coul = 54.418279949474496
cycle= 2 E= -128.268009174349  delta_E= -0.00153  |g|= 0.06  |ddm|= 0.0605
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.0981077
diis-c [-2.21713695e-04  2.75284055e-01  7.24715945e-01]
  HOMO = -0.783018103899933  LUMO = 2.32021858107783
  mo_energy =
[-3.27404825e+01 -1.89633263e+00 -7.83018104e-01 -7.83018104e-01
 -7.83018104e-01  2.32021858e+00  2.71567941e+00  2.71567941e+00
  2.71567941e+00  2.12221896e+01  2.12221896e+01  2.12221896e+01
  3.18386810e+01  1.87033832e+02  9.18749192e+02  4.82695274e+03]
E1 = -182.56065437009002  E_coul = 54.292368190417555
cycle= 3 E= -128.268286179672  delta_E= -0.000277  |g|= 0.000591  |ddm|= 0.0174
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000897266
diis-c [-1.12197975e-08 -4.21999915e-03 -1.91314615e-03  1.00613315e+00]
  HOMO = -0.783254104057513  LUMO = 2.32006178552901
  mo_energy =
[-3.27410815e+01 -1.89656859e+00 -7.83254104e-01 -7.83254104e-01
 -7.83254104e-01  2.32006179e+00  2.71549495e+00  2.71549495e+00
  2.71549495e+00  2.12217009e+01  2.12217009e+01  2.12217009e+01
  3.18381447e+01  1.87033319e+02  9.18748807e+02  4.82695242e+03]
E1 = -182.56179951792427  E_coul = 54.29351331503815
cycle= 4 E= -128.268286202886  delta_E= -2.32e-08  |g|= 8.8e-06  |ddm|= 0.000154
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=1.24597e-05
diis-c [-1.72106170e-11  1.45039581e-04 -1.01081824e-04 -4.03651689e-02
  1.04032121e+00]
  HOMO = -0.783251412425008  LUMO = 2.32006447292703
  mo_energy =
[-3.27410736e+01 -1.89656482e+00 -7.83251412e-01 -7.83251412e-01
 -7.83251412e-01  2.32006447e+00  2.71549717e+00  2.71549717e+00
  2.71549717e+00  2.12217076e+01  2.12217076e+01  2.12217076e+01
  3.18381515e+01  1.87033328e+02  9.18748818e+02  4.82695243e+03]
E1 = -182.5617843689318  E_coul = 54.29349816603937
cycle= 5 E= -128.268286202892  delta_E= -6.31e-12  |g|= 7.11e-07  |ddm|= 3.9e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5617843689318  E_coul = 54.29349816603937
  HOMO = -0.783251644000115  LUMO = 2.32006443351433
  mo_energy =
[-3.27410742e+01 -1.89656490e+00 -7.83251644e-01 -7.83251644e-01
 -7.83251644e-01  2.32006443e+00  2.71549697e+00  2.71549697e+00
  2.71549697e+00  2.12217071e+01  2.12217071e+01  2.12217071e+01
  3.18381511e+01  1.87033328e+02  9.18748817e+02  4.82695243e+03]
E1 = -182.5617853485236  E_coul = 54.29349914563103
Extra cycle  E= -128.268286202893  delta_E= -1.42e-13  |g|= 1.88e-07  |ddm|= 3.48e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 71.78004885928503
E1 = -182.5617853485236  E_coul = 54.29349914563103
init E= -128.268286202893
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.783251584807414  LUMO = 2.32006450368269
  mo_energy =
[-3.27410740e+01 -1.89656481e+00 -7.83251585e-01 -7.83251585e-01
 -7.83251585e-01  2.32006450e+00  2.71549702e+00  2.71549702e+00
  2.71549702e+00  2.12217073e+01  2.12217073e+01  2.12217073e+01
  3.18381513e+01  1.87033328e+02  9.18748817e+02  4.82695243e+03]
E1 = -182.56178494559194  E_coul = 54.29349874269957
cycle= 1 E= -128.268286202892  delta_E= 1.99e-13  |g|= 5.69e-08  |ddm|= 1.03e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.56178494559194  E_coul = 54.29349874269957
  HOMO = -0.783251613810549  LUMO = 2.3200644859113
  mo_energy =
[-3.27410741e+01 -1.89656483e+00 -7.83251614e-01 -7.83251614e-01
 -7.83251614e-01  2.32006449e+00  2.71549700e+00  2.71549700e+00
  2.71549700e+00  2.12217072e+01  2.12217072e+01  2.12217072e+01
  3.18381512e+01  1.87033328e+02  9.18748817e+02  4.82695243e+03]
E1 = -182.5617851001808  E_coul = 54.29349889728851
Extra cycle  E= -128.268286202892  delta_E= 8.53e-14  |g|= 2.18e-08  |ddm|= 2.07e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.41700858e+03 1.15562769e+02 4.96957765e+02 5.20865361e-01
 3.48366443e+01 1.10034323e+01 1.77078823e+00 2.88427596e+00
 1.42951739e+01 6.14072001e-01]
grad_E = [-3.04951846e-05 -1.53636614e-03  2.58644969e-04 -4.61876666e-03
  4.29878531e-03 -4.45065458e-03  1.17172089e-03 -9.17041342e-03
  4.70611400e-03 -3.83442718e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:41 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2409.95557635        1
[INPUT] 0    0    [1    /1   ]  139.644785963        1
[INPUT] 0    0    [1    /1   ]  519.296349264        1
[INPUT] 0    0    [1    /1   ]  0.541255625062       1
[INPUT] 0    0    [1    /1   ]  37.5582442151        1
[INPUT] 0    0    [1    /1   ]  11.3458975307        1
[INPUT] 0    0    [1    /1   ]  1.84816439592        1
[INPUT] 1    0    [1    /1   ]  2.79408198937        1
[INPUT] 1    0    [1    /1   ]  13.5024912251        1
[INPUT] 1    0    [1    /1   ]  0.602579134548       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2409.9555763514118, 1.0]], [0, [139.64478596274114, 1.0]], [0, [519.2963492641342, 1.0]], [0, [0.5412556250623431, 1.0]], [0, [37.55824421513727, 1.0]], [0, [11.345897530667067, 1.0]], [0, [1.8481643959185996, 1.0]], [1, [2.7940819893678714, 1.0]], [1, [13.502491225098243, 1.0]], [1, [0.602579134547872, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2409.95557635]
bas 1, expnt(s) = [139.64478596]
bas 2, expnt(s) = [519.29634926]
bas 3, expnt(s) = [0.54125563]
bas 4, expnt(s) = [37.55824422]
bas 5, expnt(s) = [11.34589753]
bas 6, expnt(s) = [1.8481644]
bas 7, expnt(s) = [2.79408199]
bas 8, expnt(s) = [13.50249123]
bas 9, expnt(s) = [0.60257913]
CPU time:       202.81
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.40995558e+03 8.69004053e+02 1.39644786e+02 1.02632183e+02
 5.19296349e+02 2.74837808e+02 5.41255625e-01 1.59428824e+00
 3.75582442e+01 3.83304560e+01 1.13458975e+01 1.56186742e+01
 1.84816440e+00 4.00470448e+00 2.79408199e+00 1.05386098e+01
 1.35024912e+01 7.55095309e+01 6.02579135e-01 1.54882377e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.965984369215393
cond(S) = 65.43450531359976
E1 = -183.21549938537967  E_coul = 55.01052852015886
init E= -128.204970865221
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742954033065157  LUMO = 2.50886173540172
  mo_energy =
[-3.25470315e+01 -1.85628518e+00 -7.42954033e-01 -7.42954033e-01
 -7.42954033e-01  2.50886174e+00  2.67106470e+00  2.67106470e+00
  2.67106470e+00  2.01968268e+01  2.01968268e+01  2.01968268e+01
  3.43180997e+01  2.14668050e+02  1.02189974e+03  4.98123061e+03]
E1 = -182.2000107371836  E_coul = 53.93209137790449
cycle= 1 E= -128.267919359279  delta_E= -0.0629  |g|= 0.166  |ddm|= 0.182
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.26169
diis-c [-0.06848148  1.        ]
  HOMO = -0.808366766263497  LUMO = 2.4608603645147
  mo_energy =
[-3.28209836e+01 -1.92318358e+00 -8.08366766e-01 -8.08366766e-01
 -8.08366766e-01  2.46086036e+00  2.61627973e+00  2.61627973e+00
  2.61627973e+00  2.00047467e+01  2.00047467e+01  2.00047467e+01
  3.41025512e+01  2.14373782e+02  1.02155981e+03  4.98085611e+03]
E1 = -182.66288048427162  E_coul = 54.39332695088748
cycle= 2 E= -128.269553533384  delta_E= -0.00163  |g|= 0.0627  |ddm|= 0.0635
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.102957
diis-c [-2.09300756e-04  2.80640714e-01  7.19359286e-01]
  HOMO = -0.785661166131245  LUMO = 2.47937657984354
  mo_energy =
[-3.27464382e+01 -1.89967312e+00 -7.85661166e-01 -7.85661166e-01
 -7.85661166e-01  2.47937658e+00  2.63693602e+00  2.63693602e+00
  2.63693602e+00  2.00609954e+01  2.00609954e+01  2.00609954e+01
  3.41638754e+01  2.14452422e+02  1.02164509e+03  4.98094445e+03]
E1 = -182.53109894639277  E_coul = 54.26124044680253
cycle= 3 E= -128.26985849959  delta_E= -0.000305  |g|= 0.000454  |ddm|= 0.0181
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000535872
diis-c [-4.75143906e-08 -5.25883275e-03 -9.05227086e-03  1.01431110e+00]
  HOMO = -0.785803991070554  LUMO = 2.47925434156405
  mo_energy =
[-3.27467735e+01 -1.89985406e+00 -7.85803991e-01 -7.85803991e-01
 -7.85803991e-01  2.47925434e+00  2.63684326e+00  2.63684326e+00
  2.63684326e+00  2.00607225e+01  2.00607225e+01  2.00607225e+01
  3.41635442e+01  2.14452224e+02  1.02164506e+03  4.98094452e+03]
E1 = -182.53180168967975  E_coul = 54.26194317987481
cycle= 4 E= -128.269858509805  delta_E= -1.02e-08  |g|= 3.11e-05  |ddm|= 0.00014
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=5.17753e-05
diis-c [-2.39687561e-10  3.57261497e-04  1.33431123e-05 -9.99888269e-02
  1.09961822e+00]
  HOMO = -0.785794020588329  LUMO = 2.47925670962371
  mo_energy =
[-3.27467484e+01 -1.89985023e+00 -7.85794021e-01 -7.85794021e-01
 -7.85794021e-01  2.47925671e+00  2.63685168e+00  2.63685168e+00
  2.63685168e+00  2.00607425e+01  2.00607425e+01  2.00607425e+01
  3.41635632e+01  2.14452254e+02  1.02164510e+03  4.98094457e+03]
E1 = -182.53175942465285  E_coul = 54.26190091474667
cycle= 5 E= -128.269858509906  delta_E= -1.01e-10  |g|= 2.21e-06  |ddm|= 1.31e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.53175942465285  E_coul = 54.26190091474667
  HOMO = -0.785793638128295  LUMO = 2.47925656618095
  mo_energy =
[-3.27467475e+01 -1.89985039e+00 -7.85793638e-01 -7.85793638e-01
 -7.85793638e-01  2.47925657e+00  2.63685204e+00  2.63685204e+00
  2.63685204e+00  2.00607432e+01  2.00607432e+01  2.00607432e+01
  3.41635638e+01  2.14452255e+02  1.02164510e+03  4.98094457e+03]
E1 = -182.5317580787055  E_coul = 54.26189956879864
Extra cycle  E= -128.269858509907  delta_E= -6.82e-13  |g|= 4.68e-07  |ddm|= 1.24e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.40995558e+03 1.39644786e+02 5.19296349e+02 5.41255625e-01
 3.75582442e+01 1.13458975e+01 1.84816440e+00 2.79408199e+00
 1.35024912e+01 6.02579135e-01]
E = -128.26985850990687
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:42 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2413.23142322        1
[INPUT] 0    0    [1    /1   ]  128.459621143        1
[INPUT] 0    0    [1    /1   ]  508.920941455        1
[INPUT] 0    0    [1    /1   ]  0.531785136487       1
[INPUT] 0    0    [1    /1   ]  36.2941663895        1
[INPUT] 0    0    [1    /1   ]  11.1868357069        1
[INPUT] 0    0    [1    /1   ]  1.81222616372        1
[INPUT] 1    0    [1    /1   ]  2.83597359831        1
[INPUT] 1    0    [1    /1   ]  13.8706616457        1
[INPUT] 1    0    [1    /1   ]  0.607917126226       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2413.2314232164467, 1.0]], [0, [128.45962114285126, 1.0]], [0, [508.920941455086, 1.0]], [0, [0.5317851364868584, 1.0]], [0, [36.29416638954245, 1.0]], [0, [11.18683570691172, 1.0]], [0, [1.8122261637189454, 1.0]], [1, [2.8359735983110177, 1.0]], [1, [13.87066164574656, 1.0]], [1, [0.6079171262263255, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2413.23142322]
bas 1, expnt(s) = [128.45962114]
bas 2, expnt(s) = [508.92094146]
bas 3, expnt(s) = [0.53178514]
bas 4, expnt(s) = [36.29416639]
bas 5, expnt(s) = [11.18683571]
bas 6, expnt(s) = [1.81222616]
bas 7, expnt(s) = [2.8359736]
bas 8, expnt(s) = [13.87066165]
bas 9, expnt(s) = [0.60791713]
CPU time:       203.72
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.41323142e+03 8.69889829e+02 1.28459621e+02 9.64028785e+01
 5.08920941e+02 2.70709044e+02 5.31785136e-01 1.57332039e+00
 3.62941664e+01 3.73587764e+01 1.11868357e+01 1.54541623e+01
 1.81222616e+00 3.94615665e+00 2.83597360e+00 1.07364850e+01
 1.38706616e+01 7.80918776e+01 6.07917126e-01 1.56599318e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96493382456081
cond(S) = 67.64262771428642
E1 = -183.2241123710801  E_coul = 55.01042247152402
init E= -128.213689899556
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743075464114205  LUMO = 2.43160009023012
  mo_energy =
[-3.25481012e+01 -1.85671885e+00 -7.43075464e-01 -7.43075464e-01
 -7.43075464e-01  2.43160009e+00  2.70678735e+00  2.70678735e+00
  2.70678735e+00  2.07334175e+01  2.07334175e+01  2.07334175e+01
  3.32268709e+01  2.01959991e+02  9.74387500e+02  4.90968466e+03]
E1 = -182.226021554181  E_coul = 53.95430886715217
cycle= 1 E= -128.271712687029  delta_E= -0.058  |g|= 0.162  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.258431
diis-c [-0.06678662  1.        ]
  HOMO = -0.806737389010428  LUMO = 2.38715622050722
  mo_energy =
[-3.28184722e+01 -1.92132150e+00 -8.06737389e-01 -8.06737389e-01
 -8.06737389e-01  2.38715622e+00  2.65282358e+00  2.65282358e+00
  2.65282358e+00  2.05420710e+01  2.05420710e+01  2.05420710e+01
  3.30168132e+01  2.01671575e+02  9.74052191e+02  4.90931301e+03]
E1 = -182.67916556410273  E_coul = 54.405873110134735
cycle= 2 E= -128.273292453968  delta_E= -0.00158  |g|= 0.0613  |ddm|= 0.062
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100599
diis-c [-2.06297265e-04  2.78434469e-01  7.21565531e-01]
  HOMO = -0.784454615440086  LUMO = 2.40486784304482
  mo_energy =
[-3.27451955e+01 -1.89826473e+00 -7.84454615e-01 -7.84454615e-01
 -7.84454615e-01  2.40486784e+00  2.67333870e+00  2.67333870e+00
  2.67333870e+00  2.05978559e+01  2.05978559e+01  2.05978559e+01
  3.30765526e+01  2.01748434e+02  9.74135969e+02  4.90939992e+03]
E1 = -182.55042996054695  E_coul = 54.27684637570604
cycle= 3 E= -128.273583584841  delta_E= -0.000291  |g|= 0.000489  |ddm|= 0.0177
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000655287
diis-c [-2.59080787e-08 -4.85418797e-03 -6.33374624e-03  1.01118793e+00]
  HOMO = -0.784632922794514  LUMO = 2.40473403984379
  mo_energy =
[-3.27456296e+01 -1.89846448e+00 -7.84632923e-01 -7.84632923e-01
 -7.84632923e-01  2.40473404e+00  2.67321106e+00  2.67321106e+00
  2.67321106e+00  2.05975023e+01  2.05975023e+01  2.05975023e+01
  3.30761440e+01  2.01748114e+02  9.74135805e+02  4.90939985e+03]
E1 = -182.55129961268034  E_coul = 54.27771601455767
cycle= 4 E= -128.273583598123  delta_E= -1.33e-08  |g|= 1.95e-05  |ddm|= 0.000136
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.37961e-05
diis-c [-8.15551596e-11  2.34321906e-04 -1.35145773e-04 -6.87960746e-02
  1.06869690e+00]
  HOMO = -0.78462603753217  LUMO = 2.4047366495515
  mo_energy =
[-3.27456118e+01 -1.89846054e+00 -7.84626038e-01 -7.84626038e-01
 -7.84626038e-01  2.40473665e+00  2.67321690e+00  2.67321690e+00
  2.67321690e+00  2.05975166e+01  2.05975166e+01  2.05975166e+01
  3.30761577e+01  2.01748135e+02  9.74135832e+02  4.90939988e+03]
E1 = -182.55126923720763  E_coul = 54.27768563905097
cycle= 5 E= -128.273583598157  delta_E= -3.4e-11  |g|= 1.41e-06  |ddm|= 6.44e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.55126923720763  E_coul = 54.27768563905097
  HOMO = -0.784625747612363  LUMO = 2.40473659793946
  mo_energy =
[-3.27456111e+01 -1.89846059e+00 -7.84625748e-01 -7.84625748e-01
 -7.84625748e-01  2.40473660e+00  2.67321718e+00  2.67321718e+00
  2.67321718e+00  2.05975172e+01  2.05975172e+01  2.05975172e+01
  3.30761582e+01  2.01748136e+02  9.74135833e+02  4.90939988e+03]
E1 = -182.55126819834584  E_coul = 54.27768460018874
Extra cycle  E= -128.273583598157  delta_E= -4.26e-13  |g|= 3.1e-07  |ddm|= 7.78e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.41323142e+03 1.28459621e+02 5.08920941e+02 5.31785136e-01
 3.62941664e+01 1.11868357e+01 1.81222616e+00 2.83597360e+00
 1.38706616e+01 6.07917126e-01]
E = -128.2735835981571
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:43 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2413.23142322        1
[INPUT] 0    0    [1    /1   ]  128.459621143        1
[INPUT] 0    0    [1    /1   ]  508.920941455        1
[INPUT] 0    0    [1    /1   ]  0.531785136487       1
[INPUT] 0    0    [1    /1   ]  36.2941663895        1
[INPUT] 0    0    [1    /1   ]  11.1868357069        1
[INPUT] 0    0    [1    /1   ]  1.81222616372        1
[INPUT] 1    0    [1    /1   ]  2.83597359831        1
[INPUT] 1    0    [1    /1   ]  13.8706616457        1
[INPUT] 1    0    [1    /1   ]  0.607917126226       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2413.2314232164467, 1.0]], [0, [128.45962114285126, 1.0]], [0, [508.920941455086, 1.0]], [0, [0.5317851364868584, 1.0]], [0, [36.29416638954245, 1.0]], [0, [11.18683570691172, 1.0]], [0, [1.8122261637189454, 1.0]], [1, [2.8359735983110177, 1.0]], [1, [13.87066164574656, 1.0]], [1, [0.6079171262263255, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2413.23142322]
bas 1, expnt(s) = [128.45962114]
bas 2, expnt(s) = [508.92094146]
bas 3, expnt(s) = [0.53178514]
bas 4, expnt(s) = [36.29416639]
bas 5, expnt(s) = [11.18683571]
bas 6, expnt(s) = [1.81222616]
bas 7, expnt(s) = [2.8359736]
bas 8, expnt(s) = [13.87066165]
bas 9, expnt(s) = [0.60791713]
CPU time:       204.64
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.41323142e+03 8.69889829e+02 1.28459621e+02 9.64028785e+01
 5.08920941e+02 2.70709044e+02 5.31785136e-01 1.57332039e+00
 3.62941664e+01 3.73587764e+01 1.11868357e+01 1.54541623e+01
 1.81222616e+00 3.94615665e+00 2.83597360e+00 1.07364850e+01
 1.38706616e+01 7.80918776e+01 6.07917126e-01 1.56599318e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.96493382456081
cond(S) = 67.64262771428642
E1 = -183.2241123710801  E_coul = 55.01042247152402
init E= -128.213689899556
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743075464114205  LUMO = 2.43160009023012
  mo_energy =
[-3.25481012e+01 -1.85671885e+00 -7.43075464e-01 -7.43075464e-01
 -7.43075464e-01  2.43160009e+00  2.70678735e+00  2.70678735e+00
  2.70678735e+00  2.07334175e+01  2.07334175e+01  2.07334175e+01
  3.32268709e+01  2.01959991e+02  9.74387500e+02  4.90968466e+03]
E1 = -182.226021554181  E_coul = 53.95430886715217
cycle= 1 E= -128.271712687029  delta_E= -0.058  |g|= 0.162  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.258431
diis-c [-0.06678662  1.        ]
  HOMO = -0.806737389010428  LUMO = 2.38715622050722
  mo_energy =
[-3.28184722e+01 -1.92132150e+00 -8.06737389e-01 -8.06737389e-01
 -8.06737389e-01  2.38715622e+00  2.65282358e+00  2.65282358e+00
  2.65282358e+00  2.05420710e+01  2.05420710e+01  2.05420710e+01
  3.30168132e+01  2.01671575e+02  9.74052191e+02  4.90931301e+03]
E1 = -182.67916556410273  E_coul = 54.405873110134735
cycle= 2 E= -128.273292453968  delta_E= -0.00158  |g|= 0.0613  |ddm|= 0.062
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.100599
diis-c [-2.06297265e-04  2.78434469e-01  7.21565531e-01]
  HOMO = -0.784454615440086  LUMO = 2.40486784304482
  mo_energy =
[-3.27451955e+01 -1.89826473e+00 -7.84454615e-01 -7.84454615e-01
 -7.84454615e-01  2.40486784e+00  2.67333870e+00  2.67333870e+00
  2.67333870e+00  2.05978559e+01  2.05978559e+01  2.05978559e+01
  3.30765526e+01  2.01748434e+02  9.74135969e+02  4.90939992e+03]
E1 = -182.55042996054695  E_coul = 54.27684637570604
cycle= 3 E= -128.273583584841  delta_E= -0.000291  |g|= 0.000489  |ddm|= 0.0177
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000655287
diis-c [-2.59080787e-08 -4.85418797e-03 -6.33374624e-03  1.01118793e+00]
  HOMO = -0.784632922794514  LUMO = 2.40473403984379
  mo_energy =
[-3.27456296e+01 -1.89846448e+00 -7.84632923e-01 -7.84632923e-01
 -7.84632923e-01  2.40473404e+00  2.67321106e+00  2.67321106e+00
  2.67321106e+00  2.05975023e+01  2.05975023e+01  2.05975023e+01
  3.30761440e+01  2.01748114e+02  9.74135805e+02  4.90939985e+03]
E1 = -182.55129961268034  E_coul = 54.27771601455767
cycle= 4 E= -128.273583598123  delta_E= -1.33e-08  |g|= 1.95e-05  |ddm|= 0.000136
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.37961e-05
diis-c [-8.15551596e-11  2.34321906e-04 -1.35145773e-04 -6.87960746e-02
  1.06869690e+00]
  HOMO = -0.78462603753217  LUMO = 2.4047366495515
  mo_energy =
[-3.27456118e+01 -1.89846054e+00 -7.84626038e-01 -7.84626038e-01
 -7.84626038e-01  2.40473665e+00  2.67321690e+00  2.67321690e+00
  2.67321690e+00  2.05975166e+01  2.05975166e+01  2.05975166e+01
  3.30761577e+01  2.01748135e+02  9.74135832e+02  4.90939988e+03]
E1 = -182.55126923720763  E_coul = 54.27768563905097
cycle= 5 E= -128.273583598157  delta_E= -3.4e-11  |g|= 1.41e-06  |ddm|= 6.44e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.55126923720763  E_coul = 54.27768563905097
  HOMO = -0.784625747612363  LUMO = 2.40473659793946
  mo_energy =
[-3.27456111e+01 -1.89846059e+00 -7.84625748e-01 -7.84625748e-01
 -7.84625748e-01  2.40473660e+00  2.67321718e+00  2.67321718e+00
  2.67321718e+00  2.05975172e+01  2.05975172e+01  2.05975172e+01
  3.30761582e+01  2.01748136e+02  9.74135833e+02  4.90939988e+03]
E1 = -182.55126819834584  E_coul = 54.27768460018874
Extra cycle  E= -128.273583598157  delta_E= -4.26e-13  |g|= 3.1e-07  |ddm|= 7.78e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 67.64262771428642
E1 = -182.55126819834584  E_coul = 54.27768460018874
init E= -128.273583598157
    CPU time for initialize scf      0.05 sec, wall time      0.06 sec
  HOMO = -0.784625802363416  LUMO = 2.4047364994463
  mo_energy =
[-3.27456114e+01 -1.89846072e+00 -7.84625802e-01 -7.84625802e-01
 -7.84625802e-01  2.40473650e+00  2.67321712e+00  2.67321712e+00
  2.67321712e+00  2.05975170e+01  2.05975170e+01  2.05975170e+01
  3.30761580e+01  2.01748136e+02  9.74135833e+02  4.90939988e+03]
E1 = -182.55126864098236  E_coul = 54.27768504282521
cycle= 1 E= -128.273583598157  delta_E= -2.84e-14  |g|= 7.34e-08  |ddm|= 1.81e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.55126864098236  E_coul = 54.27768504282521
  HOMO = -0.784625769041743  LUMO = 2.40473651578186
  mo_energy =
[-3.27456113e+01 -1.89846069e+00 -7.84625769e-01 -7.84625769e-01
 -7.84625769e-01  2.40473652e+00  2.67321715e+00  2.67321715e+00
  2.67321715e+00  2.05975171e+01  2.05975171e+01  2.05975171e+01
  3.30761580e+01  2.01748136e+02  9.74135833e+02  4.90939988e+03]
E1 = -182.55126847232228  E_coul = 54.27768487416514
Extra cycle  E= -128.273583598157  delta_E=    0  |g|= 2.54e-08  |ddm|= 2.93e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.41323142e+03 1.28459621e+02 5.08920941e+02 5.31785136e-01
 3.62941664e+01 1.11868357e+01 1.81222616e+00 2.83597360e+00
 1.38706616e+01 6.07917126e-01]
grad_E = [-2.42705221e-05  1.92497238e-05  7.52325921e-05 -6.24326855e-03
  1.29705244e-04  9.44228360e-04  3.25704704e-03 -6.54426421e-03
  2.92143729e-03 -1.27348515e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:45 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2423.93646022        1
[INPUT] 0    0    [1    /1   ]  120.419821619        1
[INPUT] 0    0    [1    /1   ]  472.674428864        1
[INPUT] 0    0    [1    /1   ]  0.518792435145       1
[INPUT] 0    0    [1    /1   ]  34.869613263         1
[INPUT] 0    0    [1    /1   ]  10.9193020839        1
[INPUT] 0    0    [1    /1   ]  1.75048557666        1
[INPUT] 1    0    [1    /1   ]  2.78471625852        1
[INPUT] 1    0    [1    /1   ]  13.4124269098        1
[INPUT] 1    0    [1    /1   ]  0.6012173813         1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2423.9364602153373, 1.0]], [0, [120.41982161915533, 1.0]], [0, [472.67442886398936, 1.0]], [0, [0.518792435145397, 1.0]], [0, [34.86961326295786, 1.0]], [0, [10.91930208386702, 1.0]], [0, [1.7504855766554854, 1.0]], [1, [2.7847162585190373, 1.0]], [1, [13.41242690975545, 1.0]], [1, [0.6012173813003593, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2423.93646022]
bas 1, expnt(s) = [120.41982162]
bas 2, expnt(s) = [472.67442886]
bas 3, expnt(s) = [0.51879244]
bas 4, expnt(s) = [34.86961326]
bas 5, expnt(s) = [10.91930208]
bas 6, expnt(s) = [1.75048558]
bas 7, expnt(s) = [2.78471626]
bas 8, expnt(s) = [13.41242691]
bas 9, expnt(s) = [0.60121738]
CPU time:       207.29
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.42393646e+03 8.72782335e+02 1.20419822e+02 9.18414029e+01
 4.72674429e+02 2.56115938e+02 5.18792435e-01 1.54440163e+00
 3.48696133e+01 3.62535360e+01 1.09193021e+01 1.51761351e+01
 1.75048558e+00 3.84489007e+00 2.78471626e+00 1.04944717e+01
 1.34124269e+01 7.48804771e+01 6.01217381e-01 1.54444982e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966566232047642
cond(S) = 70.66853886286245
E1 = -183.22683005530314  E_coul = 55.00834024849938
init E= -128.218489806804
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74303441937376  LUMO = 2.31459462285905
  mo_energy =
[-3.25510879e+01 -1.85687230e+00 -7.43034419e-01 -7.43034419e-01
 -7.43034419e-01  2.31459462e+00  2.66251369e+00  2.66251369e+00
  2.66251369e+00  2.00682914e+01  2.00682914e+01  2.00682914e+01
  3.16879966e+01  1.90479563e+02  9.08262121e+02  4.77781549e+03]
E1 = -182.19323837529274  E_coul = 53.91790162517488
cycle= 1 E= -128.275336750118  delta_E= -0.0568  |g|= 0.166  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265526
diis-c [-0.07050383  1.        ]
  HOMO = -0.809331017108237  LUMO = 2.27024828568487
  mo_energy =
[-3.28277245e+01 -1.92438096e+00 -8.09331017e-01 -8.09331017e-01
 -8.09331017e-01  2.27024829e+00  2.60700410e+00  2.60700410e+00
  2.60700410e+00  1.98743902e+01  1.98743902e+01  1.98743902e+01
  3.14758471e+01  1.90187137e+02  9.07922224e+02  4.77743738e+03]
E1 = -182.6619044593589  E_coul = 54.3849027861959
cycle= 2 E= -128.277001673163  delta_E= -0.00166  |g|= 0.0634  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104324
diis-c [-2.09924945e-04  2.80404622e-01  7.19595378e-01]
  HOMO = -0.786302836797272  LUMO = 2.28782079790567
  mo_energy =
[-3.27523181e+01 -1.90056424e+00 -7.86302837e-01 -7.86302837e-01
 -7.86302837e-01  2.28782080e+00  2.62789069e+00  2.62789069e+00
  2.62789069e+00  1.99311812e+01  1.99311812e+01  1.99311812e+01
  3.15366539e+01  1.90265716e+02  9.08008057e+02  4.77752659e+03]
E1 = -182.52821808835623  E_coul = 54.250904296254234
cycle= 3 E= -128.277313792102  delta_E= -0.000312  |g|= 0.000469  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000603189
diis-c [-3.57825380e-08 -4.79470368e-03 -6.94245093e-03  1.01173715e+00]
  HOMO = -0.786464882233971  LUMO = 2.28769797332527
  mo_energy =
[-3.27527169e+01 -1.90075835e+00 -7.86464882e-01 -7.86464882e-01
 -7.86464882e-01  2.28769797e+00  2.62778120e+00  2.62778120e+00
  2.62778120e+00  1.99308608e+01  1.99308608e+01  1.99308608e+01
  3.15362792e+01  1.90265425e+02  9.08007922e+02  4.77752656e+03]
E1 = -182.5290258555071  E_coul = 54.25171205123375
cycle= 4 E= -128.277313804273  delta_E= -1.22e-08  |g|= 2.61e-05  |ddm|= 0.000144
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.34673e-05
diis-c [-1.83420067e-10  3.25143331e-04 -6.00023826e-05 -9.64509471e-02
  1.09618581e+00]
  HOMO = -0.786456444826416  LUMO = 2.28769983743247
  mo_energy =
[-3.27526959e+01 -1.90075506e+00 -7.86456445e-01 -7.86456445e-01
 -7.86456445e-01  2.28769984e+00  2.62778828e+00  2.62778828e+00
  2.62778828e+00  1.99308775e+01  1.99308775e+01  1.99308775e+01
  3.15362947e+01  1.90265450e+02  9.08007955e+02  4.77752659e+03]
E1 = -182.52899100325044  E_coul = 54.251677198905725
cycle= 5 E= -128.277313804345  delta_E= -7.14e-11  |g|= 1.97e-06  |ddm|= 1.11e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52899100325044  E_coul = 54.251677198905725
  HOMO = -0.786456055039081  LUMO = 2.28769975026991
  mo_energy =
[-3.27526950e+01 -1.90075516e+00 -7.86456055e-01 -7.86456055e-01
 -7.86456055e-01  2.28769975e+00  2.62778865e+00  2.62778865e+00
  2.62778865e+00  1.99308782e+01  1.99308782e+01  1.99308782e+01
  3.15362953e+01  1.90265451e+02  9.08007957e+02  4.77752660e+03]
E1 = -182.52898966282672  E_coul = 54.25167585848131
Extra cycle  E= -128.277313804345  delta_E= -6.82e-13  |g|= 4.3e-07  |ddm|= 1.12e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.42393646e+03 1.20419822e+02 4.72674429e+02 5.18792435e-01
 3.48696133e+01 1.09193021e+01 1.75048558e+00 2.78471626e+00
 1.34124269e+01 6.01217381e-01]
E = -128.2773138043454
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:46 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2423.93646022        1
[INPUT] 0    0    [1    /1   ]  120.419821619        1
[INPUT] 0    0    [1    /1   ]  472.674428864        1
[INPUT] 0    0    [1    /1   ]  0.518792435145       1
[INPUT] 0    0    [1    /1   ]  34.869613263         1
[INPUT] 0    0    [1    /1   ]  10.9193020839        1
[INPUT] 0    0    [1    /1   ]  1.75048557666        1
[INPUT] 1    0    [1    /1   ]  2.78471625852        1
[INPUT] 1    0    [1    /1   ]  13.4124269098        1
[INPUT] 1    0    [1    /1   ]  0.6012173813         1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2423.9364602153373, 1.0]], [0, [120.41982161915533, 1.0]], [0, [472.67442886398936, 1.0]], [0, [0.518792435145397, 1.0]], [0, [34.86961326295786, 1.0]], [0, [10.91930208386702, 1.0]], [0, [1.7504855766554854, 1.0]], [1, [2.7847162585190373, 1.0]], [1, [13.41242690975545, 1.0]], [1, [0.6012173813003593, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2423.93646022]
bas 1, expnt(s) = [120.41982162]
bas 2, expnt(s) = [472.67442886]
bas 3, expnt(s) = [0.51879244]
bas 4, expnt(s) = [34.86961326]
bas 5, expnt(s) = [10.91930208]
bas 6, expnt(s) = [1.75048558]
bas 7, expnt(s) = [2.78471626]
bas 8, expnt(s) = [13.41242691]
bas 9, expnt(s) = [0.60121738]
CPU time:       208.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.42393646e+03 8.72782335e+02 1.20419822e+02 9.18414029e+01
 4.72674429e+02 2.56115938e+02 5.18792435e-01 1.54440163e+00
 3.48696133e+01 3.62535360e+01 1.09193021e+01 1.51761351e+01
 1.75048558e+00 3.84489007e+00 2.78471626e+00 1.04944717e+01
 1.34124269e+01 7.48804771e+01 6.01217381e-01 1.54444982e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966566232047642
cond(S) = 70.66853886286245
E1 = -183.22683005530314  E_coul = 55.00834024849938
init E= -128.218489806804
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74303441937376  LUMO = 2.31459462285905
  mo_energy =
[-3.25510879e+01 -1.85687230e+00 -7.43034419e-01 -7.43034419e-01
 -7.43034419e-01  2.31459462e+00  2.66251369e+00  2.66251369e+00
  2.66251369e+00  2.00682914e+01  2.00682914e+01  2.00682914e+01
  3.16879966e+01  1.90479563e+02  9.08262121e+02  4.77781549e+03]
E1 = -182.19323837529274  E_coul = 53.91790162517488
cycle= 1 E= -128.275336750118  delta_E= -0.0568  |g|= 0.166  |ddm|= 0.178
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.265526
diis-c [-0.07050383  1.        ]
  HOMO = -0.809331017108237  LUMO = 2.27024828568487
  mo_energy =
[-3.28277245e+01 -1.92438096e+00 -8.09331017e-01 -8.09331017e-01
 -8.09331017e-01  2.27024829e+00  2.60700410e+00  2.60700410e+00
  2.60700410e+00  1.98743902e+01  1.98743902e+01  1.98743902e+01
  3.14758471e+01  1.90187137e+02  9.07922224e+02  4.77743738e+03]
E1 = -182.6619044593589  E_coul = 54.3849027861959
cycle= 2 E= -128.277001673163  delta_E= -0.00166  |g|= 0.0634  |ddm|= 0.0641
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.104324
diis-c [-2.09924945e-04  2.80404622e-01  7.19595378e-01]
  HOMO = -0.786302836797272  LUMO = 2.28782079790567
  mo_energy =
[-3.27523181e+01 -1.90056424e+00 -7.86302837e-01 -7.86302837e-01
 -7.86302837e-01  2.28782080e+00  2.62789069e+00  2.62789069e+00
  2.62789069e+00  1.99311812e+01  1.99311812e+01  1.99311812e+01
  3.15366539e+01  1.90265716e+02  9.08008057e+02  4.77752659e+03]
E1 = -182.52821808835623  E_coul = 54.250904296254234
cycle= 3 E= -128.277313792102  delta_E= -0.000312  |g|= 0.000469  |ddm|= 0.0183
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000603189
diis-c [-3.57825380e-08 -4.79470368e-03 -6.94245093e-03  1.01173715e+00]
  HOMO = -0.786464882233971  LUMO = 2.28769797332527
  mo_energy =
[-3.27527169e+01 -1.90075835e+00 -7.86464882e-01 -7.86464882e-01
 -7.86464882e-01  2.28769797e+00  2.62778120e+00  2.62778120e+00
  2.62778120e+00  1.99308608e+01  1.99308608e+01  1.99308608e+01
  3.15362792e+01  1.90265425e+02  9.08007922e+02  4.77752656e+03]
E1 = -182.5290258555071  E_coul = 54.25171205123375
cycle= 4 E= -128.277313804273  delta_E= -1.22e-08  |g|= 2.61e-05  |ddm|= 0.000144
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.34673e-05
diis-c [-1.83420067e-10  3.25143331e-04 -6.00023826e-05 -9.64509471e-02
  1.09618581e+00]
  HOMO = -0.786456444826416  LUMO = 2.28769983743247
  mo_energy =
[-3.27526959e+01 -1.90075506e+00 -7.86456445e-01 -7.86456445e-01
 -7.86456445e-01  2.28769984e+00  2.62778828e+00  2.62778828e+00
  2.62778828e+00  1.99308775e+01  1.99308775e+01  1.99308775e+01
  3.15362947e+01  1.90265450e+02  9.08007955e+02  4.77752659e+03]
E1 = -182.52899100325044  E_coul = 54.251677198905725
cycle= 5 E= -128.277313804345  delta_E= -7.14e-11  |g|= 1.97e-06  |ddm|= 1.11e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52899100325044  E_coul = 54.251677198905725
  HOMO = -0.786456055039081  LUMO = 2.28769975026991
  mo_energy =
[-3.27526950e+01 -1.90075516e+00 -7.86456055e-01 -7.86456055e-01
 -7.86456055e-01  2.28769975e+00  2.62778865e+00  2.62778865e+00
  2.62778865e+00  1.99308782e+01  1.99308782e+01  1.99308782e+01
  3.15362953e+01  1.90265451e+02  9.08007957e+02  4.77752660e+03]
E1 = -182.52898966282672  E_coul = 54.25167585848131
Extra cycle  E= -128.277313804345  delta_E= -6.82e-13  |g|= 4.3e-07  |ddm|= 1.12e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 70.66853886286245
E1 = -182.52898966282672  E_coul = 54.25167585848131
init E= -128.277313804345
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786456123344217  LUMO = 2.28769962202667
  mo_energy =
[-3.27526953e+01 -1.90075533e+00 -7.86456123e-01 -7.86456123e-01
 -7.86456123e-01  2.28769962e+00  2.62778858e+00  2.62778858e+00
  2.62778858e+00  1.99308780e+01  1.99308780e+01  1.99308780e+01
  3.15362951e+01  1.90265451e+02  9.08007956e+02  4.77752660e+03]
E1 = -182.52899024765003  E_coul = 54.25167644330451
cycle= 1 E= -128.277313804346  delta_E= -1.14e-13  |g|= 1e-07  |ddm|= 2.58e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.52899024765003  E_coul = 54.25167644330451
  HOMO = -0.786456078825164  LUMO = 2.28769964183398
  mo_energy =
[-3.27526951e+01 -1.90075530e+00 -7.86456079e-01 -7.86456079e-01
 -7.86456079e-01  2.28769964e+00  2.62778862e+00  2.62778862e+00
  2.62778862e+00  1.99308781e+01  1.99308781e+01  1.99308781e+01
  3.15362952e+01  1.90265451e+02  9.08007957e+02  4.77752660e+03]
E1 = -182.52899002506282  E_coul = 54.25167622071756
Extra cycle  E= -128.277313804345  delta_E= 2.56e-13  |g|= 3.41e-08  |ddm|= 4.14e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.42393646e+03 1.20419822e+02 4.72674429e+02 5.18792435e-01
 3.48696133e+01 1.09193021e+01 1.75048558e+00 2.78471626e+00
 1.34124269e+01 6.01217381e-01]
grad_E = [-1.96333931e-05  1.63458871e-05  4.70263672e-05  2.17641224e-03
  2.87851025e-04  3.88011201e-04 -2.19674378e-03 -1.41765695e-03
  5.45525044e-04  4.77265172e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:49 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2444.44579153        1
[INPUT] 0    0    [1    /1   ]  103.290158541        1
[INPUT] 0    0    [1    /1   ]  403.375908231        1
[INPUT] 0    0    [1    /1   ]  0.515753110055       1
[INPUT] 0    0    [1    /1   ]  31.7092276557        1
[INPUT] 0    0    [1    /1   ]  10.3873656695        1
[INPUT] 0    0    [1    /1   ]  1.76143438945        1
[INPUT] 1    0    [1    /1   ]  2.73195050445        1
[INPUT] 1    0    [1    /1   ]  12.9504113364        1
[INPUT] 1    0    [1    /1   ]  0.594102026508       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2444.445791529404, 1.0]], [0, [103.29015854062601, 1.0]], [0, [403.3759082312009, 1.0]], [0, [0.5157531100545397, 1.0]], [0, [31.709227655697983, 1.0]], [0, [10.387365669473573, 1.0]], [0, [1.7614343894531241, 1.0]], [1, [2.7319505044521692, 1.0]], [1, [12.950411336361402, 1.0]], [1, [0.5941020265083944, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2444.44579153]
bas 1, expnt(s) = [103.29015854]
bas 2, expnt(s) = [403.37590823]
bas 3, expnt(s) = [0.51575311]
bas 4, expnt(s) = [31.70922766]
bas 5, expnt(s) = [10.38736567]
bas 6, expnt(s) = [1.76143439]
bas 7, expnt(s) = [2.7319505]
bas 8, expnt(s) = [12.95041134]
bas 9, expnt(s) = [0.59410203]
CPU time:       210.84
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.44444579e+03 8.78315066e+02 1.03290159e+02 8.18576424e+01
 4.03375908e+02 2.27403682e+02 5.15753110e-01 1.53761078e+00
 3.17092277e+01 3.37601426e+01 1.03873657e+01 1.46182064e+01
 1.76143439e+00 3.86291256e+00 2.73195050e+00 1.02464972e+01
 1.29504113e+01 7.16702379e+01 5.94102027e-01 1.52163569e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.968099774844784
cond(S) = 81.94916250801576
E1 = -183.22697336531616  E_coul = 55.00757423812539
init E= -128.219399127191
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742777600517675  LUMO = 2.30625322690059
  mo_energy =
[-3.25532020e+01 -1.85670754e+00 -7.42777601e-01 -7.42777601e-01
 -7.42777601e-01  2.30625323e+00  2.61665304e+00  2.61665304e+00
  2.61665304e+00  1.94010965e+01  1.94010965e+01  1.94010965e+01
  2.92222058e+01  1.66915786e+02  7.74885756e+02  4.51522314e+03]
E1 = -182.14867442790535  E_coul = 53.87218398869637
cycle= 1 E= -128.276490439209  delta_E= -0.0571  |g|= 0.172  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.276381
diis-c [-0.07638643  1.        ]
  HOMO = -0.812660281763802  LUMO = 2.25920186972532
  mo_energy =
[-3.28375780e+01 -1.92808236e+00 -8.12660282e-01 -8.12660282e-01
 -8.12660282e-01  2.25920187e+00  2.55890279e+00  2.55890279e+00
  2.55890279e+00  1.92034379e+01  1.92034379e+01  1.92034379e+01
  2.90100407e+01  1.66621413e+02  7.74542301e+02  4.51483692e+03]
E1 = -182.6373529120588  E_coul = 54.35907914319211
cycle= 2 E= -128.278273768867  delta_E= -0.00178  |g|= 0.0662  |ddm|= 0.0663
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.109393
diis-c [-2.41538310e-04  2.81820652e-01  7.18179348e-01]
  HOMO = -0.788675674924193  LUMO = 2.27741972635458
  mo_energy =
[-3.27592194e+01 -1.90325089e+00 -7.88675675e-01 -7.88675675e-01
 -7.88675675e-01  2.27741973e+00  2.58032319e+00  2.58032319e+00
  2.58032319e+00  1.92617652e+01  1.92617652e+01  1.92617652e+01
  2.90715331e+01  1.66701825e+02  7.74630804e+02  4.51492942e+03]
E1 = -182.49699590951172  E_coul = 54.21838063516997
cycle= 3 E= -128.278615274342  delta_E= -0.000342  |g|= 0.000517  |ddm|= 0.0191
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000691804
diis-c [-4.17793574e-08 -4.33749441e-03 -5.04144263e-03  1.00937894e+00]
  HOMO = -0.788858577717698  LUMO = 2.27728421708072
  mo_energy =
[-3.27596789e+01 -1.90346503e+00 -7.88858578e-01 -7.88858578e-01
 -7.88858578e-01  2.27728422e+00  2.58019967e+00  2.58019967e+00
  2.58019967e+00  1.92614038e+01  1.92614038e+01  1.92614038e+01
  2.90711139e+01  1.66701452e+02  7.74630574e+02  4.51492930e+03]
E1 = -182.49791458893517  E_coul = 54.21929929925667
cycle= 4 E= -128.278615289678  delta_E= -1.53e-08  |g|= 2.46e-05  |ddm|= 0.000153
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.05901e-05
diis-c [-1.73177821e-10  2.57401774e-04 -2.09166724e-04 -9.01230137e-02
  1.09007478e+00]
  HOMO = -0.788851113598591  LUMO = 2.27728552168203
  mo_energy =
[-3.27596601e+01 -1.90346251e+00 -7.88851114e-01 -7.88851114e-01
 -7.88851114e-01  2.27728552e+00  2.58020583e+00  2.58020583e+00
  2.58020583e+00  1.92614185e+01  1.92614185e+01  1.92614185e+01
  2.90711268e+01  1.66701474e+02  7.74630605e+02  4.51492933e+03]
E1 = -182.49788373140888  E_coul = 54.219268441667246
cycle= 5 E= -128.278615289742  delta_E= -6.31e-11  |g|= 2.01e-06  |ddm|= 1.05e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.49788373140888  E_coul = 54.219268441667246
  HOMO = -0.788850638042264  LUMO = 2.27728549144714
  mo_energy =
[-3.27596590e+01 -1.90346253e+00 -7.88850638e-01 -7.88850638e-01
 -7.88850638e-01  2.27728549e+00  2.58020626e+00  2.58020626e+00
  2.58020626e+00  1.92614194e+01  1.92614194e+01  1.92614194e+01
  2.90711276e+01  1.66701475e+02  7.74630606e+02  4.51492934e+03]
E1 = -182.497881935469  E_coul = 54.21926664572682
Extra cycle  E= -128.278615289742  delta_E= -5.4e-13  |g|= 4.69e-07  |ddm|= 1.12e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.44444579e+03 1.03290159e+02 4.03375908e+02 5.15753110e-01
 3.17092277e+01 1.03873657e+01 1.76143439e+00 2.73195050e+00
 1.29504113e+01 5.94102027e-01]
E = -128.27861528974216
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:50 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2444.44579153        1
[INPUT] 0    0    [1    /1   ]  103.290158541        1
[INPUT] 0    0    [1    /1   ]  403.375908231        1
[INPUT] 0    0    [1    /1   ]  0.515753110055       1
[INPUT] 0    0    [1    /1   ]  31.7092276557        1
[INPUT] 0    0    [1    /1   ]  10.3873656695        1
[INPUT] 0    0    [1    /1   ]  1.76143438945        1
[INPUT] 1    0    [1    /1   ]  2.73195050445        1
[INPUT] 1    0    [1    /1   ]  12.9504113364        1
[INPUT] 1    0    [1    /1   ]  0.594102026508       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2444.445791529404, 1.0]], [0, [103.29015854062601, 1.0]], [0, [403.3759082312009, 1.0]], [0, [0.5157531100545397, 1.0]], [0, [31.709227655697983, 1.0]], [0, [10.387365669473573, 1.0]], [0, [1.7614343894531241, 1.0]], [1, [2.7319505044521692, 1.0]], [1, [12.950411336361402, 1.0]], [1, [0.5941020265083944, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2444.44579153]
bas 1, expnt(s) = [103.29015854]
bas 2, expnt(s) = [403.37590823]
bas 3, expnt(s) = [0.51575311]
bas 4, expnt(s) = [31.70922766]
bas 5, expnt(s) = [10.38736567]
bas 6, expnt(s) = [1.76143439]
bas 7, expnt(s) = [2.7319505]
bas 8, expnt(s) = [12.95041134]
bas 9, expnt(s) = [0.59410203]
CPU time:       211.78
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.44444579e+03 8.78315066e+02 1.03290159e+02 8.18576424e+01
 4.03375908e+02 2.27403682e+02 5.15753110e-01 1.53761078e+00
 3.17092277e+01 3.37601426e+01 1.03873657e+01 1.46182064e+01
 1.76143439e+00 3.86291256e+00 2.73195050e+00 1.02464972e+01
 1.29504113e+01 7.16702379e+01 5.94102027e-01 1.52163569e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.968099774844784
cond(S) = 81.94916250801576
E1 = -183.22697336531616  E_coul = 55.00757423812539
init E= -128.219399127191
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742777600517675  LUMO = 2.30625322690059
  mo_energy =
[-3.25532020e+01 -1.85670754e+00 -7.42777601e-01 -7.42777601e-01
 -7.42777601e-01  2.30625323e+00  2.61665304e+00  2.61665304e+00
  2.61665304e+00  1.94010965e+01  1.94010965e+01  1.94010965e+01
  2.92222058e+01  1.66915786e+02  7.74885756e+02  4.51522314e+03]
E1 = -182.14867442790535  E_coul = 53.87218398869637
cycle= 1 E= -128.276490439209  delta_E= -0.0571  |g|= 0.172  |ddm|= 0.183
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.276381
diis-c [-0.07638643  1.        ]
  HOMO = -0.812660281763802  LUMO = 2.25920186972532
  mo_energy =
[-3.28375780e+01 -1.92808236e+00 -8.12660282e-01 -8.12660282e-01
 -8.12660282e-01  2.25920187e+00  2.55890279e+00  2.55890279e+00
  2.55890279e+00  1.92034379e+01  1.92034379e+01  1.92034379e+01
  2.90100407e+01  1.66621413e+02  7.74542301e+02  4.51483692e+03]
E1 = -182.6373529120588  E_coul = 54.35907914319211
cycle= 2 E= -128.278273768867  delta_E= -0.00178  |g|= 0.0662  |ddm|= 0.0663
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.109393
diis-c [-2.41538310e-04  2.81820652e-01  7.18179348e-01]
  HOMO = -0.788675674924193  LUMO = 2.27741972635458
  mo_energy =
[-3.27592194e+01 -1.90325089e+00 -7.88675675e-01 -7.88675675e-01
 -7.88675675e-01  2.27741973e+00  2.58032319e+00  2.58032319e+00
  2.58032319e+00  1.92617652e+01  1.92617652e+01  1.92617652e+01
  2.90715331e+01  1.66701825e+02  7.74630804e+02  4.51492942e+03]
E1 = -182.49699590951172  E_coul = 54.21838063516997
cycle= 3 E= -128.278615274342  delta_E= -0.000342  |g|= 0.000517  |ddm|= 0.0191
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000691804
diis-c [-4.17793574e-08 -4.33749441e-03 -5.04144263e-03  1.00937894e+00]
  HOMO = -0.788858577717698  LUMO = 2.27728421708072
  mo_energy =
[-3.27596789e+01 -1.90346503e+00 -7.88858578e-01 -7.88858578e-01
 -7.88858578e-01  2.27728422e+00  2.58019967e+00  2.58019967e+00
  2.58019967e+00  1.92614038e+01  1.92614038e+01  1.92614038e+01
  2.90711139e+01  1.66701452e+02  7.74630574e+02  4.51492930e+03]
E1 = -182.49791458893517  E_coul = 54.21929929925667
cycle= 4 E= -128.278615289678  delta_E= -1.53e-08  |g|= 2.46e-05  |ddm|= 0.000153
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.05901e-05
diis-c [-1.73177821e-10  2.57401774e-04 -2.09166724e-04 -9.01230137e-02
  1.09007478e+00]
  HOMO = -0.788851113598591  LUMO = 2.27728552168203
  mo_energy =
[-3.27596601e+01 -1.90346251e+00 -7.88851114e-01 -7.88851114e-01
 -7.88851114e-01  2.27728552e+00  2.58020583e+00  2.58020583e+00
  2.58020583e+00  1.92614185e+01  1.92614185e+01  1.92614185e+01
  2.90711268e+01  1.66701474e+02  7.74630605e+02  4.51492933e+03]
E1 = -182.49788373140888  E_coul = 54.219268441667246
cycle= 5 E= -128.278615289742  delta_E= -6.31e-11  |g|= 2.01e-06  |ddm|= 1.05e-05
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.49788373140888  E_coul = 54.219268441667246
  HOMO = -0.788850638042264  LUMO = 2.27728549144714
  mo_energy =
[-3.27596590e+01 -1.90346253e+00 -7.88850638e-01 -7.88850638e-01
 -7.88850638e-01  2.27728549e+00  2.58020626e+00  2.58020626e+00
  2.58020626e+00  1.92614194e+01  1.92614194e+01  1.92614194e+01
  2.90711276e+01  1.66701475e+02  7.74630606e+02  4.51492934e+03]
E1 = -182.497881935469  E_coul = 54.21926664572682
Extra cycle  E= -128.278615289742  delta_E= -5.4e-13  |g|= 4.69e-07  |ddm|= 1.12e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 81.94916250801576
E1 = -182.497881935469  E_coul = 54.21926664572682
init E= -128.278615289742
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.788850737478893  LUMO = 2.27728533905272
  mo_energy =
[-3.27596594e+01 -1.90346273e+00 -7.88850737e-01 -7.88850737e-01
 -7.88850737e-01  2.27728534e+00  2.58020617e+00  2.58020617e+00
  2.58020617e+00  1.92614191e+01  1.92614191e+01  1.92614191e+01
  2.90711273e+01  1.66701474e+02  7.74630606e+02  4.51492934e+03]
E1 = -182.49788270539256  E_coul = 54.219267415650386
cycle= 1 E= -128.278615289742  delta_E=    0  |g|= 1.2e-07  |ddm|= 2.75e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.49788270539256  E_coul = 54.219267415650386
  HOMO = -0.788850680220247  LUMO = 2.27728536823702
  mo_energy =
[-3.27596592e+01 -1.90346269e+00 -7.88850680e-01 -7.88850680e-01
 -7.88850680e-01  2.27728537e+00  2.58020622e+00  2.58020622e+00
  2.58020622e+00  1.92614192e+01  1.92614192e+01  1.92614192e+01
  2.90711274e+01  1.66701475e+02  7.74630606e+02  4.51492934e+03]
E1 = -182.4978824059384  E_coul = 54.219267116196335
Extra cycle  E= -128.278615289742  delta_E= 8.53e-14  |g|= 4.41e-08  |ddm|= 4.68e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.44444579e+03 1.03290159e+02 4.03375908e+02 5.15753110e-01
 3.17092277e+01 1.03873657e+01 1.76143439e+00 2.73195050e+00
 1.29504113e+01 5.94102027e-01]
grad_E = [-5.31973902e-06 -3.30560569e-05 -6.15313412e-05 -6.58124077e-03
  4.06457182e-04  4.97874255e-04  1.97587186e-03  4.73731111e-03
 -2.24091807e-03 -1.57289155e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:53 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2436.32263895        1
[INPUT] 0    0    [1    /1   ]  108.964223455        1
[INPUT] 0    0    [1    /1   ]  430.918125618        1
[INPUT] 0    0    [1    /1   ]  0.515195034317       1
[INPUT] 0    0    [1    /1   ]  32.5087846177        1
[INPUT] 0    0    [1    /1   ]  10.4990793263        1
[INPUT] 0    0    [1    /1   ]  1.74695244767        1
[INPUT] 1    0    [1    /1   ]  2.76916897205        1
[INPUT] 1    0    [1    /1   ]  13.2711914687        1
[INPUT] 1    0    [1    /1   ]  0.599112510044       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2436.322638948702, 1.0]], [0, [108.9642234552873, 1.0]], [0, [430.91812561764453, 1.0]], [0, [0.5151950343165801, 1.0]], [0, [32.50878461766134, 1.0]], [0, [10.49907932633257, 1.0]], [0, [1.7469524476656233, 1.0]], [1, [2.7691689720509736, 1.0]], [1, [13.271191468692594, 1.0]], [1, [0.5991125100437943, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2436.32263895]
bas 1, expnt(s) = [108.96422346]
bas 2, expnt(s) = [430.91812562]
bas 3, expnt(s) = [0.51519503]
bas 4, expnt(s) = [32.50878462]
bas 5, expnt(s) = [10.49907933]
bas 6, expnt(s) = [1.74695245]
bas 7, expnt(s) = [2.76916897]
bas 8, expnt(s) = [13.27119147]
bas 9, expnt(s) = [0.59911251]
CPU time:       214.51
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43632264e+03 8.76125105e+02 1.08964223e+02 8.52075289e+01
 4.30918126e+02 2.38952234e+02 5.15195034e-01 1.53636277e+00
 3.25087846e+01 3.43966046e+01 1.04990793e+01 1.47359601e+01
 1.74695245e+00 3.83906828e+00 2.76916897e+00 1.04212836e+01
 1.32711915e+01 7.38961456e+01 5.99112510e-01 1.53769385e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.967069124189178
cond(S) = 76.4524399825268
E1 = -183.22875509101468  E_coul = 55.00790430047259
init E= -128.220850790542
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74298480852329  LUMO = 2.29121146934745
  mo_energy =
[-3.25525603e+01 -1.85686942e+00 -7.42984809e-01 -7.42984809e-01
 -7.42984809e-01  2.29121147e+00  2.64894954e+00  2.64894954e+00
  2.64894954e+00  1.98655502e+01  1.98655502e+01  1.98655502e+01
  2.97547505e+01  1.73783671e+02  8.22680727e+02  4.61431410e+03]
E1 = -182.1805248994314  E_coul = 53.9031205844198
cycle= 1 E= -128.277404315012  delta_E= -0.0566  |g|= 0.168  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.269479
diis-c [-0.07261898  1.        ]
  HOMO = -0.810429592339056  LUMO = 2.24661984383624
  mo_energy =
[-3.28317130e+01 -1.92555453e+00 -8.10429592e-01 -8.10429592e-01
 -8.10429592e-01  2.24661984e+00  2.59268384e+00  2.59268384e+00
  2.59268384e+00  1.96703548e+01  1.96703548e+01  1.96703548e+01
  2.95455985e+01  1.73492496e+02  8.22340461e+02  4.61393280e+03]
E1 = -182.6555344552163  E_coul = 54.376428052528155
cycle= 2 E= -128.279106402688  delta_E= -0.0017  |g|= 0.0643  |ddm|= 0.0647
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106036
diis-c [-2.21245730e-04  2.80672735e-01  7.19327265e-01]
  HOMO = -0.787093315791315  LUMO = 2.26423811875932
  mo_energy =
[-3.27553412e+01 -1.90141465e+00 -7.87093316e-01 -7.87093316e-01
 -7.87093316e-01  2.26423812e+00  2.61375508e+00  2.61375508e+00
  2.61375508e+00  1.97276703e+01  1.97276703e+01  1.97276703e+01
  2.96059358e+01  1.73571296e+02  8.22427040e+02  4.61402310e+03]
E1 = -182.519691164906  E_coul = 54.24026346815292
cycle= 3 E= -128.279427696753  delta_E= -0.000321  |g|= 0.000497  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000659018
diis-c [-3.69612613e-08 -4.59724362e-03 -5.90009048e-03  1.01049733e+00]
  HOMO = -0.787269289114224  LUMO = 2.2641085955233
  mo_energy =
[-3.27557790e+01 -1.90162041e+00 -7.87269289e-01 -7.87269289e-01
 -7.87269289e-01  2.26410860e+00  2.61363459e+00  2.61363459e+00
  2.61363459e+00  1.97273215e+01  1.97273215e+01  1.97273215e+01
  2.96055332e+01  1.73570953e+02  8.22426848e+02  4.61402301e+03]
E1 = -182.5205682578023  E_coul = 54.241140547092655
cycle= 4 E= -128.27942771071  delta_E= -1.4e-08  |g|= 2.42e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.02962e-05
diis-c [-1.64684624e-10  2.72896745e-04 -1.54800609e-04 -8.76344213e-02
  1.08751633e+00]
  HOMO = -0.787261593909277  LUMO = 2.26411028804498
  mo_energy =
[-3.27557597e+01 -1.90161738e+00 -7.87261594e-01 -7.87261594e-01
 -7.87261594e-01  2.26411029e+00  2.61364101e+00  2.61364101e+00
  2.61364101e+00  1.97273368e+01  1.97273368e+01  1.97273368e+01
  2.96055470e+01  1.73570976e+02  8.22426878e+02  4.61402304e+03]
E1 = -182.5205362718739  E_coul = 54.24110856110461
cycle= 5 E= -128.279427710769  delta_E= -5.97e-11  |g|= 1.93e-06  |ddm|= 9.97e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5205362718739  E_coul = 54.24110856110461
  HOMO = -0.787261165485515  LUMO = 2.26411023702673
  mo_energy =
[-3.27557587e+01 -1.90161742e+00 -7.87261165e-01 -7.87261165e-01
 -7.87261165e-01  2.26411024e+00  2.61364140e+00  2.61364140e+00
  2.61364140e+00  1.97273376e+01  1.97273376e+01  1.97273376e+01
  2.96055477e+01  1.73570977e+02  8.22426880e+02  4.61402305e+03]
E1 = -182.52053473018475  E_coul = 54.24110701941486
Extra cycle  E= -128.27942771077  delta_E= -5.68e-13  |g|= 4.37e-07  |ddm|= 1.09e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.43632264e+03 1.08964223e+02 4.30918126e+02 5.15195034e-01
 3.25087846e+01 1.04990793e+01 1.74695245e+00 2.76916897e+00
 1.32711915e+01 5.99112510e-01]
E = -128.27942771076988
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:54 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2436.32263895        1
[INPUT] 0    0    [1    /1   ]  108.964223455        1
[INPUT] 0    0    [1    /1   ]  430.918125618        1
[INPUT] 0    0    [1    /1   ]  0.515195034317       1
[INPUT] 0    0    [1    /1   ]  32.5087846177        1
[INPUT] 0    0    [1    /1   ]  10.4990793263        1
[INPUT] 0    0    [1    /1   ]  1.74695244767        1
[INPUT] 1    0    [1    /1   ]  2.76916897205        1
[INPUT] 1    0    [1    /1   ]  13.2711914687        1
[INPUT] 1    0    [1    /1   ]  0.599112510044       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2436.322638948702, 1.0]], [0, [108.9642234552873, 1.0]], [0, [430.91812561764453, 1.0]], [0, [0.5151950343165801, 1.0]], [0, [32.50878461766134, 1.0]], [0, [10.49907932633257, 1.0]], [0, [1.7469524476656233, 1.0]], [1, [2.7691689720509736, 1.0]], [1, [13.271191468692594, 1.0]], [1, [0.5991125100437943, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2436.32263895]
bas 1, expnt(s) = [108.96422346]
bas 2, expnt(s) = [430.91812562]
bas 3, expnt(s) = [0.51519503]
bas 4, expnt(s) = [32.50878462]
bas 5, expnt(s) = [10.49907933]
bas 6, expnt(s) = [1.74695245]
bas 7, expnt(s) = [2.76916897]
bas 8, expnt(s) = [13.27119147]
bas 9, expnt(s) = [0.59911251]
CPU time:       215.47
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43632264e+03 8.76125105e+02 1.08964223e+02 8.52075289e+01
 4.30918126e+02 2.38952234e+02 5.15195034e-01 1.53636277e+00
 3.25087846e+01 3.43966046e+01 1.04990793e+01 1.47359601e+01
 1.74695245e+00 3.83906828e+00 2.76916897e+00 1.04212836e+01
 1.32711915e+01 7.38961456e+01 5.99112510e-01 1.53769385e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.967069124189178
cond(S) = 76.4524399825268
E1 = -183.22875509101468  E_coul = 55.00790430047259
init E= -128.220850790542
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.74298480852329  LUMO = 2.29121146934745
  mo_energy =
[-3.25525603e+01 -1.85686942e+00 -7.42984809e-01 -7.42984809e-01
 -7.42984809e-01  2.29121147e+00  2.64894954e+00  2.64894954e+00
  2.64894954e+00  1.98655502e+01  1.98655502e+01  1.98655502e+01
  2.97547505e+01  1.73783671e+02  8.22680727e+02  4.61431410e+03]
E1 = -182.1805248994314  E_coul = 53.9031205844198
cycle= 1 E= -128.277404315012  delta_E= -0.0566  |g|= 0.168  |ddm|= 0.18
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.269479
diis-c [-0.07261898  1.        ]
  HOMO = -0.810429592339056  LUMO = 2.24661984383624
  mo_energy =
[-3.28317130e+01 -1.92555453e+00 -8.10429592e-01 -8.10429592e-01
 -8.10429592e-01  2.24661984e+00  2.59268384e+00  2.59268384e+00
  2.59268384e+00  1.96703548e+01  1.96703548e+01  1.96703548e+01
  2.95455985e+01  1.73492496e+02  8.22340461e+02  4.61393280e+03]
E1 = -182.6555344552163  E_coul = 54.376428052528155
cycle= 2 E= -128.279106402688  delta_E= -0.0017  |g|= 0.0643  |ddm|= 0.0647
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.106036
diis-c [-2.21245730e-04  2.80672735e-01  7.19327265e-01]
  HOMO = -0.787093315791315  LUMO = 2.26423811875932
  mo_energy =
[-3.27553412e+01 -1.90141465e+00 -7.87093316e-01 -7.87093316e-01
 -7.87093316e-01  2.26423812e+00  2.61375508e+00  2.61375508e+00
  2.61375508e+00  1.97276703e+01  1.97276703e+01  1.97276703e+01
  2.96059358e+01  1.73571296e+02  8.22427040e+02  4.61402310e+03]
E1 = -182.519691164906  E_coul = 54.24026346815292
cycle= 3 E= -128.279427696753  delta_E= -0.000321  |g|= 0.000497  |ddm|= 0.0186
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000659018
diis-c [-3.69612613e-08 -4.59724362e-03 -5.90009048e-03  1.01049733e+00]
  HOMO = -0.787269289114224  LUMO = 2.2641085955233
  mo_energy =
[-3.27557790e+01 -1.90162041e+00 -7.87269289e-01 -7.87269289e-01
 -7.87269289e-01  2.26410860e+00  2.61363459e+00  2.61363459e+00
  2.61363459e+00  1.97273215e+01  1.97273215e+01  1.97273215e+01
  2.96055332e+01  1.73570953e+02  8.22426848e+02  4.61402301e+03]
E1 = -182.5205682578023  E_coul = 54.241140547092655
cycle= 4 E= -128.27942771071  delta_E= -1.4e-08  |g|= 2.42e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=4.02962e-05
diis-c [-1.64684624e-10  2.72896745e-04 -1.54800609e-04 -8.76344213e-02
  1.08751633e+00]
  HOMO = -0.787261593909277  LUMO = 2.26411028804498
  mo_energy =
[-3.27557597e+01 -1.90161738e+00 -7.87261594e-01 -7.87261594e-01
 -7.87261594e-01  2.26411029e+00  2.61364101e+00  2.61364101e+00
  2.61364101e+00  1.97273368e+01  1.97273368e+01  1.97273368e+01
  2.96055470e+01  1.73570976e+02  8.22426878e+02  4.61402304e+03]
E1 = -182.5205362718739  E_coul = 54.24110856110461
cycle= 5 E= -128.279427710769  delta_E= -5.97e-11  |g|= 1.93e-06  |ddm|= 9.97e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5205362718739  E_coul = 54.24110856110461
  HOMO = -0.787261165485515  LUMO = 2.26411023702673
  mo_energy =
[-3.27557587e+01 -1.90161742e+00 -7.87261165e-01 -7.87261165e-01
 -7.87261165e-01  2.26411024e+00  2.61364140e+00  2.61364140e+00
  2.61364140e+00  1.97273376e+01  1.97273376e+01  1.97273376e+01
  2.96055477e+01  1.73570977e+02  8.22426880e+02  4.61402305e+03]
E1 = -182.52053473018475  E_coul = 54.24110701941486
Extra cycle  E= -128.27942771077  delta_E= -5.68e-13  |g|= 4.37e-07  |ddm|= 1.09e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 76.4524399825268
E1 = -182.52053473018475  E_coul = 54.24110701941486
init E= -128.27942771077
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.787261248031575  LUMO = 2.26411010100401
  mo_energy =
[-3.27557590e+01 -1.90161760e+00 -7.87261248e-01 -7.87261248e-01
 -7.87261248e-01  2.26411010e+00  2.61364133e+00  2.61364133e+00
  2.61364133e+00  1.97273374e+01  1.97273374e+01  1.97273374e+01
  2.96055474e+01  1.73570976e+02  8.22426879e+02  4.61402305e+03]
E1 = -182.52053539675916  E_coul = 54.24110768598939
cycle= 1 E= -128.27942771077  delta_E= 1.14e-13  |g|= 1.08e-07  |ddm|= 2.6e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.52053539675916  E_coul = 54.24110768598939
  HOMO = -0.787261197989121  LUMO = 2.26411012504593
  mo_energy =
[-3.27557589e+01 -1.90161757e+00 -7.87261198e-01 -7.87261198e-01
 -7.87261198e-01  2.26411013e+00  2.61364137e+00  2.61364137e+00
  2.61364137e+00  1.97273375e+01  1.97273375e+01  1.97273375e+01
  2.96055475e+01  1.73570976e+02  8.22426880e+02  4.61402305e+03]
E1 = -182.52053514081715  E_coul = 54.24110743004745
Extra cycle  E= -128.27942771077  delta_E= 5.68e-14  |g|= 3.83e-08  |ddm|= 4.29e-08
    CPU time for scf_cycle      0.10 sec, wall time      0.10 sec
exp = [2.43632264e+03 1.08964223e+02 4.30918126e+02 5.15195034e-01
 3.25087846e+01 1.04990793e+01 1.74695245e+00 2.76916897e+00
 1.32711915e+01 5.99112510e-01]
grad_E = [-1.27178062e-05 -2.97338047e-05  7.90640812e-06 -9.97648142e-05
  1.46261891e-04  6.25052841e-04 -9.77103397e-04  7.32310341e-04
 -2.99766272e-04 -5.89531615e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:56 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2438.08909265        1
[INPUT] 0    0    [1    /1   ]  107.14704529         1
[INPUT] 0    0    [1    /1   ]  424.979558894        1
[INPUT] 0    0    [1    /1   ]  0.514972582572       1
[INPUT] 0    0    [1    /1   ]  32.0287739604        1
[INPUT] 0    0    [1    /1   ]  10.3983120298        1
[INPUT] 0    0    [1    /1   ]  1.74822908652        1
[INPUT] 1    0    [1    /1   ]  2.77250827033        1
[INPUT] 1    0    [1    /1   ]  13.3000373035        1
[INPUT] 1    0    [1    /1   ]  0.599620105575       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2438.0890926473962, 1.0]], [0, [107.14704529037509, 1.0]], [0, [424.97955889444313, 1.0]], [0, [0.5149725825718026, 1.0]], [0, [32.02877396043933, 1.0]], [0, [10.398312029776124, 1.0]], [0, [1.7482290865221495, 1.0]], [1, [2.772508270331506, 1.0]], [1, [13.30003730347192, 1.0]], [1, [0.5996201055753578, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2438.08909265]
bas 1, expnt(s) = [107.14704529]
bas 2, expnt(s) = [424.97955889]
bas 3, expnt(s) = [0.51497258]
bas 4, expnt(s) = [32.02877396]
bas 5, expnt(s) = [10.39831203]
bas 6, expnt(s) = [1.74822909]
bas 7, expnt(s) = [2.77250827]
bas 8, expnt(s) = [13.3000373]
bas 9, expnt(s) = [0.59962011]
CPU time:       218.19
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43808909e+03 8.76601487e+02 1.07147045e+02 8.41395478e+01
 4.24979559e+02 2.36478170e+02 5.14972583e-01 1.53586522e+00
 3.20287740e+01 3.40149831e+01 1.03983120e+01 1.46297585e+01
 1.74822909e+00 3.84117223e+00 2.77250827e+00 1.04369945e+01
 1.33000373e+01 7.40969730e+01 5.99620106e-01 1.53932253e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966971020700267
cond(S) = 77.2664223834074
E1 = -183.2288260529184  E_coul = 55.007963475314725
init E= -128.220862577604
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742996341983028  LUMO = 2.2900584486671
  mo_energy =
[-3.25525469e+01 -1.85686638e+00 -7.42996342e-01 -7.42996342e-01
 -7.42996342e-01  2.29005845e+00  2.65205107e+00  2.65205107e+00
  2.65205107e+00  1.99076559e+01  1.99076559e+01  1.99076559e+01
  2.93528939e+01  1.70777725e+02  8.09281944e+02  4.58970551e+03]
E1 = -182.18335346679294  E_coul = 53.90582697116175
cycle= 1 E= -128.277526495631  delta_E= -0.0567  |g|= 0.168  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.269174
diis-c [-0.07245456  1.        ]
  HOMO = -0.810232387339288  LUMO = 2.24575541525017
  mo_energy =
[-3.28312648e+01 -1.92529603e+00 -8.10232387e-01 -8.10232387e-01
 -8.10232387e-01  2.24575542e+00  2.59591265e+00  2.59591265e+00
  2.59591265e+00  1.97126727e+01  1.97126727e+01  1.97126727e+01
  2.91453228e+01  1.70487645e+02  8.08942310e+02  4.58932432e+03]
E1 = -182.6571523644093  E_coul = 54.377930756635976
cycle= 2 E= -128.279221607773  delta_E= -0.0017  |g|= 0.0641  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105795
diis-c [-2.22671941e-04  2.80424244e-01  7.19575756e-01]
  HOMO = -0.78695088520453  LUMO = 2.26330932718328
  mo_energy =
[-3.27550467e+01 -1.90121364e+00 -7.86950885e-01 -7.86950885e-01
 -7.86950885e-01  2.26330933e+00  2.61695569e+00  2.61695569e+00
  2.61695569e+00  1.97699124e+01  1.97699124e+01  1.97699124e+01
  2.92052524e+01  1.70566144e+02  8.09028677e+02  4.58941446e+03]
E1 = -182.5216667966767  E_coul = 54.242125585047376
cycle= 3 E= -128.279541211629  delta_E= -0.00032  |g|= 0.000507  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000679112
diis-c [-3.61138326e-08 -4.55312150e-03 -5.56294525e-03  1.01011607e+00]
  HOMO = -0.787132190500588  LUMO = 2.26317721386294
  mo_energy =
[-3.27554988e+01 -1.90142306e+00 -7.87132191e-01 -7.87132191e-01
 -7.87132191e-01  2.26317721e+00  2.61683020e+00  2.61683020e+00
  2.61683020e+00  1.97695522e+01  1.97695522e+01  1.97695522e+01
  2.92048393e+01  1.70565785e+02  8.09028466e+02  4.58941435e+03]
E1 = -182.5225687075353  E_coul = 54.243027481320496
cycle= 4 E= -128.279541226215  delta_E= -1.46e-08  |g|= 2.3e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85425e-05
diis-c [-1.48981483e-10  2.51083326e-04 -1.85165808e-04 -8.24633235e-02
  1.08239741e+00]
  HOMO = -0.787124815962629  LUMO = 2.26317896036185
  mo_energy =
[-3.27554801e+01 -1.90141998e+00 -7.87124816e-01 -7.87124816e-01
 -7.87124816e-01  2.26317896e+00  2.61683637e+00  2.61683637e+00
  2.61683637e+00  1.97695670e+01  1.97695670e+01  1.97695670e+01
  2.92048526e+01  1.70565807e+02  8.09028496e+02  4.58941438e+03]
E1 = -182.5225377810381  E_coul = 54.24299655477016
cycle= 5 E= -128.279541226268  delta_E= -5.31e-11  |g|= 1.86e-06  |ddm|= 9.18e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5225377810381  E_coul = 54.24299655477016
  HOMO = -0.787124391721221  LUMO = 2.26317891966415
  mo_energy =
[-3.27554791e+01 -1.90142002e+00 -7.87124392e-01 -7.87124392e-01
 -7.87124392e-01  2.26317892e+00  2.61683676e+00  2.61683676e+00
  2.61683676e+00  1.97695678e+01  1.97695678e+01  1.97695678e+01
  2.92048533e+01  1.70565808e+02  8.09028497e+02  4.58941439e+03]
E1 = -182.52253624311973  E_coul = 54.242995016851424
Extra cycle  E= -128.279541226268  delta_E= -3.41e-13  |g|= 4.25e-07  |ddm|= 1.05e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.43808909e+03 1.07147045e+02 4.24979559e+02 5.14972583e-01
 3.20287740e+01 1.03983120e+01 1.74822909e+00 2.77250827e+00
 1.33000373e+01 5.99620106e-01]
E = -128.2795412262683
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:38:57 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2438.08909265        1
[INPUT] 0    0    [1    /1   ]  107.14704529         1
[INPUT] 0    0    [1    /1   ]  424.979558894        1
[INPUT] 0    0    [1    /1   ]  0.514972582572       1
[INPUT] 0    0    [1    /1   ]  32.0287739604        1
[INPUT] 0    0    [1    /1   ]  10.3983120298        1
[INPUT] 0    0    [1    /1   ]  1.74822908652        1
[INPUT] 1    0    [1    /1   ]  2.77250827033        1
[INPUT] 1    0    [1    /1   ]  13.3000373035        1
[INPUT] 1    0    [1    /1   ]  0.599620105575       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2438.0890926473962, 1.0]], [0, [107.14704529037509, 1.0]], [0, [424.97955889444313, 1.0]], [0, [0.5149725825718026, 1.0]], [0, [32.02877396043933, 1.0]], [0, [10.398312029776124, 1.0]], [0, [1.7482290865221495, 1.0]], [1, [2.772508270331506, 1.0]], [1, [13.30003730347192, 1.0]], [1, [0.5996201055753578, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2438.08909265]
bas 1, expnt(s) = [107.14704529]
bas 2, expnt(s) = [424.97955889]
bas 3, expnt(s) = [0.51497258]
bas 4, expnt(s) = [32.02877396]
bas 5, expnt(s) = [10.39831203]
bas 6, expnt(s) = [1.74822909]
bas 7, expnt(s) = [2.77250827]
bas 8, expnt(s) = [13.3000373]
bas 9, expnt(s) = [0.59962011]
CPU time:       219.14
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43808909e+03 8.76601487e+02 1.07147045e+02 8.41395478e+01
 4.24979559e+02 2.36478170e+02 5.14972583e-01 1.53586522e+00
 3.20287740e+01 3.40149831e+01 1.03983120e+01 1.46297585e+01
 1.74822909e+00 3.84117223e+00 2.77250827e+00 1.04369945e+01
 1.33000373e+01 7.40969730e+01 5.99620106e-01 1.53932253e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966971020700267
cond(S) = 77.2664223834074
E1 = -183.2288260529184  E_coul = 55.007963475314725
init E= -128.220862577604
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.742996341983028  LUMO = 2.2900584486671
  mo_energy =
[-3.25525469e+01 -1.85686638e+00 -7.42996342e-01 -7.42996342e-01
 -7.42996342e-01  2.29005845e+00  2.65205107e+00  2.65205107e+00
  2.65205107e+00  1.99076559e+01  1.99076559e+01  1.99076559e+01
  2.93528939e+01  1.70777725e+02  8.09281944e+02  4.58970551e+03]
E1 = -182.18335346679294  E_coul = 53.90582697116175
cycle= 1 E= -128.277526495631  delta_E= -0.0567  |g|= 0.168  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.269174
diis-c [-0.07245456  1.        ]
  HOMO = -0.810232387339288  LUMO = 2.24575541525017
  mo_energy =
[-3.28312648e+01 -1.92529603e+00 -8.10232387e-01 -8.10232387e-01
 -8.10232387e-01  2.24575542e+00  2.59591265e+00  2.59591265e+00
  2.59591265e+00  1.97126727e+01  1.97126727e+01  1.97126727e+01
  2.91453228e+01  1.70487645e+02  8.08942310e+02  4.58932432e+03]
E1 = -182.6571523644093  E_coul = 54.377930756635976
cycle= 2 E= -128.279221607773  delta_E= -0.0017  |g|= 0.0641  |ddm|= 0.0645
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105795
diis-c [-2.22671941e-04  2.80424244e-01  7.19575756e-01]
  HOMO = -0.78695088520453  LUMO = 2.26330932718328
  mo_energy =
[-3.27550467e+01 -1.90121364e+00 -7.86950885e-01 -7.86950885e-01
 -7.86950885e-01  2.26330933e+00  2.61695569e+00  2.61695569e+00
  2.61695569e+00  1.97699124e+01  1.97699124e+01  1.97699124e+01
  2.92052524e+01  1.70566144e+02  8.09028677e+02  4.58941446e+03]
E1 = -182.5216667966767  E_coul = 54.242125585047376
cycle= 3 E= -128.279541211629  delta_E= -0.00032  |g|= 0.000507  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000679112
diis-c [-3.61138326e-08 -4.55312150e-03 -5.56294525e-03  1.01011607e+00]
  HOMO = -0.787132190500588  LUMO = 2.26317721386294
  mo_energy =
[-3.27554988e+01 -1.90142306e+00 -7.87132191e-01 -7.87132191e-01
 -7.87132191e-01  2.26317721e+00  2.61683020e+00  2.61683020e+00
  2.61683020e+00  1.97695522e+01  1.97695522e+01  1.97695522e+01
  2.92048393e+01  1.70565785e+02  8.09028466e+02  4.58941435e+03]
E1 = -182.5225687075353  E_coul = 54.243027481320496
cycle= 4 E= -128.279541226215  delta_E= -1.46e-08  |g|= 2.3e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.85425e-05
diis-c [-1.48981483e-10  2.51083326e-04 -1.85165808e-04 -8.24633235e-02
  1.08239741e+00]
  HOMO = -0.787124815962629  LUMO = 2.26317896036185
  mo_energy =
[-3.27554801e+01 -1.90141998e+00 -7.87124816e-01 -7.87124816e-01
 -7.87124816e-01  2.26317896e+00  2.61683637e+00  2.61683637e+00
  2.61683637e+00  1.97695670e+01  1.97695670e+01  1.97695670e+01
  2.92048526e+01  1.70565807e+02  8.09028496e+02  4.58941438e+03]
E1 = -182.5225377810381  E_coul = 54.24299655477016
cycle= 5 E= -128.279541226268  delta_E= -5.31e-11  |g|= 1.86e-06  |ddm|= 9.18e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5225377810381  E_coul = 54.24299655477016
  HOMO = -0.787124391721221  LUMO = 2.26317891966415
  mo_energy =
[-3.27554791e+01 -1.90142002e+00 -7.87124392e-01 -7.87124392e-01
 -7.87124392e-01  2.26317892e+00  2.61683676e+00  2.61683676e+00
  2.61683676e+00  1.97695678e+01  1.97695678e+01  1.97695678e+01
  2.92048533e+01  1.70565808e+02  8.09028497e+02  4.58941439e+03]
E1 = -182.52253624311973  E_coul = 54.242995016851424
Extra cycle  E= -128.279541226268  delta_E= -3.41e-13  |g|= 4.25e-07  |ddm|= 1.05e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 77.2664223834074
E1 = -182.52253624311973  E_coul = 54.242995016851424
init E= -128.279541226268
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.787124474838883  LUMO = 2.26317878624309
  mo_energy =
[-3.27554795e+01 -1.90142019e+00 -7.87124475e-01 -7.87124475e-01
 -7.87124475e-01  2.26317879e+00  2.61683668e+00  2.61683668e+00
  2.61683668e+00  1.97695675e+01  1.97695675e+01  1.97695675e+01
  2.92048530e+01  1.70565807e+02  8.09028497e+02  4.58941439e+03]
E1 = -182.5225369064038  E_coul = 54.242995680135444
cycle= 1 E= -128.279541226268  delta_E= -5.68e-14  |g|= 1.06e-07  |ddm|= 2.52e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.5225369064038  E_coul = 54.242995680135444
  HOMO = -0.787124425190641  LUMO = 2.26317881048501
  mo_energy =
[-3.27554793e+01 -1.90142016e+00 -7.87124425e-01 -7.87124425e-01
 -7.87124425e-01  2.26317881e+00  2.61683672e+00  2.61683672e+00
  2.61683672e+00  1.97695676e+01  1.97695676e+01  1.97695676e+01
  2.92048531e+01  1.70565808e+02  8.09028497e+02  4.58941439e+03]
E1 = -182.52253665157914  E_coul = 54.24299542531064
Extra cycle  E= -128.279541226269  delta_E= -1.71e-13  |g|= 3.79e-08  |ddm|= 4.18e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43808909e+03 1.07147045e+02 4.24979559e+02 5.14972583e-01
 3.20287740e+01 1.03983120e+01 1.74822909e+00 2.77250827e+00
 1.33000373e+01 5.99620106e-01]
grad_E = [-1.14802136e-05 -1.52801420e-05 -8.25119806e-07 -3.77786458e-04
  2.57591415e-05  6.60212042e-04 -6.44432682e-04  2.47839653e-04
 -1.29984907e-04  1.98345806e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:00 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.23815028        1
[INPUT] 0    0    [1    /1   ]  105.834135894        1
[INPUT] 0    0    [1    /1   ]  421.128564397        1
[INPUT] 0    0    [1    /1   ]  0.515560025893       1
[INPUT] 0    0    [1    /1   ]  31.6001849137        1
[INPUT] 0    0    [1    /1   ]  10.2919959674        1
[INPUT] 0    0    [1    /1   ]  1.75335150287        1
[INPUT] 1    0    [1    /1   ]  2.7765274886         1
[INPUT] 1    0    [1    /1   ]  13.3355009323        1
[INPUT] 1    0    [1    /1   ]  0.60021825035        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.2381502833764, 1.0]], [0, [105.83413589376293, 1.0]], [0, [421.12856439741165, 1.0]], [0, [0.5155600258931844, 1.0]], [0, [31.600184913742904, 1.0]], [0, [10.291995967401322, 1.0]], [0, [1.7533515028662647, 1.0]], [1, [2.776527488599517, 1.0]], [1, [13.33550093228456, 1.0]], [1, [0.6002182503496712, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.23815028]
bas 1, expnt(s) = [105.83413589]
bas 2, expnt(s) = [421.1285644]
bas 3, expnt(s) = [0.51556003]
bas 4, expnt(s) = [31.60018491]
bas 5, expnt(s) = [10.29199597]
bas 6, expnt(s) = [1.7533515]
bas 7, expnt(s) = [2.77652749]
bas 8, expnt(s) = [13.33550093]
bas 9, expnt(s) = [0.60021825]
CPU time:       221.81
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43923815e+03 8.76911322e+02 1.05834136e+02 8.33651144e+01
 4.21128564e+02 2.34869190e+02 5.15560026e-01 1.53717903e+00
 3.16001849e+01 3.36730335e+01 1.02919960e+01 1.45174296e+01
 1.75335150e+00 3.84961029e+00 2.77652749e+00 1.04559107e+01
 1.33355009e+01 7.43440233e+01 6.00218250e-01 1.54124219e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966845703445788
cond(S) = 77.66384532196402
E1 = -183.2289461121645  E_coul = 55.00806897512557
init E= -128.220877137039
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743009495243597  LUMO = 2.29560168514835
  mo_energy =
[-3.25524857e+01 -1.85684700e+00 -7.43009495e-01 -7.43009495e-01
 -7.43009495e-01  2.29560169e+00  2.65573349e+00  2.65573349e+00
  2.65573349e+00  1.99591276e+01  1.99591276e+01  1.99591276e+01
  2.89868486e+01  1.68300938e+02  7.99646638e+02  4.57277376e+03]
E1 = -182.18673605409103  E_coul = 53.90915492141547
cycle= 1 E= -128.277581132676  delta_E= -0.0567  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.268745
diis-c [-0.07222409  1.        ]
  HOMO = -0.809987338385435  LUMO = 2.25148941157063
  mo_energy =
[-3.28306772e+01 -1.92497464e+00 -8.09987338e-01 -8.09987338e-01
 -8.09987338e-01  2.25148941e+00  2.59975526e+00  2.59975526e+00
  2.59975526e+00  1.97643977e+01  1.97643977e+01  1.97643977e+01
  2.87808855e+01  1.68011876e+02  7.99307536e+02  4.57239270e+03]
E1 = -182.65906422088057  E_coul = 54.379796296220185
cycle= 2 E= -128.27926792466  delta_E= -0.00169  |g|= 0.064  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105497
diis-c [-2.22910884e-04  2.80162384e-01  7.19837616e-01]
  HOMO = -0.786774394539579  LUMO = 2.2690082356233
  mo_energy =
[-3.27546489e+01 -1.90096296e+00 -7.86774395e-01 -7.86774395e-01
 -7.86774395e-01  2.26900824e+00  2.62076168e+00  2.62076168e+00
  2.62076168e+00  1.98215427e+01  1.98215427e+01  1.98215427e+01
  2.88403889e+01  1.68090065e+02  7.99393670e+02  4.57248264e+03]
E1 = -182.52402179134015  E_coul = 54.2444362855415
cycle= 3 E= -128.279585505799  delta_E= -0.000318  |g|= 0.000516  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000697784
diis-c [-3.50995527e-08 -4.51689238e-03 -5.25840830e-03  1.00977530e+00]
  HOMO = -0.78696074157818  LUMO = 2.26887338982095
  mo_energy =
[-3.27551138e+01 -1.90117573e+00 -7.86960742e-01 -7.86960742e-01
 -7.86960742e-01  2.26887339e+00  2.62063139e+00  2.62063139e+00
  2.62063139e+00  1.98211720e+01  1.98211720e+01  1.98211720e+01
  2.88399663e+01  1.68089692e+02  7.99393443e+02  4.57248251e+03]
E1 = -182.52494616499172  E_coul = 54.2453606440099
cycle= 4 E= -128.279585520982  delta_E= -1.52e-08  |g|= 2.18e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.67754e-05
diis-c [-1.32392959e-10  2.31905004e-04 -2.08592530e-04 -7.77492105e-02
  1.07772590e+00]
  HOMO = -0.786953690107262  LUMO = 2.26887519040673
  mo_energy =
[-3.27550959e+01 -1.90117261e+00 -7.86953690e-01 -7.86953690e-01
 -7.86953690e-01  2.26887519e+00  2.62063729e+00  2.62063729e+00
  2.62063729e+00  1.98211862e+01  1.98211862e+01  1.98211862e+01
  2.88399790e+01  1.68089712e+02  7.99393472e+02  4.57248255e+03]
E1 = -182.5249162804992  E_coul = 54.24533075947097
cycle= 5 E= -128.279585521028  delta_E= -4.64e-11  |g|= 1.77e-06  |ddm|= 8.4e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5249162804992  E_coul = 54.24533075947097
  HOMO = -0.786953277854265  LUMO = 2.26887515819129
  mo_energy =
[-3.27550949e+01 -1.90117264e+00 -7.86953278e-01 -7.86953278e-01
 -7.86953278e-01  2.26887516e+00  2.62063767e+00  2.62063767e+00
  2.62063767e+00  1.98211870e+01  1.98211870e+01  1.98211870e+01
  2.88399796e+01  1.68089714e+02  7.99393473e+02  4.57248255e+03]
E1 = -182.5249147767217  E_coul = 54.24532925569303
Extra cycle  E= -128.279585521029  delta_E= -3.98e-13  |g|= 4.07e-07  |ddm|= 9.9e-07
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43923815e+03 1.05834136e+02 4.21128564e+02 5.15560026e-01
 3.16001849e+01 1.02919960e+01 1.75335150e+00 2.77652749e+00
 1.33355009e+01 6.00218250e-01]
E = -128.27958552102865
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:01 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.23815028        1
[INPUT] 0    0    [1    /1   ]  105.834135894        1
[INPUT] 0    0    [1    /1   ]  421.128564397        1
[INPUT] 0    0    [1    /1   ]  0.515560025893       1
[INPUT] 0    0    [1    /1   ]  31.6001849137        1
[INPUT] 0    0    [1    /1   ]  10.2919959674        1
[INPUT] 0    0    [1    /1   ]  1.75335150287        1
[INPUT] 1    0    [1    /1   ]  2.7765274886         1
[INPUT] 1    0    [1    /1   ]  13.3355009323        1
[INPUT] 1    0    [1    /1   ]  0.60021825035        1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.2381502833764, 1.0]], [0, [105.83413589376293, 1.0]], [0, [421.12856439741165, 1.0]], [0, [0.5155600258931844, 1.0]], [0, [31.600184913742904, 1.0]], [0, [10.291995967401322, 1.0]], [0, [1.7533515028662647, 1.0]], [1, [2.776527488599517, 1.0]], [1, [13.33550093228456, 1.0]], [1, [0.6002182503496712, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.23815028]
bas 1, expnt(s) = [105.83413589]
bas 2, expnt(s) = [421.1285644]
bas 3, expnt(s) = [0.51556003]
bas 4, expnt(s) = [31.60018491]
bas 5, expnt(s) = [10.29199597]
bas 6, expnt(s) = [1.7533515]
bas 7, expnt(s) = [2.77652749]
bas 8, expnt(s) = [13.33550093]
bas 9, expnt(s) = [0.60021825]
CPU time:       222.79
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43923815e+03 8.76911322e+02 1.05834136e+02 8.33651144e+01
 4.21128564e+02 2.34869190e+02 5.15560026e-01 1.53717903e+00
 3.16001849e+01 3.36730335e+01 1.02919960e+01 1.45174296e+01
 1.75335150e+00 3.84961029e+00 2.77652749e+00 1.04559107e+01
 1.33355009e+01 7.43440233e+01 6.00218250e-01 1.54124219e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966845703445788
cond(S) = 77.66384532196402
E1 = -183.2289461121645  E_coul = 55.00806897512557
init E= -128.220877137039
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743009495243597  LUMO = 2.29560168514835
  mo_energy =
[-3.25524857e+01 -1.85684700e+00 -7.43009495e-01 -7.43009495e-01
 -7.43009495e-01  2.29560169e+00  2.65573349e+00  2.65573349e+00
  2.65573349e+00  1.99591276e+01  1.99591276e+01  1.99591276e+01
  2.89868486e+01  1.68300938e+02  7.99646638e+02  4.57277376e+03]
E1 = -182.18673605409103  E_coul = 53.90915492141547
cycle= 1 E= -128.277581132676  delta_E= -0.0567  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.268745
diis-c [-0.07222409  1.        ]
  HOMO = -0.809987338385435  LUMO = 2.25148941157063
  mo_energy =
[-3.28306772e+01 -1.92497464e+00 -8.09987338e-01 -8.09987338e-01
 -8.09987338e-01  2.25148941e+00  2.59975526e+00  2.59975526e+00
  2.59975526e+00  1.97643977e+01  1.97643977e+01  1.97643977e+01
  2.87808855e+01  1.68011876e+02  7.99307536e+02  4.57239270e+03]
E1 = -182.65906422088057  E_coul = 54.379796296220185
cycle= 2 E= -128.27926792466  delta_E= -0.00169  |g|= 0.064  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105497
diis-c [-2.22910884e-04  2.80162384e-01  7.19837616e-01]
  HOMO = -0.786774394539579  LUMO = 2.2690082356233
  mo_energy =
[-3.27546489e+01 -1.90096296e+00 -7.86774395e-01 -7.86774395e-01
 -7.86774395e-01  2.26900824e+00  2.62076168e+00  2.62076168e+00
  2.62076168e+00  1.98215427e+01  1.98215427e+01  1.98215427e+01
  2.88403889e+01  1.68090065e+02  7.99393670e+02  4.57248264e+03]
E1 = -182.52402179134015  E_coul = 54.2444362855415
cycle= 3 E= -128.279585505799  delta_E= -0.000318  |g|= 0.000516  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000697784
diis-c [-3.50995527e-08 -4.51689238e-03 -5.25840830e-03  1.00977530e+00]
  HOMO = -0.78696074157818  LUMO = 2.26887338982095
  mo_energy =
[-3.27551138e+01 -1.90117573e+00 -7.86960742e-01 -7.86960742e-01
 -7.86960742e-01  2.26887339e+00  2.62063139e+00  2.62063139e+00
  2.62063139e+00  1.98211720e+01  1.98211720e+01  1.98211720e+01
  2.88399663e+01  1.68089692e+02  7.99393443e+02  4.57248251e+03]
E1 = -182.52494616499172  E_coul = 54.2453606440099
cycle= 4 E= -128.279585520982  delta_E= -1.52e-08  |g|= 2.18e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.67754e-05
diis-c [-1.32392959e-10  2.31905004e-04 -2.08592530e-04 -7.77492105e-02
  1.07772590e+00]
  HOMO = -0.786953690107262  LUMO = 2.26887519040673
  mo_energy =
[-3.27550959e+01 -1.90117261e+00 -7.86953690e-01 -7.86953690e-01
 -7.86953690e-01  2.26887519e+00  2.62063729e+00  2.62063729e+00
  2.62063729e+00  1.98211862e+01  1.98211862e+01  1.98211862e+01
  2.88399790e+01  1.68089712e+02  7.99393472e+02  4.57248255e+03]
E1 = -182.5249162804992  E_coul = 54.24533075947097
cycle= 5 E= -128.279585521028  delta_E= -4.64e-11  |g|= 1.77e-06  |ddm|= 8.4e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5249162804992  E_coul = 54.24533075947097
  HOMO = -0.786953277854265  LUMO = 2.26887515819129
  mo_energy =
[-3.27550949e+01 -1.90117264e+00 -7.86953278e-01 -7.86953278e-01
 -7.86953278e-01  2.26887516e+00  2.62063767e+00  2.62063767e+00
  2.62063767e+00  1.98211870e+01  1.98211870e+01  1.98211870e+01
  2.88399796e+01  1.68089714e+02  7.99393473e+02  4.57248255e+03]
E1 = -182.5249147767217  E_coul = 54.24532925569303
Extra cycle  E= -128.279585521029  delta_E= -3.98e-13  |g|= 4.07e-07  |ddm|= 9.9e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 77.66384532196402
E1 = -182.5249147767217  E_coul = 54.24532925569303
init E= -128.279585521029
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786953359728666  LUMO = 2.26887502921603
  mo_energy =
[-3.27550952e+01 -1.90117281e+00 -7.86953360e-01 -7.86953360e-01
 -7.86953360e-01  2.26887503e+00  2.62063759e+00  2.62063759e+00
  2.62063759e+00  1.98211867e+01  1.98211867e+01  1.98211867e+01
  2.88399793e+01  1.68089713e+02  7.99393473e+02  4.57248255e+03]
E1 = -182.52491542348415  E_coul = 54.245329902455474
cycle= 1 E= -128.279585521029  delta_E= -2.84e-14  |g|= 1.02e-07  |ddm|= 2.4e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.52491542348415  E_coul = 54.245329902455474
  HOMO = -0.786953311435753  LUMO = 2.26887505313866
  mo_energy =
[-3.27550951e+01 -1.90117277e+00 -7.86953311e-01 -7.86953311e-01
 -7.86953311e-01  2.26887505e+00  2.62063764e+00  2.62063764e+00
  2.62063764e+00  1.98211868e+01  1.98211868e+01  1.98211868e+01
  2.88399795e+01  1.68089713e+02  7.99393473e+02  4.57248255e+03]
E1 = -182.52491517487306  E_coul = 54.24532965384442
Extra cycle  E= -128.279585521029  delta_E= 2.84e-14  |g|= 3.69e-08  |ddm|= 4.02e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43923815e+03 1.05834136e+02 4.21128564e+02 5.15560026e-01
 3.16001849e+01 1.02919960e+01 1.75335150e+00 2.77652749e+00
 1.33355009e+01 6.00218250e-01]
grad_E = [-1.06401313e-05  1.17149562e-05 -7.42279993e-06 -7.91832653e-04
 -1.05840426e-04  5.47411188e-04 -1.88063138e-05 -3.70805529e-04
  8.14514944e-05  1.06314392e-03]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:04 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.21431446        1
[INPUT] 0    0    [1    /1   ]  105.721146531        1
[INPUT] 0    0    [1    /1   ]  421.220820169        1
[INPUT] 0    0    [1    /1   ]  0.515679085654       1
[INPUT] 0    0    [1    /1   ]  31.5259631733        1
[INPUT] 0    0    [1    /1   ]  10.2619879559        1
[INPUT] 0    0    [1    /1   ]  1.75391510018        1
[INPUT] 1    0    [1    /1   ]  2.77702124008        1
[INPUT] 1    0    [1    /1   ]  13.3396369821        1
[INPUT] 1    0    [1    /1   ]  0.600264008649       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.2143144606357, 1.0]], [0, [105.72114653147187, 1.0]], [0, [421.22082016917346, 1.0]], [0, [0.5156790856538203, 1.0]], [0, [31.525963173313805, 1.0]], [0, [10.261987955947323, 1.0]], [0, [1.7539151001783928, 1.0]], [1, [2.777021240080127, 1.0]], [1, [13.339636982144677, 1.0]], [1, [0.6002640086493353, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.21431446]
bas 1, expnt(s) = [105.72114653]
bas 2, expnt(s) = [421.22082017]
bas 3, expnt(s) = [0.51567909]
bas 4, expnt(s) = [31.52596317]
bas 5, expnt(s) = [10.26198796]
bas 6, expnt(s) = [1.7539151]
bas 7, expnt(s) = [2.77702124]
bas 8, expnt(s) = [13.33963698]
bas 9, expnt(s) = [0.60026401]
CPU time:       225.53
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43921431e+03 8.76904895e+02 1.05721147e+02 8.32983545e+01
 4.21220820e+02 2.34907778e+02 5.15679086e-01 1.53744526e+00
 3.15259632e+01 3.36136983e+01 1.02619880e+01 1.44856721e+01
 1.75391510e+00 3.85053832e+00 2.77702124e+00 1.04582350e+01
 1.33396370e+01 7.43728470e+01 6.00264009e-01 1.54138906e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966836250036181
cond(S) = 77.50637471687853
E1 = -183.22900906882117  E_coul = 55.007993861277455
init E= -128.221015207544
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743017847920284  LUMO = 2.29604869428193
  mo_energy =
[-3.25525089e+01 -1.85684052e+00 -7.43017848e-01 -7.43017848e-01
 -7.43017848e-01  2.29604869e+00  2.65608697e+00  2.65608697e+00
  2.65608697e+00  1.99651338e+01  1.99651338e+01  1.99651338e+01
  2.89007916e+01  1.67919557e+02  7.99041013e+02  4.57230718e+03]
E1 = -182.186878741507  E_coul = 53.90928956048028
cycle= 1 E= -128.277589181027  delta_E= -0.0566  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.268759
diis-c [-0.07223166  1.        ]
  HOMO = -0.809969857325974  LUMO = 2.25197016372431
  mo_energy =
[-3.28307000e+01 -1.92494067e+00 -8.09969857e-01 -8.09969857e-01
 -8.09969857e-01  2.25197016e+00  2.60011990e+00  2.60011990e+00
  2.60011990e+00  1.97703834e+01  1.97703834e+01  1.97703834e+01
  2.86950999e+01  1.67630517e+02  7.98701802e+02  4.57192596e+03]
E1 = -182.65912935796933  E_coul = 54.37985373031387
cycle= 2 E= -128.279275627655  delta_E= -0.00169  |g|= 0.064  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105487
diis-c [-2.22146300e-04  2.80138131e-01  7.19861869e-01]
  HOMO = -0.786760469595704  LUMO = 2.26948334657974
  mo_energy =
[-3.27546794e+01 -1.90093278e+00 -7.86760470e-01 -7.86760470e-01
 -7.86760470e-01  2.26948335e+00  2.62112595e+00  2.62112595e+00
  2.62112595e+00  1.98275281e+01  1.98275281e+01  1.98275281e+01
  2.87545372e+01  1.67708684e+02  7.98787928e+02  4.57201589e+03]
E1 = -182.5241124683221  E_coul = 54.244519366923484
cycle= 3 E= -128.279593101399  delta_E= -0.000317  |g|= 0.000516  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000699057
diis-c [-3.48804838e-08 -4.50835301e-03 -5.22112010e-03  1.00972947e+00]
  HOMO = -0.786947186979245  LUMO = 2.26934813293126
  mo_energy =
[-3.27551454e+01 -1.90114604e+00 -7.86947187e-01 -7.86947187e-01
 -7.86947187e-01  2.26934813e+00  2.62099528e+00  2.62099528e+00
  2.62099528e+00  1.98271564e+01  1.98271564e+01  1.98271564e+01
  2.87541139e+01  1.67708308e+02  7.98787699e+02  4.57201576e+03]
E1 = -182.525038722314  E_coul = 54.24544560566555
cycle= 4 E= -128.279593116648  delta_E= -1.52e-08  |g|= 2.19e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.67992e-05
diis-c [-1.33152998e-10  2.34601336e-04 -2.08085668e-04 -7.85627362e-02
  1.07853622e+00]
  HOMO = -0.786940139386743  LUMO = 2.26934990898388
  mo_energy =
[-3.27551275e+01 -1.90114296e+00 -7.86940139e-01 -7.86940139e-01
 -7.86940139e-01  2.26934991e+00  2.62100119e+00  2.62100119e+00
  2.62100119e+00  1.98271706e+01  1.98271706e+01  1.98271706e+01
  2.87541266e+01  1.67708329e+02  7.98787727e+02  4.57201579e+03]
E1 = -182.52500888540288  E_coul = 54.2454157687074
cycle= 5 E= -128.279593116695  delta_E= -4.7e-11  |g|= 1.77e-06  |ddm|= 8.46e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52500888540288  E_coul = 54.2454157687074
  HOMO = -0.786939729188904  LUMO = 2.26934987522134
  mo_energy =
[-3.27551265e+01 -1.90114299e+00 -7.86939729e-01 -7.86939729e-01
 -7.86939729e-01  2.26934988e+00  2.62100156e+00  2.62100156e+00
  2.62100156e+00  1.98271714e+01  1.98271714e+01  1.98271714e+01
  2.87541272e+01  1.67708330e+02  7.98787729e+02  4.57201579e+03]
E1 = -182.52500739336875  E_coul = 54.24541427667288
Extra cycle  E= -128.279593116696  delta_E= -3.98e-13  |g|= 4.06e-07  |ddm|= 9.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.43921431e+03 1.05721147e+02 4.21220820e+02 5.15679086e-01
 3.15259632e+01 1.02619880e+01 1.75391510e+00 2.77702124e+00
 1.33396370e+01 6.00264009e-01]
E = -128.27959311669588
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:05 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.21431446        1
[INPUT] 0    0    [1    /1   ]  105.721146531        1
[INPUT] 0    0    [1    /1   ]  421.220820169        1
[INPUT] 0    0    [1    /1   ]  0.515679085654       1
[INPUT] 0    0    [1    /1   ]  31.5259631733        1
[INPUT] 0    0    [1    /1   ]  10.2619879559        1
[INPUT] 0    0    [1    /1   ]  1.75391510018        1
[INPUT] 1    0    [1    /1   ]  2.77702124008        1
[INPUT] 1    0    [1    /1   ]  13.3396369821        1
[INPUT] 1    0    [1    /1   ]  0.600264008649       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.2143144606357, 1.0]], [0, [105.72114653147187, 1.0]], [0, [421.22082016917346, 1.0]], [0, [0.5156790856538203, 1.0]], [0, [31.525963173313805, 1.0]], [0, [10.261987955947323, 1.0]], [0, [1.7539151001783928, 1.0]], [1, [2.777021240080127, 1.0]], [1, [13.339636982144677, 1.0]], [1, [0.6002640086493353, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.21431446]
bas 1, expnt(s) = [105.72114653]
bas 2, expnt(s) = [421.22082017]
bas 3, expnt(s) = [0.51567909]
bas 4, expnt(s) = [31.52596317]
bas 5, expnt(s) = [10.26198796]
bas 6, expnt(s) = [1.7539151]
bas 7, expnt(s) = [2.77702124]
bas 8, expnt(s) = [13.33963698]
bas 9, expnt(s) = [0.60026401]
CPU time:       226.52
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43921431e+03 8.76904895e+02 1.05721147e+02 8.32983545e+01
 4.21220820e+02 2.34907778e+02 5.15679086e-01 1.53744526e+00
 3.15259632e+01 3.36136983e+01 1.02619880e+01 1.44856721e+01
 1.75391510e+00 3.85053832e+00 2.77702124e+00 1.04582350e+01
 1.33396370e+01 7.43728470e+01 6.00264009e-01 1.54138906e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966836250036181
cond(S) = 77.50637471687853
E1 = -183.22900906882117  E_coul = 55.007993861277455
init E= -128.221015207544
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743017847920284  LUMO = 2.29604869428193
  mo_energy =
[-3.25525089e+01 -1.85684052e+00 -7.43017848e-01 -7.43017848e-01
 -7.43017848e-01  2.29604869e+00  2.65608697e+00  2.65608697e+00
  2.65608697e+00  1.99651338e+01  1.99651338e+01  1.99651338e+01
  2.89007916e+01  1.67919557e+02  7.99041013e+02  4.57230718e+03]
E1 = -182.186878741507  E_coul = 53.90928956048028
cycle= 1 E= -128.277589181027  delta_E= -0.0566  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.268759
diis-c [-0.07223166  1.        ]
  HOMO = -0.809969857325974  LUMO = 2.25197016372431
  mo_energy =
[-3.28307000e+01 -1.92494067e+00 -8.09969857e-01 -8.09969857e-01
 -8.09969857e-01  2.25197016e+00  2.60011990e+00  2.60011990e+00
  2.60011990e+00  1.97703834e+01  1.97703834e+01  1.97703834e+01
  2.86950999e+01  1.67630517e+02  7.98701802e+02  4.57192596e+03]
E1 = -182.65912935796933  E_coul = 54.37985373031387
cycle= 2 E= -128.279275627655  delta_E= -0.00169  |g|= 0.064  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105487
diis-c [-2.22146300e-04  2.80138131e-01  7.19861869e-01]
  HOMO = -0.786760469595704  LUMO = 2.26948334657974
  mo_energy =
[-3.27546794e+01 -1.90093278e+00 -7.86760470e-01 -7.86760470e-01
 -7.86760470e-01  2.26948335e+00  2.62112595e+00  2.62112595e+00
  2.62112595e+00  1.98275281e+01  1.98275281e+01  1.98275281e+01
  2.87545372e+01  1.67708684e+02  7.98787928e+02  4.57201589e+03]
E1 = -182.5241124683221  E_coul = 54.244519366923484
cycle= 3 E= -128.279593101399  delta_E= -0.000317  |g|= 0.000516  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000699057
diis-c [-3.48804838e-08 -4.50835301e-03 -5.22112010e-03  1.00972947e+00]
  HOMO = -0.786947186979245  LUMO = 2.26934813293126
  mo_energy =
[-3.27551454e+01 -1.90114604e+00 -7.86947187e-01 -7.86947187e-01
 -7.86947187e-01  2.26934813e+00  2.62099528e+00  2.62099528e+00
  2.62099528e+00  1.98271564e+01  1.98271564e+01  1.98271564e+01
  2.87541139e+01  1.67708308e+02  7.98787699e+02  4.57201576e+03]
E1 = -182.525038722314  E_coul = 54.24544560566555
cycle= 4 E= -128.279593116648  delta_E= -1.52e-08  |g|= 2.19e-05  |ddm|= 0.000148
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.67992e-05
diis-c [-1.33152998e-10  2.34601336e-04 -2.08085668e-04 -7.85627362e-02
  1.07853622e+00]
  HOMO = -0.786940139386743  LUMO = 2.26934990898388
  mo_energy =
[-3.27551275e+01 -1.90114296e+00 -7.86940139e-01 -7.86940139e-01
 -7.86940139e-01  2.26934991e+00  2.62100119e+00  2.62100119e+00
  2.62100119e+00  1.98271706e+01  1.98271706e+01  1.98271706e+01
  2.87541266e+01  1.67708329e+02  7.98787727e+02  4.57201579e+03]
E1 = -182.52500888540288  E_coul = 54.2454157687074
cycle= 5 E= -128.279593116695  delta_E= -4.7e-11  |g|= 1.77e-06  |ddm|= 8.46e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52500888540288  E_coul = 54.2454157687074
  HOMO = -0.786939729188904  LUMO = 2.26934987522134
  mo_energy =
[-3.27551265e+01 -1.90114299e+00 -7.86939729e-01 -7.86939729e-01
 -7.86939729e-01  2.26934988e+00  2.62100156e+00  2.62100156e+00
  2.62100156e+00  1.98271714e+01  1.98271714e+01  1.98271714e+01
  2.87541272e+01  1.67708330e+02  7.98787729e+02  4.57201579e+03]
E1 = -182.52500739336875  E_coul = 54.24541427667288
Extra cycle  E= -128.279593116696  delta_E= -3.98e-13  |g|= 4.06e-07  |ddm|= 9.92e-07
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 77.50637471687853
E1 = -182.52500739336875  E_coul = 54.24541427667288
init E= -128.279593116696
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.786939810251791  LUMO = 2.26934974685126
  mo_energy =
[-3.27551268e+01 -1.90114316e+00 -7.86939810e-01 -7.86939810e-01
 -7.86939810e-01  2.26934975e+00  2.62100148e+00  2.62100148e+00
  2.62100148e+00  1.98271711e+01  1.98271711e+01  1.98271711e+01
  2.87541270e+01  1.67708330e+02  7.98787729e+02  4.57201579e+03]
E1 = -182.5250080354122  E_coul = 54.245414918716435
cycle= 1 E= -128.279593116696  delta_E= 1.14e-13  |g|= 1.02e-07  |ddm|= 2.4e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.5250080354122  E_coul = 54.245414918716435
  HOMO = -0.78693976228211  LUMO = 2.26934977052135
  mo_energy =
[-3.27551267e+01 -1.90114312e+00 -7.86939762e-01 -7.86939762e-01
 -7.86939762e-01  2.26934977e+00  2.62100153e+00  2.62100153e+00
  2.62100153e+00  1.98271712e+01  1.98271712e+01  1.98271712e+01
  2.87541271e+01  1.67708330e+02  7.98787729e+02  4.57201579e+03]
E1 = -182.52500778869725  E_coul = 54.245414672001466
Extra cycle  E= -128.279593116696  delta_E= -2.84e-14  |g|= 3.66e-08  |ddm|= 4e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43921431e+03 1.05721147e+02 4.21220820e+02 5.15679086e-01
 3.15259632e+01 1.02619880e+01 1.75391510e+00 2.77702124e+00
 1.33396370e+01 6.00264009e-01]
grad_E = [-1.07243769e-05  7.19354700e-06 -5.75713405e-06 -3.37349679e-04
 -6.95812529e-05  3.08668283e-04 -4.37862301e-05 -3.60166922e-04
  1.01405466e-04  8.14873455e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:07 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.03375931        1
[INPUT] 0    0    [1    /1   ]  105.796023192        1
[INPUT] 0    0    [1    /1   ]  421.837764725        1
[INPUT] 0    0    [1    /1   ]  0.515999421073       1
[INPUT] 0    0    [1    /1   ]  31.5003286753        1
[INPUT] 0    0    [1    /1   ]  10.2400277875        1
[INPUT] 0    0    [1    /1   ]  1.75553869172        1
[INPUT] 1    0    [1    /1   ]  2.77594240529        1
[INPUT] 1    0    [1    /1   ]  13.3302331178        1
[INPUT] 1    0    [1    /1   ]  0.600067426774       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.03375931304, 1.0]], [0, [105.79602319165159, 1.0]], [0, [421.8377647247818, 1.0]], [0, [0.5159994210732403, 1.0]], [0, [31.500328675274265, 1.0]], [0, [10.240027787532918, 1.0]], [0, [1.7555386917185167, 1.0]], [1, [2.775942405287039, 1.0]], [1, [13.33023311784517, 1.0]], [1, [0.6000674267735248, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.03375931]
bas 1, expnt(s) = [105.79602319]
bas 2, expnt(s) = [421.83776472]
bas 3, expnt(s) = [0.51599942]
bas 4, expnt(s) = [31.50032868]
bas 5, expnt(s) = [10.24002779]
bas 6, expnt(s) = [1.75553869]
bas 7, expnt(s) = [2.77594241]
bas 8, expnt(s) = [13.33023312]
bas 9, expnt(s) = [0.60006743]
CPU time:       229.23
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43903376e+03 8.76856212e+02 1.05796023e+02 8.33425975e+01
 4.21837765e+02 2.35165775e+02 5.15999421e-01 1.53816149e+00
 3.15003287e+01 3.35931971e+01 1.02400278e+01 1.44624169e+01
 1.75553869e+00 3.85321133e+00 2.77594241e+00 1.04531566e+01
 1.33302331e+01 7.43073157e+01 6.00067427e-01 1.54075810e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966874399968907
cond(S) = 77.27057269862313
E1 = -183.22909124982507  E_coul = 55.007899902260625
init E= -128.221191347564
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743021802972206  LUMO = 2.29842855426888
  mo_energy =
[-3.25525644e+01 -1.85682753e+00 -7.43021803e-01 -7.43021803e-01
 -7.43021803e-01  2.29842855e+00  2.65496147e+00  2.65496147e+00
  2.65496147e+00  1.99513344e+01  1.99513344e+01  1.99513344e+01
  2.88564408e+01  1.67840953e+02  7.99721686e+02  4.57413152e+03]
E1 = -182.1854991471392  E_coul = 53.90791065491242
cycle= 1 E= -128.277588492227  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.26906
diis-c [-0.07239323  1.        ]
  HOMO = -0.810065627236995  LUMO = 2.25422897763867
  mo_energy =
[-3.28310105e+01 -1.92503511e+00 -8.10065627e-01 -8.10065627e-01
 -8.10065627e-01  2.25422898e+00  2.59892844e+00  2.59892844e+00
  2.59892844e+00  1.97564223e+01  1.97564223e+01  1.97564223e+01
  2.86506715e+01  1.67551605e+02  7.99382092e+02  4.57374989e+03]
E1 = -182.65833619389895  E_coul = 54.37905765433906
cycle= 2 E= -128.27927853956  delta_E= -0.00169  |g|= 0.064  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105631
diis-c [-2.21335671e-04  2.80200155e-01  7.19799845e-01]
  HOMO = -0.78682922624811  LUMO = 2.2717738858814
  mo_energy =
[-3.27549040e+01 -1.90099835e+00 -7.86829226e-01 -7.86829226e-01
 -7.86829226e-01  2.27177389e+00  2.61995186e+00  2.61995186e+00
  2.61995186e+00  1.98136183e+01  1.98136183e+01  1.98136183e+01
  2.87101441e+01  1.67629860e+02  7.99468316e+02  4.57383992e+03]
E1 = -182.52313478385588  E_coul = 54.243537920981794
cycle= 3 E= -128.279596862874  delta_E= -0.000318  |g|= 0.000515  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000697142
diis-c [-3.48606527e-08 -4.50161055e-03 -5.22830692e-03  1.00972992e+00]
  HOMO = -0.787015481257197  LUMO = 2.27163859041166
  mo_energy =
[-3.27553687e+01 -1.90121161e+00 -7.87015481e-01 -7.87015481e-01
 -7.87015481e-01  2.27163859e+00  2.61982171e+00  2.61982171e+00
  2.61982171e+00  1.98132475e+01  1.98132475e+01  1.98132475e+01
  2.87097220e+01  1.67629485e+02  7.99468088e+02  4.57383979e+03]
E1 = -182.52405897840313  E_coul = 54.2444621003145
cycle= 4 E= -128.279596878089  delta_E= -1.52e-08  |g|= 2.21e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.71233e-05
diis-c [-1.36742032e-10  2.41455697e-04 -2.02799324e-04 -8.05386812e-02
  1.08050002e+00]
  HOMO = -0.787008392503925  LUMO = 2.27164031720626
  mo_energy =
[-3.27553507e+01 -1.90120859e+00 -7.87008393e-01 -7.87008393e-01
 -7.87008393e-01  2.27164032e+00  2.61982764e+00  2.61982764e+00
  2.61982764e+00  1.98132618e+01  1.98132618e+01  1.98132618e+01
  2.87097347e+01  1.67629506e+02  7.99468117e+02  4.57383982e+03]
E1 = -182.52402905533734  E_coul = 54.24443217720051
cycle= 5 E= -128.279596878137  delta_E= -4.82e-11  |g|= 1.79e-06  |ddm|= 8.67e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52402905533734  E_coul = 54.24443217720051
  HOMO = -0.787007982817531  LUMO = 2.27164028025406
  mo_energy =
[-3.27553498e+01 -1.90120862e+00 -7.87007983e-01 -7.87007983e-01
 -7.87007983e-01  2.27164028e+00  2.61982801e+00  2.61982801e+00
  2.61982801e+00  1.98132625e+01  1.98132625e+01  1.98132625e+01
  2.87097354e+01  1.67629507e+02  7.99468118e+02  4.57383982e+03]
E1 = -182.52402756984304  E_coul = 54.244430691705745
Extra cycle  E= -128.279596878137  delta_E= -4.55e-13  |g|= 4.08e-07  |ddm|= 1e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.43903376e+03 1.05796023e+02 4.21837765e+02 5.15999421e-01
 3.15003287e+01 1.02400278e+01 1.75553869e+00 2.77594241e+00
 1.33302331e+01 6.00067427e-01]
E = -128.27959687813728
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:08 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.03375931        1
[INPUT] 0    0    [1    /1   ]  105.796023192        1
[INPUT] 0    0    [1    /1   ]  421.837764725        1
[INPUT] 0    0    [1    /1   ]  0.515999421073       1
[INPUT] 0    0    [1    /1   ]  31.5003286753        1
[INPUT] 0    0    [1    /1   ]  10.2400277875        1
[INPUT] 0    0    [1    /1   ]  1.75553869172        1
[INPUT] 1    0    [1    /1   ]  2.77594240529        1
[INPUT] 1    0    [1    /1   ]  13.3302331178        1
[INPUT] 1    0    [1    /1   ]  0.600067426774       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.03375931304, 1.0]], [0, [105.79602319165159, 1.0]], [0, [421.8377647247818, 1.0]], [0, [0.5159994210732403, 1.0]], [0, [31.500328675274265, 1.0]], [0, [10.240027787532918, 1.0]], [0, [1.7555386917185167, 1.0]], [1, [2.775942405287039, 1.0]], [1, [13.33023311784517, 1.0]], [1, [0.6000674267735248, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.03375931]
bas 1, expnt(s) = [105.79602319]
bas 2, expnt(s) = [421.83776472]
bas 3, expnt(s) = [0.51599942]
bas 4, expnt(s) = [31.50032868]
bas 5, expnt(s) = [10.24002779]
bas 6, expnt(s) = [1.75553869]
bas 7, expnt(s) = [2.77594241]
bas 8, expnt(s) = [13.33023312]
bas 9, expnt(s) = [0.60006743]
CPU time:       230.22
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43903376e+03 8.76856212e+02 1.05796023e+02 8.33425975e+01
 4.21837765e+02 2.35165775e+02 5.15999421e-01 1.53816149e+00
 3.15003287e+01 3.35931971e+01 1.02400278e+01 1.44624169e+01
 1.75553869e+00 3.85321133e+00 2.77594241e+00 1.04531566e+01
 1.33302331e+01 7.43073157e+01 6.00067427e-01 1.54075810e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966874399968907
cond(S) = 77.27057269862313
E1 = -183.22909124982507  E_coul = 55.007899902260625
init E= -128.221191347564
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743021802972206  LUMO = 2.29842855426888
  mo_energy =
[-3.25525644e+01 -1.85682753e+00 -7.43021803e-01 -7.43021803e-01
 -7.43021803e-01  2.29842855e+00  2.65496147e+00  2.65496147e+00
  2.65496147e+00  1.99513344e+01  1.99513344e+01  1.99513344e+01
  2.88564408e+01  1.67840953e+02  7.99721686e+02  4.57413152e+03]
E1 = -182.1854991471392  E_coul = 53.90791065491242
cycle= 1 E= -128.277588492227  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.26906
diis-c [-0.07239323  1.        ]
  HOMO = -0.810065627236995  LUMO = 2.25422897763867
  mo_energy =
[-3.28310105e+01 -1.92503511e+00 -8.10065627e-01 -8.10065627e-01
 -8.10065627e-01  2.25422898e+00  2.59892844e+00  2.59892844e+00
  2.59892844e+00  1.97564223e+01  1.97564223e+01  1.97564223e+01
  2.86506715e+01  1.67551605e+02  7.99382092e+02  4.57374989e+03]
E1 = -182.65833619389895  E_coul = 54.37905765433906
cycle= 2 E= -128.27927853956  delta_E= -0.00169  |g|= 0.064  |ddm|= 0.0643
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105631
diis-c [-2.21335671e-04  2.80200155e-01  7.19799845e-01]
  HOMO = -0.78682922624811  LUMO = 2.2717738858814
  mo_energy =
[-3.27549040e+01 -1.90099835e+00 -7.86829226e-01 -7.86829226e-01
 -7.86829226e-01  2.27177389e+00  2.61995186e+00  2.61995186e+00
  2.61995186e+00  1.98136183e+01  1.98136183e+01  1.98136183e+01
  2.87101441e+01  1.67629860e+02  7.99468316e+02  4.57383992e+03]
E1 = -182.52313478385588  E_coul = 54.243537920981794
cycle= 3 E= -128.279596862874  delta_E= -0.000318  |g|= 0.000515  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000697142
diis-c [-3.48606527e-08 -4.50161055e-03 -5.22830692e-03  1.00972992e+00]
  HOMO = -0.787015481257197  LUMO = 2.27163859041166
  mo_energy =
[-3.27553687e+01 -1.90121161e+00 -7.87015481e-01 -7.87015481e-01
 -7.87015481e-01  2.27163859e+00  2.61982171e+00  2.61982171e+00
  2.61982171e+00  1.98132475e+01  1.98132475e+01  1.98132475e+01
  2.87097220e+01  1.67629485e+02  7.99468088e+02  4.57383979e+03]
E1 = -182.52405897840313  E_coul = 54.2444621003145
cycle= 4 E= -128.279596878089  delta_E= -1.52e-08  |g|= 2.21e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.71233e-05
diis-c [-1.36742032e-10  2.41455697e-04 -2.02799324e-04 -8.05386812e-02
  1.08050002e+00]
  HOMO = -0.787008392503925  LUMO = 2.27164031720626
  mo_energy =
[-3.27553507e+01 -1.90120859e+00 -7.87008393e-01 -7.87008393e-01
 -7.87008393e-01  2.27164032e+00  2.61982764e+00  2.61982764e+00
  2.61982764e+00  1.98132618e+01  1.98132618e+01  1.98132618e+01
  2.87097347e+01  1.67629506e+02  7.99468117e+02  4.57383982e+03]
E1 = -182.52402905533734  E_coul = 54.24443217720051
cycle= 5 E= -128.279596878137  delta_E= -4.82e-11  |g|= 1.79e-06  |ddm|= 8.67e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52402905533734  E_coul = 54.24443217720051
  HOMO = -0.787007982817531  LUMO = 2.27164028025406
  mo_energy =
[-3.27553498e+01 -1.90120862e+00 -7.87007983e-01 -7.87007983e-01
 -7.87007983e-01  2.27164028e+00  2.61982801e+00  2.61982801e+00
  2.61982801e+00  1.98132625e+01  1.98132625e+01  1.98132625e+01
  2.87097354e+01  1.67629507e+02  7.99468118e+02  4.57383982e+03]
E1 = -182.52402756984304  E_coul = 54.244430691705745
Extra cycle  E= -128.279596878137  delta_E= -4.55e-13  |g|= 4.08e-07  |ddm|= 1e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 77.27057269862313
E1 = -182.52402756984304  E_coul = 54.244430691705745
init E= -128.279596878137
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.787008063264856  LUMO = 2.27164015165285
  mo_energy =
[-3.27553501e+01 -1.90120879e+00 -7.87008063e-01 -7.87008063e-01
 -7.87008063e-01  2.27164015e+00  2.61982794e+00  2.61982794e+00
  2.61982794e+00  1.98132622e+01  1.98132622e+01  1.98132622e+01
  2.87097351e+01  1.67629506e+02  7.99468118e+02  4.57383982e+03]
E1 = -182.52402820952113  E_coul = 54.244431331383886
cycle= 1 E= -128.279596878137  delta_E= 2.84e-14  |g|= 1.02e-07  |ddm|= 2.41e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.52402820952113  E_coul = 54.244431331383886
  HOMO = -0.787008015425116  LUMO = 2.27164017512899
  mo_energy =
[-3.27553500e+01 -1.90120875e+00 -7.87008015e-01 -7.87008015e-01
 -7.87008015e-01  2.27164018e+00  2.61982798e+00  2.61982798e+00
  2.61982798e+00  1.98132624e+01  1.98132624e+01  1.98132624e+01
  2.87097352e+01  1.67629507e+02  7.99468118e+02  4.57383982e+03]
E1 = -182.52402796372073  E_coul = 54.24443108558364
Extra cycle  E= -128.279596878137  delta_E= 1.71e-13  |g|= 3.66e-08  |ddm|= 4.02e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43903376e+03 1.05796023e+02 4.21837765e+02 5.15999421e-01
 3.15003287e+01 1.02400278e+01 1.75553869e+00 2.77594241e+00
 1.33302331e+01 6.00067427e-01]
grad_E = [-1.09081010e-05  2.25895151e-06 -3.65537861e-06 -6.21877737e-05
 -9.87370423e-06  1.92744847e-05  3.76624020e-05 -1.26374025e-04
  4.32836385e-05  1.72317640e-04]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:11 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.01240259        1
[INPUT] 0    0    [1    /1   ]  105.807714026        1
[INPUT] 0    0    [1    /1   ]  421.910472778        1
[INPUT] 0    0    [1    /1   ]  0.515935169469       1
[INPUT] 0    0    [1    /1   ]  31.5037514626        1
[INPUT] 0    0    [1    /1   ]  10.2397384649        1
[INPUT] 0    0    [1    /1   ]  1.7551584364         1
[INPUT] 1    0    [1    /1   ]  2.77540044327        1
[INPUT] 1    0    [1    /1   ]  13.3253563264        1
[INPUT] 1    0    [1    /1   ]  0.599982168311       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.0124025880586, 1.0]], [0, [105.80771402604056, 1.0]], [0, [421.91047277802227, 1.0]], [0, [0.5159351694691219, 1.0]], [0, [31.503751462620915, 1.0]], [0, [10.2397384649467, 1.0]], [0, [1.7551584363978847, 1.0]], [1, [2.775400443266761, 1.0]], [1, [13.325356326376864, 1.0]], [1, [0.5999821683111264, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.01240259]
bas 1, expnt(s) = [105.80771403]
bas 2, expnt(s) = [421.91047278]
bas 3, expnt(s) = [0.51593517]
bas 4, expnt(s) = [31.50375146]
bas 5, expnt(s) = [10.23973846]
bas 6, expnt(s) = [1.75515844]
bas 7, expnt(s) = [2.77540044]
bas 8, expnt(s) = [13.32535633]
bas 9, expnt(s) = [0.59998217]
CPU time:       232.94
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43901240e+03 8.76850453e+02 1.05807714e+02 8.33495046e+01
 4.21910473e+02 2.35196174e+02 5.15935169e-01 1.53801784e+00
 3.15037515e+01 3.35959347e+01 1.02397385e+01 1.44621104e+01
 1.75515844e+00 3.85258535e+00 2.77540044e+00 1.04506056e+01
 1.33253563e+01 7.42733361e+01 5.99982168e-01 1.54048446e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966892740338864
cond(S) = 77.2483418308875
E1 = -183.2290854493564  E_coul = 55.00786742302146
init E= -128.221218026335
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743021545797347  LUMO = 2.29779940682153
  mo_energy =
[-3.25525834e+01 -1.85682749e+00 -7.43021546e-01 -7.43021546e-01
 -7.43021546e-01  2.29779941e+00  2.65444767e+00  2.65444767e+00
  2.65444767e+00  1.99442796e+01  1.99442796e+01  1.99442796e+01
  2.88554726e+01  1.67856157e+02  7.99839633e+02  4.57438290e+03]
E1 = -182.18495021513715  E_coul = 53.9073632948204
cycle= 1 E= -128.277586920317  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.269163
diis-c [-0.07244865  1.        ]
  HOMO = -0.810104686207567  LUMO = 2.25357747195099
  mo_energy =
[-3.28311229e+01 -1.92507964e+00 -8.10104686e-01 -8.10104686e-01
 -8.10104686e-01  2.25357747e+00  2.59838842e+00  2.59838842e+00
  2.59838842e+00  1.97493165e+01  1.97493165e+01  1.97493165e+01
  2.86496197e+01  1.67566709e+02  7.99499939e+02  4.57400118e+03]
E1 = -182.6580212280053  E_coul = 54.37874289266562
cycle= 2 E= -128.27927833534  delta_E= -0.00169  |g|= 0.0641  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105685
diis-c [-2.21311538e-04  2.80228967e-01  7.19771033e-01]
  HOMO = -0.786857270680259  LUMO = 2.27112694164725
  mo_energy =
[-3.27549837e+01 -1.90103143e+00 -7.86857271e-01 -7.86857271e-01
 -7.86857271e-01  2.27112694e+00  2.61941838e+00  2.61941838e+00
  2.61941838e+00  1.98065303e+01  1.98065303e+01  1.98065303e+01
  2.87091196e+01  1.67644998e+02  7.99586199e+02  4.57409124e+03]
E1 = -182.52274637085074  E_coul = 54.243149382177855
cycle= 3 E= -128.279596988673  delta_E= -0.000319  |g|= 0.000514  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000696013
diis-c [-3.49535227e-08 -4.50134534e-03 -5.24188162e-03  1.00974323e+00]
  HOMO = -0.787043215520777  LUMO = 2.27099178240563
  mo_energy =
[-3.27554477e+01 -1.90124457e+00 -7.87043216e-01 -7.87043216e-01
 -7.87043216e-01  2.27099178e+00  2.61928854e+00  2.61928854e+00
  2.61928854e+00  1.98061601e+01  1.98061601e+01  1.98061601e+01
  2.87086981e+01  1.67644624e+02  7.99585971e+02  4.57409111e+03]
E1 = -182.52366928364387  E_coul = 54.24407227978569
cycle= 4 E= -128.279597003858  delta_E= -1.52e-08  |g|= 2.22e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.72871e-05
diis-c [-1.38445280e-10  2.43604070e-04 -2.01002920e-04 -8.11447057e-02
  1.08110210e+00]
  HOMO = -0.787036100793906  LUMO = 2.27099349597128
  mo_energy =
[-3.27554297e+01 -1.90124156e+00 -7.87036101e-01 -7.87036101e-01
 -7.87036101e-01  2.27099350e+00  2.61929450e+00  2.61929450e+00
  2.61929450e+00  1.98061744e+01  1.98061744e+01  1.98061744e+01
  2.87087109e+01  1.67644645e+02  7.99586000e+02  4.57409114e+03]
E1 = -182.52363928788196  E_coul = 54.244042283975126
cycle= 5 E= -128.279597003907  delta_E= -4.87e-11  |g|= 1.8e-06  |ddm|= 8.76e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52363928788196  E_coul = 54.244042283975126
  HOMO = -0.787035690089508  LUMO = 2.27099345812297
  mo_energy =
[-3.27554287e+01 -1.90124159e+00 -7.87035690e-01 -7.87035690e-01
 -7.87035690e-01  2.27099346e+00  2.61929487e+00  2.61929487e+00
  2.61929487e+00  1.98061751e+01  1.98061751e+01  1.98061751e+01
  2.87087115e+01  1.67644646e+02  7.99586001e+02  4.57409115e+03]
E1 = -182.52363780002284  E_coul = 54.24404079611539
Extra cycle  E= -128.279597003907  delta_E= -5.97e-13  |g|= 4.1e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.43901240e+03 1.05807714e+02 4.21910473e+02 5.15935169e-01
 3.15037515e+01 1.02397385e+01 1.75515844e+00 2.77540044e+00
 1.33253563e+01 5.99982168e-01]
E = -128.27959700390744
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:12 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.01240259        1
[INPUT] 0    0    [1    /1   ]  105.807714026        1
[INPUT] 0    0    [1    /1   ]  421.910472778        1
[INPUT] 0    0    [1    /1   ]  0.515935169469       1
[INPUT] 0    0    [1    /1   ]  31.5037514626        1
[INPUT] 0    0    [1    /1   ]  10.2397384649        1
[INPUT] 0    0    [1    /1   ]  1.7551584364         1
[INPUT] 1    0    [1    /1   ]  2.77540044327        1
[INPUT] 1    0    [1    /1   ]  13.3253563264        1
[INPUT] 1    0    [1    /1   ]  0.599982168311       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.0124025880586, 1.0]], [0, [105.80771402604056, 1.0]], [0, [421.91047277802227, 1.0]], [0, [0.5159351694691219, 1.0]], [0, [31.503751462620915, 1.0]], [0, [10.2397384649467, 1.0]], [0, [1.7551584363978847, 1.0]], [1, [2.775400443266761, 1.0]], [1, [13.325356326376864, 1.0]], [1, [0.5999821683111264, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.01240259]
bas 1, expnt(s) = [105.80771403]
bas 2, expnt(s) = [421.91047278]
bas 3, expnt(s) = [0.51593517]
bas 4, expnt(s) = [31.50375146]
bas 5, expnt(s) = [10.23973846]
bas 6, expnt(s) = [1.75515844]
bas 7, expnt(s) = [2.77540044]
bas 8, expnt(s) = [13.32535633]
bas 9, expnt(s) = [0.59998217]
CPU time:       233.94
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43901240e+03 8.76850453e+02 1.05807714e+02 8.33495046e+01
 4.21910473e+02 2.35196174e+02 5.15935169e-01 1.53801784e+00
 3.15037515e+01 3.35959347e+01 1.02397385e+01 1.44621104e+01
 1.75515844e+00 3.85258535e+00 2.77540044e+00 1.04506056e+01
 1.33253563e+01 7.42733361e+01 5.99982168e-01 1.54048446e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966892740338864
cond(S) = 77.2483418308875
E1 = -183.2290854493564  E_coul = 55.00786742302146
init E= -128.221218026335
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743021545797347  LUMO = 2.29779940682153
  mo_energy =
[-3.25525834e+01 -1.85682749e+00 -7.43021546e-01 -7.43021546e-01
 -7.43021546e-01  2.29779941e+00  2.65444767e+00  2.65444767e+00
  2.65444767e+00  1.99442796e+01  1.99442796e+01  1.99442796e+01
  2.88554726e+01  1.67856157e+02  7.99839633e+02  4.57438290e+03]
E1 = -182.18495021513715  E_coul = 53.9073632948204
cycle= 1 E= -128.277586920317  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.269163
diis-c [-0.07244865  1.        ]
  HOMO = -0.810104686207567  LUMO = 2.25357747195099
  mo_energy =
[-3.28311229e+01 -1.92507964e+00 -8.10104686e-01 -8.10104686e-01
 -8.10104686e-01  2.25357747e+00  2.59838842e+00  2.59838842e+00
  2.59838842e+00  1.97493165e+01  1.97493165e+01  1.97493165e+01
  2.86496197e+01  1.67566709e+02  7.99499939e+02  4.57400118e+03]
E1 = -182.6580212280053  E_coul = 54.37874289266562
cycle= 2 E= -128.27927833534  delta_E= -0.00169  |g|= 0.0641  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105685
diis-c [-2.21311538e-04  2.80228967e-01  7.19771033e-01]
  HOMO = -0.786857270680259  LUMO = 2.27112694164725
  mo_energy =
[-3.27549837e+01 -1.90103143e+00 -7.86857271e-01 -7.86857271e-01
 -7.86857271e-01  2.27112694e+00  2.61941838e+00  2.61941838e+00
  2.61941838e+00  1.98065303e+01  1.98065303e+01  1.98065303e+01
  2.87091196e+01  1.67644998e+02  7.99586199e+02  4.57409124e+03]
E1 = -182.52274637085074  E_coul = 54.243149382177855
cycle= 3 E= -128.279596988673  delta_E= -0.000319  |g|= 0.000514  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000696013
diis-c [-3.49535227e-08 -4.50134534e-03 -5.24188162e-03  1.00974323e+00]
  HOMO = -0.787043215520777  LUMO = 2.27099178240563
  mo_energy =
[-3.27554477e+01 -1.90124457e+00 -7.87043216e-01 -7.87043216e-01
 -7.87043216e-01  2.27099178e+00  2.61928854e+00  2.61928854e+00
  2.61928854e+00  1.98061601e+01  1.98061601e+01  1.98061601e+01
  2.87086981e+01  1.67644624e+02  7.99585971e+02  4.57409111e+03]
E1 = -182.52366928364387  E_coul = 54.24407227978569
cycle= 4 E= -128.279597003858  delta_E= -1.52e-08  |g|= 2.22e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.72871e-05
diis-c [-1.38445280e-10  2.43604070e-04 -2.01002920e-04 -8.11447057e-02
  1.08110210e+00]
  HOMO = -0.787036100793906  LUMO = 2.27099349597128
  mo_energy =
[-3.27554297e+01 -1.90124156e+00 -7.87036101e-01 -7.87036101e-01
 -7.87036101e-01  2.27099350e+00  2.61929450e+00  2.61929450e+00
  2.61929450e+00  1.98061744e+01  1.98061744e+01  1.98061744e+01
  2.87087109e+01  1.67644645e+02  7.99586000e+02  4.57409114e+03]
E1 = -182.52363928788196  E_coul = 54.244042283975126
cycle= 5 E= -128.279597003907  delta_E= -4.87e-11  |g|= 1.8e-06  |ddm|= 8.76e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.52363928788196  E_coul = 54.244042283975126
  HOMO = -0.787035690089508  LUMO = 2.27099345812297
  mo_energy =
[-3.27554287e+01 -1.90124159e+00 -7.87035690e-01 -7.87035690e-01
 -7.87035690e-01  2.27099346e+00  2.61929487e+00  2.61929487e+00
  2.61929487e+00  1.98061751e+01  1.98061751e+01  1.98061751e+01
  2.87087115e+01  1.67644646e+02  7.99586001e+02  4.57409115e+03]
E1 = -182.52363780002284  E_coul = 54.24404079611539
Extra cycle  E= -128.279597003907  delta_E= -5.97e-13  |g|= 4.1e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 77.2483418308875
E1 = -182.52363780002284  E_coul = 54.24404079611539
init E= -128.279597003907
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.787035770594107  LUMO = 2.27099332915467
  mo_energy =
[-3.27554290e+01 -1.90124176e+00 -7.87035771e-01 -7.87035771e-01
 -7.87035771e-01  2.27099333e+00  2.61929480e+00  2.61929480e+00
  2.61929480e+00  1.98061749e+01  1.98061749e+01  1.98061749e+01
  2.87087112e+01  1.67644645e+02  7.99586001e+02  4.57409114e+03]
E1 = -182.52363844093574  E_coul = 54.24404143702815
cycle= 1 E= -128.279597003908  delta_E= -1.42e-13  |g|= 1.02e-07  |ddm|= 2.42e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.52363844093574  E_coul = 54.24404143702815
  HOMO = -0.787035722648486  LUMO = 2.27099335263985
  mo_energy =
[-3.27554289e+01 -1.90124172e+00 -7.87035723e-01 -7.87035723e-01
 -7.87035723e-01  2.27099335e+00  2.61929484e+00  2.61929484e+00
  2.61929484e+00  1.98061750e+01  1.98061750e+01  1.98061750e+01
  2.87087113e+01  1.67644645e+02  7.99586001e+02  4.57409114e+03]
E1 = -182.52363819466834  E_coul = 54.24404119076072
Extra cycle  E= -128.279597003908  delta_E= -2.84e-14  |g|= 3.66e-08  |ddm|= 4.03e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43901240e+03 1.05807714e+02 4.21910473e+02 5.15935169e-01
 3.15037515e+01 1.02397385e+01 1.75515844e+00 2.77540044e+00
 1.33253563e+01 5.99982168e-01]
grad_E = [-1.09350453e-05 -5.60961746e-07 -3.22465872e-06  3.19786749e-05
  4.13745062e-06 -1.20266461e-05 -9.45746094e-06 -2.48917222e-05
  1.30993439e-05 -6.75089285e-06]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:15 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.00640937        1
[INPUT] 0    0    [1    /1   ]  105.813289373        1
[INPUT] 0    0    [1    /1   ]  421.930725559        1
[INPUT] 0    0    [1    /1   ]  0.515945021527       1
[INPUT] 0    0    [1    /1   ]  31.5050479422        1
[INPUT] 0    0    [1    /1   ]  10.2402486306        1
[INPUT] 0    0    [1    /1   ]  1.75524083945        1
[INPUT] 1    0    [1    /1   ]  2.77515370196        1
[INPUT] 1    0    [1    /1   ]  13.3232155287        1
[INPUT] 1    0    [1    /1   ]  0.599947927809       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.006409366614, 1.0]], [0, [105.81328937328043, 1.0]], [0, [421.9307255590764, 1.0]], [0, [0.5159450215265179, 1.0]], [0, [31.505047942241067, 1.0]], [0, [10.240248630621078, 1.0]], [0, [1.7552408394520387, 1.0]], [1, [2.775153701959295, 1.0]], [1, [13.323215528682665, 1.0]], [1, [0.5999479278089928, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.00640937]
bas 1, expnt(s) = [105.81328937]
bas 2, expnt(s) = [421.93072556]
bas 3, expnt(s) = [0.51594502]
bas 4, expnt(s) = [31.50504794]
bas 5, expnt(s) = [10.24024863]
bas 6, expnt(s) = [1.75524084]
bas 7, expnt(s) = [2.7751537]
bas 8, expnt(s) = [13.32321553]
bas 9, expnt(s) = [0.59994793]
CPU time:       236.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43900641e+03 8.76848837e+02 1.05813289e+02 8.33527985e+01
 4.21930726e+02 2.35204642e+02 5.15945022e-01 1.53803987e+00
 3.15050479e+01 3.35969716e+01 1.02402486e+01 1.44626508e+01
 1.75524084e+00 3.85272100e+00 2.77515370e+00 1.04494443e+01
 1.33232155e+01 7.42584208e+01 5.99947928e-01 1.54037457e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966899784310106
cond(S) = 77.24827651500532
E1 = -183.22908683644403  E_coul = 55.007866323895406
init E= -128.221220512549
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743020480882717  LUMO = 2.2979298266343
  mo_energy =
[-3.25525885e+01 -1.85682679e+00 -7.43020481e-01 -7.43020481e-01
 -7.43020481e-01  2.29792983e+00  2.65422916e+00  2.65422916e+00
  2.65422916e+00  1.99411665e+01  1.99411665e+01  1.99411665e+01
  2.88574215e+01  1.67866018e+02  7.99883242e+02  4.57446442e+03]
E1 = -182.1847495828163  E_coul = 53.90716328814156
cycle= 1 E= -128.277586294675  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.2692
diis-c [-0.07246874  1.        ]
  HOMO = -0.810119568117912  LUMO = 2.2536899818083
  mo_energy =
[-3.28311610e+01 -1.92509705e+00 -8.10119568e-01 -8.10119568e-01
 -8.10119568e-01  2.25368998e+00  2.59816015e+00  2.59816015e+00
  2.59816015e+00  1.97461880e+01  1.97461880e+01  1.97461880e+01
  2.86515331e+01  1.67576536e+02  7.99543518e+02  4.57408267e+03]
E1 = -182.6579084841076  E_coul = 54.37863026143995
cycle= 2 E= -128.279278222668  delta_E= -0.00169  |g|= 0.0641  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105706
diis-c [-2.21342115e-04  2.80241165e-01  7.19758835e-01]
  HOMO = -0.786868109608497  LUMO = 2.27124356985108
  mo_energy =
[-3.27550096e+01 -1.90104455e+00 -7.86868110e-01 -7.86868110e-01
 -7.86868110e-01  2.27124357e+00  2.61919224e+00  2.61919224e+00
  2.61919224e+00  1.98034080e+01  1.98034080e+01  1.98034080e+01
  2.87110439e+01  1.67654837e+02  7.99629791e+02  4.57417274e+03]
E1 = -182.52260553833477  E_coul = 54.24300853538185
cycle= 3 E= -128.279597002953  delta_E= -0.000319  |g|= 0.000514  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000695592
diis-c [-3.49965867e-08 -4.50224052e-03 -5.24960099e-03  1.00975184e+00]
  HOMO = -0.787053942400119  LUMO = 2.27110846351299
  mo_energy =
[-3.27554732e+01 -1.90125761e+00 -7.87053942e-01 -7.87053942e-01
 -7.87053942e-01  2.27110846e+00  2.61906253e+00  2.61906253e+00
  2.61906253e+00  1.98030381e+01  1.98030381e+01  1.98030381e+01
  2.87106226e+01  1.67654464e+02  7.99629563e+02  4.57417261e+03]
E1 = -182.5235278985011  E_coul = 54.24393088037787
cycle= 4 E= -128.279597018123  delta_E= -1.52e-08  |g|= 2.22e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73228e-05
diis-c [-1.38773845e-10  2.43967460e-04 -2.00434478e-04 -8.12425083e-02
  1.08119898e+00]
  HOMO = -0.787046822187731  LUMO = 2.27111017489669
  mo_energy =
[-3.27554552e+01 -1.90125460e+00 -7.87046822e-01 -7.87046822e-01
 -7.87046822e-01  2.27111017e+00  2.61906849e+00  2.61906849e+00
  2.61906849e+00  1.98030524e+01  1.98030524e+01  1.98030524e+01
  2.87106354e+01  1.67654485e+02  7.99629592e+02  4.57417265e+03]
E1 = -182.5234978850171  E_coul = 54.24390086684469
cycle= 5 E= -128.279597018172  delta_E= -4.92e-11  |g|= 1.8e-06  |ddm|= 8.77e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5234978850171  E_coul = 54.24390086684469
  HOMO = -0.787046411162911  LUMO = 2.2711101369308
  mo_energy =
[-3.27554542e+01 -1.90125463e+00 -7.87046411e-01 -7.87046411e-01
 -7.87046411e-01  2.27111014e+00  2.61906886e+00  2.61906886e+00
  2.61906886e+00  1.98030532e+01  1.98030532e+01  1.98030532e+01
  2.87106360e+01  1.67654486e+02  7.99629593e+02  4.57417265e+03]
E1 = -182.5234963958719  E_coul = 54.243899377699115
Extra cycle  E= -128.279597018173  delta_E= -3.69e-13  |g|= 4.11e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.43900641e+03 1.05813289e+02 4.21930726e+02 5.15945022e-01
 3.15050479e+01 1.02402486e+01 1.75524084e+00 2.77515370e+00
 1.33232155e+01 5.99947928e-01]
E = -128.27959701817278
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:16 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.00640937        1
[INPUT] 0    0    [1    /1   ]  105.813289373        1
[INPUT] 0    0    [1    /1   ]  421.930725559        1
[INPUT] 0    0    [1    /1   ]  0.515945021527       1
[INPUT] 0    0    [1    /1   ]  31.5050479422        1
[INPUT] 0    0    [1    /1   ]  10.2402486306        1
[INPUT] 0    0    [1    /1   ]  1.75524083945        1
[INPUT] 1    0    [1    /1   ]  2.77515370196        1
[INPUT] 1    0    [1    /1   ]  13.3232155287        1
[INPUT] 1    0    [1    /1   ]  0.599947927809       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.006409366614, 1.0]], [0, [105.81328937328043, 1.0]], [0, [421.9307255590764, 1.0]], [0, [0.5159450215265179, 1.0]], [0, [31.505047942241067, 1.0]], [0, [10.240248630621078, 1.0]], [0, [1.7552408394520387, 1.0]], [1, [2.775153701959295, 1.0]], [1, [13.323215528682665, 1.0]], [1, [0.5999479278089928, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.00640937]
bas 1, expnt(s) = [105.81328937]
bas 2, expnt(s) = [421.93072556]
bas 3, expnt(s) = [0.51594502]
bas 4, expnt(s) = [31.50504794]
bas 5, expnt(s) = [10.24024863]
bas 6, expnt(s) = [1.75524084]
bas 7, expnt(s) = [2.7751537]
bas 8, expnt(s) = [13.32321553]
bas 9, expnt(s) = [0.59994793]
CPU time:       237.65
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43900641e+03 8.76848837e+02 1.05813289e+02 8.33527985e+01
 4.21930726e+02 2.35204642e+02 5.15945022e-01 1.53803987e+00
 3.15050479e+01 3.35969716e+01 1.02402486e+01 1.44626508e+01
 1.75524084e+00 3.85272100e+00 2.77515370e+00 1.04494443e+01
 1.33232155e+01 7.42584208e+01 5.99947928e-01 1.54037457e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966899784310106
cond(S) = 77.24827651500532
E1 = -183.22908683644403  E_coul = 55.007866323895406
init E= -128.221220512549
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743020480882717  LUMO = 2.2979298266343
  mo_energy =
[-3.25525885e+01 -1.85682679e+00 -7.43020481e-01 -7.43020481e-01
 -7.43020481e-01  2.29792983e+00  2.65422916e+00  2.65422916e+00
  2.65422916e+00  1.99411665e+01  1.99411665e+01  1.99411665e+01
  2.88574215e+01  1.67866018e+02  7.99883242e+02  4.57446442e+03]
E1 = -182.1847495828163  E_coul = 53.90716328814156
cycle= 1 E= -128.277586294675  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.2692
diis-c [-0.07246874  1.        ]
  HOMO = -0.810119568117912  LUMO = 2.2536899818083
  mo_energy =
[-3.28311610e+01 -1.92509705e+00 -8.10119568e-01 -8.10119568e-01
 -8.10119568e-01  2.25368998e+00  2.59816015e+00  2.59816015e+00
  2.59816015e+00  1.97461880e+01  1.97461880e+01  1.97461880e+01
  2.86515331e+01  1.67576536e+02  7.99543518e+02  4.57408267e+03]
E1 = -182.6579084841076  E_coul = 54.37863026143995
cycle= 2 E= -128.279278222668  delta_E= -0.00169  |g|= 0.0641  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105706
diis-c [-2.21342115e-04  2.80241165e-01  7.19758835e-01]
  HOMO = -0.786868109608497  LUMO = 2.27124356985108
  mo_energy =
[-3.27550096e+01 -1.90104455e+00 -7.86868110e-01 -7.86868110e-01
 -7.86868110e-01  2.27124357e+00  2.61919224e+00  2.61919224e+00
  2.61919224e+00  1.98034080e+01  1.98034080e+01  1.98034080e+01
  2.87110439e+01  1.67654837e+02  7.99629791e+02  4.57417274e+03]
E1 = -182.52260553833477  E_coul = 54.24300853538185
cycle= 3 E= -128.279597002953  delta_E= -0.000319  |g|= 0.000514  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000695592
diis-c [-3.49965867e-08 -4.50224052e-03 -5.24960099e-03  1.00975184e+00]
  HOMO = -0.787053942400119  LUMO = 2.27110846351299
  mo_energy =
[-3.27554732e+01 -1.90125761e+00 -7.87053942e-01 -7.87053942e-01
 -7.87053942e-01  2.27110846e+00  2.61906253e+00  2.61906253e+00
  2.61906253e+00  1.98030381e+01  1.98030381e+01  1.98030381e+01
  2.87106226e+01  1.67654464e+02  7.99629563e+02  4.57417261e+03]
E1 = -182.5235278985011  E_coul = 54.24393088037787
cycle= 4 E= -128.279597018123  delta_E= -1.52e-08  |g|= 2.22e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73228e-05
diis-c [-1.38773845e-10  2.43967460e-04 -2.00434478e-04 -8.12425083e-02
  1.08119898e+00]
  HOMO = -0.787046822187731  LUMO = 2.27111017489669
  mo_energy =
[-3.27554552e+01 -1.90125460e+00 -7.87046822e-01 -7.87046822e-01
 -7.87046822e-01  2.27111017e+00  2.61906849e+00  2.61906849e+00
  2.61906849e+00  1.98030524e+01  1.98030524e+01  1.98030524e+01
  2.87106354e+01  1.67654485e+02  7.99629592e+02  4.57417265e+03]
E1 = -182.5234978850171  E_coul = 54.24390086684469
cycle= 5 E= -128.279597018172  delta_E= -4.92e-11  |g|= 1.8e-06  |ddm|= 8.77e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.5234978850171  E_coul = 54.24390086684469
  HOMO = -0.787046411162911  LUMO = 2.2711101369308
  mo_energy =
[-3.27554542e+01 -1.90125463e+00 -7.87046411e-01 -7.87046411e-01
 -7.87046411e-01  2.27111014e+00  2.61906886e+00  2.61906886e+00
  2.61906886e+00  1.98030532e+01  1.98030532e+01  1.98030532e+01
  2.87106360e+01  1.67654486e+02  7.99629593e+02  4.57417265e+03]
E1 = -182.5234963958719  E_coul = 54.243899377699115
Extra cycle  E= -128.279597018173  delta_E= -3.69e-13  |g|= 4.11e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 77.24827651500532
E1 = -182.5234963958719  E_coul = 54.243899377699115
init E= -128.279597018173
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.787046491735073  LUMO = 2.2711100078299
  mo_energy =
[-3.27554545e+01 -1.90125480e+00 -7.87046492e-01 -7.87046492e-01
 -7.87046492e-01  2.27111001e+00  2.61906879e+00  2.61906879e+00
  2.61906879e+00  1.98030529e+01  1.98030529e+01  1.98030529e+01
  2.87106357e+01  1.67654485e+02  7.99629593e+02  4.57417265e+03]
E1 = -182.52349703734163  E_coul = 54.243900019168855
cycle= 1 E= -128.279597018173  delta_E=    0  |g|= 1.02e-07  |ddm|= 2.43e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.52349703734163  E_coul = 54.243900019168855
  HOMO = -0.787046443747123  LUMO = 2.271110031335
  mo_energy =
[-3.27554544e+01 -1.90125477e+00 -7.87046444e-01 -7.87046444e-01
 -7.87046444e-01  2.27111003e+00  2.61906883e+00  2.61906883e+00
  2.61906883e+00  1.98030530e+01  1.98030530e+01  1.98030530e+01
  2.87106358e+01  1.67654485e+02  7.99629593e+02  4.57417265e+03]
E1 = -182.5234967908465  E_coul = 54.243899772673714
Extra cycle  E= -128.279597018173  delta_E= -2.84e-14  |g|= 3.67e-08  |ddm|= 4.04e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43900641e+03 1.05813289e+02 4.21930726e+02 5.15945022e-01
 3.15050479e+01 1.02402486e+01 1.75524084e+00 2.77515370e+00
 1.33232155e+01 5.99947928e-01]
grad_E = [-1.09389906e-05 -2.51990543e-07 -3.21332913e-06 -2.36894569e-06
  1.94787311e-06 -5.57049959e-06  4.10621290e-06  2.65441422e-06
  9.33923874e-07 -2.50332094e-05]
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:18 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.00756906        1
[INPUT] 0    0    [1    /1   ]  105.809261099        1
[INPUT] 0    0    [1    /1   ]  421.927114374        1
[INPUT] 0    0    [1    /1   ]  0.515934092108       1
[INPUT] 0    0    [1    /1   ]  31.5040162321        1
[INPUT] 0    0    [1    /1   ]  10.2402202734        1
[INPUT] 0    0    [1    /1   ]  1.7551847896         1
[INPUT] 1    0    [1    /1   ]  2.77512567222        1
[INPUT] 1    0    [1    /1   ]  13.3229648446        1
[INPUT] 1    0    [1    /1   ]  0.599945517401       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.0075690552967, 1.0]], [0, [105.80926109938895, 1.0]], [0, [421.92711437368337, 1.0]], [0, [0.5159340921083513, 1.0]], [0, [31.504016232054564, 1.0]], [0, [10.240220273421087, 1.0]], [0, [1.7551847895972341, 1.0]], [1, [2.7751256722172064, 1.0]], [1, [13.322964844588586, 1.0]], [1, [0.5999455174009304, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.00756906]
bas 1, expnt(s) = [105.8092611]
bas 2, expnt(s) = [421.92711437]
bas 3, expnt(s) = [0.51593409]
bas 4, expnt(s) = [31.50401623]
bas 5, expnt(s) = [10.24022027]
bas 6, expnt(s) = [1.75518479]
bas 7, expnt(s) = [2.77512567]
bas 8, expnt(s) = [13.32296484]
bas 9, expnt(s) = [0.59994552]
CPU time:       240.36
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43900757e+03 8.76849150e+02 1.05809261e+02 8.33504186e+01
 4.21927114e+02 2.35203132e+02 5.15934092e-01 1.53801544e+00
 3.15040162e+01 3.35961465e+01 1.02402203e+01 1.44626208e+01
 1.75518479e+00 3.85262873e+00 2.77512567e+00 1.04493124e+01
 1.33229648e+01 7.42566743e+01 5.99945517e-01 1.54036683e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966900457719039
cond(S) = 77.24970587008993
E1 = -183.22908624746793  E_coul = 55.00786591568413
init E= -128.221220331784
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743020278243104  LUMO = 2.29783394865093
  mo_energy =
[-3.25525892e+01 -1.85682690e+00 -7.43020278e-01 -7.43020278e-01
 -7.43020278e-01  2.29783395e+00  2.65420960e+00  2.65420960e+00
  2.65420960e+00  1.99408091e+01  1.99408091e+01  1.99408091e+01
  2.88566579e+01  1.67859983e+02  7.99863921e+02  4.57443693e+03]
E1 = -182.18474373189753  E_coul = 53.907157449112304
cycle= 1 E= -128.277586282785  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.2692
diis-c [-0.07246885  1.        ]
  HOMO = -0.810119841797747  LUMO = 2.25359565432806
  mo_energy =
[-3.28311625e+01 -1.92509769e+00 -8.10119842e-01 -8.10119842e-01
 -8.10119842e-01  2.25359565e+00  2.59814066e+00  2.59814066e+00
  2.59814066e+00  1.97458317e+01  1.97458317e+01  1.97458317e+01
  2.86507706e+01  1.67570503e+02  7.99524197e+02  4.57405518e+03]
E1 = -182.65790534781718  E_coul = 54.378627127106846
cycle= 2 E= -128.27927822071  delta_E= -0.00169  |g|= 0.0641  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105707
diis-c [-2.21349979e-04  2.80242156e-01  7.19757844e-01]
  HOMO = -0.786868253882735  LUMO = 2.27114874644747
  mo_energy =
[-3.27550108e+01 -1.90104507e+00 -7.86868254e-01 -7.86868254e-01
 -7.86868254e-01  2.27114875e+00  2.61917270e+00  2.61917270e+00
  2.61917270e+00  1.98030514e+01  1.98030514e+01  1.98030514e+01
  2.87102813e+01  1.67648804e+02  7.99610470e+02  4.57414526e+03]
E1 = -182.52260154754734  E_coul = 54.243004543146746
cycle= 3 E= -128.279597004401  delta_E= -0.000319  |g|= 0.000514  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000695523
diis-c [-3.50056683e-08 -4.50263271e-03 -5.25142935e-03  1.00975406e+00]
  HOMO = -0.787054066702944  LUMO = 2.27101365713269
  mo_energy =
[-3.27554744e+01 -1.90125811e+00 -7.87054067e-01 -7.87054067e-01
 -7.87054067e-01  2.27101366e+00  2.61904301e+00  2.61904301e+00
  2.61904301e+00  1.98026816e+01  1.98026816e+01  1.98026816e+01
  2.87098601e+01  1.67648430e+02  7.99610243e+02  4.57414513e+03]
E1 = -182.52352381319332  E_coul = 54.24392679362487
cycle= 4 E= -128.279597019568  delta_E= -1.52e-08  |g|= 2.22e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73285e-05
diis-c [-1.38827277e-10  2.43990145e-04 -2.00365278e-04 -8.12444187e-02
  1.08120079e+00]
  HOMO = -0.78704694534499  LUMO = 2.27101536861865
  mo_energy =
[-3.27554563e+01 -1.90125510e+00 -7.87046945e-01 -7.87046945e-01
 -7.87046945e-01  2.27101537e+00  2.61904897e+00  2.61904897e+00
  2.61904897e+00  1.98026959e+01  1.98026959e+01  1.98026959e+01
  2.87098728e+01  1.67648451e+02  7.99610272e+02  4.57414516e+03]
E1 = -182.523493795715  E_coul = 54.243896776097564
cycle= 5 E= -128.279597019617  delta_E= -4.9e-11  |g|= 1.8e-06  |ddm|= 8.77e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.523493795715  E_coul = 54.243896776097564
  HOMO = -0.787046534237334  LUMO = 2.27101533064692
  mo_energy =
[-3.27554554e+01 -1.90125513e+00 -7.87046534e-01 -7.87046534e-01
 -7.87046534e-01  2.27101533e+00  2.61904935e+00  2.61904935e+00
  2.61904935e+00  1.98026966e+01  1.98026966e+01  1.98026966e+01
  2.87098734e+01  1.67648452e+02  7.99610273e+02  4.57414516e+03]
E1 = -182.52349230628488  E_coul = 54.24389528666693
Extra cycle  E= -128.279597019618  delta_E= -4.83e-13  |g|= 4.11e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.08 sec
exp = [2.43900757e+03 1.05809261e+02 4.21927114e+02 5.15934092e-01
 3.15040162e+01 1.02402203e+01 1.75518479e+00 2.77512567e+00
 1.33229648e+01 5.99945517e-01]
E = -128.27959701961794
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:19 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.00756906        1
[INPUT] 0    0    [1    /1   ]  105.809261099        1
[INPUT] 0    0    [1    /1   ]  421.927114374        1
[INPUT] 0    0    [1    /1   ]  0.515934092108       1
[INPUT] 0    0    [1    /1   ]  31.5040162321        1
[INPUT] 0    0    [1    /1   ]  10.2402202734        1
[INPUT] 0    0    [1    /1   ]  1.7551847896         1
[INPUT] 1    0    [1    /1   ]  2.77512567222        1
[INPUT] 1    0    [1    /1   ]  13.3229648446        1
[INPUT] 1    0    [1    /1   ]  0.599945517401       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.0075690552967, 1.0]], [0, [105.80926109938895, 1.0]], [0, [421.92711437368337, 1.0]], [0, [0.5159340921083513, 1.0]], [0, [31.504016232054564, 1.0]], [0, [10.240220273421087, 1.0]], [0, [1.7551847895972341, 1.0]], [1, [2.7751256722172064, 1.0]], [1, [13.322964844588586, 1.0]], [1, [0.5999455174009304, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.00756906]
bas 1, expnt(s) = [105.8092611]
bas 2, expnt(s) = [421.92711437]
bas 3, expnt(s) = [0.51593409]
bas 4, expnt(s) = [31.50401623]
bas 5, expnt(s) = [10.24022027]
bas 6, expnt(s) = [1.75518479]
bas 7, expnt(s) = [2.77512567]
bas 8, expnt(s) = [13.32296484]
bas 9, expnt(s) = [0.59994552]
CPU time:       241.38
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43900757e+03 8.76849150e+02 1.05809261e+02 8.33504186e+01
 4.21927114e+02 2.35203132e+02 5.15934092e-01 1.53801544e+00
 3.15040162e+01 3.35961465e+01 1.02402203e+01 1.44626208e+01
 1.75518479e+00 3.85262873e+00 2.77512567e+00 1.04493124e+01
 1.33229648e+01 7.42566743e+01 5.99945517e-01 1.54036683e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966900457719039
cond(S) = 77.24970587008993
E1 = -183.22908624746793  E_coul = 55.00786591568413
init E= -128.221220331784
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743020278243104  LUMO = 2.29783394865093
  mo_energy =
[-3.25525892e+01 -1.85682690e+00 -7.43020278e-01 -7.43020278e-01
 -7.43020278e-01  2.29783395e+00  2.65420960e+00  2.65420960e+00
  2.65420960e+00  1.99408091e+01  1.99408091e+01  1.99408091e+01
  2.88566579e+01  1.67859983e+02  7.99863921e+02  4.57443693e+03]
E1 = -182.18474373189753  E_coul = 53.907157449112304
cycle= 1 E= -128.277586282785  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.2692
diis-c [-0.07246885  1.        ]
  HOMO = -0.810119841797747  LUMO = 2.25359565432806
  mo_energy =
[-3.28311625e+01 -1.92509769e+00 -8.10119842e-01 -8.10119842e-01
 -8.10119842e-01  2.25359565e+00  2.59814066e+00  2.59814066e+00
  2.59814066e+00  1.97458317e+01  1.97458317e+01  1.97458317e+01
  2.86507706e+01  1.67570503e+02  7.99524197e+02  4.57405518e+03]
E1 = -182.65790534781718  E_coul = 54.378627127106846
cycle= 2 E= -128.27927822071  delta_E= -0.00169  |g|= 0.0641  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105707
diis-c [-2.21349979e-04  2.80242156e-01  7.19757844e-01]
  HOMO = -0.786868253882735  LUMO = 2.27114874644747
  mo_energy =
[-3.27550108e+01 -1.90104507e+00 -7.86868254e-01 -7.86868254e-01
 -7.86868254e-01  2.27114875e+00  2.61917270e+00  2.61917270e+00
  2.61917270e+00  1.98030514e+01  1.98030514e+01  1.98030514e+01
  2.87102813e+01  1.67648804e+02  7.99610470e+02  4.57414526e+03]
E1 = -182.52260154754734  E_coul = 54.243004543146746
cycle= 3 E= -128.279597004401  delta_E= -0.000319  |g|= 0.000514  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000695523
diis-c [-3.50056683e-08 -4.50263271e-03 -5.25142935e-03  1.00975406e+00]
  HOMO = -0.787054066702944  LUMO = 2.27101365713269
  mo_energy =
[-3.27554744e+01 -1.90125811e+00 -7.87054067e-01 -7.87054067e-01
 -7.87054067e-01  2.27101366e+00  2.61904301e+00  2.61904301e+00
  2.61904301e+00  1.98026816e+01  1.98026816e+01  1.98026816e+01
  2.87098601e+01  1.67648430e+02  7.99610243e+02  4.57414513e+03]
E1 = -182.52352381319332  E_coul = 54.24392679362487
cycle= 4 E= -128.279597019568  delta_E= -1.52e-08  |g|= 2.22e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73285e-05
diis-c [-1.38827277e-10  2.43990145e-04 -2.00365278e-04 -8.12444187e-02
  1.08120079e+00]
  HOMO = -0.78704694534499  LUMO = 2.27101536861865
  mo_energy =
[-3.27554563e+01 -1.90125510e+00 -7.87046945e-01 -7.87046945e-01
 -7.87046945e-01  2.27101537e+00  2.61904897e+00  2.61904897e+00
  2.61904897e+00  1.98026959e+01  1.98026959e+01  1.98026959e+01
  2.87098728e+01  1.67648451e+02  7.99610272e+02  4.57414516e+03]
E1 = -182.523493795715  E_coul = 54.243896776097564
cycle= 5 E= -128.279597019617  delta_E= -4.9e-11  |g|= 1.8e-06  |ddm|= 8.77e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.523493795715  E_coul = 54.243896776097564
  HOMO = -0.787046534237334  LUMO = 2.27101533064692
  mo_energy =
[-3.27554554e+01 -1.90125513e+00 -7.87046534e-01 -7.87046534e-01
 -7.87046534e-01  2.27101533e+00  2.61904935e+00  2.61904935e+00
  2.61904935e+00  1.98026966e+01  1.98026966e+01  1.98026966e+01
  2.87098734e+01  1.67648452e+02  7.99610273e+02  4.57414516e+03]
E1 = -182.52349230628488  E_coul = 54.24389528666693
Extra cycle  E= -128.279597019618  delta_E= -4.83e-13  |g|= 4.11e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.07 sec, wall time      0.07 sec
Set gradient conv threshold to 3.16228e-05
cond(S) = 77.24970587008993
E1 = -182.52349230628488  E_coul = 54.24389528666693
init E= -128.279597019618
    CPU time for initialize scf      0.05 sec, wall time      0.05 sec
  HOMO = -0.787046614824534  LUMO = 2.27101520152497
  mo_energy =
[-3.27554557e+01 -1.90125530e+00 -7.87046615e-01 -7.87046615e-01
 -7.87046615e-01  2.27101520e+00  2.61904927e+00  2.61904927e+00
  2.61904927e+00  1.98026964e+01  1.98026964e+01  1.98026964e+01
  2.87098732e+01  1.67648452e+02  7.99610273e+02  4.57414516e+03]
E1 = -182.52349294788476  E_coul = 54.24389592826678
cycle= 1 E= -128.279597019618  delta_E= -5.68e-14  |g|= 1.02e-07  |ddm|= 2.43e-07
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
E1 = -182.52349294788476  E_coul = 54.24389592826678
  HOMO = -0.787046566826737  LUMO = 2.27101522503392
  mo_energy =
[-3.27554556e+01 -1.90125527e+00 -7.87046567e-01 -7.87046567e-01
 -7.87046567e-01  2.27101523e+00  2.61904931e+00  2.61904931e+00
  2.61904931e+00  1.98026965e+01  1.98026965e+01  1.98026965e+01
  2.87098733e+01  1.67648452e+02  7.99610273e+02  4.57414516e+03]
E1 = -182.52349270134007  E_coul = 54.24389568172229
Extra cycle  E= -128.279597019618  delta_E= 2.27e-13  |g|= 3.67e-08  |ddm|= 4.04e-08
    CPU time for scf_cycle      0.09 sec, wall time      0.09 sec
exp = [2.43900757e+03 1.05809261e+02 4.21927114e+02 5.15934092e-01
 3.15040162e+01 1.02402203e+01 1.75518479e+00 2.77512567e+00
 1.33229648e+01 5.99945517e-01]
grad_E = [-1.09398636e-05 -3.25779411e-07 -3.17851977e-06  1.35122990e-06
  7.10954528e-07 -1.46725219e-06 -6.98462841e-07  2.96291014e-06
 -4.10297353e-07 -1.02172010e-05]
 message: Optimization terminated successfully
 success: True
  status: 0
     fun: -128.27959701961794
       x: [ 2.439e+03  1.058e+02  4.219e+02  5.159e-01  3.150e+01
            1.024e+01  1.755e+00  2.775e+00  1.332e+01  5.999e-01]
     nit: 78
     jac: [-1.094e-05 -3.258e-07 -3.179e-06  1.351e-06  7.110e-07
           -1.467e-06 -6.985e-07  2.963e-06 -4.103e-07 -1.022e-05]
    nfev: 88
    njev: 78
#INFO: **** input file is /Users/deyanmihaylov/Documents/Work/pyscf_basis_opt/Ne_energies.py ****
import pyscf
from pyscfad import gto, scf
import numpy as np
import re

from scipy import optimize

VERBOSITY = 9

def parse_basis_str(slug):
    numbers_and_letters = re.findall(r'[A-Za-z]+|\d+', slug)
    numbers_with_letters = [
        [int(numbers_and_letters[i]), numbers_and_letters[i+1].capitalize()]
        for i in range(0, len(numbers_and_letters), 2)
    ]
    return numbers_with_letters

def decaying_nums(n):
    return np.array([0.5 * (n - i) for i in range(n)])

def get_basis_substring(exponent, orbital):
    substring = f'''
    Ne  {orbital}
        {exponent}              1.0'''
    return substring

def get_basis_string(basis_str, exponents, exp_array=None):
    basis_set = parse_basis_str(basis_str)
    basis_nums = [num for [num, _] in basis_set]
    basis_cum_nums = np.cumsum(basis_nums)

    if exp_array is None:
        exp_array = np.zeros((exponents.size, 2))

    exp_array[np.where(exp_array[:, 1] == 0), 0] = exponents[np.where(exp_array[:, 1] == 0)]

    basis_string = ''.join([''.join([
        get_basis_substring(exp_array[i, 0], orbital) if j == 0 else
        get_basis_substring(exp_array[i + basis_cum_nums[j-1], 0], orbital)
        for i in range(num)
    ]) for j, [num, orbital] in enumerate(basis_set)])

    return basis_string

def atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}

    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    e = mf.kernel()

    print(f"exp = {exponents}")
    print(f"E = {e}")

    return e

def grad_atomic_energy(exponents, basis_str, exp_array=None):
    mol = gto.Mole()
    mol.atom = 'Ne 0 0 0'  # in Angstrom

    basis_string = get_basis_string(basis_str, exponents, exp_array)
    mol.basis = {'Ne': pyscf.gto.basis.parse(basis_string)}
    
    mol.verbose = VERBOSITY
    mol.build()

    mf = scf.RHF(mol)
    mf.kernel()
    jac = mf.energy_grad()

    print(f"exp = {exponents}")
    print(f"grad_E = {jac.exp}")

    grad_E = np.array(jac.exp)

    return grad_E

def minimize_energy(basis_str, exp_array=None):
    x0 = exp_array[:, 0]
    bnds = ((1e-9, None) for _ in range(exp_array.shape[0]))

    res = optimize.minimize(
        atomic_energy,
        x0,
        args=(basis_str, exp_array),
        method="SLSQP",
        jac=grad_atomic_energy,
        hess=None,
        hessp=None,
        bounds=bnds,
        tol=1e-9,
        callback=None,
        options={"maxfev": 10000, "ftol": 1e-9},
    )
    
    print(res)
    print(f"E = {atomic_energy(res.x, basis_str)}")
    print(f"exp = [{','.join(['{:.16e}'.format(x) for x in res.x])}]")
    
basis_sets = {}
basis_sets["4s2p"] = [4.5398395053083368e+02,6.8374215800814909e+01,1.4824528322712155e+01,9.5386069633618320e-01,5.3157298879503436e+00,8.9651820980835084e-01]
basis_sets["5s2p"] = [9.4993989429303671e-01,1.2984457744638726e+03,1.9596774133621710e+02,4.4213036846502206e+01,1.1962991572315653e+01,5.3273260527405908e+00,8.9870373821517113e-01]
basis_sets["5s3p"] = [1.2953445749613716e+03,9.4582001859477927e-01,1.9549033482445452e+02,4.4096082735534537e+01,1.1909666084068769e+01,1.3328279381532866e+01,2.7778022574311008e+00,6.0258778151146430e-01]
basis_sets["6s2p"] = [1.4479024060856398e+03,6.0284375013985525e-01,2.1823060711082172e+02,4.9087193005270791e+01,1.3225669380688197e+01,2.0236207188626363e+00,5.2845084192636911e+00,8.9148787033495847e-01]
basis_sets["6s3p"] = [2.1545844455359133e+02,1.4294610280386537e+03,5.6771737890499074e-01,4.8458597305366460e+01,1.3032833613337074e+01,1.9022406562127316e+00,2.7776042679910673e+00,1.3331913307732490e+01,6.0057470745225527e-01]

basis = "7s3p"
exps = np.zeros((10, 2))
exps[1:, 0] = basis_sets["6s3p"][:]
exps[0, 0] = 1.5 * np.max(basis_sets["6s3p"][:])

minimize_energy(basis, exps)

#INFO: ******************** input file end ********************


System: uname_result(system='Darwin', node='Deyans-MacBook-Pro-Home.local', release='22.1.0', version='Darwin Kernel Version 22.1.0: Sun Oct  9 20:14:54 PDT 2022; root:xnu-8792.41.9~2/RELEASE_X86_64', machine='x86_64', processor='i386')  Threads 1
Python 3.8.16 (default, Mar  1 2023, 21:19:10) 
[Clang 14.0.6 ]
numpy 1.24.2  scipy 1.10.1
Date: Wed Mar  8 11:39:22 2023
PySCF version 2.1.1
PySCF path  /Users/deyanmihaylov/opt/anaconda3/envs/pyscfad_env/lib/python3.8/site-packages/pyscf

[CONFIG] DEBUG = False
[CONFIG] MAX_MEMORY = 4000
[CONFIG] TMPDIR = /var/folders/v7/w4c0kx6d5bq1lvxw1rnqy7br0000gp/T/
[CONFIG] UNIT = angstrom
[CONFIG] VERBOSE = 3
[CONFIG] conf_file = /Users/deyanmihaylov/.pyscf_conf.py
[CONFIG] pyscf_numpy_backend = jax
[CONFIG] pyscf_scipy_backend = jax
[CONFIG] pyscf_scipy_linalg_backend = pyscfad
[CONFIG] pyscfad = True
[CONFIG] pyscfad_ccsd_implicit_diff = True
[CONFIG] pyscfad_scf_implicit_diff = True
[INPUT] verbose = 9
[INPUT] max_memory = 4000 
[INPUT] num. atoms = 1
[INPUT] num. electrons = 10
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = angstrom
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 Ne     0.000000000000   0.000000000000   0.000000000000 AA    0.000000000000   0.000000000000   0.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] Ne
[INPUT] 0    0    [1    /1   ]  2439.00756906        1
[INPUT] 0    0    [1    /1   ]  105.809261099        1
[INPUT] 0    0    [1    /1   ]  421.927114374        1
[INPUT] 0    0    [1    /1   ]  0.515934092108       1
[INPUT] 0    0    [1    /1   ]  31.5040162321        1
[INPUT] 0    0    [1    /1   ]  10.2402202734        1
[INPUT] 0    0    [1    /1   ]  1.7551847896         1
[INPUT] 1    0    [1    /1   ]  2.77512567222        1
[INPUT] 1    0    [1    /1   ]  13.3229648446        1
[INPUT] 1    0    [1    /1   ]  0.599945517401       1

nuclear repulsion = 0
number of shells = 10
number of NR pGTOs = 16
number of NR cGTOs = 16
basis = {'Ne': [[0, [2439.0075690552967, 1.0]], [0, [105.80926109938895, 1.0]], [0, [421.92711437368337, 1.0]], [0, [0.5159340921083513, 1.0]], [0, [31.504016232054564, 1.0]], [0, [10.240220273421087, 1.0]], [0, [1.7551847895972341, 1.0]], [1, [2.7751256722172064, 1.0]], [1, [13.322964844588586, 1.0]], [1, [0.5999455174009304, 1.0]]]}
ecp = {}
bas 0, expnt(s) = [2439.00756906]
bas 1, expnt(s) = [105.8092611]
bas 2, expnt(s) = [421.92711437]
bas 3, expnt(s) = [0.51593409]
bas 4, expnt(s) = [31.50401623]
bas 5, expnt(s) = [10.24022027]
bas 6, expnt(s) = [1.75518479]
bas 7, expnt(s) = [2.77512567]
bas 8, expnt(s) = [13.32296484]
bas 9, expnt(s) = [0.59994552]
CPU time:       244.21
arg.atm = [[10 20  1 23  0  0]]
arg.bas = [[ 0  0  1  1  0 24 25  0]
 [ 0  0  1  1  0 26 27  0]
 [ 0  0  1  1  0 28 29  0]
 [ 0  0  1  1  0 30 31  0]
 [ 0  0  1  1  0 32 33  0]
 [ 0  0  1  1  0 34 35  0]
 [ 0  0  1  1  0 36 37  0]
 [ 0  1  1  1  0 38 39  0]
 [ 0  1  1  1  0 40 41  0]
 [ 0  1  1  1  0 42 43  0]]
arg.env = [0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 0.00000000e+00 0.00000000e+00 0.00000000e+00 0.00000000e+00
 2.43900757e+03 8.76849150e+02 1.05809261e+02 8.33504186e+01
 4.21927114e+02 2.35203132e+02 5.15934092e-01 1.53801544e+00
 3.15040162e+01 3.35961465e+01 1.02402203e+01 1.44626208e+01
 1.75518479e+00 3.85262873e+00 2.77512567e+00 1.04493124e+01
 1.33229648e+01 7.42566743e+01 5.99945517e-01 1.54036683e+00]
ecpbas  = []
Set gradient conv threshold to 3.16228e-05
Nelec from initial guess = 9.966900457719039
cond(S) = 77.24970587008993
E1 = -183.22908624746793  E_coul = 55.00786591568413
init E= -128.221220331784
    CPU time for initialize scf      0.02 sec, wall time      0.02 sec
  HOMO = -0.743020278243104  LUMO = 2.29783394865093
  mo_energy =
[-3.25525892e+01 -1.85682690e+00 -7.43020278e-01 -7.43020278e-01
 -7.43020278e-01  2.29783395e+00  2.65420960e+00  2.65420960e+00
  2.65420960e+00  1.99408091e+01  1.99408091e+01  1.99408091e+01
  2.88566579e+01  1.67859983e+02  7.99863921e+02  4.57443693e+03]
E1 = -182.18474373189753  E_coul = 53.907157449112304
cycle= 1 E= -128.277586282785  delta_E= -0.0564  |g|= 0.167  |ddm|= 0.179
    CPU time for cycle= 1      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.2692
diis-c [-0.07246885  1.        ]
  HOMO = -0.810119841797747  LUMO = 2.25359565432806
  mo_energy =
[-3.28311625e+01 -1.92509769e+00 -8.10119842e-01 -8.10119842e-01
 -8.10119842e-01  2.25359565e+00  2.59814066e+00  2.59814066e+00
  2.59814066e+00  1.97458317e+01  1.97458317e+01  1.97458317e+01
  2.86507706e+01  1.67570503e+02  7.99524197e+02  4.57405518e+03]
E1 = -182.65790534781718  E_coul = 54.378627127106846
cycle= 2 E= -128.27927822071  delta_E= -0.00169  |g|= 0.0641  |ddm|= 0.0644
    CPU time for cycle= 2      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.105707
diis-c [-2.21349979e-04  2.80242156e-01  7.19757844e-01]
  HOMO = -0.786868253882735  LUMO = 2.27114874644747
  mo_energy =
[-3.27550108e+01 -1.90104507e+00 -7.86868254e-01 -7.86868254e-01
 -7.86868254e-01  2.27114875e+00  2.61917270e+00  2.61917270e+00
  2.61917270e+00  1.98030514e+01  1.98030514e+01  1.98030514e+01
  2.87102813e+01  1.67648804e+02  7.99610470e+02  4.57414526e+03]
E1 = -182.52260154754734  E_coul = 54.243004543146746
cycle= 3 E= -128.279597004401  delta_E= -0.000319  |g|= 0.000514  |ddm|= 0.0185
    CPU time for cycle= 3      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=0.000695523
diis-c [-3.50056683e-08 -4.50263271e-03 -5.25142935e-03  1.00975406e+00]
  HOMO = -0.787054066702944  LUMO = 2.27101365713269
  mo_energy =
[-3.27554744e+01 -1.90125811e+00 -7.87054067e-01 -7.87054067e-01
 -7.87054067e-01  2.27101366e+00  2.61904301e+00  2.61904301e+00
  2.61904301e+00  1.98026816e+01  1.98026816e+01  1.98026816e+01
  2.87098601e+01  1.67648430e+02  7.99610243e+02  4.57414513e+03]
E1 = -182.52352381319332  E_coul = 54.24392679362487
cycle= 4 E= -128.279597019568  delta_E= -1.52e-08  |g|= 2.22e-05  |ddm|= 0.000149
    CPU time for cycle= 4      0.01 sec, wall time      0.01 sec
diis-norm(errvec)=3.73285e-05
diis-c [-1.38827277e-10  2.43990145e-04 -2.00365278e-04 -8.12444187e-02
  1.08120079e+00]
  HOMO = -0.78704694534499  LUMO = 2.27101536861865
  mo_energy =
[-3.27554563e+01 -1.90125510e+00 -7.87046945e-01 -7.87046945e-01
 -7.87046945e-01  2.27101537e+00  2.61904897e+00  2.61904897e+00
  2.61904897e+00  1.98026959e+01  1.98026959e+01  1.98026959e+01
  2.87098728e+01  1.67648451e+02  7.99610272e+02  4.57414516e+03]
E1 = -182.523493795715  E_coul = 54.243896776097564
cycle= 5 E= -128.279597019617  delta_E= -4.9e-11  |g|= 1.8e-06  |ddm|= 8.77e-06
    CPU time for cycle= 5      0.01 sec, wall time      0.01 sec
E1 = -182.523493795715  E_coul = 54.243896776097564
  HOMO = -0.787046534237334  LUMO = 2.27101533064692
  mo_energy =
[-3.27554554e+01 -1.90125513e+00 -7.87046534e-01 -7.87046534e-01
 -7.87046534e-01  2.27101533e+00  2.61904935e+00  2.61904935e+00
  2.61904935e+00  1.98026966e+01  1.98026966e+01  1.98026966e+01
  2.87098734e+01  1.67648452e+02  7.99610273e+02  4.57414516e+03]
E1 = -182.52349230628488  E_coul = 54.24389528666693
Extra cycle  E= -128.279597019618  delta_E= -4.83e-13  |g|= 4.11e-07  |ddm|= 1.01e-06
    CPU time for scf_cycle      0.08 sec, wall time      0.09 sec
exp = [2.43900757e+03 1.05809261e+02 4.21927114e+02 5.15934092e-01
 3.15040162e+01 1.02402203e+01 1.75518479e+00 2.77512567e+00
 1.33229648e+01 5.99945517e-01]
E = -128.27959701961794
E = -128.27959701961794
exp = [2.4390075690552967e+03,1.0580926109938895e+02,4.2192711437368337e+02,5.1593409210835128e-01,3.1504016232054564e+01,1.0240220273421087e+01,1.7551847895972341e+00,2.7751256722172064e+00,1.3322964844588586e+01,5.9994551740093038e-01]
